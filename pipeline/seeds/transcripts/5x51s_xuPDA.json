{"text": " Hello everybody. I'm not hearing anybody. Is anybody hearing me? Yes, we can hear you. Cool. How are you all doing? We're doing good. It's a good day. I'm here. Hi, Marty. I think you're a new face, right? I am newer. I've been on actually all of them, but I just don't speak a whole lot. I see. Nice to see you. Thanks for joining. Thanks for having me. Getting a bit bright. Is it raining there, Jeremy? Nope. It's nice and sunny. No. It's nice and sunny. I think it's nice and sunny during winter. Nearly always. Getting my windows organized. Hi, Radek. How are you? Hey, I'm good. How about yourself? Pretty good. I read the blog post yesterday by. You know, The one about the dot operator. Yeah. Wow. What a mind bender. That was. Very cool. I guess I should share that so people can see what you're talking about. Yeah. So I read it yesterday before going to sleep and today I took another look. It will take me a few more. Attempts probably to fully like. Understand what's going on there. I probably need to play with the dot operator. Because it's a. Yeah. It is so interesting. It's like. I'm not sure what it is. How does it know? Until I finished writing the post myself. So. You know. How does it know to broadcast the. Because that's what it essentially does. I guess broke broadcasts. Here. It's just a vector, right? Yeah. I'm not sure what works to use because it's, I guess. The first thing is a. Is an. A make matrix, right? Maybe go up a level. I mean, Isaac, maybe you can give us a quick. Overview. Like maybe you share your screen or something and gives a quick picture of. What you found. And then. See if we can answer. Yeah. Because I really like the inner product. Operator in APL, because I think it's a great example of the ways in which. APL. Has a tendency to generalize things beyond the original math notation to make them. More expressive in my opinion. I think that's a good example of the way in which APL can do that. That's a. Quite quite an awesome choice. Yeah, I, I, I love that course. It's, it's, it's really good. You know, another course is great is fast.ai is a numerical linear algebra course. Oh yeah. I was. I was even thinking. I think I saw this in APL. Oh yeah. That would actually be very. For that course. Yep. So. Let's skip ahead a little bit, but talk about really what the dot does. I think this was the clear. So here we have. This matrix time, this matrix. Two five one three times. One two three four. And then you have to put the two together. And you can't use the dot by itself because it has to have functions on either side of them. But if you could use the dot by itself. This is what it would do. It would, it gives you the structure of this problem. So that it's going to. Kind of lay it out in this way. So let's say you have a matrix. And you have a function. And you can see, you know, your one, two, three, four, and your one, two, three, four. It's all multiplying it. And it's going to take these. I guess that these called double alpha and double omega. I guess I don't know. But it's going to take whatever's on the left and the right of the dot and apply those functions in this way. So I kind of think of the inner product operator is it just. It's just a matrix. And the times functions into these particular spots. So for example, Omega will often be times and double alpha will often be plus. And if you do it in that way. Then it's matrix multiplication. I could swear that yesterday, it was a different example of a matrix and a vector. I added, I added a second. Sorry about that. Yeah. I got a question. And it's the same. It's the same idea here. We do in this case, when we were doing a matrix, this matrix times the vector. We get the exact same structure of the problem. But they're all scalars because we only have one number multiplied by another. In this case, it's the double omega multiplication. So we get one times two plus two times five, one times one plus two times three. And so we get, we get it in that way. If we were to do the same thing, right. If one of these, the second one was a matrix. If instead of. You know, our one, two vector. We had a one, two, three, four matrix. Instead of this one, two being. These could be vectors, but we'd still do the same thing. This one could be a vector one, two, three, four. Which would use whatever this double omega operator is. In this case, times and multiply it by this too. So this could be a, a scalar in the, in this example, in a matrix example. It's a vector. I haven't tried it, but I suspect. Kind of as you get into more and more dimensions, it could be, you know, higher dimensional arrays as well. Oh, that's, yeah, that's crazy. Actually, you know, I think what we should do maybe today is learn about operators, because dot is not a function. It's an operator. And this is APL terminology for what in some languages we would call higher order functions. They're functions that take a function and return a function. So in Python, we don't give them a special name. You can have functions that take a function and return a function. Although there is special syntax for doing it more conveniently. And that syntax is called decorator syntax, which is where you can pop an at sign. Before the function before a decorator name and put that at the top of a function and that will cause a function to get passed in. In fact, should we look at that first, maybe that might be interesting and then talk about operators. Yeah, okay. Let's try it because I know Zach Biola did a thing about decorators the other day, which I think people found interesting. So. I guess I should do a git pull first. And while we're there, I guess we should also just talk about other things that have been happening on the forum. Actually, it's getting quite active, which is amazing. So one particularly interesting thing, which was also Isaac, is a way to create flashcards more conveniently. So if you look for anky deck generator, you will find that. By the way, these, these ugly spaces are caused by this. You're not sharing your screen. Oh, I'm not sharing my screen. Of course I'm not sharing my screen. I never remember to share my screen. There we go. Okay, let's try that again. So, alright, so this is the anky deck generator thread from Isaac. And so I think now there's what three different decks you could import, Isaac? Yes. So here's some of those examples. But there will be more. I'm going to be after after each session because I don't want to have to, you know, recreate the decks after each session. I'm going to create a new a new deck for that day. So you might not have to import that because I'm sorry if you already know this, but if you import a deck with a name of a deck you already have, then any cards you already have will not be duplicated. So, you can just keep exporting your updated deck and people can keep importing that, and it won't. And as long as you make sure you don't include scheduling information in the exported deck, then it'll work fine. Oh, even better. Do you think it would be useful for, I didn't know that, but do you think it would be useful for people who maybe aren't in the group and are either trying to catch up for going to watch this in the future to have kind of wanted each day? Not really because there'll be an order right? I mean, at most I'd say like add a tag to each card to say what session it's from. But otherwise people will just like, they'll be like oh I haven't got to this point yet. So, so stop. Yeah, so like, yeah if you just go file export in Anki, and then you choose deck package, and you choose the package, remove scheduling information, and then you say export. This is what I do for the kids. And so that will export the tech, and then when they import it, it'll say these ones already existed and these ones are new and it'll bring in the new ones. Awesome. So I was just saying earlier that Mark, that's, that's such a cognitive dissonance for me to see Jeremy use a mark. You know, I'm. Yeah, I, I've been using Windows largely since 1995. And I, before that I used quite a mixture I use Windows 3.0 3.1 3.11 for work groups but I also used Mac from like 1990 or so. But I gotta say Windows 11. It's really getting a lot worse. It's the first time like, I've really felt like it's getting worse so for the first time in my life I'm actually thinking of switching to Mac. And I actually ordered a MacBook Air M2 yesterday. So, yeah, you might have to get used to it. Yeah, I did. I mean I do like being able to write on the screen of the surface pros and stuff. But what I do instead now is I've got a Wacom tablet, which is Bluetooth, and it's actually in some ways like, it's not strictly worse than writing on a screen because I can just, you know, right. It's in front of me, where else, with a screen based approach I kind of have to move the whole thing. Yes, yes. And how are you finding the UI of a market is it easy to get used to it. It's all right I don't, I don't love it. It's like, it's definitely much worse than Windows used to be, but Windows is getting, you know, apparently everybody in the UX team in Windows or users Macs so they seem to be trying to make it more like a Mac, but of course they don't. They don't really get it right so that's the worst of both worlds. So I would say yeah I kind of like it better than Windows 11. I've realized what I really like actually is Ubuntu's default desktop environment, because that's modeled much more closely on on Windows, you know, like, yeah Windows keyboard shortcuts just so ubiquitous, for example, which I really like. And, and they are on Ubuntu as well which I think is known nowadays. I can't remember I just use whatever's there. Yeah, so there are things like for example to move a window in Mac to the other screen. You know you have to either download an extension to use a keyboard for it. Or you know like it's all very much assumes mouse stuff, and specifically a lot of things really assume track pads, you know a lot of instructions you get will say what to do on a trackpad. Anyway, that's okay. You know like I can like I can hit Ctrl left and right to jump to my different virtual desktops even if I can't move things to different virtual desktops to do it like if I want to move this to different virtual desktop I can press Ctrl up to get, oh it's on the wrong screen. Honestly works I can press Ctrl up to bring up mission control and then I can like drag it to the other desktop, which is a bit clunky but yeah. How do you figure out how the UI works like. When I, that's a great question I. It's not easy right like I. So, part of me kind of thinking maybe I'm giving up on Windows was thinking okay well maybe I should act like this literally last weekend as if you like where we're cash probably learn to use the Ubuntu desktop environment, rather than just doing everything in the terminal. So partly it's knowing like what kind of features ought to exist and what they generally get called. So, you know, things like what Mac calls mission control is generally called virtual desktops, you know so learning so. Learning how to use virtual desktop properly I just googled for you bun to virtual desktop, and then start, you know keyboard shortcuts. And, I mean, they've got some pretty decent documentation, I found, so it tells you here. So it means the windows key. So yeah Windows page up and Windows page down, which is slightly like not particularly well chosen because a lot of keyboards don't have a page up and page down keyboard on on laptops but generally on laptops if you press function up and down you get the same things this is basically Windows function up and down. And then, you know this move window to a different workspace it's you know quite good and so if you just add shift to it it moves the window. So yeah it's a case of like knowing what the things are called and that they exist then you can search for them. I haven't found a lot of good like, here's how to productively work in a graphical windowing environment into 22 kind of material that's. It probably must exist somewhere but I haven't found it. That's what defeated me when I got a marker myself I just couldn't figure out how to use it in a way that felt comfortable to me and I couldn't find the information in an easy to follow away. And I guess one observation that I have here is when when you talk to somebody who's just starting to learn to program or starting to do machine learning they always ask that question, which is the one programming language I should learn, and you know which is the one library that I should learn and people spend two weeks, trying to answer this question. You know, in reality it is just start with something, anything, ideally something that is geared towards people starting out but you know if you do hang around that field you will learn a lot of libraries, that's just the nature of it, you might have one that you prefer, but you know you will try various things out and maybe it's the same thing with operating systems, you know for part of my life I have been thinking, I have to, you know, just focus on this single operating system and making my home, and at first it was Ubuntu, then it was Windows through no small influence of Jeremy, but maybe it is sort of, yeah you know, if you are a computer user, and you will become a computer user for next X amount of years, maybe it makes sense to invest some time actually to, you know, try different things and it's also that if you probably attempt to use a Mac, you might become a better Windows user or Ubuntu desktop user, because of, yeah, yeah, absolutely. Yeah, I mean it's like using multiple programming languages I think it's a good idea. And just try to be good at each of them. Yeah, I think that's fair. Okay, I see people putting stuff in the chat. All right, well I see them in Marty I know you guys can both talk so you can actually say yes. Marty asked what Mac I got. I just got a, well, the one I'm on right now is a Mac mini M1. I just bought it a couple of months ago for testing fast AI releases, honestly. But then once I plugged it in I figured I should try using it. And then the laptop I got was just the MacBook Air M2, 512 gig drive. Just on the basis, yeah sorry, go on. I was changing topics. Sorry, I put a little link to a handy vocabulary dialogue things that I've been using over the weekend that I found helpful as well. I will share. This one. Yeah, so it kind of gives you your monadic versus didactic names, those links the documentations tells you kind of what they are too. So I found it helpful. Great. Sweet. I'm with you so I recognize. I'm not sure the double alphas and double omegas. Yeah, so we'll talk about this in a moment. And then, Wasim will also share this one. Oh, so I also use Windows for a long time and I don't now I use Mac. I don't use most of the like gestures and the way that they expect you to do things I think I just keep like one window with lots of, or one virtual desktop with lots of windows. And then I'll tab between them and use rectangle to like send windows to like the top left or the left or whatever. It's quite cool. Which I didn't immediately find but once I found it, it helped was command tab or Windows tab switches between applications, but to switch between windows within applications, it's command backtick, which is not something you would necessarily find by mistake. That's quite helpful. I'm using a Microsoft keyboard so I still have a Windows key. I'll try to remember to call it command. Yeah, I always try and have my screens maximize so I can switch between windows and terrible at sticking to that rule. Yeah. Oh, then other news. Oh, yeah, so these are ugly blank lines we have in our page caused by this, which was actually added by the APL dialogue kernel, so I contacted them and told them that they shouldn't be adding forced styling into elements because it's impossible for us to make it look good. So, then I made it worse by accidentally putting line breaks in the middle of them too. Yeah, that's why they was even bigger. Yeah. So, yeah, they're going to try and fix it if they can't then we could use MB process credit processor to delete this but he said he's going to check it out next week. So, that was nice of him. And then the other weird thing that happened was actual study group got on the front page of hacker news. So that was weird. A lot of APL stuff seems to get on the front page of a hacker news for reasons I don't understand. So, is anybody here actually from the second news thread. Mainly people I recognize I think so. Yeah, a lot of fast as they're also often gets on hack news, which is good I guess. Fine. Terrible comments, but I said people to know what we're doing. Yeah, I thought this was an interesting question of like how the hell do you actually do multi line editing. So, as that kind of link to the section of the book, which is in the GUI is basically you can use this. Close parenthesis, Ed, to open up the editor. And then something I haven't tried apparently is, you can use the input which I guess lets you put a multi line. So this does. Yeah, I don't know if that's all the only thing what it does I haven't really looked at the documentation but yeah you can copy that directly in your, I mean you don't know, because it's weird that they say we define it in the notebook. Anyway, yeah, okay. You can put that directly in the rebel and it'll, it'll work. And then the other thing I just wanted to kind of show off about is the. We have hyperlinks in our APL notebook, which goes to the documentation. And we actually get those for free. Thanks to Isaac porting this over to be an NB process repo, which is what NB devs going to be called very soon. And then, who did it somebody then added the NB dev index to it. Where would I find that. I have to search should be from the last lesson. Okay. I thought I got a great programming. Yes. Last lesson. Quite right, Serata. Thank you. So NB process slash NB dev has uses this thing called NB dev dash index, which basically creates NB dev numpy modules, such as NB dev numpy, for example, which if you pip install this basically you automatically, it will automatically hyperlink every numpy keyword to its documentation. And so NB added an APL index, which he manually created or semi manually. Just using Python requests. So yeah, so now, thanks to the magic of nicely decoupled API's, it automatically just worked. So we now have hyperlinked study notes, which I think is very fun. All right. Let's talk about operators. Oh yes, we were first going to talk about decorators. So, let's create a function. Add one. Okay, and so we're going to pass it off something to add one to. Okay, so there's our function. Now, let's create another function, which are called log arcs. This is a function which is going to take a function. And it's going to return another function and the function it returns will be one that calls this function, but prints the arguments it gets first. So to start with, let's do something really ridiculously easy, which is just to return the function is passed. So we could create something called G, which equals log arcs of add one. And so log arcs is going to be passed this function. And this return it. And so G will be exactly the same thing as add one. Makes sense so far. Okay. So, we could define a function inside a function, which is going to take some arguments and some keyword arguments. And it will simply pass them along to F. So now when I call log arcs, it's going to create a new function called underscore inner or actually called like well, yeah, we'll call it underscore inner. And that function will return F. So it depends what we pass to it. So this is going to do exactly the same thing as before. Okay. But then what we could do is say print received arcs arcs arcs So now we could do things other than just running the function. I didn't actually say G, that was my mistake. Okay. And so you can see now it's done the same thing that the function did before, but it's doing something else as well. Does that make sense so far? So this is a function which takes a function and returns a function. And so people often seem to call these higher order functions, which I find confusing or not particularly helpful because it just functions. But there you go. So there's a special way of doing this. So if I wanted to create a log version of add one, I would have to do two steps. I'd have to first create add one and then say, you know, create this new version of it and then call that new version. So Python has a special syntax for doing these two steps and that special syntax is to, whoopsie dozie, is to put at this is a special syntax. And so this syntax, when you put at and a function before the definition of a function is it's going to take the function that's called, which is defined here. It's going to pass it to this function and it's going to replace this with whatever gets returned from it. So this is exactly the same as what I did before. So if I now go add one. Make sense? So I can now add logging to any function I want to, such as my world changing Malt2 function. Does that make sense? This is slightly by the by, but something that you can do is you don't have to use a function. It just has to be something that's callable. Something that's callable is something that you can put round brackets after. So let's say we wanted to change this to with that we wanted to be able to change this this here to some other prefix. So you can do that with a function, but you can actually just do a class. We could create a basis for the class. Right. And then we could. So not many people seem to know this is possible. I put something in the this is somewhat related, but I put something in the chat that I learned something about S strings that allow you to actually shorten the string a little bit. Same thing. I found about today. This was only added in somewhat recent Python, but I don't remember which version it was. Maybe you can try and figure it out. Okay, well 3.7 is is 3.6 is a URL. So that means you can safely use this now. I had not been using it because I knew that until at least until recently. They were in supported versions that didn't support this, but yeah okay that's great that now exists. So we can use it here. And then there's a question from a live thing. I'm going to do this and then I'll take a look. Thanks. Let me know. Okay, so we should be able to do this. Oh, that's right. I was halfway through fixing this. Okay, let's try that. Okay, yep. So that works. If there's a question from somebody. I can read it out. What does the conventional starting function name underscore signify. Oh yeah. When we start a function name with an underscore. It's, it generally means it's private. It generally means it's not something we expect people to be calling from from outside of this place. In NB dev things that start with underscore by default not exported, so they don't appear in Dundall. Starting and ending with two underscores is a special Python thing which means it's what they, it's a magic method it's a magic that will automatically be called at the at some time by by Python. So for example, done to end it is automatically called when it's created. So if I was to turn this into a class. And it's. So we're going to say let's, let's say we're going to call it the prefix, which we could default to received. Like so. And so then we could go self dot prefix equals prefix. Okay, so this is now a class which knows what prefix it is. Okay. And then when you call it so if you so to explain if you have, there's a there's a very interesting magic method called done call. Which does this. Prefix. It basically makes your class callable. So if I create an instance of it. Then I can call it. But, X in here. They say I'm treating it as a function. And so when he treated class as a function, this is what it calls. So then we could use this. Instead of passing X, we're going to pass some function. And keep all that stuff. And so now rather than putting received here. We would put so.prefix. Okay, so when you call this now. As a function, you're going to pass it a function. And it's going to return a function. Which means we would now right. For example, for example, like this. Okay, so this is calling the function or the callable log which is a function. Sorry, which this is sorry, which is a class. So this instantiates the class passing in this prefix. And so. So this gets replaced with an object of this class. So if we have a look at that one. This this class then gets called being passed the function at one. And so it then gets replaced with this. And that's why we end up with a log. underscore. Anyhow, so so yeah so higher order functions are functions that take functions and return functions and Python has some tricky funds. Yes. Okay, so I just wanted to say something for people who are seeing this for the very first time decorators. So, I have a tip, the deepest to just use them anywhere. When you start thinking about these inner things, when you're first introduced to it, you would be confused, but if you just use it, you can use it on. There are a lot of days in Flask framework. So in the Python flask, there are a lot of decorators being used. And, and, and you can also see this in like Python as LRU cache, LRU cache for caching older variables. So if you just start using it then you will not be confused very much. So, always whenever you see a decorator. Don't start thinking what is going on inside just use it. So, here's the, here's the long handed way of doing this. I guess the long handed way actually would be to define would be to call this something else like underscore at one. And then this could be called at one. And so here's a version, which doesn't use decorators. But it behaves the same way. Oops, this should be underscore at one. Okay. Okay. So in APL functions that take a function and return a function aren't called functions. They're called operators. And you will find therefore if we look up the language elements. Oh, I should have looked up dialog language elements. They're separated out. Okay. There's a table of functions. And that's a table of operators. So as you can see dot, which Isaac told us about means inner product. It's an operator, because that returns a function, which does matrix model play. So I think we should start with some simpler, simpler versions. But first of all, let's play this up a little bit. Okay, so then we've got this version. Okay, and then we've got this version. And this version. And I guess we should have the manual version of this one as well. Which would be to say, define underscore at one X X plus one to define underscore two. Times two and then it's a malt two equals block args of underscore malt two. So here's the version without a decorator. And it does the same thing. Okay. So now let's look at APL. And show you everybody's favorite operator, which is slash. And this one here. Appears to be in the wrong spot. Why is I over here? Guess we didn't know where to put it maybe. Let's move it. Oh, I see why it's because we had strings. Maybe we should move strings before all that. Okay. Oh no, that's got row it out. Man, this stuff's so complicated, isn't it? Let's move it here now. Okay. Operators. Operators. Slash. So let's do slash. It's called, this is an operator. It's called slash. All right. So here is, oh, and we need to turn on our APL thing. Okay. Okay. So let's say A is out of five. I wonder if I can do this. Quad is L. Okay. Plus slash. Here's A. And here's plus slash A. Now notice here that slash is not a function. It's an operator and therefore it has different rules. The first rule to know about operators is that they bind more tightly than functions. So normally if slash was behaving as a function here, then this would happen first. But because slash can behave as an operator and there's a function on its left, this happens first. So operators bind more tightly than functions. So this is parsed as plus slash first. Okay. So then what does plus slash do? Well, slash is an operator and so therefore it returns plus slash returns a function. And what does that function do? It takes a function. So it's going to, here it is here, F slash. So it takes a function. The function has to be dyadic. And what it does is it applies the function between items of the vectors that it is parsed. And so literally what this does is it inserts the symbol plus between one and two and between two and three and between three and four and between four and five. So you get one plus two plus three plus four plus five. So therefore plus slash means sum. And here is the sum of the numbers from one to five. So this is the same as capital sigma in math. Now when you say it does it one plus two plus three plus four plus five but isn't the order from right to left? It is. Or how does that work? It is. Yep. So it inserts it in between these pairs. So it becomes one plus two plus three plus four plus five. And then to evaluate it, it would do this first, four plus five and then this three plus nine. Okay. This two plus 12. Yep. So we could do the same thing with times. And this is now the same as capital pi in math. It's the product. So yeah, this is called a reduction in computer science. Reduction is something that basically reduces the number of dimensions. Not necessarily down to a scalar, but if you start with a vector or reduce it down to a scalar, as is happening here. And there's a very similar one, which does exactly the same thing. But it shows you everything that it does along the way from left to right. So, so now that I think about this backslash version I wonder if maybe it doesn't work the way I just said it to Tanishq. Maybe it always maybe slash is doing it left to right as well. The left to right thing is about how it parses a statement like this or an expression. But I guess evaluating a reduction. Maybe it is actually evaluating left to right. I mean, neither of these cases doesn't matter. Hey, let's test. Let's do divide. Bit of a weird one, but why not? Let's just make it three. Oh, whoops. That's strange. Thank you. Let's see one divided by two is a half and a half divided by three. Okay, no, it is doing right to left. So two divided by three is two thirds. And then the reciprocal of that is one. Okay, so it's definitely going right to left. So backslash must just reverse the order as well. Oh, wait, what? What is that three divided by two and then divided by one? To get one point five. It's doing two divided by three to get two over three and then one divided by that to get three over two. Because this is the same as one divided by two divided by three. The same as one divided by two divided by three, which is the same as one divided by two divided by three. Okay, so I guess backslash is not quite working in either of the ways I thought. I think what it's doing is it's printing out I need all these spaces. I think it's just printing out each of these. It's doing that. It's kind of like a cumulative function. It's kind of cumulative but it's not right, because this last one actually is doing it right to left. It's not really cumulative at all. So I think it is doing every line. So, every two numbers and one more and they print it. Yeah, it's doing every line independently. So it's not necessarily going to be as efficient as I thought. So we could see that hopefully in the docs. Okay. So, scan, which is a common computer science term for this idea. It's formed by successive reductions. It doesn't really explain exactly how it's done it, but we can see from the divide example how it must be doing it. There's this reduce thing happening. But I also recall from functional programming, reduce with memo. Is there such a thing? Memoization? No, like when you start with an initial value. Oh, with an initial value. So, there's not really any need for that here because you can always just insert the initial value. That's the first element, right? Yeah. I think we haven't covered this yet, but I think we might be able to use like comma for that. Yeah, so comma concatenates. So you could always just put like comma with your first value here. Thank you. All right. One way I've seen these reduce work as well is if you combine it with equals or eventually like min or max or whatever, you can kind of look for either the minimum or the maximum or see if the entire array is not a unique value. We actually haven't done min and max yet, but I think that's a great idea to put them before this. So, min and max. And are they going to have monadic versions? They do actually, I'm pretty sure. Okay, so I never really remember which way around there, but there's S and there's D. So S is this one, and it's called something style, up style. Yep, up style. Okay. So up style. Okay, so the monadic version is slightly less relevant. It's called ceiling. So that's just a roundup thing. Yep. Just a roundup thing. So it's normally called ceiling and floor in both programming languages. It's finding the nearest integer that's greater than or equal to the number. And D, I assume is called down style. And therefore this one is going to be called floor, I assume. And so there's a good, you know, kind of mnemonic for these, right? This is, you can see this is going up to the ceiling, this is going down to the floor. So you can see this one's being rounded down to the nearest integer. Okay, so apropos of Isaac's point, the dyadic ones are interesting when we reduce them, because dyadic, they're called min and max, yep, maximum. Returns the greater than of two things. Now notice here that even though I don't have a space, this is the list, the array three two, maximum, the array two three. So that'll be element wise, always element wise. That's the maximum of three and two will be the first element. And the maximum of two and three will be the second element. And then yeah, where it gets pretty interesting is what if we create a random number here, something like that. Actually, let's just do a few of them. Four, six, two. Four, six, two. So that's going to pass it first of all as maximum of six and two, which is six, and then maximum of six and four, which is six. And so where that gets interesting is we can then reduce slash, like so, reduce slash, and get the same thing. Does that make sense? Because that's literally going to insert the operator between each pair of elements. So that is the same as that. Does that make sense? So I think that's really quite great. Another thing that I found helpful with the up-to-down style is you can do like four and then one of the styles in an array, and it will kind of set your own custom minimal or maximum value, kind of a cut off an array. Right, right, right. So we could do a four style, three, four, five. We could do a value operator, right? So we could do, yeah, let's do that. Okay, so let's do negative four. Negative four, six, two. And so then we could do that. And that's going to do a value operator because it's truncating negative to zero. Is that what you meant, Isaac? Yeah, that's exactly what I meant. Excellent. One glyph activation. Yes, exactly. Just how rarely should be expressed there. There's actually a paper I found somewhere, which was APL, and then convolutional neural. I think they actually have a GitHub repository with their code as well. Didn't make all that sense to me, but hopefully one day it will. Yeah, yeah. This is all of the from scratch implementations of layers of a confnet, or at least the types that were common in 2019. Just need backwards. I think backwards is here. And so for convolutions, they actually had this version here, although when I read a bit further, they said that there are, there's an easier way to do convolutions. CNN building blocks convolution. This is, they said you can do something like this apparently. Anyway, I guess we'll get there. I'll put this in the chat if anybody wants to add it to our session notes. Chat, chat, chat. Where's my chat button? Oh, I've got it popped out. Oh, and I can put the link in the GitHub repository if you want to look at it. Great. More of their code too. Oh, and Kurian mentioned that the, that the little, that f string trick with equals in it is actually only from Python 3.8. So, probably best not to use it just yet. Or a choice. I see. CNN. Aero networks. And this is the Rodrigo who I was chatting to about dialogue kernel. Very cool. Actually, I'm looking at that. And we realized that we covered the lamp. Yeah. I don't think so. Wouldn't be a bad thing to include quite early on because otherwise it's just going to be confusing, isn't it? Fix. Just get this sorted out. So, in terms of getting the D and the S, the minimum, the maximum, the right way around, the fact that this is D for down style is actually quite helpful. That's a character for that one. Wait, what happened to the. Oh, this value thing. Okay, we've got it in the wrong spot because this is not a slash. So I should put this up here. Okay. So, what character what what keyboard is the comment lamp thing. The back to comma. This is a comment. Comment. Great. All right. Seems like a good place to stop. So, we now know about operators and I guess maybe next time we can try making our own operators. We'll try doing a derivative operator. Which means we're going to have to do alpha, alpha and omega, omega. Cool. Cool. All right. Thanks. Thank you. Bye.", "segments": [{"id": 0, "seek": 3000, "start": 30.0, "end": 37.0, "text": " Hello everybody.", "tokens": [2425, 2201, 13], "temperature": 0.0, "avg_logprob": -0.5433085470488577, "compression_ratio": 1.1948051948051948, "no_speech_prob": 0.09942320734262466}, {"id": 1, "seek": 3000, "start": 37.0, "end": 40.0, "text": " I'm not hearing anybody. Is anybody hearing me?", "tokens": [286, 478, 406, 4763, 4472, 13, 1119, 4472, 4763, 385, 30], "temperature": 0.0, "avg_logprob": -0.5433085470488577, "compression_ratio": 1.1948051948051948, "no_speech_prob": 0.09942320734262466}, {"id": 2, "seek": 3000, "start": 40.0, "end": 43.0, "text": " Yes, we can hear you.", "tokens": [1079, 11, 321, 393, 1568, 291, 13], "temperature": 0.0, "avg_logprob": -0.5433085470488577, "compression_ratio": 1.1948051948051948, "no_speech_prob": 0.09942320734262466}, {"id": 3, "seek": 3000, "start": 43.0, "end": 48.0, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.5433085470488577, "compression_ratio": 1.1948051948051948, "no_speech_prob": 0.09942320734262466}, {"id": 4, "seek": 4800, "start": 48.0, "end": 61.0, "text": " How are you all doing?", "tokens": [1012, 366, 291, 439, 884, 30], "temperature": 0.0, "avg_logprob": -0.3240276862835062, "compression_ratio": 1.0151515151515151, "no_speech_prob": 0.00032832048600539565}, {"id": 5, "seek": 4800, "start": 61.0, "end": 68.0, "text": " We're doing good. It's a good day.", "tokens": [492, 434, 884, 665, 13, 467, 311, 257, 665, 786, 13], "temperature": 0.0, "avg_logprob": -0.3240276862835062, "compression_ratio": 1.0151515151515151, "no_speech_prob": 0.00032832048600539565}, {"id": 6, "seek": 4800, "start": 68.0, "end": 70.0, "text": " I'm here.", "tokens": [286, 478, 510, 13], "temperature": 0.0, "avg_logprob": -0.3240276862835062, "compression_ratio": 1.0151515151515151, "no_speech_prob": 0.00032832048600539565}, {"id": 7, "seek": 7000, "start": 70.0, "end": 79.0, "text": " Hi, Marty.", "tokens": [2421, 11, 29192, 13], "temperature": 0.0, "avg_logprob": -0.2949998340909443, "compression_ratio": 1.2391304347826086, "no_speech_prob": 0.0003614306915551424}, {"id": 8, "seek": 7000, "start": 79.0, "end": 82.0, "text": " I think you're a new face, right?", "tokens": [286, 519, 291, 434, 257, 777, 1851, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2949998340909443, "compression_ratio": 1.2391304347826086, "no_speech_prob": 0.0003614306915551424}, {"id": 9, "seek": 7000, "start": 82.0, "end": 87.0, "text": " I am newer.", "tokens": [286, 669, 17628, 13], "temperature": 0.0, "avg_logprob": -0.2949998340909443, "compression_ratio": 1.2391304347826086, "no_speech_prob": 0.0003614306915551424}, {"id": 10, "seek": 7000, "start": 87.0, "end": 92.0, "text": " I've been on actually all of them, but I just don't speak a whole lot.", "tokens": [286, 600, 668, 322, 767, 439, 295, 552, 11, 457, 286, 445, 500, 380, 1710, 257, 1379, 688, 13], "temperature": 0.0, "avg_logprob": -0.2949998340909443, "compression_ratio": 1.2391304347826086, "no_speech_prob": 0.0003614306915551424}, {"id": 11, "seek": 7000, "start": 92.0, "end": 94.0, "text": " I see. Nice to see you.", "tokens": [286, 536, 13, 5490, 281, 536, 291, 13], "temperature": 0.0, "avg_logprob": -0.2949998340909443, "compression_ratio": 1.2391304347826086, "no_speech_prob": 0.0003614306915551424}, {"id": 12, "seek": 7000, "start": 94.0, "end": 95.0, "text": " Thanks for joining.", "tokens": [2561, 337, 5549, 13], "temperature": 0.0, "avg_logprob": -0.2949998340909443, "compression_ratio": 1.2391304347826086, "no_speech_prob": 0.0003614306915551424}, {"id": 13, "seek": 9500, "start": 95.0, "end": 104.0, "text": " Thanks for having me.", "tokens": [2561, 337, 1419, 385, 13], "temperature": 0.0, "avg_logprob": -0.3126860643044496, "compression_ratio": 1.0729166666666667, "no_speech_prob": 3.1674979254603386e-05}, {"id": 14, "seek": 9500, "start": 104.0, "end": 113.0, "text": " Getting a bit bright.", "tokens": [13674, 257, 857, 4730, 13], "temperature": 0.0, "avg_logprob": -0.3126860643044496, "compression_ratio": 1.0729166666666667, "no_speech_prob": 3.1674979254603386e-05}, {"id": 15, "seek": 9500, "start": 113.0, "end": 115.0, "text": " Is it raining there, Jeremy?", "tokens": [1119, 309, 18441, 456, 11, 17809, 30], "temperature": 0.0, "avg_logprob": -0.3126860643044496, "compression_ratio": 1.0729166666666667, "no_speech_prob": 3.1674979254603386e-05}, {"id": 16, "seek": 9500, "start": 115.0, "end": 117.0, "text": " Nope. It's nice and sunny.", "tokens": [12172, 13, 467, 311, 1481, 293, 20412, 13], "temperature": 0.0, "avg_logprob": -0.3126860643044496, "compression_ratio": 1.0729166666666667, "no_speech_prob": 3.1674979254603386e-05}, {"id": 17, "seek": 9500, "start": 117.0, "end": 122.0, "text": " No.", "tokens": [883, 13], "temperature": 0.0, "avg_logprob": -0.3126860643044496, "compression_ratio": 1.0729166666666667, "no_speech_prob": 3.1674979254603386e-05}, {"id": 18, "seek": 12200, "start": 122.0, "end": 126.0, "text": " It's nice and sunny.", "tokens": [467, 311, 1481, 293, 20412, 13], "temperature": 0.4, "avg_logprob": -0.9965341356065538, "compression_ratio": 1.1142857142857143, "no_speech_prob": 0.00011033218470402062}, {"id": 19, "seek": 12200, "start": 126.0, "end": 132.0, "text": " I think it's nice and sunny during winter.", "tokens": [286, 519, 309, 311, 1481, 293, 20412, 1830, 6355, 13], "temperature": 0.4, "avg_logprob": -0.9965341356065538, "compression_ratio": 1.1142857142857143, "no_speech_prob": 0.00011033218470402062}, {"id": 20, "seek": 12200, "start": 132.0, "end": 141.0, "text": " Nearly always.", "tokens": [38000, 1009, 13], "temperature": 0.4, "avg_logprob": -0.9965341356065538, "compression_ratio": 1.1142857142857143, "no_speech_prob": 0.00011033218470402062}, {"id": 21, "seek": 14100, "start": 141.0, "end": 157.0, "text": " Getting my windows organized.", "tokens": [13674, 452, 9309, 9983, 13], "temperature": 0.0, "avg_logprob": -0.18365455928601718, "compression_ratio": 1.086021505376344, "no_speech_prob": 6.483560719061643e-05}, {"id": 22, "seek": 14100, "start": 157.0, "end": 160.0, "text": " Hi, Radek. How are you?", "tokens": [2421, 11, 497, 762, 74, 13, 1012, 366, 291, 30], "temperature": 0.0, "avg_logprob": -0.18365455928601718, "compression_ratio": 1.086021505376344, "no_speech_prob": 6.483560719061643e-05}, {"id": 23, "seek": 14100, "start": 160.0, "end": 163.0, "text": " Hey, I'm good. How about yourself?", "tokens": [1911, 11, 286, 478, 665, 13, 1012, 466, 1803, 30], "temperature": 0.0, "avg_logprob": -0.18365455928601718, "compression_ratio": 1.086021505376344, "no_speech_prob": 6.483560719061643e-05}, {"id": 24, "seek": 14100, "start": 163.0, "end": 166.0, "text": " Pretty good.", "tokens": [10693, 665, 13], "temperature": 0.0, "avg_logprob": -0.18365455928601718, "compression_ratio": 1.086021505376344, "no_speech_prob": 6.483560719061643e-05}, {"id": 25, "seek": 16600, "start": 166.0, "end": 171.0, "text": " I read the blog post yesterday by.", "tokens": [286, 1401, 264, 6968, 2183, 5186, 538, 13], "temperature": 0.0, "avg_logprob": -0.29639774210312786, "compression_ratio": 1.3581081081081081, "no_speech_prob": 6.002430018270388e-05}, {"id": 26, "seek": 16600, "start": 171.0, "end": 172.0, "text": " You know,", "tokens": [509, 458, 11], "temperature": 0.0, "avg_logprob": -0.29639774210312786, "compression_ratio": 1.3581081081081081, "no_speech_prob": 6.002430018270388e-05}, {"id": 27, "seek": 16600, "start": 172.0, "end": 175.0, "text": " The one about the dot operator.", "tokens": [440, 472, 466, 264, 5893, 12973, 13], "temperature": 0.0, "avg_logprob": -0.29639774210312786, "compression_ratio": 1.3581081081081081, "no_speech_prob": 6.002430018270388e-05}, {"id": 28, "seek": 16600, "start": 175.0, "end": 176.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.29639774210312786, "compression_ratio": 1.3581081081081081, "no_speech_prob": 6.002430018270388e-05}, {"id": 29, "seek": 16600, "start": 176.0, "end": 178.0, "text": " Wow. What a mind bender.", "tokens": [3153, 13, 708, 257, 1575, 272, 3216, 13], "temperature": 0.0, "avg_logprob": -0.29639774210312786, "compression_ratio": 1.3581081081081081, "no_speech_prob": 6.002430018270388e-05}, {"id": 30, "seek": 16600, "start": 178.0, "end": 183.0, "text": " That was.", "tokens": [663, 390, 13], "temperature": 0.0, "avg_logprob": -0.29639774210312786, "compression_ratio": 1.3581081081081081, "no_speech_prob": 6.002430018270388e-05}, {"id": 31, "seek": 16600, "start": 183.0, "end": 184.0, "text": " Very cool.", "tokens": [4372, 1627, 13], "temperature": 0.0, "avg_logprob": -0.29639774210312786, "compression_ratio": 1.3581081081081081, "no_speech_prob": 6.002430018270388e-05}, {"id": 32, "seek": 16600, "start": 184.0, "end": 189.0, "text": " I guess I should share that so people can see what you're talking about.", "tokens": [286, 2041, 286, 820, 2073, 300, 370, 561, 393, 536, 437, 291, 434, 1417, 466, 13], "temperature": 0.0, "avg_logprob": -0.29639774210312786, "compression_ratio": 1.3581081081081081, "no_speech_prob": 6.002430018270388e-05}, {"id": 33, "seek": 18900, "start": 189.0, "end": 197.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.22615261292189695, "compression_ratio": 1.4946236559139785, "no_speech_prob": 2.011908873100765e-05}, {"id": 34, "seek": 18900, "start": 197.0, "end": 201.0, "text": " So I read it yesterday before going to sleep and today I took another", "tokens": [407, 286, 1401, 309, 5186, 949, 516, 281, 2817, 293, 965, 286, 1890, 1071], "temperature": 0.0, "avg_logprob": -0.22615261292189695, "compression_ratio": 1.4946236559139785, "no_speech_prob": 2.011908873100765e-05}, {"id": 35, "seek": 18900, "start": 201.0, "end": 202.0, "text": " look.", "tokens": [574, 13], "temperature": 0.0, "avg_logprob": -0.22615261292189695, "compression_ratio": 1.4946236559139785, "no_speech_prob": 2.011908873100765e-05}, {"id": 36, "seek": 18900, "start": 202.0, "end": 204.0, "text": " It will take me a few more.", "tokens": [467, 486, 747, 385, 257, 1326, 544, 13], "temperature": 0.0, "avg_logprob": -0.22615261292189695, "compression_ratio": 1.4946236559139785, "no_speech_prob": 2.011908873100765e-05}, {"id": 37, "seek": 18900, "start": 204.0, "end": 207.0, "text": " Attempts probably to fully like.", "tokens": [7298, 4543, 82, 1391, 281, 4498, 411, 13], "temperature": 0.0, "avg_logprob": -0.22615261292189695, "compression_ratio": 1.4946236559139785, "no_speech_prob": 2.011908873100765e-05}, {"id": 38, "seek": 18900, "start": 207.0, "end": 210.0, "text": " Understand what's going on there. I probably need to play with the dot", "tokens": [26093, 437, 311, 516, 322, 456, 13, 286, 1391, 643, 281, 862, 365, 264, 5893], "temperature": 0.0, "avg_logprob": -0.22615261292189695, "compression_ratio": 1.4946236559139785, "no_speech_prob": 2.011908873100765e-05}, {"id": 39, "seek": 18900, "start": 210.0, "end": 211.0, "text": " operator.", "tokens": [12973, 13], "temperature": 0.0, "avg_logprob": -0.22615261292189695, "compression_ratio": 1.4946236559139785, "no_speech_prob": 2.011908873100765e-05}, {"id": 40, "seek": 18900, "start": 211.0, "end": 212.0, "text": " Because it's a.", "tokens": [1436, 309, 311, 257, 13], "temperature": 0.0, "avg_logprob": -0.22615261292189695, "compression_ratio": 1.4946236559139785, "no_speech_prob": 2.011908873100765e-05}, {"id": 41, "seek": 18900, "start": 212.0, "end": 213.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.22615261292189695, "compression_ratio": 1.4946236559139785, "no_speech_prob": 2.011908873100765e-05}, {"id": 42, "seek": 18900, "start": 213.0, "end": 215.0, "text": " It is so interesting. It's like.", "tokens": [467, 307, 370, 1880, 13, 467, 311, 411, 13], "temperature": 0.0, "avg_logprob": -0.22615261292189695, "compression_ratio": 1.4946236559139785, "no_speech_prob": 2.011908873100765e-05}, {"id": 43, "seek": 21500, "start": 215.0, "end": 219.0, "text": " I'm not sure what it is.", "tokens": [286, 478, 406, 988, 437, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.43555606939853764, "compression_ratio": 1.45625, "no_speech_prob": 3.2179566915147007e-05}, {"id": 44, "seek": 21500, "start": 219.0, "end": 223.0, "text": " How does it know?", "tokens": [1012, 775, 309, 458, 30], "temperature": 0.0, "avg_logprob": -0.43555606939853764, "compression_ratio": 1.45625, "no_speech_prob": 3.2179566915147007e-05}, {"id": 45, "seek": 21500, "start": 223.0, "end": 226.0, "text": " Until I finished writing the post myself. So.", "tokens": [9088, 286, 4335, 3579, 264, 2183, 2059, 13, 407, 13], "temperature": 0.0, "avg_logprob": -0.43555606939853764, "compression_ratio": 1.45625, "no_speech_prob": 3.2179566915147007e-05}, {"id": 46, "seek": 21500, "start": 226.0, "end": 230.0, "text": " You know.", "tokens": [509, 458, 13], "temperature": 0.0, "avg_logprob": -0.43555606939853764, "compression_ratio": 1.45625, "no_speech_prob": 3.2179566915147007e-05}, {"id": 47, "seek": 21500, "start": 230.0, "end": 233.0, "text": " How does it know to broadcast the.", "tokens": [1012, 775, 309, 458, 281, 9975, 264, 13], "temperature": 0.0, "avg_logprob": -0.43555606939853764, "compression_ratio": 1.45625, "no_speech_prob": 3.2179566915147007e-05}, {"id": 48, "seek": 21500, "start": 233.0, "end": 235.0, "text": " Because that's what it essentially does.", "tokens": [1436, 300, 311, 437, 309, 4476, 775, 13], "temperature": 0.0, "avg_logprob": -0.43555606939853764, "compression_ratio": 1.45625, "no_speech_prob": 3.2179566915147007e-05}, {"id": 49, "seek": 21500, "start": 235.0, "end": 237.0, "text": " I guess broke broadcasts.", "tokens": [286, 2041, 6902, 9975, 82, 13], "temperature": 0.0, "avg_logprob": -0.43555606939853764, "compression_ratio": 1.45625, "no_speech_prob": 3.2179566915147007e-05}, {"id": 50, "seek": 21500, "start": 237.0, "end": 239.0, "text": " Here.", "tokens": [1692, 13], "temperature": 0.0, "avg_logprob": -0.43555606939853764, "compression_ratio": 1.45625, "no_speech_prob": 3.2179566915147007e-05}, {"id": 51, "seek": 21500, "start": 239.0, "end": 240.0, "text": " It's just a vector, right?", "tokens": [467, 311, 445, 257, 8062, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.43555606939853764, "compression_ratio": 1.45625, "no_speech_prob": 3.2179566915147007e-05}, {"id": 52, "seek": 24000, "start": 240.0, "end": 245.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 53, "seek": 24000, "start": 245.0, "end": 248.0, "text": " I'm not sure what works to use because it's, I guess.", "tokens": [286, 478, 406, 988, 437, 1985, 281, 764, 570, 309, 311, 11, 286, 2041, 13], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 54, "seek": 24000, "start": 248.0, "end": 249.0, "text": " The first thing is a.", "tokens": [440, 700, 551, 307, 257, 13], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 55, "seek": 24000, "start": 249.0, "end": 251.0, "text": " Is an.", "tokens": [1119, 364, 13], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 56, "seek": 24000, "start": 251.0, "end": 253.0, "text": " A make matrix, right?", "tokens": [316, 652, 8141, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 57, "seek": 24000, "start": 253.0, "end": 255.0, "text": " Maybe go up a level.", "tokens": [2704, 352, 493, 257, 1496, 13], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 58, "seek": 24000, "start": 255.0, "end": 257.0, "text": " I mean, Isaac, maybe you can give us a quick.", "tokens": [286, 914, 11, 22505, 11, 1310, 291, 393, 976, 505, 257, 1702, 13], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 59, "seek": 24000, "start": 257.0, "end": 259.0, "text": " Overview.", "tokens": [4886, 1759, 13], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 60, "seek": 24000, "start": 259.0, "end": 262.0, "text": " Like maybe you share your screen or something and gives a quick picture of.", "tokens": [1743, 1310, 291, 2073, 428, 2568, 420, 746, 293, 2709, 257, 1702, 3036, 295, 13], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 61, "seek": 24000, "start": 262.0, "end": 263.0, "text": " What you found.", "tokens": [708, 291, 1352, 13], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 62, "seek": 24000, "start": 263.0, "end": 264.0, "text": " And then.", "tokens": [400, 550, 13], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 63, "seek": 24000, "start": 264.0, "end": 266.0, "text": " See if we can answer.", "tokens": [3008, 498, 321, 393, 1867, 13], "temperature": 0.0, "avg_logprob": -0.25802893108791775, "compression_ratio": 1.460093896713615, "no_speech_prob": 1.4060108696867246e-05}, {"id": 64, "seek": 26600, "start": 266.0, "end": 271.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.22271574047249806, "compression_ratio": 1.3828571428571428, "no_speech_prob": 5.3895197197562084e-05}, {"id": 65, "seek": 26600, "start": 271.0, "end": 273.0, "text": " Because I really like the inner product.", "tokens": [1436, 286, 534, 411, 264, 7284, 1674, 13], "temperature": 0.0, "avg_logprob": -0.22271574047249806, "compression_ratio": 1.3828571428571428, "no_speech_prob": 5.3895197197562084e-05}, {"id": 66, "seek": 26600, "start": 273.0, "end": 278.0, "text": " Operator in APL, because I think it's a great example of the ways in which.", "tokens": [12480, 1639, 294, 5372, 43, 11, 570, 286, 519, 309, 311, 257, 869, 1365, 295, 264, 2098, 294, 597, 13], "temperature": 0.0, "avg_logprob": -0.22271574047249806, "compression_ratio": 1.3828571428571428, "no_speech_prob": 5.3895197197562084e-05}, {"id": 67, "seek": 26600, "start": 278.0, "end": 282.0, "text": " APL.", "tokens": [5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.22271574047249806, "compression_ratio": 1.3828571428571428, "no_speech_prob": 5.3895197197562084e-05}, {"id": 68, "seek": 26600, "start": 282.0, "end": 285.0, "text": " Has a tendency to generalize things beyond the original math notation to", "tokens": [8646, 257, 18187, 281, 2674, 1125, 721, 4399, 264, 3380, 5221, 24657, 281], "temperature": 0.0, "avg_logprob": -0.22271574047249806, "compression_ratio": 1.3828571428571428, "no_speech_prob": 5.3895197197562084e-05}, {"id": 69, "seek": 26600, "start": 285.0, "end": 286.0, "text": " make them.", "tokens": [652, 552, 13], "temperature": 0.0, "avg_logprob": -0.22271574047249806, "compression_ratio": 1.3828571428571428, "no_speech_prob": 5.3895197197562084e-05}, {"id": 70, "seek": 26600, "start": 286.0, "end": 295.0, "text": " More expressive in my opinion.", "tokens": [5048, 40189, 294, 452, 4800, 13], "temperature": 0.0, "avg_logprob": -0.22271574047249806, "compression_ratio": 1.3828571428571428, "no_speech_prob": 5.3895197197562084e-05}, {"id": 71, "seek": 29500, "start": 295.0, "end": 298.0, "text": " I think that's a good example of the way in which APL can do that.", "tokens": [286, 519, 300, 311, 257, 665, 1365, 295, 264, 636, 294, 597, 5372, 43, 393, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.47640326471612005, "compression_ratio": 1.5372340425531914, "no_speech_prob": 3.425321847316809e-05}, {"id": 72, "seek": 29500, "start": 298.0, "end": 299.0, "text": " That's a.", "tokens": [663, 311, 257, 13], "temperature": 0.0, "avg_logprob": -0.47640326471612005, "compression_ratio": 1.5372340425531914, "no_speech_prob": 3.425321847316809e-05}, {"id": 73, "seek": 29500, "start": 299.0, "end": 302.0, "text": " Quite quite an awesome choice.", "tokens": [20464, 1596, 364, 3476, 3922, 13], "temperature": 0.0, "avg_logprob": -0.47640326471612005, "compression_ratio": 1.5372340425531914, "no_speech_prob": 3.425321847316809e-05}, {"id": 74, "seek": 29500, "start": 302.0, "end": 306.0, "text": " Yeah, I, I, I love that course.", "tokens": [865, 11, 286, 11, 286, 11, 286, 959, 300, 1164, 13], "temperature": 0.0, "avg_logprob": -0.47640326471612005, "compression_ratio": 1.5372340425531914, "no_speech_prob": 3.425321847316809e-05}, {"id": 75, "seek": 29500, "start": 306.0, "end": 313.0, "text": " It's, it's, it's really good.", "tokens": [467, 311, 11, 309, 311, 11, 309, 311, 534, 665, 13], "temperature": 0.0, "avg_logprob": -0.47640326471612005, "compression_ratio": 1.5372340425531914, "no_speech_prob": 3.425321847316809e-05}, {"id": 76, "seek": 29500, "start": 313.0, "end": 316.0, "text": " You know, another course is great is fast.ai is a numerical linear", "tokens": [509, 458, 11, 1071, 1164, 307, 869, 307, 2370, 13, 1301, 307, 257, 29054, 8213], "temperature": 0.0, "avg_logprob": -0.47640326471612005, "compression_ratio": 1.5372340425531914, "no_speech_prob": 3.425321847316809e-05}, {"id": 77, "seek": 29500, "start": 316.0, "end": 317.0, "text": " algebra course.", "tokens": [21989, 1164, 13], "temperature": 0.0, "avg_logprob": -0.47640326471612005, "compression_ratio": 1.5372340425531914, "no_speech_prob": 3.425321847316809e-05}, {"id": 78, "seek": 29500, "start": 317.0, "end": 318.0, "text": " Oh yeah.", "tokens": [876, 1338, 13], "temperature": 0.0, "avg_logprob": -0.47640326471612005, "compression_ratio": 1.5372340425531914, "no_speech_prob": 3.425321847316809e-05}, {"id": 79, "seek": 29500, "start": 318.0, "end": 320.0, "text": " I was.", "tokens": [286, 390, 13], "temperature": 0.0, "avg_logprob": -0.47640326471612005, "compression_ratio": 1.5372340425531914, "no_speech_prob": 3.425321847316809e-05}, {"id": 80, "seek": 29500, "start": 320.0, "end": 322.0, "text": " I was even thinking.", "tokens": [286, 390, 754, 1953, 13], "temperature": 0.0, "avg_logprob": -0.47640326471612005, "compression_ratio": 1.5372340425531914, "no_speech_prob": 3.425321847316809e-05}, {"id": 81, "seek": 32200, "start": 322.0, "end": 325.0, "text": " I think I saw this in APL.", "tokens": [286, 519, 286, 1866, 341, 294, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 82, "seek": 32200, "start": 325.0, "end": 326.0, "text": " Oh yeah.", "tokens": [876, 1338, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 83, "seek": 32200, "start": 326.0, "end": 327.0, "text": " That would actually be very.", "tokens": [663, 576, 767, 312, 588, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 84, "seek": 32200, "start": 327.0, "end": 328.0, "text": " For that course.", "tokens": [1171, 300, 1164, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 85, "seek": 32200, "start": 328.0, "end": 331.0, "text": " Yep.", "tokens": [7010, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 86, "seek": 32200, "start": 331.0, "end": 333.0, "text": " So.", "tokens": [407, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 87, "seek": 32200, "start": 333.0, "end": 341.0, "text": " Let's skip ahead a little bit, but talk about really what the dot does.", "tokens": [961, 311, 10023, 2286, 257, 707, 857, 11, 457, 751, 466, 534, 437, 264, 5893, 775, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 88, "seek": 32200, "start": 341.0, "end": 343.0, "text": " I think this was the clear.", "tokens": [286, 519, 341, 390, 264, 1850, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 89, "seek": 32200, "start": 343.0, "end": 345.0, "text": " So here we have.", "tokens": [407, 510, 321, 362, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 90, "seek": 32200, "start": 345.0, "end": 347.0, "text": " This matrix time, this matrix.", "tokens": [639, 8141, 565, 11, 341, 8141, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 91, "seek": 32200, "start": 347.0, "end": 349.0, "text": " Two five one three times.", "tokens": [4453, 1732, 472, 1045, 1413, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 92, "seek": 32200, "start": 349.0, "end": 351.0, "text": " One two three four.", "tokens": [1485, 732, 1045, 1451, 13], "temperature": 0.0, "avg_logprob": -0.3623590180368135, "compression_ratio": 1.486910994764398, "no_speech_prob": 1.6959742424660362e-05}, {"id": 93, "seek": 35100, "start": 351.0, "end": 354.0, "text": " And then you have to put the two together.", "tokens": [400, 550, 291, 362, 281, 829, 264, 732, 1214, 13], "temperature": 0.0, "avg_logprob": -0.28421941716620264, "compression_ratio": 1.6402116402116402, "no_speech_prob": 3.905142875737511e-06}, {"id": 94, "seek": 35100, "start": 354.0, "end": 358.0, "text": " And you can't use the dot by itself because it has to have functions on", "tokens": [400, 291, 393, 380, 764, 264, 5893, 538, 2564, 570, 309, 575, 281, 362, 6828, 322], "temperature": 0.0, "avg_logprob": -0.28421941716620264, "compression_ratio": 1.6402116402116402, "no_speech_prob": 3.905142875737511e-06}, {"id": 95, "seek": 35100, "start": 358.0, "end": 360.0, "text": " either side of them.", "tokens": [2139, 1252, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.28421941716620264, "compression_ratio": 1.6402116402116402, "no_speech_prob": 3.905142875737511e-06}, {"id": 96, "seek": 35100, "start": 360.0, "end": 363.0, "text": " But if you could use the dot by itself.", "tokens": [583, 498, 291, 727, 764, 264, 5893, 538, 2564, 13], "temperature": 0.0, "avg_logprob": -0.28421941716620264, "compression_ratio": 1.6402116402116402, "no_speech_prob": 3.905142875737511e-06}, {"id": 97, "seek": 35100, "start": 363.0, "end": 368.0, "text": " This is what it would do.", "tokens": [639, 307, 437, 309, 576, 360, 13], "temperature": 0.0, "avg_logprob": -0.28421941716620264, "compression_ratio": 1.6402116402116402, "no_speech_prob": 3.905142875737511e-06}, {"id": 98, "seek": 35100, "start": 368.0, "end": 371.0, "text": " It would, it gives you the structure of this problem.", "tokens": [467, 576, 11, 309, 2709, 291, 264, 3877, 295, 341, 1154, 13], "temperature": 0.0, "avg_logprob": -0.28421941716620264, "compression_ratio": 1.6402116402116402, "no_speech_prob": 3.905142875737511e-06}, {"id": 99, "seek": 35100, "start": 371.0, "end": 373.0, "text": " So that it's going to.", "tokens": [407, 300, 309, 311, 516, 281, 13], "temperature": 0.0, "avg_logprob": -0.28421941716620264, "compression_ratio": 1.6402116402116402, "no_speech_prob": 3.905142875737511e-06}, {"id": 100, "seek": 35100, "start": 373.0, "end": 378.0, "text": " Kind of lay it out in this way.", "tokens": [9242, 295, 2360, 309, 484, 294, 341, 636, 13], "temperature": 0.0, "avg_logprob": -0.28421941716620264, "compression_ratio": 1.6402116402116402, "no_speech_prob": 3.905142875737511e-06}, {"id": 101, "seek": 37800, "start": 378.0, "end": 381.0, "text": " So let's say you have a matrix.", "tokens": [407, 718, 311, 584, 291, 362, 257, 8141, 13], "temperature": 0.0, "avg_logprob": -0.32891731540652086, "compression_ratio": 1.8512396694214877, "no_speech_prob": 1.4283785276347771e-05}, {"id": 102, "seek": 37800, "start": 381.0, "end": 382.0, "text": " And you have a function.", "tokens": [400, 291, 362, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.32891731540652086, "compression_ratio": 1.8512396694214877, "no_speech_prob": 1.4283785276347771e-05}, {"id": 103, "seek": 37800, "start": 382.0, "end": 385.0, "text": " And you can see, you know, your one, two, three, four, and your one,", "tokens": [400, 291, 393, 536, 11, 291, 458, 11, 428, 472, 11, 732, 11, 1045, 11, 1451, 11, 293, 428, 472, 11], "temperature": 0.0, "avg_logprob": -0.32891731540652086, "compression_ratio": 1.8512396694214877, "no_speech_prob": 1.4283785276347771e-05}, {"id": 104, "seek": 37800, "start": 385.0, "end": 386.0, "text": " two, three, four.", "tokens": [732, 11, 1045, 11, 1451, 13], "temperature": 0.0, "avg_logprob": -0.32891731540652086, "compression_ratio": 1.8512396694214877, "no_speech_prob": 1.4283785276347771e-05}, {"id": 105, "seek": 37800, "start": 386.0, "end": 388.0, "text": " It's all multiplying it.", "tokens": [467, 311, 439, 30955, 309, 13], "temperature": 0.0, "avg_logprob": -0.32891731540652086, "compression_ratio": 1.8512396694214877, "no_speech_prob": 1.4283785276347771e-05}, {"id": 106, "seek": 37800, "start": 388.0, "end": 390.0, "text": " And it's going to take these.", "tokens": [400, 309, 311, 516, 281, 747, 613, 13], "temperature": 0.0, "avg_logprob": -0.32891731540652086, "compression_ratio": 1.8512396694214877, "no_speech_prob": 1.4283785276347771e-05}, {"id": 107, "seek": 37800, "start": 390.0, "end": 392.0, "text": " I guess that these called double alpha and double omega.", "tokens": [286, 2041, 300, 613, 1219, 3834, 8961, 293, 3834, 10498, 13], "temperature": 0.0, "avg_logprob": -0.32891731540652086, "compression_ratio": 1.8512396694214877, "no_speech_prob": 1.4283785276347771e-05}, {"id": 108, "seek": 37800, "start": 392.0, "end": 397.0, "text": " I guess I don't know.", "tokens": [286, 2041, 286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.32891731540652086, "compression_ratio": 1.8512396694214877, "no_speech_prob": 1.4283785276347771e-05}, {"id": 109, "seek": 37800, "start": 397.0, "end": 400.0, "text": " But it's going to take whatever's on the left and the right of the dot and", "tokens": [583, 309, 311, 516, 281, 747, 2035, 311, 322, 264, 1411, 293, 264, 558, 295, 264, 5893, 293], "temperature": 0.0, "avg_logprob": -0.32891731540652086, "compression_ratio": 1.8512396694214877, "no_speech_prob": 1.4283785276347771e-05}, {"id": 110, "seek": 37800, "start": 400.0, "end": 402.0, "text": " apply those functions in this way.", "tokens": [3079, 729, 6828, 294, 341, 636, 13], "temperature": 0.0, "avg_logprob": -0.32891731540652086, "compression_ratio": 1.8512396694214877, "no_speech_prob": 1.4283785276347771e-05}, {"id": 111, "seek": 37800, "start": 402.0, "end": 405.0, "text": " So I kind of think of the inner product operator is it just.", "tokens": [407, 286, 733, 295, 519, 295, 264, 7284, 1674, 12973, 307, 309, 445, 13], "temperature": 0.0, "avg_logprob": -0.32891731540652086, "compression_ratio": 1.8512396694214877, "no_speech_prob": 1.4283785276347771e-05}, {"id": 112, "seek": 40500, "start": 405.0, "end": 409.0, "text": " It's just a matrix.", "tokens": [467, 311, 445, 257, 8141, 13], "temperature": 0.0, "avg_logprob": -0.3171441411397543, "compression_ratio": 1.538860103626943, "no_speech_prob": 0.00015840759442653507}, {"id": 113, "seek": 40500, "start": 409.0, "end": 413.0, "text": " And the times functions into these particular spots.", "tokens": [400, 264, 1413, 6828, 666, 613, 1729, 10681, 13], "temperature": 0.0, "avg_logprob": -0.3171441411397543, "compression_ratio": 1.538860103626943, "no_speech_prob": 0.00015840759442653507}, {"id": 114, "seek": 40500, "start": 413.0, "end": 414.0, "text": " So for example,", "tokens": [407, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.3171441411397543, "compression_ratio": 1.538860103626943, "no_speech_prob": 0.00015840759442653507}, {"id": 115, "seek": 40500, "start": 414.0, "end": 419.0, "text": " Omega will often be times and double alpha will often be plus.", "tokens": [27645, 486, 2049, 312, 1413, 293, 3834, 8961, 486, 2049, 312, 1804, 13], "temperature": 0.0, "avg_logprob": -0.3171441411397543, "compression_ratio": 1.538860103626943, "no_speech_prob": 0.00015840759442653507}, {"id": 116, "seek": 40500, "start": 419.0, "end": 421.0, "text": " And if you do it in that way.", "tokens": [400, 498, 291, 360, 309, 294, 300, 636, 13], "temperature": 0.0, "avg_logprob": -0.3171441411397543, "compression_ratio": 1.538860103626943, "no_speech_prob": 0.00015840759442653507}, {"id": 117, "seek": 40500, "start": 421.0, "end": 428.0, "text": " Then it's matrix multiplication.", "tokens": [1396, 309, 311, 8141, 27290, 13], "temperature": 0.0, "avg_logprob": -0.3171441411397543, "compression_ratio": 1.538860103626943, "no_speech_prob": 0.00015840759442653507}, {"id": 118, "seek": 40500, "start": 428.0, "end": 429.0, "text": " I could swear that yesterday,", "tokens": [286, 727, 11902, 300, 5186, 11], "temperature": 0.0, "avg_logprob": -0.3171441411397543, "compression_ratio": 1.538860103626943, "no_speech_prob": 0.00015840759442653507}, {"id": 119, "seek": 40500, "start": 429.0, "end": 432.0, "text": " it was a different example of a matrix and a vector.", "tokens": [309, 390, 257, 819, 1365, 295, 257, 8141, 293, 257, 8062, 13], "temperature": 0.0, "avg_logprob": -0.3171441411397543, "compression_ratio": 1.538860103626943, "no_speech_prob": 0.00015840759442653507}, {"id": 120, "seek": 43200, "start": 432.0, "end": 435.0, "text": " I added, I added a second. Sorry about that. Yeah. I got a question.", "tokens": [286, 3869, 11, 286, 3869, 257, 1150, 13, 4919, 466, 300, 13, 865, 13, 286, 658, 257, 1168, 13], "temperature": 0.0, "avg_logprob": -0.17580351462730995, "compression_ratio": 1.6371681415929205, "no_speech_prob": 1.834169597714208e-05}, {"id": 121, "seek": 43200, "start": 435.0, "end": 440.0, "text": " And it's the same. It's the same idea here.", "tokens": [400, 309, 311, 264, 912, 13, 467, 311, 264, 912, 1558, 510, 13], "temperature": 0.0, "avg_logprob": -0.17580351462730995, "compression_ratio": 1.6371681415929205, "no_speech_prob": 1.834169597714208e-05}, {"id": 122, "seek": 43200, "start": 440.0, "end": 446.0, "text": " We do in this case, when we were doing a matrix, this matrix times the vector.", "tokens": [492, 360, 294, 341, 1389, 11, 562, 321, 645, 884, 257, 8141, 11, 341, 8141, 1413, 264, 8062, 13], "temperature": 0.0, "avg_logprob": -0.17580351462730995, "compression_ratio": 1.6371681415929205, "no_speech_prob": 1.834169597714208e-05}, {"id": 123, "seek": 43200, "start": 446.0, "end": 451.0, "text": " We get the exact same structure of the problem.", "tokens": [492, 483, 264, 1900, 912, 3877, 295, 264, 1154, 13], "temperature": 0.0, "avg_logprob": -0.17580351462730995, "compression_ratio": 1.6371681415929205, "no_speech_prob": 1.834169597714208e-05}, {"id": 124, "seek": 43200, "start": 451.0, "end": 455.0, "text": " But they're all scalars because we only have one number multiplied by", "tokens": [583, 436, 434, 439, 15664, 685, 570, 321, 787, 362, 472, 1230, 17207, 538], "temperature": 0.0, "avg_logprob": -0.17580351462730995, "compression_ratio": 1.6371681415929205, "no_speech_prob": 1.834169597714208e-05}, {"id": 125, "seek": 43200, "start": 455.0, "end": 456.0, "text": " another.", "tokens": [1071, 13], "temperature": 0.0, "avg_logprob": -0.17580351462730995, "compression_ratio": 1.6371681415929205, "no_speech_prob": 1.834169597714208e-05}, {"id": 126, "seek": 43200, "start": 456.0, "end": 459.0, "text": " In this case, it's the double omega multiplication.", "tokens": [682, 341, 1389, 11, 309, 311, 264, 3834, 10498, 27290, 13], "temperature": 0.0, "avg_logprob": -0.17580351462730995, "compression_ratio": 1.6371681415929205, "no_speech_prob": 1.834169597714208e-05}, {"id": 127, "seek": 45900, "start": 459.0, "end": 466.0, "text": " So we get one times two plus two times five, one times one plus two times three.", "tokens": [407, 321, 483, 472, 1413, 732, 1804, 732, 1413, 1732, 11, 472, 1413, 472, 1804, 732, 1413, 1045, 13], "temperature": 0.0, "avg_logprob": -0.22730196584569345, "compression_ratio": 1.7833333333333334, "no_speech_prob": 1.0129661859537009e-05}, {"id": 128, "seek": 45900, "start": 466.0, "end": 471.0, "text": " And so we get, we get it in that way. If we were to do the same thing, right.", "tokens": [400, 370, 321, 483, 11, 321, 483, 309, 294, 300, 636, 13, 759, 321, 645, 281, 360, 264, 912, 551, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.22730196584569345, "compression_ratio": 1.7833333333333334, "no_speech_prob": 1.0129661859537009e-05}, {"id": 129, "seek": 45900, "start": 471.0, "end": 477.0, "text": " If one of these, the second one was a matrix. If instead of.", "tokens": [759, 472, 295, 613, 11, 264, 1150, 472, 390, 257, 8141, 13, 759, 2602, 295, 13], "temperature": 0.0, "avg_logprob": -0.22730196584569345, "compression_ratio": 1.7833333333333334, "no_speech_prob": 1.0129661859537009e-05}, {"id": 130, "seek": 45900, "start": 477.0, "end": 479.0, "text": " You know, our one, two vector.", "tokens": [509, 458, 11, 527, 472, 11, 732, 8062, 13], "temperature": 0.0, "avg_logprob": -0.22730196584569345, "compression_ratio": 1.7833333333333334, "no_speech_prob": 1.0129661859537009e-05}, {"id": 131, "seek": 45900, "start": 479.0, "end": 483.0, "text": " We had a one, two, three, four matrix.", "tokens": [492, 632, 257, 472, 11, 732, 11, 1045, 11, 1451, 8141, 13], "temperature": 0.0, "avg_logprob": -0.22730196584569345, "compression_ratio": 1.7833333333333334, "no_speech_prob": 1.0129661859537009e-05}, {"id": 132, "seek": 45900, "start": 483.0, "end": 486.0, "text": " Instead of this one, two being.", "tokens": [7156, 295, 341, 472, 11, 732, 885, 13], "temperature": 0.0, "avg_logprob": -0.22730196584569345, "compression_ratio": 1.7833333333333334, "no_speech_prob": 1.0129661859537009e-05}, {"id": 133, "seek": 48600, "start": 486.0, "end": 489.0, "text": " These could be vectors, but we'd still do the same thing.", "tokens": [1981, 727, 312, 18875, 11, 457, 321, 1116, 920, 360, 264, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.1141523040167176, "compression_ratio": 1.6280193236714975, "no_speech_prob": 2.3551518097519875e-05}, {"id": 134, "seek": 48600, "start": 489.0, "end": 493.0, "text": " This one could be a vector one, two, three, four.", "tokens": [639, 472, 727, 312, 257, 8062, 472, 11, 732, 11, 1045, 11, 1451, 13], "temperature": 0.0, "avg_logprob": -0.1141523040167176, "compression_ratio": 1.6280193236714975, "no_speech_prob": 2.3551518097519875e-05}, {"id": 135, "seek": 48600, "start": 493.0, "end": 497.0, "text": " Which would use whatever this double omega operator is.", "tokens": [3013, 576, 764, 2035, 341, 3834, 10498, 12973, 307, 13], "temperature": 0.0, "avg_logprob": -0.1141523040167176, "compression_ratio": 1.6280193236714975, "no_speech_prob": 2.3551518097519875e-05}, {"id": 136, "seek": 48600, "start": 497.0, "end": 501.0, "text": " In this case, times and multiply it by this too.", "tokens": [682, 341, 1389, 11, 1413, 293, 12972, 309, 538, 341, 886, 13], "temperature": 0.0, "avg_logprob": -0.1141523040167176, "compression_ratio": 1.6280193236714975, "no_speech_prob": 2.3551518097519875e-05}, {"id": 137, "seek": 48600, "start": 501.0, "end": 507.0, "text": " So this could be a, a scalar in the, in this example, in a matrix example.", "tokens": [407, 341, 727, 312, 257, 11, 257, 39684, 294, 264, 11, 294, 341, 1365, 11, 294, 257, 8141, 1365, 13], "temperature": 0.0, "avg_logprob": -0.1141523040167176, "compression_ratio": 1.6280193236714975, "no_speech_prob": 2.3551518097519875e-05}, {"id": 138, "seek": 48600, "start": 507.0, "end": 509.0, "text": " It's a vector.", "tokens": [467, 311, 257, 8062, 13], "temperature": 0.0, "avg_logprob": -0.1141523040167176, "compression_ratio": 1.6280193236714975, "no_speech_prob": 2.3551518097519875e-05}, {"id": 139, "seek": 48600, "start": 509.0, "end": 511.0, "text": " I haven't tried it, but I suspect.", "tokens": [286, 2378, 380, 3031, 309, 11, 457, 286, 9091, 13], "temperature": 0.0, "avg_logprob": -0.1141523040167176, "compression_ratio": 1.6280193236714975, "no_speech_prob": 2.3551518097519875e-05}, {"id": 140, "seek": 51100, "start": 511.0, "end": 520.0, "text": " Kind of as you get into more and more dimensions, it could be, you know, higher dimensional arrays as well.", "tokens": [9242, 295, 382, 291, 483, 666, 544, 293, 544, 12819, 11, 309, 727, 312, 11, 291, 458, 11, 2946, 18795, 41011, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.21150039672851562, "compression_ratio": 1.5280898876404494, "no_speech_prob": 2.668560773599893e-05}, {"id": 141, "seek": 51100, "start": 520.0, "end": 523.0, "text": " Oh, that's, yeah, that's crazy.", "tokens": [876, 11, 300, 311, 11, 1338, 11, 300, 311, 3219, 13], "temperature": 0.0, "avg_logprob": -0.21150039672851562, "compression_ratio": 1.5280898876404494, "no_speech_prob": 2.668560773599893e-05}, {"id": 142, "seek": 51100, "start": 523.0, "end": 531.0, "text": " Actually, you know, I think what we should do maybe today is learn about operators, because dot is not a function.", "tokens": [5135, 11, 291, 458, 11, 286, 519, 437, 321, 820, 360, 1310, 965, 307, 1466, 466, 19077, 11, 570, 5893, 307, 406, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.21150039672851562, "compression_ratio": 1.5280898876404494, "no_speech_prob": 2.668560773599893e-05}, {"id": 143, "seek": 51100, "start": 531.0, "end": 533.0, "text": " It's an operator.", "tokens": [467, 311, 364, 12973, 13], "temperature": 0.0, "avg_logprob": -0.21150039672851562, "compression_ratio": 1.5280898876404494, "no_speech_prob": 2.668560773599893e-05}, {"id": 144, "seek": 53300, "start": 533.0, "end": 541.0, "text": " And this is APL terminology for what in some languages we would call higher order functions.", "tokens": [400, 341, 307, 5372, 43, 27575, 337, 437, 294, 512, 8650, 321, 576, 818, 2946, 1668, 6828, 13], "temperature": 0.0, "avg_logprob": -0.08816752856290794, "compression_ratio": 1.7268041237113403, "no_speech_prob": 1.1300448932161089e-05}, {"id": 145, "seek": 53300, "start": 541.0, "end": 544.0, "text": " They're functions that take a function and return a function.", "tokens": [814, 434, 6828, 300, 747, 257, 2445, 293, 2736, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.08816752856290794, "compression_ratio": 1.7268041237113403, "no_speech_prob": 1.1300448932161089e-05}, {"id": 146, "seek": 53300, "start": 544.0, "end": 549.0, "text": " So in Python, we don't give them a special name.", "tokens": [407, 294, 15329, 11, 321, 500, 380, 976, 552, 257, 2121, 1315, 13], "temperature": 0.0, "avg_logprob": -0.08816752856290794, "compression_ratio": 1.7268041237113403, "no_speech_prob": 1.1300448932161089e-05}, {"id": 147, "seek": 53300, "start": 549.0, "end": 552.0, "text": " You can have functions that take a function and return a function.", "tokens": [509, 393, 362, 6828, 300, 747, 257, 2445, 293, 2736, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.08816752856290794, "compression_ratio": 1.7268041237113403, "no_speech_prob": 1.1300448932161089e-05}, {"id": 148, "seek": 53300, "start": 552.0, "end": 555.0, "text": " Although there is special syntax for doing it more conveniently.", "tokens": [5780, 456, 307, 2121, 28431, 337, 884, 309, 544, 44375, 13], "temperature": 0.0, "avg_logprob": -0.08816752856290794, "compression_ratio": 1.7268041237113403, "no_speech_prob": 1.1300448932161089e-05}, {"id": 149, "seek": 55500, "start": 555.0, "end": 563.0, "text": " And that syntax is called decorator syntax, which is where you can pop an at sign.", "tokens": [400, 300, 28431, 307, 1219, 7919, 1639, 28431, 11, 597, 307, 689, 291, 393, 1665, 364, 412, 1465, 13], "temperature": 0.0, "avg_logprob": -0.1553056181930914, "compression_ratio": 1.635, "no_speech_prob": 8.938747669162694e-06}, {"id": 150, "seek": 55500, "start": 563.0, "end": 570.0, "text": " Before the function before a decorator name and put that at the top of a function and that will cause a function to get passed in.", "tokens": [4546, 264, 2445, 949, 257, 7919, 1639, 1315, 293, 829, 300, 412, 264, 1192, 295, 257, 2445, 293, 300, 486, 3082, 257, 2445, 281, 483, 4678, 294, 13], "temperature": 0.0, "avg_logprob": -0.1553056181930914, "compression_ratio": 1.635, "no_speech_prob": 8.938747669162694e-06}, {"id": 151, "seek": 55500, "start": 570.0, "end": 579.0, "text": " In fact, should we look at that first, maybe that might be interesting and then talk about operators.", "tokens": [682, 1186, 11, 820, 321, 574, 412, 300, 700, 11, 1310, 300, 1062, 312, 1880, 293, 550, 751, 466, 19077, 13], "temperature": 0.0, "avg_logprob": -0.1553056181930914, "compression_ratio": 1.635, "no_speech_prob": 8.938747669162694e-06}, {"id": 152, "seek": 55500, "start": 579.0, "end": 580.0, "text": " Yeah, okay.", "tokens": [865, 11, 1392, 13], "temperature": 0.0, "avg_logprob": -0.1553056181930914, "compression_ratio": 1.635, "no_speech_prob": 8.938747669162694e-06}, {"id": 153, "seek": 58000, "start": 580.0, "end": 589.0, "text": " Let's try it because I know Zach Biola did a thing about decorators the other day, which I think people found interesting.", "tokens": [961, 311, 853, 309, 570, 286, 458, 21028, 13007, 4711, 630, 257, 551, 466, 7919, 3391, 264, 661, 786, 11, 597, 286, 519, 561, 1352, 1880, 13], "temperature": 0.0, "avg_logprob": -0.15803245787924908, "compression_ratio": 1.2424242424242424, "no_speech_prob": 1.2804089237761218e-05}, {"id": 154, "seek": 58000, "start": 589.0, "end": 599.0, "text": " So.", "tokens": [407, 13], "temperature": 0.0, "avg_logprob": -0.15803245787924908, "compression_ratio": 1.2424242424242424, "no_speech_prob": 1.2804089237761218e-05}, {"id": 155, "seek": 58000, "start": 599.0, "end": 606.0, "text": " I guess I should do a git pull first.", "tokens": [286, 2041, 286, 820, 360, 257, 18331, 2235, 700, 13], "temperature": 0.0, "avg_logprob": -0.15803245787924908, "compression_ratio": 1.2424242424242424, "no_speech_prob": 1.2804089237761218e-05}, {"id": 156, "seek": 60600, "start": 606.0, "end": 617.0, "text": " And while we're there, I guess we should also just talk about other things that have been happening on the forum.", "tokens": [400, 1339, 321, 434, 456, 11, 286, 2041, 321, 820, 611, 445, 751, 466, 661, 721, 300, 362, 668, 2737, 322, 264, 17542, 13], "temperature": 0.0, "avg_logprob": -0.062028669175647554, "compression_ratio": 1.2727272727272727, "no_speech_prob": 8.267468729172833e-06}, {"id": 157, "seek": 60600, "start": 617.0, "end": 622.0, "text": " Actually, it's getting quite active, which is amazing.", "tokens": [5135, 11, 309, 311, 1242, 1596, 4967, 11, 597, 307, 2243, 13], "temperature": 0.0, "avg_logprob": -0.062028669175647554, "compression_ratio": 1.2727272727272727, "no_speech_prob": 8.267468729172833e-06}, {"id": 158, "seek": 62200, "start": 622.0, "end": 636.0, "text": " So one particularly interesting thing, which was also Isaac, is a way to create flashcards more conveniently.", "tokens": [407, 472, 4098, 1880, 551, 11, 597, 390, 611, 22505, 11, 307, 257, 636, 281, 1884, 7319, 40604, 544, 44375, 13], "temperature": 0.0, "avg_logprob": -0.1397272745768229, "compression_ratio": 1.3, "no_speech_prob": 7.410939360852353e-06}, {"id": 159, "seek": 62200, "start": 636.0, "end": 643.0, "text": " So if you look for anky deck generator, you will find that.", "tokens": [407, 498, 291, 574, 337, 364, 4133, 9341, 19265, 11, 291, 486, 915, 300, 13], "temperature": 0.0, "avg_logprob": -0.1397272745768229, "compression_ratio": 1.3, "no_speech_prob": 7.410939360852353e-06}, {"id": 160, "seek": 64300, "start": 643.0, "end": 653.0, "text": " By the way, these, these ugly spaces are caused by this.", "tokens": [3146, 264, 636, 11, 613, 11, 613, 12246, 7673, 366, 7008, 538, 341, 13], "temperature": 0.0, "avg_logprob": -0.1514989179723403, "compression_ratio": 1.618279569892473, "no_speech_prob": 5.6819108067429624e-06}, {"id": 161, "seek": 64300, "start": 653.0, "end": 660.0, "text": " You're not sharing your screen. Oh, I'm not sharing my screen. Of course I'm not sharing my screen. I never remember to share my screen.", "tokens": [509, 434, 406, 5414, 428, 2568, 13, 876, 11, 286, 478, 406, 5414, 452, 2568, 13, 2720, 1164, 286, 478, 406, 5414, 452, 2568, 13, 286, 1128, 1604, 281, 2073, 452, 2568, 13], "temperature": 0.0, "avg_logprob": -0.1514989179723403, "compression_ratio": 1.618279569892473, "no_speech_prob": 5.6819108067429624e-06}, {"id": 162, "seek": 64300, "start": 660.0, "end": 663.0, "text": " There we go. Okay, let's try that again.", "tokens": [821, 321, 352, 13, 1033, 11, 718, 311, 853, 300, 797, 13], "temperature": 0.0, "avg_logprob": -0.1514989179723403, "compression_ratio": 1.618279569892473, "no_speech_prob": 5.6819108067429624e-06}, {"id": 163, "seek": 64300, "start": 663.0, "end": 672.0, "text": " So, alright, so this is the anky deck generator thread from Isaac.", "tokens": [407, 11, 5845, 11, 370, 341, 307, 264, 364, 4133, 9341, 19265, 7207, 490, 22505, 13], "temperature": 0.0, "avg_logprob": -0.1514989179723403, "compression_ratio": 1.618279569892473, "no_speech_prob": 5.6819108067429624e-06}, {"id": 164, "seek": 67200, "start": 672.0, "end": 678.0, "text": " And so I think now there's what three different decks you could import, Isaac?", "tokens": [400, 370, 286, 519, 586, 456, 311, 437, 1045, 819, 32607, 291, 727, 974, 11, 22505, 30], "temperature": 0.0, "avg_logprob": -0.1626970801554935, "compression_ratio": 1.4915254237288136, "no_speech_prob": 1.805671854526736e-05}, {"id": 165, "seek": 67200, "start": 678.0, "end": 680.0, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.1626970801554935, "compression_ratio": 1.4915254237288136, "no_speech_prob": 1.805671854526736e-05}, {"id": 166, "seek": 67200, "start": 680.0, "end": 683.0, "text": " So here's some of those examples.", "tokens": [407, 510, 311, 512, 295, 729, 5110, 13], "temperature": 0.0, "avg_logprob": -0.1626970801554935, "compression_ratio": 1.4915254237288136, "no_speech_prob": 1.805671854526736e-05}, {"id": 167, "seek": 67200, "start": 683.0, "end": 695.0, "text": " But there will be more. I'm going to be after after each session because I don't want to have to, you know, recreate the decks after each session.", "tokens": [583, 456, 486, 312, 544, 13, 286, 478, 516, 281, 312, 934, 934, 1184, 5481, 570, 286, 500, 380, 528, 281, 362, 281, 11, 291, 458, 11, 25833, 264, 32607, 934, 1184, 5481, 13], "temperature": 0.0, "avg_logprob": -0.1626970801554935, "compression_ratio": 1.4915254237288136, "no_speech_prob": 1.805671854526736e-05}, {"id": 168, "seek": 69500, "start": 695.0, "end": 714.0, "text": " I'm going to create a new a new deck for that day. So you might not have to import that because I'm sorry if you already know this, but if you import a deck with a name of a deck you already have, then any", "tokens": [286, 478, 516, 281, 1884, 257, 777, 257, 777, 9341, 337, 300, 786, 13, 407, 291, 1062, 406, 362, 281, 974, 300, 570, 286, 478, 2597, 498, 291, 1217, 458, 341, 11, 457, 498, 291, 974, 257, 9341, 365, 257, 1315, 295, 257, 9341, 291, 1217, 362, 11, 550, 604], "temperature": 0.0, "avg_logprob": -0.1759427768080982, "compression_ratio": 1.5949367088607596, "no_speech_prob": 2.6425068426760845e-06}, {"id": 169, "seek": 69500, "start": 714.0, "end": 720.0, "text": " cards you already have will not be duplicated.", "tokens": [5632, 291, 1217, 362, 486, 406, 312, 1581, 564, 3587, 13], "temperature": 0.0, "avg_logprob": -0.1759427768080982, "compression_ratio": 1.5949367088607596, "no_speech_prob": 2.6425068426760845e-06}, {"id": 170, "seek": 72000, "start": 720.0, "end": 736.0, "text": " So, you can just keep exporting your updated deck and people can keep importing that, and it won't. And as long as you make sure you don't include scheduling information in the exported deck, then it'll work fine.", "tokens": [407, 11, 291, 393, 445, 1066, 44686, 428, 10588, 9341, 293, 561, 393, 1066, 43866, 300, 11, 293, 309, 1582, 380, 13, 400, 382, 938, 382, 291, 652, 988, 291, 500, 380, 4090, 29055, 1589, 294, 264, 42055, 9341, 11, 550, 309, 603, 589, 2489, 13], "temperature": 0.0, "avg_logprob": -0.08681877872400116, "compression_ratio": 1.4743589743589745, "no_speech_prob": 6.540071353811072e-06}, {"id": 171, "seek": 72000, "start": 736.0, "end": 738.0, "text": " Oh, even better.", "tokens": [876, 11, 754, 1101, 13], "temperature": 0.0, "avg_logprob": -0.08681877872400116, "compression_ratio": 1.4743589743589745, "no_speech_prob": 6.540071353811072e-06}, {"id": 172, "seek": 73800, "start": 738.0, "end": 750.0, "text": " Do you think it would be useful for, I didn't know that, but do you think it would be useful for people who maybe aren't in the group and are either trying to catch up for going to watch this in the future to have kind of wanted each day?", "tokens": [1144, 291, 519, 309, 576, 312, 4420, 337, 11, 286, 994, 380, 458, 300, 11, 457, 360, 291, 519, 309, 576, 312, 4420, 337, 561, 567, 1310, 3212, 380, 294, 264, 1594, 293, 366, 2139, 1382, 281, 3745, 493, 337, 516, 281, 1159, 341, 294, 264, 2027, 281, 362, 733, 295, 1415, 1184, 786, 30], "temperature": 0.0, "avg_logprob": -0.14005779226620993, "compression_ratio": 1.6502242152466369, "no_speech_prob": 3.7264771890477277e-06}, {"id": 173, "seek": 73800, "start": 750.0, "end": 754.0, "text": " Not really because there'll be an order right?", "tokens": [1726, 534, 570, 456, 603, 312, 364, 1668, 558, 30], "temperature": 0.0, "avg_logprob": -0.14005779226620993, "compression_ratio": 1.6502242152466369, "no_speech_prob": 3.7264771890477277e-06}, {"id": 174, "seek": 73800, "start": 754.0, "end": 762.0, "text": " I mean, at most I'd say like add a tag to each card to say what session it's from.", "tokens": [286, 914, 11, 412, 881, 286, 1116, 584, 411, 909, 257, 6162, 281, 1184, 2920, 281, 584, 437, 5481, 309, 311, 490, 13], "temperature": 0.0, "avg_logprob": -0.14005779226620993, "compression_ratio": 1.6502242152466369, "no_speech_prob": 3.7264771890477277e-06}, {"id": 175, "seek": 76200, "start": 762.0, "end": 780.0, "text": " But otherwise people will just like, they'll be like oh I haven't got to this point yet. So, so stop. Yeah, so like, yeah if you just go file export in Anki, and then you choose deck package, and you choose the package, remove scheduling information,", "tokens": [583, 5911, 561, 486, 445, 411, 11, 436, 603, 312, 411, 1954, 286, 2378, 380, 658, 281, 341, 935, 1939, 13, 407, 11, 370, 1590, 13, 865, 11, 370, 411, 11, 1338, 498, 291, 445, 352, 3991, 10725, 294, 1107, 2984, 11, 293, 550, 291, 2826, 9341, 7372, 11, 293, 291, 2826, 264, 7372, 11, 4159, 29055, 1589, 11], "temperature": 0.0, "avg_logprob": -0.15898617302499166, "compression_ratio": 1.5743589743589743, "no_speech_prob": 6.438553555199178e-06}, {"id": 176, "seek": 76200, "start": 780.0, "end": 783.0, "text": " and then you say export.", "tokens": [293, 550, 291, 584, 10725, 13], "temperature": 0.0, "avg_logprob": -0.15898617302499166, "compression_ratio": 1.5743589743589743, "no_speech_prob": 6.438553555199178e-06}, {"id": 177, "seek": 76200, "start": 783.0, "end": 785.0, "text": " This is what I do for the kids.", "tokens": [639, 307, 437, 286, 360, 337, 264, 2301, 13], "temperature": 0.0, "avg_logprob": -0.15898617302499166, "compression_ratio": 1.5743589743589743, "no_speech_prob": 6.438553555199178e-06}, {"id": 178, "seek": 78500, "start": 785.0, "end": 796.0, "text": " And so that will export the tech, and then when they import it, it'll say these ones already existed and these ones are new and it'll bring in the new ones.", "tokens": [400, 370, 300, 486, 10725, 264, 7553, 11, 293, 550, 562, 436, 974, 309, 11, 309, 603, 584, 613, 2306, 1217, 13135, 293, 613, 2306, 366, 777, 293, 309, 603, 1565, 294, 264, 777, 2306, 13], "temperature": 0.0, "avg_logprob": -0.12576171875, "compression_ratio": 1.543956043956044, "no_speech_prob": 3.589441257645376e-05}, {"id": 179, "seek": 78500, "start": 796.0, "end": 800.0, "text": " Awesome.", "tokens": [10391, 13], "temperature": 0.0, "avg_logprob": -0.12576171875, "compression_ratio": 1.543956043956044, "no_speech_prob": 3.589441257645376e-05}, {"id": 180, "seek": 78500, "start": 800.0, "end": 808.0, "text": " So I was just saying earlier that Mark, that's, that's such a cognitive dissonance for me to see Jeremy use a mark.", "tokens": [407, 286, 390, 445, 1566, 3071, 300, 3934, 11, 300, 311, 11, 300, 311, 1270, 257, 15605, 717, 3015, 719, 337, 385, 281, 536, 17809, 764, 257, 1491, 13], "temperature": 0.0, "avg_logprob": -0.12576171875, "compression_ratio": 1.543956043956044, "no_speech_prob": 3.589441257645376e-05}, {"id": 181, "seek": 80800, "start": 808.0, "end": 818.0, "text": " You know, I'm. Yeah, I, I've been using Windows largely since 1995.", "tokens": [509, 458, 11, 286, 478, 13, 865, 11, 286, 11, 286, 600, 668, 1228, 8591, 11611, 1670, 22601, 13], "temperature": 0.0, "avg_logprob": -0.1641325723557245, "compression_ratio": 1.2933333333333332, "no_speech_prob": 7.070243555062916e-06}, {"id": 182, "seek": 80800, "start": 818.0, "end": 829.0, "text": " And I, before that I used quite a mixture I use Windows 3.0 3.1 3.11 for work groups but I also used Mac", "tokens": [400, 286, 11, 949, 300, 286, 1143, 1596, 257, 9925, 286, 764, 8591, 805, 13, 15, 805, 13, 16, 805, 13, 5348, 337, 589, 3935, 457, 286, 611, 1143, 5707], "temperature": 0.0, "avg_logprob": -0.1641325723557245, "compression_ratio": 1.2933333333333332, "no_speech_prob": 7.070243555062916e-06}, {"id": 183, "seek": 80800, "start": 829.0, "end": 836.0, "text": " from like 1990 or so.", "tokens": [490, 411, 13384, 420, 370, 13], "temperature": 0.0, "avg_logprob": -0.1641325723557245, "compression_ratio": 1.2933333333333332, "no_speech_prob": 7.070243555062916e-06}, {"id": 184, "seek": 83600, "start": 836.0, "end": 848.0, "text": " But I gotta say Windows 11. It's really getting a lot worse. It's the first time like, I've really felt like it's getting worse so for the first time in my life I'm actually thinking of switching to Mac.", "tokens": [583, 286, 3428, 584, 8591, 2975, 13, 467, 311, 534, 1242, 257, 688, 5324, 13, 467, 311, 264, 700, 565, 411, 11, 286, 600, 534, 2762, 411, 309, 311, 1242, 5324, 370, 337, 264, 700, 565, 294, 452, 993, 286, 478, 767, 1953, 295, 16493, 281, 5707, 13], "temperature": 0.0, "avg_logprob": -0.11776407957077026, "compression_ratio": 1.528205128205128, "no_speech_prob": 6.959395250305533e-06}, {"id": 185, "seek": 83600, "start": 848.0, "end": 855.0, "text": " And I actually ordered a MacBook Air M2 yesterday.", "tokens": [400, 286, 767, 8866, 257, 31737, 5774, 376, 17, 5186, 13], "temperature": 0.0, "avg_logprob": -0.11776407957077026, "compression_ratio": 1.528205128205128, "no_speech_prob": 6.959395250305533e-06}, {"id": 186, "seek": 83600, "start": 855.0, "end": 859.0, "text": " So, yeah, you might have to get used to it.", "tokens": [407, 11, 1338, 11, 291, 1062, 362, 281, 483, 1143, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.11776407957077026, "compression_ratio": 1.528205128205128, "no_speech_prob": 6.959395250305533e-06}, {"id": 187, "seek": 85900, "start": 859.0, "end": 866.0, "text": " Yeah, I did. I mean I do like being able to write on the screen of the surface pros and stuff.", "tokens": [865, 11, 286, 630, 13, 286, 914, 286, 360, 411, 885, 1075, 281, 2464, 322, 264, 2568, 295, 264, 3753, 6267, 293, 1507, 13], "temperature": 0.0, "avg_logprob": -0.08668388897859597, "compression_ratio": 1.4771573604060915, "no_speech_prob": 1.6436197256552987e-05}, {"id": 188, "seek": 85900, "start": 866.0, "end": 881.0, "text": " But what I do instead now is I've got a Wacom tablet, which is Bluetooth, and it's actually in some ways like, it's not strictly worse than writing on a screen because I can just, you know, right.", "tokens": [583, 437, 286, 360, 2602, 586, 307, 286, 600, 658, 257, 343, 326, 298, 14136, 11, 597, 307, 20286, 11, 293, 309, 311, 767, 294, 512, 2098, 411, 11, 309, 311, 406, 20792, 5324, 813, 3579, 322, 257, 2568, 570, 286, 393, 445, 11, 291, 458, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.08668388897859597, "compression_ratio": 1.4771573604060915, "no_speech_prob": 1.6436197256552987e-05}, {"id": 189, "seek": 88100, "start": 881.0, "end": 895.0, "text": " It's in front of me, where else, with a screen based approach I kind of have to move the whole thing. Yes, yes. And how are you finding the UI of a market is it easy to get used to it.", "tokens": [467, 311, 294, 1868, 295, 385, 11, 689, 1646, 11, 365, 257, 2568, 2361, 3109, 286, 733, 295, 362, 281, 1286, 264, 1379, 551, 13, 1079, 11, 2086, 13, 400, 577, 366, 291, 5006, 264, 15682, 295, 257, 2142, 307, 309, 1858, 281, 483, 1143, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.1729570697335636, "compression_ratio": 1.4240506329113924, "no_speech_prob": 1.6696123566362076e-05}, {"id": 190, "seek": 88100, "start": 895.0, "end": 899.0, "text": " It's all right I don't, I don't love it.", "tokens": [467, 311, 439, 558, 286, 500, 380, 11, 286, 500, 380, 959, 309, 13], "temperature": 0.0, "avg_logprob": -0.1729570697335636, "compression_ratio": 1.4240506329113924, "no_speech_prob": 1.6696123566362076e-05}, {"id": 191, "seek": 89900, "start": 899.0, "end": 917.0, "text": " It's like, it's definitely much worse than Windows used to be, but Windows is getting, you know, apparently everybody in the UX team in Windows or users Macs so they seem to be trying to make it more like a Mac, but of course they don't.", "tokens": [467, 311, 411, 11, 309, 311, 2138, 709, 5324, 813, 8591, 1143, 281, 312, 11, 457, 8591, 307, 1242, 11, 291, 458, 11, 7970, 2201, 294, 264, 40176, 1469, 294, 8591, 420, 5022, 5707, 82, 370, 436, 1643, 281, 312, 1382, 281, 652, 309, 544, 411, 257, 5707, 11, 457, 295, 1164, 436, 500, 380, 13], "temperature": 0.0, "avg_logprob": -0.10331532327752364, "compression_ratio": 1.6194690265486726, "no_speech_prob": 1.5779106661284459e-06}, {"id": 192, "seek": 89900, "start": 917.0, "end": 922.0, "text": " They don't really get it right so that's the worst of both worlds.", "tokens": [814, 500, 380, 534, 483, 309, 558, 370, 300, 311, 264, 5855, 295, 1293, 13401, 13], "temperature": 0.0, "avg_logprob": -0.10331532327752364, "compression_ratio": 1.6194690265486726, "no_speech_prob": 1.5779106661284459e-06}, {"id": 193, "seek": 89900, "start": 922.0, "end": 927.0, "text": " So I would say yeah I kind of like it better than Windows 11.", "tokens": [407, 286, 576, 584, 1338, 286, 733, 295, 411, 309, 1101, 813, 8591, 2975, 13], "temperature": 0.0, "avg_logprob": -0.10331532327752364, "compression_ratio": 1.6194690265486726, "no_speech_prob": 1.5779106661284459e-06}, {"id": 194, "seek": 92700, "start": 927.0, "end": 940.0, "text": " I've realized what I really like actually is Ubuntu's default desktop environment, because that's modeled much more closely on on Windows, you know,", "tokens": [286, 600, 5334, 437, 286, 534, 411, 767, 307, 30230, 45605, 311, 7576, 14502, 2823, 11, 570, 300, 311, 37140, 709, 544, 8185, 322, 322, 8591, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.13795529278841887, "compression_ratio": 1.4285714285714286, "no_speech_prob": 4.7848352551227435e-06}, {"id": 195, "seek": 92700, "start": 940.0, "end": 949.0, "text": " like, yeah Windows keyboard shortcuts just so ubiquitous, for example, which I really like.", "tokens": [411, 11, 1338, 8591, 10186, 34620, 445, 370, 43868, 39831, 11, 337, 1365, 11, 597, 286, 534, 411, 13], "temperature": 0.0, "avg_logprob": -0.13795529278841887, "compression_ratio": 1.4285714285714286, "no_speech_prob": 4.7848352551227435e-06}, {"id": 196, "seek": 94900, "start": 949.0, "end": 959.0, "text": " And, and they are on Ubuntu as well which I think is known nowadays. I can't remember I just use whatever's there.", "tokens": [400, 11, 293, 436, 366, 322, 30230, 45605, 382, 731, 597, 286, 519, 307, 2570, 13434, 13, 286, 393, 380, 1604, 286, 445, 764, 2035, 311, 456, 13], "temperature": 0.0, "avg_logprob": -0.1352557341257731, "compression_ratio": 1.4631578947368422, "no_speech_prob": 4.710650955530582e-06}, {"id": 197, "seek": 94900, "start": 959.0, "end": 965.0, "text": " Yeah, so there are things like for example to move a window in Mac to the other screen.", "tokens": [865, 11, 370, 456, 366, 721, 411, 337, 1365, 281, 1286, 257, 4910, 294, 5707, 281, 264, 661, 2568, 13], "temperature": 0.0, "avg_logprob": -0.1352557341257731, "compression_ratio": 1.4631578947368422, "no_speech_prob": 4.710650955530582e-06}, {"id": 198, "seek": 94900, "start": 965.0, "end": 971.0, "text": " You know you have to either download an extension to use a keyboard for it.", "tokens": [509, 458, 291, 362, 281, 2139, 5484, 364, 10320, 281, 764, 257, 10186, 337, 309, 13], "temperature": 0.0, "avg_logprob": -0.1352557341257731, "compression_ratio": 1.4631578947368422, "no_speech_prob": 4.710650955530582e-06}, {"id": 199, "seek": 97100, "start": 971.0, "end": 982.0, "text": " Or you know like it's all very much assumes mouse stuff, and specifically a lot of things really assume track pads, you know a lot of instructions you get will say what to do on a trackpad.", "tokens": [1610, 291, 458, 411, 309, 311, 439, 588, 709, 37808, 9719, 1507, 11, 293, 4682, 257, 688, 295, 721, 534, 6552, 2837, 19179, 11, 291, 458, 257, 688, 295, 9415, 291, 483, 486, 584, 437, 281, 360, 322, 257, 2837, 13647, 13], "temperature": 0.0, "avg_logprob": -0.12696780843183028, "compression_ratio": 1.90234375, "no_speech_prob": 8.013348633539863e-06}, {"id": 200, "seek": 97100, "start": 982.0, "end": 984.0, "text": " Anyway, that's okay.", "tokens": [5684, 11, 300, 311, 1392, 13], "temperature": 0.0, "avg_logprob": -0.12696780843183028, "compression_ratio": 1.90234375, "no_speech_prob": 8.013348633539863e-06}, {"id": 201, "seek": 97100, "start": 984.0, "end": 999.0, "text": " You know like I can like I can hit Ctrl left and right to jump to my different virtual desktops even if I can't move things to different virtual desktops to do it like if I want to move this to different virtual desktop I can press Ctrl up to get, oh it's on the wrong screen.", "tokens": [509, 458, 411, 286, 393, 411, 286, 393, 2045, 35233, 1411, 293, 558, 281, 3012, 281, 452, 819, 6374, 730, 2320, 3370, 754, 498, 286, 393, 380, 1286, 721, 281, 819, 6374, 730, 2320, 3370, 281, 360, 309, 411, 498, 286, 528, 281, 1286, 341, 281, 819, 6374, 14502, 286, 393, 1886, 35233, 493, 281, 483, 11, 1954, 309, 311, 322, 264, 2085, 2568, 13], "temperature": 0.0, "avg_logprob": -0.12696780843183028, "compression_ratio": 1.90234375, "no_speech_prob": 8.013348633539863e-06}, {"id": 202, "seek": 99900, "start": 999.0, "end": 1009.0, "text": " Honestly works I can press Ctrl up to bring up mission control and then I can like drag it to the other desktop, which is a bit clunky but yeah.", "tokens": [12348, 1985, 286, 393, 1886, 35233, 493, 281, 1565, 493, 4447, 1969, 293, 550, 286, 393, 411, 5286, 309, 281, 264, 661, 14502, 11, 597, 307, 257, 857, 596, 25837, 457, 1338, 13], "temperature": 0.0, "avg_logprob": -0.20645858395484187, "compression_ratio": 1.4, "no_speech_prob": 2.668273009476252e-05}, {"id": 203, "seek": 99900, "start": 1009.0, "end": 1013.0, "text": " How do you figure out how the UI works like.", "tokens": [1012, 360, 291, 2573, 484, 577, 264, 15682, 1985, 411, 13], "temperature": 0.0, "avg_logprob": -0.20645858395484187, "compression_ratio": 1.4, "no_speech_prob": 2.668273009476252e-05}, {"id": 204, "seek": 99900, "start": 1013.0, "end": 1017.0, "text": " When I, that's a great question I.", "tokens": [1133, 286, 11, 300, 311, 257, 869, 1168, 286, 13], "temperature": 0.0, "avg_logprob": -0.20645858395484187, "compression_ratio": 1.4, "no_speech_prob": 2.668273009476252e-05}, {"id": 205, "seek": 101700, "start": 1017.0, "end": 1030.0, "text": " It's not easy right like I. So, part of me kind of thinking maybe I'm giving up on Windows was thinking okay well maybe I should act like this literally last weekend as if you like where we're cash probably learn to use the Ubuntu desktop environment, rather than just", "tokens": [467, 311, 406, 1858, 558, 411, 286, 13, 407, 11, 644, 295, 385, 733, 295, 1953, 1310, 286, 478, 2902, 493, 322, 8591, 390, 1953, 1392, 731, 1310, 286, 820, 605, 411, 341, 3736, 1036, 6711, 382, 498, 291, 411, 689, 321, 434, 6388, 1391, 1466, 281, 764, 264, 30230, 45605, 14502, 2823, 11, 2831, 813, 445], "temperature": 0.0, "avg_logprob": -0.17266689202724358, "compression_ratio": 1.760942760942761, "no_speech_prob": 6.048197519703535e-06}, {"id": 206, "seek": 101700, "start": 1030.0, "end": 1033.0, "text": " doing everything in the terminal.", "tokens": [884, 1203, 294, 264, 14709, 13], "temperature": 0.0, "avg_logprob": -0.17266689202724358, "compression_ratio": 1.760942760942761, "no_speech_prob": 6.048197519703535e-06}, {"id": 207, "seek": 101700, "start": 1033.0, "end": 1046.0, "text": " So partly it's knowing like what kind of features ought to exist and what they generally get called. So, you know, things like what Mac calls mission control is generally called virtual desktops, you know so learning so.", "tokens": [407, 17031, 309, 311, 5276, 411, 437, 733, 295, 4122, 13416, 281, 2514, 293, 437, 436, 5101, 483, 1219, 13, 407, 11, 291, 458, 11, 721, 411, 437, 5707, 5498, 4447, 1969, 307, 5101, 1219, 6374, 730, 2320, 3370, 11, 291, 458, 370, 2539, 370, 13], "temperature": 0.0, "avg_logprob": -0.17266689202724358, "compression_ratio": 1.760942760942761, "no_speech_prob": 6.048197519703535e-06}, {"id": 208, "seek": 104600, "start": 1046.0, "end": 1057.0, "text": " Learning how to use virtual desktop properly I just googled for you bun to virtual desktop, and then start, you know keyboard shortcuts.", "tokens": [15205, 577, 281, 764, 6374, 14502, 6108, 286, 445, 50061, 1493, 337, 291, 6702, 281, 6374, 14502, 11, 293, 550, 722, 11, 291, 458, 10186, 34620, 13], "temperature": 0.0, "avg_logprob": -0.15428773980391652, "compression_ratio": 1.4303797468354431, "no_speech_prob": 8.137596523738466e-06}, {"id": 209, "seek": 104600, "start": 1057.0, "end": 1061.0, "text": " And, I mean,", "tokens": [400, 11, 286, 914, 11], "temperature": 0.0, "avg_logprob": -0.15428773980391652, "compression_ratio": 1.4303797468354431, "no_speech_prob": 8.137596523738466e-06}, {"id": 210, "seek": 104600, "start": 1061.0, "end": 1069.0, "text": " they've got some pretty decent documentation, I found, so it tells you here.", "tokens": [436, 600, 658, 512, 1238, 8681, 14333, 11, 286, 1352, 11, 370, 309, 5112, 291, 510, 13], "temperature": 0.0, "avg_logprob": -0.15428773980391652, "compression_ratio": 1.4303797468354431, "no_speech_prob": 8.137596523738466e-06}, {"id": 211, "seek": 106900, "start": 1069.0, "end": 1085.0, "text": " So it means the windows key. So yeah Windows page up and Windows page down, which is slightly like not particularly well chosen because a lot of keyboards don't have a page up and page down keyboard on on laptops but generally on laptops if you press", "tokens": [407, 309, 1355, 264, 9309, 2141, 13, 407, 1338, 8591, 3028, 493, 293, 8591, 3028, 760, 11, 597, 307, 4748, 411, 406, 4098, 731, 8614, 570, 257, 688, 295, 47808, 500, 380, 362, 257, 3028, 493, 293, 3028, 760, 10186, 322, 322, 27642, 457, 5101, 322, 27642, 498, 291, 1886], "temperature": 0.0, "avg_logprob": -0.10564667665505711, "compression_ratio": 1.756218905472637, "no_speech_prob": 6.338359071378363e-06}, {"id": 212, "seek": 106900, "start": 1085.0, "end": 1091.0, "text": " function up and down you get the same things this is basically Windows function up and down.", "tokens": [2445, 493, 293, 760, 291, 483, 264, 912, 721, 341, 307, 1936, 8591, 2445, 493, 293, 760, 13], "temperature": 0.0, "avg_logprob": -0.10564667665505711, "compression_ratio": 1.756218905472637, "no_speech_prob": 6.338359071378363e-06}, {"id": 213, "seek": 106900, "start": 1091.0, "end": 1094.0, "text": " And then,", "tokens": [400, 550, 11], "temperature": 0.0, "avg_logprob": -0.10564667665505711, "compression_ratio": 1.756218905472637, "no_speech_prob": 6.338359071378363e-06}, {"id": 214, "seek": 109400, "start": 1094.0, "end": 1100.0, "text": " you know this move window to a different workspace it's you know quite good and so if you just add shift to it it moves the window.", "tokens": [291, 458, 341, 1286, 4910, 281, 257, 819, 32706, 309, 311, 291, 458, 1596, 665, 293, 370, 498, 291, 445, 909, 5513, 281, 309, 309, 6067, 264, 4910, 13], "temperature": 0.0, "avg_logprob": -0.17281124717310856, "compression_ratio": 1.6324786324786325, "no_speech_prob": 9.665633115218952e-06}, {"id": 215, "seek": 109400, "start": 1100.0, "end": 1106.0, "text": " So yeah it's a case of like knowing what the things are called and that they exist then you can search for them.", "tokens": [407, 1338, 309, 311, 257, 1389, 295, 411, 5276, 437, 264, 721, 366, 1219, 293, 300, 436, 2514, 550, 291, 393, 3164, 337, 552, 13], "temperature": 0.0, "avg_logprob": -0.17281124717310856, "compression_ratio": 1.6324786324786325, "no_speech_prob": 9.665633115218952e-06}, {"id": 216, "seek": 109400, "start": 1106.0, "end": 1110.0, "text": " I haven't found a lot of good like,", "tokens": [286, 2378, 380, 1352, 257, 688, 295, 665, 411, 11], "temperature": 0.0, "avg_logprob": -0.17281124717310856, "compression_ratio": 1.6324786324786325, "no_speech_prob": 9.665633115218952e-06}, {"id": 217, "seek": 109400, "start": 1110.0, "end": 1119.0, "text": " here's how to productively work in a graphical windowing environment into 22 kind of material that's.", "tokens": [510, 311, 577, 281, 1674, 3413, 589, 294, 257, 35942, 4910, 278, 2823, 666, 5853, 733, 295, 2527, 300, 311, 13], "temperature": 0.0, "avg_logprob": -0.17281124717310856, "compression_ratio": 1.6324786324786325, "no_speech_prob": 9.665633115218952e-06}, {"id": 218, "seek": 111900, "start": 1119.0, "end": 1124.0, "text": " It probably must exist somewhere but I haven't found it.", "tokens": [467, 1391, 1633, 2514, 4079, 457, 286, 2378, 380, 1352, 309, 13], "temperature": 0.0, "avg_logprob": -0.08624025251044602, "compression_ratio": 1.4850299401197604, "no_speech_prob": 0.0002731431450229138}, {"id": 219, "seek": 111900, "start": 1124.0, "end": 1137.0, "text": " That's what defeated me when I got a marker myself I just couldn't figure out how to use it in a way that felt comfortable to me and I couldn't find the information in an easy to follow away.", "tokens": [663, 311, 437, 15563, 385, 562, 286, 658, 257, 15247, 2059, 286, 445, 2809, 380, 2573, 484, 577, 281, 764, 309, 294, 257, 636, 300, 2762, 4619, 281, 385, 293, 286, 2809, 380, 915, 264, 1589, 294, 364, 1858, 281, 1524, 1314, 13], "temperature": 0.0, "avg_logprob": -0.08624025251044602, "compression_ratio": 1.4850299401197604, "no_speech_prob": 0.0002731431450229138}, {"id": 220, "seek": 113700, "start": 1137.0, "end": 1153.0, "text": " And I guess one observation that I have here is when when you talk to somebody who's just starting to learn to program or starting to do machine learning they always ask that question, which is the one programming language I should learn,", "tokens": [400, 286, 2041, 472, 14816, 300, 286, 362, 510, 307, 562, 562, 291, 751, 281, 2618, 567, 311, 445, 2891, 281, 1466, 281, 1461, 420, 2891, 281, 360, 3479, 2539, 436, 1009, 1029, 300, 1168, 11, 597, 307, 264, 472, 9410, 2856, 286, 820, 1466, 11], "temperature": 0.0, "avg_logprob": -0.12420597829316792, "compression_ratio": 1.7198067632850242, "no_speech_prob": 0.00015482015442103148}, {"id": 221, "seek": 113700, "start": 1153.0, "end": 1162.0, "text": " and you know which is the one library that I should learn and people spend two weeks, trying to answer this question.", "tokens": [293, 291, 458, 597, 307, 264, 472, 6405, 300, 286, 820, 1466, 293, 561, 3496, 732, 3259, 11, 1382, 281, 1867, 341, 1168, 13], "temperature": 0.0, "avg_logprob": -0.12420597829316792, "compression_ratio": 1.7198067632850242, "no_speech_prob": 0.00015482015442103148}, {"id": 222, "seek": 116200, "start": 1162.0, "end": 1178.0, "text": " You know, in reality it is just start with something, anything, ideally something that is geared towards people starting out but you know if you do hang around that field you will learn a lot of libraries, that's just the nature of it,", "tokens": [509, 458, 11, 294, 4103, 309, 307, 445, 722, 365, 746, 11, 1340, 11, 22915, 746, 300, 307, 35924, 3030, 561, 2891, 484, 457, 291, 458, 498, 291, 360, 3967, 926, 300, 2519, 291, 486, 1466, 257, 688, 295, 15148, 11, 300, 311, 445, 264, 3687, 295, 309, 11], "temperature": 0.0, "avg_logprob": -0.12093381528501157, "compression_ratio": 1.8818897637795275, "no_speech_prob": 0.0001784910709830001}, {"id": 223, "seek": 116200, "start": 1178.0, "end": 1191.0, "text": " you might have one that you prefer, but you know you will try various things out and maybe it's the same thing with operating systems, you know for part of my life I have been thinking, I have to, you know, just focus on this single operating", "tokens": [291, 1062, 362, 472, 300, 291, 4382, 11, 457, 291, 458, 291, 486, 853, 3683, 721, 484, 293, 1310, 309, 311, 264, 912, 551, 365, 7447, 3652, 11, 291, 458, 337, 644, 295, 452, 993, 286, 362, 668, 1953, 11, 286, 362, 281, 11, 291, 458, 11, 445, 1879, 322, 341, 2167, 7447], "temperature": 0.0, "avg_logprob": -0.12093381528501157, "compression_ratio": 1.8818897637795275, "no_speech_prob": 0.0001784910709830001}, {"id": 224, "seek": 119100, "start": 1191.0, "end": 1208.0, "text": " system and making my home, and at first it was Ubuntu, then it was Windows through no small influence of Jeremy, but maybe it is sort of, yeah you know, if you are a computer user, and you will become a computer user for next X amount of years,", "tokens": [1185, 293, 1455, 452, 1280, 11, 293, 412, 700, 309, 390, 30230, 45605, 11, 550, 309, 390, 8591, 807, 572, 1359, 6503, 295, 17809, 11, 457, 1310, 309, 307, 1333, 295, 11, 1338, 291, 458, 11, 498, 291, 366, 257, 3820, 4195, 11, 293, 291, 486, 1813, 257, 3820, 4195, 337, 958, 1783, 2372, 295, 924, 11], "temperature": 0.0, "avg_logprob": -0.135542275475674, "compression_ratio": 1.515527950310559, "no_speech_prob": 0.0007609330350533128}, {"id": 225, "seek": 120800, "start": 1208.0, "end": 1230.0, "text": " maybe it makes sense to invest some time actually to, you know, try different things and it's also that if you probably attempt to use a Mac, you might become a better Windows user or Ubuntu desktop user, because of, yeah, yeah, absolutely.", "tokens": [1310, 309, 1669, 2020, 281, 1963, 512, 565, 767, 281, 11, 291, 458, 11, 853, 819, 721, 293, 309, 311, 611, 300, 498, 291, 1391, 5217, 281, 764, 257, 5707, 11, 291, 1062, 1813, 257, 1101, 8591, 4195, 420, 30230, 45605, 14502, 4195, 11, 570, 295, 11, 1338, 11, 1338, 11, 3122, 13], "temperature": 0.0, "avg_logprob": -0.13357037764329177, "compression_ratio": 1.5233644859813085, "no_speech_prob": 9.733980550663546e-05}, {"id": 226, "seek": 120800, "start": 1230.0, "end": 1235.0, "text": " Yeah, I mean it's like using multiple programming languages I think it's a good idea.", "tokens": [865, 11, 286, 914, 309, 311, 411, 1228, 3866, 9410, 8650, 286, 519, 309, 311, 257, 665, 1558, 13], "temperature": 0.0, "avg_logprob": -0.13357037764329177, "compression_ratio": 1.5233644859813085, "no_speech_prob": 9.733980550663546e-05}, {"id": 227, "seek": 123500, "start": 1235.0, "end": 1240.0, "text": " And just try to be good at each of them. Yeah, I think that's fair.", "tokens": [400, 445, 853, 281, 312, 665, 412, 1184, 295, 552, 13, 865, 11, 286, 519, 300, 311, 3143, 13], "temperature": 0.0, "avg_logprob": -0.16739352544148764, "compression_ratio": 1.5791666666666666, "no_speech_prob": 6.107141234679148e-05}, {"id": 228, "seek": 123500, "start": 1240.0, "end": 1248.0, "text": " Okay, I see people putting stuff in the chat. All right, well I see them in Marty I know you guys can both talk so you can actually say yes.", "tokens": [1033, 11, 286, 536, 561, 3372, 1507, 294, 264, 5081, 13, 1057, 558, 11, 731, 286, 536, 552, 294, 29192, 286, 458, 291, 1074, 393, 1293, 751, 370, 291, 393, 767, 584, 2086, 13], "temperature": 0.0, "avg_logprob": -0.16739352544148764, "compression_ratio": 1.5791666666666666, "no_speech_prob": 6.107141234679148e-05}, {"id": 229, "seek": 123500, "start": 1248.0, "end": 1255.0, "text": " Marty asked what Mac I got. I just got a, well, the one I'm on right now is a Mac mini M1.", "tokens": [29192, 2351, 437, 5707, 286, 658, 13, 286, 445, 658, 257, 11, 731, 11, 264, 472, 286, 478, 322, 558, 586, 307, 257, 5707, 8382, 376, 16, 13], "temperature": 0.0, "avg_logprob": -0.16739352544148764, "compression_ratio": 1.5791666666666666, "no_speech_prob": 6.107141234679148e-05}, {"id": 230, "seek": 123500, "start": 1255.0, "end": 1262.0, "text": " I just bought it a couple of months ago for testing fast AI releases, honestly.", "tokens": [286, 445, 4243, 309, 257, 1916, 295, 2493, 2057, 337, 4997, 2370, 7318, 16952, 11, 6095, 13], "temperature": 0.0, "avg_logprob": -0.16739352544148764, "compression_ratio": 1.5791666666666666, "no_speech_prob": 6.107141234679148e-05}, {"id": 231, "seek": 126200, "start": 1262.0, "end": 1267.0, "text": " But then once I plugged it in I figured I should try using it.", "tokens": [583, 550, 1564, 286, 25679, 309, 294, 286, 8932, 286, 820, 853, 1228, 309, 13], "temperature": 0.0, "avg_logprob": -0.2287965810523843, "compression_ratio": 1.2592592592592593, "no_speech_prob": 9.665212928666733e-06}, {"id": 232, "seek": 126200, "start": 1267.0, "end": 1279.0, "text": " And then the laptop I got was just the MacBook Air M2, 512 gig drive.", "tokens": [400, 550, 264, 10732, 286, 658, 390, 445, 264, 31737, 5774, 376, 17, 11, 1025, 4762, 8741, 3332, 13], "temperature": 0.0, "avg_logprob": -0.2287965810523843, "compression_ratio": 1.2592592592592593, "no_speech_prob": 9.665212928666733e-06}, {"id": 233, "seek": 126200, "start": 1279.0, "end": 1282.0, "text": " Just on the basis, yeah sorry, go on.", "tokens": [1449, 322, 264, 5143, 11, 1338, 2597, 11, 352, 322, 13], "temperature": 0.0, "avg_logprob": -0.2287965810523843, "compression_ratio": 1.2592592592592593, "no_speech_prob": 9.665212928666733e-06}, {"id": 234, "seek": 128200, "start": 1282.0, "end": 1294.0, "text": " I was changing topics. Sorry, I put a little link to a handy vocabulary dialogue things that I've been using over the weekend that I found helpful as well.", "tokens": [286, 390, 4473, 8378, 13, 4919, 11, 286, 829, 257, 707, 2113, 281, 257, 13239, 19864, 10221, 721, 300, 286, 600, 668, 1228, 670, 264, 6711, 300, 286, 1352, 4961, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.2733279267946879, "compression_ratio": 1.3065693430656935, "no_speech_prob": 1.1477909538371023e-05}, {"id": 235, "seek": 128200, "start": 1294.0, "end": 1305.0, "text": " I will share.", "tokens": [286, 486, 2073, 13], "temperature": 0.0, "avg_logprob": -0.2733279267946879, "compression_ratio": 1.3065693430656935, "no_speech_prob": 1.1477909538371023e-05}, {"id": 236, "seek": 128200, "start": 1305.0, "end": 1308.0, "text": " This one.", "tokens": [639, 472, 13], "temperature": 0.0, "avg_logprob": -0.2733279267946879, "compression_ratio": 1.3065693430656935, "no_speech_prob": 1.1477909538371023e-05}, {"id": 237, "seek": 130800, "start": 1308.0, "end": 1324.0, "text": " Yeah, so it kind of gives you your monadic versus didactic names, those links the documentations tells you kind of what they are too. So I found it helpful.", "tokens": [865, 11, 370, 309, 733, 295, 2709, 291, 428, 1108, 43341, 5717, 630, 19892, 5288, 11, 729, 6123, 264, 4166, 763, 5112, 291, 733, 295, 437, 436, 366, 886, 13, 407, 286, 1352, 309, 4961, 13], "temperature": 0.0, "avg_logprob": -0.3116880614182045, "compression_ratio": 1.3355704697986577, "no_speech_prob": 2.4297030904563144e-05}, {"id": 238, "seek": 130800, "start": 1324.0, "end": 1328.0, "text": " Great.", "tokens": [3769, 13], "temperature": 0.0, "avg_logprob": -0.3116880614182045, "compression_ratio": 1.3355704697986577, "no_speech_prob": 2.4297030904563144e-05}, {"id": 239, "seek": 130800, "start": 1328.0, "end": 1329.0, "text": " Sweet.", "tokens": [14653, 13], "temperature": 0.0, "avg_logprob": -0.3116880614182045, "compression_ratio": 1.3355704697986577, "no_speech_prob": 2.4297030904563144e-05}, {"id": 240, "seek": 130800, "start": 1329.0, "end": 1333.0, "text": " I'm with you so I recognize.", "tokens": [286, 478, 365, 291, 370, 286, 5521, 13], "temperature": 0.0, "avg_logprob": -0.3116880614182045, "compression_ratio": 1.3355704697986577, "no_speech_prob": 2.4297030904563144e-05}, {"id": 241, "seek": 133300, "start": 1333.0, "end": 1340.0, "text": " I'm not sure the double alphas and double omegas. Yeah, so we'll talk about this in a moment.", "tokens": [286, 478, 406, 988, 264, 3834, 419, 7485, 293, 3834, 3406, 1146, 296, 13, 865, 11, 370, 321, 603, 751, 466, 341, 294, 257, 1623, 13], "temperature": 0.0, "avg_logprob": -0.3780615163403888, "compression_ratio": 1.2272727272727273, "no_speech_prob": 0.00010542243398958817}, {"id": 242, "seek": 133300, "start": 1340.0, "end": 1344.0, "text": " And then, Wasim will also share this one.", "tokens": [400, 550, 11, 3027, 332, 486, 611, 2073, 341, 472, 13], "temperature": 0.0, "avg_logprob": -0.3780615163403888, "compression_ratio": 1.2272727272727273, "no_speech_prob": 0.00010542243398958817}, {"id": 243, "seek": 134400, "start": 1344.0, "end": 1363.0, "text": " Oh, so I also use Windows for a long time and I don't now I use Mac. I don't use most of the like gestures and the way that they expect you to do things I think I just keep like one window with lots of, or one virtual desktop with lots of windows.", "tokens": [876, 11, 370, 286, 611, 764, 8591, 337, 257, 938, 565, 293, 286, 500, 380, 586, 286, 764, 5707, 13, 286, 500, 380, 764, 881, 295, 264, 411, 28475, 293, 264, 636, 300, 436, 2066, 291, 281, 360, 721, 286, 519, 286, 445, 1066, 411, 472, 4910, 365, 3195, 295, 11, 420, 472, 6374, 14502, 365, 3195, 295, 9309, 13], "temperature": 0.0, "avg_logprob": -0.1042463481426239, "compression_ratio": 1.5246913580246915, "no_speech_prob": 3.4165448596468195e-05}, {"id": 244, "seek": 136300, "start": 1363.0, "end": 1378.0, "text": " And then I'll tab between them and use rectangle to like send windows to like the top left or the left or whatever. It's quite cool.", "tokens": [400, 550, 286, 603, 4421, 1296, 552, 293, 764, 21930, 281, 411, 2845, 9309, 281, 411, 264, 1192, 1411, 420, 264, 1411, 420, 2035, 13, 467, 311, 1596, 1627, 13], "temperature": 0.0, "avg_logprob": -0.19882865513072295, "compression_ratio": 1.2941176470588236, "no_speech_prob": 1.721904664009344e-05}, {"id": 245, "seek": 137800, "start": 1378.0, "end": 1402.0, "text": " Which I didn't immediately find but once I found it, it helped was command tab or Windows tab switches between applications, but to switch between windows within applications, it's command backtick, which is not something you would necessarily find by mistake.", "tokens": [3013, 286, 994, 380, 4258, 915, 457, 1564, 286, 1352, 309, 11, 309, 4254, 390, 5622, 4421, 420, 8591, 4421, 19458, 1296, 5821, 11, 457, 281, 3679, 1296, 9309, 1951, 5821, 11, 309, 311, 5622, 646, 83, 618, 11, 597, 307, 406, 746, 291, 576, 4725, 915, 538, 6146, 13], "temperature": 0.0, "avg_logprob": -0.20839317509385405, "compression_ratio": 1.5932203389830508, "no_speech_prob": 8.265724318334833e-06}, {"id": 246, "seek": 137800, "start": 1402.0, "end": 1407.0, "text": " That's quite helpful.", "tokens": [663, 311, 1596, 4961, 13], "temperature": 0.0, "avg_logprob": -0.20839317509385405, "compression_ratio": 1.5932203389830508, "no_speech_prob": 8.265724318334833e-06}, {"id": 247, "seek": 140700, "start": 1407.0, "end": 1416.0, "text": " I'm using a Microsoft keyboard so I still have a Windows key. I'll try to remember to call it command.", "tokens": [286, 478, 1228, 257, 8116, 10186, 370, 286, 920, 362, 257, 8591, 2141, 13, 286, 603, 853, 281, 1604, 281, 818, 309, 5622, 13], "temperature": 0.0, "avg_logprob": -0.1415185034275055, "compression_ratio": 1.417142857142857, "no_speech_prob": 1.0287149052601308e-05}, {"id": 248, "seek": 140700, "start": 1416.0, "end": 1424.0, "text": " Yeah, I always try and have my screens maximize so I can switch between windows and terrible at sticking to that rule. Yeah.", "tokens": [865, 11, 286, 1009, 853, 293, 362, 452, 11171, 19874, 370, 286, 393, 3679, 1296, 9309, 293, 6237, 412, 13465, 281, 300, 4978, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.1415185034275055, "compression_ratio": 1.417142857142857, "no_speech_prob": 1.0287149052601308e-05}, {"id": 249, "seek": 140700, "start": 1424.0, "end": 1428.0, "text": " Oh, then other news.", "tokens": [876, 11, 550, 661, 2583, 13], "temperature": 0.0, "avg_logprob": -0.1415185034275055, "compression_ratio": 1.417142857142857, "no_speech_prob": 1.0287149052601308e-05}, {"id": 250, "seek": 142800, "start": 1428.0, "end": 1438.0, "text": " Oh, yeah, so these are ugly blank lines we have in our", "tokens": [876, 11, 1338, 11, 370, 613, 366, 12246, 8247, 3876, 321, 362, 294, 527], "temperature": 0.0, "avg_logprob": -0.25080600278130893, "compression_ratio": 1.0416666666666667, "no_speech_prob": 2.2252340841077967e-06}, {"id": 251, "seek": 142800, "start": 1438.0, "end": 1442.0, "text": " page", "tokens": [3028], "temperature": 0.0, "avg_logprob": -0.25080600278130893, "compression_ratio": 1.0416666666666667, "no_speech_prob": 2.2252340841077967e-06}, {"id": 252, "seek": 142800, "start": 1442.0, "end": 1447.0, "text": " caused by", "tokens": [7008, 538], "temperature": 0.0, "avg_logprob": -0.25080600278130893, "compression_ratio": 1.0416666666666667, "no_speech_prob": 2.2252340841077967e-06}, {"id": 253, "seek": 142800, "start": 1447.0, "end": 1450.0, "text": " this,", "tokens": [341, 11], "temperature": 0.0, "avg_logprob": -0.25080600278130893, "compression_ratio": 1.0416666666666667, "no_speech_prob": 2.2252340841077967e-06}, {"id": 254, "seek": 145000, "start": 1450.0, "end": 1464.0, "text": " which was actually added by the APL dialogue kernel, so I contacted them and told them that they shouldn't be adding forced styling into elements because it's impossible for us to make it look good.", "tokens": [597, 390, 767, 3869, 538, 264, 5372, 43, 10221, 28256, 11, 370, 286, 21546, 552, 293, 1907, 552, 300, 436, 4659, 380, 312, 5127, 7579, 27944, 666, 4959, 570, 309, 311, 6243, 337, 505, 281, 652, 309, 574, 665, 13], "temperature": 0.0, "avg_logprob": -0.1984305072140384, "compression_ratio": 1.5114155251141552, "no_speech_prob": 2.4060429950623075e-06}, {"id": 255, "seek": 145000, "start": 1464.0, "end": 1473.0, "text": " So, then I made it worse by accidentally putting line breaks in the middle of them too. Yeah, that's why they was even bigger. Yeah.", "tokens": [407, 11, 550, 286, 1027, 309, 5324, 538, 15715, 3372, 1622, 9857, 294, 264, 2808, 295, 552, 886, 13, 865, 11, 300, 311, 983, 436, 390, 754, 3801, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.1984305072140384, "compression_ratio": 1.5114155251141552, "no_speech_prob": 2.4060429950623075e-06}, {"id": 256, "seek": 147300, "start": 1473.0, "end": 1486.0, "text": " So, yeah, they're going to try and fix it if they can't then we could use MB process credit processor to delete this but he said he's going to check it out next week. So, that was nice of him.", "tokens": [407, 11, 1338, 11, 436, 434, 516, 281, 853, 293, 3191, 309, 498, 436, 393, 380, 550, 321, 727, 764, 28866, 1399, 5397, 15321, 281, 12097, 341, 457, 415, 848, 415, 311, 516, 281, 1520, 309, 484, 958, 1243, 13, 407, 11, 300, 390, 1481, 295, 796, 13], "temperature": 0.0, "avg_logprob": -0.11291871070861817, "compression_ratio": 1.585, "no_speech_prob": 1.7879165170597844e-06}, {"id": 257, "seek": 147300, "start": 1486.0, "end": 1497.0, "text": " And then the other weird thing that happened was actual study group got on the front page of hacker news. So that was weird.", "tokens": [400, 550, 264, 661, 3657, 551, 300, 2011, 390, 3539, 2979, 1594, 658, 322, 264, 1868, 3028, 295, 38155, 2583, 13, 407, 300, 390, 3657, 13], "temperature": 0.0, "avg_logprob": -0.11291871070861817, "compression_ratio": 1.585, "no_speech_prob": 1.7879165170597844e-06}, {"id": 258, "seek": 149700, "start": 1497.0, "end": 1503.0, "text": " A lot of APL stuff seems to get on the front page of a hacker news for reasons I don't understand.", "tokens": [316, 688, 295, 5372, 43, 1507, 2544, 281, 483, 322, 264, 1868, 3028, 295, 257, 38155, 2583, 337, 4112, 286, 500, 380, 1223, 13], "temperature": 0.0, "avg_logprob": -0.25864104220741674, "compression_ratio": 1.4329896907216495, "no_speech_prob": 1.4061216461414006e-05}, {"id": 259, "seek": 149700, "start": 1503.0, "end": 1513.0, "text": " So, is anybody here actually from the second news thread.", "tokens": [407, 11, 307, 4472, 510, 767, 490, 264, 1150, 2583, 7207, 13], "temperature": 0.0, "avg_logprob": -0.25864104220741674, "compression_ratio": 1.4329896907216495, "no_speech_prob": 1.4061216461414006e-05}, {"id": 260, "seek": 149700, "start": 1513.0, "end": 1517.0, "text": " Mainly people I recognize I think so.", "tokens": [47468, 561, 286, 5521, 286, 519, 370, 13], "temperature": 0.0, "avg_logprob": -0.25864104220741674, "compression_ratio": 1.4329896907216495, "no_speech_prob": 1.4061216461414006e-05}, {"id": 261, "seek": 149700, "start": 1517.0, "end": 1524.0, "text": " Yeah, a lot of fast as they're also often gets on hack news, which is good I guess.", "tokens": [865, 11, 257, 688, 295, 2370, 382, 436, 434, 611, 2049, 2170, 322, 10339, 2583, 11, 597, 307, 665, 286, 2041, 13], "temperature": 0.0, "avg_logprob": -0.25864104220741674, "compression_ratio": 1.4329896907216495, "no_speech_prob": 1.4061216461414006e-05}, {"id": 262, "seek": 152400, "start": 1524.0, "end": 1527.0, "text": " Fine.", "tokens": [12024, 13], "temperature": 0.0, "avg_logprob": -0.20736333486196157, "compression_ratio": 1.4946808510638299, "no_speech_prob": 3.5344510251889005e-05}, {"id": 263, "seek": 152400, "start": 1527.0, "end": 1536.0, "text": " Terrible comments, but I said people to know what we're doing.", "tokens": [6564, 4457, 3053, 11, 457, 286, 848, 561, 281, 458, 437, 321, 434, 884, 13], "temperature": 0.0, "avg_logprob": -0.20736333486196157, "compression_ratio": 1.4946808510638299, "no_speech_prob": 3.5344510251889005e-05}, {"id": 264, "seek": 152400, "start": 1536.0, "end": 1550.0, "text": " Yeah, I thought this was an interesting question of like how the hell do you actually do multi line editing. So, as that kind of link to the section of the book, which is in the GUI is basically you can use this.", "tokens": [865, 11, 286, 1194, 341, 390, 364, 1880, 1168, 295, 411, 577, 264, 4921, 360, 291, 767, 360, 4825, 1622, 10000, 13, 407, 11, 382, 300, 733, 295, 2113, 281, 264, 3541, 295, 264, 1446, 11, 597, 307, 294, 264, 17917, 40, 307, 1936, 291, 393, 764, 341, 13], "temperature": 0.0, "avg_logprob": -0.20736333486196157, "compression_ratio": 1.4946808510638299, "no_speech_prob": 3.5344510251889005e-05}, {"id": 265, "seek": 155000, "start": 1550.0, "end": 1556.0, "text": " Close parenthesis, Ed, to open up the editor.", "tokens": [16346, 23350, 9374, 11, 3977, 11, 281, 1269, 493, 264, 9839, 13], "temperature": 0.0, "avg_logprob": -0.2556617892518335, "compression_ratio": 1.3129770992366412, "no_speech_prob": 4.029369392810622e-06}, {"id": 266, "seek": 155000, "start": 1556.0, "end": 1565.0, "text": " And then something I haven't tried apparently is, you can use the input which I guess lets you put a multi line.", "tokens": [400, 550, 746, 286, 2378, 380, 3031, 7970, 307, 11, 291, 393, 764, 264, 4846, 597, 286, 2041, 6653, 291, 829, 257, 4825, 1622, 13], "temperature": 0.0, "avg_logprob": -0.2556617892518335, "compression_ratio": 1.3129770992366412, "no_speech_prob": 4.029369392810622e-06}, {"id": 267, "seek": 155000, "start": 1565.0, "end": 1568.0, "text": " So this does.", "tokens": [407, 341, 775, 13], "temperature": 0.0, "avg_logprob": -0.2556617892518335, "compression_ratio": 1.3129770992366412, "no_speech_prob": 4.029369392810622e-06}, {"id": 268, "seek": 156800, "start": 1568.0, "end": 1581.0, "text": " Yeah, I don't know if that's all the only thing what it does I haven't really looked at the documentation but yeah you can copy that directly in your, I mean you don't know, because it's weird that they say we define it in the notebook.", "tokens": [865, 11, 286, 500, 380, 458, 498, 300, 311, 439, 264, 787, 551, 437, 309, 775, 286, 2378, 380, 534, 2956, 412, 264, 14333, 457, 1338, 291, 393, 5055, 300, 3838, 294, 428, 11, 286, 914, 291, 500, 380, 458, 11, 570, 309, 311, 3657, 300, 436, 584, 321, 6964, 309, 294, 264, 21060, 13], "temperature": 0.0, "avg_logprob": -0.2489011104290302, "compression_ratio": 1.6638297872340426, "no_speech_prob": 6.338964340102393e-06}, {"id": 269, "seek": 156800, "start": 1581.0, "end": 1584.0, "text": " Anyway, yeah, okay.", "tokens": [5684, 11, 1338, 11, 1392, 13], "temperature": 0.0, "avg_logprob": -0.2489011104290302, "compression_ratio": 1.6638297872340426, "no_speech_prob": 6.338964340102393e-06}, {"id": 270, "seek": 156800, "start": 1584.0, "end": 1588.0, "text": " You can put that directly in the rebel and it'll, it'll work.", "tokens": [509, 393, 829, 300, 3838, 294, 264, 28293, 293, 309, 603, 11, 309, 603, 589, 13], "temperature": 0.0, "avg_logprob": -0.2489011104290302, "compression_ratio": 1.6638297872340426, "no_speech_prob": 6.338964340102393e-06}, {"id": 271, "seek": 156800, "start": 1588.0, "end": 1596.0, "text": " And then the other thing I just wanted to kind of show off about is the.", "tokens": [400, 550, 264, 661, 551, 286, 445, 1415, 281, 733, 295, 855, 766, 466, 307, 264, 13], "temperature": 0.0, "avg_logprob": -0.2489011104290302, "compression_ratio": 1.6638297872340426, "no_speech_prob": 6.338964340102393e-06}, {"id": 272, "seek": 159600, "start": 1596.0, "end": 1608.0, "text": " We have hyperlinks in our APL notebook, which goes to the documentation.", "tokens": [492, 362, 9848, 75, 16431, 294, 527, 5372, 43, 21060, 11, 597, 1709, 281, 264, 14333, 13], "temperature": 0.0, "avg_logprob": -0.13118010182534495, "compression_ratio": 1.3496932515337423, "no_speech_prob": 1.0451113666931633e-05}, {"id": 273, "seek": 159600, "start": 1608.0, "end": 1612.0, "text": " And we actually get those for free.", "tokens": [400, 321, 767, 483, 729, 337, 1737, 13], "temperature": 0.0, "avg_logprob": -0.13118010182534495, "compression_ratio": 1.3496932515337423, "no_speech_prob": 1.0451113666931633e-05}, {"id": 274, "seek": 159600, "start": 1612.0, "end": 1621.0, "text": " Thanks to Isaac porting this over to be an NB process repo, which is what NB devs going to be called very soon.", "tokens": [2561, 281, 22505, 2436, 278, 341, 670, 281, 312, 364, 426, 33, 1399, 49040, 11, 597, 307, 437, 426, 33, 1905, 82, 516, 281, 312, 1219, 588, 2321, 13], "temperature": 0.0, "avg_logprob": -0.13118010182534495, "compression_ratio": 1.3496932515337423, "no_speech_prob": 1.0451113666931633e-05}, {"id": 275, "seek": 162100, "start": 1621.0, "end": 1631.0, "text": " And then, who did it somebody then", "tokens": [400, 550, 11, 567, 630, 309, 2618, 550], "temperature": 0.0, "avg_logprob": -0.21692466735839844, "compression_ratio": 1.2743362831858407, "no_speech_prob": 1.69590948644327e-05}, {"id": 276, "seek": 162100, "start": 1631.0, "end": 1635.0, "text": " added the NB dev index to it.", "tokens": [3869, 264, 426, 33, 1905, 8186, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.21692466735839844, "compression_ratio": 1.2743362831858407, "no_speech_prob": 1.69590948644327e-05}, {"id": 277, "seek": 162100, "start": 1635.0, "end": 1639.0, "text": " Where would I find that.", "tokens": [2305, 576, 286, 915, 300, 13], "temperature": 0.0, "avg_logprob": -0.21692466735839844, "compression_ratio": 1.2743362831858407, "no_speech_prob": 1.69590948644327e-05}, {"id": 278, "seek": 162100, "start": 1639.0, "end": 1642.0, "text": " I have to search should be from the last lesson.", "tokens": [286, 362, 281, 3164, 820, 312, 490, 264, 1036, 6898, 13], "temperature": 0.0, "avg_logprob": -0.21692466735839844, "compression_ratio": 1.2743362831858407, "no_speech_prob": 1.69590948644327e-05}, {"id": 279, "seek": 162100, "start": 1642.0, "end": 1646.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.21692466735839844, "compression_ratio": 1.2743362831858407, "no_speech_prob": 1.69590948644327e-05}, {"id": 280, "seek": 164600, "start": 1646.0, "end": 1651.0, "text": " I thought I", "tokens": [286, 1194, 286], "temperature": 0.0, "avg_logprob": -0.4658745016370501, "compression_ratio": 1.2887323943661972, "no_speech_prob": 4.356248609838076e-06}, {"id": 281, "seek": 164600, "start": 1651.0, "end": 1655.0, "text": " got a great programming.", "tokens": [658, 257, 869, 9410, 13], "temperature": 0.0, "avg_logprob": -0.4658745016370501, "compression_ratio": 1.2887323943661972, "no_speech_prob": 4.356248609838076e-06}, {"id": 282, "seek": 164600, "start": 1655.0, "end": 1658.0, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.4658745016370501, "compression_ratio": 1.2887323943661972, "no_speech_prob": 4.356248609838076e-06}, {"id": 283, "seek": 164600, "start": 1658.0, "end": 1662.0, "text": " Last lesson. Quite right, Serata. Thank you.", "tokens": [5264, 6898, 13, 20464, 558, 11, 4210, 3274, 13, 1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.4658745016370501, "compression_ratio": 1.2887323943661972, "no_speech_prob": 4.356248609838076e-06}, {"id": 284, "seek": 164600, "start": 1662.0, "end": 1673.0, "text": " So NB process slash NB dev has uses this thing called NB dev dash index, which basically creates", "tokens": [407, 426, 33, 1399, 17330, 426, 33, 1905, 575, 4960, 341, 551, 1219, 426, 33, 1905, 8240, 8186, 11, 597, 1936, 7829], "temperature": 0.0, "avg_logprob": -0.4658745016370501, "compression_ratio": 1.2887323943661972, "no_speech_prob": 4.356248609838076e-06}, {"id": 285, "seek": 167300, "start": 1673.0, "end": 1679.0, "text": " NB dev numpy", "tokens": [426, 33, 1905, 1031, 8200], "temperature": 0.0, "avg_logprob": -0.2728687922159831, "compression_ratio": 1.4306569343065694, "no_speech_prob": 1.9522489310475066e-05}, {"id": 286, "seek": 167300, "start": 1679.0, "end": 1694.0, "text": " modules, such as NB dev numpy, for example, which if you pip install this basically you automatically, it will automatically hyperlink every numpy keyword to its documentation.", "tokens": [16679, 11, 1270, 382, 426, 33, 1905, 1031, 8200, 11, 337, 1365, 11, 597, 498, 291, 8489, 3625, 341, 1936, 291, 6772, 11, 309, 486, 6772, 9848, 22473, 633, 1031, 8200, 20428, 281, 1080, 14333, 13], "temperature": 0.0, "avg_logprob": -0.2728687922159831, "compression_ratio": 1.4306569343065694, "no_speech_prob": 1.9522489310475066e-05}, {"id": 287, "seek": 167300, "start": 1694.0, "end": 1701.0, "text": " And so", "tokens": [400, 370], "temperature": 0.0, "avg_logprob": -0.2728687922159831, "compression_ratio": 1.4306569343065694, "no_speech_prob": 1.9522489310475066e-05}, {"id": 288, "seek": 170100, "start": 1701.0, "end": 1706.0, "text": " NB added an APL index,", "tokens": [426, 33, 3869, 364, 5372, 43, 8186, 11], "temperature": 0.0, "avg_logprob": -0.23712190714749423, "compression_ratio": 1.1754385964912282, "no_speech_prob": 2.710145417950116e-05}, {"id": 289, "seek": 170100, "start": 1706.0, "end": 1712.0, "text": " which he manually", "tokens": [597, 415, 16945], "temperature": 0.0, "avg_logprob": -0.23712190714749423, "compression_ratio": 1.1754385964912282, "no_speech_prob": 2.710145417950116e-05}, {"id": 290, "seek": 170100, "start": 1712.0, "end": 1715.0, "text": " created or semi manually.", "tokens": [2942, 420, 12909, 16945, 13], "temperature": 0.0, "avg_logprob": -0.23712190714749423, "compression_ratio": 1.1754385964912282, "no_speech_prob": 2.710145417950116e-05}, {"id": 291, "seek": 170100, "start": 1715.0, "end": 1718.0, "text": " Just using Python requests.", "tokens": [1449, 1228, 15329, 12475, 13], "temperature": 0.0, "avg_logprob": -0.23712190714749423, "compression_ratio": 1.1754385964912282, "no_speech_prob": 2.710145417950116e-05}, {"id": 292, "seek": 170100, "start": 1718.0, "end": 1723.0, "text": " So yeah, so now, thanks to the magic of", "tokens": [407, 1338, 11, 370, 586, 11, 3231, 281, 264, 5585, 295], "temperature": 0.0, "avg_logprob": -0.23712190714749423, "compression_ratio": 1.1754385964912282, "no_speech_prob": 2.710145417950116e-05}, {"id": 293, "seek": 172300, "start": 1723.0, "end": 1739.0, "text": " nicely decoupled API's, it automatically just worked. So we now have hyperlinked study notes, which I think is very fun.", "tokens": [9594, 979, 263, 15551, 9362, 311, 11, 309, 6772, 445, 2732, 13, 407, 321, 586, 362, 9848, 22473, 292, 2979, 5570, 11, 597, 286, 519, 307, 588, 1019, 13], "temperature": 0.0, "avg_logprob": -0.12790326450182044, "compression_ratio": 1.213740458015267, "no_speech_prob": 6.961196959309746e-06}, {"id": 294, "seek": 172300, "start": 1739.0, "end": 1741.0, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.12790326450182044, "compression_ratio": 1.213740458015267, "no_speech_prob": 6.961196959309746e-06}, {"id": 295, "seek": 172300, "start": 1741.0, "end": 1745.0, "text": " Let's talk about operators.", "tokens": [961, 311, 751, 466, 19077, 13], "temperature": 0.0, "avg_logprob": -0.12790326450182044, "compression_ratio": 1.213740458015267, "no_speech_prob": 6.961196959309746e-06}, {"id": 296, "seek": 174500, "start": 1745.0, "end": 1753.0, "text": " Oh yes, we were first going to talk about decorators.", "tokens": [876, 2086, 11, 321, 645, 700, 516, 281, 751, 466, 7919, 3391, 13], "temperature": 0.0, "avg_logprob": -0.18202895209902809, "compression_ratio": 0.9047619047619048, "no_speech_prob": 1.7059028323274106e-06}, {"id": 297, "seek": 174500, "start": 1753.0, "end": 1756.0, "text": " So,", "tokens": [407, 11], "temperature": 0.0, "avg_logprob": -0.18202895209902809, "compression_ratio": 0.9047619047619048, "no_speech_prob": 1.7059028323274106e-06}, {"id": 298, "seek": 175600, "start": 1756.0, "end": 1775.0, "text": " let's create a function. Add one.", "tokens": [718, 311, 1884, 257, 2445, 13, 5349, 472, 13], "temperature": 0.0, "avg_logprob": -0.13554403895423525, "compression_ratio": 1.303030303030303, "no_speech_prob": 8.138707016769331e-06}, {"id": 299, "seek": 175600, "start": 1775.0, "end": 1779.0, "text": " Okay, and so we're going to pass it off something to add one to.", "tokens": [1033, 11, 293, 370, 321, 434, 516, 281, 1320, 309, 766, 746, 281, 909, 472, 281, 13], "temperature": 0.0, "avg_logprob": -0.13554403895423525, "compression_ratio": 1.303030303030303, "no_speech_prob": 8.138707016769331e-06}, {"id": 300, "seek": 175600, "start": 1779.0, "end": 1782.0, "text": " Okay, so there's our function.", "tokens": [1033, 11, 370, 456, 311, 527, 2445, 13], "temperature": 0.0, "avg_logprob": -0.13554403895423525, "compression_ratio": 1.303030303030303, "no_speech_prob": 8.138707016769331e-06}, {"id": 301, "seek": 178200, "start": 1782.0, "end": 1787.0, "text": " Now, let's create another function,", "tokens": [823, 11, 718, 311, 1884, 1071, 2445, 11], "temperature": 0.0, "avg_logprob": -0.17447645523968866, "compression_ratio": 1.6923076923076923, "no_speech_prob": 3.966935764765367e-06}, {"id": 302, "seek": 178200, "start": 1787.0, "end": 1790.0, "text": " which", "tokens": [597], "temperature": 0.0, "avg_logprob": -0.17447645523968866, "compression_ratio": 1.6923076923076923, "no_speech_prob": 3.966935764765367e-06}, {"id": 303, "seek": 178200, "start": 1790.0, "end": 1796.0, "text": " are called log arcs. This is a function which is going to take a function.", "tokens": [366, 1219, 3565, 10346, 82, 13, 639, 307, 257, 2445, 597, 307, 516, 281, 747, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.17447645523968866, "compression_ratio": 1.6923076923076923, "no_speech_prob": 3.966935764765367e-06}, {"id": 304, "seek": 178200, "start": 1796.0, "end": 1805.0, "text": " And it's going to return another function and the function it returns will be one that calls this function,", "tokens": [400, 309, 311, 516, 281, 2736, 1071, 2445, 293, 264, 2445, 309, 11247, 486, 312, 472, 300, 5498, 341, 2445, 11], "temperature": 0.0, "avg_logprob": -0.17447645523968866, "compression_ratio": 1.6923076923076923, "no_speech_prob": 3.966935764765367e-06}, {"id": 305, "seek": 178200, "start": 1805.0, "end": 1810.0, "text": " but prints the arguments it gets first.", "tokens": [457, 22305, 264, 12869, 309, 2170, 700, 13], "temperature": 0.0, "avg_logprob": -0.17447645523968866, "compression_ratio": 1.6923076923076923, "no_speech_prob": 3.966935764765367e-06}, {"id": 306, "seek": 181000, "start": 1810.0, "end": 1819.0, "text": " So to start with, let's do something really ridiculously easy, which is just to return the function is passed. So we could create something", "tokens": [407, 281, 722, 365, 11, 718, 311, 360, 746, 534, 41358, 1858, 11, 597, 307, 445, 281, 2736, 264, 2445, 307, 4678, 13, 407, 321, 727, 1884, 746], "temperature": 0.0, "avg_logprob": -0.1465285148149655, "compression_ratio": 1.664864864864865, "no_speech_prob": 2.260295104861143e-06}, {"id": 307, "seek": 181000, "start": 1819.0, "end": 1825.0, "text": " called G, which equals log arcs of add one.", "tokens": [1219, 460, 11, 597, 6915, 3565, 10346, 82, 295, 909, 472, 13], "temperature": 0.0, "avg_logprob": -0.1465285148149655, "compression_ratio": 1.664864864864865, "no_speech_prob": 2.260295104861143e-06}, {"id": 308, "seek": 181000, "start": 1825.0, "end": 1829.0, "text": " And so log arcs is going to be passed this function.", "tokens": [400, 370, 3565, 10346, 82, 307, 516, 281, 312, 4678, 341, 2445, 13], "temperature": 0.0, "avg_logprob": -0.1465285148149655, "compression_ratio": 1.664864864864865, "no_speech_prob": 2.260295104861143e-06}, {"id": 309, "seek": 181000, "start": 1829.0, "end": 1836.0, "text": " And this return it. And so G will be exactly the same thing as add one.", "tokens": [400, 341, 2736, 309, 13, 400, 370, 460, 486, 312, 2293, 264, 912, 551, 382, 909, 472, 13], "temperature": 0.0, "avg_logprob": -0.1465285148149655, "compression_ratio": 1.664864864864865, "no_speech_prob": 2.260295104861143e-06}, {"id": 310, "seek": 183600, "start": 1836.0, "end": 1840.0, "text": " Makes sense so far. Okay.", "tokens": [25245, 2020, 370, 1400, 13, 1033, 13], "temperature": 0.0, "avg_logprob": -0.2241783875685472, "compression_ratio": 1.056338028169014, "no_speech_prob": 1.4508077583741397e-05}, {"id": 311, "seek": 183600, "start": 1840.0, "end": 1844.0, "text": " So,", "tokens": [407, 11], "temperature": 0.0, "avg_logprob": -0.2241783875685472, "compression_ratio": 1.056338028169014, "no_speech_prob": 1.4508077583741397e-05}, {"id": 312, "seek": 183600, "start": 1844.0, "end": 1857.0, "text": " we could define a function inside a function,", "tokens": [321, 727, 6964, 257, 2445, 1854, 257, 2445, 11], "temperature": 0.0, "avg_logprob": -0.2241783875685472, "compression_ratio": 1.056338028169014, "no_speech_prob": 1.4508077583741397e-05}, {"id": 313, "seek": 185700, "start": 1857.0, "end": 1866.0, "text": " which is going to take some arguments and some keyword arguments.", "tokens": [597, 307, 516, 281, 747, 512, 12869, 293, 512, 20428, 12869, 13], "temperature": 0.0, "avg_logprob": -0.08652590115865072, "compression_ratio": 1.2045454545454546, "no_speech_prob": 2.443957328068791e-06}, {"id": 314, "seek": 185700, "start": 1866.0, "end": 1871.0, "text": " And it will simply pass them along", "tokens": [400, 309, 486, 2935, 1320, 552, 2051], "temperature": 0.0, "avg_logprob": -0.08652590115865072, "compression_ratio": 1.2045454545454546, "no_speech_prob": 2.443957328068791e-06}, {"id": 315, "seek": 185700, "start": 1871.0, "end": 1876.0, "text": " to F.", "tokens": [281, 479, 13], "temperature": 0.0, "avg_logprob": -0.08652590115865072, "compression_ratio": 1.2045454545454546, "no_speech_prob": 2.443957328068791e-06}, {"id": 316, "seek": 187600, "start": 1876.0, "end": 1887.0, "text": " So now when I call log arcs, it's going to create a new function called underscore inner or actually called like well, yeah, we'll call it underscore inner.", "tokens": [407, 586, 562, 286, 818, 3565, 10346, 82, 11, 309, 311, 516, 281, 1884, 257, 777, 2445, 1219, 37556, 7284, 420, 767, 1219, 411, 731, 11, 1338, 11, 321, 603, 818, 309, 37556, 7284, 13], "temperature": 0.0, "avg_logprob": -0.15749717403102564, "compression_ratio": 1.5376344086021505, "no_speech_prob": 6.78670687648264e-07}, {"id": 317, "seek": 187600, "start": 1887.0, "end": 1897.0, "text": " And that function will return F. So it depends what we pass to it. So this is going to do exactly the same thing as before.", "tokens": [400, 300, 2445, 486, 2736, 479, 13, 407, 309, 5946, 437, 321, 1320, 281, 309, 13, 407, 341, 307, 516, 281, 360, 2293, 264, 912, 551, 382, 949, 13], "temperature": 0.0, "avg_logprob": -0.15749717403102564, "compression_ratio": 1.5376344086021505, "no_speech_prob": 6.78670687648264e-07}, {"id": 318, "seek": 187600, "start": 1897.0, "end": 1901.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.15749717403102564, "compression_ratio": 1.5376344086021505, "no_speech_prob": 6.78670687648264e-07}, {"id": 319, "seek": 190100, "start": 1901.0, "end": 1907.0, "text": " But then what we could do is say print", "tokens": [583, 550, 437, 321, 727, 360, 307, 584, 4482], "temperature": 0.0, "avg_logprob": -0.20159339904785156, "compression_ratio": 1.3383458646616542, "no_speech_prob": 2.058017344097607e-06}, {"id": 320, "seek": 190100, "start": 1907.0, "end": 1913.0, "text": " received arcs arcs", "tokens": [4613, 10346, 82, 10346, 82], "temperature": 0.0, "avg_logprob": -0.20159339904785156, "compression_ratio": 1.3383458646616542, "no_speech_prob": 2.058017344097607e-06}, {"id": 321, "seek": 190100, "start": 1913.0, "end": 1919.0, "text": " arcs", "tokens": [10346, 82], "temperature": 0.0, "avg_logprob": -0.20159339904785156, "compression_ratio": 1.3383458646616542, "no_speech_prob": 2.058017344097607e-06}, {"id": 322, "seek": 190100, "start": 1919.0, "end": 1925.0, "text": " So now we could do things other than just running the function.", "tokens": [407, 586, 321, 727, 360, 721, 661, 813, 445, 2614, 264, 2445, 13], "temperature": 0.0, "avg_logprob": -0.20159339904785156, "compression_ratio": 1.3383458646616542, "no_speech_prob": 2.058017344097607e-06}, {"id": 323, "seek": 190100, "start": 1925.0, "end": 1929.0, "text": " I didn't actually say G, that was my mistake. Okay.", "tokens": [286, 994, 380, 767, 584, 460, 11, 300, 390, 452, 6146, 13, 1033, 13], "temperature": 0.0, "avg_logprob": -0.20159339904785156, "compression_ratio": 1.3383458646616542, "no_speech_prob": 2.058017344097607e-06}, {"id": 324, "seek": 192900, "start": 1929.0, "end": 1937.0, "text": " And so you can see now it's done the same thing that the function did before, but it's doing something else as well. Does that make sense so far?", "tokens": [400, 370, 291, 393, 536, 586, 309, 311, 1096, 264, 912, 551, 300, 264, 2445, 630, 949, 11, 457, 309, 311, 884, 746, 1646, 382, 731, 13, 4402, 300, 652, 2020, 370, 1400, 30], "temperature": 0.0, "avg_logprob": -0.09340094411095907, "compression_ratio": 1.6651785714285714, "no_speech_prob": 7.29614566807868e-06}, {"id": 325, "seek": 192900, "start": 1937.0, "end": 1943.0, "text": " So this is a function which takes a function and returns a function.", "tokens": [407, 341, 307, 257, 2445, 597, 2516, 257, 2445, 293, 11247, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.09340094411095907, "compression_ratio": 1.6651785714285714, "no_speech_prob": 7.29614566807868e-06}, {"id": 326, "seek": 192900, "start": 1943.0, "end": 1954.0, "text": " And so people often seem to call these higher order functions, which I find confusing or not particularly helpful because it just functions. But there you go.", "tokens": [400, 370, 561, 2049, 1643, 281, 818, 613, 2946, 1668, 6828, 11, 597, 286, 915, 13181, 420, 406, 4098, 4961, 570, 309, 445, 6828, 13, 583, 456, 291, 352, 13], "temperature": 0.0, "avg_logprob": -0.09340094411095907, "compression_ratio": 1.6651785714285714, "no_speech_prob": 7.29614566807868e-06}, {"id": 327, "seek": 195400, "start": 1954.0, "end": 1959.0, "text": " So there's a special", "tokens": [407, 456, 311, 257, 2121], "temperature": 0.0, "avg_logprob": -0.10414172490437826, "compression_ratio": 1.696969696969697, "no_speech_prob": 3.187516995240003e-06}, {"id": 328, "seek": 195400, "start": 1959.0, "end": 1972.0, "text": " way of doing this. So if I wanted to create a log version of add one, I would have to do two steps. I'd have to first create add one and then say, you know, create this new version of it and then call that new version.", "tokens": [636, 295, 884, 341, 13, 407, 498, 286, 1415, 281, 1884, 257, 3565, 3037, 295, 909, 472, 11, 286, 576, 362, 281, 360, 732, 4439, 13, 286, 1116, 362, 281, 700, 1884, 909, 472, 293, 550, 584, 11, 291, 458, 11, 1884, 341, 777, 3037, 295, 309, 293, 550, 818, 300, 777, 3037, 13], "temperature": 0.0, "avg_logprob": -0.10414172490437826, "compression_ratio": 1.696969696969697, "no_speech_prob": 3.187516995240003e-06}, {"id": 329, "seek": 195400, "start": 1972.0, "end": 1977.0, "text": " So Python has a special syntax for doing", "tokens": [407, 15329, 575, 257, 2121, 28431, 337, 884], "temperature": 0.0, "avg_logprob": -0.10414172490437826, "compression_ratio": 1.696969696969697, "no_speech_prob": 3.187516995240003e-06}, {"id": 330, "seek": 197700, "start": 1977.0, "end": 1985.0, "text": " these two steps and that special syntax is to, whoopsie dozie,", "tokens": [613, 732, 4439, 293, 300, 2121, 28431, 307, 281, 11, 567, 3370, 414, 360, 3283, 11], "temperature": 0.0, "avg_logprob": -0.22757433462834012, "compression_ratio": 1.6624203821656052, "no_speech_prob": 2.225267053290736e-06}, {"id": 331, "seek": 197700, "start": 1985.0, "end": 1991.0, "text": " is to put at", "tokens": [307, 281, 829, 412], "temperature": 0.0, "avg_logprob": -0.22757433462834012, "compression_ratio": 1.6624203821656052, "no_speech_prob": 2.225267053290736e-06}, {"id": 332, "seek": 197700, "start": 1991.0, "end": 2002.0, "text": " this is a special syntax. And so this syntax, when you put at and a function before the definition of a function is it's going to take the function that's called, which is defined here.", "tokens": [341, 307, 257, 2121, 28431, 13, 400, 370, 341, 28431, 11, 562, 291, 829, 412, 293, 257, 2445, 949, 264, 7123, 295, 257, 2445, 307, 309, 311, 516, 281, 747, 264, 2445, 300, 311, 1219, 11, 597, 307, 7642, 510, 13], "temperature": 0.0, "avg_logprob": -0.22757433462834012, "compression_ratio": 1.6624203821656052, "no_speech_prob": 2.225267053290736e-06}, {"id": 333, "seek": 200200, "start": 2002.0, "end": 2011.0, "text": " It's going to pass it to this function and it's going to replace this with whatever gets returned from it.", "tokens": [467, 311, 516, 281, 1320, 309, 281, 341, 2445, 293, 309, 311, 516, 281, 7406, 341, 365, 2035, 2170, 8752, 490, 309, 13], "temperature": 0.0, "avg_logprob": -0.07951591452773736, "compression_ratio": 1.3953488372093024, "no_speech_prob": 7.571103424197645e-07}, {"id": 334, "seek": 200200, "start": 2011.0, "end": 2017.0, "text": " So this is exactly the same as what I did before. So if I now go add one.", "tokens": [407, 341, 307, 2293, 264, 912, 382, 437, 286, 630, 949, 13, 407, 498, 286, 586, 352, 909, 472, 13], "temperature": 0.0, "avg_logprob": -0.07951591452773736, "compression_ratio": 1.3953488372093024, "no_speech_prob": 7.571103424197645e-07}, {"id": 335, "seek": 201700, "start": 2017.0, "end": 2035.0, "text": " Make sense? So I can now add logging to any function I want to, such as my world changing Malt2 function.", "tokens": [4387, 2020, 30, 407, 286, 393, 586, 909, 27991, 281, 604, 2445, 286, 528, 281, 11, 1270, 382, 452, 1002, 4473, 376, 3198, 17, 2445, 13], "temperature": 0.0, "avg_logprob": -0.20542403813954946, "compression_ratio": 1.1981132075471699, "no_speech_prob": 1.5779411342009553e-06}, {"id": 336, "seek": 201700, "start": 2035.0, "end": 2041.0, "text": " Does that make sense?", "tokens": [4402, 300, 652, 2020, 30], "temperature": 0.0, "avg_logprob": -0.20542403813954946, "compression_ratio": 1.1981132075471699, "no_speech_prob": 1.5779411342009553e-06}, {"id": 337, "seek": 204100, "start": 2041.0, "end": 2049.0, "text": " This is slightly by the by, but something that you can do is", "tokens": [639, 307, 4748, 538, 264, 538, 11, 457, 746, 300, 291, 393, 360, 307], "temperature": 0.0, "avg_logprob": -0.08580630572874155, "compression_ratio": 1.6753246753246753, "no_speech_prob": 4.8602314564050175e-06}, {"id": 338, "seek": 204100, "start": 2049.0, "end": 2058.0, "text": " you don't have to use a function. It just has to be something that's callable. Something that's callable is something that you can put round brackets after.", "tokens": [291, 500, 380, 362, 281, 764, 257, 2445, 13, 467, 445, 575, 281, 312, 746, 300, 311, 818, 712, 13, 6595, 300, 311, 818, 712, 307, 746, 300, 291, 393, 829, 3098, 26179, 934, 13], "temperature": 0.0, "avg_logprob": -0.08580630572874155, "compression_ratio": 1.6753246753246753, "no_speech_prob": 4.8602314564050175e-06}, {"id": 339, "seek": 204100, "start": 2058.0, "end": 2068.0, "text": " So let's say we wanted to change this to", "tokens": [407, 718, 311, 584, 321, 1415, 281, 1319, 341, 281], "temperature": 0.0, "avg_logprob": -0.08580630572874155, "compression_ratio": 1.6753246753246753, "no_speech_prob": 4.8602314564050175e-06}, {"id": 340, "seek": 206800, "start": 2068.0, "end": 2074.0, "text": " with that we wanted to be able to change this this here to some other prefix.", "tokens": [365, 300, 321, 1415, 281, 312, 1075, 281, 1319, 341, 341, 510, 281, 512, 661, 46969, 13], "temperature": 0.0, "avg_logprob": -0.20551999839576515, "compression_ratio": 1.52, "no_speech_prob": 5.0621110858628526e-05}, {"id": 341, "seek": 206800, "start": 2074.0, "end": 2081.0, "text": " So you can do that with a function, but you can actually just do a class. We could create a basis for the class.", "tokens": [407, 291, 393, 360, 300, 365, 257, 2445, 11, 457, 291, 393, 767, 445, 360, 257, 1508, 13, 492, 727, 1884, 257, 5143, 337, 264, 1508, 13], "temperature": 0.0, "avg_logprob": -0.20551999839576515, "compression_ratio": 1.52, "no_speech_prob": 5.0621110858628526e-05}, {"id": 342, "seek": 206800, "start": 2081.0, "end": 2084.0, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.20551999839576515, "compression_ratio": 1.52, "no_speech_prob": 5.0621110858628526e-05}, {"id": 343, "seek": 206800, "start": 2084.0, "end": 2089.0, "text": " And then we could.", "tokens": [400, 550, 321, 727, 13], "temperature": 0.0, "avg_logprob": -0.20551999839576515, "compression_ratio": 1.52, "no_speech_prob": 5.0621110858628526e-05}, {"id": 344, "seek": 206800, "start": 2089.0, "end": 2095.0, "text": " So not many people seem to know this is possible.", "tokens": [407, 406, 867, 561, 1643, 281, 458, 341, 307, 1944, 13], "temperature": 0.0, "avg_logprob": -0.20551999839576515, "compression_ratio": 1.52, "no_speech_prob": 5.0621110858628526e-05}, {"id": 345, "seek": 209500, "start": 2095.0, "end": 2107.0, "text": " I put something in the this is somewhat related, but I put something in the chat that I learned something about S strings that allow you to actually shorten the string a little bit.", "tokens": [286, 829, 746, 294, 264, 341, 307, 8344, 4077, 11, 457, 286, 829, 746, 294, 264, 5081, 300, 286, 3264, 746, 466, 318, 13985, 300, 2089, 291, 281, 767, 39632, 264, 6798, 257, 707, 857, 13], "temperature": 0.0, "avg_logprob": -0.18454622242548693, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.384555798722431e-05}, {"id": 346, "seek": 209500, "start": 2107.0, "end": 2110.0, "text": " Same thing.", "tokens": [10635, 551, 13], "temperature": 0.0, "avg_logprob": -0.18454622242548693, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.384555798722431e-05}, {"id": 347, "seek": 209500, "start": 2110.0, "end": 2113.0, "text": " I found about today.", "tokens": [286, 1352, 466, 965, 13], "temperature": 0.0, "avg_logprob": -0.18454622242548693, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.384555798722431e-05}, {"id": 348, "seek": 209500, "start": 2113.0, "end": 2120.0, "text": " This was only added in somewhat recent Python, but I don't remember which version it was.", "tokens": [639, 390, 787, 3869, 294, 8344, 5162, 15329, 11, 457, 286, 500, 380, 1604, 597, 3037, 309, 390, 13], "temperature": 0.0, "avg_logprob": -0.18454622242548693, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.384555798722431e-05}, {"id": 349, "seek": 212000, "start": 2120.0, "end": 2125.0, "text": " Maybe you can try and figure it out.", "tokens": [2704, 291, 393, 853, 293, 2573, 309, 484, 13], "temperature": 0.0, "avg_logprob": -0.17639878355426553, "compression_ratio": 1.455, "no_speech_prob": 2.2122954760561697e-05}, {"id": 350, "seek": 212000, "start": 2125.0, "end": 2131.0, "text": " Okay, well 3.7 is is 3.6 is a URL. So that means you can safely use this now.", "tokens": [1033, 11, 731, 805, 13, 22, 307, 307, 805, 13, 21, 307, 257, 12905, 13, 407, 300, 1355, 291, 393, 11750, 764, 341, 586, 13], "temperature": 0.0, "avg_logprob": -0.17639878355426553, "compression_ratio": 1.455, "no_speech_prob": 2.2122954760561697e-05}, {"id": 351, "seek": 212000, "start": 2131.0, "end": 2137.0, "text": " I had not been using it because I knew that until at least until recently.", "tokens": [286, 632, 406, 668, 1228, 309, 570, 286, 2586, 300, 1826, 412, 1935, 1826, 3938, 13], "temperature": 0.0, "avg_logprob": -0.17639878355426553, "compression_ratio": 1.455, "no_speech_prob": 2.2122954760561697e-05}, {"id": 352, "seek": 212000, "start": 2137.0, "end": 2143.0, "text": " They were in supported versions that didn't support this, but yeah okay that's great that now exists.", "tokens": [814, 645, 294, 8104, 9606, 300, 994, 380, 1406, 341, 11, 457, 1338, 1392, 300, 311, 869, 300, 586, 8198, 13], "temperature": 0.0, "avg_logprob": -0.17639878355426553, "compression_ratio": 1.455, "no_speech_prob": 2.2122954760561697e-05}, {"id": 353, "seek": 214300, "start": 2143.0, "end": 2153.0, "text": " So we can use it here.", "tokens": [407, 321, 393, 764, 309, 510, 13], "temperature": 0.0, "avg_logprob": -0.2572367986043294, "compression_ratio": 1.3014705882352942, "no_speech_prob": 3.644888784037903e-05}, {"id": 354, "seek": 214300, "start": 2153.0, "end": 2161.0, "text": " And then there's a question from a live thing.", "tokens": [400, 550, 456, 311, 257, 1168, 490, 257, 1621, 551, 13], "temperature": 0.0, "avg_logprob": -0.2572367986043294, "compression_ratio": 1.3014705882352942, "no_speech_prob": 3.644888784037903e-05}, {"id": 355, "seek": 214300, "start": 2161.0, "end": 2167.0, "text": " I'm going to do this and then I'll take a look. Thanks. Let me know. Okay, so we should be able to do this.", "tokens": [286, 478, 516, 281, 360, 341, 293, 550, 286, 603, 747, 257, 574, 13, 2561, 13, 961, 385, 458, 13, 1033, 11, 370, 321, 820, 312, 1075, 281, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.2572367986043294, "compression_ratio": 1.3014705882352942, "no_speech_prob": 3.644888784037903e-05}, {"id": 356, "seek": 216700, "start": 2167.0, "end": 2187.0, "text": " Oh, that's right. I was halfway through fixing this.", "tokens": [876, 11, 300, 311, 558, 13, 286, 390, 15461, 807, 19442, 341, 13], "temperature": 0.0, "avg_logprob": -0.13346620400746664, "compression_ratio": 1.1235955056179776, "no_speech_prob": 7.5271527748554945e-06}, {"id": 357, "seek": 216700, "start": 2187.0, "end": 2189.0, "text": " Okay, let's try that.", "tokens": [1033, 11, 718, 311, 853, 300, 13], "temperature": 0.0, "avg_logprob": -0.13346620400746664, "compression_ratio": 1.1235955056179776, "no_speech_prob": 7.5271527748554945e-06}, {"id": 358, "seek": 216700, "start": 2189.0, "end": 2193.0, "text": " Okay, yep. So that works.", "tokens": [1033, 11, 18633, 13, 407, 300, 1985, 13], "temperature": 0.0, "avg_logprob": -0.13346620400746664, "compression_ratio": 1.1235955056179776, "no_speech_prob": 7.5271527748554945e-06}, {"id": 359, "seek": 219300, "start": 2193.0, "end": 2197.0, "text": " If there's a question from somebody.", "tokens": [759, 456, 311, 257, 1168, 490, 2618, 13], "temperature": 0.0, "avg_logprob": -0.17438216087145683, "compression_ratio": 1.6331658291457287, "no_speech_prob": 3.4779204725055024e-05}, {"id": 360, "seek": 219300, "start": 2197.0, "end": 2204.0, "text": " I can read it out. What does the conventional starting function name underscore signify. Oh yeah.", "tokens": [286, 393, 1401, 309, 484, 13, 708, 775, 264, 16011, 2891, 2445, 1315, 37556, 1465, 2505, 13, 876, 1338, 13], "temperature": 0.0, "avg_logprob": -0.17438216087145683, "compression_ratio": 1.6331658291457287, "no_speech_prob": 3.4779204725055024e-05}, {"id": 361, "seek": 219300, "start": 2204.0, "end": 2208.0, "text": " When we start a function name with an underscore.", "tokens": [1133, 321, 722, 257, 2445, 1315, 365, 364, 37556, 13], "temperature": 0.0, "avg_logprob": -0.17438216087145683, "compression_ratio": 1.6331658291457287, "no_speech_prob": 3.4779204725055024e-05}, {"id": 362, "seek": 219300, "start": 2208.0, "end": 2219.0, "text": " It's, it generally means it's private. It generally means it's not something we expect people to be calling from from outside of this place.", "tokens": [467, 311, 11, 309, 5101, 1355, 309, 311, 4551, 13, 467, 5101, 1355, 309, 311, 406, 746, 321, 2066, 561, 281, 312, 5141, 490, 490, 2380, 295, 341, 1081, 13], "temperature": 0.0, "avg_logprob": -0.17438216087145683, "compression_ratio": 1.6331658291457287, "no_speech_prob": 3.4779204725055024e-05}, {"id": 363, "seek": 221900, "start": 2219.0, "end": 2227.0, "text": " In NB dev things that start with underscore by default not exported, so they don't appear in Dundall.", "tokens": [682, 426, 33, 1905, 721, 300, 722, 365, 37556, 538, 7576, 406, 42055, 11, 370, 436, 500, 380, 4204, 294, 413, 997, 336, 13], "temperature": 0.0, "avg_logprob": -0.22367803752422333, "compression_ratio": 1.5202312138728324, "no_speech_prob": 4.710783741757041e-06}, {"id": 364, "seek": 221900, "start": 2227.0, "end": 2239.0, "text": " Starting and ending with two underscores is a special Python thing which means it's what they, it's a magic method it's a magic that will automatically be called", "tokens": [16217, 293, 8121, 365, 732, 16692, 66, 2706, 307, 257, 2121, 15329, 551, 597, 1355, 309, 311, 437, 436, 11, 309, 311, 257, 5585, 3170, 309, 311, 257, 5585, 300, 486, 6772, 312, 1219], "temperature": 0.0, "avg_logprob": -0.22367803752422333, "compression_ratio": 1.5202312138728324, "no_speech_prob": 4.710783741757041e-06}, {"id": 365, "seek": 223900, "start": 2239.0, "end": 2249.0, "text": " at the at some time by by Python. So for example, done to end it is automatically called when it's created.", "tokens": [412, 264, 412, 512, 565, 538, 538, 15329, 13, 407, 337, 1365, 11, 1096, 281, 917, 309, 307, 6772, 1219, 562, 309, 311, 2942, 13], "temperature": 0.0, "avg_logprob": -0.19163113548642113, "compression_ratio": 1.2478632478632479, "no_speech_prob": 9.368448445457034e-06}, {"id": 366, "seek": 223900, "start": 2249.0, "end": 2263.0, "text": " So if I was to turn this into a class.", "tokens": [407, 498, 286, 390, 281, 1261, 341, 666, 257, 1508, 13], "temperature": 0.0, "avg_logprob": -0.19163113548642113, "compression_ratio": 1.2478632478632479, "no_speech_prob": 9.368448445457034e-06}, {"id": 367, "seek": 226300, "start": 2263.0, "end": 2272.0, "text": " And it's. So we're going to say let's, let's say we're going to call it the prefix, which we could default to received.", "tokens": [400, 309, 311, 13, 407, 321, 434, 516, 281, 584, 718, 311, 11, 718, 311, 584, 321, 434, 516, 281, 818, 309, 264, 46969, 11, 597, 321, 727, 7576, 281, 4613, 13], "temperature": 0.0, "avg_logprob": -0.10394292324781418, "compression_ratio": 1.4829931972789117, "no_speech_prob": 1.75024542841129e-05}, {"id": 368, "seek": 226300, "start": 2272.0, "end": 2275.0, "text": " Like so.", "tokens": [1743, 370, 13], "temperature": 0.0, "avg_logprob": -0.10394292324781418, "compression_ratio": 1.4829931972789117, "no_speech_prob": 1.75024542841129e-05}, {"id": 369, "seek": 226300, "start": 2275.0, "end": 2288.0, "text": " And so then we could go self dot prefix equals prefix. Okay, so this is now a class which", "tokens": [400, 370, 550, 321, 727, 352, 2698, 5893, 46969, 6915, 46969, 13, 1033, 11, 370, 341, 307, 586, 257, 1508, 597], "temperature": 0.0, "avg_logprob": -0.10394292324781418, "compression_ratio": 1.4829931972789117, "no_speech_prob": 1.75024542841129e-05}, {"id": 370, "seek": 228800, "start": 2288.0, "end": 2294.0, "text": " knows what prefix it is. Okay. And then", "tokens": [3255, 437, 46969, 309, 307, 13, 1033, 13, 400, 550], "temperature": 0.0, "avg_logprob": -0.18792467531950577, "compression_ratio": 1.3416666666666666, "no_speech_prob": 9.817921636567917e-06}, {"id": 371, "seek": 228800, "start": 2294.0, "end": 2299.0, "text": " when you call it so if you so", "tokens": [562, 291, 818, 309, 370, 498, 291, 370], "temperature": 0.0, "avg_logprob": -0.18792467531950577, "compression_ratio": 1.3416666666666666, "no_speech_prob": 9.817921636567917e-06}, {"id": 372, "seek": 228800, "start": 2299.0, "end": 2317.0, "text": " to explain if you have, there's a there's a very interesting magic method called done call.", "tokens": [281, 2903, 498, 291, 362, 11, 456, 311, 257, 456, 311, 257, 588, 1880, 5585, 3170, 1219, 1096, 818, 13], "temperature": 0.0, "avg_logprob": -0.18792467531950577, "compression_ratio": 1.3416666666666666, "no_speech_prob": 9.817921636567917e-06}, {"id": 373, "seek": 231700, "start": 2317.0, "end": 2320.0, "text": " Which does this.", "tokens": [3013, 775, 341, 13], "temperature": 0.0, "avg_logprob": -0.1769241186288687, "compression_ratio": 1.2164948453608246, "no_speech_prob": 9.223207598552108e-06}, {"id": 374, "seek": 231700, "start": 2320.0, "end": 2333.0, "text": " Prefix. It basically makes your class callable. So if I create an instance of it.", "tokens": [6001, 69, 970, 13, 467, 1936, 1669, 428, 1508, 818, 712, 13, 407, 498, 286, 1884, 364, 5197, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.1769241186288687, "compression_ratio": 1.2164948453608246, "no_speech_prob": 9.223207598552108e-06}, {"id": 375, "seek": 231700, "start": 2333.0, "end": 2340.0, "text": " Then I can call it.", "tokens": [1396, 286, 393, 818, 309, 13], "temperature": 0.0, "avg_logprob": -0.1769241186288687, "compression_ratio": 1.2164948453608246, "no_speech_prob": 9.223207598552108e-06}, {"id": 376, "seek": 234000, "start": 2340.0, "end": 2348.0, "text": " But, X in here.", "tokens": [583, 11, 1783, 294, 510, 13], "temperature": 0.0, "avg_logprob": -0.22983352839946747, "compression_ratio": 1.4305555555555556, "no_speech_prob": 6.747537099727197e-06}, {"id": 377, "seek": 234000, "start": 2348.0, "end": 2351.0, "text": " They say I'm treating it as a function.", "tokens": [814, 584, 286, 478, 15083, 309, 382, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.22983352839946747, "compression_ratio": 1.4305555555555556, "no_speech_prob": 6.747537099727197e-06}, {"id": 378, "seek": 234000, "start": 2351.0, "end": 2358.0, "text": " And so when he treated class as a function, this is what it calls.", "tokens": [400, 370, 562, 415, 8668, 1508, 382, 257, 2445, 11, 341, 307, 437, 309, 5498, 13], "temperature": 0.0, "avg_logprob": -0.22983352839946747, "compression_ratio": 1.4305555555555556, "no_speech_prob": 6.747537099727197e-06}, {"id": 379, "seek": 234000, "start": 2358.0, "end": 2363.0, "text": " So then we could use this.", "tokens": [407, 550, 321, 727, 764, 341, 13], "temperature": 0.0, "avg_logprob": -0.22983352839946747, "compression_ratio": 1.4305555555555556, "no_speech_prob": 6.747537099727197e-06}, {"id": 380, "seek": 234000, "start": 2363.0, "end": 2367.0, "text": " Instead of passing X, we're going to pass some function.", "tokens": [7156, 295, 8437, 1783, 11, 321, 434, 516, 281, 1320, 512, 2445, 13], "temperature": 0.0, "avg_logprob": -0.22983352839946747, "compression_ratio": 1.4305555555555556, "no_speech_prob": 6.747537099727197e-06}, {"id": 381, "seek": 236700, "start": 2367.0, "end": 2380.0, "text": " And", "tokens": [400], "temperature": 0.0, "avg_logprob": -0.19082848922066067, "compression_ratio": 1.0144927536231885, "no_speech_prob": 1.0451313755766023e-05}, {"id": 382, "seek": 236700, "start": 2380.0, "end": 2388.0, "text": " keep all that stuff.", "tokens": [1066, 439, 300, 1507, 13], "temperature": 0.0, "avg_logprob": -0.19082848922066067, "compression_ratio": 1.0144927536231885, "no_speech_prob": 1.0451313755766023e-05}, {"id": 383, "seek": 236700, "start": 2388.0, "end": 2393.0, "text": " And so now rather than putting received here.", "tokens": [400, 370, 586, 2831, 813, 3372, 4613, 510, 13], "temperature": 0.0, "avg_logprob": -0.19082848922066067, "compression_ratio": 1.0144927536231885, "no_speech_prob": 1.0451313755766023e-05}, {"id": 384, "seek": 239300, "start": 2393.0, "end": 2399.0, "text": " We would put so.prefix.", "tokens": [492, 576, 829, 370, 13, 3712, 69, 970, 13], "temperature": 0.0, "avg_logprob": -0.18991442858162572, "compression_ratio": 1.408, "no_speech_prob": 7.29624844097998e-06}, {"id": 385, "seek": 239300, "start": 2399.0, "end": 2403.0, "text": " Okay, so when you call this now.", "tokens": [1033, 11, 370, 562, 291, 818, 341, 586, 13], "temperature": 0.0, "avg_logprob": -0.18991442858162572, "compression_ratio": 1.408, "no_speech_prob": 7.29624844097998e-06}, {"id": 386, "seek": 239300, "start": 2403.0, "end": 2407.0, "text": " As a function, you're going to pass it a function.", "tokens": [1018, 257, 2445, 11, 291, 434, 516, 281, 1320, 309, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.18991442858162572, "compression_ratio": 1.408, "no_speech_prob": 7.29624844097998e-06}, {"id": 387, "seek": 239300, "start": 2407.0, "end": 2413.0, "text": " And it's going to return a function.", "tokens": [400, 309, 311, 516, 281, 2736, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.18991442858162572, "compression_ratio": 1.408, "no_speech_prob": 7.29624844097998e-06}, {"id": 388, "seek": 239300, "start": 2413.0, "end": 2418.0, "text": " Which means we would now right.", "tokens": [3013, 1355, 321, 576, 586, 558, 13], "temperature": 0.0, "avg_logprob": -0.18991442858162572, "compression_ratio": 1.408, "no_speech_prob": 7.29624844097998e-06}, {"id": 389, "seek": 241800, "start": 2418.0, "end": 2423.0, "text": " For example,", "tokens": [1171, 1365, 11], "temperature": 0.0, "avg_logprob": -0.2507629114038804, "compression_ratio": 1.5886524822695036, "no_speech_prob": 1.0289394595019985e-05}, {"id": 390, "seek": 241800, "start": 2423.0, "end": 2428.0, "text": " for example, like this.", "tokens": [337, 1365, 11, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.2507629114038804, "compression_ratio": 1.5886524822695036, "no_speech_prob": 1.0289394595019985e-05}, {"id": 391, "seek": 241800, "start": 2428.0, "end": 2431.0, "text": " Okay, so", "tokens": [1033, 11, 370], "temperature": 0.0, "avg_logprob": -0.2507629114038804, "compression_ratio": 1.5886524822695036, "no_speech_prob": 1.0289394595019985e-05}, {"id": 392, "seek": 241800, "start": 2431.0, "end": 2436.0, "text": " this is calling the function or the callable log which is a function.", "tokens": [341, 307, 5141, 264, 2445, 420, 264, 818, 712, 3565, 597, 307, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.2507629114038804, "compression_ratio": 1.5886524822695036, "no_speech_prob": 1.0289394595019985e-05}, {"id": 393, "seek": 241800, "start": 2436.0, "end": 2443.0, "text": " Sorry, which this is sorry, which is a class. So this instantiates the class passing in this prefix.", "tokens": [4919, 11, 597, 341, 307, 2597, 11, 597, 307, 257, 1508, 13, 407, 341, 9836, 72, 1024, 264, 1508, 8437, 294, 341, 46969, 13], "temperature": 0.0, "avg_logprob": -0.2507629114038804, "compression_ratio": 1.5886524822695036, "no_speech_prob": 1.0289394595019985e-05}, {"id": 394, "seek": 241800, "start": 2443.0, "end": 2446.0, "text": " And so.", "tokens": [400, 370, 13], "temperature": 0.0, "avg_logprob": -0.2507629114038804, "compression_ratio": 1.5886524822695036, "no_speech_prob": 1.0289394595019985e-05}, {"id": 395, "seek": 244600, "start": 2446.0, "end": 2458.0, "text": " So this gets replaced with an object of this class. So if we have a look at that one.", "tokens": [407, 341, 2170, 10772, 365, 364, 2657, 295, 341, 1508, 13, 407, 498, 321, 362, 257, 574, 412, 300, 472, 13], "temperature": 0.0, "avg_logprob": -0.15489435195922852, "compression_ratio": 1.3818181818181818, "no_speech_prob": 1.1125329365313519e-05}, {"id": 396, "seek": 244600, "start": 2458.0, "end": 2461.0, "text": " This", "tokens": [639], "temperature": 0.0, "avg_logprob": -0.15489435195922852, "compression_ratio": 1.3818181818181818, "no_speech_prob": 1.1125329365313519e-05}, {"id": 397, "seek": 244600, "start": 2461.0, "end": 2468.0, "text": " this class then gets called being passed the function at one.", "tokens": [341, 1508, 550, 2170, 1219, 885, 4678, 264, 2445, 412, 472, 13], "temperature": 0.0, "avg_logprob": -0.15489435195922852, "compression_ratio": 1.3818181818181818, "no_speech_prob": 1.1125329365313519e-05}, {"id": 398, "seek": 246800, "start": 2468.0, "end": 2477.0, "text": " And so it then gets replaced with this. And that's why we end up with a log.", "tokens": [400, 370, 309, 550, 2170, 10772, 365, 341, 13, 400, 300, 311, 983, 321, 917, 493, 365, 257, 3565, 13], "temperature": 0.0, "avg_logprob": -0.36205538581399355, "compression_ratio": 1.1511627906976745, "no_speech_prob": 5.093060281069484e-06}, {"id": 399, "seek": 246800, "start": 2477.0, "end": 2482.0, "text": " underscore.", "tokens": [37556, 13], "temperature": 0.0, "avg_logprob": -0.36205538581399355, "compression_ratio": 1.1511627906976745, "no_speech_prob": 5.093060281069484e-06}, {"id": 400, "seek": 246800, "start": 2482.0, "end": 2485.0, "text": " Anyhow, so", "tokens": [2639, 4286, 11, 370], "temperature": 0.0, "avg_logprob": -0.36205538581399355, "compression_ratio": 1.1511627906976745, "no_speech_prob": 5.093060281069484e-06}, {"id": 401, "seek": 248500, "start": 2485.0, "end": 2498.0, "text": " so yeah so higher order functions are functions that take functions and return functions and Python has some tricky funds. Yes.", "tokens": [370, 1338, 370, 2946, 1668, 6828, 366, 6828, 300, 747, 6828, 293, 2736, 6828, 293, 15329, 575, 512, 12414, 8271, 13, 1079, 13], "temperature": 0.0, "avg_logprob": -0.20985600485730527, "compression_ratio": 1.598901098901099, "no_speech_prob": 2.705264705582522e-05}, {"id": 402, "seek": 248500, "start": 2498.0, "end": 2511.0, "text": " Okay, so I just wanted to say something for people who are seeing this for the very first time decorators. So, I have a tip, the deepest to just use them anywhere.", "tokens": [1033, 11, 370, 286, 445, 1415, 281, 584, 746, 337, 561, 567, 366, 2577, 341, 337, 264, 588, 700, 565, 7919, 3391, 13, 407, 11, 286, 362, 257, 4125, 11, 264, 28288, 281, 445, 764, 552, 4992, 13], "temperature": 0.0, "avg_logprob": -0.20985600485730527, "compression_ratio": 1.598901098901099, "no_speech_prob": 2.705264705582522e-05}, {"id": 403, "seek": 251100, "start": 2511.0, "end": 2521.0, "text": " When you start thinking about these inner things, when you're first introduced to it, you would be confused, but if you just use it, you can use it on.", "tokens": [1133, 291, 722, 1953, 466, 613, 7284, 721, 11, 562, 291, 434, 700, 7268, 281, 309, 11, 291, 576, 312, 9019, 11, 457, 498, 291, 445, 764, 309, 11, 291, 393, 764, 309, 322, 13], "temperature": 0.0, "avg_logprob": -0.17159652709960938, "compression_ratio": 1.6590909090909092, "no_speech_prob": 2.077267345157452e-05}, {"id": 404, "seek": 251100, "start": 2521.0, "end": 2528.0, "text": " There are a lot of days in Flask framework. So in the Python flask, there are a lot of decorators being used.", "tokens": [821, 366, 257, 688, 295, 1708, 294, 3235, 3863, 8388, 13, 407, 294, 264, 15329, 932, 3863, 11, 456, 366, 257, 688, 295, 7919, 3391, 885, 1143, 13], "temperature": 0.0, "avg_logprob": -0.17159652709960938, "compression_ratio": 1.6590909090909092, "no_speech_prob": 2.077267345157452e-05}, {"id": 405, "seek": 251100, "start": 2528.0, "end": 2539.0, "text": " And, and, and you can also see this in like Python as LRU cache, LRU cache for caching older variables.", "tokens": [400, 11, 293, 11, 293, 291, 393, 611, 536, 341, 294, 411, 15329, 382, 441, 49, 52, 19459, 11, 441, 49, 52, 19459, 337, 269, 2834, 4906, 9102, 13], "temperature": 0.0, "avg_logprob": -0.17159652709960938, "compression_ratio": 1.6590909090909092, "no_speech_prob": 2.077267345157452e-05}, {"id": 406, "seek": 253900, "start": 2539.0, "end": 2543.0, "text": " So if you just start using it then you will not be confused very much.", "tokens": [407, 498, 291, 445, 722, 1228, 309, 550, 291, 486, 406, 312, 9019, 588, 709, 13], "temperature": 0.0, "avg_logprob": -0.10990070574211352, "compression_ratio": 1.7207207207207207, "no_speech_prob": 9.079601113626268e-06}, {"id": 407, "seek": 253900, "start": 2543.0, "end": 2550.0, "text": " So, always whenever you see a decorator. Don't start thinking what is going on inside just use it.", "tokens": [407, 11, 1009, 5699, 291, 536, 257, 7919, 1639, 13, 1468, 380, 722, 1953, 437, 307, 516, 322, 1854, 445, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.10990070574211352, "compression_ratio": 1.7207207207207207, "no_speech_prob": 9.079601113626268e-06}, {"id": 408, "seek": 253900, "start": 2550.0, "end": 2557.0, "text": " So, here's the, here's the long handed way of doing this.", "tokens": [407, 11, 510, 311, 264, 11, 510, 311, 264, 938, 16013, 636, 295, 884, 341, 13], "temperature": 0.0, "avg_logprob": -0.10990070574211352, "compression_ratio": 1.7207207207207207, "no_speech_prob": 9.079601113626268e-06}, {"id": 409, "seek": 253900, "start": 2557.0, "end": 2563.0, "text": " I guess the long handed way actually would be to define would be to call this something else like underscore at one.", "tokens": [286, 2041, 264, 938, 16013, 636, 767, 576, 312, 281, 6964, 576, 312, 281, 818, 341, 746, 1646, 411, 37556, 412, 472, 13], "temperature": 0.0, "avg_logprob": -0.10990070574211352, "compression_ratio": 1.7207207207207207, "no_speech_prob": 9.079601113626268e-06}, {"id": 410, "seek": 253900, "start": 2563.0, "end": 2567.0, "text": " And then this could be called at one.", "tokens": [400, 550, 341, 727, 312, 1219, 412, 472, 13], "temperature": 0.0, "avg_logprob": -0.10990070574211352, "compression_ratio": 1.7207207207207207, "no_speech_prob": 9.079601113626268e-06}, {"id": 411, "seek": 256700, "start": 2567.0, "end": 2577.0, "text": " And so here's a version, which doesn't use decorators.", "tokens": [400, 370, 510, 311, 257, 3037, 11, 597, 1177, 380, 764, 7919, 3391, 13], "temperature": 0.0, "avg_logprob": -0.16247259015622345, "compression_ratio": 1.2162162162162162, "no_speech_prob": 1.147787770605646e-05}, {"id": 412, "seek": 256700, "start": 2577.0, "end": 2583.0, "text": " But it behaves the same way.", "tokens": [583, 309, 36896, 264, 912, 636, 13], "temperature": 0.0, "avg_logprob": -0.16247259015622345, "compression_ratio": 1.2162162162162162, "no_speech_prob": 1.147787770605646e-05}, {"id": 413, "seek": 256700, "start": 2583.0, "end": 2587.0, "text": " Oops, this should be underscore at one.", "tokens": [21726, 11, 341, 820, 312, 37556, 412, 472, 13], "temperature": 0.0, "avg_logprob": -0.16247259015622345, "compression_ratio": 1.2162162162162162, "no_speech_prob": 1.147787770605646e-05}, {"id": 414, "seek": 256700, "start": 2587.0, "end": 2589.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.16247259015622345, "compression_ratio": 1.2162162162162162, "no_speech_prob": 1.147787770605646e-05}, {"id": 415, "seek": 256700, "start": 2589.0, "end": 2591.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.16247259015622345, "compression_ratio": 1.2162162162162162, "no_speech_prob": 1.147787770605646e-05}, {"id": 416, "seek": 259100, "start": 2591.0, "end": 2600.0, "text": " So in APL functions that take a function and return a function aren't called functions.", "tokens": [407, 294, 5372, 43, 6828, 300, 747, 257, 2445, 293, 2736, 257, 2445, 3212, 380, 1219, 6828, 13], "temperature": 0.0, "avg_logprob": -0.20418984239751642, "compression_ratio": 1.424, "no_speech_prob": 8.267545126727782e-06}, {"id": 417, "seek": 259100, "start": 2600.0, "end": 2603.0, "text": " They're called operators.", "tokens": [814, 434, 1219, 19077, 13], "temperature": 0.0, "avg_logprob": -0.20418984239751642, "compression_ratio": 1.424, "no_speech_prob": 8.267545126727782e-06}, {"id": 418, "seek": 259100, "start": 2603.0, "end": 2612.0, "text": " And you will find therefore if we look up the language elements.", "tokens": [400, 291, 486, 915, 4412, 498, 321, 574, 493, 264, 2856, 4959, 13], "temperature": 0.0, "avg_logprob": -0.20418984239751642, "compression_ratio": 1.424, "no_speech_prob": 8.267545126727782e-06}, {"id": 419, "seek": 261200, "start": 2612.0, "end": 2623.0, "text": " Oh, I should have looked up dialog language elements.", "tokens": [876, 11, 286, 820, 362, 2956, 493, 19308, 2856, 4959, 13], "temperature": 0.0, "avg_logprob": -0.25884318933254336, "compression_ratio": 1.2608695652173914, "no_speech_prob": 9.13248243250564e-07}, {"id": 420, "seek": 261200, "start": 2623.0, "end": 2628.0, "text": " They're separated out. Okay. There's a table of functions.", "tokens": [814, 434, 12005, 484, 13, 1033, 13, 821, 311, 257, 3199, 295, 6828, 13], "temperature": 0.0, "avg_logprob": -0.25884318933254336, "compression_ratio": 1.2608695652173914, "no_speech_prob": 9.13248243250564e-07}, {"id": 421, "seek": 261200, "start": 2628.0, "end": 2631.0, "text": " And that's a table of operators.", "tokens": [400, 300, 311, 257, 3199, 295, 19077, 13], "temperature": 0.0, "avg_logprob": -0.25884318933254336, "compression_ratio": 1.2608695652173914, "no_speech_prob": 9.13248243250564e-07}, {"id": 422, "seek": 263100, "start": 2631.0, "end": 2642.0, "text": " So as you can see dot, which Isaac told us about means inner product.", "tokens": [407, 382, 291, 393, 536, 5893, 11, 597, 22505, 1907, 505, 466, 1355, 7284, 1674, 13], "temperature": 0.0, "avg_logprob": -0.15878387733742041, "compression_ratio": 1.3986928104575163, "no_speech_prob": 2.12336112781486e-06}, {"id": 423, "seek": 263100, "start": 2642.0, "end": 2651.0, "text": " It's an operator, because that returns a function, which does matrix model play.", "tokens": [467, 311, 364, 12973, 11, 570, 300, 11247, 257, 2445, 11, 597, 775, 8141, 2316, 862, 13], "temperature": 0.0, "avg_logprob": -0.15878387733742041, "compression_ratio": 1.3986928104575163, "no_speech_prob": 2.12336112781486e-06}, {"id": 424, "seek": 263100, "start": 2651.0, "end": 2659.0, "text": " So I think we should start with some simpler, simpler versions.", "tokens": [407, 286, 519, 321, 820, 722, 365, 512, 18587, 11, 18587, 9606, 13], "temperature": 0.0, "avg_logprob": -0.15878387733742041, "compression_ratio": 1.3986928104575163, "no_speech_prob": 2.12336112781486e-06}, {"id": 425, "seek": 265900, "start": 2659.0, "end": 2673.0, "text": " But first of all, let's play this up a little bit.", "tokens": [583, 700, 295, 439, 11, 718, 311, 862, 341, 493, 257, 707, 857, 13], "temperature": 0.0, "avg_logprob": -0.1957850456237793, "compression_ratio": 0.8620689655172413, "no_speech_prob": 3.704645132529549e-05}, {"id": 426, "seek": 267300, "start": 2673.0, "end": 2689.0, "text": " Okay, so then we've got this version.", "tokens": [1033, 11, 370, 550, 321, 600, 658, 341, 3037, 13], "temperature": 0.0, "avg_logprob": -0.11030852794647217, "compression_ratio": 1.4339622641509433, "no_speech_prob": 4.984985207556747e-05}, {"id": 427, "seek": 267300, "start": 2689.0, "end": 2700.0, "text": " Okay, and then we've got this version.", "tokens": [1033, 11, 293, 550, 321, 600, 658, 341, 3037, 13], "temperature": 0.0, "avg_logprob": -0.11030852794647217, "compression_ratio": 1.4339622641509433, "no_speech_prob": 4.984985207556747e-05}, {"id": 428, "seek": 270000, "start": 2700.0, "end": 2704.0, "text": " And this version.", "tokens": [400, 341, 3037, 13], "temperature": 0.0, "avg_logprob": -0.09479358673095703, "compression_ratio": 1.105263157894737, "no_speech_prob": 2.6686835553846322e-05}, {"id": 429, "seek": 270000, "start": 2704.0, "end": 2710.0, "text": " And I guess we should have the manual version of this one as well.", "tokens": [400, 286, 2041, 321, 820, 362, 264, 9688, 3037, 295, 341, 472, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.09479358673095703, "compression_ratio": 1.105263157894737, "no_speech_prob": 2.6686835553846322e-05}, {"id": 430, "seek": 271000, "start": 2710.0, "end": 2731.0, "text": " Which would be to say, define underscore at one X X plus one to define underscore two.", "tokens": [3013, 576, 312, 281, 584, 11, 6964, 37556, 412, 472, 1783, 1783, 1804, 472, 281, 6964, 37556, 732, 13], "temperature": 0.0, "avg_logprob": -0.4645483182824176, "compression_ratio": 1.2112676056338028, "no_speech_prob": 6.0137714172014967e-05}, {"id": 431, "seek": 273100, "start": 2731.0, "end": 2741.0, "text": " Times two and then it's a malt two equals block args of underscore malt two.", "tokens": [11366, 732, 293, 550, 309, 311, 257, 45654, 732, 6915, 3461, 3882, 82, 295, 37556, 45654, 732, 13], "temperature": 0.0, "avg_logprob": -0.21821192332676478, "compression_ratio": 1.3161764705882353, "no_speech_prob": 4.495138000493171e-06}, {"id": 432, "seek": 273100, "start": 2741.0, "end": 2746.0, "text": " So here's the version without a decorator.", "tokens": [407, 510, 311, 264, 3037, 1553, 257, 7919, 1639, 13], "temperature": 0.0, "avg_logprob": -0.21821192332676478, "compression_ratio": 1.3161764705882353, "no_speech_prob": 4.495138000493171e-06}, {"id": 433, "seek": 273100, "start": 2746.0, "end": 2751.0, "text": " And it does the same thing. Okay.", "tokens": [400, 309, 775, 264, 912, 551, 13, 1033, 13], "temperature": 0.0, "avg_logprob": -0.21821192332676478, "compression_ratio": 1.3161764705882353, "no_speech_prob": 4.495138000493171e-06}, {"id": 434, "seek": 273100, "start": 2751.0, "end": 2755.0, "text": " So now let's look at APL.", "tokens": [407, 586, 718, 311, 574, 412, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.21821192332676478, "compression_ratio": 1.3161764705882353, "no_speech_prob": 4.495138000493171e-06}, {"id": 435, "seek": 275500, "start": 2755.0, "end": 2764.0, "text": " And show you everybody's favorite operator, which is slash.", "tokens": [400, 855, 291, 2201, 311, 2954, 12973, 11, 597, 307, 17330, 13], "temperature": 0.0, "avg_logprob": -0.20949344635009765, "compression_ratio": 1.1801801801801801, "no_speech_prob": 1.9524879462551326e-05}, {"id": 436, "seek": 275500, "start": 2764.0, "end": 2768.0, "text": " And this one here.", "tokens": [400, 341, 472, 510, 13], "temperature": 0.0, "avg_logprob": -0.20949344635009765, "compression_ratio": 1.1801801801801801, "no_speech_prob": 1.9524879462551326e-05}, {"id": 437, "seek": 275500, "start": 2768.0, "end": 2774.0, "text": " Appears to be in the wrong spot. Why is I over here?", "tokens": [41322, 685, 281, 312, 294, 264, 2085, 4008, 13, 1545, 307, 286, 670, 510, 30], "temperature": 0.0, "avg_logprob": -0.20949344635009765, "compression_ratio": 1.1801801801801801, "no_speech_prob": 1.9524879462551326e-05}, {"id": 438, "seek": 277400, "start": 2774.0, "end": 2790.0, "text": " Guess we didn't know where to put it maybe.", "tokens": [17795, 321, 994, 380, 458, 689, 281, 829, 309, 1310, 13], "temperature": 0.0, "avg_logprob": -0.17903526624043783, "compression_ratio": 0.8431372549019608, "no_speech_prob": 0.0001375456340610981}, {"id": 439, "seek": 279000, "start": 2790.0, "end": 2804.0, "text": " Let's move it.", "tokens": [961, 311, 1286, 309, 13], "temperature": 0.0, "avg_logprob": -0.33345021141899955, "compression_ratio": 0.6363636363636364, "no_speech_prob": 3.8225498428801075e-05}, {"id": 440, "seek": 280400, "start": 2804.0, "end": 2830.0, "text": " Oh, I see why it's because we had strings. Maybe we should move strings before all that.", "tokens": [876, 11, 286, 536, 983, 309, 311, 570, 321, 632, 13985, 13, 2704, 321, 820, 1286, 13985, 949, 439, 300, 13], "temperature": 0.0, "avg_logprob": -0.1196718692779541, "compression_ratio": 1.0602409638554218, "no_speech_prob": 3.119821849395521e-05}, {"id": 441, "seek": 283000, "start": 2830.0, "end": 2834.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.24619269371032715, "compression_ratio": 1.0, "no_speech_prob": 2.3184287783806212e-05}, {"id": 442, "seek": 283000, "start": 2834.0, "end": 2853.0, "text": " Oh no, that's got row it out. Man, this stuff's so complicated, isn't it?", "tokens": [876, 572, 11, 300, 311, 658, 5386, 309, 484, 13, 2458, 11, 341, 1507, 311, 370, 6179, 11, 1943, 380, 309, 30], "temperature": 0.0, "avg_logprob": -0.24619269371032715, "compression_ratio": 1.0, "no_speech_prob": 2.3184287783806212e-05}, {"id": 443, "seek": 285300, "start": 2853.0, "end": 2862.0, "text": " Let's move it here now.", "tokens": [961, 311, 1286, 309, 510, 586, 13], "temperature": 0.0, "avg_logprob": -0.27171897888183594, "compression_ratio": 0.7837837837837838, "no_speech_prob": 4.39938812633045e-05}, {"id": 444, "seek": 285300, "start": 2862.0, "end": 2868.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.27171897888183594, "compression_ratio": 0.7837837837837838, "no_speech_prob": 4.39938812633045e-05}, {"id": 445, "seek": 286800, "start": 2868.0, "end": 2883.0, "text": " Operators.", "tokens": [12480, 3391, 13], "temperature": 0.0, "avg_logprob": -0.28420208181653706, "compression_ratio": 0.5555555555555556, "no_speech_prob": 2.6271201932104304e-05}, {"id": 446, "seek": 288300, "start": 2883.0, "end": 2898.0, "text": " Operators.", "tokens": [12480, 3391, 13], "temperature": 0.0, "avg_logprob": -0.3261932333310445, "compression_ratio": 0.68, "no_speech_prob": 2.546501491451636e-05}, {"id": 447, "seek": 288300, "start": 2898.0, "end": 2903.0, "text": " Slash.", "tokens": [6187, 1299, 13], "temperature": 0.0, "avg_logprob": -0.3261932333310445, "compression_ratio": 0.68, "no_speech_prob": 2.546501491451636e-05}, {"id": 448, "seek": 290300, "start": 2903.0, "end": 2915.0, "text": " So let's do slash. It's called, this is an operator.", "tokens": [407, 718, 311, 360, 17330, 13, 467, 311, 1219, 11, 341, 307, 364, 12973, 13], "temperature": 0.0, "avg_logprob": -0.2708069650750411, "compression_ratio": 0.9285714285714286, "no_speech_prob": 1.4509819266095292e-05}, {"id": 449, "seek": 291500, "start": 2915.0, "end": 2934.0, "text": " It's called slash.", "tokens": [467, 311, 1219, 17330, 13], "temperature": 0.0, "avg_logprob": -0.3689860502878825, "compression_ratio": 0.6923076923076923, "no_speech_prob": 2.178091017412953e-05}, {"id": 450, "seek": 293400, "start": 2934.0, "end": 2949.0, "text": " All right. So here is, oh, and we need to turn on our APL thing.", "tokens": [1057, 558, 13, 407, 510, 307, 11, 1954, 11, 293, 321, 643, 281, 1261, 322, 527, 5372, 43, 551, 13], "temperature": 0.0, "avg_logprob": -0.18217950118215462, "compression_ratio": 1.0681818181818181, "no_speech_prob": 5.338040409696987e-06}, {"id": 451, "seek": 293400, "start": 2949.0, "end": 2951.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.18217950118215462, "compression_ratio": 1.0681818181818181, "no_speech_prob": 5.338040409696987e-06}, {"id": 452, "seek": 293400, "start": 2951.0, "end": 2956.0, "text": " Okay. So let's say A is", "tokens": [1033, 13, 407, 718, 311, 584, 316, 307], "temperature": 0.0, "avg_logprob": -0.18217950118215462, "compression_ratio": 1.0681818181818181, "no_speech_prob": 5.338040409696987e-06}, {"id": 453, "seek": 295600, "start": 2956.0, "end": 2964.0, "text": " out of five.", "tokens": [484, 295, 1732, 13], "temperature": 0.0, "avg_logprob": -0.4246033321727406, "compression_ratio": 0.8867924528301887, "no_speech_prob": 5.173585577722406e-06}, {"id": 454, "seek": 295600, "start": 2964.0, "end": 2968.0, "text": " I wonder if I can do this.", "tokens": [286, 2441, 498, 286, 393, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.4246033321727406, "compression_ratio": 0.8867924528301887, "no_speech_prob": 5.173585577722406e-06}, {"id": 455, "seek": 295600, "start": 2968.0, "end": 2977.0, "text": " Quad is", "tokens": [29619, 307], "temperature": 0.0, "avg_logprob": -0.4246033321727406, "compression_ratio": 0.8867924528301887, "no_speech_prob": 5.173585577722406e-06}, {"id": 456, "seek": 297700, "start": 2977.0, "end": 2987.0, "text": " L.", "tokens": [441, 13], "temperature": 0.0, "avg_logprob": -0.6608181733351487, "compression_ratio": 0.7142857142857143, "no_speech_prob": 1.3709411632589763e-06}, {"id": 457, "seek": 297700, "start": 2987.0, "end": 2993.0, "text": " Okay. Plus slash.", "tokens": [1033, 13, 7721, 17330, 13], "temperature": 0.0, "avg_logprob": -0.6608181733351487, "compression_ratio": 0.7142857142857143, "no_speech_prob": 1.3709411632589763e-06}, {"id": 458, "seek": 299300, "start": 2993.0, "end": 3008.0, "text": " Here's A. And here's plus slash A. Now notice here that slash is not a function. It's an operator and therefore it has different rules.", "tokens": [1692, 311, 316, 13, 400, 510, 311, 1804, 17330, 316, 13, 823, 3449, 510, 300, 17330, 307, 406, 257, 2445, 13, 467, 311, 364, 12973, 293, 4412, 309, 575, 819, 4474, 13], "temperature": 0.0, "avg_logprob": -0.15417414241366917, "compression_ratio": 1.2735849056603774, "no_speech_prob": 8.013343176571652e-06}, {"id": 459, "seek": 300800, "start": 3008.0, "end": 3023.0, "text": " The first rule to know about operators is that they bind more tightly than functions. So normally if slash was behaving as a function here, then this would happen first.", "tokens": [440, 700, 4978, 281, 458, 466, 19077, 307, 300, 436, 14786, 544, 21952, 813, 6828, 13, 407, 5646, 498, 17330, 390, 35263, 382, 257, 2445, 510, 11, 550, 341, 576, 1051, 700, 13], "temperature": 0.0, "avg_logprob": -0.07777728905548921, "compression_ratio": 1.330708661417323, "no_speech_prob": 2.6841673843591707e-06}, {"id": 460, "seek": 302300, "start": 3023.0, "end": 3041.0, "text": " But because slash can behave as an operator and there's a function on its left, this happens first. So operators bind more tightly than functions. So this is parsed as plus slash first.", "tokens": [583, 570, 17330, 393, 15158, 382, 364, 12973, 293, 456, 311, 257, 2445, 322, 1080, 1411, 11, 341, 2314, 700, 13, 407, 19077, 14786, 544, 21952, 813, 6828, 13, 407, 341, 307, 21156, 292, 382, 1804, 17330, 700, 13], "temperature": 0.0, "avg_logprob": -0.06401416312816531, "compression_ratio": 1.4122137404580153, "no_speech_prob": 4.1811736650743114e-07}, {"id": 461, "seek": 304100, "start": 3041.0, "end": 3059.0, "text": " Okay. So then what does plus slash do? Well, slash is an operator and so therefore it returns plus slash returns a function. And what does that function do?", "tokens": [1033, 13, 407, 550, 437, 775, 1804, 17330, 360, 30, 1042, 11, 17330, 307, 364, 12973, 293, 370, 4412, 309, 11247, 1804, 17330, 11247, 257, 2445, 13, 400, 437, 775, 300, 2445, 360, 30], "temperature": 0.0, "avg_logprob": -0.12738525240044846, "compression_ratio": 1.4054054054054055, "no_speech_prob": 1.505681439084583e-06}, {"id": 462, "seek": 305900, "start": 3059.0, "end": 3071.0, "text": " It takes a function. So it's going to, here it is here, F slash. So it takes a function. The function has to be dyadic.", "tokens": [467, 2516, 257, 2445, 13, 407, 309, 311, 516, 281, 11, 510, 309, 307, 510, 11, 479, 17330, 13, 407, 309, 2516, 257, 2445, 13, 440, 2445, 575, 281, 312, 14584, 43341, 13], "temperature": 0.0, "avg_logprob": -0.11328697204589844, "compression_ratio": 1.3222222222222222, "no_speech_prob": 1.1726378943421878e-06}, {"id": 463, "seek": 307100, "start": 3071.0, "end": 3091.0, "text": " And what it does is it applies the function between items of the vectors that it is parsed. And so literally what this does is it inserts the symbol plus between one and two and between two and three and between three and four and between four and five.", "tokens": [400, 437, 309, 775, 307, 309, 13165, 264, 2445, 1296, 4754, 295, 264, 18875, 300, 309, 307, 21156, 292, 13, 400, 370, 3736, 437, 341, 775, 307, 309, 49163, 264, 5986, 1804, 1296, 472, 293, 732, 293, 1296, 732, 293, 1045, 293, 1296, 1045, 293, 1451, 293, 1296, 1451, 293, 1732, 13], "temperature": 0.0, "avg_logprob": -0.0649937777452066, "compression_ratio": 1.9433962264150944, "no_speech_prob": 4.520935021901096e-07}, {"id": 464, "seek": 307100, "start": 3091.0, "end": 3096.0, "text": " So you get one plus two plus three plus four plus five.", "tokens": [407, 291, 483, 472, 1804, 732, 1804, 1045, 1804, 1451, 1804, 1732, 13], "temperature": 0.0, "avg_logprob": -0.0649937777452066, "compression_ratio": 1.9433962264150944, "no_speech_prob": 4.520935021901096e-07}, {"id": 465, "seek": 309600, "start": 3096.0, "end": 3102.0, "text": " So therefore plus slash means sum. And here is the sum of the numbers from one to five.", "tokens": [407, 4412, 1804, 17330, 1355, 2408, 13, 400, 510, 307, 264, 2408, 295, 264, 3547, 490, 472, 281, 1732, 13], "temperature": 0.0, "avg_logprob": -0.11449301059429462, "compression_ratio": 1.53125, "no_speech_prob": 6.643337655987125e-06}, {"id": 466, "seek": 309600, "start": 3102.0, "end": 3110.0, "text": " So this is the same as capital sigma in math.", "tokens": [407, 341, 307, 264, 912, 382, 4238, 12771, 294, 5221, 13], "temperature": 0.0, "avg_logprob": -0.11449301059429462, "compression_ratio": 1.53125, "no_speech_prob": 6.643337655987125e-06}, {"id": 467, "seek": 309600, "start": 3110.0, "end": 3117.0, "text": " Now when you say it does it one plus two plus three plus four plus five but isn't the order from right to left?", "tokens": [823, 562, 291, 584, 309, 775, 309, 472, 1804, 732, 1804, 1045, 1804, 1451, 1804, 1732, 457, 1943, 380, 264, 1668, 490, 558, 281, 1411, 30], "temperature": 0.0, "avg_logprob": -0.11449301059429462, "compression_ratio": 1.53125, "no_speech_prob": 6.643337655987125e-06}, {"id": 468, "seek": 311700, "start": 3117.0, "end": 3132.0, "text": " It is. Or how does that work? It is. Yep. So it inserts it in between these pairs. So it becomes one plus two plus three plus four plus five. And then to evaluate it, it would do this first, four plus five and then this three plus nine.", "tokens": [467, 307, 13, 1610, 577, 775, 300, 589, 30, 467, 307, 13, 7010, 13, 407, 309, 49163, 309, 294, 1296, 613, 15494, 13, 407, 309, 3643, 472, 1804, 732, 1804, 1045, 1804, 1451, 1804, 1732, 13, 400, 550, 281, 13059, 309, 11, 309, 576, 360, 341, 700, 11, 1451, 1804, 1732, 293, 550, 341, 1045, 1804, 4949, 13], "temperature": 0.0, "avg_logprob": -0.14565419589771944, "compression_ratio": 1.6868131868131868, "no_speech_prob": 1.8161944126404705e-06}, {"id": 469, "seek": 311700, "start": 3132.0, "end": 3136.0, "text": " Okay. This two plus 12. Yep.", "tokens": [1033, 13, 639, 732, 1804, 2272, 13, 7010, 13], "temperature": 0.0, "avg_logprob": -0.14565419589771944, "compression_ratio": 1.6868131868131868, "no_speech_prob": 1.8161944126404705e-06}, {"id": 470, "seek": 311700, "start": 3136.0, "end": 3142.0, "text": " So we could do the same thing with times.", "tokens": [407, 321, 727, 360, 264, 912, 551, 365, 1413, 13], "temperature": 0.0, "avg_logprob": -0.14565419589771944, "compression_ratio": 1.6868131868131868, "no_speech_prob": 1.8161944126404705e-06}, {"id": 471, "seek": 314200, "start": 3142.0, "end": 3151.0, "text": " And this is now the same as capital pi in math. It's the product.", "tokens": [400, 341, 307, 586, 264, 912, 382, 4238, 3895, 294, 5221, 13, 467, 311, 264, 1674, 13], "temperature": 0.0, "avg_logprob": -0.12057169447553918, "compression_ratio": 1.4057971014492754, "no_speech_prob": 4.3568234104895964e-06}, {"id": 472, "seek": 314200, "start": 3151.0, "end": 3163.0, "text": " So yeah, this is called a reduction in computer science. Reduction is something that basically reduces the number of dimensions.", "tokens": [407, 1338, 11, 341, 307, 1219, 257, 11004, 294, 3820, 3497, 13, 4477, 27549, 307, 746, 300, 1936, 18081, 264, 1230, 295, 12819, 13], "temperature": 0.0, "avg_logprob": -0.12057169447553918, "compression_ratio": 1.4057971014492754, "no_speech_prob": 4.3568234104895964e-06}, {"id": 473, "seek": 316300, "start": 3163.0, "end": 3173.0, "text": " Not necessarily down to a scalar, but if you start with a vector or reduce it down to a scalar, as is happening here.", "tokens": [1726, 4725, 760, 281, 257, 39684, 11, 457, 498, 291, 722, 365, 257, 8062, 420, 5407, 309, 760, 281, 257, 39684, 11, 382, 307, 2737, 510, 13], "temperature": 0.0, "avg_logprob": -0.1126222257260923, "compression_ratio": 1.425531914893617, "no_speech_prob": 3.041551281057764e-06}, {"id": 474, "seek": 316300, "start": 3173.0, "end": 3180.0, "text": " And there's a very similar one, which does exactly the same thing.", "tokens": [400, 456, 311, 257, 588, 2531, 472, 11, 597, 775, 2293, 264, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.1126222257260923, "compression_ratio": 1.425531914893617, "no_speech_prob": 3.041551281057764e-06}, {"id": 475, "seek": 316300, "start": 3180.0, "end": 3185.0, "text": " But it shows you", "tokens": [583, 309, 3110, 291], "temperature": 0.0, "avg_logprob": -0.1126222257260923, "compression_ratio": 1.425531914893617, "no_speech_prob": 3.041551281057764e-06}, {"id": 476, "seek": 318500, "start": 3185.0, "end": 3200.0, "text": " everything that it does along the way from left to right.", "tokens": [1203, 300, 309, 775, 2051, 264, 636, 490, 1411, 281, 558, 13], "temperature": 0.0, "avg_logprob": -0.10977646708488464, "compression_ratio": 1.5414012738853504, "no_speech_prob": 7.888996151450556e-06}, {"id": 477, "seek": 318500, "start": 3200.0, "end": 3210.0, "text": " So, so now that I think about this backslash version I wonder if maybe it doesn't work the way I just said it to Tanishq. Maybe it always maybe slash is doing it left to right as well.", "tokens": [407, 11, 370, 586, 300, 286, 519, 466, 341, 646, 10418, 1299, 3037, 286, 2441, 498, 1310, 309, 1177, 380, 589, 264, 636, 286, 445, 848, 309, 281, 314, 7524, 80, 13, 2704, 309, 1009, 1310, 17330, 307, 884, 309, 1411, 281, 558, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.10977646708488464, "compression_ratio": 1.5414012738853504, "no_speech_prob": 7.888996151450556e-06}, {"id": 478, "seek": 321000, "start": 3210.0, "end": 3219.0, "text": " The left to right thing is about how it parses a statement like this or an expression.", "tokens": [440, 1411, 281, 558, 551, 307, 466, 577, 309, 21156, 279, 257, 5629, 411, 341, 420, 364, 6114, 13], "temperature": 0.0, "avg_logprob": -0.13583958943684896, "compression_ratio": 1.4816753926701571, "no_speech_prob": 1.8161298385166447e-06}, {"id": 479, "seek": 321000, "start": 3219.0, "end": 3229.0, "text": " But I guess evaluating a reduction. Maybe it is actually evaluating left to right. I mean, neither of these cases doesn't matter. Hey, let's test. Let's do divide.", "tokens": [583, 286, 2041, 27479, 257, 11004, 13, 2704, 309, 307, 767, 27479, 1411, 281, 558, 13, 286, 914, 11, 9662, 295, 613, 3331, 1177, 380, 1871, 13, 1911, 11, 718, 311, 1500, 13, 961, 311, 360, 9845, 13], "temperature": 0.0, "avg_logprob": -0.13583958943684896, "compression_ratio": 1.4816753926701571, "no_speech_prob": 1.8161298385166447e-06}, {"id": 480, "seek": 321000, "start": 3229.0, "end": 3236.0, "text": " Bit of a weird one, but why not?", "tokens": [9101, 295, 257, 3657, 472, 11, 457, 983, 406, 30], "temperature": 0.0, "avg_logprob": -0.13583958943684896, "compression_ratio": 1.4816753926701571, "no_speech_prob": 1.8161298385166447e-06}, {"id": 481, "seek": 323600, "start": 3236.0, "end": 3246.0, "text": " Let's just make it three.", "tokens": [961, 311, 445, 652, 309, 1045, 13], "temperature": 0.0, "avg_logprob": -0.23805806853554465, "compression_ratio": 1.2692307692307692, "no_speech_prob": 2.0459274310269393e-05}, {"id": 482, "seek": 323600, "start": 3246.0, "end": 3253.0, "text": " Oh, whoops. That's strange. Thank you.", "tokens": [876, 11, 567, 3370, 13, 663, 311, 5861, 13, 1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.23805806853554465, "compression_ratio": 1.2692307692307692, "no_speech_prob": 2.0459274310269393e-05}, {"id": 483, "seek": 323600, "start": 3253.0, "end": 3260.0, "text": " Let's see one divided by two is a half and a half divided by three.", "tokens": [961, 311, 536, 472, 6666, 538, 732, 307, 257, 1922, 293, 257, 1922, 6666, 538, 1045, 13], "temperature": 0.0, "avg_logprob": -0.23805806853554465, "compression_ratio": 1.2692307692307692, "no_speech_prob": 2.0459274310269393e-05}, {"id": 484, "seek": 326000, "start": 3260.0, "end": 3274.0, "text": " Okay, no, it is doing right to left. So two divided by three is two thirds. And then the reciprocal of that is one. Okay, so it's definitely going right to left. So backslash must just reverse the order as well.", "tokens": [1033, 11, 572, 11, 309, 307, 884, 558, 281, 1411, 13, 407, 732, 6666, 538, 1045, 307, 732, 34552, 13, 400, 550, 264, 46948, 295, 300, 307, 472, 13, 1033, 11, 370, 309, 311, 2138, 516, 558, 281, 1411, 13, 407, 646, 10418, 1299, 1633, 445, 9943, 264, 1668, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.1995354423040076, "compression_ratio": 1.625, "no_speech_prob": 3.187465154042002e-06}, {"id": 485, "seek": 326000, "start": 3274.0, "end": 3276.0, "text": " Oh, wait, what?", "tokens": [876, 11, 1699, 11, 437, 30], "temperature": 0.0, "avg_logprob": -0.1995354423040076, "compression_ratio": 1.625, "no_speech_prob": 3.187465154042002e-06}, {"id": 486, "seek": 326000, "start": 3276.0, "end": 3280.0, "text": " What is that three divided by two and then divided by one?", "tokens": [708, 307, 300, 1045, 6666, 538, 732, 293, 550, 6666, 538, 472, 30], "temperature": 0.0, "avg_logprob": -0.1995354423040076, "compression_ratio": 1.625, "no_speech_prob": 3.187465154042002e-06}, {"id": 487, "seek": 328000, "start": 3280.0, "end": 3290.0, "text": " To get one point five. It's doing two divided by three to get two over three and then one divided by that to get three over two.", "tokens": [1407, 483, 472, 935, 1732, 13, 467, 311, 884, 732, 6666, 538, 1045, 281, 483, 732, 670, 1045, 293, 550, 472, 6666, 538, 300, 281, 483, 1045, 670, 732, 13], "temperature": 0.0, "avg_logprob": -0.13036173820495606, "compression_ratio": 1.6637931034482758, "no_speech_prob": 1.3844972272636369e-05}, {"id": 488, "seek": 328000, "start": 3290.0, "end": 3298.0, "text": " Because this is the same as one divided by two divided by three.", "tokens": [1436, 341, 307, 264, 912, 382, 472, 6666, 538, 732, 6666, 538, 1045, 13], "temperature": 0.0, "avg_logprob": -0.13036173820495606, "compression_ratio": 1.6637931034482758, "no_speech_prob": 1.3844972272636369e-05}, {"id": 489, "seek": 329800, "start": 3298.0, "end": 3311.0, "text": " The same as one divided by two divided by three, which is the same as one divided by two divided by three.", "tokens": [440, 912, 382, 472, 6666, 538, 732, 6666, 538, 1045, 11, 597, 307, 264, 912, 382, 472, 6666, 538, 732, 6666, 538, 1045, 13], "temperature": 0.0, "avg_logprob": -0.08157773096053327, "compression_ratio": 1.6934306569343065, "no_speech_prob": 5.862604666617699e-06}, {"id": 490, "seek": 329800, "start": 3311.0, "end": 3326.0, "text": " Okay, so I guess backslash is not quite working in either of the ways I thought. I think what it's doing is it's printing out", "tokens": [1033, 11, 370, 286, 2041, 646, 10418, 1299, 307, 406, 1596, 1364, 294, 2139, 295, 264, 2098, 286, 1194, 13, 286, 519, 437, 309, 311, 884, 307, 309, 311, 14699, 484], "temperature": 0.0, "avg_logprob": -0.08157773096053327, "compression_ratio": 1.6934306569343065, "no_speech_prob": 5.862604666617699e-06}, {"id": 491, "seek": 332600, "start": 3326.0, "end": 3329.0, "text": " I need all these spaces.", "tokens": [286, 643, 439, 613, 7673, 13], "temperature": 0.0, "avg_logprob": -0.13814614713191986, "compression_ratio": 1.5753424657534247, "no_speech_prob": 3.822214057436213e-05}, {"id": 492, "seek": 332600, "start": 3329.0, "end": 3336.0, "text": " I think it's just printing out each of these.", "tokens": [286, 519, 309, 311, 445, 14699, 484, 1184, 295, 613, 13], "temperature": 0.0, "avg_logprob": -0.13814614713191986, "compression_ratio": 1.5753424657534247, "no_speech_prob": 3.822214057436213e-05}, {"id": 493, "seek": 332600, "start": 3336.0, "end": 3341.0, "text": " It's doing that.", "tokens": [467, 311, 884, 300, 13], "temperature": 0.0, "avg_logprob": -0.13814614713191986, "compression_ratio": 1.5753424657534247, "no_speech_prob": 3.822214057436213e-05}, {"id": 494, "seek": 332600, "start": 3341.0, "end": 3351.0, "text": " It's kind of like a cumulative function. It's kind of cumulative but it's not right, because this last one actually is doing it right to left.", "tokens": [467, 311, 733, 295, 411, 257, 38379, 2445, 13, 467, 311, 733, 295, 38379, 457, 309, 311, 406, 558, 11, 570, 341, 1036, 472, 767, 307, 884, 309, 558, 281, 1411, 13], "temperature": 0.0, "avg_logprob": -0.13814614713191986, "compression_ratio": 1.5753424657534247, "no_speech_prob": 3.822214057436213e-05}, {"id": 495, "seek": 335100, "start": 3351.0, "end": 3362.0, "text": " It's not really cumulative at all. So I think it is doing every line. So, every two numbers and one more and they print it.", "tokens": [467, 311, 406, 534, 38379, 412, 439, 13, 407, 286, 519, 309, 307, 884, 633, 1622, 13, 407, 11, 633, 732, 3547, 293, 472, 544, 293, 436, 4482, 309, 13], "temperature": 0.0, "avg_logprob": -0.1843702019035042, "compression_ratio": 1.532967032967033, "no_speech_prob": 1.568121115269605e-05}, {"id": 496, "seek": 335100, "start": 3362.0, "end": 3365.0, "text": " Yeah, it's doing every line independently.", "tokens": [865, 11, 309, 311, 884, 633, 1622, 21761, 13], "temperature": 0.0, "avg_logprob": -0.1843702019035042, "compression_ratio": 1.532967032967033, "no_speech_prob": 1.568121115269605e-05}, {"id": 497, "seek": 335100, "start": 3365.0, "end": 3373.0, "text": " So it's not necessarily going to be as efficient as I thought. So we could see that", "tokens": [407, 309, 311, 406, 4725, 516, 281, 312, 382, 7148, 382, 286, 1194, 13, 407, 321, 727, 536, 300], "temperature": 0.0, "avg_logprob": -0.1843702019035042, "compression_ratio": 1.532967032967033, "no_speech_prob": 1.568121115269605e-05}, {"id": 498, "seek": 335100, "start": 3373.0, "end": 3377.0, "text": " hopefully in the docs.", "tokens": [4696, 294, 264, 45623, 13], "temperature": 0.0, "avg_logprob": -0.1843702019035042, "compression_ratio": 1.532967032967033, "no_speech_prob": 1.568121115269605e-05}, {"id": 499, "seek": 335100, "start": 3377.0, "end": 3379.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.1843702019035042, "compression_ratio": 1.532967032967033, "no_speech_prob": 1.568121115269605e-05}, {"id": 500, "seek": 337900, "start": 3379.0, "end": 3391.0, "text": " So, scan, which is a common computer science term for this idea.", "tokens": [407, 11, 11049, 11, 597, 307, 257, 2689, 3820, 3497, 1433, 337, 341, 1558, 13], "temperature": 0.0, "avg_logprob": -0.19523623951694422, "compression_ratio": 1.4248366013071896, "no_speech_prob": 7.600937533425167e-05}, {"id": 501, "seek": 337900, "start": 3391.0, "end": 3396.0, "text": " It's formed by successive reductions.", "tokens": [467, 311, 8693, 538, 48043, 40296, 13], "temperature": 0.0, "avg_logprob": -0.19523623951694422, "compression_ratio": 1.4248366013071896, "no_speech_prob": 7.600937533425167e-05}, {"id": 502, "seek": 337900, "start": 3396.0, "end": 3407.0, "text": " It doesn't really explain exactly how it's done it, but we can see from the divide example how it must be doing it.", "tokens": [467, 1177, 380, 534, 2903, 2293, 577, 309, 311, 1096, 309, 11, 457, 321, 393, 536, 490, 264, 9845, 1365, 577, 309, 1633, 312, 884, 309, 13], "temperature": 0.0, "avg_logprob": -0.19523623951694422, "compression_ratio": 1.4248366013071896, "no_speech_prob": 7.600937533425167e-05}, {"id": 503, "seek": 340700, "start": 3407.0, "end": 3410.0, "text": " There's this reduce thing happening.", "tokens": [821, 311, 341, 5407, 551, 2737, 13], "temperature": 0.0, "avg_logprob": -0.1557245135307312, "compression_ratio": 1.5707070707070707, "no_speech_prob": 1.2026213880744763e-05}, {"id": 504, "seek": 340700, "start": 3410.0, "end": 3420.0, "text": " But I also recall from functional programming, reduce with memo. Is there such a thing?", "tokens": [583, 286, 611, 9901, 490, 11745, 9410, 11, 5407, 365, 35900, 13, 1119, 456, 1270, 257, 551, 30], "temperature": 0.0, "avg_logprob": -0.1557245135307312, "compression_ratio": 1.5707070707070707, "no_speech_prob": 1.2026213880744763e-05}, {"id": 505, "seek": 340700, "start": 3420.0, "end": 3422.0, "text": " Memoization?", "tokens": [8731, 78, 2144, 30], "temperature": 0.0, "avg_logprob": -0.1557245135307312, "compression_ratio": 1.5707070707070707, "no_speech_prob": 1.2026213880744763e-05}, {"id": 506, "seek": 340700, "start": 3422.0, "end": 3426.0, "text": " No, like when you start with an initial value.", "tokens": [883, 11, 411, 562, 291, 722, 365, 364, 5883, 2158, 13], "temperature": 0.0, "avg_logprob": -0.1557245135307312, "compression_ratio": 1.5707070707070707, "no_speech_prob": 1.2026213880744763e-05}, {"id": 507, "seek": 340700, "start": 3426.0, "end": 3435.0, "text": " Oh, with an initial value. So, there's not really any need for that here because you can always just insert the initial value.", "tokens": [876, 11, 365, 364, 5883, 2158, 13, 407, 11, 456, 311, 406, 534, 604, 643, 337, 300, 510, 570, 291, 393, 1009, 445, 8969, 264, 5883, 2158, 13], "temperature": 0.0, "avg_logprob": -0.1557245135307312, "compression_ratio": 1.5707070707070707, "no_speech_prob": 1.2026213880744763e-05}, {"id": 508, "seek": 343500, "start": 3435.0, "end": 3437.0, "text": " That's the first element, right?", "tokens": [663, 311, 264, 700, 4478, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.14802764012263372, "compression_ratio": 1.4585987261146496, "no_speech_prob": 1.3210507859184872e-05}, {"id": 509, "seek": 343500, "start": 3437.0, "end": 3442.0, "text": " Yeah. I think", "tokens": [865, 13, 286, 519], "temperature": 0.0, "avg_logprob": -0.14802764012263372, "compression_ratio": 1.4585987261146496, "no_speech_prob": 1.3210507859184872e-05}, {"id": 510, "seek": 343500, "start": 3442.0, "end": 3449.0, "text": " we haven't covered this yet, but I think we might be able to use like comma for that.", "tokens": [321, 2378, 380, 5343, 341, 1939, 11, 457, 286, 519, 321, 1062, 312, 1075, 281, 764, 411, 22117, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.14802764012263372, "compression_ratio": 1.4585987261146496, "no_speech_prob": 1.3210507859184872e-05}, {"id": 511, "seek": 343500, "start": 3449.0, "end": 3458.0, "text": " Yeah, so comma concatenates. So you could always just put like comma with your first value here.", "tokens": [865, 11, 370, 22117, 1588, 7186, 1024, 13, 407, 291, 727, 1009, 445, 829, 411, 22117, 365, 428, 700, 2158, 510, 13], "temperature": 0.0, "avg_logprob": -0.14802764012263372, "compression_ratio": 1.4585987261146496, "no_speech_prob": 1.3210507859184872e-05}, {"id": 512, "seek": 345800, "start": 3458.0, "end": 3468.0, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.1335321565469106, "compression_ratio": 0.7241379310344828, "no_speech_prob": 1.2605531082954258e-05}, {"id": 513, "seek": 345800, "start": 3468.0, "end": 3482.0, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.1335321565469106, "compression_ratio": 0.7241379310344828, "no_speech_prob": 1.2605531082954258e-05}, {"id": 514, "seek": 348200, "start": 3482.0, "end": 3504.0, "text": " One way I've seen these reduce work as well is if you combine it with equals or eventually like min or max or whatever, you can kind of look for either the minimum or the maximum or see if the entire array is not a unique value.", "tokens": [1485, 636, 286, 600, 1612, 613, 5407, 589, 382, 731, 307, 498, 291, 10432, 309, 365, 6915, 420, 4728, 411, 923, 420, 11469, 420, 2035, 11, 291, 393, 733, 295, 574, 337, 2139, 264, 7285, 420, 264, 6674, 420, 536, 498, 264, 2302, 10225, 307, 406, 257, 3845, 2158, 13], "temperature": 0.0, "avg_logprob": -0.2095722092522515, "compression_ratio": 1.4522292993630572, "no_speech_prob": 3.844741513603367e-06}, {"id": 515, "seek": 350400, "start": 3504.0, "end": 3512.0, "text": " We actually haven't done min and max yet, but I think that's a great idea to put them before this.", "tokens": [492, 767, 2378, 380, 1096, 923, 293, 11469, 1939, 11, 457, 286, 519, 300, 311, 257, 869, 1558, 281, 829, 552, 949, 341, 13], "temperature": 0.0, "avg_logprob": -0.10555741522047254, "compression_ratio": 1.1734693877551021, "no_speech_prob": 5.421700734586921e-06}, {"id": 516, "seek": 350400, "start": 3512.0, "end": 3520.0, "text": " So, min and max.", "tokens": [407, 11, 923, 293, 11469, 13], "temperature": 0.0, "avg_logprob": -0.10555741522047254, "compression_ratio": 1.1734693877551021, "no_speech_prob": 5.421700734586921e-06}, {"id": 517, "seek": 352000, "start": 3520.0, "end": 3534.0, "text": " And are they going to have monadic versions? They do actually, I'm pretty sure.", "tokens": [400, 366, 436, 516, 281, 362, 1108, 43341, 9606, 30, 814, 360, 767, 11, 286, 478, 1238, 988, 13], "temperature": 0.0, "avg_logprob": -0.19568113485972086, "compression_ratio": 1.25, "no_speech_prob": 1.0450894478708506e-05}, {"id": 518, "seek": 352000, "start": 3534.0, "end": 3538.0, "text": " Okay, so", "tokens": [1033, 11, 370], "temperature": 0.0, "avg_logprob": -0.19568113485972086, "compression_ratio": 1.25, "no_speech_prob": 1.0450894478708506e-05}, {"id": 519, "seek": 352000, "start": 3538.0, "end": 3541.0, "text": " I never really remember which way around there, but there's S and there's D.", "tokens": [286, 1128, 534, 1604, 597, 636, 926, 456, 11, 457, 456, 311, 318, 293, 456, 311, 413, 13], "temperature": 0.0, "avg_logprob": -0.19568113485972086, "compression_ratio": 1.25, "no_speech_prob": 1.0450894478708506e-05}, {"id": 520, "seek": 354100, "start": 3541.0, "end": 3555.0, "text": " So S is this one, and it's called something style, up style.", "tokens": [407, 318, 307, 341, 472, 11, 293, 309, 311, 1219, 746, 3758, 11, 493, 3758, 13], "temperature": 0.0, "avg_logprob": -0.21633338928222656, "compression_ratio": 1.236842105263158, "no_speech_prob": 5.594083631876856e-06}, {"id": 521, "seek": 354100, "start": 3555.0, "end": 3557.0, "text": " Yep, up style.", "tokens": [7010, 11, 493, 3758, 13], "temperature": 0.0, "avg_logprob": -0.21633338928222656, "compression_ratio": 1.236842105263158, "no_speech_prob": 5.594083631876856e-06}, {"id": 522, "seek": 354100, "start": 3557.0, "end": 3558.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.21633338928222656, "compression_ratio": 1.236842105263158, "no_speech_prob": 5.594083631876856e-06}, {"id": 523, "seek": 354100, "start": 3558.0, "end": 3562.0, "text": " So up style.", "tokens": [407, 493, 3758, 13], "temperature": 0.0, "avg_logprob": -0.21633338928222656, "compression_ratio": 1.236842105263158, "no_speech_prob": 5.594083631876856e-06}, {"id": 524, "seek": 356200, "start": 3562.0, "end": 3590.0, "text": " Okay, so the monadic version is slightly less relevant. It's called ceiling.", "tokens": [1033, 11, 370, 264, 1108, 43341, 3037, 307, 4748, 1570, 7340, 13, 467, 311, 1219, 13655, 13], "temperature": 0.0, "avg_logprob": -0.14241476286025273, "compression_ratio": 1.0, "no_speech_prob": 2.317258076800499e-05}, {"id": 525, "seek": 359000, "start": 3590.0, "end": 3593.0, "text": " So that's just a roundup thing.", "tokens": [407, 300, 311, 445, 257, 3098, 1010, 551, 13], "temperature": 0.0, "avg_logprob": -0.2115203050466684, "compression_ratio": 1.4964028776978417, "no_speech_prob": 1.012904704111861e-05}, {"id": 526, "seek": 359000, "start": 3593.0, "end": 3610.0, "text": " Yep. Just a roundup thing. So it's normally called ceiling and floor in both programming languages. It's finding the nearest integer that's greater than or equal to the number.", "tokens": [7010, 13, 1449, 257, 3098, 1010, 551, 13, 407, 309, 311, 5646, 1219, 13655, 293, 4123, 294, 1293, 9410, 8650, 13, 467, 311, 5006, 264, 23831, 24922, 300, 311, 5044, 813, 420, 2681, 281, 264, 1230, 13], "temperature": 0.0, "avg_logprob": -0.2115203050466684, "compression_ratio": 1.4964028776978417, "no_speech_prob": 1.012904704111861e-05}, {"id": 527, "seek": 361000, "start": 3610.0, "end": 3629.0, "text": " And D, I assume is called down style.", "tokens": [400, 413, 11, 286, 6552, 307, 1219, 760, 3758, 13], "temperature": 0.0, "avg_logprob": -0.20782370226723806, "compression_ratio": 0.8222222222222222, "no_speech_prob": 2.1781703253509477e-05}, {"id": 528, "seek": 362900, "start": 3629.0, "end": 3643.0, "text": " And therefore this one is going to be called floor, I assume.", "tokens": [400, 4412, 341, 472, 307, 516, 281, 312, 1219, 4123, 11, 286, 6552, 13], "temperature": 0.0, "avg_logprob": -0.11258926874474634, "compression_ratio": 1.6569767441860466, "no_speech_prob": 1.1015881682396866e-06}, {"id": 529, "seek": 362900, "start": 3643.0, "end": 3651.0, "text": " And so there's a good, you know, kind of mnemonic for these, right? This is, you can see this is going up to the ceiling, this is going down to the floor.", "tokens": [400, 370, 456, 311, 257, 665, 11, 291, 458, 11, 733, 295, 275, 25989, 11630, 337, 613, 11, 558, 30, 639, 307, 11, 291, 393, 536, 341, 307, 516, 493, 281, 264, 13655, 11, 341, 307, 516, 760, 281, 264, 4123, 13], "temperature": 0.0, "avg_logprob": -0.11258926874474634, "compression_ratio": 1.6569767441860466, "no_speech_prob": 1.1015881682396866e-06}, {"id": 530, "seek": 362900, "start": 3651.0, "end": 3656.0, "text": " So you can see this one's being rounded down to the nearest integer.", "tokens": [407, 291, 393, 536, 341, 472, 311, 885, 23382, 760, 281, 264, 23831, 24922, 13], "temperature": 0.0, "avg_logprob": -0.11258926874474634, "compression_ratio": 1.6569767441860466, "no_speech_prob": 1.1015881682396866e-06}, {"id": 531, "seek": 365600, "start": 3656.0, "end": 3670.0, "text": " Okay, so apropos of Isaac's point, the dyadic ones are interesting when we reduce them, because dyadic,", "tokens": [1033, 11, 370, 1882, 1513, 329, 295, 22505, 311, 935, 11, 264, 14584, 43341, 2306, 366, 1880, 562, 321, 5407, 552, 11, 570, 14584, 43341, 11], "temperature": 0.0, "avg_logprob": -0.18349493344624837, "compression_ratio": 1.1573033707865168, "no_speech_prob": 3.1688967283116654e-05}, {"id": 532, "seek": 367000, "start": 3670.0, "end": 3686.0, "text": " they're called min and max, yep, maximum.", "tokens": [436, 434, 1219, 923, 293, 11469, 11, 18633, 11, 6674, 13], "temperature": 0.0, "avg_logprob": -0.3212710527273325, "compression_ratio": 1.051948051948052, "no_speech_prob": 2.9944185371277854e-06}, {"id": 533, "seek": 367000, "start": 3686.0, "end": 3690.0, "text": " Returns the greater than of two things.", "tokens": [24350, 82, 264, 5044, 813, 295, 732, 721, 13], "temperature": 0.0, "avg_logprob": -0.3212710527273325, "compression_ratio": 1.051948051948052, "no_speech_prob": 2.9944185371277854e-06}, {"id": 534, "seek": 369000, "start": 3690.0, "end": 3704.0, "text": " Now notice here that even though I don't have a space, this is the list, the array three two, maximum, the array two three. So that'll be element wise, always element wise. That's the maximum of three and two will be the first element.", "tokens": [823, 3449, 510, 300, 754, 1673, 286, 500, 380, 362, 257, 1901, 11, 341, 307, 264, 1329, 11, 264, 10225, 1045, 732, 11, 6674, 11, 264, 10225, 732, 1045, 13, 407, 300, 603, 312, 4478, 10829, 11, 1009, 4478, 10829, 13, 663, 311, 264, 6674, 295, 1045, 293, 732, 486, 312, 264, 700, 4478, 13], "temperature": 0.0, "avg_logprob": -0.161236994975322, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.3320549189520534e-06}, {"id": 535, "seek": 369000, "start": 3704.0, "end": 3710.0, "text": " And the maximum of two and three will be the second element.", "tokens": [400, 264, 6674, 295, 732, 293, 1045, 486, 312, 264, 1150, 4478, 13], "temperature": 0.0, "avg_logprob": -0.161236994975322, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.3320549189520534e-06}, {"id": 536, "seek": 371000, "start": 3710.0, "end": 3735.0, "text": " And then yeah, where it gets pretty interesting is what if we create a", "tokens": [400, 550, 1338, 11, 689, 309, 2170, 1238, 1880, 307, 437, 498, 321, 1884, 257], "temperature": 0.0, "avg_logprob": -0.17967412346287778, "compression_ratio": 1.044776119402985, "no_speech_prob": 1.3211433724791277e-05}, {"id": 537, "seek": 373500, "start": 3735.0, "end": 3742.0, "text": " random number here, something like that.", "tokens": [4974, 1230, 510, 11, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.22501586612902189, "compression_ratio": 1.6, "no_speech_prob": 6.339164883684134e-06}, {"id": 538, "seek": 373500, "start": 3742.0, "end": 3744.0, "text": " Actually, let's just do a few of them.", "tokens": [5135, 11, 718, 311, 445, 360, 257, 1326, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.22501586612902189, "compression_ratio": 1.6, "no_speech_prob": 6.339164883684134e-06}, {"id": 539, "seek": 373500, "start": 3744.0, "end": 3748.0, "text": " Four, six, two.", "tokens": [7451, 11, 2309, 11, 732, 13], "temperature": 0.0, "avg_logprob": -0.22501586612902189, "compression_ratio": 1.6, "no_speech_prob": 6.339164883684134e-06}, {"id": 540, "seek": 373500, "start": 3748.0, "end": 3754.0, "text": " Four, six, two.", "tokens": [7451, 11, 2309, 11, 732, 13], "temperature": 0.0, "avg_logprob": -0.22501586612902189, "compression_ratio": 1.6, "no_speech_prob": 6.339164883684134e-06}, {"id": 541, "seek": 373500, "start": 3754.0, "end": 3763.0, "text": " So that's going to pass it first of all as maximum of six and two, which is six, and then maximum of six and four, which is six.", "tokens": [407, 300, 311, 516, 281, 1320, 309, 700, 295, 439, 382, 6674, 295, 2309, 293, 732, 11, 597, 307, 2309, 11, 293, 550, 6674, 295, 2309, 293, 1451, 11, 597, 307, 2309, 13], "temperature": 0.0, "avg_logprob": -0.22501586612902189, "compression_ratio": 1.6, "no_speech_prob": 6.339164883684134e-06}, {"id": 542, "seek": 376300, "start": 3763.0, "end": 3778.0, "text": " And so where that gets interesting is we can then reduce slash, like so, reduce slash,", "tokens": [400, 370, 689, 300, 2170, 1880, 307, 321, 393, 550, 5407, 17330, 11, 411, 370, 11, 5407, 17330, 11], "temperature": 0.0, "avg_logprob": -0.18387439639069314, "compression_ratio": 1.4065040650406504, "no_speech_prob": 4.6378399929380976e-06}, {"id": 543, "seek": 376300, "start": 3778.0, "end": 3785.0, "text": " and get the same thing. Does that make sense? Because that's literally going to insert", "tokens": [293, 483, 264, 912, 551, 13, 4402, 300, 652, 2020, 30, 1436, 300, 311, 3736, 516, 281, 8969], "temperature": 0.0, "avg_logprob": -0.18387439639069314, "compression_ratio": 1.4065040650406504, "no_speech_prob": 4.6378399929380976e-06}, {"id": 544, "seek": 378500, "start": 3785.0, "end": 3793.0, "text": " the operator between each pair of elements.", "tokens": [264, 12973, 1296, 1184, 6119, 295, 4959, 13], "temperature": 0.0, "avg_logprob": -0.053051496806897615, "compression_ratio": 1.233644859813084, "no_speech_prob": 1.267918491976161e-06}, {"id": 545, "seek": 378500, "start": 3793.0, "end": 3801.0, "text": " So that is the same as that. Does that make sense?", "tokens": [407, 300, 307, 264, 912, 382, 300, 13, 4402, 300, 652, 2020, 30], "temperature": 0.0, "avg_logprob": -0.053051496806897615, "compression_ratio": 1.233644859813084, "no_speech_prob": 1.267918491976161e-06}, {"id": 546, "seek": 378500, "start": 3801.0, "end": 3806.0, "text": " So I think that's really quite great.", "tokens": [407, 286, 519, 300, 311, 534, 1596, 869, 13], "temperature": 0.0, "avg_logprob": -0.053051496806897615, "compression_ratio": 1.233644859813084, "no_speech_prob": 1.267918491976161e-06}, {"id": 547, "seek": 380600, "start": 3806.0, "end": 3824.0, "text": " Another thing that I found helpful with the up-to-down style is you can do like four and then one of the styles in an array, and it will kind of set your own custom minimal or maximum value, kind of a cut off an array.", "tokens": [3996, 551, 300, 286, 1352, 4961, 365, 264, 493, 12, 1353, 12, 5093, 3758, 307, 291, 393, 360, 411, 1451, 293, 550, 472, 295, 264, 13273, 294, 364, 10225, 11, 293, 309, 486, 733, 295, 992, 428, 1065, 2375, 13206, 420, 6674, 2158, 11, 733, 295, 257, 1723, 766, 364, 10225, 13], "temperature": 0.0, "avg_logprob": -0.2387831027691181, "compression_ratio": 1.559782608695652, "no_speech_prob": 5.093522304377984e-06}, {"id": 548, "seek": 380600, "start": 3824.0, "end": 3828.0, "text": " Right, right, right. So we could do a four style, three, four, five.", "tokens": [1779, 11, 558, 11, 558, 13, 407, 321, 727, 360, 257, 1451, 3758, 11, 1045, 11, 1451, 11, 1732, 13], "temperature": 0.0, "avg_logprob": -0.2387831027691181, "compression_ratio": 1.559782608695652, "no_speech_prob": 5.093522304377984e-06}, {"id": 549, "seek": 382800, "start": 3828.0, "end": 3841.0, "text": " We could do a value operator, right? So we could do, yeah, let's do that. Okay, so let's do negative four.", "tokens": [492, 727, 360, 257, 2158, 12973, 11, 558, 30, 407, 321, 727, 360, 11, 1338, 11, 718, 311, 360, 300, 13, 1033, 11, 370, 718, 311, 360, 3671, 1451, 13], "temperature": 0.0, "avg_logprob": -0.1306321297162845, "compression_ratio": 1.6606060606060606, "no_speech_prob": 7.2960697252710816e-06}, {"id": 550, "seek": 382800, "start": 3841.0, "end": 3850.0, "text": " Negative four, six, two. And so then we could do that.", "tokens": [43230, 1451, 11, 2309, 11, 732, 13, 400, 370, 550, 321, 727, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.1306321297162845, "compression_ratio": 1.6606060606060606, "no_speech_prob": 7.2960697252710816e-06}, {"id": 551, "seek": 382800, "start": 3850.0, "end": 3857.0, "text": " And that's going to do a value operator because it's truncating negative to zero. Is that what you meant, Isaac?", "tokens": [400, 300, 311, 516, 281, 360, 257, 2158, 12973, 570, 309, 311, 504, 409, 66, 990, 3671, 281, 4018, 13, 1119, 300, 437, 291, 4140, 11, 22505, 30], "temperature": 0.0, "avg_logprob": -0.1306321297162845, "compression_ratio": 1.6606060606060606, "no_speech_prob": 7.2960697252710816e-06}, {"id": 552, "seek": 385700, "start": 3857.0, "end": 3859.0, "text": " Yeah, that's exactly what I meant.", "tokens": [865, 11, 300, 311, 2293, 437, 286, 4140, 13], "temperature": 0.0, "avg_logprob": -0.25248227580901117, "compression_ratio": 1.3209876543209877, "no_speech_prob": 1.341960160061717e-05}, {"id": 553, "seek": 385700, "start": 3859.0, "end": 3862.0, "text": " Excellent.", "tokens": [16723, 13], "temperature": 0.0, "avg_logprob": -0.25248227580901117, "compression_ratio": 1.3209876543209877, "no_speech_prob": 1.341960160061717e-05}, {"id": 554, "seek": 385700, "start": 3862.0, "end": 3864.0, "text": " One glyph activation.", "tokens": [1485, 22633, 950, 24433, 13], "temperature": 0.0, "avg_logprob": -0.25248227580901117, "compression_ratio": 1.3209876543209877, "no_speech_prob": 1.341960160061717e-05}, {"id": 555, "seek": 385700, "start": 3864.0, "end": 3866.0, "text": " Yes, exactly.", "tokens": [1079, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.25248227580901117, "compression_ratio": 1.3209876543209877, "no_speech_prob": 1.341960160061717e-05}, {"id": 556, "seek": 385700, "start": 3866.0, "end": 3868.0, "text": " Just how rarely should be expressed there.", "tokens": [1449, 577, 13752, 820, 312, 12675, 456, 13], "temperature": 0.0, "avg_logprob": -0.25248227580901117, "compression_ratio": 1.3209876543209877, "no_speech_prob": 1.341960160061717e-05}, {"id": 557, "seek": 385700, "start": 3868.0, "end": 3880.0, "text": " There's actually a paper I found somewhere, which was APL, and then convolutional neural.", "tokens": [821, 311, 767, 257, 3035, 286, 1352, 4079, 11, 597, 390, 5372, 43, 11, 293, 550, 45216, 304, 18161, 13], "temperature": 0.0, "avg_logprob": -0.25248227580901117, "compression_ratio": 1.3209876543209877, "no_speech_prob": 1.341960160061717e-05}, {"id": 558, "seek": 388000, "start": 3880.0, "end": 3889.0, "text": " I think they actually have a GitHub repository with their code as well. Didn't make all that sense to me, but hopefully one day it will.", "tokens": [286, 519, 436, 767, 362, 257, 23331, 25841, 365, 641, 3089, 382, 731, 13, 11151, 380, 652, 439, 300, 2020, 281, 385, 11, 457, 4696, 472, 786, 309, 486, 13], "temperature": 0.0, "avg_logprob": -0.13707008914671082, "compression_ratio": 1.4031413612565444, "no_speech_prob": 5.422059984994121e-06}, {"id": 559, "seek": 388000, "start": 3889.0, "end": 3891.0, "text": " Yeah, yeah.", "tokens": [865, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.13707008914671082, "compression_ratio": 1.4031413612565444, "no_speech_prob": 5.422059984994121e-06}, {"id": 560, "seek": 388000, "start": 3891.0, "end": 3902.0, "text": " This is all of the from scratch implementations of layers of a confnet, or at least the types that were common in 2019.", "tokens": [639, 307, 439, 295, 264, 490, 8459, 4445, 763, 295, 7914, 295, 257, 1497, 7129, 11, 420, 412, 1935, 264, 3467, 300, 645, 2689, 294, 6071, 13], "temperature": 0.0, "avg_logprob": -0.13707008914671082, "compression_ratio": 1.4031413612565444, "no_speech_prob": 5.422059984994121e-06}, {"id": 561, "seek": 390200, "start": 3902.0, "end": 3912.0, "text": " Just need backwards. I think backwards is here.", "tokens": [1449, 643, 12204, 13, 286, 519, 12204, 307, 510, 13], "temperature": 0.0, "avg_logprob": -0.1978181443124447, "compression_ratio": 1.4689655172413794, "no_speech_prob": 3.320071118650958e-05}, {"id": 562, "seek": 390200, "start": 3912.0, "end": 3926.0, "text": " And so for convolutions, they actually had this version here, although when I read a bit further, they said that there are, there's an easier way to do convolutions.", "tokens": [400, 370, 337, 3754, 15892, 11, 436, 767, 632, 341, 3037, 510, 11, 4878, 562, 286, 1401, 257, 857, 3052, 11, 436, 848, 300, 456, 366, 11, 456, 311, 364, 3571, 636, 281, 360, 3754, 15892, 13], "temperature": 0.0, "avg_logprob": -0.1978181443124447, "compression_ratio": 1.4689655172413794, "no_speech_prob": 3.320071118650958e-05}, {"id": 563, "seek": 392600, "start": 3926.0, "end": 3932.0, "text": " CNN building blocks convolution.", "tokens": [24859, 2390, 8474, 45216, 13], "temperature": 0.0, "avg_logprob": -0.1634701948899489, "compression_ratio": 1.4093264248704662, "no_speech_prob": 3.269493754487485e-05}, {"id": 564, "seek": 392600, "start": 3932.0, "end": 3935.0, "text": " This is, they said you can do something like this apparently.", "tokens": [639, 307, 11, 436, 848, 291, 393, 360, 746, 411, 341, 7970, 13], "temperature": 0.0, "avg_logprob": -0.1634701948899489, "compression_ratio": 1.4093264248704662, "no_speech_prob": 3.269493754487485e-05}, {"id": 565, "seek": 392600, "start": 3935.0, "end": 3938.0, "text": " Anyway, I guess we'll get there.", "tokens": [5684, 11, 286, 2041, 321, 603, 483, 456, 13], "temperature": 0.0, "avg_logprob": -0.1634701948899489, "compression_ratio": 1.4093264248704662, "no_speech_prob": 3.269493754487485e-05}, {"id": 566, "seek": 392600, "start": 3938.0, "end": 3949.0, "text": " I'll put this in the chat if anybody wants to add it to our session notes. Chat, chat, chat. Where's my chat button?", "tokens": [286, 603, 829, 341, 294, 264, 5081, 498, 4472, 2738, 281, 909, 309, 281, 527, 5481, 5570, 13, 27503, 11, 5081, 11, 5081, 13, 2305, 311, 452, 5081, 2960, 30], "temperature": 0.0, "avg_logprob": -0.1634701948899489, "compression_ratio": 1.4093264248704662, "no_speech_prob": 3.269493754487485e-05}, {"id": 567, "seek": 392600, "start": 3949.0, "end": 3955.0, "text": " Oh, I've got it popped out.", "tokens": [876, 11, 286, 600, 658, 309, 21545, 484, 13], "temperature": 0.0, "avg_logprob": -0.1634701948899489, "compression_ratio": 1.4093264248704662, "no_speech_prob": 3.269493754487485e-05}, {"id": 568, "seek": 395500, "start": 3955.0, "end": 3963.0, "text": " Oh, and I can put the link in the GitHub repository if you want to look at it. Great. More of their code too.", "tokens": [876, 11, 293, 286, 393, 829, 264, 2113, 294, 264, 23331, 25841, 498, 291, 528, 281, 574, 412, 309, 13, 3769, 13, 5048, 295, 641, 3089, 886, 13], "temperature": 0.0, "avg_logprob": -0.23178158700466156, "compression_ratio": 1.412121212121212, "no_speech_prob": 6.338826096907724e-06}, {"id": 569, "seek": 395500, "start": 3963.0, "end": 3978.0, "text": " Oh, and Kurian mentioned that the, that the little, that f string trick with equals in it is actually only from Python 3.8.", "tokens": [876, 11, 293, 16481, 952, 2835, 300, 264, 11, 300, 264, 707, 11, 300, 283, 6798, 4282, 365, 6915, 294, 309, 307, 767, 787, 490, 15329, 805, 13, 23, 13], "temperature": 0.0, "avg_logprob": -0.23178158700466156, "compression_ratio": 1.412121212121212, "no_speech_prob": 6.338826096907724e-06}, {"id": 570, "seek": 397800, "start": 3978.0, "end": 3989.0, "text": " So, probably best not to use it just yet.", "tokens": [407, 11, 1391, 1151, 406, 281, 764, 309, 445, 1939, 13], "temperature": 0.0, "avg_logprob": -0.1290791114171346, "compression_ratio": 0.8541666666666666, "no_speech_prob": 4.534488107310608e-05}, {"id": 571, "seek": 398900, "start": 3989.0, "end": 4008.0, "text": " Or a choice.", "tokens": [1610, 257, 3922, 13], "temperature": 0.0, "avg_logprob": -0.4883047617398776, "compression_ratio": 0.7037037037037037, "no_speech_prob": 3.474586264928803e-05}, {"id": 572, "seek": 398900, "start": 4008.0, "end": 4011.0, "text": " I see.", "tokens": [286, 536, 13], "temperature": 0.0, "avg_logprob": -0.4883047617398776, "compression_ratio": 0.7037037037037037, "no_speech_prob": 3.474586264928803e-05}, {"id": 573, "seek": 401100, "start": 4011.0, "end": 4020.0, "text": " CNN.", "tokens": [24859, 13], "temperature": 0.0, "avg_logprob": -0.25852394104003906, "compression_ratio": 1.2554744525547445, "no_speech_prob": 3.0414594220928848e-06}, {"id": 574, "seek": 401100, "start": 4020.0, "end": 4022.0, "text": " Aero networks.", "tokens": [316, 2032, 9590, 13], "temperature": 0.0, "avg_logprob": -0.25852394104003906, "compression_ratio": 1.2554744525547445, "no_speech_prob": 3.0414594220928848e-06}, {"id": 575, "seek": 401100, "start": 4022.0, "end": 4030.0, "text": " And this is the Rodrigo who I was chatting to about dialogue kernel.", "tokens": [400, 341, 307, 264, 25904, 78, 567, 286, 390, 24654, 281, 466, 10221, 28256, 13], "temperature": 0.0, "avg_logprob": -0.25852394104003906, "compression_ratio": 1.2554744525547445, "no_speech_prob": 3.0414594220928848e-06}, {"id": 576, "seek": 401100, "start": 4030.0, "end": 4032.0, "text": " Very cool.", "tokens": [4372, 1627, 13], "temperature": 0.0, "avg_logprob": -0.25852394104003906, "compression_ratio": 1.2554744525547445, "no_speech_prob": 3.0414594220928848e-06}, {"id": 577, "seek": 401100, "start": 4032.0, "end": 4034.0, "text": " Actually, I'm looking at that.", "tokens": [5135, 11, 286, 478, 1237, 412, 300, 13], "temperature": 0.0, "avg_logprob": -0.25852394104003906, "compression_ratio": 1.2554744525547445, "no_speech_prob": 3.0414594220928848e-06}, {"id": 578, "seek": 401100, "start": 4034.0, "end": 4037.0, "text": " And we realized that we covered the lamp.", "tokens": [400, 321, 5334, 300, 321, 5343, 264, 12684, 13], "temperature": 0.0, "avg_logprob": -0.25852394104003906, "compression_ratio": 1.2554744525547445, "no_speech_prob": 3.0414594220928848e-06}, {"id": 579, "seek": 403700, "start": 4037.0, "end": 4042.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.17363645972275152, "compression_ratio": 1.2293577981651376, "no_speech_prob": 4.32971901318524e-05}, {"id": 580, "seek": 403700, "start": 4042.0, "end": 4044.0, "text": " I don't think so.", "tokens": [286, 500, 380, 519, 370, 13], "temperature": 0.0, "avg_logprob": -0.17363645972275152, "compression_ratio": 1.2293577981651376, "no_speech_prob": 4.32971901318524e-05}, {"id": 581, "seek": 403700, "start": 4044.0, "end": 4053.0, "text": " Wouldn't be a bad thing to include quite early on because otherwise it's just going to be confusing, isn't it?", "tokens": [26291, 380, 312, 257, 1578, 551, 281, 4090, 1596, 2440, 322, 570, 5911, 309, 311, 445, 516, 281, 312, 13181, 11, 1943, 380, 309, 30], "temperature": 0.0, "avg_logprob": -0.17363645972275152, "compression_ratio": 1.2293577981651376, "no_speech_prob": 4.32971901318524e-05}, {"id": 582, "seek": 405300, "start": 4053.0, "end": 4072.0, "text": " Fix. Just get this sorted out.", "tokens": [25538, 13, 1449, 483, 341, 25462, 484, 13], "temperature": 0.0, "avg_logprob": -0.3630545934041341, "compression_ratio": 0.7894736842105263, "no_speech_prob": 0.0002904656867031008}, {"id": 583, "seek": 407200, "start": 4072.0, "end": 4090.0, "text": " So, in terms of getting the D and the S, the minimum, the maximum, the right way around, the fact that this is D for down style is actually quite helpful.", "tokens": [407, 11, 294, 2115, 295, 1242, 264, 413, 293, 264, 318, 11, 264, 7285, 11, 264, 6674, 11, 264, 558, 636, 926, 11, 264, 1186, 300, 341, 307, 413, 337, 760, 3758, 307, 767, 1596, 4961, 13], "temperature": 0.0, "avg_logprob": -0.16907875210631126, "compression_ratio": 1.4166666666666667, "no_speech_prob": 3.5556995499064215e-06}, {"id": 584, "seek": 407200, "start": 4090.0, "end": 4100.0, "text": " That's a character for that one.", "tokens": [663, 311, 257, 2517, 337, 300, 472, 13], "temperature": 0.0, "avg_logprob": -0.16907875210631126, "compression_ratio": 1.4166666666666667, "no_speech_prob": 3.5556995499064215e-06}, {"id": 585, "seek": 410000, "start": 4100.0, "end": 4106.0, "text": " Wait, what happened to the.", "tokens": [3802, 11, 437, 2011, 281, 264, 13], "temperature": 0.0, "avg_logprob": -0.20376255473152535, "compression_ratio": 1.4594594594594594, "no_speech_prob": 3.76219286408741e-05}, {"id": 586, "seek": 410000, "start": 4106.0, "end": 4115.0, "text": " Oh, this value thing. Okay, we've got it in the wrong spot because this is not a slash. So I should put this up here.", "tokens": [876, 11, 341, 2158, 551, 13, 1033, 11, 321, 600, 658, 309, 294, 264, 2085, 4008, 570, 341, 307, 406, 257, 17330, 13, 407, 286, 820, 829, 341, 493, 510, 13], "temperature": 0.0, "avg_logprob": -0.20376255473152535, "compression_ratio": 1.4594594594594594, "no_speech_prob": 3.76219286408741e-05}, {"id": 587, "seek": 410000, "start": 4115.0, "end": 4124.0, "text": " Okay. So, what character what what keyboard is the comment lamp thing.", "tokens": [1033, 13, 407, 11, 437, 2517, 437, 437, 10186, 307, 264, 2871, 12684, 551, 13], "temperature": 0.0, "avg_logprob": -0.20376255473152535, "compression_ratio": 1.4594594594594594, "no_speech_prob": 3.76219286408741e-05}, {"id": 588, "seek": 412400, "start": 4124.0, "end": 4146.0, "text": " The back to comma.", "tokens": [440, 646, 281, 22117, 13], "temperature": 0.0, "avg_logprob": -0.5723208321465386, "compression_ratio": 0.6923076923076923, "no_speech_prob": 0.00013755529653280973}, {"id": 589, "seek": 414600, "start": 4146.0, "end": 4161.0, "text": " This is a comment.", "tokens": [639, 307, 257, 2871, 13], "temperature": 0.0, "avg_logprob": -0.21884801983833313, "compression_ratio": 1.054054054054054, "no_speech_prob": 5.254972165857907e-06}, {"id": 590, "seek": 414600, "start": 4161.0, "end": 4168.0, "text": " Comment.", "tokens": [16328, 13], "temperature": 0.0, "avg_logprob": -0.21884801983833313, "compression_ratio": 1.054054054054054, "no_speech_prob": 5.254972165857907e-06}, {"id": 591, "seek": 414600, "start": 4168.0, "end": 4170.0, "text": " Great.", "tokens": [3769, 13], "temperature": 0.0, "avg_logprob": -0.21884801983833313, "compression_ratio": 1.054054054054054, "no_speech_prob": 5.254972165857907e-06}, {"id": 592, "seek": 414600, "start": 4170.0, "end": 4171.0, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.21884801983833313, "compression_ratio": 1.054054054054054, "no_speech_prob": 5.254972165857907e-06}, {"id": 593, "seek": 414600, "start": 4171.0, "end": 4175.0, "text": " Seems like a good place to stop.", "tokens": [22524, 411, 257, 665, 1081, 281, 1590, 13], "temperature": 0.0, "avg_logprob": -0.21884801983833313, "compression_ratio": 1.054054054054054, "no_speech_prob": 5.254972165857907e-06}, {"id": 594, "seek": 417500, "start": 4175.0, "end": 4183.0, "text": " So, we now know about operators and I guess maybe next time we can try making our own operators.", "tokens": [407, 11, 321, 586, 458, 466, 19077, 293, 286, 2041, 1310, 958, 565, 321, 393, 853, 1455, 527, 1065, 19077, 13], "temperature": 0.0, "avg_logprob": -0.21046678439990893, "compression_ratio": 1.50920245398773, "no_speech_prob": 7.026999082881957e-05}, {"id": 595, "seek": 417500, "start": 4183.0, "end": 4187.0, "text": " We'll try doing a derivative operator.", "tokens": [492, 603, 853, 884, 257, 13760, 12973, 13], "temperature": 0.0, "avg_logprob": -0.21046678439990893, "compression_ratio": 1.50920245398773, "no_speech_prob": 7.026999082881957e-05}, {"id": 596, "seek": 417500, "start": 4187.0, "end": 4193.0, "text": " Which means we're going to have to do alpha, alpha and omega, omega.", "tokens": [3013, 1355, 321, 434, 516, 281, 362, 281, 360, 8961, 11, 8961, 293, 10498, 11, 10498, 13], "temperature": 0.0, "avg_logprob": -0.21046678439990893, "compression_ratio": 1.50920245398773, "no_speech_prob": 7.026999082881957e-05}, {"id": 597, "seek": 417500, "start": 4193.0, "end": 4195.0, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.21046678439990893, "compression_ratio": 1.50920245398773, "no_speech_prob": 7.026999082881957e-05}, {"id": 598, "seek": 417500, "start": 4195.0, "end": 4196.0, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.21046678439990893, "compression_ratio": 1.50920245398773, "no_speech_prob": 7.026999082881957e-05}, {"id": 599, "seek": 417500, "start": 4196.0, "end": 4198.0, "text": " All right. Thanks.", "tokens": [1057, 558, 13, 2561, 13], "temperature": 0.0, "avg_logprob": -0.21046678439990893, "compression_ratio": 1.50920245398773, "no_speech_prob": 7.026999082881957e-05}, {"id": 600, "seek": 417500, "start": 4198.0, "end": 4200.0, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.21046678439990893, "compression_ratio": 1.50920245398773, "no_speech_prob": 7.026999082881957e-05}, {"id": 601, "seek": 420000, "start": 4200.0, "end": 4205.0, "text": " Bye.", "tokens": [50364, 4621, 13, 50614], "temperature": 0.0, "avg_logprob": -0.6075041770935059, "compression_ratio": 0.3333333333333333, "no_speech_prob": 0.00027267634868621826}], "language": "en"}