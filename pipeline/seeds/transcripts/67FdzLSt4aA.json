{"text": " This is a tutorial where we're going to be talking about NBdev, how to use it, and the development process. It'll be a fairly brief introduction and there'll be more videos coming soon with more and different and interesting ways to develop software. I am here with Hamil. Do you want to say hi, Hamil? Hi, everybody. Hamil is joining us from- I'm here. Where are you, Hamil? I'm actually at the RStudio conference in Washington, DC. Tomorrow, we're doing the launch of NBdev because it's built on Quarto, which is- so I'm here in a hotel room. Awesome. Thanks for joining us in the midst of your conference. Let me share my screen here. Great. As Hamil mentioned, we're going to be using NBdev today, which works with Quarto to take a bunch of Jupyter Notebooks and to turn it into a complete software package. We're going to walk through how we would go about doing that from scratch. It's actually much more exciting than that. But- Go on, get us excited. You can open the door. Not only will we create a software package, but we'll show you how you can get a beautiful documentation site that's searchable for free. You'll get CI for free. You'll get an amazing way to do unit tests and testing all within the same context. It's something that has made me more productive, at least 10 times more productive, while building all kinds of different software projects. I've been using NBdev for about four years now, or three years. I've made a lot of different types of software, everything from CLI apps to API clients, to I've worked on extensions of the Python programming language with Jeremy and a bunch of other things. It's interesting how many different use cases that it's a really good fit for. I think it's wonderful, so I'm really excited to show it to everybody. What about you, Jeremy? How do you feel? I think the big thing for me is I don't really enjoy writing software very much, but I'm not using NBdev now because I don't as much get into that flow state, which is such a pleasure. Using a notebook because I'm doing exploratory programming, I'm really in the zone the whole time. I very rarely have mysterious bugs because everything along the way I've built an exploratory way, I know exactly how it works and it's very easy to fix any problems. I'm in this continuous zone of productivity, which feels enjoyable. I've had various ways of trying to achieve something like that before NBdev existed, but I never had the same experience that this gives me. The other thing, as you mentioned, is you get all this stuff for free. The fact that I can quickly whip out in a couple of hours a complete project with continuous integration tests, documentation, PIP installers, all that stuff is pretty cool. That's what we're going to build today, just a fun little sample project. It's not going to do anything interesting, this one. It's going to be based on this book, Think Python, by Alan Downey, which is a really great book. We're going to build a deck of cards. They're basically going to be inspired by the deck of cards idea that comes from his book to do a bit of OO programming in Python. We're going to end up with a documentation site, a conda package, a PIP package, tests and continuous integration, which before this video is finished. Am I missing anything, Hamill? Is that what we're going to have? Yeah, we're going to have all that. Great. The starting point for creating an MB dev package is to create a repository. The smoothest path is generally to use GitHub. It's not strictly required. Here we are on GitHub. I'll go ahead and create a repository and call it MB dev cards, for example. Give it a description. You can patch your license, create the repo. There it is. OK, so that's step one. So what we're going to do now is we're going to clone this repo and turn it into an MP dev repository. So I'll click the copy button. I'm going to head over to my terminal and we'll clone it. That repo, MB dev cards, and this is assuming that I've already got MB dev installed. So to install MB dev, you can follow the directions on the home page. So there's a written tutorial and just above it, you'll see the PIP install or conda install commands you can use. MB dev is very, very lightweight. It has very few dependencies. Bendices are basically fast core and exec NB. That's about it. You don't even need Jupyter or anything to run it. Obviously, to author stuff, you'll need Jupyter. But yeah, it's a very lightweight library. So once you've got it installed, if you type nbdev underscore and hit tab, you'll find that there's a bunch of command line tools that it's installed for you. And so you can get a list of them here on the MB dev main docs page. And the one we're going to use is nbdev new. And you can also see a list of them any time if you do nbdev help in the terminal as well. You get a short description of all of them. Great. And this is actually a good example, Hamil, of how we don't have to do anything to keep our documentation up to date because our documentation being in nbdev is written in nbdev. And so the documentation actually uses exclamation mark. That means run a shell command in Jupyter followed by that shell command and the output here. So the output in our documentation will always be up to date because it's running the actual code. This is huge because the way that most people create documentation is they copy and paste code into Markdown and they copy and paste the output into Markdown and it becomes stale. It becomes a big headache. And that's why nobody writes documentation. But this is why I didn't care. Nbdev is for lazy people like me. I'm very lazy and I'm not prepared to do things twice. OK, so nbdev new. So you can pass minus h to any nbdev command to find out how to use it. In this case, it's very, very simple. You just this got no command line arguments. So you can just go ahead and just run nbdev here. So as you can see here, when I run nbdev new, it figures out all the details of my repo and it creates a file called settings.any. And settings.any is your home for all the stuff that you need for your app or your library. And the neat thing about this for a lazy person like me is that you only have to put this stuff in one place at one time, like the version number and your details and so forth. Yeah, it means that you don't have to worry about putting these things in multiple places for your documentation, for your PyPy installer, whatever. It's all going to come from one place. You don't have to worry about it. That is great. Otherwise, you know, like package management has so much boilerplate. It's overwhelming. And this makes it to where you can actually do it because it stays sane. So the next thing we're going to do, then, is create. Let's see what we've got here. So it's given us an OO Core notebook, an index notebook, a read me, a setup, and some style sheet info. So we'll learn about what all these things are in a moment. So let's start by opening up the home page that you're going to be using. So index.ipynb is going to become your home page, as you can see. And OO Core. The home page for what? The home page for the docs. Yeah, home page for your documentation website, exactly. And Core is going to become the first thing that you create for your library. And we're only really, well, we're going to use a couple of modules, so that's fine. In fact, I think for this one, we're not necessarily going to have one called Core. I think we're going to have cards and a deck. We're going to put them just for explanation into two different modules. So maybe we'll create cards first. So maybe we'll rename this to OO cards or card. Yeah, card. You want to say something about the OO in front? Does that mean anything to you? I mean, I like, yeah, I think it's helpful to have things have some ordering, like the order in which things are designed to be A, read and B, built. Like not so much how the software builds it, but how you built it. So that the nice thing about this kind of literate programming approach is that because the documentation is the source, because the source code, notebooks, somebody who wants to get up to speed on your library is reading notebooks. In fact, NBDEV is a good example of that. So if we go to the GitHub repo for NBDEV and we're like, OK, well, let's learn about how this software is written. I can start on the very first one. And I know that's what I need to start reading to start understanding how this is written. And I can start, OK, so here's what the settings.ini is and here's where it comes from. In fact, even better might be if we look at exec-nb, which is the library that we've written to help work with notebooks. As you can really see, if we start at the very start here, like literally, it's prose. Because this was my exploration when I started writing this is like, what's a notebook? So I started opening them and reading them and printing out what's in them. So therefore, when you, the reader, start reading my code, you're following me on my journey of understanding what's going on at every step. And then you can see when I've written a function, you can understand why I've written that function, because I've just explored up to a point where we can see that's the function I now need. So, for example, nb to dict is basically doing things that I've just done step by step in prose. So, yeah, that's the main thing. The ordering of the file names is also used by default to order the table of contents in your documentation. That's another good reason to have it make some sense. So that's the only reason I'm using those numbers there. So, yeah, we're also going to have a deck of cards. So we'll call this one deck. So that's going to be a home page. That's going to be a module for cards. This will be a module for decks. In real life, I would probably be putting these in the same module because they're not going to be very big. But this is just good for demo, I think. So each notebook is going to produce one pie file, one module. So what do you want that module to be called? This is going to go up here. So you'll see there's some special comments here in the notebook. They always start with hash pipe. And if you've ever used Quarto before, this will look very familiar because in Quarto, it's exactly the same. You can see special comments with hash pipe here as well. So these comments that are used in Quarto and NBdev are used to tell Quarto or NBdev something about this code. So, for example, we'll be learning about ShowDoc in a moment and we have to import ShowDoc. But the fact that we're doing that is something that the reader of your documentation doesn't care about. So we hide this from the documentation that's built. So this special one here called defaultX, this is the default export. This is what we're going to export symbols here into what module? We're going to import it into a module called card.py. This is marked down in our notebook. And so this is where we can start typing things that we want to appear both for the reader of our source code and also it's going to end up in our documentation. So we could write, for example, a basic playing card. A simple API for creating and using playing cards. So this is the description. It might be worth the point that this having this header one in this note block is a kind of an NBdev shortcut. And what happens is this becomes the title of your page and that that quote block becomes the description of your page when it renders. Yeah, maybe a good way to understand how this works is to look at a library. So let's take execNV again and open up one of its notebooks. So let's take 01NBIO and at the same time also open up its rendered documentation. And so you'll see here we've got NBIO and Shell and here in the documentation, here they are NBIO and Shell. And if we look at the notebook, you can see here is the header one. So that's become the title and the contents and the description here has come from the description. And that's used in things like the metadata of the page as well. You can see the title, for example, gets built from that automatically. So that's a good way to kind of understand how to use NBdev and how your choices make things appear is by looking at the sample. And then you'll see each of the second level headings ends up as in the table of contents here. So I kind of like to think about, well, how do I want this to behave? And so we're basically going to be creating a playing card. So I'm going to want to have some kind of like something which I could do, like create a card, passing it like a numeric suit and a rank. So we could create a list of suits, for example. Let's pop that up here maybe. So we've now got a bunch of suits, so you could like say suits one, for example. Why is that not printing out anything? Is it something about the font perhaps? Yeah, something about Python's Unicode handling, maybe? My computer, it actually visually looks a little different than this. I don't get the colors. Like I don't ever see these colors or anything on my computer on the same notebook. So this is where NBdev is really helpful, right? Because I'm not going to end up with some weird bug deep in my code because I'm exploring as I go. I thought you could like split things. OK, so I think what we'll do instead, since we discovered that doesn't work, which I think just shows my ignorance about how Python uses Unicode. Let's put them, create a list of strings instead. OK, that's more like what I was expecting. My guess is maybe I think like some emojis are actually like consists of multiple kind of code points or something. I don't quite remember the terminology and it kind of ends up changing the color. You know, like a flag or something. Yeah. OK, so that's that's useful. So then we're going to have all the different card ranks. And so there isn't really a rank zero, so just put a placeholder there. And so this this code is kind of loosely based on Alan Downey's book. So cool. So if we want to create a class that represents a card, we'll say we want a class and it represents a card. And so when we create one of these, Python calls the DUNDA in it when you create an object of a class. And so we're going to be passing in some suit and some rank. And so then we'll just be setting self dot dot suit just to store it away basically and self rank. We'll set them equal to the suit and the rank that I should mention, like, as you well know, Hamel, the way I the way I write code is different to like the way most people write Python code. And and in particular, there's a lot of like specific recommendations in how to write Python code in a document called Pepe, which is kind of like a default style guide for Python code. Yeah, folks who are working in an organization that uses Pepe, they don't take my particular approach to coding as a role model. I will say, though, that I've been coding for 40 years now and coding nearly every day for 30 years. And my particular approach to coding is not random. There's a particular reason for it, which I've documented on the fast coding style. And it based on kind of many decades of work from people much smarter than me, particularly Ken Iverson, the Turing Award winner. I just want to say, yeah, I like my way of coding and that's what I'm going to show here. But if you're working in an organization that uses Python in a more traditional way, you should go with your own organization's coding style. The style that I've developed, as I said, it's partly based on years of research from other languages, decades of research. It's also partly based on experience with exploratory and literate programming in particular. So it more closely follows the kind of style you would see from Lisp or APL or Julia programmers or F sharp programmers, like programming languages that were working in the REPL, working in an interactive and exploratory way is more a part of the culture and toolkit of that. Yeah, of that environment. Can I say something about this place? So, you know, I think it's important if you are interested in NBDEF to approach it with the right mindset. And I think one mindset that's been helpful for a lot of people is to look at the things that we're showing you today as a dialect of Python, because not only are we going to show you this way of developing code in a notebook, but there's also there are some extensions to the Python programming language that Jeremy has made that kind of enhance the REPL experience. And so if you think of it as a dialect, then you can kind of open up your mind to, you know, different ways of working and also different conventions. So I think that's really important. Yeah, makes sense. So while you're talking, I was just starting to fill in the kind of like information I would want to be passing on to a reader of my code or documentation. That's great. I think this is like really is this is super powerful for many reasons. Like often I find that when I'm writing the documentation like this, you know, I discover bugs in my code or I discover clunky things in my code like, hey, this is very hard to explain. And I end up refactoring it because of that. Yeah, definitely. So I try to explain in our docs as we go, why things are as they are. OK, so there's a right. So now we can create a card. So that's not very helpful. And so that's that's the default representation. So we can override that using Dundas, which is a Dundas, which is the Python way of saying this is how I want to stringify my object. And I think a simple way to do this would be just to use an F string and say this is like a first of all, the rank. So that would be the self rank. And then we would want to look that up in all the ranks and then we'd want to do something similar for suits. OK, and so that's what we're going to see if we print it. Like so now, as you'll see, it's a little different to how it's represented in a notebook. So quite often I like my notebook representation to be the same as how it's printed. So an easy way to do that is by default, Jupiter will use the Dundara Repra method to return the representation in the notebook. So if I just say I want this to be the same as the string version, I can just do that as we see. And so we can say so we can add some documentation here, a playing card. Gave it by passing in a rank from ranks and suit from suits. OK. Is an example of creating and displaying a card. And for the attentive people that are really playing close attention, these backticks that Jeremy put in his doc string, just keep that in the back of your mind. That's actually doing something special. And you'll see that. Yeah, I mean, we can look at it now. So what's going to happen automatically is this is going to be turned into documentation. So, for example, if we look at this one, that's a good example. So here's a function called dict to NB. You can see here that it's created some documentation. And in fact, we could make the documentation nicer. Well, let's take a look at it first. So this is the documentation is going to auto generate. It's going to call this function called show doc. You actually don't have to put it in here manually. It'll do it automatically when we build the docs. But you can kind of get a bit of a preview. Something which I think is nice to do is to give each parameter some documentation. So to do that, you can use something we invented called documents. And this works like so. You basically put a comment after a parameter and say and give it a comment. So an index into suits. And so that's kind of nice because I can now make my doc string a bit simpler. And in fact, I don't need to say passing in rank and suit because you can already see that they're right here. So really, at this point, we can strip it all the way back. And having like in my opinion, having overly verbose documentation isn't a good idea. If you have more information than needed, then it's distracting to the reader. We want the right amount of information. So at this point, you can see here, this is how it's going to be represented. That's the exact information I want very clear. And so the other thing we might then do is say, well, what type is expected? OK, so that way you don't have to include that in the doc string, because again, when we spit out this show doc, it's going to show me those types both in the table and also in the signature. So this again, it's me being lazy. I don't want to include any more information than I have to. As I say, we don't actually need this here. It'll be auto added for us. So after a while, you kind of get used to what things look like. So you don't need it. But if you do add it, it's fine. It will see that you've added it. It won't add it twice. An advanced feature we won't necessarily be discussing today is, you can document other code bases with show doc. There's another reason you might want to use it. Exactly. So you might create docs for something that you've written without NBdev or create docs for somebody else's library. And that would be done by using show doc and importing their library. So, for example, if we wanted to document something from exec NB, for example, I could import something like that thing we were just looking at, and start writing some markdown pros and also add wherever I wanted to the actual documentation. And this bit here, this header show doc blah, it's not going to appear. The only thing that appears in the documentation is the markdown output. OK, so I think, you know, in general, we probably want to be able to recognize, you know, when cards are the same or when they're less than or greater than some other card. So what I kind of like to do for that is I kind of like creating tests to check that it's working correctly. You can either create them before or after. It doesn't really matter too much with exploratory programming. So I would kind of be saying things. So you can import some basic testing functionality from Fastcore. And, you know, again, this approach of importing wildcards, it's like not the normal approach in a lot of Python libraries, but exploratory programming, it works pretty well. It's certainly not unheard of, like, for example, the Python standard library itself has a really famous library called TKinter. And you'll see that all of the examples in it actually use wildcard imports. So it's actually used in the Python standard library itself. But it's it's only a good idea. Like, it's something you'd only want to do for libraries that are explicitly designed to work this way, because there's a somewhat advanced Python feature called DUNDA ALL, which ensures that things work correctly when you do this. Normally, that's a lot of work to create and not really worth the effort. MB dev libraries do it automatically. So one nice thing about MB dev libraries is that they work very well in REPL oriented programming because they'll support using wildcard imports. But again, it's something which if you're at an organization that uses kind of PEP8 and stuff, you might want to explicitly import each thing carefully. But, you know, one nice thing about exploratory programming is for people that aren't very familiar with the IDE, they often, like, don't know where symbols come from or what they mean. So, for example, there's a thing in fastcore.test called test for equality, testec. In Jupyter, you don't have to worry about, like, you don't have to look up the top to find it, because at any point you can just stick a question mark after it and it will tell you exactly where it came from. And furthermore, you can actually just put a second question mark and that'll give you the source code for it. Or you can write it without any question marks and it'll just tell you the details of the source and the parameters. Or you can just hit open parenthesis and then shift tab and you'll get all the information here. So there's lots of ways, you know, in a REPL based environment of getting all this information without scrolling around and wasting time. So we're going to test that, for example, a card like that should be equal to a card like that. Whereas a card with a different suit should not be equal. And a card with a different rank should not be equal. OK, so if we run that, it doesn't work because we haven't defined equality yet. So the way you define equality in Python is by defining a DUNDA equality. And we could just check that the two tuples are the same, so if we check that self.suit,self.rank equals... Oh, we don't need B. It's going to be past the self, yourself and then one other thing. And check that against a.suit,a.rank. There we go. So they all pass. Now, we're not showing like totally perfect software engineering principles here. We should be checking that the types are the same and stuff like that. But we could at least give some indication that the types are meant to be a card. This is a slightly weird Python thing that Python doesn't know what a card is when you're inside a card. So nowadays you have to put it in quotes. You know, like I tend to like having my functionality all in one place, though. So what I would tend to do at this point is I would often split this out. So in Jupyter, you can hit control, shift, hyphen to split a cell out. And, you know, I'd quite like to kind of have all this stuff defined down here in one place. So I'd have like equals, not equal, you know, and so forth. So to define a method outside of its class, which is kind of something that's pretty common in things like C++, for example, you can also do it in Python using something from another thing from FastCore. So the main things in FastCore, they've inside it, utils. And one of the things that will give us is something called patch. So we can add a quality to FastCore just by saying patch. And we're just going to say, what do you want to patch? I want to patch card. And one nice thing is now that actually exists, I don't need this weird quote thing anymore. So if I now can I can define, as you can see here, I've defined card and then I've patched in a quality. And this is part of the what I was talking about, the dialect of Python. This is one of the extensions that make it easier to write code in a notebook. And so I'd be inclined at this point to kind of introduce a section in my documentation here for comparison operators. OK, and so we'll also medically we'll automatically get documentation this. So then we could do less than or equal to or less than, I guess. So we would expect one three to be less than two three. So this one need to be just use assert. There we go. And similar thing greater than. So LT and GT is what Python uses for less than and greater than. So this should not be the case for greater than. And then less than or greater than, we would expect that to be true. OK, so that's all passing. All right, I think that's basically our playing card. So at this point, we can we can try it out. And so to create our card pie file, we can head over to our terminal and type NB dev underscore export. We can type NB dev underscore export. And you'll see we've now got an NB dev underscore cards directory with a card pie file. We decided not to use core after all, so get rid of that. So like one thing we could do at this point is to see whether that seems to be working OK. By importing it, this year in the index notebooks, that's the home page, that's going to be a homepage. Exactly. So we can say like this web provides a card class you can use to create, display and compare playing cards. Card 1,3. Suits are numbered according to this list. So you can see all that stuff has been imported into our environment from NB dev stock card. So that's pretty handy. So we'll call this NB dev underscore cards. And we're not automating this bit, unfortunately, we probably should be. We'll have to copy the description over. So we might put a link here to where the inspiration for this comes from. A playing card, a deck of cards demo of NB dev. Based on ideas from. Think Python 2, second edition by Alan Downey. All right. Install using. Or. To the hyphen or underscore. Yeah, so this is a this is our first little tricky issue, which is that hyphen and underscore are a special character in Python. Python modules can't have a hyphen hyphen and I don't think can have an underscore. At least you don't normally see them. So we actually are going to have a different name. So ideally, I wouldn't have picked a name with an underscore because that's the only basically the only character that has this weirdness. That's OK. So to fix this, we have to change it in settings. We've got any to say that we've actually got two different things. So the lip name is actually, I guess, in B, dev hyphen cards and then the lip path is actually in B, dev underscore cards. That's a little bit confusing. This percent S business is part of the thing from the standard Python standard library called config Plaza. It just copies the variables from user and that name up here. You can override them if you like. All right. Should we maybe have a look at the documentation now? OK. So to preview your documentation, you can type in B, dev underscore preview. And that will fire up a that will fire up a quarter web server for you. And as you can see, it will automatically install quarter if you don't already have it. If you're on Linux, it'll do it automatically. I'm on Mac, though, so it's going to pop up this window. Quarter is updated recently, regularly, so it's not a bad idea to make sure you've got the latest version anyway. All right, so let's run that again now that it's installed. So that's going to build each of my pages. And then what's going to happen is it's going to sit running in the background and and it's just going to sit there running a little server on port 3000. So if we now go to click on there, it's popped it open here. And so, you know, let's take a look. So and be dev cards. If you let me pop this on the other screens, we can compare them more easily. So you can see how the heading, the summary, where it all is. Look at the card page. That's interesting. Yeah. So let's head over here and compare it to our card page. All right. OK, so you can see all this stuff's been hidden. This is info that we've got. And as you can see, we've got the auto generated docs here. OK, now this is a mistake. This shouldn't be appearing. And the reason why is that it's not being exported because I didn't export it. So I'll copy this export here and I'll paste it here. There we go. And then I've saved. I just hit save and you can see that it's automatically done this here. And because these are like a start with an underscore, they're like considered hidden by Python. So it doesn't automatically create show doc. We kind of don't do that because, you know, we think a lot of people would not like it's not that we're creating really something for users called Dundee equals. So like you could say show doc if you felt that your users are quite advanced and would know what that meant. You know, you do it something like this and it would pop up like so. You know, personally, I try not to expect my users to understand stuff like that. So I would rather just kind of put in some markdown, I think. And in fact, we could make all this a little bit shorter by then putting all this stuff together. So shift and merges a bit more concise. Test of less than. And this is this is really cool. I mean, I find this part to be really nice. Like you can choose which tests you want to show to users and which ones you don't. Yeah, because it makes sense to do it. And sometimes it doesn't make sense to. Yeah. In fact, you know, let's just for example, let's say that, you know, we just want to show them one test of each. It is fine like you don't necessarily want to overwhelm them with examples. So in that case, I would write hide here and these are just the actual tests rather than rather than showing examples. It's probably not a bad way. Just one example of most of them. OK. So I really like the way you get this kind of auto generated documentation. I mean, now that I kind of know what the docs are going to look like, I don't use it that much myself unless I'm doing more advanced websites. An example of a more advanced website would be the NBDEV homepage. The NBDEV homepage is actually generated from a notebook. And so that one, it was certainly helpful to have the auto generated preview. Shall we do you want to do you want to show? Do you want to talk about since we spent some time on tests, you want to kind of how do we know? Do you see I now or should we do that? Sure. Do the deck first and then we'll do see. Yeah, we could. But you can show local tests. I think the local tests, of course, have got about those. All right. So for local tests. So I'm just going to run this in the background. We'll leave that running. So you just type NBDEV underscore test and that's going to basically make sure all of your tests pass. And we don't like to give you more information than needed. So it just tells you if they do. Let's break one. Save that. And so you can see now it tells you that in zero zero card cell 20. My colors could be better, but I'll fix that night sometime shows you exactly where the problem occurs and it expected three of hearts and it got a three of diamonds. And you can see it even uses the correct representation thanks to fast core test. And at the end, it'll summarize a list of any notebooks that failed. So we'll go and fix that, save it, rerun our test. There we go. And for this situation to see what you can pass in, it'll run the tests in parallel using as many workers as you have CPUs by default. You can see how long they take to run. You can look at just particular files, so forth. There's lots of options you can do it. I was going to say, when you're using NBDEV and you're debugging in real life, I think it's worth it to mention the hot key for reload and run all. Yeah, definitely. That's really useful. Yeah, exactly. So you want because when you run NBDEV test, it's going to run your notebook from top to bottom. So to rerun your notebook from top to bottom, if you just hit zero zero, that restarts the kernel. And then there isn't a hot key built in for running all cells, but it's a good idea to add one by hitting help edit keyboard shortcuts. Let's run them all and we're all good to go. A lot of people, including me, like to explore very interactively in notebooks and often go back up and rerun a cell and change things and see what happens. But that's a very good idea from time to time to hit zero zero and then rerun all the cells or at least to head over to your terminal and run NBDEV test. Yeah. And another thing is like, you know, like when you get a failed test in your terminal, you do what I do, just sharing my workflow is I come back and I do restart run all. I get the error in the notebook and then I hit the interactive debugger like the percent percent debug and I kind of go from there. Yeah. What's going on? Yeah. So so just to explain, if we put a bug in here, you get an error. You can hit percent debug and it will drop you into an interactive debugger, which is called PDB. It comes with Python and you can do things like find out the value of any variable like suit. You can find out the stack trace of where we are. You can get a listing of source code and so forth. And you can basically write any Python expression you like, figure out how to fix the bug. And away you go. All right, let's do a deck of cards. So we'll export this to something called deck. So generally speaking, you know, in your second notebook, it's pretty likely you're going to want to import the stuff from your previous notebook. And at the moment, I won't be able to do that. Actually, yes. Can I let's try it? Maybe because you did an editable install. Oh, okay. And I think I got it wrong. Yeah. The card. Did I do a local install? I don't remember doing that. I guess I must have. So the reason that works, I guess, or maybe I did that without even thinking about it. If you type pip install minus a dot in your Git repo, basically, it's going to install the thing you're currently working on as a library. And it's going to be pointing at your actual source code. So every time you update it, it'll be there. So that's how come I can import it. All right. So you might want to put the import in a separate cell and export it, perhaps. Yeah, exactly. So let's do that, because that's actually going to be part of the library is that we're probably going to want to use these cards. So that should be part of the exported. And actually, we should probably look at that. So let's take a look at this managed to break everything today. Let's just make sure this is actually going to run. There we go. So because I've got the Cordo server, NB dev server running in the background, it's constantly trying to compile my code. So I had to do a non compiling stages before, which is why I complained. So if I take a look at the NB dev cards card file, you can see this is the source that's created for me. And so, for example, if we now like. Let's see. So a full deck of cards is going to contain every suit and for each suit for every card, it's going to contain a card. So that's not very helpful. So we can do the same trick we've seen before, which is to just join the cards together when we're stringifying it and set the representation to be the same as the string area. So now, if we might just stop running our server for a bit, it's a bit annoying. So we could now export and we can see. You've now got a deck.py. And you can treat this just like you would any normal source code. So, for example, I use Vim. So if I go to card and I hit control right square bracket and Vim, it jumps me straight to the definition of card. So like you can do it, you know, I can jump back. So you can still like, you know, if you use VS code, you can still use it just like the normal way that you would look through source code. Or, of course, we can use the trick we've seen before, for example, double question mark to get. Isn't that working? Hmm. Oh, yeah, because it's not exported. You're a fast core utils test. Oh, yeah, that was a mistake. OK, so that needs to be exported because that's part of what we actually need. You should put all your imports in the separate cell by itself. Maybe it's a good time to mention that. Oh, and then just a moment. So then we need to export that. And so then we could check that that's working. That's looking hopeful. So now zero zero run. Oh, sorry, I shouldn't look at deck. I should look at card, for example. There you go. You can get the source code. All right. So so Hamel just started talking about a one little wrinkle you have to be aware of when creating your code in NB dev, which is that there's one golden rule you have to keep in mind. And that golden rule is that you your cells should either contain imports or non imports, but not a mixture of the two. So you'll see this doesn't contain any imports. This doesn't contain anything but imports. And the reason for that is that when it builds your docs, it has to be able to go through and run every one of your cells containing imports in order that it can then run all of your show doc cells correctly. But it's not going to run any other cells. So just remember, don't have a cell that contains both a import command and also something else. That's the only slightly weird rule you have to remember. I think something else that I'd like to add to our deck is just to know how big it is. So Dunderlen gives you that. And so by so let's first create a deck, call it deck. Notice the difference in case here. This is my object and this is my class and this is my instantiated object. Another thing that's useful is to know if a card is in the deck. So in Python, they use a special Dunder think or Dunder contains for that. Let's see if the so just remind myself, what are the suits? So one of clubs, is that in the deck? OK, so if this a doc string. Right. All right, I guess we might want to create a hand now that you might want to then deal a hand or something, right? Well, yeah, but probably to do that, we want to be able to select a card from the deck. So I guess, first of all, let's just see if we've got all the information we need here. So let's say when we initially create a deck, all of the cards will be present. The 52 cards. And so this is where I'd put a test rather than just displaying it, because that way we're both showing the user what we're expecting and we're also ensuring that that continues to be the case in the future. Just as a reminder for people not familiar, the test EQ is a wrapper around a cert that just will give you a nicer error message. Yeah, pretty much. So that they're equal. So if they're not, it'll let you know what they actually were. So as you can see, most of the fast library code tends to be just a couple of lines. So this line, this is one line of code. This function is defined with two lines of code. But normally you can like, yeah, I mean, there's good documentation for all this stuff, of course. If you go to the fast core docs, you can go to test and see examples of all of them. Yeah, but often you can just quickly look at the source code if you want to see exactly what's going on. The ace clubs. OK, so let's make it so that we can remove something from the deck. So we could just go ahead and edit the class. But as I say, I kind of like to add things in after the fact, you know, just keep things nice and separated. We should generally it doesn't matter whether you have a space or not after your pipe character. But I know that at least at the moment in Nitter, which is an R library, it doesn't like the space. So it's probably not a bad idea. Most of the stuff you'll see in all the stuff you'll see in Quarto always has a space. All right, so let's patch in a pop to pop off a card from a deck. So some index can default for the last card. And so, again, we could add documents to this. Remove and return. OK, so we'll just return self.cards.pop. So I wanted to import that. And you've got to tell it what to patch. So let's try popping something. So if we pop something, we should get the king of spades you would expect. And we did. So if we create a new deck here and pop it off, again, I would tend to turn this into a test. There we go. So let's export that, make sure everything's running OK. It is. And so we can now do our preview again. So we can now see we've got our index page, our card page and our deck page are all here. It's all our documentation. So one thing you'll notice here is that the backtick we used here for card has automatically become a hyperlink here to the documentation for that. I won't be able to click on it right now because it's because we haven't put it on GitHub yet. But this will end this will link to it. I just copy the link. You'll get the idea. Copy link address, paste it. So that's where our documentation for that's going to end up being. So you can just use backticks and it will automatically linkify, as we call it, that to the documentation. So that's pretty handy. And it works across all your BDEV projects. Because we have. Yeah. And not just MBDEV projects. In fact, there's there's a number of other things, including the Python standard library and pandas and NumPy and so forth that you can install indexes for those so that they'll automatically linkify as well. Cool. So then we can show that this seems to be working correctly. Let's go to rerun this. OK, so I just reran that from the top to make it all work again. All right, so that should be in our deck now. You can see that that's auto generated that documentation. And we can also check that PUP is behaving the way we expect it to be. By getting a remove in there as well. So I'm just going to copy and paste this one from when I built before to save a bit of time for us. And so again, we can check to see how the preview is looking. And so when we see this is not appearing here, we know what we forgot to export it. There we go. Now it's appeared. So it's not just for methods, we could also create a function. So I've got a function that I've created earlier. This for example. So here's one that draws some cards with our replacement. So let's draw 13 cards without replacement. Oh, needed a shuffle. I'm about to add a shuffle. Maybe just put that straight into the class just to show how that would look. There's a shuffle. So since the shuffle here is directly in the class, we need to say whereabouts we want to document it. So the way we would do that would be to put a show doc. There we go. So we're going to need to import random here. Let me just put it at the top. Oh, one thing I should mention, it's OK to put an import statement in an exported cell because they're going to be run either way. That's the one difference is you can put an import inside a cell that's exported. There we go. Let's take a look at how our documentation is looking. Nice. All right, Amal, where should we head now? Oh, did we want to create the command line interface? Yeah, sure. Or you want to do a visualization to make sure your draws are doing OK? I mean, that's already in the tutorial. It's not really anything extra. OK, no problem. I mean, the CLI is in the tutorial as well. It's also really not anything extra because this is already pretty long and it's not really MB dev specific. So check out the written version of the tutorial of this online for a couple more handy little tricks. OK, so to get it ready to send off to GitHub, to send it up to GitHub, one thing that I like to do is to make sure that there's no unnecessary metadata in the notebooks. And so you can manually check to that by using MB dev clean. There's also some Git hooks you can install to do this automatically. You can look up in the docs if you're interested. And so if you have a look now, we can see what we've got ready to go to GitHub. So we can add all that. Not a bad idea just to make sure you've exported everything, make sure that the tests are working. So they're basically the three things. Check the files. So there's going to be continuous integration added, documentation deployment added, the notebooks we created, some information about the website, our home page, the two modules we created, our settings file, setup file, sidebar and a style sheet. That all sounds good to me. I'm tired today. OK, so that gets sent off to GitHub where we should find it. There it is. And so GitHub has something called GitHub Actions that automatically runs things in this GitHub.GitHubWorkflows folder. So one thing you'll find here is that when you push or when somebody puts in a pull request, it's going to run NB dev test, amongst other things. And it will also run something called Quarto GHP, which will set up your GitHub pages. So while we wait for that, I'm going to go into pages and tell it that GHPages is the branch. So that's basically what it uses for GitHub pages. OK, and so if we look at actions, we can see the area that's all run. So the CI stands for continuous integrations. That means our tests are passed and the deployment was completed. So you can actually click on these things to see them or the steps that they run. And you'll see that installs all the Python stuff. And you can see it basically looks the same as our Quarto did when we ran stuff locally. And then finally, automatically GitHub creates our web page for us. And so you can see it's basically building it there. Looks like it's finished building it. OK, it's finished. And you can see it tells us here where it's been built to. So what I like to do is I tend to copy that and then I go into my settings and paste it here. There's our website. Awesome. Now links are working. OK, so that's looking good. Shall we put this on PyPyHammel? Yeah, you know, and that's CI. I mean, I just want to point out, like most projects at this point, you would only just have code. So at this point, we have CI, we have a documentation site. And this is the point where, you know, when I'm personally coding and I'm kind of down at this point, and it's exciting because I just like my colleague, you know, I just say, hey, like I created that tool you wanted. And then here's the website. And they're like, you have a website? Yeah, check it out. You can install it in PyPyHammel. Yeah. And then they're like, wow. And then also you can just PyP install it. And also you have CI. Like, how did you do all this in such a short amount of time? It's awesome. Our readme is not working. Oh, you know, the other thing we should have done is run nbdev docs. And the reason for that is that that kind of does a trial run of the same thing that it's going to have, that GitHub Actions is going to do. But what it also does is it updates our readme to contain the same contents as the home page does. Keep forgetting I haven't got this alias installed. So if we now look, the other thing which we've got is a beautiful readme. So that comes from our index.ipy and that's going to be the same as the home page. It won't be as beautiful as a home page because it's using more limited markdown. But the basics are there. OK, so we can see that there's an nbdev PyPy to upload to PyPy. And there's another one for Conda doing Conda or just nbdev release to do both. I'm just going to do PyPy for now. All right, so let's run it. And it uploads to PyPy. And just at the end, it's also automatically bumped the version. You can see here it's gone to version 2. So I tend to just go git commit minus am bump. And it says I can view it here. There it is. And you can see it's even put the project description, project home page. It's all been done automatically, which I think is all the metadata. It looks like a very professional and polished library for something that we spent under two hours on. And furthermore, it's not just for little quick two-hour things like this. Well, you and I have both written libraries that have taken years with thousands of lines of code and dozens of modules and tens or hundreds of thousands of users. Yeah, no, it's great. And imagine what it's like to make a PR onto one of these projects. So let's just say I don't have any idea how DEC works at all. I'm like, what is this DEC thing? Never seen it. I don't know. And without knowing anything about the code, I just go to that notebook. And there's already the entry point for me. There's the code. And then there's sample based on how to run it with documentation right there. So there's no confusion. And then I can notice that we've got a lot of pull requests, just high quality ones making the documentation better, making the test better, because people read it, they get confused, and they just resolve their confusion. They just say, hey, I'm just going to edit this real quick and submit a PR. Yeah, I mean, let's have a look at an example. So Rasta is an example of a package which uses MBDEV. It's got over 20,000 stars on GitHub, over 7,000 forks. So here's an example of an open PR. And one thing that we'd use, which is fine, is there's a thing called Review MB, which actually means I can click a button here. And because it's all in notebooks, I can immediately see the documentation that I've added. And I can make comments on the documentation. And I can see the source code that's been changed. I can see if they've added or removed any tests. I can see if any of the output graphs or whatever have changed. And yeah, it's nice both for me as the person reviewing that PR, and also, as you say, for the person making that PR, that we're very much all on the same page about what's going on. So yeah, I find we tend to get pretty high quality pull requests to our projects. And what's great is, so this is only kind of the tip of the iceberg. Like, there's a lot of exciting things. So you can use the same tools that we've shown today to just make a website. Let's say you don't want to necessarily write code. Maybe you want to just write a blog. So we'll have a tutorial or video, like, at some time in the near future that shows, OK, how do you do write a blog? And then also, you can just have a website, too, that maybe you just want to make a tutorial on, let's say, how to use Fast AI or how to use your favorite library. You can use the same set of tools to do that. And there's all kinds of advanced stuff that you can do, too. Like, Quarto is very powerful. You can make books from it, slides, all kinds of different formats. And so it's the same for making any kind of technical content as well. So yeah, it's really exciting. Yeah, and it's a whole different philosophy of how to write software. And yeah, I think it's you and I have both got the experience now that it's made us more productive and we're having more fun. So it's good to be doing this tutorial to think about people watching it that are going to join this journey as well. So thanks, everybody, for watching. And Hamill, thanks so much for joining in the tutorial late at night before you're doing a keynote tomorrow. I really appreciate it. All right. Sounds good. Bye. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 6.48, "text": " This is a tutorial where we're going to be talking about NBdev,", "tokens": [639, 307, 257, 7073, 689, 321, 434, 516, 281, 312, 1417, 466, 426, 33, 40343, 11], "temperature": 0.0, "avg_logprob": -0.2689295959472656, "compression_ratio": 1.5888888888888888, "no_speech_prob": 0.011676004156470299}, {"id": 1, "seek": 0, "start": 6.48, "end": 8.96, "text": " how to use it, and the development process.", "tokens": [577, 281, 764, 309, 11, 293, 264, 3250, 1399, 13], "temperature": 0.0, "avg_logprob": -0.2689295959472656, "compression_ratio": 1.5888888888888888, "no_speech_prob": 0.011676004156470299}, {"id": 2, "seek": 0, "start": 8.96, "end": 13.1, "text": " It'll be a fairly brief introduction and there'll be more videos coming soon", "tokens": [467, 603, 312, 257, 6457, 5353, 9339, 293, 456, 603, 312, 544, 2145, 1348, 2321], "temperature": 0.0, "avg_logprob": -0.2689295959472656, "compression_ratio": 1.5888888888888888, "no_speech_prob": 0.011676004156470299}, {"id": 3, "seek": 0, "start": 13.1, "end": 16.96, "text": " with more and different and interesting ways to develop software.", "tokens": [365, 544, 293, 819, 293, 1880, 2098, 281, 1499, 4722, 13], "temperature": 0.0, "avg_logprob": -0.2689295959472656, "compression_ratio": 1.5888888888888888, "no_speech_prob": 0.011676004156470299}, {"id": 4, "seek": 0, "start": 16.96, "end": 19.8, "text": " I am here with Hamil. Do you want to say hi, Hamil?", "tokens": [286, 669, 510, 365, 8234, 388, 13, 1144, 291, 528, 281, 584, 4879, 11, 8234, 388, 30], "temperature": 0.0, "avg_logprob": -0.2689295959472656, "compression_ratio": 1.5888888888888888, "no_speech_prob": 0.011676004156470299}, {"id": 5, "seek": 0, "start": 19.8, "end": 21.04, "text": " Hi, everybody.", "tokens": [2421, 11, 2201, 13], "temperature": 0.0, "avg_logprob": -0.2689295959472656, "compression_ratio": 1.5888888888888888, "no_speech_prob": 0.011676004156470299}, {"id": 6, "seek": 0, "start": 21.04, "end": 22.0, "text": " Hamil is joining us from-", "tokens": [8234, 388, 307, 5549, 505, 490, 12], "temperature": 0.0, "avg_logprob": -0.2689295959472656, "compression_ratio": 1.5888888888888888, "no_speech_prob": 0.011676004156470299}, {"id": 7, "seek": 0, "start": 22.0, "end": 23.0, "text": " I'm here.", "tokens": [286, 478, 510, 13], "temperature": 0.0, "avg_logprob": -0.2689295959472656, "compression_ratio": 1.5888888888888888, "no_speech_prob": 0.011676004156470299}, {"id": 8, "seek": 0, "start": 23.0, "end": 24.400000000000002, "text": " Where are you, Hamil?", "tokens": [2305, 366, 291, 11, 8234, 388, 30], "temperature": 0.0, "avg_logprob": -0.2689295959472656, "compression_ratio": 1.5888888888888888, "no_speech_prob": 0.011676004156470299}, {"id": 9, "seek": 0, "start": 24.400000000000002, "end": 28.32, "text": " I'm actually at the RStudio conference in Washington,", "tokens": [286, 478, 767, 412, 264, 497, 42665, 1004, 7586, 294, 6149, 11], "temperature": 0.0, "avg_logprob": -0.2689295959472656, "compression_ratio": 1.5888888888888888, "no_speech_prob": 0.011676004156470299}, {"id": 10, "seek": 2832, "start": 28.32, "end": 34.4, "text": " DC. Tomorrow, we're doing the launch of NBdev because it's built on Quarto,", "tokens": [9114, 13, 17499, 11, 321, 434, 884, 264, 4025, 295, 426, 33, 40343, 570, 309, 311, 3094, 322, 2326, 15864, 11], "temperature": 0.0, "avg_logprob": -0.25522669623879823, "compression_ratio": 1.3969072164948453, "no_speech_prob": 6.100154132582247e-05}, {"id": 11, "seek": 2832, "start": 34.4, "end": 39.480000000000004, "text": " which is- so I'm here in a hotel room.", "tokens": [597, 307, 12, 370, 286, 478, 510, 294, 257, 7622, 1808, 13], "temperature": 0.0, "avg_logprob": -0.25522669623879823, "compression_ratio": 1.3969072164948453, "no_speech_prob": 6.100154132582247e-05}, {"id": 12, "seek": 2832, "start": 39.480000000000004, "end": 45.64, "text": " Awesome. Thanks for joining us in the midst of your conference.", "tokens": [10391, 13, 2561, 337, 5549, 505, 294, 264, 18629, 295, 428, 7586, 13], "temperature": 0.0, "avg_logprob": -0.25522669623879823, "compression_ratio": 1.3969072164948453, "no_speech_prob": 6.100154132582247e-05}, {"id": 13, "seek": 2832, "start": 45.64, "end": 48.879999999999995, "text": " Let me share my screen here.", "tokens": [961, 385, 2073, 452, 2568, 510, 13], "temperature": 0.0, "avg_logprob": -0.25522669623879823, "compression_ratio": 1.3969072164948453, "no_speech_prob": 6.100154132582247e-05}, {"id": 14, "seek": 2832, "start": 48.879999999999995, "end": 54.120000000000005, "text": " Great. As Hamil mentioned,", "tokens": [3769, 13, 1018, 8234, 388, 2835, 11], "temperature": 0.0, "avg_logprob": -0.25522669623879823, "compression_ratio": 1.3969072164948453, "no_speech_prob": 6.100154132582247e-05}, {"id": 15, "seek": 2832, "start": 54.120000000000005, "end": 56.2, "text": " we're going to be using NBdev today,", "tokens": [321, 434, 516, 281, 312, 1228, 426, 33, 40343, 965, 11], "temperature": 0.0, "avg_logprob": -0.25522669623879823, "compression_ratio": 1.3969072164948453, "no_speech_prob": 6.100154132582247e-05}, {"id": 16, "seek": 5620, "start": 56.2, "end": 62.24, "text": " which works with Quarto to take a bunch of", "tokens": [597, 1985, 365, 2326, 15864, 281, 747, 257, 3840, 295], "temperature": 0.0, "avg_logprob": -0.2420869080916695, "compression_ratio": 1.5023255813953489, "no_speech_prob": 8.937968232203275e-06}, {"id": 17, "seek": 5620, "start": 62.24, "end": 70.52000000000001, "text": " Jupyter Notebooks and to turn it into a complete software package.", "tokens": [22125, 88, 391, 11633, 15170, 293, 281, 1261, 309, 666, 257, 3566, 4722, 7372, 13], "temperature": 0.0, "avg_logprob": -0.2420869080916695, "compression_ratio": 1.5023255813953489, "no_speech_prob": 8.937968232203275e-06}, {"id": 18, "seek": 5620, "start": 70.64, "end": 76.24000000000001, "text": " We're going to walk through how we would go about doing that from scratch.", "tokens": [492, 434, 516, 281, 1792, 807, 577, 321, 576, 352, 466, 884, 300, 490, 8459, 13], "temperature": 0.0, "avg_logprob": -0.2420869080916695, "compression_ratio": 1.5023255813953489, "no_speech_prob": 8.937968232203275e-06}, {"id": 19, "seek": 5620, "start": 76.24000000000001, "end": 78.88, "text": " It's actually much more exciting than that.", "tokens": [467, 311, 767, 709, 544, 4670, 813, 300, 13], "temperature": 0.0, "avg_logprob": -0.2420869080916695, "compression_ratio": 1.5023255813953489, "no_speech_prob": 8.937968232203275e-06}, {"id": 20, "seek": 5620, "start": 78.88, "end": 79.52000000000001, "text": " But-", "tokens": [583, 12], "temperature": 0.0, "avg_logprob": -0.2420869080916695, "compression_ratio": 1.5023255813953489, "no_speech_prob": 8.937968232203275e-06}, {"id": 21, "seek": 5620, "start": 79.52000000000001, "end": 80.60000000000001, "text": " Go on, get us excited.", "tokens": [1037, 322, 11, 483, 505, 2919, 13], "temperature": 0.0, "avg_logprob": -0.2420869080916695, "compression_ratio": 1.5023255813953489, "no_speech_prob": 8.937968232203275e-06}, {"id": 22, "seek": 5620, "start": 80.60000000000001, "end": 82.08, "text": " You can open the door.", "tokens": [509, 393, 1269, 264, 2853, 13], "temperature": 0.0, "avg_logprob": -0.2420869080916695, "compression_ratio": 1.5023255813953489, "no_speech_prob": 8.937968232203275e-06}, {"id": 23, "seek": 5620, "start": 82.08, "end": 85.36, "text": " Not only will we create a software package,", "tokens": [1726, 787, 486, 321, 1884, 257, 4722, 7372, 11], "temperature": 0.0, "avg_logprob": -0.2420869080916695, "compression_ratio": 1.5023255813953489, "no_speech_prob": 8.937968232203275e-06}, {"id": 24, "seek": 8536, "start": 85.36, "end": 92.16, "text": " but we'll show you how you can get a beautiful documentation site that's searchable for free.", "tokens": [457, 321, 603, 855, 291, 577, 291, 393, 483, 257, 2238, 14333, 3621, 300, 311, 3164, 712, 337, 1737, 13], "temperature": 0.0, "avg_logprob": -0.12511035694795497, "compression_ratio": 1.6285714285714286, "no_speech_prob": 8.527221325493883e-06}, {"id": 25, "seek": 8536, "start": 92.16, "end": 94.72, "text": " You'll get CI for free.", "tokens": [509, 603, 483, 37777, 337, 1737, 13], "temperature": 0.0, "avg_logprob": -0.12511035694795497, "compression_ratio": 1.6285714285714286, "no_speech_prob": 8.527221325493883e-06}, {"id": 26, "seek": 8536, "start": 94.72, "end": 101.48, "text": " You'll get an amazing way to do unit tests and testing all within the same context.", "tokens": [509, 603, 483, 364, 2243, 636, 281, 360, 4985, 6921, 293, 4997, 439, 1951, 264, 912, 4319, 13], "temperature": 0.0, "avg_logprob": -0.12511035694795497, "compression_ratio": 1.6285714285714286, "no_speech_prob": 8.527221325493883e-06}, {"id": 27, "seek": 8536, "start": 101.48, "end": 105.03999999999999, "text": " It's something that has made me more productive,", "tokens": [467, 311, 746, 300, 575, 1027, 385, 544, 13304, 11], "temperature": 0.0, "avg_logprob": -0.12511035694795497, "compression_ratio": 1.6285714285714286, "no_speech_prob": 8.527221325493883e-06}, {"id": 28, "seek": 8536, "start": 105.03999999999999, "end": 108.0, "text": " at least 10 times more productive,", "tokens": [412, 1935, 1266, 1413, 544, 13304, 11], "temperature": 0.0, "avg_logprob": -0.12511035694795497, "compression_ratio": 1.6285714285714286, "no_speech_prob": 8.527221325493883e-06}, {"id": 29, "seek": 8536, "start": 108.0, "end": 112.12, "text": " while building all kinds of different software projects.", "tokens": [1339, 2390, 439, 3685, 295, 819, 4722, 4455, 13], "temperature": 0.0, "avg_logprob": -0.12511035694795497, "compression_ratio": 1.6285714285714286, "no_speech_prob": 8.527221325493883e-06}, {"id": 30, "seek": 11212, "start": 112.12, "end": 118.32000000000001, "text": " I've been using NBdev for about four years now, or three years.", "tokens": [286, 600, 668, 1228, 426, 33, 40343, 337, 466, 1451, 924, 586, 11, 420, 1045, 924, 13], "temperature": 0.0, "avg_logprob": -0.23800758168667177, "compression_ratio": 1.463768115942029, "no_speech_prob": 4.859547061641933e-06}, {"id": 31, "seek": 11212, "start": 118.32000000000001, "end": 122.48, "text": " I've made a lot of different types of software,", "tokens": [286, 600, 1027, 257, 688, 295, 819, 3467, 295, 4722, 11], "temperature": 0.0, "avg_logprob": -0.23800758168667177, "compression_ratio": 1.463768115942029, "no_speech_prob": 4.859547061641933e-06}, {"id": 32, "seek": 11212, "start": 122.48, "end": 128.68, "text": " everything from CLI apps to API clients,", "tokens": [1203, 490, 12855, 40, 7733, 281, 9362, 6982, 11], "temperature": 0.0, "avg_logprob": -0.23800758168667177, "compression_ratio": 1.463768115942029, "no_speech_prob": 4.859547061641933e-06}, {"id": 33, "seek": 11212, "start": 128.68, "end": 132.36, "text": " to I've worked on extensions of the Python programming language with", "tokens": [281, 286, 600, 2732, 322, 25129, 295, 264, 15329, 9410, 2856, 365], "temperature": 0.0, "avg_logprob": -0.23800758168667177, "compression_ratio": 1.463768115942029, "no_speech_prob": 4.859547061641933e-06}, {"id": 34, "seek": 11212, "start": 132.36, "end": 135.84, "text": " Jeremy and a bunch of other things.", "tokens": [17809, 293, 257, 3840, 295, 661, 721, 13], "temperature": 0.0, "avg_logprob": -0.23800758168667177, "compression_ratio": 1.463768115942029, "no_speech_prob": 4.859547061641933e-06}, {"id": 35, "seek": 11212, "start": 135.84, "end": 140.32, "text": " It's interesting how many different use cases", "tokens": [467, 311, 1880, 577, 867, 819, 764, 3331], "temperature": 0.0, "avg_logprob": -0.23800758168667177, "compression_ratio": 1.463768115942029, "no_speech_prob": 4.859547061641933e-06}, {"id": 36, "seek": 14032, "start": 140.32, "end": 143.48, "text": " that it's a really good fit for.", "tokens": [300, 309, 311, 257, 534, 665, 3318, 337, 13], "temperature": 0.0, "avg_logprob": -0.2611319224039714, "compression_ratio": 1.5877551020408163, "no_speech_prob": 8.937751772464253e-06}, {"id": 37, "seek": 14032, "start": 144.68, "end": 148.12, "text": " I think it's wonderful, so I'm really excited to show it to everybody.", "tokens": [286, 519, 309, 311, 3715, 11, 370, 286, 478, 534, 2919, 281, 855, 309, 281, 2201, 13], "temperature": 0.0, "avg_logprob": -0.2611319224039714, "compression_ratio": 1.5877551020408163, "no_speech_prob": 8.937751772464253e-06}, {"id": 38, "seek": 14032, "start": 148.12, "end": 149.16, "text": " What about you, Jeremy?", "tokens": [708, 466, 291, 11, 17809, 30], "temperature": 0.0, "avg_logprob": -0.2611319224039714, "compression_ratio": 1.5877551020408163, "no_speech_prob": 8.937751772464253e-06}, {"id": 39, "seek": 14032, "start": 149.16, "end": 151.0, "text": " How do you feel?", "tokens": [1012, 360, 291, 841, 30], "temperature": 0.0, "avg_logprob": -0.2611319224039714, "compression_ratio": 1.5877551020408163, "no_speech_prob": 8.937751772464253e-06}, {"id": 40, "seek": 14032, "start": 151.0, "end": 157.28, "text": " I think the big thing for me is I don't really enjoy writing software very much,", "tokens": [286, 519, 264, 955, 551, 337, 385, 307, 286, 500, 380, 534, 2103, 3579, 4722, 588, 709, 11], "temperature": 0.0, "avg_logprob": -0.2611319224039714, "compression_ratio": 1.5877551020408163, "no_speech_prob": 8.937751772464253e-06}, {"id": 41, "seek": 14032, "start": 157.28, "end": 163.12, "text": " but I'm not using NBdev now because I don't as much get into that flow state,", "tokens": [457, 286, 478, 406, 1228, 426, 33, 40343, 586, 570, 286, 500, 380, 382, 709, 483, 666, 300, 3095, 1785, 11], "temperature": 0.0, "avg_logprob": -0.2611319224039714, "compression_ratio": 1.5877551020408163, "no_speech_prob": 8.937751772464253e-06}, {"id": 42, "seek": 14032, "start": 163.12, "end": 165.48, "text": " which is such a pleasure.", "tokens": [597, 307, 1270, 257, 6834, 13], "temperature": 0.0, "avg_logprob": -0.2611319224039714, "compression_ratio": 1.5877551020408163, "no_speech_prob": 8.937751772464253e-06}, {"id": 43, "seek": 14032, "start": 165.48, "end": 169.32, "text": " Using a notebook because I'm doing exploratory programming,", "tokens": [11142, 257, 21060, 570, 286, 478, 884, 24765, 4745, 9410, 11], "temperature": 0.0, "avg_logprob": -0.2611319224039714, "compression_ratio": 1.5877551020408163, "no_speech_prob": 8.937751772464253e-06}, {"id": 44, "seek": 16932, "start": 169.32, "end": 173.16, "text": " I'm really in the zone the whole time.", "tokens": [286, 478, 534, 294, 264, 6668, 264, 1379, 565, 13], "temperature": 0.0, "avg_logprob": -0.14067406124538845, "compression_ratio": 1.5299145299145298, "no_speech_prob": 1.8042364899883978e-05}, {"id": 45, "seek": 16932, "start": 173.16, "end": 176.79999999999998, "text": " I very rarely have mysterious bugs", "tokens": [286, 588, 13752, 362, 13831, 15120], "temperature": 0.0, "avg_logprob": -0.14067406124538845, "compression_ratio": 1.5299145299145298, "no_speech_prob": 1.8042364899883978e-05}, {"id": 46, "seek": 16932, "start": 176.79999999999998, "end": 181.04, "text": " because everything along the way I've built an exploratory way,", "tokens": [570, 1203, 2051, 264, 636, 286, 600, 3094, 364, 24765, 4745, 636, 11], "temperature": 0.0, "avg_logprob": -0.14067406124538845, "compression_ratio": 1.5299145299145298, "no_speech_prob": 1.8042364899883978e-05}, {"id": 47, "seek": 16932, "start": 181.04, "end": 184.95999999999998, "text": " I know exactly how it works and it's very easy to fix any problems.", "tokens": [286, 458, 2293, 577, 309, 1985, 293, 309, 311, 588, 1858, 281, 3191, 604, 2740, 13], "temperature": 0.0, "avg_logprob": -0.14067406124538845, "compression_ratio": 1.5299145299145298, "no_speech_prob": 1.8042364899883978e-05}, {"id": 48, "seek": 16932, "start": 184.95999999999998, "end": 192.07999999999998, "text": " I'm in this continuous zone of productivity, which feels enjoyable.", "tokens": [286, 478, 294, 341, 10957, 6668, 295, 15604, 11, 597, 3417, 20305, 13], "temperature": 0.0, "avg_logprob": -0.14067406124538845, "compression_ratio": 1.5299145299145298, "no_speech_prob": 1.8042364899883978e-05}, {"id": 49, "seek": 16932, "start": 192.07999999999998, "end": 195.6, "text": " I've had various ways of trying to achieve something like that before NBdev existed,", "tokens": [286, 600, 632, 3683, 2098, 295, 1382, 281, 4584, 746, 411, 300, 949, 426, 33, 40343, 13135, 11], "temperature": 0.0, "avg_logprob": -0.14067406124538845, "compression_ratio": 1.5299145299145298, "no_speech_prob": 1.8042364899883978e-05}, {"id": 50, "seek": 19560, "start": 195.6, "end": 199.51999999999998, "text": " but I never had the same experience that this gives me.", "tokens": [457, 286, 1128, 632, 264, 912, 1752, 300, 341, 2709, 385, 13], "temperature": 0.0, "avg_logprob": -0.1631863970275319, "compression_ratio": 1.6423076923076922, "no_speech_prob": 2.209015110565815e-05}, {"id": 51, "seek": 19560, "start": 200.68, "end": 205.48, "text": " The other thing, as you mentioned, is you get all this stuff for free.", "tokens": [440, 661, 551, 11, 382, 291, 2835, 11, 307, 291, 483, 439, 341, 1507, 337, 1737, 13], "temperature": 0.0, "avg_logprob": -0.1631863970275319, "compression_ratio": 1.6423076923076922, "no_speech_prob": 2.209015110565815e-05}, {"id": 52, "seek": 19560, "start": 205.48, "end": 209.16, "text": " The fact that I can quickly whip out in a couple of hours a complete project", "tokens": [440, 1186, 300, 286, 393, 2661, 22377, 484, 294, 257, 1916, 295, 2496, 257, 3566, 1716], "temperature": 0.0, "avg_logprob": -0.1631863970275319, "compression_ratio": 1.6423076923076922, "no_speech_prob": 2.209015110565815e-05}, {"id": 53, "seek": 19560, "start": 209.16, "end": 213.6, "text": " with continuous integration tests, documentation, PIP installers,", "tokens": [365, 10957, 10980, 6921, 11, 14333, 11, 430, 9139, 3625, 433, 11], "temperature": 0.0, "avg_logprob": -0.1631863970275319, "compression_ratio": 1.6423076923076922, "no_speech_prob": 2.209015110565815e-05}, {"id": 54, "seek": 19560, "start": 213.6, "end": 215.88, "text": " all that stuff is pretty cool.", "tokens": [439, 300, 1507, 307, 1238, 1627, 13], "temperature": 0.0, "avg_logprob": -0.1631863970275319, "compression_ratio": 1.6423076923076922, "no_speech_prob": 2.209015110565815e-05}, {"id": 55, "seek": 19560, "start": 215.88, "end": 221.12, "text": " That's what we're going to build today, just a fun little sample project.", "tokens": [663, 311, 437, 321, 434, 516, 281, 1322, 965, 11, 445, 257, 1019, 707, 6889, 1716, 13], "temperature": 0.0, "avg_logprob": -0.1631863970275319, "compression_ratio": 1.6423076923076922, "no_speech_prob": 2.209015110565815e-05}, {"id": 56, "seek": 19560, "start": 221.12, "end": 223.35999999999999, "text": " It's not going to do anything interesting, this one.", "tokens": [467, 311, 406, 516, 281, 360, 1340, 1880, 11, 341, 472, 13], "temperature": 0.0, "avg_logprob": -0.1631863970275319, "compression_ratio": 1.6423076923076922, "no_speech_prob": 2.209015110565815e-05}, {"id": 57, "seek": 22336, "start": 223.36, "end": 227.96, "text": " It's going to be based on this book, Think Python,", "tokens": [467, 311, 516, 281, 312, 2361, 322, 341, 1446, 11, 6557, 15329, 11], "temperature": 0.0, "avg_logprob": -0.20365262238875678, "compression_ratio": 1.668, "no_speech_prob": 5.5574528232682496e-05}, {"id": 58, "seek": 22336, "start": 227.96, "end": 230.0, "text": " by Alan Downey, which is a really great book.", "tokens": [538, 16442, 9506, 2030, 11, 597, 307, 257, 534, 869, 1446, 13], "temperature": 0.0, "avg_logprob": -0.20365262238875678, "compression_ratio": 1.668, "no_speech_prob": 5.5574528232682496e-05}, {"id": 59, "seek": 22336, "start": 230.0, "end": 233.60000000000002, "text": " We're going to build a deck of cards.", "tokens": [492, 434, 516, 281, 1322, 257, 9341, 295, 5632, 13], "temperature": 0.0, "avg_logprob": -0.20365262238875678, "compression_ratio": 1.668, "no_speech_prob": 5.5574528232682496e-05}, {"id": 60, "seek": 22336, "start": 233.60000000000002, "end": 236.52, "text": " They're basically going to be inspired by the deck of cards idea", "tokens": [814, 434, 1936, 516, 281, 312, 7547, 538, 264, 9341, 295, 5632, 1558], "temperature": 0.0, "avg_logprob": -0.20365262238875678, "compression_ratio": 1.668, "no_speech_prob": 5.5574528232682496e-05}, {"id": 61, "seek": 22336, "start": 236.52, "end": 241.20000000000002, "text": " that comes from his book to do a bit of OO programming in Python.", "tokens": [300, 1487, 490, 702, 1446, 281, 360, 257, 857, 295, 422, 46, 9410, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.20365262238875678, "compression_ratio": 1.668, "no_speech_prob": 5.5574528232682496e-05}, {"id": 62, "seek": 22336, "start": 241.20000000000002, "end": 246.24, "text": " We're going to end up with a documentation site, a conda package,", "tokens": [492, 434, 516, 281, 917, 493, 365, 257, 14333, 3621, 11, 257, 2224, 64, 7372, 11], "temperature": 0.0, "avg_logprob": -0.20365262238875678, "compression_ratio": 1.668, "no_speech_prob": 5.5574528232682496e-05}, {"id": 63, "seek": 22336, "start": 246.24, "end": 249.52, "text": " a PIP package, tests and continuous integration,", "tokens": [257, 430, 9139, 7372, 11, 6921, 293, 10957, 10980, 11], "temperature": 0.0, "avg_logprob": -0.20365262238875678, "compression_ratio": 1.668, "no_speech_prob": 5.5574528232682496e-05}, {"id": 64, "seek": 22336, "start": 249.52, "end": 253.28000000000003, "text": " which before this video is finished.", "tokens": [597, 949, 341, 960, 307, 4335, 13], "temperature": 0.0, "avg_logprob": -0.20365262238875678, "compression_ratio": 1.668, "no_speech_prob": 5.5574528232682496e-05}, {"id": 65, "seek": 25328, "start": 253.28, "end": 255.44, "text": " Am I missing anything, Hamill? Is that what we're going to have?", "tokens": [2012, 286, 5361, 1340, 11, 8234, 373, 30, 1119, 300, 437, 321, 434, 516, 281, 362, 30], "temperature": 0.0, "avg_logprob": -0.22155219433354398, "compression_ratio": 1.662037037037037, "no_speech_prob": 1.4283516975410748e-05}, {"id": 66, "seek": 25328, "start": 255.44, "end": 257.24, "text": " Yeah, we're going to have all that.", "tokens": [865, 11, 321, 434, 516, 281, 362, 439, 300, 13], "temperature": 0.0, "avg_logprob": -0.22155219433354398, "compression_ratio": 1.662037037037037, "no_speech_prob": 1.4283516975410748e-05}, {"id": 67, "seek": 25328, "start": 257.24, "end": 262.44, "text": " Great. The starting point for creating an MB dev package", "tokens": [3769, 13, 440, 2891, 935, 337, 4084, 364, 28866, 1905, 7372], "temperature": 0.0, "avg_logprob": -0.22155219433354398, "compression_ratio": 1.662037037037037, "no_speech_prob": 1.4283516975410748e-05}, {"id": 68, "seek": 25328, "start": 262.44, "end": 265.72, "text": " is to create a repository.", "tokens": [307, 281, 1884, 257, 25841, 13], "temperature": 0.0, "avg_logprob": -0.22155219433354398, "compression_ratio": 1.662037037037037, "no_speech_prob": 1.4283516975410748e-05}, {"id": 69, "seek": 25328, "start": 267.92, "end": 270.56, "text": " The smoothest path is generally to use GitHub.", "tokens": [440, 5508, 377, 3100, 307, 5101, 281, 764, 23331, 13], "temperature": 0.0, "avg_logprob": -0.22155219433354398, "compression_ratio": 1.662037037037037, "no_speech_prob": 1.4283516975410748e-05}, {"id": 70, "seek": 25328, "start": 270.56, "end": 273.4, "text": " It's not strictly required.", "tokens": [467, 311, 406, 20792, 4739, 13], "temperature": 0.0, "avg_logprob": -0.22155219433354398, "compression_ratio": 1.662037037037037, "no_speech_prob": 1.4283516975410748e-05}, {"id": 71, "seek": 25328, "start": 273.4, "end": 274.96, "text": " Here we are on GitHub.", "tokens": [1692, 321, 366, 322, 23331, 13], "temperature": 0.0, "avg_logprob": -0.22155219433354398, "compression_ratio": 1.662037037037037, "no_speech_prob": 1.4283516975410748e-05}, {"id": 72, "seek": 25328, "start": 274.96, "end": 282.88, "text": " I'll go ahead and create a repository and call it MB dev cards, for example.", "tokens": [286, 603, 352, 2286, 293, 1884, 257, 25841, 293, 818, 309, 28866, 1905, 5632, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.22155219433354398, "compression_ratio": 1.662037037037037, "no_speech_prob": 1.4283516975410748e-05}, {"id": 73, "seek": 28288, "start": 282.88, "end": 285.48, "text": " Give it a description.", "tokens": [5303, 309, 257, 3855, 13], "temperature": 0.0, "avg_logprob": -0.22794253851777763, "compression_ratio": 1.5257731958762886, "no_speech_prob": 1.280326978303492e-05}, {"id": 74, "seek": 28288, "start": 285.48, "end": 290.04, "text": " You can patch your license, create the repo.", "tokens": [509, 393, 9972, 428, 10476, 11, 1884, 264, 49040, 13], "temperature": 0.0, "avg_logprob": -0.22794253851777763, "compression_ratio": 1.5257731958762886, "no_speech_prob": 1.280326978303492e-05}, {"id": 75, "seek": 28288, "start": 290.04, "end": 291.04, "text": " There it is.", "tokens": [821, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.22794253851777763, "compression_ratio": 1.5257731958762886, "no_speech_prob": 1.280326978303492e-05}, {"id": 76, "seek": 28288, "start": 291.04, "end": 294.28, "text": " OK, so that's step one.", "tokens": [2264, 11, 370, 300, 311, 1823, 472, 13], "temperature": 0.0, "avg_logprob": -0.22794253851777763, "compression_ratio": 1.5257731958762886, "no_speech_prob": 1.280326978303492e-05}, {"id": 77, "seek": 28288, "start": 294.28, "end": 298.56, "text": " So what we're going to do now is we're going to clone this repo", "tokens": [407, 437, 321, 434, 516, 281, 360, 586, 307, 321, 434, 516, 281, 26506, 341, 49040], "temperature": 0.0, "avg_logprob": -0.22794253851777763, "compression_ratio": 1.5257731958762886, "no_speech_prob": 1.280326978303492e-05}, {"id": 78, "seek": 28288, "start": 298.56, "end": 302.08, "text": " and turn it into an MP dev repository.", "tokens": [293, 1261, 309, 666, 364, 14146, 1905, 25841, 13], "temperature": 0.0, "avg_logprob": -0.22794253851777763, "compression_ratio": 1.5257731958762886, "no_speech_prob": 1.280326978303492e-05}, {"id": 79, "seek": 28288, "start": 302.08, "end": 303.88, "text": " So I'll click the copy button.", "tokens": [407, 286, 603, 2052, 264, 5055, 2960, 13], "temperature": 0.0, "avg_logprob": -0.22794253851777763, "compression_ratio": 1.5257731958762886, "no_speech_prob": 1.280326978303492e-05}, {"id": 80, "seek": 28288, "start": 303.88, "end": 309.6, "text": " I'm going to head over to my terminal and we'll clone it.", "tokens": [286, 478, 516, 281, 1378, 670, 281, 452, 14709, 293, 321, 603, 26506, 309, 13], "temperature": 0.0, "avg_logprob": -0.22794253851777763, "compression_ratio": 1.5257731958762886, "no_speech_prob": 1.280326978303492e-05}, {"id": 81, "seek": 30960, "start": 309.6, "end": 314.8, "text": " That repo, MB dev cards, and this is assuming that I've already got MB dev installed.", "tokens": [663, 49040, 11, 28866, 1905, 5632, 11, 293, 341, 307, 11926, 300, 286, 600, 1217, 658, 28866, 1905, 8899, 13], "temperature": 0.0, "avg_logprob": -0.1513703105213878, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.240869823959656e-05}, {"id": 82, "seek": 30960, "start": 314.8, "end": 323.12, "text": " So to install MB dev, you can follow the directions on the home page.", "tokens": [407, 281, 3625, 28866, 1905, 11, 291, 393, 1524, 264, 11095, 322, 264, 1280, 3028, 13], "temperature": 0.0, "avg_logprob": -0.1513703105213878, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.240869823959656e-05}, {"id": 83, "seek": 30960, "start": 323.12, "end": 325.88, "text": " So there's a written tutorial and just above it,", "tokens": [407, 456, 311, 257, 3720, 7073, 293, 445, 3673, 309, 11], "temperature": 0.0, "avg_logprob": -0.1513703105213878, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.240869823959656e-05}, {"id": 84, "seek": 30960, "start": 325.88, "end": 330.48, "text": " you'll see the PIP install or conda install commands you can use.", "tokens": [291, 603, 536, 264, 430, 9139, 3625, 420, 2224, 64, 3625, 16901, 291, 393, 764, 13], "temperature": 0.0, "avg_logprob": -0.1513703105213878, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.240869823959656e-05}, {"id": 85, "seek": 30960, "start": 330.48, "end": 334.04, "text": " MB dev is very, very lightweight.", "tokens": [28866, 1905, 307, 588, 11, 588, 22052, 13], "temperature": 0.0, "avg_logprob": -0.1513703105213878, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.240869823959656e-05}, {"id": 86, "seek": 30960, "start": 334.04, "end": 336.84000000000003, "text": " It has very few dependencies.", "tokens": [467, 575, 588, 1326, 36606, 13], "temperature": 0.0, "avg_logprob": -0.1513703105213878, "compression_ratio": 1.6057692307692308, "no_speech_prob": 1.240869823959656e-05}, {"id": 87, "seek": 33684, "start": 336.84, "end": 340.32, "text": " Bendices are basically fast core and exec NB.", "tokens": [363, 521, 1473, 366, 1936, 2370, 4965, 293, 4454, 426, 33, 13], "temperature": 0.0, "avg_logprob": -0.16090337932109833, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.5687297491240315e-05}, {"id": 88, "seek": 33684, "start": 340.32, "end": 340.79999999999995, "text": " That's about it.", "tokens": [663, 311, 466, 309, 13], "temperature": 0.0, "avg_logprob": -0.16090337932109833, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.5687297491240315e-05}, {"id": 89, "seek": 33684, "start": 340.79999999999995, "end": 343.44, "text": " You don't even need Jupyter or anything to run it.", "tokens": [509, 500, 380, 754, 643, 22125, 88, 391, 420, 1340, 281, 1190, 309, 13], "temperature": 0.0, "avg_logprob": -0.16090337932109833, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.5687297491240315e-05}, {"id": 90, "seek": 33684, "start": 343.44, "end": 345.88, "text": " Obviously, to author stuff, you'll need Jupyter.", "tokens": [7580, 11, 281, 3793, 1507, 11, 291, 603, 643, 22125, 88, 391, 13], "temperature": 0.0, "avg_logprob": -0.16090337932109833, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.5687297491240315e-05}, {"id": 91, "seek": 33684, "start": 345.88, "end": 349.84, "text": " But yeah, it's a very lightweight library.", "tokens": [583, 1338, 11, 309, 311, 257, 588, 22052, 6405, 13], "temperature": 0.0, "avg_logprob": -0.16090337932109833, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.5687297491240315e-05}, {"id": 92, "seek": 33684, "start": 349.84, "end": 353.55999999999995, "text": " So once you've got it installed, if you type nbdev underscore and hit tab,", "tokens": [407, 1564, 291, 600, 658, 309, 8899, 11, 498, 291, 2010, 297, 65, 40343, 37556, 293, 2045, 4421, 11], "temperature": 0.0, "avg_logprob": -0.16090337932109833, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.5687297491240315e-05}, {"id": 93, "seek": 33684, "start": 353.55999999999995, "end": 358.23999999999995, "text": " you'll find that there's a bunch of command line tools that it's installed for you.", "tokens": [291, 603, 915, 300, 456, 311, 257, 3840, 295, 5622, 1622, 3873, 300, 309, 311, 8899, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.16090337932109833, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.5687297491240315e-05}, {"id": 94, "seek": 33684, "start": 358.23999999999995, "end": 364.2, "text": " And so you can get a list of them here on the MB dev main docs page.", "tokens": [400, 370, 291, 393, 483, 257, 1329, 295, 552, 510, 322, 264, 28866, 1905, 2135, 45623, 3028, 13], "temperature": 0.0, "avg_logprob": -0.16090337932109833, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.5687297491240315e-05}, {"id": 95, "seek": 36420, "start": 364.2, "end": 368.24, "text": " And the one we're going to use is nbdev new.", "tokens": [400, 264, 472, 321, 434, 516, 281, 764, 307, 297, 65, 40343, 777, 13], "temperature": 0.0, "avg_logprob": -0.15786561965942383, "compression_ratio": 1.7154471544715446, "no_speech_prob": 1.805738065741025e-05}, {"id": 96, "seek": 36420, "start": 368.24, "end": 373.64, "text": " And you can also see a list of them any time if you do nbdev help in the terminal as well.", "tokens": [400, 291, 393, 611, 536, 257, 1329, 295, 552, 604, 565, 498, 291, 360, 297, 65, 40343, 854, 294, 264, 14709, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.15786561965942383, "compression_ratio": 1.7154471544715446, "no_speech_prob": 1.805738065741025e-05}, {"id": 97, "seek": 36420, "start": 373.64, "end": 376.32, "text": " You get a short description of all of them.", "tokens": [509, 483, 257, 2099, 3855, 295, 439, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.15786561965942383, "compression_ratio": 1.7154471544715446, "no_speech_prob": 1.805738065741025e-05}, {"id": 98, "seek": 36420, "start": 376.32, "end": 377.08, "text": " Great.", "tokens": [3769, 13], "temperature": 0.0, "avg_logprob": -0.15786561965942383, "compression_ratio": 1.7154471544715446, "no_speech_prob": 1.805738065741025e-05}, {"id": 99, "seek": 36420, "start": 377.08, "end": 382.0, "text": " And this is actually a good example, Hamil, of how we don't have to do anything", "tokens": [400, 341, 307, 767, 257, 665, 1365, 11, 8234, 388, 11, 295, 577, 321, 500, 380, 362, 281, 360, 1340], "temperature": 0.0, "avg_logprob": -0.15786561965942383, "compression_ratio": 1.7154471544715446, "no_speech_prob": 1.805738065741025e-05}, {"id": 100, "seek": 36420, "start": 382.0, "end": 388.03999999999996, "text": " to keep our documentation up to date because our documentation being in nbdev", "tokens": [281, 1066, 527, 14333, 493, 281, 4002, 570, 527, 14333, 885, 294, 297, 65, 40343], "temperature": 0.0, "avg_logprob": -0.15786561965942383, "compression_ratio": 1.7154471544715446, "no_speech_prob": 1.805738065741025e-05}, {"id": 101, "seek": 36420, "start": 388.03999999999996, "end": 389.52, "text": " is written in nbdev.", "tokens": [307, 3720, 294, 297, 65, 40343, 13], "temperature": 0.0, "avg_logprob": -0.15786561965942383, "compression_ratio": 1.7154471544715446, "no_speech_prob": 1.805738065741025e-05}, {"id": 102, "seek": 36420, "start": 389.52, "end": 392.15999999999997, "text": " And so the documentation actually uses exclamation mark.", "tokens": [400, 370, 264, 14333, 767, 4960, 1624, 43233, 1491, 13], "temperature": 0.0, "avg_logprob": -0.15786561965942383, "compression_ratio": 1.7154471544715446, "no_speech_prob": 1.805738065741025e-05}, {"id": 103, "seek": 39216, "start": 392.16, "end": 397.64000000000004, "text": " That means run a shell command in Jupyter followed by that shell command and the output here.", "tokens": [663, 1355, 1190, 257, 8720, 5622, 294, 22125, 88, 391, 6263, 538, 300, 8720, 5622, 293, 264, 5598, 510, 13], "temperature": 0.0, "avg_logprob": -0.21235819277556045, "compression_ratio": 1.896, "no_speech_prob": 1.4509440916299354e-05}, {"id": 104, "seek": 39216, "start": 397.64000000000004, "end": 404.52000000000004, "text": " So the output in our documentation will always be up to date because it's running the actual code.", "tokens": [407, 264, 5598, 294, 527, 14333, 486, 1009, 312, 493, 281, 4002, 570, 309, 311, 2614, 264, 3539, 3089, 13], "temperature": 0.0, "avg_logprob": -0.21235819277556045, "compression_ratio": 1.896, "no_speech_prob": 1.4509440916299354e-05}, {"id": 105, "seek": 39216, "start": 404.52000000000004, "end": 410.6, "text": " This is huge because the way that most people create documentation is they copy and paste code", "tokens": [639, 307, 2603, 570, 264, 636, 300, 881, 561, 1884, 14333, 307, 436, 5055, 293, 9163, 3089], "temperature": 0.0, "avg_logprob": -0.21235819277556045, "compression_ratio": 1.896, "no_speech_prob": 1.4509440916299354e-05}, {"id": 106, "seek": 39216, "start": 410.6, "end": 415.28000000000003, "text": " into Markdown and they copy and paste the output into Markdown and it becomes stale.", "tokens": [666, 3934, 5093, 293, 436, 5055, 293, 9163, 264, 5598, 666, 3934, 5093, 293, 309, 3643, 342, 1220, 13], "temperature": 0.0, "avg_logprob": -0.21235819277556045, "compression_ratio": 1.896, "no_speech_prob": 1.4509440916299354e-05}, {"id": 107, "seek": 39216, "start": 415.28000000000003, "end": 416.40000000000003, "text": " It becomes a big headache.", "tokens": [467, 3643, 257, 955, 23520, 13], "temperature": 0.0, "avg_logprob": -0.21235819277556045, "compression_ratio": 1.896, "no_speech_prob": 1.4509440916299354e-05}, {"id": 108, "seek": 39216, "start": 416.40000000000003, "end": 418.48, "text": " And that's why nobody writes documentation.", "tokens": [400, 300, 311, 983, 5079, 13657, 14333, 13], "temperature": 0.0, "avg_logprob": -0.21235819277556045, "compression_ratio": 1.896, "no_speech_prob": 1.4509440916299354e-05}, {"id": 109, "seek": 39216, "start": 418.48, "end": 421.12, "text": " But this is why I didn't care.", "tokens": [583, 341, 307, 983, 286, 994, 380, 1127, 13], "temperature": 0.0, "avg_logprob": -0.21235819277556045, "compression_ratio": 1.896, "no_speech_prob": 1.4509440916299354e-05}, {"id": 110, "seek": 42112, "start": 421.12, "end": 423.08, "text": " Nbdev is for lazy people like me.", "tokens": [426, 65, 40343, 307, 337, 14847, 561, 411, 385, 13], "temperature": 0.0, "avg_logprob": -0.10959528374859667, "compression_ratio": 1.676595744680851, "no_speech_prob": 1.8338354493607767e-05}, {"id": 111, "seek": 42112, "start": 423.08, "end": 426.92, "text": " I'm very lazy and I'm not prepared to do things twice.", "tokens": [286, 478, 588, 14847, 293, 286, 478, 406, 4927, 281, 360, 721, 6091, 13], "temperature": 0.0, "avg_logprob": -0.10959528374859667, "compression_ratio": 1.676595744680851, "no_speech_prob": 1.8338354493607767e-05}, {"id": 112, "seek": 42112, "start": 426.92, "end": 430.16, "text": " OK, so nbdev new.", "tokens": [2264, 11, 370, 297, 65, 40343, 777, 13], "temperature": 0.0, "avg_logprob": -0.10959528374859667, "compression_ratio": 1.676595744680851, "no_speech_prob": 1.8338354493607767e-05}, {"id": 113, "seek": 42112, "start": 430.16, "end": 436.52, "text": " So you can pass minus h to any nbdev command to find out how to use it.", "tokens": [407, 291, 393, 1320, 3175, 276, 281, 604, 297, 65, 40343, 5622, 281, 915, 484, 577, 281, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.10959528374859667, "compression_ratio": 1.676595744680851, "no_speech_prob": 1.8338354493607767e-05}, {"id": 114, "seek": 42112, "start": 436.52, "end": 438.6, "text": " In this case, it's very, very simple.", "tokens": [682, 341, 1389, 11, 309, 311, 588, 11, 588, 2199, 13], "temperature": 0.0, "avg_logprob": -0.10959528374859667, "compression_ratio": 1.676595744680851, "no_speech_prob": 1.8338354493607767e-05}, {"id": 115, "seek": 42112, "start": 438.6, "end": 441.52, "text": " You just this got no command line arguments.", "tokens": [509, 445, 341, 658, 572, 5622, 1622, 12869, 13], "temperature": 0.0, "avg_logprob": -0.10959528374859667, "compression_ratio": 1.676595744680851, "no_speech_prob": 1.8338354493607767e-05}, {"id": 116, "seek": 42112, "start": 441.52, "end": 444.2, "text": " So you can just go ahead and just run nbdev here.", "tokens": [407, 291, 393, 445, 352, 2286, 293, 445, 1190, 297, 65, 40343, 510, 13], "temperature": 0.0, "avg_logprob": -0.10959528374859667, "compression_ratio": 1.676595744680851, "no_speech_prob": 1.8338354493607767e-05}, {"id": 117, "seek": 42112, "start": 444.2, "end": 450.96, "text": " So as you can see here, when I run nbdev new, it figures out all the details of my", "tokens": [407, 382, 291, 393, 536, 510, 11, 562, 286, 1190, 297, 65, 40343, 777, 11, 309, 9624, 484, 439, 264, 4365, 295, 452], "temperature": 0.0, "avg_logprob": -0.10959528374859667, "compression_ratio": 1.676595744680851, "no_speech_prob": 1.8338354493607767e-05}, {"id": 118, "seek": 45096, "start": 450.96, "end": 454.96, "text": " repo and it creates a file called settings.any.", "tokens": [49040, 293, 309, 7829, 257, 3991, 1219, 6257, 13, 1325, 13], "temperature": 0.0, "avg_logprob": -0.14606718369472174, "compression_ratio": 1.726775956284153, "no_speech_prob": 9.514907105767634e-06}, {"id": 119, "seek": 45096, "start": 454.96, "end": 463.68, "text": " And settings.any is your home for all the stuff that you need for your app or your library.", "tokens": [400, 6257, 13, 1325, 307, 428, 1280, 337, 439, 264, 1507, 300, 291, 643, 337, 428, 724, 420, 428, 6405, 13], "temperature": 0.0, "avg_logprob": -0.14606718369472174, "compression_ratio": 1.726775956284153, "no_speech_prob": 9.514907105767634e-06}, {"id": 120, "seek": 45096, "start": 463.68, "end": 474.28, "text": " And the neat thing about this for a lazy person like me is that you only have to put this stuff in one", "tokens": [400, 264, 10654, 551, 466, 341, 337, 257, 14847, 954, 411, 385, 307, 300, 291, 787, 362, 281, 829, 341, 1507, 294, 472], "temperature": 0.0, "avg_logprob": -0.14606718369472174, "compression_ratio": 1.726775956284153, "no_speech_prob": 9.514907105767634e-06}, {"id": 121, "seek": 45096, "start": 474.28, "end": 480.56, "text": " place at one time, like the version number and your details and so forth.", "tokens": [1081, 412, 472, 565, 11, 411, 264, 3037, 1230, 293, 428, 4365, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.14606718369472174, "compression_ratio": 1.726775956284153, "no_speech_prob": 9.514907105767634e-06}, {"id": 122, "seek": 48056, "start": 480.56, "end": 485.92, "text": " Yeah, it means that you don't have to worry about putting these things in multiple places for your", "tokens": [865, 11, 309, 1355, 300, 291, 500, 380, 362, 281, 3292, 466, 3372, 613, 721, 294, 3866, 3190, 337, 428], "temperature": 0.0, "avg_logprob": -0.1916557568222729, "compression_ratio": 1.6770833333333333, "no_speech_prob": 1.3629859495267738e-05}, {"id": 123, "seek": 48056, "start": 485.92, "end": 488.68, "text": " documentation, for your PyPy installer, whatever.", "tokens": [14333, 11, 337, 428, 9953, 47, 88, 46620, 11, 2035, 13], "temperature": 0.0, "avg_logprob": -0.1916557568222729, "compression_ratio": 1.6770833333333333, "no_speech_prob": 1.3629859495267738e-05}, {"id": 124, "seek": 48056, "start": 488.68, "end": 490.16, "text": " It's all going to come from one place.", "tokens": [467, 311, 439, 516, 281, 808, 490, 472, 1081, 13], "temperature": 0.0, "avg_logprob": -0.1916557568222729, "compression_ratio": 1.6770833333333333, "no_speech_prob": 1.3629859495267738e-05}, {"id": 125, "seek": 48056, "start": 490.16, "end": 492.0, "text": " You don't have to worry about it.", "tokens": [509, 500, 380, 362, 281, 3292, 466, 309, 13], "temperature": 0.0, "avg_logprob": -0.1916557568222729, "compression_ratio": 1.6770833333333333, "no_speech_prob": 1.3629859495267738e-05}, {"id": 126, "seek": 48056, "start": 492.0, "end": 493.12, "text": " That is great.", "tokens": [663, 307, 869, 13], "temperature": 0.0, "avg_logprob": -0.1916557568222729, "compression_ratio": 1.6770833333333333, "no_speech_prob": 1.3629859495267738e-05}, {"id": 127, "seek": 48056, "start": 493.12, "end": 496.68, "text": " Otherwise, you know, like package management has so much boilerplate.", "tokens": [10328, 11, 291, 458, 11, 411, 7372, 4592, 575, 370, 709, 39228, 37008, 13], "temperature": 0.0, "avg_logprob": -0.1916557568222729, "compression_ratio": 1.6770833333333333, "no_speech_prob": 1.3629859495267738e-05}, {"id": 128, "seek": 48056, "start": 496.68, "end": 498.36, "text": " It's overwhelming.", "tokens": [467, 311, 13373, 13], "temperature": 0.0, "avg_logprob": -0.1916557568222729, "compression_ratio": 1.6770833333333333, "no_speech_prob": 1.3629859495267738e-05}, {"id": 129, "seek": 48056, "start": 498.36, "end": 505.8, "text": " And this makes it to where you can actually do it because it stays sane.", "tokens": [400, 341, 1669, 309, 281, 689, 291, 393, 767, 360, 309, 570, 309, 10834, 45610, 13], "temperature": 0.0, "avg_logprob": -0.1916557568222729, "compression_ratio": 1.6770833333333333, "no_speech_prob": 1.3629859495267738e-05}, {"id": 130, "seek": 48056, "start": 505.8, "end": 509.16, "text": " So the next thing we're going to do, then, is create.", "tokens": [407, 264, 958, 551, 321, 434, 516, 281, 360, 11, 550, 11, 307, 1884, 13], "temperature": 0.0, "avg_logprob": -0.1916557568222729, "compression_ratio": 1.6770833333333333, "no_speech_prob": 1.3629859495267738e-05}, {"id": 131, "seek": 48056, "start": 509.16, "end": 510.04, "text": " Let's see what we've got here.", "tokens": [961, 311, 536, 437, 321, 600, 658, 510, 13], "temperature": 0.0, "avg_logprob": -0.1916557568222729, "compression_ratio": 1.6770833333333333, "no_speech_prob": 1.3629859495267738e-05}, {"id": 132, "seek": 51004, "start": 510.04, "end": 522.96, "text": " So it's given us an OO Core notebook, an index notebook, a read me, a setup, and some style sheet info.", "tokens": [407, 309, 311, 2212, 505, 364, 422, 46, 14798, 21060, 11, 364, 8186, 21060, 11, 257, 1401, 385, 11, 257, 8657, 11, 293, 512, 3758, 8193, 13614, 13], "temperature": 0.0, "avg_logprob": -0.1379781144388606, "compression_ratio": 1.5863874345549738, "no_speech_prob": 2.4437765659968136e-06}, {"id": 133, "seek": 51004, "start": 522.96, "end": 526.5600000000001, "text": " So we'll learn about what all these things are in a moment.", "tokens": [407, 321, 603, 1466, 466, 437, 439, 613, 721, 366, 294, 257, 1623, 13], "temperature": 0.0, "avg_logprob": -0.1379781144388606, "compression_ratio": 1.5863874345549738, "no_speech_prob": 2.4437765659968136e-06}, {"id": 134, "seek": 51004, "start": 526.5600000000001, "end": 533.64, "text": " So let's start by opening up the home page that you're going to be using.", "tokens": [407, 718, 311, 722, 538, 5193, 493, 264, 1280, 3028, 300, 291, 434, 516, 281, 312, 1228, 13], "temperature": 0.0, "avg_logprob": -0.1379781144388606, "compression_ratio": 1.5863874345549738, "no_speech_prob": 2.4437765659968136e-06}, {"id": 135, "seek": 51004, "start": 533.64, "end": 538.52, "text": " So index.ipynb is going to become your home page, as you can see.", "tokens": [407, 8186, 13, 647, 2534, 65, 307, 516, 281, 1813, 428, 1280, 3028, 11, 382, 291, 393, 536, 13], "temperature": 0.0, "avg_logprob": -0.1379781144388606, "compression_ratio": 1.5863874345549738, "no_speech_prob": 2.4437765659968136e-06}, {"id": 136, "seek": 53852, "start": 538.52, "end": 541.4, "text": " And OO Core.", "tokens": [400, 422, 46, 14798, 13], "temperature": 0.0, "avg_logprob": -0.16820849402476165, "compression_ratio": 1.7692307692307692, "no_speech_prob": 9.971700819733087e-06}, {"id": 137, "seek": 53852, "start": 541.4, "end": 542.6, "text": " The home page for what?", "tokens": [440, 1280, 3028, 337, 437, 30], "temperature": 0.0, "avg_logprob": -0.16820849402476165, "compression_ratio": 1.7692307692307692, "no_speech_prob": 9.971700819733087e-06}, {"id": 138, "seek": 53852, "start": 542.6, "end": 544.56, "text": " The home page for the docs.", "tokens": [440, 1280, 3028, 337, 264, 45623, 13], "temperature": 0.0, "avg_logprob": -0.16820849402476165, "compression_ratio": 1.7692307692307692, "no_speech_prob": 9.971700819733087e-06}, {"id": 139, "seek": 53852, "start": 544.56, "end": 547.8, "text": " Yeah, home page for your documentation website, exactly.", "tokens": [865, 11, 1280, 3028, 337, 428, 14333, 3144, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.16820849402476165, "compression_ratio": 1.7692307692307692, "no_speech_prob": 9.971700819733087e-06}, {"id": 140, "seek": 53852, "start": 547.8, "end": 552.56, "text": " And Core is going to become the first thing that you create for your library.", "tokens": [400, 14798, 307, 516, 281, 1813, 264, 700, 551, 300, 291, 1884, 337, 428, 6405, 13], "temperature": 0.0, "avg_logprob": -0.16820849402476165, "compression_ratio": 1.7692307692307692, "no_speech_prob": 9.971700819733087e-06}, {"id": 141, "seek": 53852, "start": 552.56, "end": 557.24, "text": " And we're only really, well, we're going to use a couple of modules, so that's fine.", "tokens": [400, 321, 434, 787, 534, 11, 731, 11, 321, 434, 516, 281, 764, 257, 1916, 295, 16679, 11, 370, 300, 311, 2489, 13], "temperature": 0.0, "avg_logprob": -0.16820849402476165, "compression_ratio": 1.7692307692307692, "no_speech_prob": 9.971700819733087e-06}, {"id": 142, "seek": 53852, "start": 557.24, "end": 562.6, "text": " In fact, I think for this one, we're not necessarily going to have one called Core.", "tokens": [682, 1186, 11, 286, 519, 337, 341, 472, 11, 321, 434, 406, 4725, 516, 281, 362, 472, 1219, 14798, 13], "temperature": 0.0, "avg_logprob": -0.16820849402476165, "compression_ratio": 1.7692307692307692, "no_speech_prob": 9.971700819733087e-06}, {"id": 143, "seek": 53852, "start": 562.6, "end": 565.28, "text": " I think we're going to have cards and a deck.", "tokens": [286, 519, 321, 434, 516, 281, 362, 5632, 293, 257, 9341, 13], "temperature": 0.0, "avg_logprob": -0.16820849402476165, "compression_ratio": 1.7692307692307692, "no_speech_prob": 9.971700819733087e-06}, {"id": 144, "seek": 56528, "start": 565.28, "end": 568.52, "text": " We're going to put them just for explanation into two different modules.", "tokens": [492, 434, 516, 281, 829, 552, 445, 337, 10835, 666, 732, 819, 16679, 13], "temperature": 0.0, "avg_logprob": -0.17894821507590158, "compression_ratio": 1.5983935742971886, "no_speech_prob": 1.95239936147118e-05}, {"id": 145, "seek": 56528, "start": 568.52, "end": 570.48, "text": " So maybe we'll create cards first.", "tokens": [407, 1310, 321, 603, 1884, 5632, 700, 13], "temperature": 0.0, "avg_logprob": -0.17894821507590158, "compression_ratio": 1.5983935742971886, "no_speech_prob": 1.95239936147118e-05}, {"id": 146, "seek": 56528, "start": 570.48, "end": 576.4, "text": " So maybe we'll rename this to OO cards or card.", "tokens": [407, 1310, 321, 603, 36741, 341, 281, 422, 46, 5632, 420, 2920, 13], "temperature": 0.0, "avg_logprob": -0.17894821507590158, "compression_ratio": 1.5983935742971886, "no_speech_prob": 1.95239936147118e-05}, {"id": 147, "seek": 56528, "start": 576.4, "end": 577.68, "text": " Yeah, card.", "tokens": [865, 11, 2920, 13], "temperature": 0.0, "avg_logprob": -0.17894821507590158, "compression_ratio": 1.5983935742971886, "no_speech_prob": 1.95239936147118e-05}, {"id": 148, "seek": 56528, "start": 577.68, "end": 579.72, "text": " You want to say something about the OO in front?", "tokens": [509, 528, 281, 584, 746, 466, 264, 422, 46, 294, 1868, 30], "temperature": 0.0, "avg_logprob": -0.17894821507590158, "compression_ratio": 1.5983935742971886, "no_speech_prob": 1.95239936147118e-05}, {"id": 149, "seek": 56528, "start": 579.72, "end": 581.76, "text": " Does that mean anything to you?", "tokens": [4402, 300, 914, 1340, 281, 291, 30], "temperature": 0.0, "avg_logprob": -0.17894821507590158, "compression_ratio": 1.5983935742971886, "no_speech_prob": 1.95239936147118e-05}, {"id": 150, "seek": 56528, "start": 581.76, "end": 592.4, "text": " I mean, I like, yeah, I think it's helpful to have things have some ordering, like the order in which things are designed to be A, read and B, built.", "tokens": [286, 914, 11, 286, 411, 11, 1338, 11, 286, 519, 309, 311, 4961, 281, 362, 721, 362, 512, 21739, 11, 411, 264, 1668, 294, 597, 721, 366, 4761, 281, 312, 316, 11, 1401, 293, 363, 11, 3094, 13], "temperature": 0.0, "avg_logprob": -0.17894821507590158, "compression_ratio": 1.5983935742971886, "no_speech_prob": 1.95239936147118e-05}, {"id": 151, "seek": 59240, "start": 592.4, "end": 595.4399999999999, "text": " Like not so much how the software builds it, but how you built it.", "tokens": [1743, 406, 370, 709, 577, 264, 4722, 15182, 309, 11, 457, 577, 291, 3094, 309, 13], "temperature": 0.0, "avg_logprob": -0.13879157960876937, "compression_ratio": 1.6531986531986531, "no_speech_prob": 8.266670192824677e-06}, {"id": 152, "seek": 59240, "start": 595.4399999999999, "end": 605.64, "text": " So that the nice thing about this kind of literate programming approach is that because the documentation is the source, because the source code, notebooks,", "tokens": [407, 300, 264, 1481, 551, 466, 341, 733, 295, 2733, 473, 9410, 3109, 307, 300, 570, 264, 14333, 307, 264, 4009, 11, 570, 264, 4009, 3089, 11, 43782, 11], "temperature": 0.0, "avg_logprob": -0.13879157960876937, "compression_ratio": 1.6531986531986531, "no_speech_prob": 8.266670192824677e-06}, {"id": 153, "seek": 59240, "start": 605.64, "end": 610.48, "text": " somebody who wants to get up to speed on your library is reading notebooks.", "tokens": [2618, 567, 2738, 281, 483, 493, 281, 3073, 322, 428, 6405, 307, 3760, 43782, 13], "temperature": 0.0, "avg_logprob": -0.13879157960876937, "compression_ratio": 1.6531986531986531, "no_speech_prob": 8.266670192824677e-06}, {"id": 154, "seek": 59240, "start": 610.48, "end": 612.84, "text": " In fact, NBDEV is a good example of that.", "tokens": [682, 1186, 11, 426, 33, 22296, 53, 307, 257, 665, 1365, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.13879157960876937, "compression_ratio": 1.6531986531986531, "no_speech_prob": 8.266670192824677e-06}, {"id": 155, "seek": 59240, "start": 612.84, "end": 619.12, "text": " So if we go to the GitHub repo for NBDEV and we're like, OK, well, let's learn about how this software is written.", "tokens": [407, 498, 321, 352, 281, 264, 23331, 49040, 337, 426, 33, 22296, 53, 293, 321, 434, 411, 11, 2264, 11, 731, 11, 718, 311, 1466, 466, 577, 341, 4722, 307, 3720, 13], "temperature": 0.0, "avg_logprob": -0.13879157960876937, "compression_ratio": 1.6531986531986531, "no_speech_prob": 8.266670192824677e-06}, {"id": 156, "seek": 59240, "start": 619.12, "end": 621.6, "text": " I can start on the very first one.", "tokens": [286, 393, 722, 322, 264, 588, 700, 472, 13], "temperature": 0.0, "avg_logprob": -0.13879157960876937, "compression_ratio": 1.6531986531986531, "no_speech_prob": 8.266670192824677e-06}, {"id": 157, "seek": 62160, "start": 621.6, "end": 626.5600000000001, "text": " And I know that's what I need to start reading to start understanding how this is written.", "tokens": [400, 286, 458, 300, 311, 437, 286, 643, 281, 722, 3760, 281, 722, 3701, 577, 341, 307, 3720, 13], "temperature": 0.0, "avg_logprob": -0.1116866241266698, "compression_ratio": 1.5625, "no_speech_prob": 2.1103616745676845e-05}, {"id": 158, "seek": 62160, "start": 626.5600000000001, "end": 634.2, "text": " And I can start, OK, so here's what the settings.ini is and here's where it comes from.", "tokens": [400, 286, 393, 722, 11, 2264, 11, 370, 510, 311, 437, 264, 6257, 13, 3812, 307, 293, 510, 311, 689, 309, 1487, 490, 13], "temperature": 0.0, "avg_logprob": -0.1116866241266698, "compression_ratio": 1.5625, "no_speech_prob": 2.1103616745676845e-05}, {"id": 159, "seek": 62160, "start": 634.2, "end": 647.2, "text": " In fact, even better might be if we look at exec-nb, which is the library that we've written to help work with notebooks.", "tokens": [682, 1186, 11, 754, 1101, 1062, 312, 498, 321, 574, 412, 4454, 12, 77, 65, 11, 597, 307, 264, 6405, 300, 321, 600, 3720, 281, 854, 589, 365, 43782, 13], "temperature": 0.0, "avg_logprob": -0.1116866241266698, "compression_ratio": 1.5625, "no_speech_prob": 2.1103616745676845e-05}, {"id": 160, "seek": 64720, "start": 647.2, "end": 653.44, "text": " As you can really see, if we start at the very start here, like literally, it's prose.", "tokens": [1018, 291, 393, 534, 536, 11, 498, 321, 722, 412, 264, 588, 722, 510, 11, 411, 3736, 11, 309, 311, 12505, 13], "temperature": 0.0, "avg_logprob": -0.12274353563292953, "compression_ratio": 1.860377358490566, "no_speech_prob": 4.565280505630653e-06}, {"id": 161, "seek": 64720, "start": 653.44, "end": 656.8000000000001, "text": " Because this was my exploration when I started writing this is like, what's a notebook?", "tokens": [1436, 341, 390, 452, 16197, 562, 286, 1409, 3579, 341, 307, 411, 11, 437, 311, 257, 21060, 30], "temperature": 0.0, "avg_logprob": -0.12274353563292953, "compression_ratio": 1.860377358490566, "no_speech_prob": 4.565280505630653e-06}, {"id": 162, "seek": 64720, "start": 656.8000000000001, "end": 659.6800000000001, "text": " So I started opening them and reading them and printing out what's in them.", "tokens": [407, 286, 1409, 5193, 552, 293, 3760, 552, 293, 14699, 484, 437, 311, 294, 552, 13], "temperature": 0.0, "avg_logprob": -0.12274353563292953, "compression_ratio": 1.860377358490566, "no_speech_prob": 4.565280505630653e-06}, {"id": 163, "seek": 64720, "start": 659.6800000000001, "end": 670.1600000000001, "text": " So therefore, when you, the reader, start reading my code, you're following me on my journey of understanding what's going on at every step.", "tokens": [407, 4412, 11, 562, 291, 11, 264, 15149, 11, 722, 3760, 452, 3089, 11, 291, 434, 3480, 385, 322, 452, 4671, 295, 3701, 437, 311, 516, 322, 412, 633, 1823, 13], "temperature": 0.0, "avg_logprob": -0.12274353563292953, "compression_ratio": 1.860377358490566, "no_speech_prob": 4.565280505630653e-06}, {"id": 164, "seek": 64720, "start": 670.1600000000001, "end": 674.48, "text": " And then you can see when I've written a function, you can understand why I've written that function,", "tokens": [400, 550, 291, 393, 536, 562, 286, 600, 3720, 257, 2445, 11, 291, 393, 1223, 983, 286, 600, 3720, 300, 2445, 11], "temperature": 0.0, "avg_logprob": -0.12274353563292953, "compression_ratio": 1.860377358490566, "no_speech_prob": 4.565280505630653e-06}, {"id": 165, "seek": 67448, "start": 674.48, "end": 679.08, "text": " because I've just explored up to a point where we can see that's the function I now need.", "tokens": [570, 286, 600, 445, 24016, 493, 281, 257, 935, 689, 321, 393, 536, 300, 311, 264, 2445, 286, 586, 643, 13], "temperature": 0.0, "avg_logprob": -0.0837451520173446, "compression_ratio": 1.7054263565891472, "no_speech_prob": 9.514806151855737e-06}, {"id": 166, "seek": 67448, "start": 679.08, "end": 685.52, "text": " So, for example, nb to dict is basically doing things that I've just done step by step in prose.", "tokens": [407, 11, 337, 1365, 11, 297, 65, 281, 12569, 307, 1936, 884, 721, 300, 286, 600, 445, 1096, 1823, 538, 1823, 294, 12505, 13], "temperature": 0.0, "avg_logprob": -0.0837451520173446, "compression_ratio": 1.7054263565891472, "no_speech_prob": 9.514806151855737e-06}, {"id": 167, "seek": 67448, "start": 685.52, "end": 686.96, "text": " So, yeah, that's the main thing.", "tokens": [407, 11, 1338, 11, 300, 311, 264, 2135, 551, 13], "temperature": 0.0, "avg_logprob": -0.0837451520173446, "compression_ratio": 1.7054263565891472, "no_speech_prob": 9.514806151855737e-06}, {"id": 168, "seek": 67448, "start": 686.96, "end": 695.12, "text": " The ordering of the file names is also used by default to order the table of contents in your documentation.", "tokens": [440, 21739, 295, 264, 3991, 5288, 307, 611, 1143, 538, 7576, 281, 1668, 264, 3199, 295, 15768, 294, 428, 14333, 13], "temperature": 0.0, "avg_logprob": -0.0837451520173446, "compression_ratio": 1.7054263565891472, "no_speech_prob": 9.514806151855737e-06}, {"id": 169, "seek": 67448, "start": 695.12, "end": 697.84, "text": " That's another good reason to have it make some sense.", "tokens": [663, 311, 1071, 665, 1778, 281, 362, 309, 652, 512, 2020, 13], "temperature": 0.0, "avg_logprob": -0.0837451520173446, "compression_ratio": 1.7054263565891472, "no_speech_prob": 9.514806151855737e-06}, {"id": 170, "seek": 67448, "start": 697.84, "end": 701.8000000000001, "text": " So that's the only reason I'm using those numbers there.", "tokens": [407, 300, 311, 264, 787, 1778, 286, 478, 1228, 729, 3547, 456, 13], "temperature": 0.0, "avg_logprob": -0.0837451520173446, "compression_ratio": 1.7054263565891472, "no_speech_prob": 9.514806151855737e-06}, {"id": 171, "seek": 70180, "start": 701.8, "end": 706.24, "text": " So, yeah, we're also going to have a deck of cards.", "tokens": [407, 11, 1338, 11, 321, 434, 611, 516, 281, 362, 257, 9341, 295, 5632, 13], "temperature": 0.0, "avg_logprob": -0.10553809343758276, "compression_ratio": 1.7699115044247788, "no_speech_prob": 9.664909157436341e-06}, {"id": 172, "seek": 70180, "start": 706.24, "end": 709.8399999999999, "text": " So we'll call this one deck.", "tokens": [407, 321, 603, 818, 341, 472, 9341, 13], "temperature": 0.0, "avg_logprob": -0.10553809343758276, "compression_ratio": 1.7699115044247788, "no_speech_prob": 9.664909157436341e-06}, {"id": 173, "seek": 70180, "start": 709.8399999999999, "end": 711.7199999999999, "text": " So that's going to be a home page.", "tokens": [407, 300, 311, 516, 281, 312, 257, 1280, 3028, 13], "temperature": 0.0, "avg_logprob": -0.10553809343758276, "compression_ratio": 1.7699115044247788, "no_speech_prob": 9.664909157436341e-06}, {"id": 174, "seek": 70180, "start": 711.7199999999999, "end": 713.8399999999999, "text": " That's going to be a module for cards.", "tokens": [663, 311, 516, 281, 312, 257, 10088, 337, 5632, 13], "temperature": 0.0, "avg_logprob": -0.10553809343758276, "compression_ratio": 1.7699115044247788, "no_speech_prob": 9.664909157436341e-06}, {"id": 175, "seek": 70180, "start": 713.8399999999999, "end": 717.88, "text": " This will be a module for decks.", "tokens": [639, 486, 312, 257, 10088, 337, 32607, 13], "temperature": 0.0, "avg_logprob": -0.10553809343758276, "compression_ratio": 1.7699115044247788, "no_speech_prob": 9.664909157436341e-06}, {"id": 176, "seek": 70180, "start": 717.88, "end": 721.4, "text": " In real life, I would probably be putting these in the same module because they're not going to be very big.", "tokens": [682, 957, 993, 11, 286, 576, 1391, 312, 3372, 613, 294, 264, 912, 10088, 570, 436, 434, 406, 516, 281, 312, 588, 955, 13], "temperature": 0.0, "avg_logprob": -0.10553809343758276, "compression_ratio": 1.7699115044247788, "no_speech_prob": 9.664909157436341e-06}, {"id": 177, "seek": 70180, "start": 721.4, "end": 724.8, "text": " But this is just good for demo, I think.", "tokens": [583, 341, 307, 445, 665, 337, 10723, 11, 286, 519, 13], "temperature": 0.0, "avg_logprob": -0.10553809343758276, "compression_ratio": 1.7699115044247788, "no_speech_prob": 9.664909157436341e-06}, {"id": 178, "seek": 70180, "start": 724.8, "end": 730.1999999999999, "text": " So each notebook is going to produce one pie file, one module.", "tokens": [407, 1184, 21060, 307, 516, 281, 5258, 472, 1730, 3991, 11, 472, 10088, 13], "temperature": 0.0, "avg_logprob": -0.10553809343758276, "compression_ratio": 1.7699115044247788, "no_speech_prob": 9.664909157436341e-06}, {"id": 179, "seek": 73020, "start": 730.2, "end": 734.1600000000001, "text": " So what do you want that module to be called?", "tokens": [407, 437, 360, 291, 528, 300, 10088, 281, 312, 1219, 30], "temperature": 0.0, "avg_logprob": -0.09994628118432086, "compression_ratio": 1.5981308411214954, "no_speech_prob": 7.5272046160534956e-06}, {"id": 180, "seek": 73020, "start": 734.1600000000001, "end": 735.2800000000001, "text": " This is going to go up here.", "tokens": [639, 307, 516, 281, 352, 493, 510, 13], "temperature": 0.0, "avg_logprob": -0.09994628118432086, "compression_ratio": 1.5981308411214954, "no_speech_prob": 7.5272046160534956e-06}, {"id": 181, "seek": 73020, "start": 735.2800000000001, "end": 742.8000000000001, "text": " So you'll see there's some special comments here in the notebook.", "tokens": [407, 291, 603, 536, 456, 311, 512, 2121, 3053, 510, 294, 264, 21060, 13], "temperature": 0.0, "avg_logprob": -0.09994628118432086, "compression_ratio": 1.5981308411214954, "no_speech_prob": 7.5272046160534956e-06}, {"id": 182, "seek": 73020, "start": 742.8000000000001, "end": 745.0, "text": " They always start with hash pipe.", "tokens": [814, 1009, 722, 365, 22019, 11240, 13], "temperature": 0.0, "avg_logprob": -0.09994628118432086, "compression_ratio": 1.5981308411214954, "no_speech_prob": 7.5272046160534956e-06}, {"id": 183, "seek": 73020, "start": 745.0, "end": 753.72, "text": " And if you've ever used Quarto before, this will look very familiar because in Quarto, it's exactly the same.", "tokens": [400, 498, 291, 600, 1562, 1143, 2326, 15864, 949, 11, 341, 486, 574, 588, 4963, 570, 294, 2326, 15864, 11, 309, 311, 2293, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.09994628118432086, "compression_ratio": 1.5981308411214954, "no_speech_prob": 7.5272046160534956e-06}, {"id": 184, "seek": 73020, "start": 753.72, "end": 758.4000000000001, "text": " You can see special comments with hash pipe here as well.", "tokens": [509, 393, 536, 2121, 3053, 365, 22019, 11240, 510, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.09994628118432086, "compression_ratio": 1.5981308411214954, "no_speech_prob": 7.5272046160534956e-06}, {"id": 185, "seek": 75840, "start": 758.4, "end": 767.36, "text": " So these comments that are used in Quarto and NBdev are used to tell Quarto or NBdev something about this code.", "tokens": [407, 613, 3053, 300, 366, 1143, 294, 2326, 15864, 293, 426, 33, 40343, 366, 1143, 281, 980, 2326, 15864, 420, 426, 33, 40343, 746, 466, 341, 3089, 13], "temperature": 0.0, "avg_logprob": -0.08650659663336617, "compression_ratio": 1.7925311203319503, "no_speech_prob": 6.747051884303801e-06}, {"id": 186, "seek": 75840, "start": 767.36, "end": 773.4399999999999, "text": " So, for example, we'll be learning about ShowDoc in a moment and we have to import ShowDoc.", "tokens": [407, 11, 337, 1365, 11, 321, 603, 312, 2539, 466, 6895, 35, 905, 294, 257, 1623, 293, 321, 362, 281, 974, 6895, 35, 905, 13], "temperature": 0.0, "avg_logprob": -0.08650659663336617, "compression_ratio": 1.7925311203319503, "no_speech_prob": 6.747051884303801e-06}, {"id": 187, "seek": 75840, "start": 773.4399999999999, "end": 777.84, "text": " But the fact that we're doing that is something that the reader of your documentation doesn't care about.", "tokens": [583, 264, 1186, 300, 321, 434, 884, 300, 307, 746, 300, 264, 15149, 295, 428, 14333, 1177, 380, 1127, 466, 13], "temperature": 0.0, "avg_logprob": -0.08650659663336617, "compression_ratio": 1.7925311203319503, "no_speech_prob": 6.747051884303801e-06}, {"id": 188, "seek": 75840, "start": 777.84, "end": 782.4399999999999, "text": " So we hide this from the documentation that's built.", "tokens": [407, 321, 6479, 341, 490, 264, 14333, 300, 311, 3094, 13], "temperature": 0.0, "avg_logprob": -0.08650659663336617, "compression_ratio": 1.7925311203319503, "no_speech_prob": 6.747051884303801e-06}, {"id": 189, "seek": 75840, "start": 782.4399999999999, "end": 786.0, "text": " So this special one here called defaultX, this is the default export.", "tokens": [407, 341, 2121, 472, 510, 1219, 7576, 55, 11, 341, 307, 264, 7576, 10725, 13], "temperature": 0.0, "avg_logprob": -0.08650659663336617, "compression_ratio": 1.7925311203319503, "no_speech_prob": 6.747051884303801e-06}, {"id": 190, "seek": 78600, "start": 786.0, "end": 790.44, "text": " This is what we're going to export symbols here into what module?", "tokens": [639, 307, 437, 321, 434, 516, 281, 10725, 16944, 510, 666, 437, 10088, 30], "temperature": 0.0, "avg_logprob": -0.10670086741447449, "compression_ratio": 1.6577777777777778, "no_speech_prob": 9.972187399398535e-06}, {"id": 191, "seek": 78600, "start": 790.44, "end": 793.68, "text": " We're going to import it into a module called card.py.", "tokens": [492, 434, 516, 281, 974, 309, 666, 257, 10088, 1219, 2920, 13, 8200, 13], "temperature": 0.0, "avg_logprob": -0.10670086741447449, "compression_ratio": 1.6577777777777778, "no_speech_prob": 9.972187399398535e-06}, {"id": 192, "seek": 78600, "start": 793.68, "end": 796.32, "text": " This is marked down in our notebook.", "tokens": [639, 307, 12658, 760, 294, 527, 21060, 13], "temperature": 0.0, "avg_logprob": -0.10670086741447449, "compression_ratio": 1.6577777777777778, "no_speech_prob": 9.972187399398535e-06}, {"id": 193, "seek": 78600, "start": 796.32, "end": 805.76, "text": " And so this is where we can start typing things that we want to appear both for the reader of our source code and also it's going to end up in our documentation.", "tokens": [400, 370, 341, 307, 689, 321, 393, 722, 18444, 721, 300, 321, 528, 281, 4204, 1293, 337, 264, 15149, 295, 527, 4009, 3089, 293, 611, 309, 311, 516, 281, 917, 493, 294, 527, 14333, 13], "temperature": 0.0, "avg_logprob": -0.10670086741447449, "compression_ratio": 1.6577777777777778, "no_speech_prob": 9.972187399398535e-06}, {"id": 194, "seek": 78600, "start": 805.76, "end": 814.08, "text": " So we could write, for example, a basic playing card.", "tokens": [407, 321, 727, 2464, 11, 337, 1365, 11, 257, 3875, 2433, 2920, 13], "temperature": 0.0, "avg_logprob": -0.10670086741447449, "compression_ratio": 1.6577777777777778, "no_speech_prob": 9.972187399398535e-06}, {"id": 195, "seek": 81408, "start": 814.08, "end": 820.76, "text": " A simple API for creating and using playing cards.", "tokens": [316, 2199, 9362, 337, 4084, 293, 1228, 2433, 5632, 13], "temperature": 0.0, "avg_logprob": -0.13200376003603392, "compression_ratio": 1.6464646464646464, "no_speech_prob": 1.3842475709680002e-05}, {"id": 196, "seek": 81408, "start": 820.76, "end": 824.76, "text": " So this is the description.", "tokens": [407, 341, 307, 264, 3855, 13], "temperature": 0.0, "avg_logprob": -0.13200376003603392, "compression_ratio": 1.6464646464646464, "no_speech_prob": 1.3842475709680002e-05}, {"id": 197, "seek": 81408, "start": 824.76, "end": 834.1600000000001, "text": " It might be worth the point that this having this header one in this note block is a kind of an NBdev shortcut.", "tokens": [467, 1062, 312, 3163, 264, 935, 300, 341, 1419, 341, 23117, 472, 294, 341, 3637, 3461, 307, 257, 733, 295, 364, 426, 33, 40343, 24822, 13], "temperature": 0.0, "avg_logprob": -0.13200376003603392, "compression_ratio": 1.6464646464646464, "no_speech_prob": 1.3842475709680002e-05}, {"id": 198, "seek": 81408, "start": 834.1600000000001, "end": 843.6800000000001, "text": " And what happens is this becomes the title of your page and that that quote block becomes the description of your page when it renders.", "tokens": [400, 437, 2314, 307, 341, 3643, 264, 4876, 295, 428, 3028, 293, 300, 300, 6513, 3461, 3643, 264, 3855, 295, 428, 3028, 562, 309, 6125, 433, 13], "temperature": 0.0, "avg_logprob": -0.13200376003603392, "compression_ratio": 1.6464646464646464, "no_speech_prob": 1.3842475709680002e-05}, {"id": 199, "seek": 84368, "start": 843.68, "end": 849.88, "text": " Yeah, maybe a good way to understand how this works is to look at a library.", "tokens": [865, 11, 1310, 257, 665, 636, 281, 1223, 577, 341, 1985, 307, 281, 574, 412, 257, 6405, 13], "temperature": 0.0, "avg_logprob": -0.15757430497036184, "compression_ratio": 1.6127450980392157, "no_speech_prob": 3.2375103273807326e-06}, {"id": 200, "seek": 84368, "start": 849.88, "end": 855.28, "text": " So let's take execNV again and open up one of its notebooks.", "tokens": [407, 718, 311, 747, 4454, 45, 53, 797, 293, 1269, 493, 472, 295, 1080, 43782, 13], "temperature": 0.0, "avg_logprob": -0.15757430497036184, "compression_ratio": 1.6127450980392157, "no_speech_prob": 3.2375103273807326e-06}, {"id": 201, "seek": 84368, "start": 855.28, "end": 863.0, "text": " So let's take 01NBIO and at the same time also open up its rendered documentation.", "tokens": [407, 718, 311, 747, 23185, 45, 33, 15167, 293, 412, 264, 912, 565, 611, 1269, 493, 1080, 28748, 14333, 13], "temperature": 0.0, "avg_logprob": -0.15757430497036184, "compression_ratio": 1.6127450980392157, "no_speech_prob": 3.2375103273807326e-06}, {"id": 202, "seek": 84368, "start": 863.0, "end": 870.8399999999999, "text": " And so you'll see here we've got NBIO and Shell and here in the documentation, here they are NBIO and Shell.", "tokens": [400, 370, 291, 603, 536, 510, 321, 600, 658, 426, 33, 15167, 293, 22863, 293, 510, 294, 264, 14333, 11, 510, 436, 366, 426, 33, 15167, 293, 22863, 13], "temperature": 0.0, "avg_logprob": -0.15757430497036184, "compression_ratio": 1.6127450980392157, "no_speech_prob": 3.2375103273807326e-06}, {"id": 203, "seek": 87084, "start": 870.84, "end": 875.52, "text": " And if we look at the notebook, you can see here is the header one.", "tokens": [400, 498, 321, 574, 412, 264, 21060, 11, 291, 393, 536, 510, 307, 264, 23117, 472, 13], "temperature": 0.0, "avg_logprob": -0.06851527565403988, "compression_ratio": 1.6432432432432433, "no_speech_prob": 7.295799605344655e-06}, {"id": 204, "seek": 87084, "start": 875.52, "end": 883.8000000000001, "text": " So that's become the title and the contents and the description here has come from the description.", "tokens": [407, 300, 311, 1813, 264, 4876, 293, 264, 15768, 293, 264, 3855, 510, 575, 808, 490, 264, 3855, 13], "temperature": 0.0, "avg_logprob": -0.06851527565403988, "compression_ratio": 1.6432432432432433, "no_speech_prob": 7.295799605344655e-06}, {"id": 205, "seek": 87084, "start": 883.8000000000001, "end": 890.12, "text": " And that's used in things like the metadata of the page as well.", "tokens": [400, 300, 311, 1143, 294, 721, 411, 264, 26603, 295, 264, 3028, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.06851527565403988, "compression_ratio": 1.6432432432432433, "no_speech_prob": 7.295799605344655e-06}, {"id": 206, "seek": 87084, "start": 890.12, "end": 894.84, "text": " You can see the title, for example, gets built from that automatically.", "tokens": [509, 393, 536, 264, 4876, 11, 337, 1365, 11, 2170, 3094, 490, 300, 6772, 13], "temperature": 0.0, "avg_logprob": -0.06851527565403988, "compression_ratio": 1.6432432432432433, "no_speech_prob": 7.295799605344655e-06}, {"id": 207, "seek": 89484, "start": 894.84, "end": 904.4, "text": " So that's a good way to kind of understand how to use NBdev and how your choices make things appear is by looking at the sample.", "tokens": [407, 300, 311, 257, 665, 636, 281, 733, 295, 1223, 577, 281, 764, 426, 33, 40343, 293, 577, 428, 7994, 652, 721, 4204, 307, 538, 1237, 412, 264, 6889, 13], "temperature": 0.0, "avg_logprob": -0.08820474600490136, "compression_ratio": 1.5076923076923077, "no_speech_prob": 3.905210178345442e-06}, {"id": 208, "seek": 89484, "start": 904.4, "end": 911.5600000000001, "text": " And then you'll see each of the second level headings ends up as in the table of contents here.", "tokens": [400, 550, 291, 603, 536, 1184, 295, 264, 1150, 1496, 1378, 1109, 5314, 493, 382, 294, 264, 3199, 295, 15768, 510, 13], "temperature": 0.0, "avg_logprob": -0.08820474600490136, "compression_ratio": 1.5076923076923077, "no_speech_prob": 3.905210178345442e-06}, {"id": 209, "seek": 89484, "start": 911.5600000000001, "end": 920.76, "text": " So I kind of like to think about, well, how do I want this to behave?", "tokens": [407, 286, 733, 295, 411, 281, 519, 466, 11, 731, 11, 577, 360, 286, 528, 341, 281, 15158, 30], "temperature": 0.0, "avg_logprob": -0.08820474600490136, "compression_ratio": 1.5076923076923077, "no_speech_prob": 3.905210178345442e-06}, {"id": 210, "seek": 92076, "start": 920.76, "end": 925.16, "text": " And so we're basically going to be creating a playing card.", "tokens": [400, 370, 321, 434, 1936, 516, 281, 312, 4084, 257, 2433, 2920, 13], "temperature": 0.0, "avg_logprob": -0.1192242634760869, "compression_ratio": 1.5248618784530388, "no_speech_prob": 1.2605795745912474e-05}, {"id": 211, "seek": 92076, "start": 925.16, "end": 935.6, "text": " So I'm going to want to have some kind of like something which I could do, like create a card, passing it like a numeric suit and a rank.", "tokens": [407, 286, 478, 516, 281, 528, 281, 362, 512, 733, 295, 411, 746, 597, 286, 727, 360, 11, 411, 1884, 257, 2920, 11, 8437, 309, 411, 257, 7866, 299, 5722, 293, 257, 6181, 13], "temperature": 0.0, "avg_logprob": -0.1192242634760869, "compression_ratio": 1.5248618784530388, "no_speech_prob": 1.2605795745912474e-05}, {"id": 212, "seek": 92076, "start": 935.6, "end": 943.92, "text": " So we could create a list of suits, for example.", "tokens": [407, 321, 727, 1884, 257, 1329, 295, 15278, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.1192242634760869, "compression_ratio": 1.5248618784530388, "no_speech_prob": 1.2605795745912474e-05}, {"id": 213, "seek": 92076, "start": 943.92, "end": 947.28, "text": " Let's pop that up here maybe.", "tokens": [961, 311, 1665, 300, 493, 510, 1310, 13], "temperature": 0.0, "avg_logprob": -0.1192242634760869, "compression_ratio": 1.5248618784530388, "no_speech_prob": 1.2605795745912474e-05}, {"id": 214, "seek": 94728, "start": 947.28, "end": 953.92, "text": " So we've now got a bunch of suits, so you could like say suits one, for example.", "tokens": [407, 321, 600, 586, 658, 257, 3840, 295, 15278, 11, 370, 291, 727, 411, 584, 15278, 472, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.20903346652076357, "compression_ratio": 1.4714285714285715, "no_speech_prob": 3.66875406143663e-06}, {"id": 215, "seek": 94728, "start": 953.92, "end": 956.28, "text": " Why is that not printing out anything?", "tokens": [1545, 307, 300, 406, 14699, 484, 1340, 30], "temperature": 0.0, "avg_logprob": -0.20903346652076357, "compression_ratio": 1.4714285714285715, "no_speech_prob": 3.66875406143663e-06}, {"id": 216, "seek": 94728, "start": 956.28, "end": 962.16, "text": " Is it something about the font perhaps?", "tokens": [1119, 309, 746, 466, 264, 10703, 4317, 30], "temperature": 0.0, "avg_logprob": -0.20903346652076357, "compression_ratio": 1.4714285714285715, "no_speech_prob": 3.66875406143663e-06}, {"id": 217, "seek": 94728, "start": 962.16, "end": 967.0, "text": " Yeah, something about Python's Unicode handling, maybe?", "tokens": [865, 11, 746, 466, 15329, 311, 1156, 299, 1429, 13175, 11, 1310, 30], "temperature": 0.0, "avg_logprob": -0.20903346652076357, "compression_ratio": 1.4714285714285715, "no_speech_prob": 3.66875406143663e-06}, {"id": 218, "seek": 94728, "start": 967.0, "end": 970.36, "text": " My computer, it actually visually looks a little different than this.", "tokens": [1222, 3820, 11, 309, 767, 19622, 1542, 257, 707, 819, 813, 341, 13], "temperature": 0.0, "avg_logprob": -0.20903346652076357, "compression_ratio": 1.4714285714285715, "no_speech_prob": 3.66875406143663e-06}, {"id": 219, "seek": 94728, "start": 970.36, "end": 972.0799999999999, "text": " I don't get the colors.", "tokens": [286, 500, 380, 483, 264, 4577, 13], "temperature": 0.0, "avg_logprob": -0.20903346652076357, "compression_ratio": 1.4714285714285715, "no_speech_prob": 3.66875406143663e-06}, {"id": 220, "seek": 97208, "start": 972.08, "end": 980.12, "text": " Like I don't ever see these colors or anything on my computer on the same notebook.", "tokens": [1743, 286, 500, 380, 1562, 536, 613, 4577, 420, 1340, 322, 452, 3820, 322, 264, 912, 21060, 13], "temperature": 0.0, "avg_logprob": -0.13330969679246255, "compression_ratio": 1.5407407407407407, "no_speech_prob": 4.35670199294691e-06}, {"id": 221, "seek": 97208, "start": 980.12, "end": 982.6, "text": " So this is where NBdev is really helpful, right?", "tokens": [407, 341, 307, 689, 426, 33, 40343, 307, 534, 4961, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.13330969679246255, "compression_ratio": 1.5407407407407407, "no_speech_prob": 4.35670199294691e-06}, {"id": 222, "seek": 97208, "start": 982.6, "end": 989.96, "text": " Because I'm not going to end up with some weird bug deep in my code because I'm exploring as I go.", "tokens": [1436, 286, 478, 406, 516, 281, 917, 493, 365, 512, 3657, 7426, 2452, 294, 452, 3089, 570, 286, 478, 12736, 382, 286, 352, 13], "temperature": 0.0, "avg_logprob": -0.13330969679246255, "compression_ratio": 1.5407407407407407, "no_speech_prob": 4.35670199294691e-06}, {"id": 223, "seek": 97208, "start": 989.96, "end": 992.2800000000001, "text": " I thought you could like split things.", "tokens": [286, 1194, 291, 727, 411, 7472, 721, 13], "temperature": 0.0, "avg_logprob": -0.13330969679246255, "compression_ratio": 1.5407407407407407, "no_speech_prob": 4.35670199294691e-06}, {"id": 224, "seek": 97208, "start": 992.2800000000001, "end": 1000.44, "text": " OK, so I think what we'll do instead, since we discovered that doesn't work, which I think just shows my ignorance about how Python uses Unicode.", "tokens": [2264, 11, 370, 286, 519, 437, 321, 603, 360, 2602, 11, 1670, 321, 6941, 300, 1177, 380, 589, 11, 597, 286, 519, 445, 3110, 452, 25390, 466, 577, 15329, 4960, 1156, 299, 1429, 13], "temperature": 0.0, "avg_logprob": -0.13330969679246255, "compression_ratio": 1.5407407407407407, "no_speech_prob": 4.35670199294691e-06}, {"id": 225, "seek": 100044, "start": 1000.44, "end": 1006.2800000000001, "text": " Let's put them, create a list of strings instead.", "tokens": [961, 311, 829, 552, 11, 1884, 257, 1329, 295, 13985, 2602, 13], "temperature": 0.0, "avg_logprob": -0.18497480045665393, "compression_ratio": 1.544186046511628, "no_speech_prob": 1.4508193999063224e-05}, {"id": 226, "seek": 100044, "start": 1006.2800000000001, "end": 1009.5600000000001, "text": " OK, that's more like what I was expecting.", "tokens": [2264, 11, 300, 311, 544, 411, 437, 286, 390, 9650, 13], "temperature": 0.0, "avg_logprob": -0.18497480045665393, "compression_ratio": 1.544186046511628, "no_speech_prob": 1.4508193999063224e-05}, {"id": 227, "seek": 100044, "start": 1009.5600000000001, "end": 1017.72, "text": " My guess is maybe I think like some emojis are actually like consists of multiple kind of code points or something.", "tokens": [1222, 2041, 307, 1310, 286, 519, 411, 512, 19611, 40371, 366, 767, 411, 14689, 295, 3866, 733, 295, 3089, 2793, 420, 746, 13], "temperature": 0.0, "avg_logprob": -0.18497480045665393, "compression_ratio": 1.544186046511628, "no_speech_prob": 1.4508193999063224e-05}, {"id": 228, "seek": 100044, "start": 1017.72, "end": 1022.1600000000001, "text": " I don't quite remember the terminology and it kind of ends up changing the color.", "tokens": [286, 500, 380, 1596, 1604, 264, 27575, 293, 309, 733, 295, 5314, 493, 4473, 264, 2017, 13], "temperature": 0.0, "avg_logprob": -0.18497480045665393, "compression_ratio": 1.544186046511628, "no_speech_prob": 1.4508193999063224e-05}, {"id": 229, "seek": 100044, "start": 1022.1600000000001, "end": 1025.8, "text": " You know, like a flag or something.", "tokens": [509, 458, 11, 411, 257, 7166, 420, 746, 13], "temperature": 0.0, "avg_logprob": -0.18497480045665393, "compression_ratio": 1.544186046511628, "no_speech_prob": 1.4508193999063224e-05}, {"id": 230, "seek": 100044, "start": 1025.8, "end": 1028.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.18497480045665393, "compression_ratio": 1.544186046511628, "no_speech_prob": 1.4508193999063224e-05}, {"id": 231, "seek": 102800, "start": 1028.0, "end": 1033.6, "text": " OK, so that's that's useful.", "tokens": [2264, 11, 370, 300, 311, 300, 311, 4420, 13], "temperature": 0.0, "avg_logprob": -0.13944603930944685, "compression_ratio": 1.5340314136125655, "no_speech_prob": 6.747375209670281e-06}, {"id": 232, "seek": 102800, "start": 1033.6, "end": 1038.2, "text": " So then we're going to have all the different card ranks.", "tokens": [407, 550, 321, 434, 516, 281, 362, 439, 264, 819, 2920, 21406, 13], "temperature": 0.0, "avg_logprob": -0.13944603930944685, "compression_ratio": 1.5340314136125655, "no_speech_prob": 6.747375209670281e-06}, {"id": 233, "seek": 102800, "start": 1038.2, "end": 1043.4, "text": " And so there isn't really a rank zero, so just put a placeholder there.", "tokens": [400, 370, 456, 1943, 380, 534, 257, 6181, 4018, 11, 370, 445, 829, 257, 1081, 20480, 456, 13], "temperature": 0.0, "avg_logprob": -0.13944603930944685, "compression_ratio": 1.5340314136125655, "no_speech_prob": 6.747375209670281e-06}, {"id": 234, "seek": 102800, "start": 1043.4, "end": 1050.12, "text": " And so this this code is kind of loosely based on Alan Downey's book.", "tokens": [400, 370, 341, 341, 3089, 307, 733, 295, 37966, 2361, 322, 16442, 9506, 2030, 311, 1446, 13], "temperature": 0.0, "avg_logprob": -0.13944603930944685, "compression_ratio": 1.5340314136125655, "no_speech_prob": 6.747375209670281e-06}, {"id": 235, "seek": 102800, "start": 1050.12, "end": 1051.52, "text": " So cool.", "tokens": [407, 1627, 13], "temperature": 0.0, "avg_logprob": -0.13944603930944685, "compression_ratio": 1.5340314136125655, "no_speech_prob": 6.747375209670281e-06}, {"id": 236, "seek": 102800, "start": 1051.52, "end": 1057.24, "text": " So if we want to create a class that represents a card,", "tokens": [407, 498, 321, 528, 281, 1884, 257, 1508, 300, 8855, 257, 2920, 11], "temperature": 0.0, "avg_logprob": -0.13944603930944685, "compression_ratio": 1.5340314136125655, "no_speech_prob": 6.747375209670281e-06}, {"id": 237, "seek": 105724, "start": 1057.24, "end": 1061.8, "text": " we'll say we want a class and it represents a card.", "tokens": [321, 603, 584, 321, 528, 257, 1508, 293, 309, 8855, 257, 2920, 13], "temperature": 0.0, "avg_logprob": -0.14774287024209665, "compression_ratio": 1.6269430051813472, "no_speech_prob": 8.397406418225728e-06}, {"id": 238, "seek": 105724, "start": 1061.8, "end": 1069.36, "text": " And so when we create one of these, Python calls the DUNDA in it when you create an object of a class.", "tokens": [400, 370, 562, 321, 1884, 472, 295, 613, 11, 15329, 5498, 264, 413, 3979, 7509, 294, 309, 562, 291, 1884, 364, 2657, 295, 257, 1508, 13], "temperature": 0.0, "avg_logprob": -0.14774287024209665, "compression_ratio": 1.6269430051813472, "no_speech_prob": 8.397406418225728e-06}, {"id": 239, "seek": 105724, "start": 1069.36, "end": 1073.56, "text": " And so we're going to be passing in some suit and some rank.", "tokens": [400, 370, 321, 434, 516, 281, 312, 8437, 294, 512, 5722, 293, 512, 6181, 13], "temperature": 0.0, "avg_logprob": -0.14774287024209665, "compression_ratio": 1.6269430051813472, "no_speech_prob": 8.397406418225728e-06}, {"id": 240, "seek": 105724, "start": 1073.56, "end": 1082.28, "text": " And so then we'll just be setting self dot dot suit just to store it away basically and self rank.", "tokens": [400, 370, 550, 321, 603, 445, 312, 3287, 2698, 5893, 5893, 5722, 445, 281, 3531, 309, 1314, 1936, 293, 2698, 6181, 13], "temperature": 0.0, "avg_logprob": -0.14774287024209665, "compression_ratio": 1.6269430051813472, "no_speech_prob": 8.397406418225728e-06}, {"id": 241, "seek": 108228, "start": 1082.28, "end": 1087.52, "text": " We'll set them equal to the suit and the rank that I should mention, like, as you well know,", "tokens": [492, 603, 992, 552, 2681, 281, 264, 5722, 293, 264, 6181, 300, 286, 820, 2152, 11, 411, 11, 382, 291, 731, 458, 11], "temperature": 0.0, "avg_logprob": -0.16819184955797697, "compression_ratio": 1.6860986547085202, "no_speech_prob": 8.446106676274212e-07}, {"id": 242, "seek": 108228, "start": 1087.52, "end": 1095.72, "text": " Hamel, the way I the way I write code is different to like the way most people write Python code.", "tokens": [8234, 338, 11, 264, 636, 286, 264, 636, 286, 2464, 3089, 307, 819, 281, 411, 264, 636, 881, 561, 2464, 15329, 3089, 13], "temperature": 0.0, "avg_logprob": -0.16819184955797697, "compression_ratio": 1.6860986547085202, "no_speech_prob": 8.446106676274212e-07}, {"id": 243, "seek": 108228, "start": 1095.72, "end": 1106.04, "text": " And and in particular, there's a lot of like specific recommendations in how to write Python code in a document called Pepe,", "tokens": [400, 293, 294, 1729, 11, 456, 311, 257, 688, 295, 411, 2685, 10434, 294, 577, 281, 2464, 15329, 3089, 294, 257, 4166, 1219, 2396, 494, 11], "temperature": 0.0, "avg_logprob": -0.16819184955797697, "compression_ratio": 1.6860986547085202, "no_speech_prob": 8.446106676274212e-07}, {"id": 244, "seek": 108228, "start": 1106.04, "end": 1110.8799999999999, "text": " which is kind of like a default style guide for Python code.", "tokens": [597, 307, 733, 295, 411, 257, 7576, 3758, 5934, 337, 15329, 3089, 13], "temperature": 0.0, "avg_logprob": -0.16819184955797697, "compression_ratio": 1.6860986547085202, "no_speech_prob": 8.446106676274212e-07}, {"id": 245, "seek": 111088, "start": 1110.88, "end": 1118.3200000000002, "text": " Yeah, folks who are working in an organization that uses Pepe, they don't take my particular approach to coding as a role model.", "tokens": [865, 11, 4024, 567, 366, 1364, 294, 364, 4475, 300, 4960, 2396, 494, 11, 436, 500, 380, 747, 452, 1729, 3109, 281, 17720, 382, 257, 3090, 2316, 13], "temperature": 0.0, "avg_logprob": -0.07800495889451768, "compression_ratio": 1.6515837104072397, "no_speech_prob": 8.529593287676107e-06}, {"id": 246, "seek": 111088, "start": 1118.3200000000002, "end": 1128.16, "text": " I will say, though, that I've been coding for 40 years now and coding nearly every day for 30 years.", "tokens": [286, 486, 584, 11, 1673, 11, 300, 286, 600, 668, 17720, 337, 3356, 924, 586, 293, 17720, 6217, 633, 786, 337, 2217, 924, 13], "temperature": 0.0, "avg_logprob": -0.07800495889451768, "compression_ratio": 1.6515837104072397, "no_speech_prob": 8.529593287676107e-06}, {"id": 247, "seek": 111088, "start": 1128.16, "end": 1131.6000000000001, "text": " And my particular approach to coding is not random.", "tokens": [400, 452, 1729, 3109, 281, 17720, 307, 406, 4974, 13], "temperature": 0.0, "avg_logprob": -0.07800495889451768, "compression_ratio": 1.6515837104072397, "no_speech_prob": 8.529593287676107e-06}, {"id": 248, "seek": 111088, "start": 1131.6000000000001, "end": 1136.8000000000002, "text": " There's a particular reason for it, which I've documented on the fast coding style.", "tokens": [821, 311, 257, 1729, 1778, 337, 309, 11, 597, 286, 600, 23007, 322, 264, 2370, 17720, 3758, 13], "temperature": 0.0, "avg_logprob": -0.07800495889451768, "compression_ratio": 1.6515837104072397, "no_speech_prob": 8.529593287676107e-06}, {"id": 249, "seek": 113680, "start": 1136.8, "end": 1146.12, "text": " And it based on kind of many decades of work from people much smarter than me, particularly Ken Iverson, the Turing Award winner.", "tokens": [400, 309, 2361, 322, 733, 295, 867, 7878, 295, 589, 490, 561, 709, 20294, 813, 385, 11, 4098, 8273, 286, 840, 266, 11, 264, 314, 1345, 13894, 8507, 13], "temperature": 0.0, "avg_logprob": -0.11570020251803928, "compression_ratio": 1.5361702127659576, "no_speech_prob": 4.356682438810822e-06}, {"id": 250, "seek": 113680, "start": 1146.12, "end": 1151.68, "text": " I just want to say, yeah, I like my way of coding and that's what I'm going to show here.", "tokens": [286, 445, 528, 281, 584, 11, 1338, 11, 286, 411, 452, 636, 295, 17720, 293, 300, 311, 437, 286, 478, 516, 281, 855, 510, 13], "temperature": 0.0, "avg_logprob": -0.11570020251803928, "compression_ratio": 1.5361702127659576, "no_speech_prob": 4.356682438810822e-06}, {"id": 251, "seek": 113680, "start": 1151.68, "end": 1161.48, "text": " But if you're working in an organization that uses Python in a more traditional way, you should go with your own organization's coding style.", "tokens": [583, 498, 291, 434, 1364, 294, 364, 4475, 300, 4960, 15329, 294, 257, 544, 5164, 636, 11, 291, 820, 352, 365, 428, 1065, 4475, 311, 17720, 3758, 13], "temperature": 0.0, "avg_logprob": -0.11570020251803928, "compression_ratio": 1.5361702127659576, "no_speech_prob": 4.356682438810822e-06}, {"id": 252, "seek": 116148, "start": 1161.48, "end": 1168.4, "text": " The style that I've developed, as I said, it's partly based on years of research from other languages, decades of research.", "tokens": [440, 3758, 300, 286, 600, 4743, 11, 382, 286, 848, 11, 309, 311, 17031, 2361, 322, 924, 295, 2132, 490, 661, 8650, 11, 7878, 295, 2132, 13], "temperature": 0.0, "avg_logprob": -0.09154977553930038, "compression_ratio": 1.572093023255814, "no_speech_prob": 1.1656620699795894e-05}, {"id": 253, "seek": 116148, "start": 1168.4, "end": 1173.76, "text": " It's also partly based on experience with exploratory and literate programming in particular.", "tokens": [467, 311, 611, 17031, 2361, 322, 1752, 365, 24765, 4745, 293, 2733, 473, 9410, 294, 1729, 13], "temperature": 0.0, "avg_logprob": -0.09154977553930038, "compression_ratio": 1.572093023255814, "no_speech_prob": 1.1656620699795894e-05}, {"id": 254, "seek": 116148, "start": 1173.76, "end": 1183.4, "text": " So it more closely follows the kind of style you would see from Lisp or APL or Julia programmers or F sharp programmers,", "tokens": [407, 309, 544, 8185, 10002, 264, 733, 295, 3758, 291, 576, 536, 490, 441, 7631, 420, 5372, 43, 420, 18551, 41504, 420, 479, 8199, 41504, 11], "temperature": 0.0, "avg_logprob": -0.09154977553930038, "compression_ratio": 1.572093023255814, "no_speech_prob": 1.1656620699795894e-05}, {"id": 255, "seek": 118340, "start": 1183.4, "end": 1193.52, "text": " like programming languages that were working in the REPL, working in an interactive and exploratory way is more a part of the culture and toolkit of that.", "tokens": [411, 9410, 8650, 300, 645, 1364, 294, 264, 31511, 43, 11, 1364, 294, 364, 15141, 293, 24765, 4745, 636, 307, 544, 257, 644, 295, 264, 3713, 293, 40167, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.18382422924041747, "compression_ratio": 1.4751131221719458, "no_speech_prob": 7.181780347309541e-06}, {"id": 256, "seek": 118340, "start": 1193.52, "end": 1196.96, "text": " Yeah, of that environment. Can I say something about this place?", "tokens": [865, 11, 295, 300, 2823, 13, 1664, 286, 584, 746, 466, 341, 1081, 30], "temperature": 0.0, "avg_logprob": -0.18382422924041747, "compression_ratio": 1.4751131221719458, "no_speech_prob": 7.181780347309541e-06}, {"id": 257, "seek": 118340, "start": 1196.96, "end": 1205.1200000000001, "text": " So, you know, I think it's important if you are interested in NBDEF to approach it with the right mindset.", "tokens": [407, 11, 291, 458, 11, 286, 519, 309, 311, 1021, 498, 291, 366, 3102, 294, 426, 33, 22296, 37, 281, 3109, 309, 365, 264, 558, 12543, 13], "temperature": 0.0, "avg_logprob": -0.18382422924041747, "compression_ratio": 1.4751131221719458, "no_speech_prob": 7.181780347309541e-06}, {"id": 258, "seek": 120512, "start": 1205.12, "end": 1217.1599999999999, "text": " And I think one mindset that's been helpful for a lot of people is to look at the things that we're showing you today as a dialect of Python,", "tokens": [400, 286, 519, 472, 12543, 300, 311, 668, 4961, 337, 257, 688, 295, 561, 307, 281, 574, 412, 264, 721, 300, 321, 434, 4099, 291, 965, 382, 257, 24652, 295, 15329, 11], "temperature": 0.0, "avg_logprob": -0.06281419027419317, "compression_ratio": 1.5887445887445888, "no_speech_prob": 7.524319244112121e-06}, {"id": 259, "seek": 120512, "start": 1217.1599999999999, "end": 1224.52, "text": " because not only are we going to show you this way of developing code in a notebook,", "tokens": [570, 406, 787, 366, 321, 516, 281, 855, 291, 341, 636, 295, 6416, 3089, 294, 257, 21060, 11], "temperature": 0.0, "avg_logprob": -0.06281419027419317, "compression_ratio": 1.5887445887445888, "no_speech_prob": 7.524319244112121e-06}, {"id": 260, "seek": 120512, "start": 1224.52, "end": 1234.04, "text": " but there's also there are some extensions to the Python programming language that Jeremy has made that kind of enhance the REPL experience.", "tokens": [457, 456, 311, 611, 456, 366, 512, 25129, 281, 264, 15329, 9410, 2856, 300, 17809, 575, 1027, 300, 733, 295, 11985, 264, 31511, 43, 1752, 13], "temperature": 0.0, "avg_logprob": -0.06281419027419317, "compression_ratio": 1.5887445887445888, "no_speech_prob": 7.524319244112121e-06}, {"id": 261, "seek": 123404, "start": 1234.04, "end": 1240.6, "text": " And so if you think of it as a dialect, then you can kind of open up your mind to, you know,", "tokens": [400, 370, 498, 291, 519, 295, 309, 382, 257, 24652, 11, 550, 291, 393, 733, 295, 1269, 493, 428, 1575, 281, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.11053373983928136, "compression_ratio": 1.6867924528301887, "no_speech_prob": 9.220953870681114e-06}, {"id": 262, "seek": 123404, "start": 1240.6, "end": 1245.32, "text": " different ways of working and also different conventions.", "tokens": [819, 2098, 295, 1364, 293, 611, 819, 33520, 13], "temperature": 0.0, "avg_logprob": -0.11053373983928136, "compression_ratio": 1.6867924528301887, "no_speech_prob": 9.220953870681114e-06}, {"id": 263, "seek": 123404, "start": 1245.32, "end": 1247.36, "text": " So I think that's really important.", "tokens": [407, 286, 519, 300, 311, 534, 1021, 13], "temperature": 0.0, "avg_logprob": -0.11053373983928136, "compression_ratio": 1.6867924528301887, "no_speech_prob": 9.220953870681114e-06}, {"id": 264, "seek": 123404, "start": 1247.36, "end": 1257.32, "text": " Yeah, makes sense. So while you're talking, I was just starting to fill in the kind of like information I would want to be passing on to a reader of my code or documentation.", "tokens": [865, 11, 1669, 2020, 13, 407, 1339, 291, 434, 1417, 11, 286, 390, 445, 2891, 281, 2836, 294, 264, 733, 295, 411, 1589, 286, 576, 528, 281, 312, 8437, 322, 281, 257, 15149, 295, 452, 3089, 420, 14333, 13], "temperature": 0.0, "avg_logprob": -0.11053373983928136, "compression_ratio": 1.6867924528301887, "no_speech_prob": 9.220953870681114e-06}, {"id": 265, "seek": 123404, "start": 1257.32, "end": 1261.36, "text": " That's great. I think this is like really is this is super powerful for many reasons.", "tokens": [663, 311, 869, 13, 286, 519, 341, 307, 411, 534, 307, 341, 307, 1687, 4005, 337, 867, 4112, 13], "temperature": 0.0, "avg_logprob": -0.11053373983928136, "compression_ratio": 1.6867924528301887, "no_speech_prob": 9.220953870681114e-06}, {"id": 266, "seek": 126136, "start": 1261.36, "end": 1274.04, "text": " Like often I find that when I'm writing the documentation like this, you know, I discover bugs in my code or I discover clunky things in my code like, hey, this is very hard to explain.", "tokens": [1743, 2049, 286, 915, 300, 562, 286, 478, 3579, 264, 14333, 411, 341, 11, 291, 458, 11, 286, 4411, 15120, 294, 452, 3089, 420, 286, 4411, 596, 25837, 721, 294, 452, 3089, 411, 11, 4177, 11, 341, 307, 588, 1152, 281, 2903, 13], "temperature": 0.0, "avg_logprob": -0.15700703997944676, "compression_ratio": 1.5588235294117647, "no_speech_prob": 1.1657170944090467e-05}, {"id": 267, "seek": 126136, "start": 1274.04, "end": 1284.24, "text": " And I end up refactoring it because of that. Yeah, definitely.", "tokens": [400, 286, 917, 493, 1895, 578, 3662, 309, 570, 295, 300, 13, 865, 11, 2138, 13], "temperature": 0.0, "avg_logprob": -0.15700703997944676, "compression_ratio": 1.5588235294117647, "no_speech_prob": 1.1657170944090467e-05}, {"id": 268, "seek": 126136, "start": 1284.24, "end": 1290.24, "text": " So I try to explain in our docs as we go, why things are as they are.", "tokens": [407, 286, 853, 281, 2903, 294, 527, 45623, 382, 321, 352, 11, 983, 721, 366, 382, 436, 366, 13], "temperature": 0.0, "avg_logprob": -0.15700703997944676, "compression_ratio": 1.5588235294117647, "no_speech_prob": 1.1657170944090467e-05}, {"id": 269, "seek": 129024, "start": 1290.24, "end": 1296.28, "text": " OK, so there's a right. So now we can create a card.", "tokens": [2264, 11, 370, 456, 311, 257, 558, 13, 407, 586, 321, 393, 1884, 257, 2920, 13], "temperature": 0.0, "avg_logprob": -0.19481419294308394, "compression_ratio": 1.4943181818181819, "no_speech_prob": 1.0449442925164476e-05}, {"id": 270, "seek": 129024, "start": 1296.28, "end": 1301.08, "text": " So that's not very helpful.", "tokens": [407, 300, 311, 406, 588, 4961, 13], "temperature": 0.0, "avg_logprob": -0.19481419294308394, "compression_ratio": 1.4943181818181819, "no_speech_prob": 1.0449442925164476e-05}, {"id": 271, "seek": 129024, "start": 1301.08, "end": 1305.76, "text": " And so that's that's the default representation.", "tokens": [400, 370, 300, 311, 300, 311, 264, 7576, 10290, 13], "temperature": 0.0, "avg_logprob": -0.19481419294308394, "compression_ratio": 1.4943181818181819, "no_speech_prob": 1.0449442925164476e-05}, {"id": 272, "seek": 129024, "start": 1305.76, "end": 1317.4, "text": " So we can override that using Dundas, which is a Dundas, which is the Python way of saying this is how I want to stringify my object.", "tokens": [407, 321, 393, 42321, 300, 1228, 413, 997, 296, 11, 597, 307, 257, 413, 997, 296, 11, 597, 307, 264, 15329, 636, 295, 1566, 341, 307, 577, 286, 528, 281, 6798, 2505, 452, 2657, 13], "temperature": 0.0, "avg_logprob": -0.19481419294308394, "compression_ratio": 1.4943181818181819, "no_speech_prob": 1.0449442925164476e-05}, {"id": 273, "seek": 131740, "start": 1317.4, "end": 1325.72, "text": " And I think a simple way to do this would be just to use an F string and say this is like a first of all, the rank.", "tokens": [400, 286, 519, 257, 2199, 636, 281, 360, 341, 576, 312, 445, 281, 764, 364, 479, 6798, 293, 584, 341, 307, 411, 257, 700, 295, 439, 11, 264, 6181, 13], "temperature": 0.0, "avg_logprob": -0.0866757763756646, "compression_ratio": 1.640625, "no_speech_prob": 3.500766752040363e-06}, {"id": 274, "seek": 131740, "start": 1325.72, "end": 1328.5600000000002, "text": " So that would be the self rank.", "tokens": [407, 300, 576, 312, 264, 2698, 6181, 13], "temperature": 0.0, "avg_logprob": -0.0866757763756646, "compression_ratio": 1.640625, "no_speech_prob": 3.500766752040363e-06}, {"id": 275, "seek": 131740, "start": 1328.5600000000002, "end": 1336.76, "text": " And then we would want to look that up in all the ranks and then we'd want to do something similar for suits.", "tokens": [400, 550, 321, 576, 528, 281, 574, 300, 493, 294, 439, 264, 21406, 293, 550, 321, 1116, 528, 281, 360, 746, 2531, 337, 15278, 13], "temperature": 0.0, "avg_logprob": -0.0866757763756646, "compression_ratio": 1.640625, "no_speech_prob": 3.500766752040363e-06}, {"id": 276, "seek": 131740, "start": 1336.76, "end": 1342.1200000000001, "text": " OK, and so that's what we're going to see if we print it.", "tokens": [2264, 11, 293, 370, 300, 311, 437, 321, 434, 516, 281, 536, 498, 321, 4482, 309, 13], "temperature": 0.0, "avg_logprob": -0.0866757763756646, "compression_ratio": 1.640625, "no_speech_prob": 3.500766752040363e-06}, {"id": 277, "seek": 134212, "start": 1342.12, "end": 1351.4399999999998, "text": " Like so now, as you'll see, it's a little different to how it's represented in a notebook. So quite often I like my notebook representation to be the same as how it's printed.", "tokens": [1743, 370, 586, 11, 382, 291, 603, 536, 11, 309, 311, 257, 707, 819, 281, 577, 309, 311, 10379, 294, 257, 21060, 13, 407, 1596, 2049, 286, 411, 452, 21060, 10290, 281, 312, 264, 912, 382, 577, 309, 311, 13567, 13], "temperature": 0.0, "avg_logprob": -0.10399380097022423, "compression_ratio": 1.7587719298245614, "no_speech_prob": 2.642537310748594e-06}, {"id": 278, "seek": 134212, "start": 1351.4399999999998, "end": 1361.8, "text": " So an easy way to do that is by default, Jupiter will use the Dundara Repra method to return the representation in the notebook.", "tokens": [407, 364, 1858, 636, 281, 360, 300, 307, 538, 7576, 11, 24567, 486, 764, 264, 413, 997, 2419, 3696, 424, 3170, 281, 2736, 264, 10290, 294, 264, 21060, 13], "temperature": 0.0, "avg_logprob": -0.10399380097022423, "compression_ratio": 1.7587719298245614, "no_speech_prob": 2.642537310748594e-06}, {"id": 279, "seek": 134212, "start": 1361.8, "end": 1367.6399999999999, "text": " So if I just say I want this to be the same as the string version, I can just do that as we see.", "tokens": [407, 498, 286, 445, 584, 286, 528, 341, 281, 312, 264, 912, 382, 264, 6798, 3037, 11, 286, 393, 445, 360, 300, 382, 321, 536, 13], "temperature": 0.0, "avg_logprob": -0.10399380097022423, "compression_ratio": 1.7587719298245614, "no_speech_prob": 2.642537310748594e-06}, {"id": 280, "seek": 136764, "start": 1367.64, "end": 1377.2, "text": " And so we can say so we can add some documentation here, a playing card.", "tokens": [400, 370, 321, 393, 584, 370, 321, 393, 909, 512, 14333, 510, 11, 257, 2433, 2920, 13], "temperature": 0.0, "avg_logprob": -0.28744046504680926, "compression_ratio": 1.4090909090909092, "no_speech_prob": 1.2028636774630286e-05}, {"id": 281, "seek": 136764, "start": 1377.2, "end": 1388.3600000000001, "text": " Gave it by passing in a rank from ranks and suit from suits.", "tokens": [460, 946, 309, 538, 8437, 294, 257, 6181, 490, 21406, 293, 5722, 490, 15278, 13], "temperature": 0.0, "avg_logprob": -0.28744046504680926, "compression_ratio": 1.4090909090909092, "no_speech_prob": 1.2028636774630286e-05}, {"id": 282, "seek": 136764, "start": 1388.3600000000001, "end": 1397.2800000000002, "text": " OK. Is an example of creating and displaying a card.", "tokens": [2264, 13, 1119, 364, 1365, 295, 4084, 293, 36834, 257, 2920, 13], "temperature": 0.0, "avg_logprob": -0.28744046504680926, "compression_ratio": 1.4090909090909092, "no_speech_prob": 1.2028636774630286e-05}, {"id": 283, "seek": 139728, "start": 1397.28, "end": 1404.84, "text": " And for the attentive people that are really playing close attention, these backticks that Jeremy put in his doc string, just keep that in the back of your mind.", "tokens": [400, 337, 264, 43661, 561, 300, 366, 534, 2433, 1998, 3202, 11, 613, 646, 83, 7663, 300, 17809, 829, 294, 702, 3211, 6798, 11, 445, 1066, 300, 294, 264, 646, 295, 428, 1575, 13], "temperature": 0.0, "avg_logprob": -0.15608110998430821, "compression_ratio": 1.6569343065693432, "no_speech_prob": 1.8056789485854097e-05}, {"id": 284, "seek": 139728, "start": 1404.84, "end": 1407.72, "text": " That's actually doing something special. And you'll see that.", "tokens": [663, 311, 767, 884, 746, 2121, 13, 400, 291, 603, 536, 300, 13], "temperature": 0.0, "avg_logprob": -0.15608110998430821, "compression_ratio": 1.6569343065693432, "no_speech_prob": 1.8056789485854097e-05}, {"id": 285, "seek": 139728, "start": 1407.72, "end": 1413.48, "text": " Yeah, I mean, we can look at it now. So what's going to happen automatically is this is going to be turned into documentation.", "tokens": [865, 11, 286, 914, 11, 321, 393, 574, 412, 309, 586, 13, 407, 437, 311, 516, 281, 1051, 6772, 307, 341, 307, 516, 281, 312, 3574, 666, 14333, 13], "temperature": 0.0, "avg_logprob": -0.15608110998430821, "compression_ratio": 1.6569343065693432, "no_speech_prob": 1.8056789485854097e-05}, {"id": 286, "seek": 139728, "start": 1413.48, "end": 1418.3999999999999, "text": " So, for example, if we look at this one, that's a good example.", "tokens": [407, 11, 337, 1365, 11, 498, 321, 574, 412, 341, 472, 11, 300, 311, 257, 665, 1365, 13], "temperature": 0.0, "avg_logprob": -0.15608110998430821, "compression_ratio": 1.6569343065693432, "no_speech_prob": 1.8056789485854097e-05}, {"id": 287, "seek": 139728, "start": 1418.3999999999999, "end": 1422.68, "text": " So here's a function called dict to NB.", "tokens": [407, 510, 311, 257, 2445, 1219, 12569, 281, 426, 33, 13], "temperature": 0.0, "avg_logprob": -0.15608110998430821, "compression_ratio": 1.6569343065693432, "no_speech_prob": 1.8056789485854097e-05}, {"id": 288, "seek": 142268, "start": 1422.68, "end": 1429.8, "text": " You can see here that it's created some documentation. And in fact, we could make the documentation nicer.", "tokens": [509, 393, 536, 510, 300, 309, 311, 2942, 512, 14333, 13, 400, 294, 1186, 11, 321, 727, 652, 264, 14333, 22842, 13], "temperature": 0.0, "avg_logprob": -0.0965758339833405, "compression_ratio": 1.7610294117647058, "no_speech_prob": 5.337933544069529e-06}, {"id": 289, "seek": 142268, "start": 1429.8, "end": 1433.8, "text": " Well, let's take a look at it first. So this is the documentation is going to auto generate.", "tokens": [1042, 11, 718, 311, 747, 257, 574, 412, 309, 700, 13, 407, 341, 307, 264, 14333, 307, 516, 281, 8399, 8460, 13], "temperature": 0.0, "avg_logprob": -0.0965758339833405, "compression_ratio": 1.7610294117647058, "no_speech_prob": 5.337933544069529e-06}, {"id": 290, "seek": 142268, "start": 1433.8, "end": 1437.48, "text": " It's going to call this function called show doc. You actually don't have to put it in here manually.", "tokens": [467, 311, 516, 281, 818, 341, 2445, 1219, 855, 3211, 13, 509, 767, 500, 380, 362, 281, 829, 309, 294, 510, 16945, 13], "temperature": 0.0, "avg_logprob": -0.0965758339833405, "compression_ratio": 1.7610294117647058, "no_speech_prob": 5.337933544069529e-06}, {"id": 291, "seek": 142268, "start": 1437.48, "end": 1442.2, "text": " It'll do it automatically when we build the docs. But you can kind of get a bit of a preview.", "tokens": [467, 603, 360, 309, 6772, 562, 321, 1322, 264, 45623, 13, 583, 291, 393, 733, 295, 483, 257, 857, 295, 257, 14281, 13], "temperature": 0.0, "avg_logprob": -0.0965758339833405, "compression_ratio": 1.7610294117647058, "no_speech_prob": 5.337933544069529e-06}, {"id": 292, "seek": 142268, "start": 1442.2, "end": 1447.96, "text": " Something which I think is nice to do is to give each parameter some documentation.", "tokens": [6595, 597, 286, 519, 307, 1481, 281, 360, 307, 281, 976, 1184, 13075, 512, 14333, 13], "temperature": 0.0, "avg_logprob": -0.0965758339833405, "compression_ratio": 1.7610294117647058, "no_speech_prob": 5.337933544069529e-06}, {"id": 293, "seek": 144796, "start": 1447.96, "end": 1454.32, "text": " So to do that, you can use something we invented called documents. And this works like so.", "tokens": [407, 281, 360, 300, 11, 291, 393, 764, 746, 321, 14479, 1219, 8512, 13, 400, 341, 1985, 411, 370, 13], "temperature": 0.0, "avg_logprob": -0.10638290902842647, "compression_ratio": 1.6704545454545454, "no_speech_prob": 2.0904005850752583e-06}, {"id": 294, "seek": 144796, "start": 1454.32, "end": 1463.1200000000001, "text": " You basically put a comment after a parameter and say and give it a comment. So an index into suits.", "tokens": [509, 1936, 829, 257, 2871, 934, 257, 13075, 293, 584, 293, 976, 309, 257, 2871, 13, 407, 364, 8186, 666, 15278, 13], "temperature": 0.0, "avg_logprob": -0.10638290902842647, "compression_ratio": 1.6704545454545454, "no_speech_prob": 2.0904005850752583e-06}, {"id": 295, "seek": 144796, "start": 1463.1200000000001, "end": 1468.16, "text": " And so that's kind of nice because I can now make my doc string a bit simpler.", "tokens": [400, 370, 300, 311, 733, 295, 1481, 570, 286, 393, 586, 652, 452, 3211, 6798, 257, 857, 18587, 13], "temperature": 0.0, "avg_logprob": -0.10638290902842647, "compression_ratio": 1.6704545454545454, "no_speech_prob": 2.0904005850752583e-06}, {"id": 296, "seek": 144796, "start": 1468.16, "end": 1473.3600000000001, "text": " And in fact, I don't need to say passing in rank and suit because you can already see that they're right here.", "tokens": [400, 294, 1186, 11, 286, 500, 380, 643, 281, 584, 8437, 294, 6181, 293, 5722, 570, 291, 393, 1217, 536, 300, 436, 434, 558, 510, 13], "temperature": 0.0, "avg_logprob": -0.10638290902842647, "compression_ratio": 1.6704545454545454, "no_speech_prob": 2.0904005850752583e-06}, {"id": 297, "seek": 144796, "start": 1473.3600000000001, "end": 1477.08, "text": " So really, at this point, we can strip it all the way back.", "tokens": [407, 534, 11, 412, 341, 935, 11, 321, 393, 12828, 309, 439, 264, 636, 646, 13], "temperature": 0.0, "avg_logprob": -0.10638290902842647, "compression_ratio": 1.6704545454545454, "no_speech_prob": 2.0904005850752583e-06}, {"id": 298, "seek": 147708, "start": 1477.08, "end": 1483.1599999999999, "text": " And having like in my opinion, having overly verbose documentation isn't a good idea.", "tokens": [400, 1419, 411, 294, 452, 4800, 11, 1419, 24324, 9595, 541, 14333, 1943, 380, 257, 665, 1558, 13], "temperature": 0.0, "avg_logprob": -0.11570926704029046, "compression_ratio": 1.6585365853658536, "no_speech_prob": 3.2376481158280512e-06}, {"id": 299, "seek": 147708, "start": 1483.1599999999999, "end": 1489.28, "text": " If you have more information than needed, then it's distracting to the reader.", "tokens": [759, 291, 362, 544, 1589, 813, 2978, 11, 550, 309, 311, 36689, 281, 264, 15149, 13], "temperature": 0.0, "avg_logprob": -0.11570926704029046, "compression_ratio": 1.6585365853658536, "no_speech_prob": 3.2376481158280512e-06}, {"id": 300, "seek": 147708, "start": 1489.28, "end": 1495.72, "text": " We want the right amount of information. So at this point, you can see here, this is how it's going to be represented.", "tokens": [492, 528, 264, 558, 2372, 295, 1589, 13, 407, 412, 341, 935, 11, 291, 393, 536, 510, 11, 341, 307, 577, 309, 311, 516, 281, 312, 10379, 13], "temperature": 0.0, "avg_logprob": -0.11570926704029046, "compression_ratio": 1.6585365853658536, "no_speech_prob": 3.2376481158280512e-06}, {"id": 301, "seek": 147708, "start": 1495.72, "end": 1503.56, "text": " That's the exact information I want very clear. And so the other thing we might then do is say, well, what type is expected?", "tokens": [663, 311, 264, 1900, 1589, 286, 528, 588, 1850, 13, 400, 370, 264, 661, 551, 321, 1062, 550, 360, 307, 584, 11, 731, 11, 437, 2010, 307, 5176, 30], "temperature": 0.0, "avg_logprob": -0.11570926704029046, "compression_ratio": 1.6585365853658536, "no_speech_prob": 3.2376481158280512e-06}, {"id": 302, "seek": 150356, "start": 1503.56, "end": 1510.52, "text": " OK, so that way you don't have to include that in the doc string, because again, when we spit out this show doc,", "tokens": [2264, 11, 370, 300, 636, 291, 500, 380, 362, 281, 4090, 300, 294, 264, 3211, 6798, 11, 570, 797, 11, 562, 321, 22127, 484, 341, 855, 3211, 11], "temperature": 0.0, "avg_logprob": -0.08557601165771485, "compression_ratio": 1.6893939393939394, "no_speech_prob": 1.1124903721793089e-05}, {"id": 303, "seek": 150356, "start": 1510.52, "end": 1515.6799999999998, "text": " it's going to show me those types both in the table and also in the signature.", "tokens": [309, 311, 516, 281, 855, 385, 729, 3467, 1293, 294, 264, 3199, 293, 611, 294, 264, 13397, 13], "temperature": 0.0, "avg_logprob": -0.08557601165771485, "compression_ratio": 1.6893939393939394, "no_speech_prob": 1.1124903721793089e-05}, {"id": 304, "seek": 150356, "start": 1515.6799999999998, "end": 1521.96, "text": " So this again, it's me being lazy. I don't want to include any more information than I have to.", "tokens": [407, 341, 797, 11, 309, 311, 385, 885, 14847, 13, 286, 500, 380, 528, 281, 4090, 604, 544, 1589, 813, 286, 362, 281, 13], "temperature": 0.0, "avg_logprob": -0.08557601165771485, "compression_ratio": 1.6893939393939394, "no_speech_prob": 1.1124903721793089e-05}, {"id": 305, "seek": 150356, "start": 1521.96, "end": 1526.0, "text": " As I say, we don't actually need this here. It'll be auto added for us.", "tokens": [1018, 286, 584, 11, 321, 500, 380, 767, 643, 341, 510, 13, 467, 603, 312, 8399, 3869, 337, 505, 13], "temperature": 0.0, "avg_logprob": -0.08557601165771485, "compression_ratio": 1.6893939393939394, "no_speech_prob": 1.1124903721793089e-05}, {"id": 306, "seek": 150356, "start": 1526.0, "end": 1529.56, "text": " So after a while, you kind of get used to what things look like. So you don't need it.", "tokens": [407, 934, 257, 1339, 11, 291, 733, 295, 483, 1143, 281, 437, 721, 574, 411, 13, 407, 291, 500, 380, 643, 309, 13], "temperature": 0.0, "avg_logprob": -0.08557601165771485, "compression_ratio": 1.6893939393939394, "no_speech_prob": 1.1124903721793089e-05}, {"id": 307, "seek": 152956, "start": 1529.56, "end": 1534.8799999999999, "text": " But if you do add it, it's fine. It will see that you've added it. It won't add it twice.", "tokens": [583, 498, 291, 360, 909, 309, 11, 309, 311, 2489, 13, 467, 486, 536, 300, 291, 600, 3869, 309, 13, 467, 1582, 380, 909, 309, 6091, 13], "temperature": 0.0, "avg_logprob": -0.1475071907043457, "compression_ratio": 1.7164750957854407, "no_speech_prob": 7.182785338955e-06}, {"id": 308, "seek": 152956, "start": 1534.8799999999999, "end": 1543.52, "text": " An advanced feature we won't necessarily be discussing today is, you can document other code bases with show doc.", "tokens": [1107, 7339, 4111, 321, 1582, 380, 4725, 312, 10850, 965, 307, 11, 291, 393, 4166, 661, 3089, 17949, 365, 855, 3211, 13], "temperature": 0.0, "avg_logprob": -0.1475071907043457, "compression_ratio": 1.7164750957854407, "no_speech_prob": 7.182785338955e-06}, {"id": 309, "seek": 152956, "start": 1543.52, "end": 1546.08, "text": " There's another reason you might want to use it.", "tokens": [821, 311, 1071, 1778, 291, 1062, 528, 281, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.1475071907043457, "compression_ratio": 1.7164750957854407, "no_speech_prob": 7.182785338955e-06}, {"id": 310, "seek": 152956, "start": 1546.08, "end": 1553.6, "text": " Exactly. So you might create docs for something that you've written without NBdev or create docs for somebody else's library.", "tokens": [7587, 13, 407, 291, 1062, 1884, 45623, 337, 746, 300, 291, 600, 3720, 1553, 426, 33, 40343, 420, 1884, 45623, 337, 2618, 1646, 311, 6405, 13], "temperature": 0.0, "avg_logprob": -0.1475071907043457, "compression_ratio": 1.7164750957854407, "no_speech_prob": 7.182785338955e-06}, {"id": 311, "seek": 152956, "start": 1553.6, "end": 1558.2, "text": " And that would be done by using show doc and importing their library.", "tokens": [400, 300, 576, 312, 1096, 538, 1228, 855, 3211, 293, 43866, 641, 6405, 13], "temperature": 0.0, "avg_logprob": -0.1475071907043457, "compression_ratio": 1.7164750957854407, "no_speech_prob": 7.182785338955e-06}, {"id": 312, "seek": 155820, "start": 1558.2, "end": 1575.04, "text": " So, for example, if we wanted to document something from exec NB, for example, I could import something like that thing we were just looking at,", "tokens": [407, 11, 337, 1365, 11, 498, 321, 1415, 281, 4166, 746, 490, 4454, 426, 33, 11, 337, 1365, 11, 286, 727, 974, 746, 411, 300, 551, 321, 645, 445, 1237, 412, 11], "temperature": 0.0, "avg_logprob": -0.16101933780469393, "compression_ratio": 1.5888324873096447, "no_speech_prob": 4.637490292225266e-06}, {"id": 313, "seek": 155820, "start": 1575.04, "end": 1582.4, "text": " and start writing some markdown pros and also add wherever I wanted to the actual documentation.", "tokens": [293, 722, 3579, 512, 1491, 5093, 6267, 293, 611, 909, 8660, 286, 1415, 281, 264, 3539, 14333, 13], "temperature": 0.0, "avg_logprob": -0.16101933780469393, "compression_ratio": 1.5888324873096447, "no_speech_prob": 4.637490292225266e-06}, {"id": 314, "seek": 155820, "start": 1582.4, "end": 1585.8400000000001, "text": " And this bit here, this header show doc blah, it's not going to appear.", "tokens": [400, 341, 857, 510, 11, 341, 23117, 855, 3211, 12288, 11, 309, 311, 406, 516, 281, 4204, 13], "temperature": 0.0, "avg_logprob": -0.16101933780469393, "compression_ratio": 1.5888324873096447, "no_speech_prob": 4.637490292225266e-06}, {"id": 315, "seek": 158584, "start": 1585.84, "end": 1590.08, "text": " The only thing that appears in the documentation is the markdown output.", "tokens": [440, 787, 551, 300, 7038, 294, 264, 14333, 307, 264, 1491, 5093, 5598, 13], "temperature": 0.0, "avg_logprob": -0.10834476385223732, "compression_ratio": 1.6164383561643836, "no_speech_prob": 9.367669008497614e-06}, {"id": 316, "seek": 158584, "start": 1590.08, "end": 1603.1999999999998, "text": " OK, so I think, you know, in general, we probably want to be able to recognize, you know, when cards are the same or when they're less than or greater than some other card.", "tokens": [2264, 11, 370, 286, 519, 11, 291, 458, 11, 294, 2674, 11, 321, 1391, 528, 281, 312, 1075, 281, 5521, 11, 291, 458, 11, 562, 5632, 366, 264, 912, 420, 562, 436, 434, 1570, 813, 420, 5044, 813, 512, 661, 2920, 13], "temperature": 0.0, "avg_logprob": -0.10834476385223732, "compression_ratio": 1.6164383561643836, "no_speech_prob": 9.367669008497614e-06}, {"id": 317, "seek": 158584, "start": 1603.1999999999998, "end": 1610.36, "text": " So what I kind of like to do for that is I kind of like creating tests to check that it's working correctly.", "tokens": [407, 437, 286, 733, 295, 411, 281, 360, 337, 300, 307, 286, 733, 295, 411, 4084, 6921, 281, 1520, 300, 309, 311, 1364, 8944, 13], "temperature": 0.0, "avg_logprob": -0.10834476385223732, "compression_ratio": 1.6164383561643836, "no_speech_prob": 9.367669008497614e-06}, {"id": 318, "seek": 161036, "start": 1610.36, "end": 1618.7199999999998, "text": " You can either create them before or after. It doesn't really matter too much with exploratory programming.", "tokens": [509, 393, 2139, 1884, 552, 949, 420, 934, 13, 467, 1177, 380, 534, 1871, 886, 709, 365, 24765, 4745, 9410, 13], "temperature": 0.0, "avg_logprob": -0.10876884243705055, "compression_ratio": 1.5843621399176955, "no_speech_prob": 2.225206117145717e-06}, {"id": 319, "seek": 161036, "start": 1618.7199999999998, "end": 1627.1999999999998, "text": " So I would kind of be saying things. So you can import some basic testing functionality from Fastcore.", "tokens": [407, 286, 576, 733, 295, 312, 1566, 721, 13, 407, 291, 393, 974, 512, 3875, 4997, 14980, 490, 15968, 12352, 13], "temperature": 0.0, "avg_logprob": -0.10876884243705055, "compression_ratio": 1.5843621399176955, "no_speech_prob": 2.225206117145717e-06}, {"id": 320, "seek": 161036, "start": 1627.1999999999998, "end": 1638.6, "text": " And, you know, again, this approach of importing wildcards, it's like not the normal approach in a lot of Python libraries, but exploratory programming, it works pretty well.", "tokens": [400, 11, 291, 458, 11, 797, 11, 341, 3109, 295, 43866, 4868, 40604, 11, 309, 311, 411, 406, 264, 2710, 3109, 294, 257, 688, 295, 15329, 15148, 11, 457, 24765, 4745, 9410, 11, 309, 1985, 1238, 731, 13], "temperature": 0.0, "avg_logprob": -0.10876884243705055, "compression_ratio": 1.5843621399176955, "no_speech_prob": 2.225206117145717e-06}, {"id": 321, "seek": 163860, "start": 1638.6, "end": 1649.04, "text": " It's certainly not unheard of, like, for example, the Python standard library itself has a really famous library called TKinter.", "tokens": [467, 311, 3297, 406, 517, 42915, 295, 11, 411, 11, 337, 1365, 11, 264, 15329, 3832, 6405, 2564, 575, 257, 534, 4618, 6405, 1219, 314, 42, 5106, 13], "temperature": 0.0, "avg_logprob": -0.10839137464466661, "compression_ratio": 1.7106382978723405, "no_speech_prob": 1.994606236621621e-06}, {"id": 322, "seek": 163860, "start": 1649.04, "end": 1653.9599999999998, "text": " And you'll see that all of the examples in it actually use wildcard imports.", "tokens": [400, 291, 603, 536, 300, 439, 295, 264, 5110, 294, 309, 767, 764, 4868, 22259, 41596, 13], "temperature": 0.0, "avg_logprob": -0.10839137464466661, "compression_ratio": 1.7106382978723405, "no_speech_prob": 1.994606236621621e-06}, {"id": 323, "seek": 163860, "start": 1653.9599999999998, "end": 1658.0, "text": " So it's actually used in the Python standard library itself.", "tokens": [407, 309, 311, 767, 1143, 294, 264, 15329, 3832, 6405, 2564, 13], "temperature": 0.0, "avg_logprob": -0.10839137464466661, "compression_ratio": 1.7106382978723405, "no_speech_prob": 1.994606236621621e-06}, {"id": 324, "seek": 163860, "start": 1658.0, "end": 1661.0, "text": " But it's it's only a good idea.", "tokens": [583, 309, 311, 309, 311, 787, 257, 665, 1558, 13], "temperature": 0.0, "avg_logprob": -0.10839137464466661, "compression_ratio": 1.7106382978723405, "no_speech_prob": 1.994606236621621e-06}, {"id": 325, "seek": 163860, "start": 1661.0, "end": 1665.6, "text": " Like, it's something you'd only want to do for libraries that are explicitly designed to work this way,", "tokens": [1743, 11, 309, 311, 746, 291, 1116, 787, 528, 281, 360, 337, 15148, 300, 366, 20803, 4761, 281, 589, 341, 636, 11], "temperature": 0.0, "avg_logprob": -0.10839137464466661, "compression_ratio": 1.7106382978723405, "no_speech_prob": 1.994606236621621e-06}, {"id": 326, "seek": 166560, "start": 1665.6, "end": 1672.8, "text": " because there's a somewhat advanced Python feature called DUNDA ALL, which ensures that things work correctly when you do this.", "tokens": [570, 456, 311, 257, 8344, 7339, 15329, 4111, 1219, 413, 3979, 7509, 14824, 11, 597, 28111, 300, 721, 589, 8944, 562, 291, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.13831824817876706, "compression_ratio": 1.5524193548387097, "no_speech_prob": 3.500656021060422e-06}, {"id": 327, "seek": 166560, "start": 1672.8, "end": 1676.6799999999998, "text": " Normally, that's a lot of work to create and not really worth the effort.", "tokens": [17424, 11, 300, 311, 257, 688, 295, 589, 281, 1884, 293, 406, 534, 3163, 264, 4630, 13], "temperature": 0.0, "avg_logprob": -0.13831824817876706, "compression_ratio": 1.5524193548387097, "no_speech_prob": 3.500656021060422e-06}, {"id": 328, "seek": 166560, "start": 1676.6799999999998, "end": 1678.7199999999998, "text": " MB dev libraries do it automatically.", "tokens": [28866, 1905, 15148, 360, 309, 6772, 13], "temperature": 0.0, "avg_logprob": -0.13831824817876706, "compression_ratio": 1.5524193548387097, "no_speech_prob": 3.500656021060422e-06}, {"id": 329, "seek": 166560, "start": 1678.7199999999998, "end": 1687.6399999999999, "text": " So one nice thing about MB dev libraries is that they work very well in REPL oriented programming because they'll support using wildcard imports.", "tokens": [407, 472, 1481, 551, 466, 28866, 1905, 15148, 307, 300, 436, 589, 588, 731, 294, 31511, 43, 21841, 9410, 570, 436, 603, 1406, 1228, 4868, 22259, 41596, 13], "temperature": 0.0, "avg_logprob": -0.13831824817876706, "compression_ratio": 1.5524193548387097, "no_speech_prob": 3.500656021060422e-06}, {"id": 330, "seek": 168764, "start": 1687.64, "end": 1697.44, "text": " But again, it's something which if you're at an organization that uses kind of PEP8 and stuff, you might want to explicitly import each thing carefully.", "tokens": [583, 797, 11, 309, 311, 746, 597, 498, 291, 434, 412, 364, 4475, 300, 4960, 733, 295, 430, 8929, 23, 293, 1507, 11, 291, 1062, 528, 281, 20803, 974, 1184, 551, 7500, 13], "temperature": 0.0, "avg_logprob": -0.15732696821104805, "compression_ratio": 1.5571955719557196, "no_speech_prob": 2.6424361294630216e-06}, {"id": 331, "seek": 168764, "start": 1697.44, "end": 1702.6000000000001, "text": " But, you know, one nice thing about exploratory programming is for people that aren't very familiar with the IDE,", "tokens": [583, 11, 291, 458, 11, 472, 1481, 551, 466, 24765, 4745, 9410, 307, 337, 561, 300, 3212, 380, 588, 4963, 365, 264, 40930, 11], "temperature": 0.0, "avg_logprob": -0.15732696821104805, "compression_ratio": 1.5571955719557196, "no_speech_prob": 2.6424361294630216e-06}, {"id": 332, "seek": 168764, "start": 1702.6000000000001, "end": 1707.96, "text": " they often, like, don't know where symbols come from or what they mean.", "tokens": [436, 2049, 11, 411, 11, 500, 380, 458, 689, 16944, 808, 490, 420, 437, 436, 914, 13], "temperature": 0.0, "avg_logprob": -0.15732696821104805, "compression_ratio": 1.5571955719557196, "no_speech_prob": 2.6424361294630216e-06}, {"id": 333, "seek": 168764, "start": 1707.96, "end": 1715.0, "text": " So, for example, there's a thing in fastcore.test called test for equality, testec.", "tokens": [407, 11, 337, 1365, 11, 456, 311, 257, 551, 294, 2370, 12352, 13, 31636, 1219, 1500, 337, 14949, 11, 1500, 3045, 13], "temperature": 0.0, "avg_logprob": -0.15732696821104805, "compression_ratio": 1.5571955719557196, "no_speech_prob": 2.6424361294630216e-06}, {"id": 334, "seek": 171500, "start": 1715.0, "end": 1719.24, "text": " In Jupyter, you don't have to worry about, like, you don't have to look up the top to find it,", "tokens": [682, 22125, 88, 391, 11, 291, 500, 380, 362, 281, 3292, 466, 11, 411, 11, 291, 500, 380, 362, 281, 574, 493, 264, 1192, 281, 915, 309, 11], "temperature": 0.0, "avg_logprob": -0.07399784434925426, "compression_ratio": 1.779591836734694, "no_speech_prob": 1.0450859008415136e-05}, {"id": 335, "seek": 171500, "start": 1719.24, "end": 1725.88, "text": " because at any point you can just stick a question mark after it and it will tell you exactly where it came from.", "tokens": [570, 412, 604, 935, 291, 393, 445, 2897, 257, 1168, 1491, 934, 309, 293, 309, 486, 980, 291, 2293, 689, 309, 1361, 490, 13], "temperature": 0.0, "avg_logprob": -0.07399784434925426, "compression_ratio": 1.779591836734694, "no_speech_prob": 1.0450859008415136e-05}, {"id": 336, "seek": 171500, "start": 1725.88, "end": 1731.76, "text": " And furthermore, you can actually just put a second question mark and that'll give you the source code for it.", "tokens": [400, 3052, 3138, 11, 291, 393, 767, 445, 829, 257, 1150, 1168, 1491, 293, 300, 603, 976, 291, 264, 4009, 3089, 337, 309, 13], "temperature": 0.0, "avg_logprob": -0.07399784434925426, "compression_ratio": 1.779591836734694, "no_speech_prob": 1.0450859008415136e-05}, {"id": 337, "seek": 171500, "start": 1731.76, "end": 1740.64, "text": " Or you can write it without any question marks and it'll just tell you the details of the source and the parameters.", "tokens": [1610, 291, 393, 2464, 309, 1553, 604, 1168, 10640, 293, 309, 603, 445, 980, 291, 264, 4365, 295, 264, 4009, 293, 264, 9834, 13], "temperature": 0.0, "avg_logprob": -0.07399784434925426, "compression_ratio": 1.779591836734694, "no_speech_prob": 1.0450859008415136e-05}, {"id": 338, "seek": 174064, "start": 1740.64, "end": 1747.1200000000001, "text": " Or you can just hit open parenthesis and then shift tab and you'll get all the information here.", "tokens": [1610, 291, 393, 445, 2045, 1269, 23350, 9374, 293, 550, 5513, 4421, 293, 291, 603, 483, 439, 264, 1589, 510, 13], "temperature": 0.0, "avg_logprob": -0.07080825758569034, "compression_ratio": 1.5639810426540284, "no_speech_prob": 2.0904146822431358e-06}, {"id": 339, "seek": 174064, "start": 1747.1200000000001, "end": 1755.44, "text": " So there's lots of ways, you know, in a REPL based environment of getting all this information without scrolling around and wasting time.", "tokens": [407, 456, 311, 3195, 295, 2098, 11, 291, 458, 11, 294, 257, 31511, 43, 2361, 2823, 295, 1242, 439, 341, 1589, 1553, 29053, 926, 293, 20457, 565, 13], "temperature": 0.0, "avg_logprob": -0.07080825758569034, "compression_ratio": 1.5639810426540284, "no_speech_prob": 2.0904146822431358e-06}, {"id": 340, "seek": 174064, "start": 1755.44, "end": 1765.6000000000001, "text": " So we're going to test that, for example, a card like that should be equal to a card like that.", "tokens": [407, 321, 434, 516, 281, 1500, 300, 11, 337, 1365, 11, 257, 2920, 411, 300, 820, 312, 2681, 281, 257, 2920, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.07080825758569034, "compression_ratio": 1.5639810426540284, "no_speech_prob": 2.0904146822431358e-06}, {"id": 341, "seek": 176560, "start": 1765.6, "end": 1771.28, "text": " Whereas a card with a different suit should not be equal.", "tokens": [13813, 257, 2920, 365, 257, 819, 5722, 820, 406, 312, 2681, 13], "temperature": 0.0, "avg_logprob": -0.11363059030452245, "compression_ratio": 1.6358024691358024, "no_speech_prob": 2.4824519186950056e-06}, {"id": 342, "seek": 176560, "start": 1771.28, "end": 1776.48, "text": " And a card with a different rank should not be equal.", "tokens": [400, 257, 2920, 365, 257, 819, 6181, 820, 406, 312, 2681, 13], "temperature": 0.0, "avg_logprob": -0.11363059030452245, "compression_ratio": 1.6358024691358024, "no_speech_prob": 2.4824519186950056e-06}, {"id": 343, "seek": 176560, "start": 1776.48, "end": 1781.32, "text": " OK, so if we run that, it doesn't work because we haven't defined equality yet.", "tokens": [2264, 11, 370, 498, 321, 1190, 300, 11, 309, 1177, 380, 589, 570, 321, 2378, 380, 7642, 14949, 1939, 13], "temperature": 0.0, "avg_logprob": -0.11363059030452245, "compression_ratio": 1.6358024691358024, "no_speech_prob": 2.4824519186950056e-06}, {"id": 344, "seek": 176560, "start": 1781.32, "end": 1790.84, "text": " So the way you define equality in Python is by defining a DUNDA equality.", "tokens": [407, 264, 636, 291, 6964, 14949, 294, 15329, 307, 538, 17827, 257, 413, 3979, 7509, 14949, 13], "temperature": 0.0, "avg_logprob": -0.11363059030452245, "compression_ratio": 1.6358024691358024, "no_speech_prob": 2.4824519186950056e-06}, {"id": 345, "seek": 179084, "start": 1790.84, "end": 1802.24, "text": " And we could just check that the two tuples are the same, so if we check that self.suit,self.rank equals...", "tokens": [400, 321, 727, 445, 1520, 300, 264, 732, 2604, 2622, 366, 264, 912, 11, 370, 498, 321, 1520, 300, 2698, 13, 82, 1983, 11, 927, 13, 20479, 6915, 485], "temperature": 0.0, "avg_logprob": -0.17199652054730583, "compression_ratio": 1.5260115606936415, "no_speech_prob": 1.1124726370326243e-05}, {"id": 346, "seek": 179084, "start": 1802.24, "end": 1808.1999999999998, "text": " Oh, we don't need B. It's going to be past the self, yourself and then one other thing.", "tokens": [876, 11, 321, 500, 380, 643, 363, 13, 467, 311, 516, 281, 312, 1791, 264, 2698, 11, 1803, 293, 550, 472, 661, 551, 13], "temperature": 0.0, "avg_logprob": -0.17199652054730583, "compression_ratio": 1.5260115606936415, "no_speech_prob": 1.1124726370326243e-05}, {"id": 347, "seek": 179084, "start": 1808.1999999999998, "end": 1815.32, "text": " And check that against a.suit,a.rank.", "tokens": [400, 1520, 300, 1970, 257, 13, 82, 1983, 11, 64, 13, 20479, 13], "temperature": 0.0, "avg_logprob": -0.17199652054730583, "compression_ratio": 1.5260115606936415, "no_speech_prob": 1.1124726370326243e-05}, {"id": 348, "seek": 179084, "start": 1815.32, "end": 1817.76, "text": " There we go. So they all pass.", "tokens": [821, 321, 352, 13, 407, 436, 439, 1320, 13], "temperature": 0.0, "avg_logprob": -0.17199652054730583, "compression_ratio": 1.5260115606936415, "no_speech_prob": 1.1124726370326243e-05}, {"id": 349, "seek": 181776, "start": 1817.76, "end": 1823.8799999999999, "text": " Now, we're not showing like totally perfect software engineering principles here.", "tokens": [823, 11, 321, 434, 406, 4099, 411, 3879, 2176, 4722, 7043, 9156, 510, 13], "temperature": 0.0, "avg_logprob": -0.06627256455628769, "compression_ratio": 1.6212765957446809, "no_speech_prob": 5.507245987246279e-06}, {"id": 350, "seek": 181776, "start": 1823.8799999999999, "end": 1826.52, "text": " We should be checking that the types are the same and stuff like that.", "tokens": [492, 820, 312, 8568, 300, 264, 3467, 366, 264, 912, 293, 1507, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.06627256455628769, "compression_ratio": 1.6212765957446809, "no_speech_prob": 5.507245987246279e-06}, {"id": 351, "seek": 181776, "start": 1826.52, "end": 1832.76, "text": " But we could at least give some indication that the types are meant to be a card.", "tokens": [583, 321, 727, 412, 1935, 976, 512, 18877, 300, 264, 3467, 366, 4140, 281, 312, 257, 2920, 13], "temperature": 0.0, "avg_logprob": -0.06627256455628769, "compression_ratio": 1.6212765957446809, "no_speech_prob": 5.507245987246279e-06}, {"id": 352, "seek": 181776, "start": 1832.76, "end": 1838.8, "text": " This is a slightly weird Python thing that Python doesn't know what a card is when you're inside a card.", "tokens": [639, 307, 257, 4748, 3657, 15329, 551, 300, 15329, 1177, 380, 458, 437, 257, 2920, 307, 562, 291, 434, 1854, 257, 2920, 13], "temperature": 0.0, "avg_logprob": -0.06627256455628769, "compression_ratio": 1.6212765957446809, "no_speech_prob": 5.507245987246279e-06}, {"id": 353, "seek": 181776, "start": 1838.8, "end": 1843.44, "text": " So nowadays you have to put it in quotes.", "tokens": [407, 13434, 291, 362, 281, 829, 309, 294, 19963, 13], "temperature": 0.0, "avg_logprob": -0.06627256455628769, "compression_ratio": 1.6212765957446809, "no_speech_prob": 5.507245987246279e-06}, {"id": 354, "seek": 184344, "start": 1843.44, "end": 1849.2, "text": " You know, like I tend to like having my functionality all in one place, though.", "tokens": [509, 458, 11, 411, 286, 3928, 281, 411, 1419, 452, 14980, 439, 294, 472, 1081, 11, 1673, 13], "temperature": 0.0, "avg_logprob": -0.14614246963360988, "compression_ratio": 1.6981981981981982, "no_speech_prob": 5.771523774456e-06}, {"id": 355, "seek": 184344, "start": 1849.2, "end": 1852.96, "text": " So what I would tend to do at this point is I would often split this out.", "tokens": [407, 437, 286, 576, 3928, 281, 360, 412, 341, 935, 307, 286, 576, 2049, 7472, 341, 484, 13], "temperature": 0.0, "avg_logprob": -0.14614246963360988, "compression_ratio": 1.6981981981981982, "no_speech_prob": 5.771523774456e-06}, {"id": 356, "seek": 184344, "start": 1852.96, "end": 1856.8400000000001, "text": " So in Jupyter, you can hit control, shift, hyphen to split a cell out.", "tokens": [407, 294, 22125, 88, 391, 11, 291, 393, 2045, 1969, 11, 5513, 11, 2477, 47059, 281, 7472, 257, 2815, 484, 13], "temperature": 0.0, "avg_logprob": -0.14614246963360988, "compression_ratio": 1.6981981981981982, "no_speech_prob": 5.771523774456e-06}, {"id": 357, "seek": 184344, "start": 1856.8400000000001, "end": 1862.56, "text": " And, you know, I'd quite like to kind of have all this stuff defined down here in one place.", "tokens": [400, 11, 291, 458, 11, 286, 1116, 1596, 411, 281, 733, 295, 362, 439, 341, 1507, 7642, 760, 510, 294, 472, 1081, 13], "temperature": 0.0, "avg_logprob": -0.14614246963360988, "compression_ratio": 1.6981981981981982, "no_speech_prob": 5.771523774456e-06}, {"id": 358, "seek": 184344, "start": 1862.56, "end": 1866.96, "text": " So I'd have like equals, not equal, you know, and so forth.", "tokens": [407, 286, 1116, 362, 411, 6915, 11, 406, 2681, 11, 291, 458, 11, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.14614246963360988, "compression_ratio": 1.6981981981981982, "no_speech_prob": 5.771523774456e-06}, {"id": 359, "seek": 186696, "start": 1866.96, "end": 1876.52, "text": " So to define a method outside of its class, which is kind of something that's pretty common in things like C++, for example,", "tokens": [407, 281, 6964, 257, 3170, 2380, 295, 1080, 1508, 11, 597, 307, 733, 295, 746, 300, 311, 1238, 2689, 294, 721, 411, 383, 25472, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.17034386199654886, "compression_ratio": 1.6495726495726495, "no_speech_prob": 4.157214789302088e-06}, {"id": 360, "seek": 186696, "start": 1876.52, "end": 1882.72, "text": " you can also do it in Python using something from another thing from FastCore.", "tokens": [291, 393, 611, 360, 309, 294, 15329, 1228, 746, 490, 1071, 551, 490, 15968, 34, 418, 13], "temperature": 0.0, "avg_logprob": -0.17034386199654886, "compression_ratio": 1.6495726495726495, "no_speech_prob": 4.157214789302088e-06}, {"id": 361, "seek": 186696, "start": 1882.72, "end": 1888.8, "text": " So the main things in FastCore, they've inside it, utils.", "tokens": [407, 264, 2135, 721, 294, 15968, 34, 418, 11, 436, 600, 1854, 309, 11, 2839, 4174, 13], "temperature": 0.0, "avg_logprob": -0.17034386199654886, "compression_ratio": 1.6495726495726495, "no_speech_prob": 4.157214789302088e-06}, {"id": 362, "seek": 186696, "start": 1888.8, "end": 1891.56, "text": " And one of the things that will give us is something called patch.", "tokens": [400, 472, 295, 264, 721, 300, 486, 976, 505, 307, 746, 1219, 9972, 13], "temperature": 0.0, "avg_logprob": -0.17034386199654886, "compression_ratio": 1.6495726495726495, "no_speech_prob": 4.157214789302088e-06}, {"id": 363, "seek": 186696, "start": 1891.56, "end": 1896.1200000000001, "text": " So we can add a quality to FastCore just by saying patch.", "tokens": [407, 321, 393, 909, 257, 3125, 281, 15968, 34, 418, 445, 538, 1566, 9972, 13], "temperature": 0.0, "avg_logprob": -0.17034386199654886, "compression_ratio": 1.6495726495726495, "no_speech_prob": 4.157214789302088e-06}, {"id": 364, "seek": 189612, "start": 1896.12, "end": 1898.04, "text": " And we're just going to say, what do you want to patch?", "tokens": [400, 321, 434, 445, 516, 281, 584, 11, 437, 360, 291, 528, 281, 9972, 30], "temperature": 0.0, "avg_logprob": -0.10886989205570544, "compression_ratio": 1.66147859922179, "no_speech_prob": 1.4284694771049544e-05}, {"id": 365, "seek": 189612, "start": 1898.04, "end": 1899.7199999999998, "text": " I want to patch card.", "tokens": [286, 528, 281, 9972, 2920, 13], "temperature": 0.0, "avg_logprob": -0.10886989205570544, "compression_ratio": 1.66147859922179, "no_speech_prob": 1.4284694771049544e-05}, {"id": 366, "seek": 189612, "start": 1899.7199999999998, "end": 1904.04, "text": " And one nice thing is now that actually exists, I don't need this weird quote thing anymore.", "tokens": [400, 472, 1481, 551, 307, 586, 300, 767, 8198, 11, 286, 500, 380, 643, 341, 3657, 6513, 551, 3602, 13], "temperature": 0.0, "avg_logprob": -0.10886989205570544, "compression_ratio": 1.66147859922179, "no_speech_prob": 1.4284694771049544e-05}, {"id": 367, "seek": 189612, "start": 1904.04, "end": 1911.8799999999999, "text": " So if I now can I can define, as you can see here, I've defined card and then I've patched in a quality.", "tokens": [407, 498, 286, 586, 393, 286, 393, 6964, 11, 382, 291, 393, 536, 510, 11, 286, 600, 7642, 2920, 293, 550, 286, 600, 9972, 292, 294, 257, 3125, 13], "temperature": 0.0, "avg_logprob": -0.10886989205570544, "compression_ratio": 1.66147859922179, "no_speech_prob": 1.4284694771049544e-05}, {"id": 368, "seek": 189612, "start": 1911.8799999999999, "end": 1915.08, "text": " And this is part of the what I was talking about, the dialect of Python.", "tokens": [400, 341, 307, 644, 295, 264, 437, 286, 390, 1417, 466, 11, 264, 24652, 295, 15329, 13], "temperature": 0.0, "avg_logprob": -0.10886989205570544, "compression_ratio": 1.66147859922179, "no_speech_prob": 1.4284694771049544e-05}, {"id": 369, "seek": 189612, "start": 1915.08, "end": 1921.0, "text": " This is one of the extensions that make it easier to write code in a notebook.", "tokens": [639, 307, 472, 295, 264, 25129, 300, 652, 309, 3571, 281, 2464, 3089, 294, 257, 21060, 13], "temperature": 0.0, "avg_logprob": -0.10886989205570544, "compression_ratio": 1.66147859922179, "no_speech_prob": 1.4284694771049544e-05}, {"id": 370, "seek": 192100, "start": 1921.0, "end": 1929.36, "text": " And so I'd be inclined at this point to kind of introduce a section in my documentation here for comparison operators.", "tokens": [400, 370, 286, 1116, 312, 28173, 412, 341, 935, 281, 733, 295, 5366, 257, 3541, 294, 452, 14333, 510, 337, 9660, 19077, 13], "temperature": 0.0, "avg_logprob": -0.1226050181266589, "compression_ratio": 1.6071428571428572, "no_speech_prob": 1.2218220035720151e-05}, {"id": 371, "seek": 192100, "start": 1929.36, "end": 1936.28, "text": " OK, and so we'll also medically we'll automatically get documentation this.", "tokens": [2264, 11, 293, 370, 321, 603, 611, 49230, 321, 603, 6772, 483, 14333, 341, 13], "temperature": 0.0, "avg_logprob": -0.1226050181266589, "compression_ratio": 1.6071428571428572, "no_speech_prob": 1.2218220035720151e-05}, {"id": 372, "seek": 192100, "start": 1936.28, "end": 1942.16, "text": " So then we could do less than or equal to or less than, I guess.", "tokens": [407, 550, 321, 727, 360, 1570, 813, 420, 2681, 281, 420, 1570, 813, 11, 286, 2041, 13], "temperature": 0.0, "avg_logprob": -0.1226050181266589, "compression_ratio": 1.6071428571428572, "no_speech_prob": 1.2218220035720151e-05}, {"id": 373, "seek": 192100, "start": 1942.16, "end": 1949.76, "text": " So we would expect one three to be less than two three.", "tokens": [407, 321, 576, 2066, 472, 1045, 281, 312, 1570, 813, 732, 1045, 13], "temperature": 0.0, "avg_logprob": -0.1226050181266589, "compression_ratio": 1.6071428571428572, "no_speech_prob": 1.2218220035720151e-05}, {"id": 374, "seek": 194976, "start": 1949.76, "end": 1956.0, "text": " So this one need to be just use assert.", "tokens": [407, 341, 472, 643, 281, 312, 445, 764, 19810, 13], "temperature": 0.0, "avg_logprob": -0.23010985915725296, "compression_ratio": 1.679245283018868, "no_speech_prob": 4.289170647098217e-06}, {"id": 375, "seek": 194976, "start": 1956.0, "end": 1961.68, "text": " There we go. And similar thing greater than.", "tokens": [821, 321, 352, 13, 400, 2531, 551, 5044, 813, 13], "temperature": 0.0, "avg_logprob": -0.23010985915725296, "compression_ratio": 1.679245283018868, "no_speech_prob": 4.289170647098217e-06}, {"id": 376, "seek": 194976, "start": 1961.68, "end": 1966.64, "text": " So LT and GT is what Python uses for less than and greater than.", "tokens": [407, 42671, 293, 17530, 307, 437, 15329, 4960, 337, 1570, 813, 293, 5044, 813, 13], "temperature": 0.0, "avg_logprob": -0.23010985915725296, "compression_ratio": 1.679245283018868, "no_speech_prob": 4.289170647098217e-06}, {"id": 377, "seek": 194976, "start": 1966.64, "end": 1971.04, "text": " So this should not be the case for greater than.", "tokens": [407, 341, 820, 406, 312, 264, 1389, 337, 5044, 813, 13], "temperature": 0.0, "avg_logprob": -0.23010985915725296, "compression_ratio": 1.679245283018868, "no_speech_prob": 4.289170647098217e-06}, {"id": 378, "seek": 194976, "start": 1971.04, "end": 1976.32, "text": " And then less than or greater than, we would expect that to be true.", "tokens": [400, 550, 1570, 813, 420, 5044, 813, 11, 321, 576, 2066, 300, 281, 312, 2074, 13], "temperature": 0.0, "avg_logprob": -0.23010985915725296, "compression_ratio": 1.679245283018868, "no_speech_prob": 4.289170647098217e-06}, {"id": 379, "seek": 197632, "start": 1976.32, "end": 1980.84, "text": " OK, so that's all passing.", "tokens": [2264, 11, 370, 300, 311, 439, 8437, 13], "temperature": 0.0, "avg_logprob": -0.19368178808867043, "compression_ratio": 1.4339622641509433, "no_speech_prob": 4.157107014179928e-06}, {"id": 380, "seek": 197632, "start": 1980.84, "end": 1986.96, "text": " All right, I think that's basically our playing card.", "tokens": [1057, 558, 11, 286, 519, 300, 311, 1936, 527, 2433, 2920, 13], "temperature": 0.0, "avg_logprob": -0.19368178808867043, "compression_ratio": 1.4339622641509433, "no_speech_prob": 4.157107014179928e-06}, {"id": 381, "seek": 197632, "start": 1986.96, "end": 1991.28, "text": " So at this point, we can we can try it out.", "tokens": [407, 412, 341, 935, 11, 321, 393, 321, 393, 853, 309, 484, 13], "temperature": 0.0, "avg_logprob": -0.19368178808867043, "compression_ratio": 1.4339622641509433, "no_speech_prob": 4.157107014179928e-06}, {"id": 382, "seek": 197632, "start": 1991.28, "end": 2004.6799999999998, "text": " And so to create our card pie file, we can head over to our terminal and type NB dev underscore export.", "tokens": [400, 370, 281, 1884, 527, 2920, 1730, 3991, 11, 321, 393, 1378, 670, 281, 527, 14709, 293, 2010, 426, 33, 1905, 37556, 10725, 13], "temperature": 0.0, "avg_logprob": -0.19368178808867043, "compression_ratio": 1.4339622641509433, "no_speech_prob": 4.157107014179928e-06}, {"id": 383, "seek": 200468, "start": 2004.68, "end": 2008.16, "text": " We can type NB dev underscore export.", "tokens": [492, 393, 2010, 426, 33, 1905, 37556, 10725, 13], "temperature": 0.0, "avg_logprob": -0.18603800801397527, "compression_ratio": 1.6223175965665235, "no_speech_prob": 3.446491518843686e-06}, {"id": 384, "seek": 200468, "start": 2008.16, "end": 2018.5600000000002, "text": " And you'll see we've now got an NB dev underscore cards directory with a card pie file.", "tokens": [400, 291, 603, 536, 321, 600, 586, 658, 364, 426, 33, 1905, 37556, 5632, 21120, 365, 257, 2920, 1730, 3991, 13], "temperature": 0.0, "avg_logprob": -0.18603800801397527, "compression_ratio": 1.6223175965665235, "no_speech_prob": 3.446491518843686e-06}, {"id": 385, "seek": 200468, "start": 2018.5600000000002, "end": 2022.64, "text": " We decided not to use core after all, so get rid of that.", "tokens": [492, 3047, 406, 281, 764, 4965, 934, 439, 11, 370, 483, 3973, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.18603800801397527, "compression_ratio": 1.6223175965665235, "no_speech_prob": 3.446491518843686e-06}, {"id": 386, "seek": 200468, "start": 2022.64, "end": 2027.48, "text": " So like one thing we could do at this point is to see whether that seems to be working OK.", "tokens": [407, 411, 472, 551, 321, 727, 360, 412, 341, 935, 307, 281, 536, 1968, 300, 2544, 281, 312, 1364, 2264, 13], "temperature": 0.0, "avg_logprob": -0.18603800801397527, "compression_ratio": 1.6223175965665235, "no_speech_prob": 3.446491518843686e-06}, {"id": 387, "seek": 200468, "start": 2027.48, "end": 2033.76, "text": " By importing it, this year in the index notebooks, that's the home page, that's going to be a homepage.", "tokens": [3146, 43866, 309, 11, 341, 1064, 294, 264, 8186, 43782, 11, 300, 311, 264, 1280, 3028, 11, 300, 311, 516, 281, 312, 257, 31301, 13], "temperature": 0.0, "avg_logprob": -0.18603800801397527, "compression_ratio": 1.6223175965665235, "no_speech_prob": 3.446491518843686e-06}, {"id": 388, "seek": 203376, "start": 2033.76, "end": 2051.4, "text": " Exactly. So we can say like this web provides a card class you can use to create, display and compare playing cards.", "tokens": [7587, 13, 407, 321, 393, 584, 411, 341, 3670, 6417, 257, 2920, 1508, 291, 393, 764, 281, 1884, 11, 4674, 293, 6794, 2433, 5632, 13], "temperature": 0.0, "avg_logprob": -0.30773081678025266, "compression_ratio": 1.3, "no_speech_prob": 5.954816515441053e-06}, {"id": 389, "seek": 203376, "start": 2051.4, "end": 2055.36, "text": " Card 1,3.", "tokens": [11877, 502, 11, 18, 13], "temperature": 0.0, "avg_logprob": -0.30773081678025266, "compression_ratio": 1.3, "no_speech_prob": 5.954816515441053e-06}, {"id": 390, "seek": 203376, "start": 2055.36, "end": 2060.92, "text": " Suits are numbered according to this list.", "tokens": [2746, 1208, 366, 40936, 4650, 281, 341, 1329, 13], "temperature": 0.0, "avg_logprob": -0.30773081678025266, "compression_ratio": 1.3, "no_speech_prob": 5.954816515441053e-06}, {"id": 391, "seek": 206092, "start": 2060.92, "end": 2068.08, "text": " So you can see all that stuff has been imported into our environment from NB dev stock card.", "tokens": [407, 291, 393, 536, 439, 300, 1507, 575, 668, 25524, 666, 527, 2823, 490, 426, 33, 1905, 4127, 2920, 13], "temperature": 0.0, "avg_logprob": -0.11059559053844875, "compression_ratio": 1.4497354497354498, "no_speech_prob": 7.182859917520545e-06}, {"id": 392, "seek": 206092, "start": 2068.08, "end": 2074.88, "text": " So that's pretty handy. So we'll call this NB dev underscore cards.", "tokens": [407, 300, 311, 1238, 13239, 13, 407, 321, 603, 818, 341, 426, 33, 1905, 37556, 5632, 13], "temperature": 0.0, "avg_logprob": -0.11059559053844875, "compression_ratio": 1.4497354497354498, "no_speech_prob": 7.182859917520545e-06}, {"id": 393, "seek": 206092, "start": 2074.88, "end": 2079.28, "text": " And we're not automating this bit, unfortunately, we probably should be.", "tokens": [400, 321, 434, 406, 3553, 990, 341, 857, 11, 7015, 11, 321, 1391, 820, 312, 13], "temperature": 0.0, "avg_logprob": -0.11059559053844875, "compression_ratio": 1.4497354497354498, "no_speech_prob": 7.182859917520545e-06}, {"id": 394, "seek": 206092, "start": 2079.28, "end": 2085.56, "text": " We'll have to copy the description over.", "tokens": [492, 603, 362, 281, 5055, 264, 3855, 670, 13], "temperature": 0.0, "avg_logprob": -0.11059559053844875, "compression_ratio": 1.4497354497354498, "no_speech_prob": 7.182859917520545e-06}, {"id": 395, "seek": 208556, "start": 2085.56, "end": 2091.16, "text": " So we might put a link here to where the inspiration for this comes from.", "tokens": [407, 321, 1062, 829, 257, 2113, 510, 281, 689, 264, 10249, 337, 341, 1487, 490, 13], "temperature": 0.0, "avg_logprob": -0.21733900478907994, "compression_ratio": 1.3216783216783217, "no_speech_prob": 1.4282474694482516e-05}, {"id": 396, "seek": 208556, "start": 2091.16, "end": 2101.04, "text": " A playing card, a deck of cards demo of NB dev.", "tokens": [316, 2433, 2920, 11, 257, 9341, 295, 5632, 10723, 295, 426, 33, 1905, 13], "temperature": 0.0, "avg_logprob": -0.21733900478907994, "compression_ratio": 1.3216783216783217, "no_speech_prob": 1.4282474694482516e-05}, {"id": 397, "seek": 208556, "start": 2101.04, "end": 2107.44, "text": " Based on ideas from.", "tokens": [18785, 322, 3487, 490, 13], "temperature": 0.0, "avg_logprob": -0.21733900478907994, "compression_ratio": 1.3216783216783217, "no_speech_prob": 1.4282474694482516e-05}, {"id": 398, "seek": 208556, "start": 2107.44, "end": 2112.92, "text": " Think Python 2, second edition by Alan Downey.", "tokens": [6557, 15329, 568, 11, 1150, 11377, 538, 16442, 9506, 2030, 13], "temperature": 0.0, "avg_logprob": -0.21733900478907994, "compression_ratio": 1.3216783216783217, "no_speech_prob": 1.4282474694482516e-05}, {"id": 399, "seek": 211292, "start": 2112.92, "end": 2120.44, "text": " All right. Install using.", "tokens": [1057, 558, 13, 31982, 1228, 13], "temperature": 0.0, "avg_logprob": -0.21497546925264246, "compression_ratio": 1.385185185185185, "no_speech_prob": 9.36809738050215e-06}, {"id": 400, "seek": 211292, "start": 2120.44, "end": 2125.2000000000003, "text": " Or. To the hyphen or underscore.", "tokens": [1610, 13, 1407, 264, 2477, 47059, 420, 37556, 13], "temperature": 0.0, "avg_logprob": -0.21497546925264246, "compression_ratio": 1.385185185185185, "no_speech_prob": 9.36809738050215e-06}, {"id": 401, "seek": 211292, "start": 2125.2000000000003, "end": 2137.16, "text": " Yeah, so this is a this is our first little tricky issue, which is that hyphen and underscore are a special character in Python.", "tokens": [865, 11, 370, 341, 307, 257, 341, 307, 527, 700, 707, 12414, 2734, 11, 597, 307, 300, 2477, 47059, 293, 37556, 366, 257, 2121, 2517, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.21497546925264246, "compression_ratio": 1.385185185185185, "no_speech_prob": 9.36809738050215e-06}, {"id": 402, "seek": 213716, "start": 2137.16, "end": 2143.56, "text": " Python modules can't have a hyphen hyphen and I don't think can have an underscore.", "tokens": [15329, 16679, 393, 380, 362, 257, 2477, 47059, 2477, 47059, 293, 286, 500, 380, 519, 393, 362, 364, 37556, 13], "temperature": 0.0, "avg_logprob": -0.13492814114219265, "compression_ratio": 1.6607142857142858, "no_speech_prob": 6.438285709009506e-06}, {"id": 403, "seek": 213716, "start": 2143.56, "end": 2148.64, "text": " At least you don't normally see them. So we actually are going to have a different name.", "tokens": [1711, 1935, 291, 500, 380, 5646, 536, 552, 13, 407, 321, 767, 366, 516, 281, 362, 257, 819, 1315, 13], "temperature": 0.0, "avg_logprob": -0.13492814114219265, "compression_ratio": 1.6607142857142858, "no_speech_prob": 6.438285709009506e-06}, {"id": 404, "seek": 213716, "start": 2148.64, "end": 2157.3599999999997, "text": " So ideally, I wouldn't have picked a name with an underscore because that's the only basically the only character that has this weirdness.", "tokens": [407, 22915, 11, 286, 2759, 380, 362, 6183, 257, 1315, 365, 364, 37556, 570, 300, 311, 264, 787, 1936, 264, 787, 2517, 300, 575, 341, 3657, 1287, 13], "temperature": 0.0, "avg_logprob": -0.13492814114219265, "compression_ratio": 1.6607142857142858, "no_speech_prob": 6.438285709009506e-06}, {"id": 405, "seek": 213716, "start": 2157.3599999999997, "end": 2163.48, "text": " That's OK. So to fix this, we have to change it in settings.", "tokens": [663, 311, 2264, 13, 407, 281, 3191, 341, 11, 321, 362, 281, 1319, 309, 294, 6257, 13], "temperature": 0.0, "avg_logprob": -0.13492814114219265, "compression_ratio": 1.6607142857142858, "no_speech_prob": 6.438285709009506e-06}, {"id": 406, "seek": 216348, "start": 2163.48, "end": 2168.0, "text": " We've got any to say that we've actually got two different things.", "tokens": [492, 600, 658, 604, 281, 584, 300, 321, 600, 767, 658, 732, 819, 721, 13], "temperature": 0.0, "avg_logprob": -0.28370645046234133, "compression_ratio": 1.6157635467980296, "no_speech_prob": 4.157126568316016e-06}, {"id": 407, "seek": 216348, "start": 2168.0, "end": 2180.88, "text": " So the lip name is actually, I guess, in B, dev hyphen cards and then the lip path is actually in B, dev underscore cards.", "tokens": [407, 264, 8280, 1315, 307, 767, 11, 286, 2041, 11, 294, 363, 11, 1905, 2477, 47059, 5632, 293, 550, 264, 8280, 3100, 307, 767, 294, 363, 11, 1905, 37556, 5632, 13], "temperature": 0.0, "avg_logprob": -0.28370645046234133, "compression_ratio": 1.6157635467980296, "no_speech_prob": 4.157126568316016e-06}, {"id": 408, "seek": 216348, "start": 2180.88, "end": 2192.36, "text": " That's a little bit confusing. This percent S business is part of the thing from the standard Python standard library called config Plaza.", "tokens": [663, 311, 257, 707, 857, 13181, 13, 639, 3043, 318, 1606, 307, 644, 295, 264, 551, 490, 264, 3832, 15329, 3832, 6405, 1219, 6662, 41890, 13], "temperature": 0.0, "avg_logprob": -0.28370645046234133, "compression_ratio": 1.6157635467980296, "no_speech_prob": 4.157126568316016e-06}, {"id": 409, "seek": 219236, "start": 2192.36, "end": 2196.8, "text": " It just copies the variables from user and that name up here.", "tokens": [467, 445, 14341, 264, 9102, 490, 4195, 293, 300, 1315, 493, 510, 13], "temperature": 0.0, "avg_logprob": -0.17521310231042286, "compression_ratio": 1.3988439306358382, "no_speech_prob": 1.933260818987037e-06}, {"id": 410, "seek": 219236, "start": 2196.8, "end": 2201.92, "text": " You can override them if you like. All right.", "tokens": [509, 393, 42321, 552, 498, 291, 411, 13, 1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.17521310231042286, "compression_ratio": 1.3988439306358382, "no_speech_prob": 1.933260818987037e-06}, {"id": 411, "seek": 219236, "start": 2201.92, "end": 2207.52, "text": " Should we maybe have a look at the documentation now? OK.", "tokens": [6454, 321, 1310, 362, 257, 574, 412, 264, 14333, 586, 30, 2264, 13], "temperature": 0.0, "avg_logprob": -0.17521310231042286, "compression_ratio": 1.3988439306358382, "no_speech_prob": 1.933260818987037e-06}, {"id": 412, "seek": 219236, "start": 2207.52, "end": 2215.7200000000003, "text": " So to preview your documentation, you can type in B, dev underscore preview.", "tokens": [407, 281, 14281, 428, 14333, 11, 291, 393, 2010, 294, 363, 11, 1905, 37556, 14281, 13], "temperature": 0.0, "avg_logprob": -0.17521310231042286, "compression_ratio": 1.3988439306358382, "no_speech_prob": 1.933260818987037e-06}, {"id": 413, "seek": 221572, "start": 2215.72, "end": 2225.4399999999996, "text": " And that will fire up a that will fire up a quarter web server for you.", "tokens": [400, 300, 486, 2610, 493, 257, 300, 486, 2610, 493, 257, 6555, 3670, 7154, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.11228419003421314, "compression_ratio": 1.5562130177514792, "no_speech_prob": 9.222896551364101e-06}, {"id": 414, "seek": 221572, "start": 2225.4399999999996, "end": 2232.3599999999997, "text": " And as you can see, it will automatically install quarter if you don't already have it.", "tokens": [400, 382, 291, 393, 536, 11, 309, 486, 6772, 3625, 6555, 498, 291, 500, 380, 1217, 362, 309, 13], "temperature": 0.0, "avg_logprob": -0.11228419003421314, "compression_ratio": 1.5562130177514792, "no_speech_prob": 9.222896551364101e-06}, {"id": 415, "seek": 221572, "start": 2232.3599999999997, "end": 2241.08, "text": " If you're on Linux, it'll do it automatically. I'm on Mac, though, so it's going to pop up this window.", "tokens": [759, 291, 434, 322, 18734, 11, 309, 603, 360, 309, 6772, 13, 286, 478, 322, 5707, 11, 1673, 11, 370, 309, 311, 516, 281, 1665, 493, 341, 4910, 13], "temperature": 0.0, "avg_logprob": -0.11228419003421314, "compression_ratio": 1.5562130177514792, "no_speech_prob": 9.222896551364101e-06}, {"id": 416, "seek": 224108, "start": 2241.08, "end": 2247.4, "text": " Quarter is updated recently, regularly, so it's not a bad idea to make sure you've got the latest version anyway.", "tokens": [43794, 307, 10588, 3938, 11, 11672, 11, 370, 309, 311, 406, 257, 1578, 1558, 281, 652, 988, 291, 600, 658, 264, 6792, 3037, 4033, 13], "temperature": 0.0, "avg_logprob": -0.12297808272497994, "compression_ratio": 1.7035573122529644, "no_speech_prob": 5.014602720621042e-06}, {"id": 417, "seek": 224108, "start": 2247.4, "end": 2252.08, "text": " All right, so let's run that again now that it's installed.", "tokens": [1057, 558, 11, 370, 718, 311, 1190, 300, 797, 586, 300, 309, 311, 8899, 13], "temperature": 0.0, "avg_logprob": -0.12297808272497994, "compression_ratio": 1.7035573122529644, "no_speech_prob": 5.014602720621042e-06}, {"id": 418, "seek": 224108, "start": 2252.08, "end": 2261.64, "text": " So that's going to build each of my pages. And then what's going to happen is it's going to sit running in the background and and it's just going to sit there running a little server on port 3000.", "tokens": [407, 300, 311, 516, 281, 1322, 1184, 295, 452, 7183, 13, 400, 550, 437, 311, 516, 281, 1051, 307, 309, 311, 516, 281, 1394, 2614, 294, 264, 3678, 293, 293, 309, 311, 445, 516, 281, 1394, 456, 2614, 257, 707, 7154, 322, 2436, 20984, 13], "temperature": 0.0, "avg_logprob": -0.12297808272497994, "compression_ratio": 1.7035573122529644, "no_speech_prob": 5.014602720621042e-06}, {"id": 419, "seek": 224108, "start": 2261.64, "end": 2269.16, "text": " So if we now go to click on there, it's popped it open here.", "tokens": [407, 498, 321, 586, 352, 281, 2052, 322, 456, 11, 309, 311, 21545, 309, 1269, 510, 13], "temperature": 0.0, "avg_logprob": -0.12297808272497994, "compression_ratio": 1.7035573122529644, "no_speech_prob": 5.014602720621042e-06}, {"id": 420, "seek": 226916, "start": 2269.16, "end": 2273.04, "text": " And so, you know, let's take a look. So and be dev cards.", "tokens": [400, 370, 11, 291, 458, 11, 718, 311, 747, 257, 574, 13, 407, 293, 312, 1905, 5632, 13], "temperature": 0.0, "avg_logprob": -0.21015446160429269, "compression_ratio": 1.5544554455445545, "no_speech_prob": 4.029203410027549e-06}, {"id": 421, "seek": 226916, "start": 2273.04, "end": 2278.08, "text": " If you let me pop this on the other screens, we can compare them more easily.", "tokens": [759, 291, 718, 385, 1665, 341, 322, 264, 661, 11171, 11, 321, 393, 6794, 552, 544, 3612, 13], "temperature": 0.0, "avg_logprob": -0.21015446160429269, "compression_ratio": 1.5544554455445545, "no_speech_prob": 4.029203410027549e-06}, {"id": 422, "seek": 226916, "start": 2278.08, "end": 2284.2, "text": " So you can see how the heading, the summary, where it all is.", "tokens": [407, 291, 393, 536, 577, 264, 9864, 11, 264, 12691, 11, 689, 309, 439, 307, 13], "temperature": 0.0, "avg_logprob": -0.21015446160429269, "compression_ratio": 1.5544554455445545, "no_speech_prob": 4.029203410027549e-06}, {"id": 423, "seek": 226916, "start": 2284.2, "end": 2287.3999999999996, "text": " Look at the card page. That's interesting. Yeah.", "tokens": [2053, 412, 264, 2920, 3028, 13, 663, 311, 1880, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.21015446160429269, "compression_ratio": 1.5544554455445545, "no_speech_prob": 4.029203410027549e-06}, {"id": 424, "seek": 226916, "start": 2287.3999999999996, "end": 2294.3999999999996, "text": " So let's head over here and compare it to our card page. All right.", "tokens": [407, 718, 311, 1378, 670, 510, 293, 6794, 309, 281, 527, 2920, 3028, 13, 1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.21015446160429269, "compression_ratio": 1.5544554455445545, "no_speech_prob": 4.029203410027549e-06}, {"id": 425, "seek": 229440, "start": 2294.4, "end": 2300.28, "text": " OK, so you can see all this stuff's been hidden. This is info that we've got.", "tokens": [2264, 11, 370, 291, 393, 536, 439, 341, 1507, 311, 668, 7633, 13, 639, 307, 13614, 300, 321, 600, 658, 13], "temperature": 0.0, "avg_logprob": -0.09219472966295608, "compression_ratio": 1.613861386138614, "no_speech_prob": 3.6119135984336026e-06}, {"id": 426, "seek": 229440, "start": 2300.28, "end": 2303.52, "text": " And as you can see, we've got the auto generated docs here.", "tokens": [400, 382, 291, 393, 536, 11, 321, 600, 658, 264, 8399, 10833, 45623, 510, 13], "temperature": 0.0, "avg_logprob": -0.09219472966295608, "compression_ratio": 1.613861386138614, "no_speech_prob": 3.6119135984336026e-06}, {"id": 427, "seek": 229440, "start": 2303.52, "end": 2306.7200000000003, "text": " OK, now this is a mistake. This shouldn't be appearing.", "tokens": [2264, 11, 586, 341, 307, 257, 6146, 13, 639, 4659, 380, 312, 19870, 13], "temperature": 0.0, "avg_logprob": -0.09219472966295608, "compression_ratio": 1.613861386138614, "no_speech_prob": 3.6119135984336026e-06}, {"id": 428, "seek": 229440, "start": 2306.7200000000003, "end": 2312.2000000000003, "text": " And the reason why is that it's not being exported because I didn't export it.", "tokens": [400, 264, 1778, 983, 307, 300, 309, 311, 406, 885, 42055, 570, 286, 994, 380, 10725, 309, 13], "temperature": 0.0, "avg_logprob": -0.09219472966295608, "compression_ratio": 1.613861386138614, "no_speech_prob": 3.6119135984336026e-06}, {"id": 429, "seek": 229440, "start": 2312.2000000000003, "end": 2317.2400000000002, "text": " So I'll copy this export here and I'll paste it here.", "tokens": [407, 286, 603, 5055, 341, 10725, 510, 293, 286, 603, 9163, 309, 510, 13], "temperature": 0.0, "avg_logprob": -0.09219472966295608, "compression_ratio": 1.613861386138614, "no_speech_prob": 3.6119135984336026e-06}, {"id": 430, "seek": 231724, "start": 2317.24, "end": 2327.8799999999997, "text": " There we go. And then I've saved. I just hit save and you can see that it's automatically done this here.", "tokens": [821, 321, 352, 13, 400, 550, 286, 600, 6624, 13, 286, 445, 2045, 3155, 293, 291, 393, 536, 300, 309, 311, 6772, 1096, 341, 510, 13], "temperature": 0.0, "avg_logprob": -0.2190379909440583, "compression_ratio": 1.610236220472441, "no_speech_prob": 1.7880196310215979e-06}, {"id": 431, "seek": 231724, "start": 2327.8799999999997, "end": 2331.8399999999997, "text": " And because these are like a start with an underscore, they're like considered hidden by Python.", "tokens": [400, 570, 613, 366, 411, 257, 722, 365, 364, 37556, 11, 436, 434, 411, 4888, 7633, 538, 15329, 13], "temperature": 0.0, "avg_logprob": -0.2190379909440583, "compression_ratio": 1.610236220472441, "no_speech_prob": 1.7880196310215979e-06}, {"id": 432, "seek": 231724, "start": 2331.8399999999997, "end": 2336.24, "text": " So it doesn't automatically create show doc.", "tokens": [407, 309, 1177, 380, 6772, 1884, 855, 3211, 13], "temperature": 0.0, "avg_logprob": -0.2190379909440583, "compression_ratio": 1.610236220472441, "no_speech_prob": 1.7880196310215979e-06}, {"id": 433, "seek": 231724, "start": 2336.24, "end": 2344.3199999999997, "text": " We kind of don't do that because, you know, we think a lot of people would not like it's not that we're creating really something for users called Dundee equals.", "tokens": [492, 733, 295, 500, 380, 360, 300, 570, 11, 291, 458, 11, 321, 519, 257, 688, 295, 561, 576, 406, 411, 309, 311, 406, 300, 321, 434, 4084, 534, 746, 337, 5022, 1219, 413, 997, 1653, 6915, 13], "temperature": 0.0, "avg_logprob": -0.2190379909440583, "compression_ratio": 1.610236220472441, "no_speech_prob": 1.7880196310215979e-06}, {"id": 434, "seek": 234432, "start": 2344.32, "end": 2351.4, "text": " So like you could say show doc if you felt that your users are quite advanced and would know what that meant.", "tokens": [407, 411, 291, 727, 584, 855, 3211, 498, 291, 2762, 300, 428, 5022, 366, 1596, 7339, 293, 576, 458, 437, 300, 4140, 13], "temperature": 0.0, "avg_logprob": -0.10154116265127593, "compression_ratio": 1.7142857142857142, "no_speech_prob": 4.936788172926754e-06}, {"id": 435, "seek": 234432, "start": 2351.4, "end": 2357.6800000000003, "text": " You know, you do it something like this and it would pop up like so.", "tokens": [509, 458, 11, 291, 360, 309, 746, 411, 341, 293, 309, 576, 1665, 493, 411, 370, 13], "temperature": 0.0, "avg_logprob": -0.10154116265127593, "compression_ratio": 1.7142857142857142, "no_speech_prob": 4.936788172926754e-06}, {"id": 436, "seek": 234432, "start": 2357.6800000000003, "end": 2361.48, "text": " You know, personally, I try not to expect my users to understand stuff like that.", "tokens": [509, 458, 11, 5665, 11, 286, 853, 406, 281, 2066, 452, 5022, 281, 1223, 1507, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.10154116265127593, "compression_ratio": 1.7142857142857142, "no_speech_prob": 4.936788172926754e-06}, {"id": 437, "seek": 234432, "start": 2361.48, "end": 2366.0, "text": " So I would rather just kind of put in some markdown, I think.", "tokens": [407, 286, 576, 2831, 445, 733, 295, 829, 294, 512, 1491, 5093, 11, 286, 519, 13], "temperature": 0.0, "avg_logprob": -0.10154116265127593, "compression_ratio": 1.7142857142857142, "no_speech_prob": 4.936788172926754e-06}, {"id": 438, "seek": 234432, "start": 2366.0, "end": 2370.6000000000004, "text": " And in fact, we could make all this a little bit shorter by then putting all this stuff together.", "tokens": [400, 294, 1186, 11, 321, 727, 652, 439, 341, 257, 707, 857, 11639, 538, 550, 3372, 439, 341, 1507, 1214, 13], "temperature": 0.0, "avg_logprob": -0.10154116265127593, "compression_ratio": 1.7142857142857142, "no_speech_prob": 4.936788172926754e-06}, {"id": 439, "seek": 237060, "start": 2370.6, "end": 2378.88, "text": " So shift and merges a bit more concise.", "tokens": [407, 5513, 293, 3551, 2880, 257, 857, 544, 44882, 13], "temperature": 0.0, "avg_logprob": -0.18961466620950138, "compression_ratio": 1.6108108108108108, "no_speech_prob": 3.2376574381487444e-06}, {"id": 440, "seek": 237060, "start": 2378.88, "end": 2383.3199999999997, "text": " Test of less than. And this is this is really cool.", "tokens": [9279, 295, 1570, 813, 13, 400, 341, 307, 341, 307, 534, 1627, 13], "temperature": 0.0, "avg_logprob": -0.18961466620950138, "compression_ratio": 1.6108108108108108, "no_speech_prob": 3.2376574381487444e-06}, {"id": 441, "seek": 237060, "start": 2383.3199999999997, "end": 2385.12, "text": " I mean, I find this part to be really nice.", "tokens": [286, 914, 11, 286, 915, 341, 644, 281, 312, 534, 1481, 13], "temperature": 0.0, "avg_logprob": -0.18961466620950138, "compression_ratio": 1.6108108108108108, "no_speech_prob": 3.2376574381487444e-06}, {"id": 442, "seek": 237060, "start": 2385.12, "end": 2390.88, "text": " Like you can choose which tests you want to show to users and which ones you don't.", "tokens": [1743, 291, 393, 2826, 597, 6921, 291, 528, 281, 855, 281, 5022, 293, 597, 2306, 291, 500, 380, 13], "temperature": 0.0, "avg_logprob": -0.18961466620950138, "compression_ratio": 1.6108108108108108, "no_speech_prob": 3.2376574381487444e-06}, {"id": 443, "seek": 237060, "start": 2390.88, "end": 2395.04, "text": " Yeah, because it makes sense to do it. And sometimes it doesn't make sense to.", "tokens": [865, 11, 570, 309, 1669, 2020, 281, 360, 309, 13, 400, 2171, 309, 1177, 380, 652, 2020, 281, 13], "temperature": 0.0, "avg_logprob": -0.18961466620950138, "compression_ratio": 1.6108108108108108, "no_speech_prob": 3.2376574381487444e-06}, {"id": 444, "seek": 239504, "start": 2395.04, "end": 2401.88, "text": " Yeah. In fact, you know, let's just for example, let's say that, you know, we just want to show them one test of each.", "tokens": [865, 13, 682, 1186, 11, 291, 458, 11, 718, 311, 445, 337, 1365, 11, 718, 311, 584, 300, 11, 291, 458, 11, 321, 445, 528, 281, 855, 552, 472, 1500, 295, 1184, 13], "temperature": 0.0, "avg_logprob": -0.1370963200484172, "compression_ratio": 1.6964285714285714, "no_speech_prob": 3.2376385661336826e-06}, {"id": 445, "seek": 239504, "start": 2401.88, "end": 2405.08, "text": " It is fine like you don't necessarily want to overwhelm them with examples.", "tokens": [467, 307, 2489, 411, 291, 500, 380, 4725, 528, 281, 9103, 76, 552, 365, 5110, 13], "temperature": 0.0, "avg_logprob": -0.1370963200484172, "compression_ratio": 1.6964285714285714, "no_speech_prob": 3.2376385661336826e-06}, {"id": 446, "seek": 239504, "start": 2405.08, "end": 2415.92, "text": " So in that case, I would write hide here and these are just the actual tests rather than rather than showing examples.", "tokens": [407, 294, 300, 1389, 11, 286, 576, 2464, 6479, 510, 293, 613, 366, 445, 264, 3539, 6921, 2831, 813, 2831, 813, 4099, 5110, 13], "temperature": 0.0, "avg_logprob": -0.1370963200484172, "compression_ratio": 1.6964285714285714, "no_speech_prob": 3.2376385661336826e-06}, {"id": 447, "seek": 239504, "start": 2415.92, "end": 2422.08, "text": " It's probably not a bad way. Just one example of most of them. OK.", "tokens": [467, 311, 1391, 406, 257, 1578, 636, 13, 1449, 472, 1365, 295, 881, 295, 552, 13, 2264, 13], "temperature": 0.0, "avg_logprob": -0.1370963200484172, "compression_ratio": 1.6964285714285714, "no_speech_prob": 3.2376385661336826e-06}, {"id": 448, "seek": 242208, "start": 2422.08, "end": 2426.68, "text": " So I really like the way you get this kind of auto generated documentation.", "tokens": [407, 286, 534, 411, 264, 636, 291, 483, 341, 733, 295, 8399, 10833, 14333, 13], "temperature": 0.0, "avg_logprob": -0.11802417827102374, "compression_ratio": 1.6975806451612903, "no_speech_prob": 6.961131475691218e-06}, {"id": 449, "seek": 242208, "start": 2426.68, "end": 2434.72, "text": " I mean, now that I kind of know what the docs are going to look like, I don't use it that much myself unless I'm doing more advanced websites.", "tokens": [286, 914, 11, 586, 300, 286, 733, 295, 458, 437, 264, 45623, 366, 516, 281, 574, 411, 11, 286, 500, 380, 764, 309, 300, 709, 2059, 5969, 286, 478, 884, 544, 7339, 12891, 13], "temperature": 0.0, "avg_logprob": -0.11802417827102374, "compression_ratio": 1.6975806451612903, "no_speech_prob": 6.961131475691218e-06}, {"id": 450, "seek": 242208, "start": 2434.72, "end": 2440.3199999999997, "text": " An example of a more advanced website would be the NBDEV homepage.", "tokens": [1107, 1365, 295, 257, 544, 7339, 3144, 576, 312, 264, 426, 33, 22296, 53, 31301, 13], "temperature": 0.0, "avg_logprob": -0.11802417827102374, "compression_ratio": 1.6975806451612903, "no_speech_prob": 6.961131475691218e-06}, {"id": 451, "seek": 242208, "start": 2440.3199999999997, "end": 2445.2, "text": " The NBDEV homepage is actually generated from a notebook.", "tokens": [440, 426, 33, 22296, 53, 31301, 307, 767, 10833, 490, 257, 21060, 13], "temperature": 0.0, "avg_logprob": -0.11802417827102374, "compression_ratio": 1.6975806451612903, "no_speech_prob": 6.961131475691218e-06}, {"id": 452, "seek": 242208, "start": 2445.2, "end": 2450.4, "text": " And so that one, it was certainly helpful to have the auto generated preview.", "tokens": [400, 370, 300, 472, 11, 309, 390, 3297, 4961, 281, 362, 264, 8399, 10833, 14281, 13], "temperature": 0.0, "avg_logprob": -0.11802417827102374, "compression_ratio": 1.6975806451612903, "no_speech_prob": 6.961131475691218e-06}, {"id": 453, "seek": 245040, "start": 2450.4, "end": 2453.2000000000003, "text": " Shall we do you want to do you want to show?", "tokens": [12128, 321, 360, 291, 528, 281, 360, 291, 528, 281, 855, 30], "temperature": 0.0, "avg_logprob": -0.31507927576700845, "compression_ratio": 1.7415254237288136, "no_speech_prob": 1.7501737602287903e-05}, {"id": 454, "seek": 245040, "start": 2453.2000000000003, "end": 2459.52, "text": " Do you want to talk about since we spent some time on tests, you want to kind of how do we know?", "tokens": [1144, 291, 528, 281, 751, 466, 1670, 321, 4418, 512, 565, 322, 6921, 11, 291, 528, 281, 733, 295, 577, 360, 321, 458, 30], "temperature": 0.0, "avg_logprob": -0.31507927576700845, "compression_ratio": 1.7415254237288136, "no_speech_prob": 1.7501737602287903e-05}, {"id": 455, "seek": 245040, "start": 2459.52, "end": 2464.08, "text": " Do you see I now or should we do that? Sure. Do the deck first and then we'll do see.", "tokens": [1144, 291, 536, 286, 586, 420, 820, 321, 360, 300, 30, 4894, 13, 1144, 264, 9341, 700, 293, 550, 321, 603, 360, 536, 13], "temperature": 0.0, "avg_logprob": -0.31507927576700845, "compression_ratio": 1.7415254237288136, "no_speech_prob": 1.7501737602287903e-05}, {"id": 456, "seek": 245040, "start": 2464.08, "end": 2468.2400000000002, "text": " Yeah, we could. But you can show local tests. I think the local tests, of course, have got about those.", "tokens": [865, 11, 321, 727, 13, 583, 291, 393, 855, 2654, 6921, 13, 286, 519, 264, 2654, 6921, 11, 295, 1164, 11, 362, 658, 466, 729, 13], "temperature": 0.0, "avg_logprob": -0.31507927576700845, "compression_ratio": 1.7415254237288136, "no_speech_prob": 1.7501737602287903e-05}, {"id": 457, "seek": 245040, "start": 2468.2400000000002, "end": 2470.84, "text": " All right. So for local tests.", "tokens": [1057, 558, 13, 407, 337, 2654, 6921, 13], "temperature": 0.0, "avg_logprob": -0.31507927576700845, "compression_ratio": 1.7415254237288136, "no_speech_prob": 1.7501737602287903e-05}, {"id": 458, "seek": 245040, "start": 2470.84, "end": 2472.48, "text": " So I'm just going to run this in the background.", "tokens": [407, 286, 478, 445, 516, 281, 1190, 341, 294, 264, 3678, 13], "temperature": 0.0, "avg_logprob": -0.31507927576700845, "compression_ratio": 1.7415254237288136, "no_speech_prob": 1.7501737602287903e-05}, {"id": 459, "seek": 247248, "start": 2472.48, "end": 2481.04, "text": " We'll leave that running. So you just type NBDEV underscore test and that's going to basically make sure all of your tests pass.", "tokens": [492, 603, 1856, 300, 2614, 13, 407, 291, 445, 2010, 426, 33, 22296, 53, 37556, 1500, 293, 300, 311, 516, 281, 1936, 652, 988, 439, 295, 428, 6921, 1320, 13], "temperature": 0.0, "avg_logprob": -0.1646059737808403, "compression_ratio": 1.5167464114832536, "no_speech_prob": 4.9368291001883335e-06}, {"id": 460, "seek": 247248, "start": 2481.04, "end": 2483.64, "text": " And we don't like to give you more information than needed.", "tokens": [400, 321, 500, 380, 411, 281, 976, 291, 544, 1589, 813, 2978, 13], "temperature": 0.0, "avg_logprob": -0.1646059737808403, "compression_ratio": 1.5167464114832536, "no_speech_prob": 4.9368291001883335e-06}, {"id": 461, "seek": 247248, "start": 2483.64, "end": 2487.52, "text": " So it just tells you if they do. Let's break one.", "tokens": [407, 309, 445, 5112, 291, 498, 436, 360, 13, 961, 311, 1821, 472, 13], "temperature": 0.0, "avg_logprob": -0.1646059737808403, "compression_ratio": 1.5167464114832536, "no_speech_prob": 4.9368291001883335e-06}, {"id": 462, "seek": 247248, "start": 2487.52, "end": 2497.28, "text": " Save that. And so you can see now it tells you that in zero zero card cell 20.", "tokens": [15541, 300, 13, 400, 370, 291, 393, 536, 586, 309, 5112, 291, 300, 294, 4018, 4018, 2920, 2815, 945, 13], "temperature": 0.0, "avg_logprob": -0.1646059737808403, "compression_ratio": 1.5167464114832536, "no_speech_prob": 4.9368291001883335e-06}, {"id": 463, "seek": 249728, "start": 2497.28, "end": 2506.1200000000003, "text": " My colors could be better, but I'll fix that night sometime shows you exactly where the problem occurs and it expected three of hearts and it got a three of diamonds.", "tokens": [1222, 4577, 727, 312, 1101, 11, 457, 286, 603, 3191, 300, 1818, 15053, 3110, 291, 2293, 689, 264, 1154, 11843, 293, 309, 5176, 1045, 295, 8852, 293, 309, 658, 257, 1045, 295, 22612, 13], "temperature": 0.0, "avg_logprob": -0.19327219327290854, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.2217500625411049e-05}, {"id": 464, "seek": 249728, "start": 2506.1200000000003, "end": 2511.6400000000003, "text": " And you can see it even uses the correct representation thanks to fast core test.", "tokens": [400, 291, 393, 536, 309, 754, 4960, 264, 3006, 10290, 3231, 281, 2370, 4965, 1500, 13], "temperature": 0.0, "avg_logprob": -0.19327219327290854, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.2217500625411049e-05}, {"id": 465, "seek": 249728, "start": 2511.6400000000003, "end": 2515.28, "text": " And at the end, it'll summarize a list of any notebooks that failed.", "tokens": [400, 412, 264, 917, 11, 309, 603, 20858, 257, 1329, 295, 604, 43782, 300, 7612, 13], "temperature": 0.0, "avg_logprob": -0.19327219327290854, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.2217500625411049e-05}, {"id": 466, "seek": 249728, "start": 2515.28, "end": 2521.92, "text": " So we'll go and fix that, save it, rerun our test. There we go.", "tokens": [407, 321, 603, 352, 293, 3191, 300, 11, 3155, 309, 11, 43819, 409, 527, 1500, 13, 821, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.19327219327290854, "compression_ratio": 1.5809128630705394, "no_speech_prob": 1.2217500625411049e-05}, {"id": 467, "seek": 252192, "start": 2521.92, "end": 2530.16, "text": " And for this situation to see what you can pass in, it'll run the tests in parallel using as many workers as you have CPUs by default.", "tokens": [400, 337, 341, 2590, 281, 536, 437, 291, 393, 1320, 294, 11, 309, 603, 1190, 264, 6921, 294, 8952, 1228, 382, 867, 5600, 382, 291, 362, 13199, 82, 538, 7576, 13], "temperature": 0.0, "avg_logprob": -0.1389222692270748, "compression_ratio": 1.6093189964157706, "no_speech_prob": 7.888850632298272e-06}, {"id": 468, "seek": 252192, "start": 2530.16, "end": 2535.36, "text": " You can see how long they take to run. You can look at just particular files, so forth.", "tokens": [509, 393, 536, 577, 938, 436, 747, 281, 1190, 13, 509, 393, 574, 412, 445, 1729, 7098, 11, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.1389222692270748, "compression_ratio": 1.6093189964157706, "no_speech_prob": 7.888850632298272e-06}, {"id": 469, "seek": 252192, "start": 2535.36, "end": 2541.64, "text": " There's lots of options you can do it. I was going to say, when you're using NBDEV and you're debugging in real life,", "tokens": [821, 311, 3195, 295, 3956, 291, 393, 360, 309, 13, 286, 390, 516, 281, 584, 11, 562, 291, 434, 1228, 426, 33, 22296, 53, 293, 291, 434, 45592, 294, 957, 993, 11], "temperature": 0.0, "avg_logprob": -0.1389222692270748, "compression_ratio": 1.6093189964157706, "no_speech_prob": 7.888850632298272e-06}, {"id": 470, "seek": 252192, "start": 2541.64, "end": 2547.84, "text": " I think it's worth it to mention the hot key for reload and run all.", "tokens": [286, 519, 309, 311, 3163, 309, 281, 2152, 264, 2368, 2141, 337, 25628, 293, 1190, 439, 13], "temperature": 0.0, "avg_logprob": -0.1389222692270748, "compression_ratio": 1.6093189964157706, "no_speech_prob": 7.888850632298272e-06}, {"id": 471, "seek": 252192, "start": 2547.84, "end": 2550.48, "text": " Yeah, definitely. That's really useful.", "tokens": [865, 11, 2138, 13, 663, 311, 534, 4420, 13], "temperature": 0.0, "avg_logprob": -0.1389222692270748, "compression_ratio": 1.6093189964157706, "no_speech_prob": 7.888850632298272e-06}, {"id": 472, "seek": 255048, "start": 2550.48, "end": 2555.56, "text": " Yeah, exactly. So you want because when you run NBDEV test, it's going to run your notebook from top to bottom.", "tokens": [865, 11, 2293, 13, 407, 291, 528, 570, 562, 291, 1190, 426, 33, 22296, 53, 1500, 11, 309, 311, 516, 281, 1190, 428, 21060, 490, 1192, 281, 2767, 13], "temperature": 0.0, "avg_logprob": -0.10386307343192723, "compression_ratio": 1.6320754716981132, "no_speech_prob": 1.0782446224766318e-05}, {"id": 473, "seek": 255048, "start": 2555.56, "end": 2562.32, "text": " So to rerun your notebook from top to bottom, if you just hit zero zero, that restarts the kernel.", "tokens": [407, 281, 43819, 409, 428, 21060, 490, 1192, 281, 2767, 11, 498, 291, 445, 2045, 4018, 4018, 11, 300, 1472, 11814, 264, 28256, 13], "temperature": 0.0, "avg_logprob": -0.10386307343192723, "compression_ratio": 1.6320754716981132, "no_speech_prob": 1.0782446224766318e-05}, {"id": 474, "seek": 255048, "start": 2562.32, "end": 2571.0, "text": " And then there isn't a hot key built in for running all cells, but it's a good idea to add one by hitting help edit keyboard shortcuts.", "tokens": [400, 550, 456, 1943, 380, 257, 2368, 2141, 3094, 294, 337, 2614, 439, 5438, 11, 457, 309, 311, 257, 665, 1558, 281, 909, 472, 538, 8850, 854, 8129, 10186, 34620, 13], "temperature": 0.0, "avg_logprob": -0.10386307343192723, "compression_ratio": 1.6320754716981132, "no_speech_prob": 1.0782446224766318e-05}, {"id": 475, "seek": 257100, "start": 2571.0, "end": 2583.92, "text": " Let's run them all and we're all good to go. A lot of people, including me, like to explore very interactively in notebooks and often go back up and rerun a cell and change things and see what happens.", "tokens": [961, 311, 1190, 552, 439, 293, 321, 434, 439, 665, 281, 352, 13, 316, 688, 295, 561, 11, 3009, 385, 11, 411, 281, 6839, 588, 4648, 3413, 294, 43782, 293, 2049, 352, 646, 493, 293, 43819, 409, 257, 2815, 293, 1319, 721, 293, 536, 437, 2314, 13], "temperature": 0.0, "avg_logprob": -0.09361665145210597, "compression_ratio": 1.5990990990990992, "no_speech_prob": 3.3403509860363556e-06}, {"id": 476, "seek": 257100, "start": 2583.92, "end": 2596.12, "text": " But that's a very good idea from time to time to hit zero zero and then rerun all the cells or at least to head over to your terminal and run NBDEV test.", "tokens": [583, 300, 311, 257, 588, 665, 1558, 490, 565, 281, 565, 281, 2045, 4018, 4018, 293, 550, 43819, 409, 439, 264, 5438, 420, 412, 1935, 281, 1378, 670, 281, 428, 14709, 293, 1190, 426, 33, 22296, 53, 1500, 13], "temperature": 0.0, "avg_logprob": -0.09361665145210597, "compression_ratio": 1.5990990990990992, "no_speech_prob": 3.3403509860363556e-06}, {"id": 477, "seek": 259612, "start": 2596.12, "end": 2606.04, "text": " Yeah. And another thing is like, you know, like when you get a failed test in your terminal, you do what I do, just sharing my workflow is I come back and I do restart run all.", "tokens": [865, 13, 400, 1071, 551, 307, 411, 11, 291, 458, 11, 411, 562, 291, 483, 257, 7612, 1500, 294, 428, 14709, 11, 291, 360, 437, 286, 360, 11, 445, 5414, 452, 20993, 307, 286, 808, 646, 293, 286, 360, 21022, 1190, 439, 13], "temperature": 0.0, "avg_logprob": -0.1815557212473076, "compression_ratio": 1.6584362139917694, "no_speech_prob": 2.2958413410378853e-06}, {"id": 478, "seek": 259612, "start": 2606.04, "end": 2612.72, "text": " I get the error in the notebook and then I hit the interactive debugger like the percent percent debug and I kind of go from there.", "tokens": [286, 483, 264, 6713, 294, 264, 21060, 293, 550, 286, 2045, 264, 15141, 24083, 1321, 411, 264, 3043, 3043, 24083, 293, 286, 733, 295, 352, 490, 456, 13], "temperature": 0.0, "avg_logprob": -0.1815557212473076, "compression_ratio": 1.6584362139917694, "no_speech_prob": 2.2958413410378853e-06}, {"id": 479, "seek": 259612, "start": 2612.72, "end": 2623.92, "text": " Yeah. What's going on? Yeah. So so just to explain, if we put a bug in here, you get an error.", "tokens": [865, 13, 708, 311, 516, 322, 30, 865, 13, 407, 370, 445, 281, 2903, 11, 498, 321, 829, 257, 7426, 294, 510, 11, 291, 483, 364, 6713, 13], "temperature": 0.0, "avg_logprob": -0.1815557212473076, "compression_ratio": 1.6584362139917694, "no_speech_prob": 2.2958413410378853e-06}, {"id": 480, "seek": 262392, "start": 2623.92, "end": 2630.96, "text": " You can hit percent debug and it will drop you into an interactive debugger, which is called PDB.", "tokens": [509, 393, 2045, 3043, 24083, 293, 309, 486, 3270, 291, 666, 364, 15141, 24083, 1321, 11, 597, 307, 1219, 10464, 33, 13], "temperature": 0.0, "avg_logprob": -0.08637236544960424, "compression_ratio": 1.6367521367521367, "no_speech_prob": 4.157258445047773e-06}, {"id": 481, "seek": 262392, "start": 2630.96, "end": 2638.08, "text": " It comes with Python and you can do things like find out the value of any variable like suit.", "tokens": [467, 1487, 365, 15329, 293, 291, 393, 360, 721, 411, 915, 484, 264, 2158, 295, 604, 7006, 411, 5722, 13], "temperature": 0.0, "avg_logprob": -0.08637236544960424, "compression_ratio": 1.6367521367521367, "no_speech_prob": 4.157258445047773e-06}, {"id": 482, "seek": 262392, "start": 2638.08, "end": 2643.96, "text": " You can find out the stack trace of where we are. You can get a listing of source code and so forth.", "tokens": [509, 393, 915, 484, 264, 8630, 13508, 295, 689, 321, 366, 13, 509, 393, 483, 257, 22161, 295, 4009, 3089, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.08637236544960424, "compression_ratio": 1.6367521367521367, "no_speech_prob": 4.157258445047773e-06}, {"id": 483, "seek": 262392, "start": 2643.96, "end": 2651.56, "text": " And you can basically write any Python expression you like, figure out how to fix the bug.", "tokens": [400, 291, 393, 1936, 2464, 604, 15329, 6114, 291, 411, 11, 2573, 484, 577, 281, 3191, 264, 7426, 13], "temperature": 0.0, "avg_logprob": -0.08637236544960424, "compression_ratio": 1.6367521367521367, "no_speech_prob": 4.157258445047773e-06}, {"id": 484, "seek": 265156, "start": 2651.56, "end": 2657.7599999999998, "text": " And away you go. All right, let's do a deck of cards.", "tokens": [400, 1314, 291, 352, 13, 1057, 558, 11, 718, 311, 360, 257, 9341, 295, 5632, 13], "temperature": 0.0, "avg_logprob": -0.13373524802071707, "compression_ratio": 1.5302325581395348, "no_speech_prob": 4.3567952161538415e-06}, {"id": 485, "seek": 265156, "start": 2657.7599999999998, "end": 2662.7999999999997, "text": " So we'll export this to something called deck.", "tokens": [407, 321, 603, 10725, 341, 281, 746, 1219, 9341, 13], "temperature": 0.0, "avg_logprob": -0.13373524802071707, "compression_ratio": 1.5302325581395348, "no_speech_prob": 4.3567952161538415e-06}, {"id": 486, "seek": 265156, "start": 2662.7999999999997, "end": 2670.4, "text": " So generally speaking, you know, in your second notebook, it's pretty likely you're going to want to import the stuff from your previous notebook.", "tokens": [407, 5101, 4124, 11, 291, 458, 11, 294, 428, 1150, 21060, 11, 309, 311, 1238, 3700, 291, 434, 516, 281, 528, 281, 974, 264, 1507, 490, 428, 3894, 21060, 13], "temperature": 0.0, "avg_logprob": -0.13373524802071707, "compression_ratio": 1.5302325581395348, "no_speech_prob": 4.3567952161538415e-06}, {"id": 487, "seek": 265156, "start": 2670.4, "end": 2677.16, "text": " And at the moment, I won't be able to do that. Actually, yes. Can I let's try it?", "tokens": [400, 412, 264, 1623, 11, 286, 1582, 380, 312, 1075, 281, 360, 300, 13, 5135, 11, 2086, 13, 1664, 286, 718, 311, 853, 309, 30], "temperature": 0.0, "avg_logprob": -0.13373524802071707, "compression_ratio": 1.5302325581395348, "no_speech_prob": 4.3567952161538415e-06}, {"id": 488, "seek": 267716, "start": 2677.16, "end": 2684.8799999999997, "text": " Maybe because you did an editable install. Oh, okay. And I think I got it wrong. Yeah. The card.", "tokens": [2704, 570, 291, 630, 364, 8129, 712, 3625, 13, 876, 11, 1392, 13, 400, 286, 519, 286, 658, 309, 2085, 13, 865, 13, 440, 2920, 13], "temperature": 0.0, "avg_logprob": -0.24582590120975104, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.1659138181130402e-05}, {"id": 489, "seek": 267716, "start": 2684.8799999999997, "end": 2688.7599999999998, "text": " Did I do a local install? I don't remember doing that. I guess I must have.", "tokens": [2589, 286, 360, 257, 2654, 3625, 30, 286, 500, 380, 1604, 884, 300, 13, 286, 2041, 286, 1633, 362, 13], "temperature": 0.0, "avg_logprob": -0.24582590120975104, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.1659138181130402e-05}, {"id": 490, "seek": 267716, "start": 2688.7599999999998, "end": 2691.3199999999997, "text": " So the reason that works, I guess, or maybe I did that without even thinking about it.", "tokens": [407, 264, 1778, 300, 1985, 11, 286, 2041, 11, 420, 1310, 286, 630, 300, 1553, 754, 1953, 466, 309, 13], "temperature": 0.0, "avg_logprob": -0.24582590120975104, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.1659138181130402e-05}, {"id": 491, "seek": 267716, "start": 2691.3199999999997, "end": 2701.3199999999997, "text": " If you type pip install minus a dot in your Git repo, basically, it's going to install the thing you're currently working on as a library.", "tokens": [759, 291, 2010, 8489, 3625, 3175, 257, 5893, 294, 428, 16939, 49040, 11, 1936, 11, 309, 311, 516, 281, 3625, 264, 551, 291, 434, 4362, 1364, 322, 382, 257, 6405, 13], "temperature": 0.0, "avg_logprob": -0.24582590120975104, "compression_ratio": 1.5793650793650793, "no_speech_prob": 1.1659138181130402e-05}, {"id": 492, "seek": 270132, "start": 2701.32, "end": 2707.28, "text": " And it's going to be pointing at your actual source code. So every time you update it, it'll be there.", "tokens": [400, 309, 311, 516, 281, 312, 12166, 412, 428, 3539, 4009, 3089, 13, 407, 633, 565, 291, 5623, 309, 11, 309, 603, 312, 456, 13], "temperature": 0.0, "avg_logprob": -0.08813129553273946, "compression_ratio": 1.8514056224899598, "no_speech_prob": 8.800857358437497e-06}, {"id": 493, "seek": 270132, "start": 2707.28, "end": 2717.1600000000003, "text": " So that's how come I can import it. All right. So you might want to put the import in a separate cell and export it, perhaps.", "tokens": [407, 300, 311, 577, 808, 286, 393, 974, 309, 13, 1057, 558, 13, 407, 291, 1062, 528, 281, 829, 264, 974, 294, 257, 4994, 2815, 293, 10725, 309, 11, 4317, 13], "temperature": 0.0, "avg_logprob": -0.08813129553273946, "compression_ratio": 1.8514056224899598, "no_speech_prob": 8.800857358437497e-06}, {"id": 494, "seek": 270132, "start": 2717.1600000000003, "end": 2725.44, "text": " Yeah, exactly. So let's do that, because that's actually going to be part of the library is that we're probably going to want to use these cards.", "tokens": [865, 11, 2293, 13, 407, 718, 311, 360, 300, 11, 570, 300, 311, 767, 516, 281, 312, 644, 295, 264, 6405, 307, 300, 321, 434, 1391, 516, 281, 528, 281, 764, 613, 5632, 13], "temperature": 0.0, "avg_logprob": -0.08813129553273946, "compression_ratio": 1.8514056224899598, "no_speech_prob": 8.800857358437497e-06}, {"id": 495, "seek": 270132, "start": 2725.44, "end": 2729.0800000000004, "text": " So that should be part of the exported. And actually, we should probably look at that.", "tokens": [407, 300, 820, 312, 644, 295, 264, 42055, 13, 400, 767, 11, 321, 820, 1391, 574, 412, 300, 13], "temperature": 0.0, "avg_logprob": -0.08813129553273946, "compression_ratio": 1.8514056224899598, "no_speech_prob": 8.800857358437497e-06}, {"id": 496, "seek": 272908, "start": 2729.08, "end": 2736.0, "text": " So let's take a look at this managed to break everything today.", "tokens": [407, 718, 311, 747, 257, 574, 412, 341, 6453, 281, 1821, 1203, 965, 13], "temperature": 0.0, "avg_logprob": -0.24239826202392578, "compression_ratio": 1.516431924882629, "no_speech_prob": 4.71074736196897e-06}, {"id": 497, "seek": 272908, "start": 2736.0, "end": 2739.2799999999997, "text": " Let's just make sure this is actually going to run. There we go.", "tokens": [961, 311, 445, 652, 988, 341, 307, 767, 516, 281, 1190, 13, 821, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.24239826202392578, "compression_ratio": 1.516431924882629, "no_speech_prob": 4.71074736196897e-06}, {"id": 498, "seek": 272908, "start": 2739.2799999999997, "end": 2745.68, "text": " So because I've got the Cordo server, NB dev server running in the background, it's constantly trying to compile my code.", "tokens": [407, 570, 286, 600, 658, 264, 383, 23872, 7154, 11, 426, 33, 1905, 7154, 2614, 294, 264, 3678, 11, 309, 311, 6460, 1382, 281, 31413, 452, 3089, 13], "temperature": 0.0, "avg_logprob": -0.24239826202392578, "compression_ratio": 1.516431924882629, "no_speech_prob": 4.71074736196897e-06}, {"id": 499, "seek": 272908, "start": 2745.68, "end": 2750.08, "text": " So I had to do a non compiling stages before, which is why I complained.", "tokens": [407, 286, 632, 281, 360, 257, 2107, 715, 4883, 10232, 949, 11, 597, 307, 983, 286, 33951, 13], "temperature": 0.0, "avg_logprob": -0.24239826202392578, "compression_ratio": 1.516431924882629, "no_speech_prob": 4.71074736196897e-06}, {"id": 500, "seek": 275008, "start": 2750.08, "end": 2759.4, "text": " So if I take a look at the NB dev cards card file, you can see this is the source that's created for me.", "tokens": [407, 498, 286, 747, 257, 574, 412, 264, 426, 33, 1905, 5632, 2920, 3991, 11, 291, 393, 536, 341, 307, 264, 4009, 300, 311, 2942, 337, 385, 13], "temperature": 0.0, "avg_logprob": -0.11912159980097904, "compression_ratio": 1.5664739884393064, "no_speech_prob": 1.4823128822172293e-06}, {"id": 501, "seek": 275008, "start": 2759.4, "end": 2763.56, "text": " And so, for example, if we now like.", "tokens": [400, 370, 11, 337, 1365, 11, 498, 321, 586, 411, 13], "temperature": 0.0, "avg_logprob": -0.11912159980097904, "compression_ratio": 1.5664739884393064, "no_speech_prob": 1.4823128822172293e-06}, {"id": 502, "seek": 275008, "start": 2763.56, "end": 2778.92, "text": " Let's see. So a full deck of cards is going to contain every suit and for each suit for every card, it's going to contain a card.", "tokens": [961, 311, 536, 13, 407, 257, 1577, 9341, 295, 5632, 307, 516, 281, 5304, 633, 5722, 293, 337, 1184, 5722, 337, 633, 2920, 11, 309, 311, 516, 281, 5304, 257, 2920, 13], "temperature": 0.0, "avg_logprob": -0.11912159980097904, "compression_ratio": 1.5664739884393064, "no_speech_prob": 1.4823128822172293e-06}, {"id": 503, "seek": 277892, "start": 2778.92, "end": 2785.52, "text": " So that's not very helpful. So we can do the same trick we've seen before,", "tokens": [407, 300, 311, 406, 588, 4961, 13, 407, 321, 393, 360, 264, 912, 4282, 321, 600, 1612, 949, 11], "temperature": 0.0, "avg_logprob": -0.12460854848225912, "compression_ratio": 1.5573770491803278, "no_speech_prob": 1.8738107883109478e-06}, {"id": 504, "seek": 277892, "start": 2785.52, "end": 2796.8, "text": " which is to just join the cards together when we're stringifying it and set the representation to be the same as the string area.", "tokens": [597, 307, 281, 445, 3917, 264, 5632, 1214, 562, 321, 434, 6798, 5489, 309, 293, 992, 264, 10290, 281, 312, 264, 912, 382, 264, 6798, 1859, 13], "temperature": 0.0, "avg_logprob": -0.12460854848225912, "compression_ratio": 1.5573770491803278, "no_speech_prob": 1.8738107883109478e-06}, {"id": 505, "seek": 277892, "start": 2796.8, "end": 2802.2000000000003, "text": " So now, if we might just stop running our server for a bit, it's a bit annoying.", "tokens": [407, 586, 11, 498, 321, 1062, 445, 1590, 2614, 527, 7154, 337, 257, 857, 11, 309, 311, 257, 857, 11304, 13], "temperature": 0.0, "avg_logprob": -0.12460854848225912, "compression_ratio": 1.5573770491803278, "no_speech_prob": 1.8738107883109478e-06}, {"id": 506, "seek": 280220, "start": 2802.2, "end": 2809.52, "text": " So we could now export and we can see. You've now got a deck.py.", "tokens": [407, 321, 727, 586, 10725, 293, 321, 393, 536, 13, 509, 600, 586, 658, 257, 9341, 13, 8200, 13], "temperature": 0.0, "avg_logprob": -0.19961549859297903, "compression_ratio": 1.528301886792453, "no_speech_prob": 4.289182925276691e-06}, {"id": 507, "seek": 280220, "start": 2809.52, "end": 2814.3199999999997, "text": " And you can treat this just like you would any normal source code.", "tokens": [400, 291, 393, 2387, 341, 445, 411, 291, 576, 604, 2710, 4009, 3089, 13], "temperature": 0.0, "avg_logprob": -0.19961549859297903, "compression_ratio": 1.528301886792453, "no_speech_prob": 4.289182925276691e-06}, {"id": 508, "seek": 280220, "start": 2814.3199999999997, "end": 2823.12, "text": " So, for example, I use Vim. So if I go to card and I hit control right square bracket and Vim, it jumps me straight to the definition of card.", "tokens": [407, 11, 337, 1365, 11, 286, 764, 691, 332, 13, 407, 498, 286, 352, 281, 2920, 293, 286, 2045, 1969, 558, 3732, 16904, 293, 691, 332, 11, 309, 16704, 385, 2997, 281, 264, 7123, 295, 2920, 13], "temperature": 0.0, "avg_logprob": -0.19961549859297903, "compression_ratio": 1.528301886792453, "no_speech_prob": 4.289182925276691e-06}, {"id": 509, "seek": 280220, "start": 2823.12, "end": 2825.24, "text": " So like you can do it, you know, I can jump back.", "tokens": [407, 411, 291, 393, 360, 309, 11, 291, 458, 11, 286, 393, 3012, 646, 13], "temperature": 0.0, "avg_logprob": -0.19961549859297903, "compression_ratio": 1.528301886792453, "no_speech_prob": 4.289182925276691e-06}, {"id": 510, "seek": 282524, "start": 2825.24, "end": 2834.4399999999996, "text": " So you can still like, you know, if you use VS code, you can still use it just like the normal way that you would look through source code.", "tokens": [407, 291, 393, 920, 411, 11, 291, 458, 11, 498, 291, 764, 25091, 3089, 11, 291, 393, 920, 764, 309, 445, 411, 264, 2710, 636, 300, 291, 576, 574, 807, 4009, 3089, 13], "temperature": 0.0, "avg_logprob": -0.20813114238235186, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.8129766178608406e-06}, {"id": 511, "seek": 282524, "start": 2834.4399999999996, "end": 2840.4799999999996, "text": " Or, of course, we can use the trick we've seen before, for example, double question mark to get.", "tokens": [1610, 11, 295, 1164, 11, 321, 393, 764, 264, 4282, 321, 600, 1612, 949, 11, 337, 1365, 11, 3834, 1168, 1491, 281, 483, 13], "temperature": 0.0, "avg_logprob": -0.20813114238235186, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.8129766178608406e-06}, {"id": 512, "seek": 282524, "start": 2840.4799999999996, "end": 2843.04, "text": " Isn't that working?", "tokens": [6998, 380, 300, 1364, 30], "temperature": 0.0, "avg_logprob": -0.20813114238235186, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.8129766178608406e-06}, {"id": 513, "seek": 282524, "start": 2843.04, "end": 2846.12, "text": " Hmm.", "tokens": [8239, 13], "temperature": 0.0, "avg_logprob": -0.20813114238235186, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.8129766178608406e-06}, {"id": 514, "seek": 282524, "start": 2846.12, "end": 2850.24, "text": " Oh, yeah, because it's not exported. You're a fast core utils test.", "tokens": [876, 11, 1338, 11, 570, 309, 311, 406, 42055, 13, 509, 434, 257, 2370, 4965, 2839, 4174, 1500, 13], "temperature": 0.0, "avg_logprob": -0.20813114238235186, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.8129766178608406e-06}, {"id": 515, "seek": 282524, "start": 2850.24, "end": 2853.64, "text": " Oh, yeah, that was a mistake.", "tokens": [876, 11, 1338, 11, 300, 390, 257, 6146, 13], "temperature": 0.0, "avg_logprob": -0.20813114238235186, "compression_ratio": 1.5608695652173914, "no_speech_prob": 2.8129766178608406e-06}, {"id": 516, "seek": 285364, "start": 2853.64, "end": 2859.8799999999997, "text": " OK, so that needs to be exported because that's part of what we actually need.", "tokens": [2264, 11, 370, 300, 2203, 281, 312, 42055, 570, 300, 311, 644, 295, 437, 321, 767, 643, 13], "temperature": 0.0, "avg_logprob": -0.14032894632090692, "compression_ratio": 1.6693877551020408, "no_speech_prob": 3.7265749597281683e-06}, {"id": 517, "seek": 285364, "start": 2859.8799999999997, "end": 2863.56, "text": " You should put all your imports in the separate cell by itself.", "tokens": [509, 820, 829, 439, 428, 41596, 294, 264, 4994, 2815, 538, 2564, 13], "temperature": 0.0, "avg_logprob": -0.14032894632090692, "compression_ratio": 1.6693877551020408, "no_speech_prob": 3.7265749597281683e-06}, {"id": 518, "seek": 285364, "start": 2863.56, "end": 2865.72, "text": " Maybe it's a good time to mention that.", "tokens": [2704, 309, 311, 257, 665, 565, 281, 2152, 300, 13], "temperature": 0.0, "avg_logprob": -0.14032894632090692, "compression_ratio": 1.6693877551020408, "no_speech_prob": 3.7265749597281683e-06}, {"id": 519, "seek": 285364, "start": 2865.72, "end": 2868.68, "text": " Oh, and then just a moment. So then we need to export that.", "tokens": [876, 11, 293, 550, 445, 257, 1623, 13, 407, 550, 321, 643, 281, 10725, 300, 13], "temperature": 0.0, "avg_logprob": -0.14032894632090692, "compression_ratio": 1.6693877551020408, "no_speech_prob": 3.7265749597281683e-06}, {"id": 520, "seek": 285364, "start": 2868.68, "end": 2873.7599999999998, "text": " And so then we could check that that's working. That's looking hopeful.", "tokens": [400, 370, 550, 321, 727, 1520, 300, 300, 311, 1364, 13, 663, 311, 1237, 20531, 13], "temperature": 0.0, "avg_logprob": -0.14032894632090692, "compression_ratio": 1.6693877551020408, "no_speech_prob": 3.7265749597281683e-06}, {"id": 521, "seek": 285364, "start": 2873.7599999999998, "end": 2878.12, "text": " So now zero zero run.", "tokens": [407, 586, 4018, 4018, 1190, 13], "temperature": 0.0, "avg_logprob": -0.14032894632090692, "compression_ratio": 1.6693877551020408, "no_speech_prob": 3.7265749597281683e-06}, {"id": 522, "seek": 285364, "start": 2878.12, "end": 2882.44, "text": " Oh, sorry, I shouldn't look at deck. I should look at card, for example.", "tokens": [876, 11, 2597, 11, 286, 4659, 380, 574, 412, 9341, 13, 286, 820, 574, 412, 2920, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.14032894632090692, "compression_ratio": 1.6693877551020408, "no_speech_prob": 3.7265749597281683e-06}, {"id": 523, "seek": 288244, "start": 2882.44, "end": 2885.36, "text": " There you go. You can get the source code.", "tokens": [821, 291, 352, 13, 509, 393, 483, 264, 4009, 3089, 13], "temperature": 0.0, "avg_logprob": -0.20499038696289062, "compression_ratio": 1.4131736526946108, "no_speech_prob": 2.332022859263816e-06}, {"id": 524, "seek": 288244, "start": 2885.36, "end": 2897.68, "text": " All right. So so Hamel just started talking about a one little wrinkle you have to be aware of when creating your code in NB dev,", "tokens": [1057, 558, 13, 407, 370, 8234, 338, 445, 1409, 1417, 466, 257, 472, 707, 928, 14095, 291, 362, 281, 312, 3650, 295, 562, 4084, 428, 3089, 294, 426, 33, 1905, 11], "temperature": 0.0, "avg_logprob": -0.20499038696289062, "compression_ratio": 1.4131736526946108, "no_speech_prob": 2.332022859263816e-06}, {"id": 525, "seek": 288244, "start": 2897.68, "end": 2901.44, "text": " which is that there's one golden rule you have to keep in mind.", "tokens": [597, 307, 300, 456, 311, 472, 9729, 4978, 291, 362, 281, 1066, 294, 1575, 13], "temperature": 0.0, "avg_logprob": -0.20499038696289062, "compression_ratio": 1.4131736526946108, "no_speech_prob": 2.332022859263816e-06}, {"id": 526, "seek": 290144, "start": 2901.44, "end": 2914.2400000000002, "text": " And that golden rule is that you your cells should either contain imports or non imports, but not a mixture of the two.", "tokens": [400, 300, 9729, 4978, 307, 300, 291, 428, 5438, 820, 2139, 5304, 41596, 420, 2107, 41596, 11, 457, 406, 257, 9925, 295, 264, 732, 13], "temperature": 0.0, "avg_logprob": -0.06814027967907134, "compression_ratio": 1.7727272727272727, "no_speech_prob": 3.1874315027380362e-06}, {"id": 527, "seek": 290144, "start": 2914.2400000000002, "end": 2918.28, "text": " So you'll see this doesn't contain any imports.", "tokens": [407, 291, 603, 536, 341, 1177, 380, 5304, 604, 41596, 13], "temperature": 0.0, "avg_logprob": -0.06814027967907134, "compression_ratio": 1.7727272727272727, "no_speech_prob": 3.1874315027380362e-06}, {"id": 528, "seek": 290144, "start": 2918.28, "end": 2921.28, "text": " This doesn't contain anything but imports.", "tokens": [639, 1177, 380, 5304, 1340, 457, 41596, 13], "temperature": 0.0, "avg_logprob": -0.06814027967907134, "compression_ratio": 1.7727272727272727, "no_speech_prob": 3.1874315027380362e-06}, {"id": 529, "seek": 290144, "start": 2921.28, "end": 2929.28, "text": " And the reason for that is that when it builds your docs, it has to be able to go through and run every one of your cells containing imports", "tokens": [400, 264, 1778, 337, 300, 307, 300, 562, 309, 15182, 428, 45623, 11, 309, 575, 281, 312, 1075, 281, 352, 807, 293, 1190, 633, 472, 295, 428, 5438, 19273, 41596], "temperature": 0.0, "avg_logprob": -0.06814027967907134, "compression_ratio": 1.7727272727272727, "no_speech_prob": 3.1874315027380362e-06}, {"id": 530, "seek": 292928, "start": 2929.28, "end": 2933.36, "text": " in order that it can then run all of your show doc cells correctly.", "tokens": [294, 1668, 300, 309, 393, 550, 1190, 439, 295, 428, 855, 3211, 5438, 8944, 13], "temperature": 0.0, "avg_logprob": -0.06431491639879015, "compression_ratio": 1.614678899082569, "no_speech_prob": 2.3319814772548852e-06}, {"id": 531, "seek": 292928, "start": 2933.36, "end": 2943.6000000000004, "text": " But it's not going to run any other cells. So just remember, don't have a cell that contains both a import command and also something else.", "tokens": [583, 309, 311, 406, 516, 281, 1190, 604, 661, 5438, 13, 407, 445, 1604, 11, 500, 380, 362, 257, 2815, 300, 8306, 1293, 257, 974, 5622, 293, 611, 746, 1646, 13], "temperature": 0.0, "avg_logprob": -0.06431491639879015, "compression_ratio": 1.614678899082569, "no_speech_prob": 2.3319814772548852e-06}, {"id": 532, "seek": 292928, "start": 2943.6000000000004, "end": 2948.8, "text": " That's the only slightly weird rule you have to remember.", "tokens": [663, 311, 264, 787, 4748, 3657, 4978, 291, 362, 281, 1604, 13], "temperature": 0.0, "avg_logprob": -0.06431491639879015, "compression_ratio": 1.614678899082569, "no_speech_prob": 2.3319814772548852e-06}, {"id": 533, "seek": 292928, "start": 2948.8, "end": 2955.1600000000003, "text": " I think something else that I'd like to add to our deck is just to know how big it is.", "tokens": [286, 519, 746, 1646, 300, 286, 1116, 411, 281, 909, 281, 527, 9341, 307, 445, 281, 458, 577, 955, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.06431491639879015, "compression_ratio": 1.614678899082569, "no_speech_prob": 2.3319814772548852e-06}, {"id": 534, "seek": 295516, "start": 2955.16, "end": 2964.24, "text": " So Dunderlen gives you that. And so by so let's first create a deck, call it deck.", "tokens": [407, 413, 6617, 6698, 2709, 291, 300, 13, 400, 370, 538, 370, 718, 311, 700, 1884, 257, 9341, 11, 818, 309, 9341, 13], "temperature": 0.0, "avg_logprob": -0.18828454224959665, "compression_ratio": 1.616504854368932, "no_speech_prob": 8.938908649724908e-06}, {"id": 535, "seek": 295516, "start": 2964.24, "end": 2973.64, "text": " Notice the difference in case here. This is my object and this is my class and this is my instantiated object.", "tokens": [13428, 264, 2649, 294, 1389, 510, 13, 639, 307, 452, 2657, 293, 341, 307, 452, 1508, 293, 341, 307, 452, 9836, 72, 770, 2657, 13], "temperature": 0.0, "avg_logprob": -0.18828454224959665, "compression_ratio": 1.616504854368932, "no_speech_prob": 8.938908649724908e-06}, {"id": 536, "seek": 295516, "start": 2973.64, "end": 2976.56, "text": " Another thing that's useful is to know if a card is in the deck.", "tokens": [3996, 551, 300, 311, 4420, 307, 281, 458, 498, 257, 2920, 307, 294, 264, 9341, 13], "temperature": 0.0, "avg_logprob": -0.18828454224959665, "compression_ratio": 1.616504854368932, "no_speech_prob": 8.938908649724908e-06}, {"id": 537, "seek": 295516, "start": 2976.56, "end": 2983.04, "text": " So in Python, they use a special Dunder think or Dunder contains for that.", "tokens": [407, 294, 15329, 11, 436, 764, 257, 2121, 413, 6617, 519, 420, 413, 6617, 8306, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.18828454224959665, "compression_ratio": 1.616504854368932, "no_speech_prob": 8.938908649724908e-06}, {"id": 538, "seek": 298304, "start": 2983.04, "end": 2989.48, "text": " Let's see if the so just remind myself, what are the suits?", "tokens": [961, 311, 536, 498, 264, 370, 445, 4160, 2059, 11, 437, 366, 264, 15278, 30], "temperature": 0.0, "avg_logprob": -0.23122143101047826, "compression_ratio": 1.4761904761904763, "no_speech_prob": 1.9946578504459467e-06}, {"id": 539, "seek": 298304, "start": 2989.48, "end": 2994.8, "text": " So one of clubs, is that in the deck?", "tokens": [407, 472, 295, 15428, 11, 307, 300, 294, 264, 9341, 30], "temperature": 0.0, "avg_logprob": -0.23122143101047826, "compression_ratio": 1.4761904761904763, "no_speech_prob": 1.9946578504459467e-06}, {"id": 540, "seek": 298304, "start": 2994.8, "end": 3000.7599999999998, "text": " OK, so if this a doc string.", "tokens": [2264, 11, 370, 498, 341, 257, 3211, 6798, 13], "temperature": 0.0, "avg_logprob": -0.23122143101047826, "compression_ratio": 1.4761904761904763, "no_speech_prob": 1.9946578504459467e-06}, {"id": 541, "seek": 298304, "start": 3000.7599999999998, "end": 3012.16, "text": " Right. All right, I guess we might want to create a hand now that you might want to then deal a hand or something, right?", "tokens": [1779, 13, 1057, 558, 11, 286, 2041, 321, 1062, 528, 281, 1884, 257, 1011, 586, 300, 291, 1062, 528, 281, 550, 2028, 257, 1011, 420, 746, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.23122143101047826, "compression_ratio": 1.4761904761904763, "no_speech_prob": 1.9946578504459467e-06}, {"id": 542, "seek": 301216, "start": 3012.16, "end": 3020.92, "text": " Well, yeah, but probably to do that, we want to be able to select a card from the deck.", "tokens": [1042, 11, 1338, 11, 457, 1391, 281, 360, 300, 11, 321, 528, 281, 312, 1075, 281, 3048, 257, 2920, 490, 264, 9341, 13], "temperature": 0.0, "avg_logprob": -0.09742349467865408, "compression_ratio": 1.4739884393063585, "no_speech_prob": 5.173401405045297e-06}, {"id": 543, "seek": 301216, "start": 3020.92, "end": 3025.7999999999997, "text": " So I guess, first of all, let's just see if we've got all the information we need here.", "tokens": [407, 286, 2041, 11, 700, 295, 439, 11, 718, 311, 445, 536, 498, 321, 600, 658, 439, 264, 1589, 321, 643, 510, 13], "temperature": 0.0, "avg_logprob": -0.09742349467865408, "compression_ratio": 1.4739884393063585, "no_speech_prob": 5.173401405045297e-06}, {"id": 544, "seek": 301216, "start": 3025.7999999999997, "end": 3038.8399999999997, "text": " So let's say when we initially create a deck, all of the cards will be present.", "tokens": [407, 718, 311, 584, 562, 321, 9105, 1884, 257, 9341, 11, 439, 295, 264, 5632, 486, 312, 1974, 13], "temperature": 0.0, "avg_logprob": -0.09742349467865408, "compression_ratio": 1.4739884393063585, "no_speech_prob": 5.173401405045297e-06}, {"id": 545, "seek": 303884, "start": 3038.84, "end": 3044.2400000000002, "text": " The 52 cards. And so this is where I'd put a test rather than just displaying it,", "tokens": [440, 18079, 5632, 13, 400, 370, 341, 307, 689, 286, 1116, 829, 257, 1500, 2831, 813, 445, 36834, 309, 11], "temperature": 0.0, "avg_logprob": -0.13773847112850268, "compression_ratio": 1.547244094488189, "no_speech_prob": 1.221801448991755e-05}, {"id": 546, "seek": 303884, "start": 3044.2400000000002, "end": 3052.6400000000003, "text": " because that way we're both showing the user what we're expecting and we're also ensuring that that continues to be the case in the future.", "tokens": [570, 300, 636, 321, 434, 1293, 4099, 264, 4195, 437, 321, 434, 9650, 293, 321, 434, 611, 16882, 300, 300, 6515, 281, 312, 264, 1389, 294, 264, 2027, 13], "temperature": 0.0, "avg_logprob": -0.13773847112850268, "compression_ratio": 1.547244094488189, "no_speech_prob": 1.221801448991755e-05}, {"id": 547, "seek": 303884, "start": 3052.6400000000003, "end": 3061.52, "text": " Just as a reminder for people not familiar, the test EQ is a wrapper around a cert that just will give you a nicer error message.", "tokens": [1449, 382, 257, 13548, 337, 561, 406, 4963, 11, 264, 1500, 33580, 307, 257, 46906, 926, 257, 5351, 300, 445, 486, 976, 291, 257, 22842, 6713, 3636, 13], "temperature": 0.0, "avg_logprob": -0.13773847112850268, "compression_ratio": 1.547244094488189, "no_speech_prob": 1.221801448991755e-05}, {"id": 548, "seek": 303884, "start": 3061.52, "end": 3065.1200000000003, "text": " Yeah, pretty much. So that they're equal.", "tokens": [865, 11, 1238, 709, 13, 407, 300, 436, 434, 2681, 13], "temperature": 0.0, "avg_logprob": -0.13773847112850268, "compression_ratio": 1.547244094488189, "no_speech_prob": 1.221801448991755e-05}, {"id": 549, "seek": 306512, "start": 3065.12, "end": 3068.92, "text": " So if they're not, it'll let you know what they actually were.", "tokens": [407, 498, 436, 434, 406, 11, 309, 603, 718, 291, 458, 437, 436, 767, 645, 13], "temperature": 0.0, "avg_logprob": -0.12923423932946246, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.6424238512845477e-06}, {"id": 550, "seek": 306512, "start": 3068.92, "end": 3073.68, "text": " So as you can see, most of the fast library code tends to be just a couple of lines.", "tokens": [407, 382, 291, 393, 536, 11, 881, 295, 264, 2370, 6405, 3089, 12258, 281, 312, 445, 257, 1916, 295, 3876, 13], "temperature": 0.0, "avg_logprob": -0.12923423932946246, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.6424238512845477e-06}, {"id": 551, "seek": 306512, "start": 3073.68, "end": 3079.3199999999997, "text": " So this line, this is one line of code. This function is defined with two lines of code.", "tokens": [407, 341, 1622, 11, 341, 307, 472, 1622, 295, 3089, 13, 639, 2445, 307, 7642, 365, 732, 3876, 295, 3089, 13], "temperature": 0.0, "avg_logprob": -0.12923423932946246, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.6424238512845477e-06}, {"id": 552, "seek": 306512, "start": 3079.3199999999997, "end": 3083.6, "text": " But normally you can like, yeah, I mean, there's good documentation for all this stuff, of course.", "tokens": [583, 5646, 291, 393, 411, 11, 1338, 11, 286, 914, 11, 456, 311, 665, 14333, 337, 439, 341, 1507, 11, 295, 1164, 13], "temperature": 0.0, "avg_logprob": -0.12923423932946246, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.6424238512845477e-06}, {"id": 553, "seek": 306512, "start": 3083.6, "end": 3090.4, "text": " If you go to the fast core docs, you can go to test and see examples of all of them.", "tokens": [759, 291, 352, 281, 264, 2370, 4965, 45623, 11, 291, 393, 352, 281, 1500, 293, 536, 5110, 295, 439, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.12923423932946246, "compression_ratio": 1.7142857142857142, "no_speech_prob": 2.6424238512845477e-06}, {"id": 554, "seek": 309040, "start": 3090.4, "end": 3100.04, "text": " Yeah, but often you can just quickly look at the source code if you want to see exactly what's going on.", "tokens": [865, 11, 457, 2049, 291, 393, 445, 2661, 574, 412, 264, 4009, 3089, 498, 291, 528, 281, 536, 2293, 437, 311, 516, 322, 13], "temperature": 0.0, "avg_logprob": -0.0979844985469695, "compression_ratio": 1.5267857142857142, "no_speech_prob": 9.972532097890507e-06}, {"id": 555, "seek": 309040, "start": 3100.04, "end": 3106.6, "text": " The ace clubs. OK, so let's make it so that we can remove something from the deck.", "tokens": [440, 17117, 15428, 13, 2264, 11, 370, 718, 311, 652, 309, 370, 300, 321, 393, 4159, 746, 490, 264, 9341, 13], "temperature": 0.0, "avg_logprob": -0.0979844985469695, "compression_ratio": 1.5267857142857142, "no_speech_prob": 9.972532097890507e-06}, {"id": 556, "seek": 309040, "start": 3106.6, "end": 3110.2000000000003, "text": " So we could just go ahead and edit the class.", "tokens": [407, 321, 727, 445, 352, 2286, 293, 8129, 264, 1508, 13], "temperature": 0.0, "avg_logprob": -0.0979844985469695, "compression_ratio": 1.5267857142857142, "no_speech_prob": 9.972532097890507e-06}, {"id": 557, "seek": 309040, "start": 3110.2000000000003, "end": 3117.48, "text": " But as I say, I kind of like to add things in after the fact, you know, just keep things nice and separated.", "tokens": [583, 382, 286, 584, 11, 286, 733, 295, 411, 281, 909, 721, 294, 934, 264, 1186, 11, 291, 458, 11, 445, 1066, 721, 1481, 293, 12005, 13], "temperature": 0.0, "avg_logprob": -0.0979844985469695, "compression_ratio": 1.5267857142857142, "no_speech_prob": 9.972532097890507e-06}, {"id": 558, "seek": 311748, "start": 3117.48, "end": 3123.2, "text": " We should generally it doesn't matter whether you have a space or not after your pipe character.", "tokens": [492, 820, 5101, 309, 1177, 380, 1871, 1968, 291, 362, 257, 1901, 420, 406, 934, 428, 11240, 2517, 13], "temperature": 0.0, "avg_logprob": -0.11962317512148903, "compression_ratio": 1.6324786324786325, "no_speech_prob": 4.936783625453245e-06}, {"id": 559, "seek": 311748, "start": 3123.2, "end": 3130.96, "text": " But I know that at least at the moment in Nitter, which is an R library, it doesn't like the space.", "tokens": [583, 286, 458, 300, 412, 1935, 412, 264, 1623, 294, 426, 3904, 11, 597, 307, 364, 497, 6405, 11, 309, 1177, 380, 411, 264, 1901, 13], "temperature": 0.0, "avg_logprob": -0.11962317512148903, "compression_ratio": 1.6324786324786325, "no_speech_prob": 4.936783625453245e-06}, {"id": 560, "seek": 311748, "start": 3130.96, "end": 3139.52, "text": " So it's probably not a bad idea. Most of the stuff you'll see in all the stuff you'll see in Quarto always has a space.", "tokens": [407, 309, 311, 1391, 406, 257, 1578, 1558, 13, 4534, 295, 264, 1507, 291, 603, 536, 294, 439, 264, 1507, 291, 603, 536, 294, 2326, 15864, 1009, 575, 257, 1901, 13], "temperature": 0.0, "avg_logprob": -0.11962317512148903, "compression_ratio": 1.6324786324786325, "no_speech_prob": 4.936783625453245e-06}, {"id": 561, "seek": 311748, "start": 3139.52, "end": 3147.28, "text": " All right, so let's patch in a pop to pop off a card from a deck.", "tokens": [1057, 558, 11, 370, 718, 311, 9972, 294, 257, 1665, 281, 1665, 766, 257, 2920, 490, 257, 9341, 13], "temperature": 0.0, "avg_logprob": -0.11962317512148903, "compression_ratio": 1.6324786324786325, "no_speech_prob": 4.936783625453245e-06}, {"id": 562, "seek": 314728, "start": 3147.28, "end": 3151.32, "text": " So some index can default for the last card.", "tokens": [407, 512, 8186, 393, 7576, 337, 264, 1036, 2920, 13], "temperature": 0.0, "avg_logprob": -0.2394106470305344, "compression_ratio": 1.2971014492753623, "no_speech_prob": 4.029305728181498e-06}, {"id": 563, "seek": 314728, "start": 3151.32, "end": 3157.28, "text": " And so, again, we could add documents to this.", "tokens": [400, 370, 11, 797, 11, 321, 727, 909, 8512, 281, 341, 13], "temperature": 0.0, "avg_logprob": -0.2394106470305344, "compression_ratio": 1.2971014492753623, "no_speech_prob": 4.029305728181498e-06}, {"id": 564, "seek": 314728, "start": 3157.28, "end": 3163.88, "text": " Remove and return.", "tokens": [18831, 293, 2736, 13], "temperature": 0.0, "avg_logprob": -0.2394106470305344, "compression_ratio": 1.2971014492753623, "no_speech_prob": 4.029305728181498e-06}, {"id": 565, "seek": 314728, "start": 3163.88, "end": 3169.6000000000004, "text": " OK, so we'll just return self.cards.pop.", "tokens": [2264, 11, 370, 321, 603, 445, 2736, 2698, 13, 40604, 13, 13872, 13], "temperature": 0.0, "avg_logprob": -0.2394106470305344, "compression_ratio": 1.2971014492753623, "no_speech_prob": 4.029305728181498e-06}, {"id": 566, "seek": 314728, "start": 3169.6000000000004, "end": 3173.2400000000002, "text": " So I wanted to import that.", "tokens": [407, 286, 1415, 281, 974, 300, 13], "temperature": 0.0, "avg_logprob": -0.2394106470305344, "compression_ratio": 1.2971014492753623, "no_speech_prob": 4.029305728181498e-06}, {"id": 567, "seek": 317324, "start": 3173.24, "end": 3178.72, "text": " And you've got to tell it what to patch. So let's try popping something.", "tokens": [400, 291, 600, 658, 281, 980, 309, 437, 281, 9972, 13, 407, 718, 311, 853, 18374, 746, 13], "temperature": 0.0, "avg_logprob": -0.12582697039065155, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.682245955540566e-06}, {"id": 568, "seek": 317324, "start": 3178.72, "end": 3182.72, "text": " So if we pop something, we should get the king of spades you would expect.", "tokens": [407, 498, 321, 1665, 746, 11, 321, 820, 483, 264, 4867, 295, 637, 2977, 291, 576, 2066, 13], "temperature": 0.0, "avg_logprob": -0.12582697039065155, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.682245955540566e-06}, {"id": 569, "seek": 317324, "start": 3182.72, "end": 3192.24, "text": " And we did. So if we create a new deck here and pop it off, again, I would tend to turn this into a test.", "tokens": [400, 321, 630, 13, 407, 498, 321, 1884, 257, 777, 9341, 510, 293, 1665, 309, 766, 11, 797, 11, 286, 576, 3928, 281, 1261, 341, 666, 257, 1500, 13], "temperature": 0.0, "avg_logprob": -0.12582697039065155, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.682245955540566e-06}, {"id": 570, "seek": 317324, "start": 3192.24, "end": 3199.9599999999996, "text": " There we go. So let's export that, make sure everything's running OK.", "tokens": [821, 321, 352, 13, 407, 718, 311, 10725, 300, 11, 652, 988, 1203, 311, 2614, 2264, 13], "temperature": 0.0, "avg_logprob": -0.12582697039065155, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.682245955540566e-06}, {"id": 571, "seek": 319996, "start": 3199.96, "end": 3209.2, "text": " It is. And so we can now do our preview again.", "tokens": [467, 307, 13, 400, 370, 321, 393, 586, 360, 527, 14281, 797, 13], "temperature": 0.0, "avg_logprob": -0.10839347379753389, "compression_ratio": 1.6595744680851063, "no_speech_prob": 3.668752697194577e-06}, {"id": 572, "seek": 319996, "start": 3209.2, "end": 3215.04, "text": " So we can now see we've got our index page, our card page and our deck page are all here.", "tokens": [407, 321, 393, 586, 536, 321, 600, 658, 527, 8186, 3028, 11, 527, 2920, 3028, 293, 527, 9341, 3028, 366, 439, 510, 13], "temperature": 0.0, "avg_logprob": -0.10839347379753389, "compression_ratio": 1.6595744680851063, "no_speech_prob": 3.668752697194577e-06}, {"id": 573, "seek": 319996, "start": 3215.04, "end": 3217.8, "text": " It's all our documentation.", "tokens": [467, 311, 439, 527, 14333, 13], "temperature": 0.0, "avg_logprob": -0.10839347379753389, "compression_ratio": 1.6595744680851063, "no_speech_prob": 3.668752697194577e-06}, {"id": 574, "seek": 319996, "start": 3217.8, "end": 3228.84, "text": " So one thing you'll notice here is that the backtick we used here for card has automatically become a hyperlink here to the documentation for that.", "tokens": [407, 472, 551, 291, 603, 3449, 510, 307, 300, 264, 646, 83, 618, 321, 1143, 510, 337, 2920, 575, 6772, 1813, 257, 9848, 22473, 510, 281, 264, 14333, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.10839347379753389, "compression_ratio": 1.6595744680851063, "no_speech_prob": 3.668752697194577e-06}, {"id": 575, "seek": 322884, "start": 3228.84, "end": 3234.6400000000003, "text": " I won't be able to click on it right now because it's because we haven't put it on GitHub yet.", "tokens": [286, 1582, 380, 312, 1075, 281, 2052, 322, 309, 558, 586, 570, 309, 311, 570, 321, 2378, 380, 829, 309, 322, 23331, 1939, 13], "temperature": 0.0, "avg_logprob": -0.16419857838114754, "compression_ratio": 1.6691449814126393, "no_speech_prob": 1.0450844456499908e-05}, {"id": 576, "seek": 322884, "start": 3234.6400000000003, "end": 3238.2000000000003, "text": " But this will end this will link to it. I just copy the link. You'll get the idea.", "tokens": [583, 341, 486, 917, 341, 486, 2113, 281, 309, 13, 286, 445, 5055, 264, 2113, 13, 509, 603, 483, 264, 1558, 13], "temperature": 0.0, "avg_logprob": -0.16419857838114754, "compression_ratio": 1.6691449814126393, "no_speech_prob": 1.0450844456499908e-05}, {"id": 577, "seek": 322884, "start": 3238.2000000000003, "end": 3243.56, "text": " Copy link address, paste it. So that's where our documentation for that's going to end up being.", "tokens": [25653, 2113, 2985, 11, 9163, 309, 13, 407, 300, 311, 689, 527, 14333, 337, 300, 311, 516, 281, 917, 493, 885, 13], "temperature": 0.0, "avg_logprob": -0.16419857838114754, "compression_ratio": 1.6691449814126393, "no_speech_prob": 1.0450844456499908e-05}, {"id": 578, "seek": 322884, "start": 3243.56, "end": 3251.92, "text": " So you can just use backticks and it will automatically linkify, as we call it, that to the documentation.", "tokens": [407, 291, 393, 445, 764, 646, 83, 7663, 293, 309, 486, 6772, 2113, 2505, 11, 382, 321, 818, 309, 11, 300, 281, 264, 14333, 13], "temperature": 0.0, "avg_logprob": -0.16419857838114754, "compression_ratio": 1.6691449814126393, "no_speech_prob": 1.0450844456499908e-05}, {"id": 579, "seek": 322884, "start": 3251.92, "end": 3257.36, "text": " So that's pretty handy. And it works across all your BDEV projects.", "tokens": [407, 300, 311, 1238, 13239, 13, 400, 309, 1985, 2108, 439, 428, 363, 22296, 53, 4455, 13], "temperature": 0.0, "avg_logprob": -0.16419857838114754, "compression_ratio": 1.6691449814126393, "no_speech_prob": 1.0450844456499908e-05}, {"id": 580, "seek": 325736, "start": 3257.36, "end": 3261.52, "text": " Because we have. Yeah. And not just MBDEV projects.", "tokens": [1436, 321, 362, 13, 865, 13, 400, 406, 445, 28866, 22296, 53, 4455, 13], "temperature": 0.0, "avg_logprob": -0.19677449421710277, "compression_ratio": 1.4598214285714286, "no_speech_prob": 2.4822959403536515e-06}, {"id": 581, "seek": 325736, "start": 3261.52, "end": 3278.0, "text": " In fact, there's there's a number of other things, including the Python standard library and pandas and NumPy and so forth that you can install indexes for those so that they'll automatically linkify as well.", "tokens": [682, 1186, 11, 456, 311, 456, 311, 257, 1230, 295, 661, 721, 11, 3009, 264, 15329, 3832, 6405, 293, 4565, 296, 293, 22592, 47, 88, 293, 370, 5220, 300, 291, 393, 3625, 8186, 279, 337, 729, 370, 300, 436, 603, 6772, 2113, 2505, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.19677449421710277, "compression_ratio": 1.4598214285714286, "no_speech_prob": 2.4822959403536515e-06}, {"id": 582, "seek": 325736, "start": 3278.0, "end": 3283.2000000000003, "text": " Cool. So then we can show that this seems to be working correctly.", "tokens": [8561, 13, 407, 550, 321, 393, 855, 300, 341, 2544, 281, 312, 1364, 8944, 13], "temperature": 0.0, "avg_logprob": -0.19677449421710277, "compression_ratio": 1.4598214285714286, "no_speech_prob": 2.4822959403536515e-06}, {"id": 583, "seek": 328320, "start": 3283.2, "end": 3292.16, "text": " Let's go to rerun this. OK, so I just reran that from the top to make it all work again.", "tokens": [961, 311, 352, 281, 43819, 409, 341, 13, 2264, 11, 370, 286, 445, 43819, 282, 300, 490, 264, 1192, 281, 652, 309, 439, 589, 797, 13], "temperature": 0.0, "avg_logprob": -0.21877851114644634, "compression_ratio": 1.4426229508196722, "no_speech_prob": 7.645952791790478e-06}, {"id": 584, "seek": 328320, "start": 3292.16, "end": 3298.16, "text": " All right, so that should be in our deck now.", "tokens": [1057, 558, 11, 370, 300, 820, 312, 294, 527, 9341, 586, 13], "temperature": 0.0, "avg_logprob": -0.21877851114644634, "compression_ratio": 1.4426229508196722, "no_speech_prob": 7.645952791790478e-06}, {"id": 585, "seek": 328320, "start": 3298.16, "end": 3303.2799999999997, "text": " You can see that that's auto generated that documentation.", "tokens": [509, 393, 536, 300, 300, 311, 8399, 10833, 300, 14333, 13], "temperature": 0.0, "avg_logprob": -0.21877851114644634, "compression_ratio": 1.4426229508196722, "no_speech_prob": 7.645952791790478e-06}, {"id": 586, "seek": 328320, "start": 3303.2799999999997, "end": 3311.3599999999997, "text": " And we can also check that PUP is behaving the way we expect it to be.", "tokens": [400, 321, 393, 611, 1520, 300, 430, 22917, 307, 35263, 264, 636, 321, 2066, 309, 281, 312, 13], "temperature": 0.0, "avg_logprob": -0.21877851114644634, "compression_ratio": 1.4426229508196722, "no_speech_prob": 7.645952791790478e-06}, {"id": 587, "seek": 331136, "start": 3311.36, "end": 3314.92, "text": " By getting a remove in there as well.", "tokens": [3146, 1242, 257, 4159, 294, 456, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.10137320624457466, "compression_ratio": 1.5, "no_speech_prob": 4.425187853485113e-06}, {"id": 588, "seek": 331136, "start": 3314.92, "end": 3322.6800000000003, "text": " So I'm just going to copy and paste this one from when I built before to save a bit of time for us.", "tokens": [407, 286, 478, 445, 516, 281, 5055, 293, 9163, 341, 472, 490, 562, 286, 3094, 949, 281, 3155, 257, 857, 295, 565, 337, 505, 13], "temperature": 0.0, "avg_logprob": -0.10137320624457466, "compression_ratio": 1.5, "no_speech_prob": 4.425187853485113e-06}, {"id": 589, "seek": 331136, "start": 3322.6800000000003, "end": 3326.6400000000003, "text": " And so again, we can check to see how the preview is looking.", "tokens": [400, 370, 797, 11, 321, 393, 1520, 281, 536, 577, 264, 14281, 307, 1237, 13], "temperature": 0.0, "avg_logprob": -0.10137320624457466, "compression_ratio": 1.5, "no_speech_prob": 4.425187853485113e-06}, {"id": 590, "seek": 331136, "start": 3326.6400000000003, "end": 3331.92, "text": " And so when we see this is not appearing here, we know what we forgot to export it.", "tokens": [400, 370, 562, 321, 536, 341, 307, 406, 19870, 510, 11, 321, 458, 437, 321, 5298, 281, 10725, 309, 13], "temperature": 0.0, "avg_logprob": -0.10137320624457466, "compression_ratio": 1.5, "no_speech_prob": 4.425187853485113e-06}, {"id": 591, "seek": 331136, "start": 3331.92, "end": 3338.2000000000003, "text": " There we go. Now it's appeared.", "tokens": [821, 321, 352, 13, 823, 309, 311, 8516, 13], "temperature": 0.0, "avg_logprob": -0.10137320624457466, "compression_ratio": 1.5, "no_speech_prob": 4.425187853485113e-06}, {"id": 592, "seek": 333820, "start": 3338.2, "end": 3343.8399999999997, "text": " So it's not just for methods, we could also create a function. So I've got a function that I've created earlier.", "tokens": [407, 309, 311, 406, 445, 337, 7150, 11, 321, 727, 611, 1884, 257, 2445, 13, 407, 286, 600, 658, 257, 2445, 300, 286, 600, 2942, 3071, 13], "temperature": 0.0, "avg_logprob": -0.226277156751983, "compression_ratio": 1.6589861751152073, "no_speech_prob": 7.411084880004637e-06}, {"id": 593, "seek": 333820, "start": 3343.8399999999997, "end": 3346.16, "text": " This for example.", "tokens": [639, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.226277156751983, "compression_ratio": 1.6589861751152073, "no_speech_prob": 7.411084880004637e-06}, {"id": 594, "seek": 333820, "start": 3346.16, "end": 3350.6, "text": " So here's one that draws some cards with our replacement.", "tokens": [407, 510, 311, 472, 300, 20045, 512, 5632, 365, 527, 14419, 13], "temperature": 0.0, "avg_logprob": -0.226277156751983, "compression_ratio": 1.6589861751152073, "no_speech_prob": 7.411084880004637e-06}, {"id": 595, "seek": 333820, "start": 3350.6, "end": 3356.3999999999996, "text": " So let's draw 13 cards without replacement.", "tokens": [407, 718, 311, 2642, 3705, 5632, 1553, 14419, 13], "temperature": 0.0, "avg_logprob": -0.226277156751983, "compression_ratio": 1.6589861751152073, "no_speech_prob": 7.411084880004637e-06}, {"id": 596, "seek": 333820, "start": 3356.3999999999996, "end": 3359.0, "text": " Oh, needed a shuffle.", "tokens": [876, 11, 2978, 257, 39426, 13], "temperature": 0.0, "avg_logprob": -0.226277156751983, "compression_ratio": 1.6589861751152073, "no_speech_prob": 7.411084880004637e-06}, {"id": 597, "seek": 333820, "start": 3359.0, "end": 3361.24, "text": " I'm about to add a shuffle.", "tokens": [286, 478, 466, 281, 909, 257, 39426, 13], "temperature": 0.0, "avg_logprob": -0.226277156751983, "compression_ratio": 1.6589861751152073, "no_speech_prob": 7.411084880004637e-06}, {"id": 598, "seek": 333820, "start": 3361.24, "end": 3365.64, "text": " Maybe just put that straight into the class just to show how that would look.", "tokens": [2704, 445, 829, 300, 2997, 666, 264, 1508, 445, 281, 855, 577, 300, 576, 574, 13], "temperature": 0.0, "avg_logprob": -0.226277156751983, "compression_ratio": 1.6589861751152073, "no_speech_prob": 7.411084880004637e-06}, {"id": 599, "seek": 336564, "start": 3365.64, "end": 3373.44, "text": " There's a shuffle. So since the shuffle here is directly in the class, we need to say whereabouts we want to document it.", "tokens": [821, 311, 257, 39426, 13, 407, 1670, 264, 39426, 510, 307, 3838, 294, 264, 1508, 11, 321, 643, 281, 584, 689, 41620, 321, 528, 281, 4166, 309, 13], "temperature": 0.0, "avg_logprob": -0.12860713133940826, "compression_ratio": 1.7081545064377683, "no_speech_prob": 4.785005785379326e-06}, {"id": 600, "seek": 336564, "start": 3373.44, "end": 3378.24, "text": " So the way we would do that would be to put a show doc.", "tokens": [407, 264, 636, 321, 576, 360, 300, 576, 312, 281, 829, 257, 855, 3211, 13], "temperature": 0.0, "avg_logprob": -0.12860713133940826, "compression_ratio": 1.7081545064377683, "no_speech_prob": 4.785005785379326e-06}, {"id": 601, "seek": 336564, "start": 3378.24, "end": 3381.4, "text": " There we go.", "tokens": [821, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.12860713133940826, "compression_ratio": 1.7081545064377683, "no_speech_prob": 4.785005785379326e-06}, {"id": 602, "seek": 336564, "start": 3381.4, "end": 3385.56, "text": " So we're going to need to import random here.", "tokens": [407, 321, 434, 516, 281, 643, 281, 974, 4974, 510, 13], "temperature": 0.0, "avg_logprob": -0.12860713133940826, "compression_ratio": 1.7081545064377683, "no_speech_prob": 4.785005785379326e-06}, {"id": 603, "seek": 336564, "start": 3385.56, "end": 3387.56, "text": " Let me just put it at the top.", "tokens": [961, 385, 445, 829, 309, 412, 264, 1192, 13], "temperature": 0.0, "avg_logprob": -0.12860713133940826, "compression_ratio": 1.7081545064377683, "no_speech_prob": 4.785005785379326e-06}, {"id": 604, "seek": 336564, "start": 3387.56, "end": 3394.52, "text": " Oh, one thing I should mention, it's OK to put an import statement in an exported cell because they're going to be run either way.", "tokens": [876, 11, 472, 551, 286, 820, 2152, 11, 309, 311, 2264, 281, 829, 364, 974, 5629, 294, 364, 42055, 2815, 570, 436, 434, 516, 281, 312, 1190, 2139, 636, 13], "temperature": 0.0, "avg_logprob": -0.12860713133940826, "compression_ratio": 1.7081545064377683, "no_speech_prob": 4.785005785379326e-06}, {"id": 605, "seek": 339452, "start": 3394.52, "end": 3399.16, "text": " That's the one difference is you can put an import inside a cell that's exported.", "tokens": [663, 311, 264, 472, 2649, 307, 291, 393, 829, 364, 974, 1854, 257, 2815, 300, 311, 42055, 13], "temperature": 0.0, "avg_logprob": -0.15515299960299656, "compression_ratio": 1.5572519083969465, "no_speech_prob": 1.777568286343012e-05}, {"id": 606, "seek": 339452, "start": 3399.16, "end": 3403.92, "text": " There we go. Let's take a look at how our documentation is looking.", "tokens": [821, 321, 352, 13, 961, 311, 747, 257, 574, 412, 577, 527, 14333, 307, 1237, 13], "temperature": 0.0, "avg_logprob": -0.15515299960299656, "compression_ratio": 1.5572519083969465, "no_speech_prob": 1.777568286343012e-05}, {"id": 607, "seek": 339452, "start": 3403.92, "end": 3408.44, "text": " Nice. All right, Amal, where should we head now?", "tokens": [5490, 13, 1057, 558, 11, 2012, 304, 11, 689, 820, 321, 1378, 586, 30], "temperature": 0.0, "avg_logprob": -0.15515299960299656, "compression_ratio": 1.5572519083969465, "no_speech_prob": 1.777568286343012e-05}, {"id": 608, "seek": 339452, "start": 3408.44, "end": 3412.52, "text": " Oh, did we want to create the command line interface?", "tokens": [876, 11, 630, 321, 528, 281, 1884, 264, 5622, 1622, 9226, 30], "temperature": 0.0, "avg_logprob": -0.15515299960299656, "compression_ratio": 1.5572519083969465, "no_speech_prob": 1.777568286343012e-05}, {"id": 609, "seek": 339452, "start": 3412.52, "end": 3420.12, "text": " Yeah, sure. Or you want to do a visualization to make sure your draws are doing OK?", "tokens": [865, 11, 988, 13, 1610, 291, 528, 281, 360, 257, 25801, 281, 652, 988, 428, 20045, 366, 884, 2264, 30], "temperature": 0.0, "avg_logprob": -0.15515299960299656, "compression_ratio": 1.5572519083969465, "no_speech_prob": 1.777568286343012e-05}, {"id": 610, "seek": 339452, "start": 3420.12, "end": 3423.36, "text": " I mean, that's already in the tutorial. It's not really anything extra.", "tokens": [286, 914, 11, 300, 311, 1217, 294, 264, 7073, 13, 467, 311, 406, 534, 1340, 2857, 13], "temperature": 0.0, "avg_logprob": -0.15515299960299656, "compression_ratio": 1.5572519083969465, "no_speech_prob": 1.777568286343012e-05}, {"id": 611, "seek": 342336, "start": 3423.36, "end": 3424.96, "text": " OK, no problem.", "tokens": [2264, 11, 572, 1154, 13], "temperature": 0.0, "avg_logprob": -0.2325359616960798, "compression_ratio": 1.456989247311828, "no_speech_prob": 6.295827915892005e-05}, {"id": 612, "seek": 342336, "start": 3424.96, "end": 3428.32, "text": " I mean, the CLI is in the tutorial as well.", "tokens": [286, 914, 11, 264, 12855, 40, 307, 294, 264, 7073, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.2325359616960798, "compression_ratio": 1.456989247311828, "no_speech_prob": 6.295827915892005e-05}, {"id": 613, "seek": 342336, "start": 3428.32, "end": 3435.56, "text": " It's also really not anything extra because this is already pretty long and it's not really MB dev specific.", "tokens": [467, 311, 611, 534, 406, 1340, 2857, 570, 341, 307, 1217, 1238, 938, 293, 309, 311, 406, 534, 28866, 1905, 2685, 13], "temperature": 0.0, "avg_logprob": -0.2325359616960798, "compression_ratio": 1.456989247311828, "no_speech_prob": 6.295827915892005e-05}, {"id": 614, "seek": 342336, "start": 3435.56, "end": 3445.56, "text": " So check out the written version of the tutorial of this online for a couple more handy little tricks.", "tokens": [407, 1520, 484, 264, 3720, 3037, 295, 264, 7073, 295, 341, 2950, 337, 257, 1916, 544, 13239, 707, 11733, 13], "temperature": 0.0, "avg_logprob": -0.2325359616960798, "compression_ratio": 1.456989247311828, "no_speech_prob": 6.295827915892005e-05}, {"id": 615, "seek": 344556, "start": 3445.56, "end": 3460.0, "text": " OK, so to get it ready to send off to GitHub, to send it up to GitHub, one thing that I like to do is to make sure that there's no unnecessary metadata in the notebooks.", "tokens": [2264, 11, 370, 281, 483, 309, 1919, 281, 2845, 766, 281, 23331, 11, 281, 2845, 309, 493, 281, 23331, 11, 472, 551, 300, 286, 411, 281, 360, 307, 281, 652, 988, 300, 456, 311, 572, 19350, 26603, 294, 264, 43782, 13], "temperature": 0.0, "avg_logprob": -0.12406188839084499, "compression_ratio": 1.5981735159817352, "no_speech_prob": 6.438351647375384e-06}, {"id": 616, "seek": 344556, "start": 3460.0, "end": 3466.92, "text": " And so you can manually check to that by using MB dev clean.", "tokens": [400, 370, 291, 393, 16945, 1520, 281, 300, 538, 1228, 28866, 1905, 2541, 13], "temperature": 0.0, "avg_logprob": -0.12406188839084499, "compression_ratio": 1.5981735159817352, "no_speech_prob": 6.438351647375384e-06}, {"id": 617, "seek": 344556, "start": 3466.92, "end": 3469.68, "text": " There's also some Git hooks you can install to do this automatically.", "tokens": [821, 311, 611, 512, 16939, 26485, 291, 393, 3625, 281, 360, 341, 6772, 13], "temperature": 0.0, "avg_logprob": -0.12406188839084499, "compression_ratio": 1.5981735159817352, "no_speech_prob": 6.438351647375384e-06}, {"id": 618, "seek": 344556, "start": 3469.68, "end": 3472.92, "text": " You can look up in the docs if you're interested.", "tokens": [509, 393, 574, 493, 294, 264, 45623, 498, 291, 434, 3102, 13], "temperature": 0.0, "avg_logprob": -0.12406188839084499, "compression_ratio": 1.5981735159817352, "no_speech_prob": 6.438351647375384e-06}, {"id": 619, "seek": 347292, "start": 3472.92, "end": 3482.6800000000003, "text": " And so if you have a look now, we can see what we've got ready to go to GitHub.", "tokens": [400, 370, 498, 291, 362, 257, 574, 586, 11, 321, 393, 536, 437, 321, 600, 658, 1919, 281, 352, 281, 23331, 13], "temperature": 0.0, "avg_logprob": -0.12329877747429742, "compression_ratio": 1.4742857142857142, "no_speech_prob": 6.747303814336192e-06}, {"id": 620, "seek": 347292, "start": 3482.6800000000003, "end": 3484.88, "text": " So we can add all that.", "tokens": [407, 321, 393, 909, 439, 300, 13], "temperature": 0.0, "avg_logprob": -0.12329877747429742, "compression_ratio": 1.4742857142857142, "no_speech_prob": 6.747303814336192e-06}, {"id": 621, "seek": 347292, "start": 3484.88, "end": 3493.44, "text": " Not a bad idea just to make sure you've exported everything, make sure that the tests are working.", "tokens": [1726, 257, 1578, 1558, 445, 281, 652, 988, 291, 600, 42055, 1203, 11, 652, 988, 300, 264, 6921, 366, 1364, 13], "temperature": 0.0, "avg_logprob": -0.12329877747429742, "compression_ratio": 1.4742857142857142, "no_speech_prob": 6.747303814336192e-06}, {"id": 622, "seek": 347292, "start": 3493.44, "end": 3496.6800000000003, "text": " So they're basically the three things. Check the files.", "tokens": [407, 436, 434, 1936, 264, 1045, 721, 13, 6881, 264, 7098, 13], "temperature": 0.0, "avg_logprob": -0.12329877747429742, "compression_ratio": 1.4742857142857142, "no_speech_prob": 6.747303814336192e-06}, {"id": 623, "seek": 349668, "start": 3496.68, "end": 3518.3199999999997, "text": " So there's going to be continuous integration added, documentation deployment added, the notebooks we created, some information about the website, our home page, the two modules we created, our settings file, setup file, sidebar and a style sheet.", "tokens": [407, 456, 311, 516, 281, 312, 10957, 10980, 3869, 11, 14333, 19317, 3869, 11, 264, 43782, 321, 2942, 11, 512, 1589, 466, 264, 3144, 11, 527, 1280, 3028, 11, 264, 732, 16679, 321, 2942, 11, 527, 6257, 3991, 11, 8657, 3991, 11, 1252, 5356, 293, 257, 3758, 8193, 13], "temperature": 0.0, "avg_logprob": -0.2192863341300718, "compression_ratio": 1.5804597701149425, "no_speech_prob": 6.143518930912251e-06}, {"id": 624, "seek": 349668, "start": 3518.3199999999997, "end": 3519.9199999999996, "text": " That all sounds good to me.", "tokens": [663, 439, 3263, 665, 281, 385, 13], "temperature": 0.0, "avg_logprob": -0.2192863341300718, "compression_ratio": 1.5804597701149425, "no_speech_prob": 6.143518930912251e-06}, {"id": 625, "seek": 351992, "start": 3519.92, "end": 3527.8, "text": " I'm tired today. OK, so that gets sent off to GitHub where we should find it.", "tokens": [286, 478, 5868, 965, 13, 2264, 11, 370, 300, 2170, 2279, 766, 281, 23331, 689, 321, 820, 915, 309, 13], "temperature": 0.0, "avg_logprob": -0.1475626957880986, "compression_ratio": 1.5538461538461539, "no_speech_prob": 1.9032504496863112e-06}, {"id": 626, "seek": 351992, "start": 3527.8, "end": 3540.08, "text": " There it is. And so GitHub has something called GitHub Actions that automatically runs things in this GitHub.GitHubWorkflows folder.", "tokens": [821, 309, 307, 13, 400, 370, 23331, 575, 746, 1219, 23331, 3251, 626, 300, 6772, 6676, 721, 294, 341, 23331, 13, 38, 270, 21150, 28846, 33229, 10820, 13], "temperature": 0.0, "avg_logprob": -0.1475626957880986, "compression_ratio": 1.5538461538461539, "no_speech_prob": 1.9032504496863112e-06}, {"id": 627, "seek": 351992, "start": 3540.08, "end": 3547.16, "text": " So one thing you'll find here is that when you push or when somebody puts in a pull request,", "tokens": [407, 472, 551, 291, 603, 915, 510, 307, 300, 562, 291, 2944, 420, 562, 2618, 8137, 294, 257, 2235, 5308, 11], "temperature": 0.0, "avg_logprob": -0.1475626957880986, "compression_ratio": 1.5538461538461539, "no_speech_prob": 1.9032504496863112e-06}, {"id": 628, "seek": 354716, "start": 3547.16, "end": 3552.48, "text": " it's going to run NB dev test, amongst other things.", "tokens": [309, 311, 516, 281, 1190, 426, 33, 1905, 1500, 11, 12918, 661, 721, 13], "temperature": 0.0, "avg_logprob": -0.14705363512039185, "compression_ratio": 1.5106382978723405, "no_speech_prob": 3.089341589657124e-06}, {"id": 629, "seek": 354716, "start": 3552.48, "end": 3560.3999999999996, "text": " And it will also run something called Quarto GHP, which will set up your GitHub pages.", "tokens": [400, 309, 486, 611, 1190, 746, 1219, 2326, 15864, 40690, 47, 11, 597, 486, 992, 493, 428, 23331, 7183, 13], "temperature": 0.0, "avg_logprob": -0.14705363512039185, "compression_ratio": 1.5106382978723405, "no_speech_prob": 3.089341589657124e-06}, {"id": 630, "seek": 354716, "start": 3560.3999999999996, "end": 3569.3999999999996, "text": " So while we wait for that, I'm going to go into pages and tell it that GHPages is the branch.", "tokens": [407, 1339, 321, 1699, 337, 300, 11, 286, 478, 516, 281, 352, 666, 7183, 293, 980, 309, 300, 40690, 47, 1660, 307, 264, 9819, 13], "temperature": 0.0, "avg_logprob": -0.14705363512039185, "compression_ratio": 1.5106382978723405, "no_speech_prob": 3.089341589657124e-06}, {"id": 631, "seek": 354716, "start": 3569.3999999999996, "end": 3574.44, "text": " So that's basically what it uses for GitHub pages.", "tokens": [407, 300, 311, 1936, 437, 309, 4960, 337, 23331, 7183, 13], "temperature": 0.0, "avg_logprob": -0.14705363512039185, "compression_ratio": 1.5106382978723405, "no_speech_prob": 3.089341589657124e-06}, {"id": 632, "seek": 357444, "start": 3574.44, "end": 3581.32, "text": " OK, and so if we look at actions, we can see the area that's all run.", "tokens": [2264, 11, 293, 370, 498, 321, 574, 412, 5909, 11, 321, 393, 536, 264, 1859, 300, 311, 439, 1190, 13], "temperature": 0.0, "avg_logprob": -0.09980090913318453, "compression_ratio": 1.651639344262295, "no_speech_prob": 6.048418072168715e-06}, {"id": 633, "seek": 357444, "start": 3581.32, "end": 3583.7200000000003, "text": " So the CI stands for continuous integrations.", "tokens": [407, 264, 37777, 7382, 337, 10957, 3572, 763, 13], "temperature": 0.0, "avg_logprob": -0.09980090913318453, "compression_ratio": 1.651639344262295, "no_speech_prob": 6.048418072168715e-06}, {"id": 634, "seek": 357444, "start": 3583.7200000000003, "end": 3588.56, "text": " That means our tests are passed and the deployment was completed.", "tokens": [663, 1355, 527, 6921, 366, 4678, 293, 264, 19317, 390, 7365, 13], "temperature": 0.0, "avg_logprob": -0.09980090913318453, "compression_ratio": 1.651639344262295, "no_speech_prob": 6.048418072168715e-06}, {"id": 635, "seek": 357444, "start": 3588.56, "end": 3593.36, "text": " So you can actually click on these things to see them or the steps that they run.", "tokens": [407, 291, 393, 767, 2052, 322, 613, 721, 281, 536, 552, 420, 264, 4439, 300, 436, 1190, 13], "temperature": 0.0, "avg_logprob": -0.09980090913318453, "compression_ratio": 1.651639344262295, "no_speech_prob": 6.048418072168715e-06}, {"id": 636, "seek": 357444, "start": 3593.36, "end": 3596.2400000000002, "text": " And you'll see that installs all the Python stuff.", "tokens": [400, 291, 603, 536, 300, 3625, 82, 439, 264, 15329, 1507, 13], "temperature": 0.0, "avg_logprob": -0.09980090913318453, "compression_ratio": 1.651639344262295, "no_speech_prob": 6.048418072168715e-06}, {"id": 637, "seek": 357444, "start": 3596.2400000000002, "end": 3601.04, "text": " And you can see it basically looks the same as our Quarto did when we ran stuff locally.", "tokens": [400, 291, 393, 536, 309, 1936, 1542, 264, 912, 382, 527, 2326, 15864, 630, 562, 321, 5872, 1507, 16143, 13], "temperature": 0.0, "avg_logprob": -0.09980090913318453, "compression_ratio": 1.651639344262295, "no_speech_prob": 6.048418072168715e-06}, {"id": 638, "seek": 360104, "start": 3601.04, "end": 3606.4, "text": " And then finally, automatically GitHub creates our web page for us.", "tokens": [400, 550, 2721, 11, 6772, 23331, 7829, 527, 3670, 3028, 337, 505, 13], "temperature": 0.0, "avg_logprob": -0.12158717932524504, "compression_ratio": 1.6798245614035088, "no_speech_prob": 3.905390258296393e-06}, {"id": 639, "seek": 360104, "start": 3606.4, "end": 3609.44, "text": " And so you can see it's basically building it there.", "tokens": [400, 370, 291, 393, 536, 309, 311, 1936, 2390, 309, 456, 13], "temperature": 0.0, "avg_logprob": -0.12158717932524504, "compression_ratio": 1.6798245614035088, "no_speech_prob": 3.905390258296393e-06}, {"id": 640, "seek": 360104, "start": 3609.44, "end": 3611.24, "text": " Looks like it's finished building it.", "tokens": [10027, 411, 309, 311, 4335, 2390, 309, 13], "temperature": 0.0, "avg_logprob": -0.12158717932524504, "compression_ratio": 1.6798245614035088, "no_speech_prob": 3.905390258296393e-06}, {"id": 641, "seek": 360104, "start": 3611.24, "end": 3612.2, "text": " OK, it's finished.", "tokens": [2264, 11, 309, 311, 4335, 13], "temperature": 0.0, "avg_logprob": -0.12158717932524504, "compression_ratio": 1.6798245614035088, "no_speech_prob": 3.905390258296393e-06}, {"id": 642, "seek": 360104, "start": 3612.2, "end": 3615.36, "text": " And you can see it tells us here where it's been built to.", "tokens": [400, 291, 393, 536, 309, 5112, 505, 510, 689, 309, 311, 668, 3094, 281, 13], "temperature": 0.0, "avg_logprob": -0.12158717932524504, "compression_ratio": 1.6798245614035088, "no_speech_prob": 3.905390258296393e-06}, {"id": 643, "seek": 360104, "start": 3615.36, "end": 3623.4, "text": " So what I like to do is I tend to copy that and then I go into my settings and paste it here.", "tokens": [407, 437, 286, 411, 281, 360, 307, 286, 3928, 281, 5055, 300, 293, 550, 286, 352, 666, 452, 6257, 293, 9163, 309, 510, 13], "temperature": 0.0, "avg_logprob": -0.12158717932524504, "compression_ratio": 1.6798245614035088, "no_speech_prob": 3.905390258296393e-06}, {"id": 644, "seek": 360104, "start": 3623.4, "end": 3625.84, "text": " There's our website. Awesome.", "tokens": [821, 311, 527, 3144, 13, 10391, 13], "temperature": 0.0, "avg_logprob": -0.12158717932524504, "compression_ratio": 1.6798245614035088, "no_speech_prob": 3.905390258296393e-06}, {"id": 645, "seek": 360104, "start": 3625.84, "end": 3629.16, "text": " Now links are working.", "tokens": [823, 6123, 366, 1364, 13], "temperature": 0.0, "avg_logprob": -0.12158717932524504, "compression_ratio": 1.6798245614035088, "no_speech_prob": 3.905390258296393e-06}, {"id": 646, "seek": 362916, "start": 3629.16, "end": 3632.8799999999997, "text": " OK, so that's looking good.", "tokens": [2264, 11, 370, 300, 311, 1237, 665, 13], "temperature": 0.0, "avg_logprob": -0.16980810518617984, "compression_ratio": 1.6221198156682028, "no_speech_prob": 3.089364099650993e-06}, {"id": 647, "seek": 362916, "start": 3632.8799999999997, "end": 3635.8799999999997, "text": " Shall we put this on PyPyHammel?", "tokens": [12128, 321, 829, 341, 322, 9953, 47, 88, 39, 5136, 338, 30], "temperature": 0.0, "avg_logprob": -0.16980810518617984, "compression_ratio": 1.6221198156682028, "no_speech_prob": 3.089364099650993e-06}, {"id": 648, "seek": 362916, "start": 3635.8799999999997, "end": 3638.56, "text": " Yeah, you know, and that's CI.", "tokens": [865, 11, 291, 458, 11, 293, 300, 311, 37777, 13], "temperature": 0.0, "avg_logprob": -0.16980810518617984, "compression_ratio": 1.6221198156682028, "no_speech_prob": 3.089364099650993e-06}, {"id": 649, "seek": 362916, "start": 3638.56, "end": 3645.92, "text": " I mean, I just want to point out, like most projects at this point, you would only just have code.", "tokens": [286, 914, 11, 286, 445, 528, 281, 935, 484, 11, 411, 881, 4455, 412, 341, 935, 11, 291, 576, 787, 445, 362, 3089, 13], "temperature": 0.0, "avg_logprob": -0.16980810518617984, "compression_ratio": 1.6221198156682028, "no_speech_prob": 3.089364099650993e-06}, {"id": 650, "seek": 362916, "start": 3645.92, "end": 3651.6, "text": " So at this point, we have CI, we have a documentation site.", "tokens": [407, 412, 341, 935, 11, 321, 362, 37777, 11, 321, 362, 257, 14333, 3621, 13], "temperature": 0.0, "avg_logprob": -0.16980810518617984, "compression_ratio": 1.6221198156682028, "no_speech_prob": 3.089364099650993e-06}, {"id": 651, "seek": 362916, "start": 3651.6, "end": 3657.04, "text": " And this is the point where, you know, when I'm personally coding and I'm kind of down at this point,", "tokens": [400, 341, 307, 264, 935, 689, 11, 291, 458, 11, 562, 286, 478, 5665, 17720, 293, 286, 478, 733, 295, 760, 412, 341, 935, 11], "temperature": 0.0, "avg_logprob": -0.16980810518617984, "compression_ratio": 1.6221198156682028, "no_speech_prob": 3.089364099650993e-06}, {"id": 652, "seek": 365704, "start": 3657.04, "end": 3663.56, "text": " and it's exciting because I just like my colleague, you know, I just say, hey, like I created that tool you wanted.", "tokens": [293, 309, 311, 4670, 570, 286, 445, 411, 452, 13532, 11, 291, 458, 11, 286, 445, 584, 11, 4177, 11, 411, 286, 2942, 300, 2290, 291, 1415, 13], "temperature": 0.0, "avg_logprob": -0.2067142833362926, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.747740371793043e-06}, {"id": 653, "seek": 365704, "start": 3663.56, "end": 3665.48, "text": " And then here's the website.", "tokens": [400, 550, 510, 311, 264, 3144, 13], "temperature": 0.0, "avg_logprob": -0.2067142833362926, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.747740371793043e-06}, {"id": 654, "seek": 365704, "start": 3665.48, "end": 3668.04, "text": " And they're like, you have a website?", "tokens": [400, 436, 434, 411, 11, 291, 362, 257, 3144, 30], "temperature": 0.0, "avg_logprob": -0.2067142833362926, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.747740371793043e-06}, {"id": 655, "seek": 365704, "start": 3668.04, "end": 3669.56, "text": " Yeah, check it out.", "tokens": [865, 11, 1520, 309, 484, 13], "temperature": 0.0, "avg_logprob": -0.2067142833362926, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.747740371793043e-06}, {"id": 656, "seek": 365704, "start": 3669.56, "end": 3671.92, "text": " You can install it in PyPyHammel.", "tokens": [509, 393, 3625, 309, 294, 9953, 47, 88, 39, 5136, 338, 13], "temperature": 0.0, "avg_logprob": -0.2067142833362926, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.747740371793043e-06}, {"id": 657, "seek": 365704, "start": 3671.92, "end": 3673.84, "text": " Yeah. And then they're like, wow.", "tokens": [865, 13, 400, 550, 436, 434, 411, 11, 6076, 13], "temperature": 0.0, "avg_logprob": -0.2067142833362926, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.747740371793043e-06}, {"id": 658, "seek": 365704, "start": 3673.84, "end": 3675.7599999999998, "text": " And then also you can just PyP install it.", "tokens": [400, 550, 611, 291, 393, 445, 9953, 47, 3625, 309, 13], "temperature": 0.0, "avg_logprob": -0.2067142833362926, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.747740371793043e-06}, {"id": 659, "seek": 365704, "start": 3675.7599999999998, "end": 3677.08, "text": " And also you have CI.", "tokens": [400, 611, 291, 362, 37777, 13], "temperature": 0.0, "avg_logprob": -0.2067142833362926, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.747740371793043e-06}, {"id": 660, "seek": 365704, "start": 3677.08, "end": 3682.04, "text": " Like, how did you do all this in such a short amount of time?", "tokens": [1743, 11, 577, 630, 291, 360, 439, 341, 294, 1270, 257, 2099, 2372, 295, 565, 30], "temperature": 0.0, "avg_logprob": -0.2067142833362926, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.747740371793043e-06}, {"id": 661, "seek": 365704, "start": 3682.04, "end": 3685.32, "text": " It's awesome.", "tokens": [467, 311, 3476, 13], "temperature": 0.0, "avg_logprob": -0.2067142833362926, "compression_ratio": 1.726890756302521, "no_speech_prob": 6.747740371793043e-06}, {"id": 662, "seek": 368532, "start": 3685.32, "end": 3693.0800000000004, "text": " Our readme is not working. Oh, you know, the other thing we should have done is run nbdev docs.", "tokens": [2621, 1401, 1398, 307, 406, 1364, 13, 876, 11, 291, 458, 11, 264, 661, 551, 321, 820, 362, 1096, 307, 1190, 297, 65, 40343, 45623, 13], "temperature": 0.0, "avg_logprob": -0.21941845557268927, "compression_ratio": 1.5225806451612902, "no_speech_prob": 1.2802739547623787e-05}, {"id": 663, "seek": 368532, "start": 3693.0800000000004, "end": 3703.88, "text": " And the reason for that is that that kind of does a trial run of the same thing that it's going to have,", "tokens": [400, 264, 1778, 337, 300, 307, 300, 300, 733, 295, 775, 257, 7308, 1190, 295, 264, 912, 551, 300, 309, 311, 516, 281, 362, 11], "temperature": 0.0, "avg_logprob": -0.21941845557268927, "compression_ratio": 1.5225806451612902, "no_speech_prob": 1.2802739547623787e-05}, {"id": 664, "seek": 368532, "start": 3703.88, "end": 3707.1600000000003, "text": " that GitHub Actions is going to do.", "tokens": [300, 23331, 3251, 626, 307, 516, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.21941845557268927, "compression_ratio": 1.5225806451612902, "no_speech_prob": 1.2802739547623787e-05}, {"id": 665, "seek": 370716, "start": 3707.16, "end": 3717.72, "text": " But what it also does is it updates our readme to contain the same contents as the home page does.", "tokens": [583, 437, 309, 611, 775, 307, 309, 9205, 527, 1401, 1398, 281, 5304, 264, 912, 15768, 382, 264, 1280, 3028, 775, 13], "temperature": 0.0, "avg_logprob": -0.14227586473737444, "compression_ratio": 1.6695278969957081, "no_speech_prob": 4.02916839448153e-06}, {"id": 666, "seek": 370716, "start": 3717.72, "end": 3721.56, "text": " Keep forgetting I haven't got this alias installed.", "tokens": [5527, 25428, 286, 2378, 380, 658, 341, 419, 4609, 8899, 13], "temperature": 0.0, "avg_logprob": -0.14227586473737444, "compression_ratio": 1.6695278969957081, "no_speech_prob": 4.02916839448153e-06}, {"id": 667, "seek": 370716, "start": 3721.56, "end": 3727.12, "text": " So if we now look, the other thing which we've got is a beautiful readme.", "tokens": [407, 498, 321, 586, 574, 11, 264, 661, 551, 597, 321, 600, 658, 307, 257, 2238, 1401, 1398, 13], "temperature": 0.0, "avg_logprob": -0.14227586473737444, "compression_ratio": 1.6695278969957081, "no_speech_prob": 4.02916839448153e-06}, {"id": 668, "seek": 370716, "start": 3727.12, "end": 3730.92, "text": " So that comes from our index.ipy and that's going to be the same as the home page.", "tokens": [407, 300, 1487, 490, 527, 8186, 13, 647, 88, 293, 300, 311, 516, 281, 312, 264, 912, 382, 264, 1280, 3028, 13], "temperature": 0.0, "avg_logprob": -0.14227586473737444, "compression_ratio": 1.6695278969957081, "no_speech_prob": 4.02916839448153e-06}, {"id": 669, "seek": 370716, "start": 3730.92, "end": 3734.2, "text": " It won't be as beautiful as a home page because it's using more limited markdown.", "tokens": [467, 1582, 380, 312, 382, 2238, 382, 257, 1280, 3028, 570, 309, 311, 1228, 544, 5567, 1491, 5093, 13], "temperature": 0.0, "avg_logprob": -0.14227586473737444, "compression_ratio": 1.6695278969957081, "no_speech_prob": 4.02916839448153e-06}, {"id": 670, "seek": 373420, "start": 3734.2, "end": 3737.52, "text": " But the basics are there.", "tokens": [583, 264, 14688, 366, 456, 13], "temperature": 0.0, "avg_logprob": -0.1415564860772649, "compression_ratio": 1.671875, "no_speech_prob": 5.86237456445815e-06}, {"id": 671, "seek": 373420, "start": 3737.52, "end": 3743.64, "text": " OK, so we can see that there's an nbdev PyPy to upload to PyPy.", "tokens": [2264, 11, 370, 321, 393, 536, 300, 456, 311, 364, 297, 65, 40343, 9953, 47, 88, 281, 6580, 281, 9953, 47, 88, 13], "temperature": 0.0, "avg_logprob": -0.1415564860772649, "compression_ratio": 1.671875, "no_speech_prob": 5.86237456445815e-06}, {"id": 672, "seek": 373420, "start": 3743.64, "end": 3750.2, "text": " And there's another one for Conda doing Conda or just nbdev release to do both.", "tokens": [400, 456, 311, 1071, 472, 337, 383, 12233, 884, 383, 12233, 420, 445, 297, 65, 40343, 4374, 281, 360, 1293, 13], "temperature": 0.0, "avg_logprob": -0.1415564860772649, "compression_ratio": 1.671875, "no_speech_prob": 5.86237456445815e-06}, {"id": 673, "seek": 373420, "start": 3750.2, "end": 3752.4399999999996, "text": " I'm just going to do PyPy for now.", "tokens": [286, 478, 445, 516, 281, 360, 9953, 47, 88, 337, 586, 13], "temperature": 0.0, "avg_logprob": -0.1415564860772649, "compression_ratio": 1.671875, "no_speech_prob": 5.86237456445815e-06}, {"id": 674, "seek": 373420, "start": 3752.4399999999996, "end": 3754.3999999999996, "text": " All right, so let's run it.", "tokens": [1057, 558, 11, 370, 718, 311, 1190, 309, 13], "temperature": 0.0, "avg_logprob": -0.1415564860772649, "compression_ratio": 1.671875, "no_speech_prob": 5.86237456445815e-06}, {"id": 675, "seek": 373420, "start": 3754.3999999999996, "end": 3756.72, "text": " And it uploads to PyPy.", "tokens": [400, 309, 48611, 281, 9953, 47, 88, 13], "temperature": 0.0, "avg_logprob": -0.1415564860772649, "compression_ratio": 1.671875, "no_speech_prob": 5.86237456445815e-06}, {"id": 676, "seek": 373420, "start": 3756.72, "end": 3761.16, "text": " And just at the end, it's also automatically bumped the version.", "tokens": [400, 445, 412, 264, 917, 11, 309, 311, 611, 6772, 42696, 264, 3037, 13], "temperature": 0.0, "avg_logprob": -0.1415564860772649, "compression_ratio": 1.671875, "no_speech_prob": 5.86237456445815e-06}, {"id": 677, "seek": 376116, "start": 3761.16, "end": 3764.72, "text": " You can see here it's gone to version 2.", "tokens": [509, 393, 536, 510, 309, 311, 2780, 281, 3037, 568, 13], "temperature": 0.0, "avg_logprob": -0.19197190838095582, "compression_ratio": 1.4945652173913044, "no_speech_prob": 8.938265636970755e-06}, {"id": 678, "seek": 376116, "start": 3764.72, "end": 3772.0, "text": " So I tend to just go git commit minus am bump.", "tokens": [407, 286, 3928, 281, 445, 352, 18331, 5599, 3175, 669, 9961, 13], "temperature": 0.0, "avg_logprob": -0.19197190838095582, "compression_ratio": 1.4945652173913044, "no_speech_prob": 8.938265636970755e-06}, {"id": 679, "seek": 376116, "start": 3772.0, "end": 3774.96, "text": " And it says I can view it here.", "tokens": [400, 309, 1619, 286, 393, 1910, 309, 510, 13], "temperature": 0.0, "avg_logprob": -0.19197190838095582, "compression_ratio": 1.4945652173913044, "no_speech_prob": 8.938265636970755e-06}, {"id": 680, "seek": 376116, "start": 3774.96, "end": 3775.64, "text": " There it is.", "tokens": [821, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.19197190838095582, "compression_ratio": 1.4945652173913044, "no_speech_prob": 8.938265636970755e-06}, {"id": 681, "seek": 376116, "start": 3775.64, "end": 3782.12, "text": " And you can see it's even put the project description, project home page.", "tokens": [400, 291, 393, 536, 309, 311, 754, 829, 264, 1716, 3855, 11, 1716, 1280, 3028, 13], "temperature": 0.0, "avg_logprob": -0.19197190838095582, "compression_ratio": 1.4945652173913044, "no_speech_prob": 8.938265636970755e-06}, {"id": 682, "seek": 376116, "start": 3782.12, "end": 3788.0, "text": " It's all been done automatically, which I think is all the metadata.", "tokens": [467, 311, 439, 668, 1096, 6772, 11, 597, 286, 519, 307, 439, 264, 26603, 13], "temperature": 0.0, "avg_logprob": -0.19197190838095582, "compression_ratio": 1.4945652173913044, "no_speech_prob": 8.938265636970755e-06}, {"id": 683, "seek": 378800, "start": 3788.0, "end": 3791.36, "text": " It looks like a very professional and polished library for something", "tokens": [467, 1542, 411, 257, 588, 4843, 293, 29079, 6405, 337, 746], "temperature": 0.0, "avg_logprob": -0.14873631795247397, "compression_ratio": 1.6576923076923078, "no_speech_prob": 3.8447328734037e-06}, {"id": 684, "seek": 378800, "start": 3791.36, "end": 3794.56, "text": " that we spent under two hours on.", "tokens": [300, 321, 4418, 833, 732, 2496, 322, 13], "temperature": 0.0, "avg_logprob": -0.14873631795247397, "compression_ratio": 1.6576923076923078, "no_speech_prob": 3.8447328734037e-06}, {"id": 685, "seek": 378800, "start": 3794.56, "end": 3802.8, "text": " And furthermore, it's not just for little quick two-hour things like this.", "tokens": [400, 3052, 3138, 11, 309, 311, 406, 445, 337, 707, 1702, 732, 12, 18048, 721, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.14873631795247397, "compression_ratio": 1.6576923076923078, "no_speech_prob": 3.8447328734037e-06}, {"id": 686, "seek": 378800, "start": 3802.8, "end": 3805.8, "text": " Well, you and I have both written libraries that have taken years", "tokens": [1042, 11, 291, 293, 286, 362, 1293, 3720, 15148, 300, 362, 2726, 924], "temperature": 0.0, "avg_logprob": -0.14873631795247397, "compression_ratio": 1.6576923076923078, "no_speech_prob": 3.8447328734037e-06}, {"id": 687, "seek": 378800, "start": 3805.8, "end": 3810.32, "text": " with thousands of lines of code and dozens of modules and tens or hundreds", "tokens": [365, 5383, 295, 3876, 295, 3089, 293, 18431, 295, 16679, 293, 10688, 420, 6779], "temperature": 0.0, "avg_logprob": -0.14873631795247397, "compression_ratio": 1.6576923076923078, "no_speech_prob": 3.8447328734037e-06}, {"id": 688, "seek": 378800, "start": 3810.32, "end": 3811.8, "text": " of thousands of users.", "tokens": [295, 5383, 295, 5022, 13], "temperature": 0.0, "avg_logprob": -0.14873631795247397, "compression_ratio": 1.6576923076923078, "no_speech_prob": 3.8447328734037e-06}, {"id": 689, "seek": 378800, "start": 3811.8, "end": 3813.64, "text": " Yeah, no, it's great.", "tokens": [865, 11, 572, 11, 309, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.14873631795247397, "compression_ratio": 1.6576923076923078, "no_speech_prob": 3.8447328734037e-06}, {"id": 690, "seek": 378800, "start": 3813.64, "end": 3816.8, "text": " And imagine what it's like to make a PR onto one of these projects.", "tokens": [400, 3811, 437, 309, 311, 411, 281, 652, 257, 11568, 3911, 472, 295, 613, 4455, 13], "temperature": 0.0, "avg_logprob": -0.14873631795247397, "compression_ratio": 1.6576923076923078, "no_speech_prob": 3.8447328734037e-06}, {"id": 691, "seek": 381680, "start": 3816.8, "end": 3821.2400000000002, "text": " So let's just say I don't have any idea how DEC works at all.", "tokens": [407, 718, 311, 445, 584, 286, 500, 380, 362, 604, 1558, 577, 413, 8140, 1985, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.1468074505145733, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.961691269680159e-06}, {"id": 692, "seek": 381680, "start": 3821.2400000000002, "end": 3822.88, "text": " I'm like, what is this DEC thing?", "tokens": [286, 478, 411, 11, 437, 307, 341, 413, 8140, 551, 30], "temperature": 0.0, "avg_logprob": -0.1468074505145733, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.961691269680159e-06}, {"id": 693, "seek": 381680, "start": 3822.88, "end": 3823.6800000000003, "text": " Never seen it.", "tokens": [7344, 1612, 309, 13], "temperature": 0.0, "avg_logprob": -0.1468074505145733, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.961691269680159e-06}, {"id": 694, "seek": 381680, "start": 3823.6800000000003, "end": 3824.6800000000003, "text": " I don't know.", "tokens": [286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.1468074505145733, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.961691269680159e-06}, {"id": 695, "seek": 381680, "start": 3824.6800000000003, "end": 3829.7200000000003, "text": " And without knowing anything about the code, I just go to that notebook.", "tokens": [400, 1553, 5276, 1340, 466, 264, 3089, 11, 286, 445, 352, 281, 300, 21060, 13], "temperature": 0.0, "avg_logprob": -0.1468074505145733, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.961691269680159e-06}, {"id": 696, "seek": 381680, "start": 3829.7200000000003, "end": 3832.2000000000003, "text": " And there's already the entry point for me.", "tokens": [400, 456, 311, 1217, 264, 8729, 935, 337, 385, 13], "temperature": 0.0, "avg_logprob": -0.1468074505145733, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.961691269680159e-06}, {"id": 697, "seek": 381680, "start": 3832.2000000000003, "end": 3833.2400000000002, "text": " There's the code.", "tokens": [821, 311, 264, 3089, 13], "temperature": 0.0, "avg_logprob": -0.1468074505145733, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.961691269680159e-06}, {"id": 698, "seek": 381680, "start": 3833.2400000000002, "end": 3838.0, "text": " And then there's sample based on how to run it with documentation right there.", "tokens": [400, 550, 456, 311, 6889, 2361, 322, 577, 281, 1190, 309, 365, 14333, 558, 456, 13], "temperature": 0.0, "avg_logprob": -0.1468074505145733, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.961691269680159e-06}, {"id": 699, "seek": 381680, "start": 3838.0, "end": 3839.2400000000002, "text": " So there's no confusion.", "tokens": [407, 456, 311, 572, 15075, 13], "temperature": 0.0, "avg_logprob": -0.1468074505145733, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.961691269680159e-06}, {"id": 700, "seek": 381680, "start": 3839.2400000000002, "end": 3844.88, "text": " And then I can notice that we've got a lot of pull requests, just high quality", "tokens": [400, 550, 286, 393, 3449, 300, 321, 600, 658, 257, 688, 295, 2235, 12475, 11, 445, 1090, 3125], "temperature": 0.0, "avg_logprob": -0.1468074505145733, "compression_ratio": 1.6742424242424243, "no_speech_prob": 6.961691269680159e-06}, {"id": 701, "seek": 384488, "start": 3844.88, "end": 3849.6, "text": " ones making the documentation better, making the test better, because people", "tokens": [2306, 1455, 264, 14333, 1101, 11, 1455, 264, 1500, 1101, 11, 570, 561], "temperature": 0.0, "avg_logprob": -0.16826437480414091, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.3210789802542422e-05}, {"id": 702, "seek": 384488, "start": 3849.6, "end": 3852.36, "text": " read it, they get confused, and they just resolve their confusion.", "tokens": [1401, 309, 11, 436, 483, 9019, 11, 293, 436, 445, 14151, 641, 15075, 13], "temperature": 0.0, "avg_logprob": -0.16826437480414091, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.3210789802542422e-05}, {"id": 703, "seek": 384488, "start": 3852.36, "end": 3856.12, "text": " They just say, hey, I'm just going to edit this real quick and submit a PR.", "tokens": [814, 445, 584, 11, 4177, 11, 286, 478, 445, 516, 281, 8129, 341, 957, 1702, 293, 10315, 257, 11568, 13], "temperature": 0.0, "avg_logprob": -0.16826437480414091, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.3210789802542422e-05}, {"id": 704, "seek": 384488, "start": 3856.12, "end": 3858.0, "text": " Yeah, I mean, let's have a look at an example.", "tokens": [865, 11, 286, 914, 11, 718, 311, 362, 257, 574, 412, 364, 1365, 13], "temperature": 0.0, "avg_logprob": -0.16826437480414091, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.3210789802542422e-05}, {"id": 705, "seek": 384488, "start": 3858.0, "end": 3863.6400000000003, "text": " So Rasta is an example of a package which uses MBDEV.", "tokens": [407, 497, 12468, 307, 364, 1365, 295, 257, 7372, 597, 4960, 28866, 22296, 53, 13], "temperature": 0.0, "avg_logprob": -0.16826437480414091, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.3210789802542422e-05}, {"id": 706, "seek": 384488, "start": 3863.6400000000003, "end": 3869.28, "text": " It's got over 20,000 stars on GitHub, over 7,000 forks.", "tokens": [467, 311, 658, 670, 945, 11, 1360, 6105, 322, 23331, 11, 670, 1614, 11, 1360, 337, 1694, 13], "temperature": 0.0, "avg_logprob": -0.16826437480414091, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.3210789802542422e-05}, {"id": 707, "seek": 384488, "start": 3869.28, "end": 3871.88, "text": " So here's an example of an open PR.", "tokens": [407, 510, 311, 364, 1365, 295, 364, 1269, 11568, 13], "temperature": 0.0, "avg_logprob": -0.16826437480414091, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.3210789802542422e-05}, {"id": 708, "seek": 384488, "start": 3871.88, "end": 3873.6800000000003, "text": " And one thing that we'd use, which is fine,", "tokens": [400, 472, 551, 300, 321, 1116, 764, 11, 597, 307, 2489, 11], "temperature": 0.0, "avg_logprob": -0.16826437480414091, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.3210789802542422e-05}, {"id": 709, "seek": 387368, "start": 3873.68, "end": 3877.96, "text": " is there's a thing called Review MB, which actually means I can click a button here.", "tokens": [307, 456, 311, 257, 551, 1219, 19954, 28866, 11, 597, 767, 1355, 286, 393, 2052, 257, 2960, 510, 13], "temperature": 0.0, "avg_logprob": -0.12709303185491277, "compression_ratio": 1.746606334841629, "no_speech_prob": 1.593408342159819e-05}, {"id": 710, "seek": 387368, "start": 3877.96, "end": 3884.56, "text": " And because it's all in notebooks, I can immediately see the documentation", "tokens": [400, 570, 309, 311, 439, 294, 43782, 11, 286, 393, 4258, 536, 264, 14333], "temperature": 0.0, "avg_logprob": -0.12709303185491277, "compression_ratio": 1.746606334841629, "no_speech_prob": 1.593408342159819e-05}, {"id": 711, "seek": 387368, "start": 3884.56, "end": 3885.44, "text": " that I've added.", "tokens": [300, 286, 600, 3869, 13], "temperature": 0.0, "avg_logprob": -0.12709303185491277, "compression_ratio": 1.746606334841629, "no_speech_prob": 1.593408342159819e-05}, {"id": 712, "seek": 387368, "start": 3885.44, "end": 3889.68, "text": " And I can make comments on the documentation.", "tokens": [400, 286, 393, 652, 3053, 322, 264, 14333, 13], "temperature": 0.0, "avg_logprob": -0.12709303185491277, "compression_ratio": 1.746606334841629, "no_speech_prob": 1.593408342159819e-05}, {"id": 713, "seek": 387368, "start": 3889.68, "end": 3892.3199999999997, "text": " And I can see the source code that's been changed.", "tokens": [400, 286, 393, 536, 264, 4009, 3089, 300, 311, 668, 3105, 13], "temperature": 0.0, "avg_logprob": -0.12709303185491277, "compression_ratio": 1.746606334841629, "no_speech_prob": 1.593408342159819e-05}, {"id": 714, "seek": 387368, "start": 3892.3199999999997, "end": 3895.2799999999997, "text": " I can see if they've added or removed any tests.", "tokens": [286, 393, 536, 498, 436, 600, 3869, 420, 7261, 604, 6921, 13], "temperature": 0.0, "avg_logprob": -0.12709303185491277, "compression_ratio": 1.746606334841629, "no_speech_prob": 1.593408342159819e-05}, {"id": 715, "seek": 387368, "start": 3895.2799999999997, "end": 3900.52, "text": " I can see if any of the output graphs or whatever have changed.", "tokens": [286, 393, 536, 498, 604, 295, 264, 5598, 24877, 420, 2035, 362, 3105, 13], "temperature": 0.0, "avg_logprob": -0.12709303185491277, "compression_ratio": 1.746606334841629, "no_speech_prob": 1.593408342159819e-05}, {"id": 716, "seek": 390052, "start": 3900.52, "end": 3907.92, "text": " And yeah, it's nice both for me as the person reviewing that PR,", "tokens": [400, 1338, 11, 309, 311, 1481, 1293, 337, 385, 382, 264, 954, 19576, 300, 11568, 11], "temperature": 0.0, "avg_logprob": -0.15865032627897444, "compression_ratio": 1.5872340425531914, "no_speech_prob": 4.4251578401599545e-06}, {"id": 717, "seek": 390052, "start": 3907.92, "end": 3910.52, "text": " and also, as you say, for the person making that PR,", "tokens": [293, 611, 11, 382, 291, 584, 11, 337, 264, 954, 1455, 300, 11568, 11], "temperature": 0.0, "avg_logprob": -0.15865032627897444, "compression_ratio": 1.5872340425531914, "no_speech_prob": 4.4251578401599545e-06}, {"id": 718, "seek": 390052, "start": 3910.52, "end": 3915.68, "text": " that we're very much all on the same page about what's going on.", "tokens": [300, 321, 434, 588, 709, 439, 322, 264, 912, 3028, 466, 437, 311, 516, 322, 13], "temperature": 0.0, "avg_logprob": -0.15865032627897444, "compression_ratio": 1.5872340425531914, "no_speech_prob": 4.4251578401599545e-06}, {"id": 719, "seek": 390052, "start": 3915.68, "end": 3921.36, "text": " So yeah, I find we tend to get pretty high quality pull requests to our projects.", "tokens": [407, 1338, 11, 286, 915, 321, 3928, 281, 483, 1238, 1090, 3125, 2235, 12475, 281, 527, 4455, 13], "temperature": 0.0, "avg_logprob": -0.15865032627897444, "compression_ratio": 1.5872340425531914, "no_speech_prob": 4.4251578401599545e-06}, {"id": 720, "seek": 390052, "start": 3921.36, "end": 3925.04, "text": " And what's great is, so this is only kind of the tip of the iceberg.", "tokens": [400, 437, 311, 869, 307, 11, 370, 341, 307, 787, 733, 295, 264, 4125, 295, 264, 38880, 13], "temperature": 0.0, "avg_logprob": -0.15865032627897444, "compression_ratio": 1.5872340425531914, "no_speech_prob": 4.4251578401599545e-06}, {"id": 721, "seek": 390052, "start": 3925.04, "end": 3926.6, "text": " Like, there's a lot of exciting things.", "tokens": [1743, 11, 456, 311, 257, 688, 295, 4670, 721, 13], "temperature": 0.0, "avg_logprob": -0.15865032627897444, "compression_ratio": 1.5872340425531914, "no_speech_prob": 4.4251578401599545e-06}, {"id": 722, "seek": 392660, "start": 3926.6, "end": 3932.36, "text": " So you can use the same tools that we've shown today to just make a website.", "tokens": [407, 291, 393, 764, 264, 912, 3873, 300, 321, 600, 4898, 965, 281, 445, 652, 257, 3144, 13], "temperature": 0.0, "avg_logprob": -0.1684158832043201, "compression_ratio": 1.828996282527881, "no_speech_prob": 2.2466112568508834e-05}, {"id": 723, "seek": 392660, "start": 3932.36, "end": 3934.4, "text": " Let's say you don't want to necessarily write code.", "tokens": [961, 311, 584, 291, 500, 380, 528, 281, 4725, 2464, 3089, 13], "temperature": 0.0, "avg_logprob": -0.1684158832043201, "compression_ratio": 1.828996282527881, "no_speech_prob": 2.2466112568508834e-05}, {"id": 724, "seek": 392660, "start": 3934.4, "end": 3937.88, "text": " Maybe you want to just write a blog.", "tokens": [2704, 291, 528, 281, 445, 2464, 257, 6968, 13], "temperature": 0.0, "avg_logprob": -0.1684158832043201, "compression_ratio": 1.828996282527881, "no_speech_prob": 2.2466112568508834e-05}, {"id": 725, "seek": 392660, "start": 3937.88, "end": 3943.44, "text": " So we'll have a tutorial or video, like, at some time in the near future that shows,", "tokens": [407, 321, 603, 362, 257, 7073, 420, 960, 11, 411, 11, 412, 512, 565, 294, 264, 2651, 2027, 300, 3110, 11], "temperature": 0.0, "avg_logprob": -0.1684158832043201, "compression_ratio": 1.828996282527881, "no_speech_prob": 2.2466112568508834e-05}, {"id": 726, "seek": 392660, "start": 3943.44, "end": 3945.3199999999997, "text": " OK, how do you do write a blog?", "tokens": [2264, 11, 577, 360, 291, 360, 2464, 257, 6968, 30], "temperature": 0.0, "avg_logprob": -0.1684158832043201, "compression_ratio": 1.828996282527881, "no_speech_prob": 2.2466112568508834e-05}, {"id": 727, "seek": 392660, "start": 3945.3199999999997, "end": 3947.44, "text": " And then also, you can just have a website, too,", "tokens": [400, 550, 611, 11, 291, 393, 445, 362, 257, 3144, 11, 886, 11], "temperature": 0.0, "avg_logprob": -0.1684158832043201, "compression_ratio": 1.828996282527881, "no_speech_prob": 2.2466112568508834e-05}, {"id": 728, "seek": 392660, "start": 3947.44, "end": 3951.3199999999997, "text": " that maybe you just want to make a tutorial on, let's say, how to use Fast AI", "tokens": [300, 1310, 291, 445, 528, 281, 652, 257, 7073, 322, 11, 718, 311, 584, 11, 577, 281, 764, 15968, 7318], "temperature": 0.0, "avg_logprob": -0.1684158832043201, "compression_ratio": 1.828996282527881, "no_speech_prob": 2.2466112568508834e-05}, {"id": 729, "seek": 392660, "start": 3951.3199999999997, "end": 3953.2, "text": " or how to use your favorite library.", "tokens": [420, 577, 281, 764, 428, 2954, 6405, 13], "temperature": 0.0, "avg_logprob": -0.1684158832043201, "compression_ratio": 1.828996282527881, "no_speech_prob": 2.2466112568508834e-05}, {"id": 730, "seek": 392660, "start": 3953.2, "end": 3956.44, "text": " You can use the same set of tools to do that.", "tokens": [509, 393, 764, 264, 912, 992, 295, 3873, 281, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.1684158832043201, "compression_ratio": 1.828996282527881, "no_speech_prob": 2.2466112568508834e-05}, {"id": 731, "seek": 395644, "start": 3956.44, "end": 3958.48, "text": " And there's all kinds of advanced stuff that you can do, too.", "tokens": [400, 456, 311, 439, 3685, 295, 7339, 1507, 300, 291, 393, 360, 11, 886, 13], "temperature": 0.0, "avg_logprob": -0.13136137390136718, "compression_ratio": 1.6392857142857142, "no_speech_prob": 8.139151759678498e-06}, {"id": 732, "seek": 395644, "start": 3958.48, "end": 3959.7200000000003, "text": " Like, Quarto is very powerful.", "tokens": [1743, 11, 2326, 15864, 307, 588, 4005, 13], "temperature": 0.0, "avg_logprob": -0.13136137390136718, "compression_ratio": 1.6392857142857142, "no_speech_prob": 8.139151759678498e-06}, {"id": 733, "seek": 395644, "start": 3959.7200000000003, "end": 3965.32, "text": " You can make books from it, slides, all kinds of different formats.", "tokens": [509, 393, 652, 3642, 490, 309, 11, 9788, 11, 439, 3685, 295, 819, 25879, 13], "temperature": 0.0, "avg_logprob": -0.13136137390136718, "compression_ratio": 1.6392857142857142, "no_speech_prob": 8.139151759678498e-06}, {"id": 734, "seek": 395644, "start": 3965.32, "end": 3970.16, "text": " And so it's the same for making any kind of technical content as well.", "tokens": [400, 370, 309, 311, 264, 912, 337, 1455, 604, 733, 295, 6191, 2701, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.13136137390136718, "compression_ratio": 1.6392857142857142, "no_speech_prob": 8.139151759678498e-06}, {"id": 735, "seek": 395644, "start": 3970.16, "end": 3972.2400000000002, "text": " So yeah, it's really exciting.", "tokens": [407, 1338, 11, 309, 311, 534, 4670, 13], "temperature": 0.0, "avg_logprob": -0.13136137390136718, "compression_ratio": 1.6392857142857142, "no_speech_prob": 8.139151759678498e-06}, {"id": 736, "seek": 395644, "start": 3972.2400000000002, "end": 3976.96, "text": " Yeah, and it's a whole different philosophy of how to write software.", "tokens": [865, 11, 293, 309, 311, 257, 1379, 819, 10675, 295, 577, 281, 2464, 4722, 13], "temperature": 0.0, "avg_logprob": -0.13136137390136718, "compression_ratio": 1.6392857142857142, "no_speech_prob": 8.139151759678498e-06}, {"id": 737, "seek": 395644, "start": 3976.96, "end": 3980.48, "text": " And yeah, I think it's you and I have both got the experience now", "tokens": [400, 1338, 11, 286, 519, 309, 311, 291, 293, 286, 362, 1293, 658, 264, 1752, 586], "temperature": 0.0, "avg_logprob": -0.13136137390136718, "compression_ratio": 1.6392857142857142, "no_speech_prob": 8.139151759678498e-06}, {"id": 738, "seek": 395644, "start": 3980.48, "end": 3983.2000000000003, "text": " that it's made us more productive and we're having more fun.", "tokens": [300, 309, 311, 1027, 505, 544, 13304, 293, 321, 434, 1419, 544, 1019, 13], "temperature": 0.0, "avg_logprob": -0.13136137390136718, "compression_ratio": 1.6392857142857142, "no_speech_prob": 8.139151759678498e-06}, {"id": 739, "seek": 398320, "start": 3983.2, "end": 3986.8399999999997, "text": " So it's good to be doing this tutorial to think about people watching it", "tokens": [407, 309, 311, 665, 281, 312, 884, 341, 7073, 281, 519, 466, 561, 1976, 309], "temperature": 0.0, "avg_logprob": -0.17173070805047147, "compression_ratio": 1.5673076923076923, "no_speech_prob": 2.4272454538731836e-05}, {"id": 740, "seek": 398320, "start": 3986.8399999999997, "end": 3989.72, "text": " that are going to join this journey as well.", "tokens": [300, 366, 516, 281, 3917, 341, 4671, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.17173070805047147, "compression_ratio": 1.5673076923076923, "no_speech_prob": 2.4272454538731836e-05}, {"id": 741, "seek": 398320, "start": 3989.72, "end": 3991.4399999999996, "text": " So thanks, everybody, for watching.", "tokens": [407, 3231, 11, 2201, 11, 337, 1976, 13], "temperature": 0.0, "avg_logprob": -0.17173070805047147, "compression_ratio": 1.5673076923076923, "no_speech_prob": 2.4272454538731836e-05}, {"id": 742, "seek": 398320, "start": 3991.4399999999996, "end": 3996.2, "text": " And Hamill, thanks so much for joining in the tutorial", "tokens": [400, 8234, 373, 11, 3231, 370, 709, 337, 5549, 294, 264, 7073], "temperature": 0.0, "avg_logprob": -0.17173070805047147, "compression_ratio": 1.5673076923076923, "no_speech_prob": 2.4272454538731836e-05}, {"id": 743, "seek": 398320, "start": 3996.2, "end": 3998.52, "text": " late at night before you're doing a keynote tomorrow.", "tokens": [3469, 412, 1818, 949, 291, 434, 884, 257, 33896, 4153, 13], "temperature": 0.0, "avg_logprob": -0.17173070805047147, "compression_ratio": 1.5673076923076923, "no_speech_prob": 2.4272454538731836e-05}, {"id": 744, "seek": 398320, "start": 3998.52, "end": 4000.24, "text": " I really appreciate it.", "tokens": [286, 534, 4449, 309, 13], "temperature": 0.0, "avg_logprob": -0.17173070805047147, "compression_ratio": 1.5673076923076923, "no_speech_prob": 2.4272454538731836e-05}, {"id": 745, "seek": 398320, "start": 4000.24, "end": 4001.0, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.17173070805047147, "compression_ratio": 1.5673076923076923, "no_speech_prob": 2.4272454538731836e-05}, {"id": 746, "seek": 398320, "start": 4001.0, "end": 4001.8399999999997, "text": " Sounds good.", "tokens": [14576, 665, 13], "temperature": 0.0, "avg_logprob": -0.17173070805047147, "compression_ratio": 1.5673076923076923, "no_speech_prob": 2.4272454538731836e-05}, {"id": 747, "seek": 398320, "start": 4001.8399999999997, "end": 4003.0, "text": " Bye.", "tokens": [4621, 13], "temperature": 0.0, "avg_logprob": -0.17173070805047147, "compression_ratio": 1.5673076923076923, "no_speech_prob": 2.4272454538731836e-05}, {"id": 748, "seek": 400300, "start": 4003.0, "end": 4013.92, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50910], "temperature": 0.0, "avg_logprob": -0.709033727645874, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.00028408836806192994}], "language": "en"}