{"text": " Hi, Tanishq, how are you? Hello. Oh, I'm behind, but yeah, hello. You're a silhouette today, huh? Yeah. Hello. Hello, Vish, how are you? Good, Jamie, how are you? Good, thank you. Where are you joining us from? From Austin, Texas. Okay. So, our company, when we initially started doing image recognition based deep learning, we followed your course and that was the starting point for us on our deep learning journey. Oh, excellent. Thanks for the course. I hope it's going okay. Yeah, it's going okay. Although I'm not working on deep learning, but it's the go-to resource for new hires. Fantastic. Hello, hello. Hi, how are you? Oh, I can hear you. You can hear me? That's wonderful. Good, good. I thought I had some audio issues there, but it seems all is good. How are you doing, Jeremy? I'm okay. I'm making some good progress on getting the course ready. It's mainly been about getting NB process working well. Wonderful. And I'm illustrating it with Dali two pictures. Wow. Wow. That's going to be awesome. Do you have access? I just got it. So good timing. Sweet. I still haven't gotten access. I think I signed up like a week later, so that may have been why. I'm still waiting. I can try and do a demo if you like. That would be awesome. And this is so wonderful with abstract concepts. I mean, for illustrating articles, you know, I think this is going to have an amazing, well, group of people, a very wide group of people who might benefit from it. If I were a journalist and we're working on an article, I mean, wow. You know, this is so much better than going to a stock photo or whatever. It's cool. I mean, they've got a non-commercial. Presumably at some point they'll have some kind of. Paid surface service. I think we're going to have to wait for the next one. I think we're going to have to wait for the next one. I think we're going to have to wait for the next one. Hi, Molly. Have you joined us before? Possibly not able to chat. That's all right. Hello. Anyway. No, I haven't had a chance to join before. Oh, well, welcome. Have you watched any of the videos done any APL. As yet. I'm not sure if you've watched the study group. The study group had started yesterday. So, yeah. I'm caught up in no time. This is what it looks like. So. Who wants to be there? Yeah. He wants to suggest a. Prompt. What does the Fox say? Wait, you're meant to be. Giving you something to draw a picture of. Is that something you can draw a picture of? Maybe a student. Working on an assignment using. Array programming language. Student. Working on an assignment. Using an array programming. Language. Do you want like a photo realistic photo? Do you want a 3d render? Do you want a. Pencil drawing. What kind. Maybe. Something with scholars. So pencil drawing. Not so much, but. Color pencil drawing or. Oh yeah. Yeah. That sounds great. A color pencil. Drawing. I don't think. Know when a thing about. Oopsie-dozy about array programming from what I've been able to see. Yeah, I don't imagine it should, but. You know. Maybe it will surprise us. Maybe it will surprise us. Somewhere. Add digital art for striking high quality images. Oh, that's good to know. I don't know if it's going to be a good idea to do it. I don't know if we're going to make movies with. Explain everything to it. It makes. Something's happening. Okay. This is the problem. When you. I often find when you kind of like put these extra details, you know, you can make a movie with it. And then you can make it look like a movie. Some words that it thinks look a bit like. All right. If we did like a programming. Yeah. You know, first and six months that they look somewhat accurate. I would say. Yeah. This person's coding by drawing on a screen. Did you have, do you have to pay for this? For this. Access to Dali. This is free. Yeah. I think it was. You have to apply and then you just wait. For. Well, months. I think it was. Okay. I might try. I might try to get a little bit of a better view of this. It's been happening. Not too much. Yeah. I think this is my favorite advent of code problem from last year. And. Yeah. That one was. I don't know. Just really, really cool. Kind of worked for APL very, very well. Yeah. So this is a map representing the height of the ground of that grid point. This is the high bits. Okay. That's cool. So that's the low points. The part one, you have to find what you do have to find the low points. Yep. Find the low points. Okay. Oh. That's a good one from Tanishk. I think it's a good one. Okay. Okay. Copy. See how this went. Okay. It is a pencil drawing. Yeah. Yeah. Interestingly, when I started watching something about APL on YouTube, it started recommending me videos on, you know, here are glyphs and I guess Egypt and stuff. So. It can draw the connection. All right. Let's open up our one. I don't think there's anything to pull. But just in case. There is. Oh, because of the GitHub pages. I thought we could make a custom operator today. I think it's a good idea. The cat is not a professor. No, it's not. A professor who is a cat. I guess at least it's got glasses on the top left. Yes. I mean, that could well, but clearly somebody else in the background is doing the teaching. So I'm not sure if that's a good idea. I think it's a good idea. I think it's a good idea. I think we're doing something with a 16 sets. You wish. Online magazine kind of thing. And we talked about this idea that. It's kind of prompt engineering as a skill now. That's a skill. I definitely don't have yet. I feel like it doesn't generalize from one model to another. I think it's a good idea. All right. Has anybody got a favorite, like. Drawing program for. Mac. I think it's that fancy like something just for doing. You know, These kind of things. And I also had to find out why my right mouse button doesn't work because since it doesn't work, I'm now not sure how to insert. Page. Area page. I'm guessing everybody is probably familiar with the idea of. Gradients, but. I'm not sure if I can get it to work because I thought we could just briefly mention it. So if we've got some. Something like a quadratic. Is. Is the slope at that point. So this would be the gradient. At this point. Is that slope. And. You may or may not remember. That the slope. Is equal to the rise over the run. Which is the change in why. Over the change in X. So if this is. If this is. X two. On a white. And this is X one. On a Y one. Then the slope. Is. Y two. Is rise over run I said. Is. Y two. Minus Y. One. Over. X two. Minus X one. Okay. And so what you could do is you could pick. You know like so this is the point we're going to pick. And then you could just add. A little bit to X like point zero one X. And this is the point here. So in this case. You could actually write. Why to. And in a different way. So if you've got. So this is like. This is. This is some function of X. Like X squared. This is X. Right. So. You could change. Why to to instead be. Function of. X. Plus. A little bit like zero point zero one. And why one would be. Function of. Would be. The function of X at the starting point. And then you divide by the amount that you moved X by. Which in this case would be zero point zero one. That would be another way of doing the change in Y over change in X. Does that make sense so far? And so this is like. An approximation of the derivative. It's the slope at a point. And I thought we could try and do this. In APL. So if we picked a function. I'll show you something interesting. You can do a function a couple of ways. I think we've already learnt. That you can do a function like this. If you want to do Y squared. You can do. Omega. Square. That's one way to do it. But. You could also just do this. Right. And that means that. That just means power of. So you could do something like this. If that makes sense. So then actually what we might do first. Is a nice operator. So it just returns the power operator. Yes, this is saying that F is the power function. And that might not sound very interesting yet. But you could make it a bit more interesting by saying F is. A combination of a function and an operator. And we could give that a more sensible name. For example. And that's exactly the same as doing. It's exactly the same as doing that. So here's an example of something we could do. Let's learn a new operator. Which is called. Bind, which is J. So we can get the help. Oh, that didn't work. So we can get the help for it by typing help. That. Okay, so this thing, this symbol, you'll hear it a lot. It's called Jot. And it's a. Oh, this is finished. There we go. So, Professor, there was a cat is too hard, but a cat professor is fine. Not sure what happened before. But clearly professors pointed things. This cat professors. Just faking it because there's a real. In fact, most of the cat professors. Some of them are faking it. But yeah, professors point at whiteboards with chalk or sticks, apparently. It's not obvious it's deep learning, but it certainly looks very mathy. Yeah, it's not good. Well, yeah, that one has like some sort of network or something. It looks like. Yeah. Interesting. The first one is maybe looking at some activation function. Yeah, could well be. Okay. So, Jot. Is a dyadic operator. So that means that there won't be a monadic. And it can be a couple of things. It can be beside or bind. Depending on whether you pass it functions or arrays. Now. Or Python programmers. It's called this Python equivalence. Partial. It's the same as using partial in Python. So that's a kind of a functional programming idea. And most of the functional programming ideas in the standard library are in the func tools module. That's where you can import partial from. And here's what partial does. You define something. And so let's say we could call this power. Which does that. Three squared. Okay. So what if we wanted to now define squared using power. We could say square equals partial. Power comma y equals two. And what that says is so partial is a higher order function or an APL operator. And the function it returns is something that's going to call this function passing in this parameter. So it's going to always set y in the function to two. So I could then say squared. Does that make sense? So bind does the same thing. So we could say squared equals. And we can create a function. So we're doing a power of function. We're doing to the power of two. So this is a function. We don't say equals, obviously. And so you can see here, this is this idea that we don't need to use curly brackets and omega and stuff. We can just define a function directly. This is called point free programming in other languages. And it's basically where you write functions without specifically referring to the parameters they're going to take. And in this case, because this is an operator that therefore returns a function, there's no need for round brackets and whatnot. Does that make sense? An operator that returns a function. All operators return a function. That's the definition of an operator in APL. Do you remember last time we did operators, we learned about backslash and slash. Yes. And those are. So it's the B side or bind that's an operator. Right. So it's it's written. It returns a function. OK. So it takes the argument on the left and on the right. That's right. And return to operator. So it returns a function. This is the function to apply. And then this is the right hand side to bind. And it returns a function. And it's an operator. Therefore, it returns a function. Got it. And you can do it the other way as well, which is you could say a power of two. And then you could just do the opposite to to the power of. So this means two to the power of rather than to the power of two. So two to the power of three is eight. So that's the equivalent of this is the equivalent of partial where I bind the rights right hand side. This is the equivalent of partial where I bind the left hand side. Wow. It says it's just surprising how succinct it all is. And it's like Lego bricks. It is. Yeah. So. Let's move some of this stuff into the right spot. OK. OK. So then. Yeah, let's just go like this. So this one's called bind and binds a very common computer science term for this partial function application or bind and C++ is called bind. Now, the other thing we could do is we could do beside and beside is what happens if you put if you just pass two functions to it. So, for example, we can create a function that first does reciprocal. Remember monadic divide is reciprocal. And then it does e to the power of remember star is e to the power of. So this so if we go, for example, reciprocal of three. And then we do e to the power of that. It's that and we should find f of three is the same thing. That makes sense. So this is called function composition. It's only just one form of it. So first it does this function and then takes the result and passes to that function. You can also use the function that is returned diatically. Like so. And that is going to be the same as I think. Well, it's not is it? Two. Yeah, it is. It's going to be two to the power of a third. So this will be the cube root of two. Yeah. Okay. So it first so in the case, if you do it diatically, then it first applies this to the right hand side. And then it applies this to the left hand side and the result of that. And they've got some really nice pictures of this. Somewhere under if they're here. Oh yeah, bind is also called carrying. So there's lots of ways of doing function composition. And so beside as you can see it takes y on the right. It passes it through G, which is this function, which was reciprocal. And then f, which was power of gets the left hand side and the result of that. Which, interestingly enough, is exactly the same thing as if you just put them next to each other, I think. Oh no, that's different. That's interesting. Okay, I'll take that back. There's something in the API wiki is good for this stuff. Wait, it says it's the same. That's very confusing. Oh, it's without the parentheses. Okay, so that does the same thing. So there's a few ways of doing the same thing here. So it's a bit confusing that, I mean, it doesn't need to be, but it can be if you're not careful that this is a dyadic operator, because it takes it takes the left hand side and the right hand side. It returns a function. The function it returns can either be used monadically or dyadically. That makes sense. And so the way it behaves is based on if it's used monadically, it's reasonably straightforward. We just first apply this and then we apply that. If it's dyadically, then it behaves like this. It makes sense. It's just interesting that it exists. Like one question is, you know, what it could be used for. So the purpose of it is to create is to is the way I think of it is to expand mathematics. Right. So in mathematics, we stick symbols next to each other and they have meanings. Right. But the rules for what symbols you can stick next to each other and when vary a lot depending on the symbol and stuff like that, you know. So APL tries to just lay out the ground rules and says this is this is how you can do it. And so let me show you my favorite so far example, which is calculating which is calculating the golden ratio. We're going to need some more operators for this. OK. So we're going to use the next operator we're going to learn is star dioresis. Yeah. Which is shift P. And this is also called power, but it's actually the power operator rather than the power function, which is confusing. So do you actually have to be careful? The power function is just a star. OK, it is a operator, therefore it returns a function. It's dyadic, therefore it needs a left hand side and a right hand side. So let's define. I don't know if any of you have done metamathematics, but metamathematics is the philosophical foundations of mathematics. And there's a small set of theorems that you can use. I think it called the piano theorem, piano axioms. Which people used to think you could then derive all of math from, although it turns out it's not necessarily true. And so basically the idea is you'd say, OK, we're going to create something called zero. And the way to create something called equals and equals is defined by saying for every number x equals x. And that if x, if x equals y, then y equals x. And if x equals y and y equals z, then x equals z. I mean, these are all obviously true things. So kind of defining some basic theorems. And then it defines this function called capital S. We just basically say it exists and it returns another number. And basically it defines it in such a way that it's it's the successor of a number. So the successor of zero is one, the successor of one is two, the successor of two is three and so forth. And we actually can easily define S now. Because it's plus one. And so if we assume that zero exists and we assume that the successor exists, then we can create the number one. And we can create the number two, we create the number three, so forth. And so at this point, we want to invent addition because in mathematics, you basically are not allowed to assume anything exists, except what you put in your premises. So addition is what happens when we apply S a bunch of times. If we want to add three to zero, we would write three S's followed by zero. Does that make sense? So the power function, the power operator, simply says how many times to repeat a function. So I want to repeat the function S three times. So that's the same as writing S space S space S. Okay. So if we want to create a function called add, then we basically are going to apply the S function alpha times to omega. So that's going to start with, let me just go into really brackets. So for example, two added to three, we'll start with three, and then it will apply S twice. That would be the same as writing S space S space three. Does that make sense? So we just invented addition. Yes, absolutely it does. So we can do the same thing for multiplication. We can apply, multiply. We need to start at one, and then we can multiply. So we're going to multiply by, not sure if it matters which way around this goes, we're going to multiply by alpha omega times. Oops. Oh, I wrote volt, which obviously is going to break everything. I need to add. Okay. I'm adding to zero. There we go. So I'm adding to zero. This is what I add each time. This is how many times I add. So we just invented model play. So we can, of course, now invent to the power of. And that would be where we'd start with one, and we multiply. The number of times we multiply will be. Yeah, the thing on the right. So to to the power of three. Okay. Yeah, it is. Yeah, quite mind bending to look at the syntax though because, you know, the star thingy, the star diorasis. Like it look already quite interesting when it was with the monadic as function, you know, and now it can also. So, yeah, this this thing you have in the cell 26. It's just, you know, on the right hand side of it and it does what it does, but then you can also use it with the diadic. This is a diadic. Yeah. Yeah. And it's, you know, another example of just composing this very small piece of functionality that. Yeah. So it's applying its left operand function cumulatively. G times. And if it's a dietic function, it's applied to repeat. Oh no, that's not what we want. Okay. Here we are. It's bound. So if there's a left argument, it's bound as the left argument. So we've basically seen this idea right of binding an argument. So that's basically what it's doing. It's, it's saying that this is multiplied by alpha each time. Okay, now where it gets really fun. Is that you don't have to put a number on the right. You can put a function on the right. And so this is going to come somewhere towards answering your question right about what's all this for. So we've now got a sequence of five glyphs in a row. Okay, so what does that mean? Well, this glyph here we know it means take the reciprocal and then add and as this is on the left so it's going to be take the reciprocal and add one. So let's try it. Let's just grab that. We'll call that F. And so if we go F of one. Oh, and that's sorry. One F one I should say. That equals two right because it takes the reciprocal of this. And then it applies plus to the result and the thing on the left. So one plus one is two. Because that's because of this. This is what we get if we do beside we first apply reciprocal to the right and then we apply plus to the left and the result. So the reciprocal of one is one. And then the left hand side is one and the result of reciprocal is one. And so one plus one is two. And we could take the result of that and pass it back into exactly the same function with the same left hand side. And we could do that again. Take the result of that and pass it into the right hand side. And if we do this a bunch of times. We actually are doing something quite interesting. Which is we're creating something called a continued fraction. And the continued fraction that we're creating. Is this one. So we started with one plus one over one. And then we made it one plus one over. So when we made it one plus one over that then we made it one plus one over that and we made it one plus one over that. Now if we keep doing that enough times. Eventually we're going to get a number called five. And phi is also known as the golden ratio. And the golden ratio by the golden ratio appears in nature and art. Basically everywhere. So basically it appears in nature. When we look at kind of the proportions of things it appears as the ratio is in famous paintings. It appears on the snail's shell. It's this number that appears everywhere. And why are we talking about it? Well we can calculate it by typing this again and again and again. But that's going to get pretty boring. We could do this. Right. So that's going to do one over. Sorry one plus one over one. And then it's going to do one over that. And that's going to be one over that. That's going to be one over that. It's going to do one over that. And I think we now know that we could replace that with. Just do F a bunch of times. So that's nice because now we can like go a bit further and get. That's actually a pretty good estimate of the golden ratio. There you go. Yep. About one to one point six one eight. Does that make sense so far? Yes. All right. But how do we know how far to go? Well basically we want to keep on applying F until the next time we apply F. The result doesn't change to within floating point error. If you replace 15 with equals. Then the power operator if you put this on the right hand side repeats this function again and again and again. And each time it passes to this function the previous result and the current result. And it stops if this function returns one. And in math we call that the fixed point. The fixed point of a function is the point at which or sequence I guess is the point at which it stops changing. So there's exactly the same thing. But iterated exactly the amount of times. I'm not sure how to change the precision that we print out things here. But if you printed this out in high precision and then passed it to itself again it wouldn't change. And so if you replace F with its definition. Which is this. Then you get that. And so the answer to your question of like what's all this for is so that we can write short concise mathematical expressions for things like here's the fixed point of the continued fraction that calculates flight. Is that kind of mind blowing? It is. Very much so. But it's amazing. It is amazing. And you know yeah there's something delightful I think, at least to me, about you know like, analyzing notation can take you this far. And this, you know, and this doesn't even you kind of put this in a computer because what the hell does dot dot dot mean? It's like, oh a human ought to be able to guess what goes here. So, yeah I think it's beautiful. It's a beautiful notation it's a powerful notation and it lets us express concept complex things fairly simply. Like, once we get the idea. And the nice thing is then like, because we were able to express this quite simply. Then we can use that as a thing that we then go create another layer of abstraction on top of that we use that as an input to something else. You know, so it's because that, you know, if we didn't have this kind of bind, sorry this is a beside composition idea then this whole thing wouldn't really have worked, you know. We can use these ideas in Python as well. In Python, you can do function composition. And I think last call might have something if I remember correctly. I can't quite remember what's where the partials that compose. So, this is the same as beside an appeal. So you can pass it a list of functions. So for example, here's one function and here's another function and then here we are composing the two together. It goes in the opposite order, I think. So it applies F1 first and then F2. Sorry, what you're saying? Oh, no, I was going to point you to the compose function, but you found it before I said anything. Yeah, no worries. And there's a bunch of things like this in fast course. So for example, I really like partial. So I created a better version of partial, which doesn't throw away documentation. This is basically the same as kind of broadcasting. Here we are. I created my own bind class. Now I created all these before I did much with APL because they used another functional programming languages. Possibly, possibly, or maybe even probably APL did them first. I'm not sure. There's a there's actually a whole academic world. What complementary logic, which is all about they go eliminate the need for variables. Kind of like point free programming. And the ideas that are in APL. I wouldn't say they come from combinatorial logic because nobody knows if Ken Iverson had ever seen this stuff before. It's quite possible he reinvented all this from scratch. But it turns out they're all exactly the same. And something that Connor in the Arraycast podcast mentioned, which I has just arrived, is that there's a book of puzzles, which actually cover lots of the combinatorial logic ideas. So, I will let you know once I start going through what I think. So there's a lot of like layers of the onion, we can peel off, you know, and it turns out that we kind of find ourselves in all these different areas of math and logic and philosophy and whatever. Jeremy if you check that book out you have to let me know how it goes. I checked it out before, maybe a couple years ago. Stephen Wolfram, you know, Mathematica was talking about combinators maybe it's only a year ago, and I happened to get interested and I checked that book out and I, I kind of worked through some but I got lost pretty quickly I'm sure that you will probably find it much better than me. I don't know about that. Well you know maybe at some point we can start working through it together if people get interested. Yeah, it's interesting listening to like earlier a cast episode we're kind of talked about how he went to some, he just started with a PL, and he went to some API user group meeting or something and like said to people like, wait, trains so they combinators and combinators are trains and everybody at the API user group meeting he said all said like, No, this is a new API invention. It's not some other thing. They don't mesh very much and nobody realized, particularly the APL intellectual world I've noticed it's pretty pretty close to it. So anyway yeah they are. They are the same thing. So I'm trying to remember why the hell we were doing all this. This is the most intense study session right. And please don't be worried if this feels a bit intimidating, because it is, and that's fine. And this we're meant to be learning new interesting parts of the world and when we find them we shouldn't expect them to make sense straight away. So we were doing. That's right, we were doing chart. Yeah, no, that's probably it. That's a good place to finish isn't it. Remember that we were doing. Yeah, that's fine. I don't think we need any of this. Oh, that's right, we're going to do custom operators. Okay, I think we've got some good background to tackle that. Oh yeah, we're. Yeah, yeah. Okay. So we got to here. I guess before we go we should at least write down something so that we've made some start here. So, oh yeah, okay I remember now. I wanted to point out then yeah okay so we're just we were going to use, I was going to do squared. That's right. So I wanted my function to be squared. And so to do that, I had to show you that this means squared. Okay. So then to calculate. The derivative of this function at set at some point. We're going to use this formula, we wrote down. This one here. So it's going to be F of. Let's create some number to hold up point over one so the difference we're going to work on is going to be 0.01. So it's going to be the function F of, and so let's calculate this at some point. Say two. That's three. Okay, so we're going to calculate it at x equals three. So I gotta go function of x plus d. Okay, minus function of x. Okay, and then that's going to have to go in parentheses. Okay, and then we're going to divide that by point oh one. There are better ways to write this in a peel but I want to make it like somewhat familiar. Okay. And for those of you who remember calculus, the actual derivative of x squared is to x. So the correct answer would have been six. So, which is, you know, we're on the right track. If we set d to a smaller number, we would get a more precise answer. Yeah, so we're going to try and head to is that we can actually create our own operator that will calculate the derivative of function at a point. And so maybe that's what we're trying to do next time. Any comments or questions before we go. It's really cool. Awesome. I'm glad you. Yeah, it's great again. Thank you. All right. All right. Bye all. Thank you for showing us this. Bye. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 15.0, "text": " Hi, Tanishq, how are you?", "tokens": [2421, 11, 314, 7524, 80, 11, 577, 366, 291, 30], "temperature": 0.0, "avg_logprob": -0.3667427284130152, "compression_ratio": 1.35, "no_speech_prob": 0.38592079281806946}, {"id": 1, "seek": 0, "start": 15.0, "end": 16.0, "text": " Hello.", "tokens": [2425, 13], "temperature": 0.0, "avg_logprob": -0.3667427284130152, "compression_ratio": 1.35, "no_speech_prob": 0.38592079281806946}, {"id": 2, "seek": 0, "start": 16.0, "end": 20.0, "text": " Oh, I'm behind, but yeah, hello.", "tokens": [876, 11, 286, 478, 2261, 11, 457, 1338, 11, 7751, 13], "temperature": 0.0, "avg_logprob": -0.3667427284130152, "compression_ratio": 1.35, "no_speech_prob": 0.38592079281806946}, {"id": 3, "seek": 0, "start": 20.0, "end": 22.0, "text": " You're a silhouette today, huh?", "tokens": [509, 434, 257, 38275, 965, 11, 7020, 30], "temperature": 0.0, "avg_logprob": -0.3667427284130152, "compression_ratio": 1.35, "no_speech_prob": 0.38592079281806946}, {"id": 4, "seek": 0, "start": 22.0, "end": 23.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.3667427284130152, "compression_ratio": 1.35, "no_speech_prob": 0.38592079281806946}, {"id": 5, "seek": 0, "start": 23.0, "end": 24.0, "text": " Hello.", "tokens": [2425, 13], "temperature": 0.0, "avg_logprob": -0.3667427284130152, "compression_ratio": 1.35, "no_speech_prob": 0.38592079281806946}, {"id": 6, "seek": 0, "start": 24.0, "end": 26.0, "text": " Hello, Vish, how are you?", "tokens": [2425, 11, 36752, 11, 577, 366, 291, 30], "temperature": 0.0, "avg_logprob": -0.3667427284130152, "compression_ratio": 1.35, "no_speech_prob": 0.38592079281806946}, {"id": 7, "seek": 0, "start": 26.0, "end": 29.0, "text": " Good, Jamie, how are you?", "tokens": [2205, 11, 19309, 11, 577, 366, 291, 30], "temperature": 0.0, "avg_logprob": -0.3667427284130152, "compression_ratio": 1.35, "no_speech_prob": 0.38592079281806946}, {"id": 8, "seek": 2900, "start": 29.0, "end": 30.0, "text": " Good, thank you.", "tokens": [2205, 11, 1309, 291, 13], "temperature": 0.0, "avg_logprob": -0.15028109917273888, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.0002157800190616399}, {"id": 9, "seek": 2900, "start": 30.0, "end": 32.0, "text": " Where are you joining us from?", "tokens": [2305, 366, 291, 5549, 505, 490, 30], "temperature": 0.0, "avg_logprob": -0.15028109917273888, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.0002157800190616399}, {"id": 10, "seek": 2900, "start": 32.0, "end": 34.0, "text": " From Austin, Texas.", "tokens": [3358, 15356, 11, 7885, 13], "temperature": 0.0, "avg_logprob": -0.15028109917273888, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.0002157800190616399}, {"id": 11, "seek": 2900, "start": 34.0, "end": 38.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.15028109917273888, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.0002157800190616399}, {"id": 12, "seek": 2900, "start": 38.0, "end": 54.0, "text": " So, our company, when we initially started doing image recognition based deep learning, we followed your course and that was the starting point for us on our deep learning journey.", "tokens": [407, 11, 527, 2237, 11, 562, 321, 9105, 1409, 884, 3256, 11150, 2361, 2452, 2539, 11, 321, 6263, 428, 1164, 293, 300, 390, 264, 2891, 935, 337, 505, 322, 527, 2452, 2539, 4671, 13], "temperature": 0.0, "avg_logprob": -0.15028109917273888, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.0002157800190616399}, {"id": 13, "seek": 2900, "start": 54.0, "end": 55.0, "text": " Oh, excellent.", "tokens": [876, 11, 7103, 13], "temperature": 0.0, "avg_logprob": -0.15028109917273888, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.0002157800190616399}, {"id": 14, "seek": 2900, "start": 55.0, "end": 57.0, "text": " Thanks for the course.", "tokens": [2561, 337, 264, 1164, 13], "temperature": 0.0, "avg_logprob": -0.15028109917273888, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.0002157800190616399}, {"id": 15, "seek": 5700, "start": 57.0, "end": 60.0, "text": " I hope it's going okay.", "tokens": [286, 1454, 309, 311, 516, 1392, 13], "temperature": 0.0, "avg_logprob": -0.1785519231449474, "compression_ratio": 1.2692307692307692, "no_speech_prob": 0.00013277378457132727}, {"id": 16, "seek": 5700, "start": 60.0, "end": 61.0, "text": " Yeah, it's going okay.", "tokens": [865, 11, 309, 311, 516, 1392, 13], "temperature": 0.0, "avg_logprob": -0.1785519231449474, "compression_ratio": 1.2692307692307692, "no_speech_prob": 0.00013277378457132727}, {"id": 17, "seek": 5700, "start": 61.0, "end": 67.0, "text": " Although I'm not working on deep learning, but it's the go-to resource for new hires.", "tokens": [5780, 286, 478, 406, 1364, 322, 2452, 2539, 11, 457, 309, 311, 264, 352, 12, 1353, 7684, 337, 777, 276, 3145, 13], "temperature": 0.0, "avg_logprob": -0.1785519231449474, "compression_ratio": 1.2692307692307692, "no_speech_prob": 0.00013277378457132727}, {"id": 18, "seek": 6700, "start": 67.0, "end": 89.0, "text": " Fantastic.", "tokens": [21320, 13], "temperature": 0.0, "avg_logprob": -0.13725322768801734, "compression_ratio": 1.0909090909090908, "no_speech_prob": 0.00011747993266908452}, {"id": 19, "seek": 6700, "start": 89.0, "end": 90.0, "text": " Hello, hello.", "tokens": [2425, 11, 7751, 13], "temperature": 0.0, "avg_logprob": -0.13725322768801734, "compression_ratio": 1.0909090909090908, "no_speech_prob": 0.00011747993266908452}, {"id": 20, "seek": 6700, "start": 90.0, "end": 92.0, "text": " Hi, how are you?", "tokens": [2421, 11, 577, 366, 291, 30], "temperature": 0.0, "avg_logprob": -0.13725322768801734, "compression_ratio": 1.0909090909090908, "no_speech_prob": 0.00011747993266908452}, {"id": 21, "seek": 6700, "start": 92.0, "end": 93.0, "text": " Oh, I can hear you.", "tokens": [876, 11, 286, 393, 1568, 291, 13], "temperature": 0.0, "avg_logprob": -0.13725322768801734, "compression_ratio": 1.0909090909090908, "no_speech_prob": 0.00011747993266908452}, {"id": 22, "seek": 6700, "start": 93.0, "end": 94.0, "text": " You can hear me?", "tokens": [509, 393, 1568, 385, 30], "temperature": 0.0, "avg_logprob": -0.13725322768801734, "compression_ratio": 1.0909090909090908, "no_speech_prob": 0.00011747993266908452}, {"id": 23, "seek": 6700, "start": 94.0, "end": 95.0, "text": " That's wonderful.", "tokens": [663, 311, 3715, 13], "temperature": 0.0, "avg_logprob": -0.13725322768801734, "compression_ratio": 1.0909090909090908, "no_speech_prob": 0.00011747993266908452}, {"id": 24, "seek": 9500, "start": 95.0, "end": 98.0, "text": " Good, good.", "tokens": [2205, 11, 665, 13], "temperature": 0.0, "avg_logprob": -0.14907512926075556, "compression_ratio": 1.4176470588235295, "no_speech_prob": 6.809688784414902e-05}, {"id": 25, "seek": 9500, "start": 98.0, "end": 105.0, "text": " I thought I had some audio issues there, but it seems all is good.", "tokens": [286, 1194, 286, 632, 512, 6278, 2663, 456, 11, 457, 309, 2544, 439, 307, 665, 13], "temperature": 0.0, "avg_logprob": -0.14907512926075556, "compression_ratio": 1.4176470588235295, "no_speech_prob": 6.809688784414902e-05}, {"id": 26, "seek": 9500, "start": 105.0, "end": 107.0, "text": " How are you doing, Jeremy?", "tokens": [1012, 366, 291, 884, 11, 17809, 30], "temperature": 0.0, "avg_logprob": -0.14907512926075556, "compression_ratio": 1.4176470588235295, "no_speech_prob": 6.809688784414902e-05}, {"id": 27, "seek": 9500, "start": 107.0, "end": 108.0, "text": " I'm okay.", "tokens": [286, 478, 1392, 13], "temperature": 0.0, "avg_logprob": -0.14907512926075556, "compression_ratio": 1.4176470588235295, "no_speech_prob": 6.809688784414902e-05}, {"id": 28, "seek": 9500, "start": 108.0, "end": 113.0, "text": " I'm making some good progress on getting the course ready.", "tokens": [286, 478, 1455, 512, 665, 4205, 322, 1242, 264, 1164, 1919, 13], "temperature": 0.0, "avg_logprob": -0.14907512926075556, "compression_ratio": 1.4176470588235295, "no_speech_prob": 6.809688784414902e-05}, {"id": 29, "seek": 9500, "start": 113.0, "end": 119.0, "text": " It's mainly been about getting NB process working well.", "tokens": [467, 311, 8704, 668, 466, 1242, 426, 33, 1399, 1364, 731, 13], "temperature": 0.0, "avg_logprob": -0.14907512926075556, "compression_ratio": 1.4176470588235295, "no_speech_prob": 6.809688784414902e-05}, {"id": 30, "seek": 9500, "start": 119.0, "end": 121.0, "text": " Wonderful.", "tokens": [22768, 13], "temperature": 0.0, "avg_logprob": -0.14907512926075556, "compression_ratio": 1.4176470588235295, "no_speech_prob": 6.809688784414902e-05}, {"id": 31, "seek": 12100, "start": 121.0, "end": 126.0, "text": " And I'm illustrating it with Dali two pictures.", "tokens": [400, 286, 478, 8490, 8754, 309, 365, 413, 5103, 732, 5242, 13], "temperature": 0.0, "avg_logprob": -0.13301644117935843, "compression_ratio": 1.4550561797752808, "no_speech_prob": 7.026043749647215e-05}, {"id": 32, "seek": 12100, "start": 126.0, "end": 127.0, "text": " Wow.", "tokens": [3153, 13], "temperature": 0.0, "avg_logprob": -0.13301644117935843, "compression_ratio": 1.4550561797752808, "no_speech_prob": 7.026043749647215e-05}, {"id": 33, "seek": 12100, "start": 127.0, "end": 129.0, "text": " Wow.", "tokens": [3153, 13], "temperature": 0.0, "avg_logprob": -0.13301644117935843, "compression_ratio": 1.4550561797752808, "no_speech_prob": 7.026043749647215e-05}, {"id": 34, "seek": 12100, "start": 129.0, "end": 133.0, "text": " That's going to be awesome.", "tokens": [663, 311, 516, 281, 312, 3476, 13], "temperature": 0.0, "avg_logprob": -0.13301644117935843, "compression_ratio": 1.4550561797752808, "no_speech_prob": 7.026043749647215e-05}, {"id": 35, "seek": 12100, "start": 133.0, "end": 135.0, "text": " Do you have access?", "tokens": [1144, 291, 362, 2105, 30], "temperature": 0.0, "avg_logprob": -0.13301644117935843, "compression_ratio": 1.4550561797752808, "no_speech_prob": 7.026043749647215e-05}, {"id": 36, "seek": 12100, "start": 135.0, "end": 136.0, "text": " I just got it.", "tokens": [286, 445, 658, 309, 13], "temperature": 0.0, "avg_logprob": -0.13301644117935843, "compression_ratio": 1.4550561797752808, "no_speech_prob": 7.026043749647215e-05}, {"id": 37, "seek": 12100, "start": 136.0, "end": 137.0, "text": " So good timing.", "tokens": [407, 665, 10822, 13], "temperature": 0.0, "avg_logprob": -0.13301644117935843, "compression_ratio": 1.4550561797752808, "no_speech_prob": 7.026043749647215e-05}, {"id": 38, "seek": 12100, "start": 137.0, "end": 138.0, "text": " Sweet.", "tokens": [14653, 13], "temperature": 0.0, "avg_logprob": -0.13301644117935843, "compression_ratio": 1.4550561797752808, "no_speech_prob": 7.026043749647215e-05}, {"id": 39, "seek": 12100, "start": 138.0, "end": 139.0, "text": " I still haven't gotten access.", "tokens": [286, 920, 2378, 380, 5768, 2105, 13], "temperature": 0.0, "avg_logprob": -0.13301644117935843, "compression_ratio": 1.4550561797752808, "no_speech_prob": 7.026043749647215e-05}, {"id": 40, "seek": 12100, "start": 139.0, "end": 142.0, "text": " I think I signed up like a week later, so that may have been why.", "tokens": [286, 519, 286, 8175, 493, 411, 257, 1243, 1780, 11, 370, 300, 815, 362, 668, 983, 13], "temperature": 0.0, "avg_logprob": -0.13301644117935843, "compression_ratio": 1.4550561797752808, "no_speech_prob": 7.026043749647215e-05}, {"id": 41, "seek": 12100, "start": 142.0, "end": 147.0, "text": " I'm still waiting.", "tokens": [286, 478, 920, 3806, 13], "temperature": 0.0, "avg_logprob": -0.13301644117935843, "compression_ratio": 1.4550561797752808, "no_speech_prob": 7.026043749647215e-05}, {"id": 42, "seek": 14700, "start": 147.0, "end": 151.0, "text": " I can try and do a demo if you like.", "tokens": [286, 393, 853, 293, 360, 257, 10723, 498, 291, 411, 13], "temperature": 0.0, "avg_logprob": -0.2290294242627693, "compression_ratio": 1.371069182389937, "no_speech_prob": 7.475537131540477e-05}, {"id": 43, "seek": 14700, "start": 151.0, "end": 152.0, "text": " That would be awesome.", "tokens": [663, 576, 312, 3476, 13], "temperature": 0.0, "avg_logprob": -0.2290294242627693, "compression_ratio": 1.371069182389937, "no_speech_prob": 7.475537131540477e-05}, {"id": 44, "seek": 14700, "start": 152.0, "end": 156.0, "text": " And this is so wonderful with abstract concepts.", "tokens": [400, 341, 307, 370, 3715, 365, 12649, 10392, 13], "temperature": 0.0, "avg_logprob": -0.2290294242627693, "compression_ratio": 1.371069182389937, "no_speech_prob": 7.475537131540477e-05}, {"id": 45, "seek": 14700, "start": 156.0, "end": 163.0, "text": " I mean, for illustrating articles, you know,", "tokens": [286, 914, 11, 337, 8490, 8754, 11290, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.2290294242627693, "compression_ratio": 1.371069182389937, "no_speech_prob": 7.475537131540477e-05}, {"id": 46, "seek": 14700, "start": 163.0, "end": 170.0, "text": " I think this is going to have an amazing,", "tokens": [286, 519, 341, 307, 516, 281, 362, 364, 2243, 11], "temperature": 0.0, "avg_logprob": -0.2290294242627693, "compression_ratio": 1.371069182389937, "no_speech_prob": 7.475537131540477e-05}, {"id": 47, "seek": 14700, "start": 170.0, "end": 172.0, "text": " well, group of people,", "tokens": [731, 11, 1594, 295, 561, 11], "temperature": 0.0, "avg_logprob": -0.2290294242627693, "compression_ratio": 1.371069182389937, "no_speech_prob": 7.475537131540477e-05}, {"id": 48, "seek": 17200, "start": 172.0, "end": 177.0, "text": " a very wide group of people who might benefit from it.", "tokens": [257, 588, 4874, 1594, 295, 561, 567, 1062, 5121, 490, 309, 13], "temperature": 0.0, "avg_logprob": -0.20159465750468145, "compression_ratio": 1.4746543778801844, "no_speech_prob": 0.00011581656872294843}, {"id": 49, "seek": 17200, "start": 177.0, "end": 181.0, "text": " If I were a journalist and we're working on an article, I mean, wow.", "tokens": [759, 286, 645, 257, 17277, 293, 321, 434, 1364, 322, 364, 7222, 11, 286, 914, 11, 6076, 13], "temperature": 0.0, "avg_logprob": -0.20159465750468145, "compression_ratio": 1.4746543778801844, "no_speech_prob": 0.00011581656872294843}, {"id": 50, "seek": 17200, "start": 181.0, "end": 186.0, "text": " You know, this is so much better than going to a stock photo or whatever.", "tokens": [509, 458, 11, 341, 307, 370, 709, 1101, 813, 516, 281, 257, 4127, 5052, 420, 2035, 13], "temperature": 0.0, "avg_logprob": -0.20159465750468145, "compression_ratio": 1.4746543778801844, "no_speech_prob": 0.00011581656872294843}, {"id": 51, "seek": 17200, "start": 186.0, "end": 187.0, "text": " It's cool.", "tokens": [467, 311, 1627, 13], "temperature": 0.0, "avg_logprob": -0.20159465750468145, "compression_ratio": 1.4746543778801844, "no_speech_prob": 0.00011581656872294843}, {"id": 52, "seek": 17200, "start": 187.0, "end": 190.0, "text": " I mean, they've got a non-commercial.", "tokens": [286, 914, 11, 436, 600, 658, 257, 2107, 12, 1112, 39260, 13], "temperature": 0.0, "avg_logprob": -0.20159465750468145, "compression_ratio": 1.4746543778801844, "no_speech_prob": 0.00011581656872294843}, {"id": 53, "seek": 17200, "start": 190.0, "end": 193.0, "text": " Presumably at some point they'll have some kind of.", "tokens": [2718, 449, 1188, 412, 512, 935, 436, 603, 362, 512, 733, 295, 13], "temperature": 0.0, "avg_logprob": -0.20159465750468145, "compression_ratio": 1.4746543778801844, "no_speech_prob": 0.00011581656872294843}, {"id": 54, "seek": 17200, "start": 193.0, "end": 199.0, "text": " Paid surface service.", "tokens": [3426, 327, 3753, 2643, 13], "temperature": 0.0, "avg_logprob": -0.20159465750468145, "compression_ratio": 1.4746543778801844, "no_speech_prob": 0.00011581656872294843}, {"id": 55, "seek": 19900, "start": 199.0, "end": 202.0, "text": " I think we're going to have to wait for the next one.", "tokens": [286, 519, 321, 434, 516, 281, 362, 281, 1699, 337, 264, 958, 472, 13], "temperature": 0.0, "avg_logprob": -0.4815130776506129, "compression_ratio": 1.9384615384615385, "no_speech_prob": 5.734780279453844e-05}, {"id": 56, "seek": 19900, "start": 202.0, "end": 204.0, "text": " I think we're going to have to wait for the next one.", "tokens": [286, 519, 321, 434, 516, 281, 362, 281, 1699, 337, 264, 958, 472, 13], "temperature": 0.0, "avg_logprob": -0.4815130776506129, "compression_ratio": 1.9384615384615385, "no_speech_prob": 5.734780279453844e-05}, {"id": 57, "seek": 19900, "start": 204.0, "end": 206.0, "text": " I think we're going to have to wait for the next one.", "tokens": [286, 519, 321, 434, 516, 281, 362, 281, 1699, 337, 264, 958, 472, 13], "temperature": 0.0, "avg_logprob": -0.4815130776506129, "compression_ratio": 1.9384615384615385, "no_speech_prob": 5.734780279453844e-05}, {"id": 58, "seek": 19900, "start": 206.0, "end": 207.0, "text": " Hi, Molly.", "tokens": [2421, 11, 26665, 13], "temperature": 0.0, "avg_logprob": -0.4815130776506129, "compression_ratio": 1.9384615384615385, "no_speech_prob": 5.734780279453844e-05}, {"id": 59, "seek": 19900, "start": 207.0, "end": 212.0, "text": " Have you joined us before?", "tokens": [3560, 291, 6869, 505, 949, 30], "temperature": 0.0, "avg_logprob": -0.4815130776506129, "compression_ratio": 1.9384615384615385, "no_speech_prob": 5.734780279453844e-05}, {"id": 60, "seek": 19900, "start": 212.0, "end": 215.0, "text": " Possibly not able to chat. That's all right. Hello. Anyway.", "tokens": [33112, 3545, 406, 1075, 281, 5081, 13, 663, 311, 439, 558, 13, 2425, 13, 5684, 13], "temperature": 0.0, "avg_logprob": -0.4815130776506129, "compression_ratio": 1.9384615384615385, "no_speech_prob": 5.734780279453844e-05}, {"id": 61, "seek": 19900, "start": 215.0, "end": 217.0, "text": " No, I haven't had a chance to join before.", "tokens": [883, 11, 286, 2378, 380, 632, 257, 2931, 281, 3917, 949, 13], "temperature": 0.0, "avg_logprob": -0.4815130776506129, "compression_ratio": 1.9384615384615385, "no_speech_prob": 5.734780279453844e-05}, {"id": 62, "seek": 19900, "start": 217.0, "end": 221.0, "text": " Oh, well, welcome.", "tokens": [876, 11, 731, 11, 2928, 13], "temperature": 0.0, "avg_logprob": -0.4815130776506129, "compression_ratio": 1.9384615384615385, "no_speech_prob": 5.734780279453844e-05}, {"id": 63, "seek": 19900, "start": 221.0, "end": 223.0, "text": " Have you watched any of the videos done any APL.", "tokens": [3560, 291, 6337, 604, 295, 264, 2145, 1096, 604, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.4815130776506129, "compression_ratio": 1.9384615384615385, "no_speech_prob": 5.734780279453844e-05}, {"id": 64, "seek": 19900, "start": 223.0, "end": 228.0, "text": " As yet.", "tokens": [1018, 1939, 13], "temperature": 0.0, "avg_logprob": -0.4815130776506129, "compression_ratio": 1.9384615384615385, "no_speech_prob": 5.734780279453844e-05}, {"id": 65, "seek": 22800, "start": 228.0, "end": 230.0, "text": " I'm not sure if you've watched the study group.", "tokens": [286, 478, 406, 988, 498, 291, 600, 6337, 264, 2979, 1594, 13], "temperature": 0.0, "avg_logprob": -0.48759683386071934, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.0613701306283474e-05}, {"id": 66, "seek": 22800, "start": 230.0, "end": 236.0, "text": " The study group had started yesterday. So, yeah.", "tokens": [440, 2979, 1594, 632, 1409, 5186, 13, 407, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.48759683386071934, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.0613701306283474e-05}, {"id": 67, "seek": 22800, "start": 236.0, "end": 242.0, "text": " I'm caught up in no time.", "tokens": [286, 478, 5415, 493, 294, 572, 565, 13], "temperature": 0.0, "avg_logprob": -0.48759683386071934, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.0613701306283474e-05}, {"id": 68, "seek": 22800, "start": 242.0, "end": 244.0, "text": " This is what it looks like.", "tokens": [639, 307, 437, 309, 1542, 411, 13], "temperature": 0.0, "avg_logprob": -0.48759683386071934, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.0613701306283474e-05}, {"id": 69, "seek": 22800, "start": 244.0, "end": 248.0, "text": " So.", "tokens": [407, 13], "temperature": 0.0, "avg_logprob": -0.48759683386071934, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.0613701306283474e-05}, {"id": 70, "seek": 22800, "start": 248.0, "end": 250.0, "text": " Who wants to be there?", "tokens": [2102, 2738, 281, 312, 456, 30], "temperature": 0.0, "avg_logprob": -0.48759683386071934, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.0613701306283474e-05}, {"id": 71, "seek": 22800, "start": 250.0, "end": 251.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.48759683386071934, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.0613701306283474e-05}, {"id": 72, "seek": 22800, "start": 251.0, "end": 252.0, "text": " He wants to suggest a.", "tokens": [634, 2738, 281, 3402, 257, 13], "temperature": 0.0, "avg_logprob": -0.48759683386071934, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.0613701306283474e-05}, {"id": 73, "seek": 22800, "start": 252.0, "end": 257.0, "text": " Prompt.", "tokens": [15833, 662, 13], "temperature": 0.0, "avg_logprob": -0.48759683386071934, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.0613701306283474e-05}, {"id": 74, "seek": 25700, "start": 257.0, "end": 262.0, "text": " What does the Fox say?", "tokens": [708, 775, 264, 11388, 584, 30], "temperature": 0.0, "avg_logprob": -0.2518270306470918, "compression_ratio": 1.6932515337423313, "no_speech_prob": 4.535384141490795e-05}, {"id": 75, "seek": 25700, "start": 262.0, "end": 264.0, "text": " Wait, you're meant to be.", "tokens": [3802, 11, 291, 434, 4140, 281, 312, 13], "temperature": 0.0, "avg_logprob": -0.2518270306470918, "compression_ratio": 1.6932515337423313, "no_speech_prob": 4.535384141490795e-05}, {"id": 76, "seek": 25700, "start": 264.0, "end": 266.0, "text": " Giving you something to draw a picture of.", "tokens": [28983, 291, 746, 281, 2642, 257, 3036, 295, 13], "temperature": 0.0, "avg_logprob": -0.2518270306470918, "compression_ratio": 1.6932515337423313, "no_speech_prob": 4.535384141490795e-05}, {"id": 77, "seek": 25700, "start": 266.0, "end": 269.0, "text": " Is that something you can draw a picture of?", "tokens": [1119, 300, 746, 291, 393, 2642, 257, 3036, 295, 30], "temperature": 0.0, "avg_logprob": -0.2518270306470918, "compression_ratio": 1.6932515337423313, "no_speech_prob": 4.535384141490795e-05}, {"id": 78, "seek": 25700, "start": 269.0, "end": 271.0, "text": " Maybe a student.", "tokens": [2704, 257, 3107, 13], "temperature": 0.0, "avg_logprob": -0.2518270306470918, "compression_ratio": 1.6932515337423313, "no_speech_prob": 4.535384141490795e-05}, {"id": 79, "seek": 25700, "start": 271.0, "end": 274.0, "text": " Working on an assignment using.", "tokens": [18337, 322, 364, 15187, 1228, 13], "temperature": 0.0, "avg_logprob": -0.2518270306470918, "compression_ratio": 1.6932515337423313, "no_speech_prob": 4.535384141490795e-05}, {"id": 80, "seek": 25700, "start": 274.0, "end": 276.0, "text": " Array programming language.", "tokens": [1587, 3458, 9410, 2856, 13], "temperature": 0.0, "avg_logprob": -0.2518270306470918, "compression_ratio": 1.6932515337423313, "no_speech_prob": 4.535384141490795e-05}, {"id": 81, "seek": 25700, "start": 276.0, "end": 278.0, "text": " Student.", "tokens": [12464, 13], "temperature": 0.0, "avg_logprob": -0.2518270306470918, "compression_ratio": 1.6932515337423313, "no_speech_prob": 4.535384141490795e-05}, {"id": 82, "seek": 25700, "start": 278.0, "end": 282.0, "text": " Working on an assignment.", "tokens": [18337, 322, 364, 15187, 13], "temperature": 0.0, "avg_logprob": -0.2518270306470918, "compression_ratio": 1.6932515337423313, "no_speech_prob": 4.535384141490795e-05}, {"id": 83, "seek": 25700, "start": 282.0, "end": 286.0, "text": " Using an array programming.", "tokens": [11142, 364, 10225, 9410, 13], "temperature": 0.0, "avg_logprob": -0.2518270306470918, "compression_ratio": 1.6932515337423313, "no_speech_prob": 4.535384141490795e-05}, {"id": 84, "seek": 28600, "start": 286.0, "end": 287.0, "text": " Language.", "tokens": [24445, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 85, "seek": 28600, "start": 287.0, "end": 289.0, "text": " Do you want like a photo realistic photo?", "tokens": [1144, 291, 528, 411, 257, 5052, 12465, 5052, 30], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 86, "seek": 28600, "start": 289.0, "end": 291.0, "text": " Do you want a 3d render?", "tokens": [1144, 291, 528, 257, 805, 67, 15529, 30], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 87, "seek": 28600, "start": 291.0, "end": 292.0, "text": " Do you want a.", "tokens": [1144, 291, 528, 257, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 88, "seek": 28600, "start": 292.0, "end": 294.0, "text": " Pencil drawing.", "tokens": [10571, 3208, 6316, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 89, "seek": 28600, "start": 294.0, "end": 297.0, "text": " What kind.", "tokens": [708, 733, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 90, "seek": 28600, "start": 297.0, "end": 300.0, "text": " Maybe.", "tokens": [2704, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 91, "seek": 28600, "start": 300.0, "end": 302.0, "text": " Something with scholars.", "tokens": [6595, 365, 8553, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 92, "seek": 28600, "start": 302.0, "end": 303.0, "text": " So pencil drawing.", "tokens": [407, 10985, 6316, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 93, "seek": 28600, "start": 303.0, "end": 305.0, "text": " Not so much, but.", "tokens": [1726, 370, 709, 11, 457, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 94, "seek": 28600, "start": 305.0, "end": 307.0, "text": " Color pencil drawing or.", "tokens": [10458, 10985, 6316, 420, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 95, "seek": 28600, "start": 307.0, "end": 308.0, "text": " Oh yeah.", "tokens": [876, 1338, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 96, "seek": 28600, "start": 308.0, "end": 309.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 97, "seek": 28600, "start": 309.0, "end": 310.0, "text": " That sounds great.", "tokens": [663, 3263, 869, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 98, "seek": 28600, "start": 310.0, "end": 311.0, "text": " A color pencil.", "tokens": [316, 2017, 10985, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 99, "seek": 28600, "start": 311.0, "end": 314.0, "text": " Drawing.", "tokens": [20386, 278, 13], "temperature": 0.0, "avg_logprob": -0.24975963667327283, "compression_ratio": 1.6035502958579881, "no_speech_prob": 2.5861538233584724e-05}, {"id": 100, "seek": 31400, "start": 314.0, "end": 317.0, "text": " I don't think.", "tokens": [286, 500, 380, 519, 13], "temperature": 0.0, "avg_logprob": -0.2792726024504631, "compression_ratio": 1.3071428571428572, "no_speech_prob": 4.6812707296339795e-05}, {"id": 101, "seek": 31400, "start": 317.0, "end": 320.0, "text": " Know when a thing about.", "tokens": [10265, 562, 257, 551, 466, 13], "temperature": 0.0, "avg_logprob": -0.2792726024504631, "compression_ratio": 1.3071428571428572, "no_speech_prob": 4.6812707296339795e-05}, {"id": 102, "seek": 31400, "start": 320.0, "end": 325.0, "text": " Oopsie-dozy about array programming from what I've been able to see.", "tokens": [21726, 414, 12, 2595, 1229, 466, 10225, 9410, 490, 437, 286, 600, 668, 1075, 281, 536, 13], "temperature": 0.0, "avg_logprob": -0.2792726024504631, "compression_ratio": 1.3071428571428572, "no_speech_prob": 4.6812707296339795e-05}, {"id": 103, "seek": 31400, "start": 325.0, "end": 328.0, "text": " Yeah, I don't imagine it should, but.", "tokens": [865, 11, 286, 500, 380, 3811, 309, 820, 11, 457, 13], "temperature": 0.0, "avg_logprob": -0.2792726024504631, "compression_ratio": 1.3071428571428572, "no_speech_prob": 4.6812707296339795e-05}, {"id": 104, "seek": 31400, "start": 328.0, "end": 332.0, "text": " You know.", "tokens": [509, 458, 13], "temperature": 0.0, "avg_logprob": -0.2792726024504631, "compression_ratio": 1.3071428571428572, "no_speech_prob": 4.6812707296339795e-05}, {"id": 105, "seek": 31400, "start": 332.0, "end": 341.0, "text": " Maybe it will surprise us.", "tokens": [2704, 309, 486, 6365, 505, 13], "temperature": 0.0, "avg_logprob": -0.2792726024504631, "compression_ratio": 1.3071428571428572, "no_speech_prob": 4.6812707296339795e-05}, {"id": 106, "seek": 34100, "start": 341.0, "end": 344.0, "text": " Maybe it will surprise us.", "tokens": [2704, 309, 486, 6365, 505, 13], "temperature": 0.0, "avg_logprob": -0.3989848818097796, "compression_ratio": 1.0980392156862746, "no_speech_prob": 4.003559297416359e-05}, {"id": 107, "seek": 34100, "start": 344.0, "end": 354.0, "text": " Somewhere.", "tokens": [34500, 13], "temperature": 0.0, "avg_logprob": -0.3989848818097796, "compression_ratio": 1.0980392156862746, "no_speech_prob": 4.003559297416359e-05}, {"id": 108, "seek": 34100, "start": 354.0, "end": 356.0, "text": " Add digital art for striking high quality images.", "tokens": [5349, 4562, 1523, 337, 18559, 1090, 3125, 5267, 13], "temperature": 0.0, "avg_logprob": -0.3989848818097796, "compression_ratio": 1.0980392156862746, "no_speech_prob": 4.003559297416359e-05}, {"id": 109, "seek": 34100, "start": 356.0, "end": 365.0, "text": " Oh, that's good to know.", "tokens": [876, 11, 300, 311, 665, 281, 458, 13], "temperature": 0.0, "avg_logprob": -0.3989848818097796, "compression_ratio": 1.0980392156862746, "no_speech_prob": 4.003559297416359e-05}, {"id": 110, "seek": 36500, "start": 365.0, "end": 371.0, "text": " I don't know if it's going to be a good idea to do it.", "tokens": [286, 500, 380, 458, 498, 309, 311, 516, 281, 312, 257, 665, 1558, 281, 360, 309, 13], "temperature": 0.2, "avg_logprob": -0.5729205412023207, "compression_ratio": 1.4971098265895955, "no_speech_prob": 1.4968591131037101e-05}, {"id": 111, "seek": 36500, "start": 371.0, "end": 374.0, "text": " I don't know if we're going to make movies with.", "tokens": [286, 500, 380, 458, 498, 321, 434, 516, 281, 652, 6233, 365, 13], "temperature": 0.2, "avg_logprob": -0.5729205412023207, "compression_ratio": 1.4971098265895955, "no_speech_prob": 1.4968591131037101e-05}, {"id": 112, "seek": 36500, "start": 374.0, "end": 375.0, "text": " Explain everything to it.", "tokens": [39574, 1203, 281, 309, 13], "temperature": 0.2, "avg_logprob": -0.5729205412023207, "compression_ratio": 1.4971098265895955, "no_speech_prob": 1.4968591131037101e-05}, {"id": 113, "seek": 36500, "start": 375.0, "end": 380.0, "text": " It makes.", "tokens": [467, 1669, 13], "temperature": 0.2, "avg_logprob": -0.5729205412023207, "compression_ratio": 1.4971098265895955, "no_speech_prob": 1.4968591131037101e-05}, {"id": 114, "seek": 36500, "start": 380.0, "end": 381.0, "text": " Something's happening.", "tokens": [6595, 311, 2737, 13], "temperature": 0.2, "avg_logprob": -0.5729205412023207, "compression_ratio": 1.4971098265895955, "no_speech_prob": 1.4968591131037101e-05}, {"id": 115, "seek": 36500, "start": 381.0, "end": 382.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.2, "avg_logprob": -0.5729205412023207, "compression_ratio": 1.4971098265895955, "no_speech_prob": 1.4968591131037101e-05}, {"id": 116, "seek": 36500, "start": 382.0, "end": 383.0, "text": " This is the problem.", "tokens": [639, 307, 264, 1154, 13], "temperature": 0.2, "avg_logprob": -0.5729205412023207, "compression_ratio": 1.4971098265895955, "no_speech_prob": 1.4968591131037101e-05}, {"id": 117, "seek": 36500, "start": 383.0, "end": 391.0, "text": " When you.", "tokens": [1133, 291, 13], "temperature": 0.2, "avg_logprob": -0.5729205412023207, "compression_ratio": 1.4971098265895955, "no_speech_prob": 1.4968591131037101e-05}, {"id": 118, "seek": 36500, "start": 391.0, "end": 394.0, "text": " I often find when you kind of like put these extra details,", "tokens": [286, 2049, 915, 562, 291, 733, 295, 411, 829, 613, 2857, 4365, 11], "temperature": 0.2, "avg_logprob": -0.5729205412023207, "compression_ratio": 1.4971098265895955, "no_speech_prob": 1.4968591131037101e-05}, {"id": 119, "seek": 39400, "start": 394.0, "end": 395.0, "text": " you know,", "tokens": [291, 458, 11], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 120, "seek": 39400, "start": 395.0, "end": 397.0, "text": " you can make a movie with it.", "tokens": [291, 393, 652, 257, 3169, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 121, "seek": 39400, "start": 397.0, "end": 399.0, "text": " And then you can make it look like a movie.", "tokens": [400, 550, 291, 393, 652, 309, 574, 411, 257, 3169, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 122, "seek": 39400, "start": 399.0, "end": 401.0, "text": " Some words that it thinks look a bit like.", "tokens": [2188, 2283, 300, 309, 7309, 574, 257, 857, 411, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 123, "seek": 39400, "start": 401.0, "end": 402.0, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 124, "seek": 39400, "start": 402.0, "end": 404.0, "text": " If we did like a programming.", "tokens": [759, 321, 630, 411, 257, 9410, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 125, "seek": 39400, "start": 404.0, "end": 410.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 126, "seek": 39400, "start": 410.0, "end": 413.0, "text": " You know, first and six months that they look somewhat accurate.", "tokens": [509, 458, 11, 700, 293, 2309, 2493, 300, 436, 574, 8344, 8559, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 127, "seek": 39400, "start": 413.0, "end": 414.0, "text": " I would say.", "tokens": [286, 576, 584, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 128, "seek": 39400, "start": 414.0, "end": 415.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 129, "seek": 39400, "start": 415.0, "end": 417.0, "text": " This person's coding by drawing on a screen.", "tokens": [639, 954, 311, 17720, 538, 6316, 322, 257, 2568, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 130, "seek": 39400, "start": 417.0, "end": 419.0, "text": " Did you have, do you have to pay for this?", "tokens": [2589, 291, 362, 11, 360, 291, 362, 281, 1689, 337, 341, 30], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 131, "seek": 39400, "start": 419.0, "end": 420.0, "text": " For this.", "tokens": [1171, 341, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 132, "seek": 39400, "start": 420.0, "end": 421.0, "text": " Access to Dali.", "tokens": [17166, 281, 413, 5103, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 133, "seek": 39400, "start": 421.0, "end": 423.0, "text": " This is free.", "tokens": [639, 307, 1737, 13], "temperature": 0.0, "avg_logprob": -0.47861220485480255, "compression_ratio": 1.63135593220339, "no_speech_prob": 2.2824775442131795e-05}, {"id": 134, "seek": 42300, "start": 423.0, "end": 424.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.4222555527320275, "compression_ratio": 1.231578947368421, "no_speech_prob": 1.2801543562090956e-05}, {"id": 135, "seek": 42300, "start": 424.0, "end": 425.0, "text": " I think it was.", "tokens": [286, 519, 309, 390, 13], "temperature": 0.0, "avg_logprob": -0.4222555527320275, "compression_ratio": 1.231578947368421, "no_speech_prob": 1.2801543562090956e-05}, {"id": 136, "seek": 42300, "start": 425.0, "end": 427.0, "text": " You have to apply and then you just wait.", "tokens": [509, 362, 281, 3079, 293, 550, 291, 445, 1699, 13], "temperature": 0.0, "avg_logprob": -0.4222555527320275, "compression_ratio": 1.231578947368421, "no_speech_prob": 1.2801543562090956e-05}, {"id": 137, "seek": 42300, "start": 427.0, "end": 428.0, "text": " For.", "tokens": [1171, 13], "temperature": 0.0, "avg_logprob": -0.4222555527320275, "compression_ratio": 1.231578947368421, "no_speech_prob": 1.2801543562090956e-05}, {"id": 138, "seek": 42300, "start": 428.0, "end": 429.0, "text": " Well, months.", "tokens": [1042, 11, 2493, 13], "temperature": 0.0, "avg_logprob": -0.4222555527320275, "compression_ratio": 1.231578947368421, "no_speech_prob": 1.2801543562090956e-05}, {"id": 139, "seek": 42300, "start": 429.0, "end": 430.0, "text": " I think it was.", "tokens": [286, 519, 309, 390, 13], "temperature": 0.0, "avg_logprob": -0.4222555527320275, "compression_ratio": 1.231578947368421, "no_speech_prob": 1.2801543562090956e-05}, {"id": 140, "seek": 42300, "start": 430.0, "end": 432.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.4222555527320275, "compression_ratio": 1.231578947368421, "no_speech_prob": 1.2801543562090956e-05}, {"id": 141, "seek": 42300, "start": 432.0, "end": 443.0, "text": " I might try.", "tokens": [286, 1062, 853, 13], "temperature": 0.0, "avg_logprob": -0.4222555527320275, "compression_ratio": 1.231578947368421, "no_speech_prob": 1.2801543562090956e-05}, {"id": 142, "seek": 44300, "start": 443.0, "end": 456.0, "text": " I might try to get a little bit of a better view of this.", "tokens": [286, 1062, 853, 281, 483, 257, 707, 857, 295, 257, 1101, 1910, 295, 341, 13], "temperature": 0.0, "avg_logprob": -0.8455966711044312, "compression_ratio": 1.0952380952380953, "no_speech_prob": 3.965602445532568e-06}, {"id": 143, "seek": 44300, "start": 456.0, "end": 457.0, "text": " It's been happening.", "tokens": [467, 311, 668, 2737, 13], "temperature": 0.0, "avg_logprob": -0.8455966711044312, "compression_ratio": 1.0952380952380953, "no_speech_prob": 3.965602445532568e-06}, {"id": 144, "seek": 44300, "start": 457.0, "end": 472.0, "text": " Not too much.", "tokens": [1726, 886, 709, 13], "temperature": 0.0, "avg_logprob": -0.8455966711044312, "compression_ratio": 1.0952380952380953, "no_speech_prob": 3.965602445532568e-06}, {"id": 145, "seek": 47200, "start": 472.0, "end": 473.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.2, "avg_logprob": -0.3791824771511939, "compression_ratio": 1.2733812949640289, "no_speech_prob": 7.180760349001503e-06}, {"id": 146, "seek": 47200, "start": 473.0, "end": 478.0, "text": " I think this is my favorite advent of code problem from last year.", "tokens": [286, 519, 341, 307, 452, 2954, 7045, 295, 3089, 1154, 490, 1036, 1064, 13], "temperature": 0.2, "avg_logprob": -0.3791824771511939, "compression_ratio": 1.2733812949640289, "no_speech_prob": 7.180760349001503e-06}, {"id": 147, "seek": 47200, "start": 478.0, "end": 479.0, "text": " And.", "tokens": [400, 13], "temperature": 0.2, "avg_logprob": -0.3791824771511939, "compression_ratio": 1.2733812949640289, "no_speech_prob": 7.180760349001503e-06}, {"id": 148, "seek": 47200, "start": 479.0, "end": 484.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.2, "avg_logprob": -0.3791824771511939, "compression_ratio": 1.2733812949640289, "no_speech_prob": 7.180760349001503e-06}, {"id": 149, "seek": 47200, "start": 484.0, "end": 488.0, "text": " That one was.", "tokens": [663, 472, 390, 13], "temperature": 0.2, "avg_logprob": -0.3791824771511939, "compression_ratio": 1.2733812949640289, "no_speech_prob": 7.180760349001503e-06}, {"id": 150, "seek": 47200, "start": 488.0, "end": 490.0, "text": " I don't know. Just really, really cool.", "tokens": [286, 500, 380, 458, 13, 1449, 534, 11, 534, 1627, 13], "temperature": 0.2, "avg_logprob": -0.3791824771511939, "compression_ratio": 1.2733812949640289, "no_speech_prob": 7.180760349001503e-06}, {"id": 151, "seek": 47200, "start": 490.0, "end": 495.0, "text": " Kind of worked for APL very, very well.", "tokens": [9242, 295, 2732, 337, 5372, 43, 588, 11, 588, 731, 13], "temperature": 0.2, "avg_logprob": -0.3791824771511939, "compression_ratio": 1.2733812949640289, "no_speech_prob": 7.180760349001503e-06}, {"id": 152, "seek": 49500, "start": 495.0, "end": 506.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.22214360237121583, "compression_ratio": 1.2448979591836735, "no_speech_prob": 7.888625987106934e-06}, {"id": 153, "seek": 49500, "start": 506.0, "end": 513.0, "text": " So this is a map representing the height of the ground of that grid point.", "tokens": [407, 341, 307, 257, 4471, 13460, 264, 6681, 295, 264, 2727, 295, 300, 10748, 935, 13], "temperature": 0.0, "avg_logprob": -0.22214360237121583, "compression_ratio": 1.2448979591836735, "no_speech_prob": 7.888625987106934e-06}, {"id": 154, "seek": 49500, "start": 513.0, "end": 515.0, "text": " This is the high bits. Okay.", "tokens": [639, 307, 264, 1090, 9239, 13, 1033, 13], "temperature": 0.0, "avg_logprob": -0.22214360237121583, "compression_ratio": 1.2448979591836735, "no_speech_prob": 7.888625987106934e-06}, {"id": 155, "seek": 49500, "start": 515.0, "end": 523.0, "text": " That's cool.", "tokens": [663, 311, 1627, 13], "temperature": 0.0, "avg_logprob": -0.22214360237121583, "compression_ratio": 1.2448979591836735, "no_speech_prob": 7.888625987106934e-06}, {"id": 156, "seek": 52300, "start": 523.0, "end": 528.0, "text": " So that's the low points.", "tokens": [407, 300, 311, 264, 2295, 2793, 13], "temperature": 0.0, "avg_logprob": -0.5075981049310594, "compression_ratio": 1.5185185185185186, "no_speech_prob": 3.7624904507538304e-05}, {"id": 157, "seek": 52300, "start": 528.0, "end": 531.0, "text": " The part one, you have to find what you do have to find the low points.", "tokens": [440, 644, 472, 11, 291, 362, 281, 915, 437, 291, 360, 362, 281, 915, 264, 2295, 2793, 13], "temperature": 0.0, "avg_logprob": -0.5075981049310594, "compression_ratio": 1.5185185185185186, "no_speech_prob": 3.7624904507538304e-05}, {"id": 158, "seek": 52300, "start": 531.0, "end": 532.0, "text": " Yep.", "tokens": [7010, 13], "temperature": 0.0, "avg_logprob": -0.5075981049310594, "compression_ratio": 1.5185185185185186, "no_speech_prob": 3.7624904507538304e-05}, {"id": 159, "seek": 52300, "start": 532.0, "end": 536.0, "text": " Find the low points.", "tokens": [11809, 264, 2295, 2793, 13], "temperature": 0.0, "avg_logprob": -0.5075981049310594, "compression_ratio": 1.5185185185185186, "no_speech_prob": 3.7624904507538304e-05}, {"id": 160, "seek": 53600, "start": 536.0, "end": 554.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.47275491194291547, "compression_ratio": 0.8367346938775511, "no_speech_prob": 7.841768820071593e-05}, {"id": 161, "seek": 53600, "start": 554.0, "end": 559.0, "text": " Oh.", "tokens": [876, 13], "temperature": 0.0, "avg_logprob": -0.47275491194291547, "compression_ratio": 0.8367346938775511, "no_speech_prob": 7.841768820071593e-05}, {"id": 162, "seek": 53600, "start": 559.0, "end": 563.0, "text": " That's a good one from Tanishk.", "tokens": [663, 311, 257, 665, 472, 490, 314, 7524, 74, 13], "temperature": 0.0, "avg_logprob": -0.47275491194291547, "compression_ratio": 0.8367346938775511, "no_speech_prob": 7.841768820071593e-05}, {"id": 163, "seek": 56300, "start": 563.0, "end": 567.0, "text": " I think it's a good one.", "tokens": [286, 519, 309, 311, 257, 665, 472, 13], "temperature": 0.2, "avg_logprob": -0.5827114024060838, "compression_ratio": 1.127906976744186, "no_speech_prob": 1.9828021322609857e-05}, {"id": 164, "seek": 56300, "start": 567.0, "end": 569.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.2, "avg_logprob": -0.5827114024060838, "compression_ratio": 1.127906976744186, "no_speech_prob": 1.9828021322609857e-05}, {"id": 165, "seek": 56300, "start": 569.0, "end": 571.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.2, "avg_logprob": -0.5827114024060838, "compression_ratio": 1.127906976744186, "no_speech_prob": 1.9828021322609857e-05}, {"id": 166, "seek": 56300, "start": 571.0, "end": 575.0, "text": " Copy.", "tokens": [25653, 13], "temperature": 0.2, "avg_logprob": -0.5827114024060838, "compression_ratio": 1.127906976744186, "no_speech_prob": 1.9828021322609857e-05}, {"id": 167, "seek": 56300, "start": 575.0, "end": 577.0, "text": " See how this went.", "tokens": [3008, 577, 341, 1437, 13], "temperature": 0.2, "avg_logprob": -0.5827114024060838, "compression_ratio": 1.127906976744186, "no_speech_prob": 1.9828021322609857e-05}, {"id": 168, "seek": 56300, "start": 577.0, "end": 582.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.2, "avg_logprob": -0.5827114024060838, "compression_ratio": 1.127906976744186, "no_speech_prob": 1.9828021322609857e-05}, {"id": 169, "seek": 56300, "start": 582.0, "end": 583.0, "text": " It is a pencil drawing.", "tokens": [467, 307, 257, 10985, 6316, 13], "temperature": 0.2, "avg_logprob": -0.5827114024060838, "compression_ratio": 1.127906976744186, "no_speech_prob": 1.9828021322609857e-05}, {"id": 170, "seek": 56300, "start": 583.0, "end": 587.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.2, "avg_logprob": -0.5827114024060838, "compression_ratio": 1.127906976744186, "no_speech_prob": 1.9828021322609857e-05}, {"id": 171, "seek": 58700, "start": 587.0, "end": 595.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.33675500458362057, "compression_ratio": 1.2446043165467626, "no_speech_prob": 1.920757676998619e-05}, {"id": 172, "seek": 58700, "start": 595.0, "end": 597.0, "text": " Interestingly,", "tokens": [30564, 11], "temperature": 0.0, "avg_logprob": -0.33675500458362057, "compression_ratio": 1.2446043165467626, "no_speech_prob": 1.920757676998619e-05}, {"id": 173, "seek": 58700, "start": 597.0, "end": 601.0, "text": " when I started watching something about APL on YouTube,", "tokens": [562, 286, 1409, 1976, 746, 466, 5372, 43, 322, 3088, 11], "temperature": 0.0, "avg_logprob": -0.33675500458362057, "compression_ratio": 1.2446043165467626, "no_speech_prob": 1.920757676998619e-05}, {"id": 174, "seek": 58700, "start": 601.0, "end": 604.0, "text": " it started recommending me videos on, you know,", "tokens": [309, 1409, 30559, 385, 2145, 322, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.33675500458362057, "compression_ratio": 1.2446043165467626, "no_speech_prob": 1.920757676998619e-05}, {"id": 175, "seek": 58700, "start": 604.0, "end": 611.0, "text": " here are glyphs and I guess Egypt and stuff. So.", "tokens": [510, 366, 22633, 950, 82, 293, 286, 2041, 9582, 293, 1507, 13, 407, 13], "temperature": 0.0, "avg_logprob": -0.33675500458362057, "compression_ratio": 1.2446043165467626, "no_speech_prob": 1.920757676998619e-05}, {"id": 176, "seek": 61100, "start": 611.0, "end": 622.0, "text": " It can draw the connection.", "tokens": [467, 393, 2642, 264, 4984, 13], "temperature": 0.0, "avg_logprob": -0.2725052400068803, "compression_ratio": 0.9104477611940298, "no_speech_prob": 4.6026842028368264e-05}, {"id": 177, "seek": 61100, "start": 622.0, "end": 638.0, "text": " All right. Let's open up our one.", "tokens": [1057, 558, 13, 961, 311, 1269, 493, 527, 472, 13], "temperature": 0.0, "avg_logprob": -0.2725052400068803, "compression_ratio": 0.9104477611940298, "no_speech_prob": 4.6026842028368264e-05}, {"id": 178, "seek": 63800, "start": 638.0, "end": 641.0, "text": " I don't think there's anything to pull.", "tokens": [286, 500, 380, 519, 456, 311, 1340, 281, 2235, 13], "temperature": 0.0, "avg_logprob": -0.24610373708936903, "compression_ratio": 1.0638297872340425, "no_speech_prob": 1.0613636732159648e-05}, {"id": 179, "seek": 63800, "start": 641.0, "end": 648.0, "text": " But just in case.", "tokens": [583, 445, 294, 1389, 13], "temperature": 0.0, "avg_logprob": -0.24610373708936903, "compression_ratio": 1.0638297872340425, "no_speech_prob": 1.0613636732159648e-05}, {"id": 180, "seek": 63800, "start": 648.0, "end": 649.0, "text": " There is.", "tokens": [821, 307, 13], "temperature": 0.0, "avg_logprob": -0.24610373708936903, "compression_ratio": 1.0638297872340425, "no_speech_prob": 1.0613636732159648e-05}, {"id": 181, "seek": 63800, "start": 649.0, "end": 662.0, "text": " Oh, because of the GitHub pages.", "tokens": [876, 11, 570, 295, 264, 23331, 7183, 13], "temperature": 0.0, "avg_logprob": -0.24610373708936903, "compression_ratio": 1.0638297872340425, "no_speech_prob": 1.0613636732159648e-05}, {"id": 182, "seek": 66200, "start": 662.0, "end": 687.0, "text": " I thought we could make a custom operator today.", "tokens": [286, 1194, 321, 727, 652, 257, 2375, 12973, 965, 13], "temperature": 0.0, "avg_logprob": -0.353905303137643, "compression_ratio": 0.8571428571428571, "no_speech_prob": 1.8042452211375348e-05}, {"id": 183, "seek": 68700, "start": 687.0, "end": 692.0, "text": " I think it's a good idea.", "tokens": [286, 519, 309, 311, 257, 665, 1558, 13], "temperature": 0.0, "avg_logprob": -0.34626567363739014, "compression_ratio": 1.4606060606060607, "no_speech_prob": 2.8841765015386045e-05}, {"id": 184, "seek": 68700, "start": 692.0, "end": 694.0, "text": " The cat is not a professor.", "tokens": [440, 3857, 307, 406, 257, 8304, 13], "temperature": 0.0, "avg_logprob": -0.34626567363739014, "compression_ratio": 1.4606060606060607, "no_speech_prob": 2.8841765015386045e-05}, {"id": 185, "seek": 68700, "start": 694.0, "end": 696.0, "text": " No, it's not.", "tokens": [883, 11, 309, 311, 406, 13], "temperature": 0.0, "avg_logprob": -0.34626567363739014, "compression_ratio": 1.4606060606060607, "no_speech_prob": 2.8841765015386045e-05}, {"id": 186, "seek": 68700, "start": 696.0, "end": 703.0, "text": " A professor who is a cat.", "tokens": [316, 8304, 567, 307, 257, 3857, 13], "temperature": 0.0, "avg_logprob": -0.34626567363739014, "compression_ratio": 1.4606060606060607, "no_speech_prob": 2.8841765015386045e-05}, {"id": 187, "seek": 68700, "start": 703.0, "end": 705.0, "text": " I guess at least it's got glasses on the top left.", "tokens": [286, 2041, 412, 1935, 309, 311, 658, 10812, 322, 264, 1192, 1411, 13], "temperature": 0.0, "avg_logprob": -0.34626567363739014, "compression_ratio": 1.4606060606060607, "no_speech_prob": 2.8841765015386045e-05}, {"id": 188, "seek": 68700, "start": 705.0, "end": 709.0, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.34626567363739014, "compression_ratio": 1.4606060606060607, "no_speech_prob": 2.8841765015386045e-05}, {"id": 189, "seek": 68700, "start": 709.0, "end": 710.0, "text": " I mean, that could well,", "tokens": [286, 914, 11, 300, 727, 731, 11], "temperature": 0.0, "avg_logprob": -0.34626567363739014, "compression_ratio": 1.4606060606060607, "no_speech_prob": 2.8841765015386045e-05}, {"id": 190, "seek": 68700, "start": 710.0, "end": 716.0, "text": " but clearly somebody else in the background is doing the teaching.", "tokens": [457, 4448, 2618, 1646, 294, 264, 3678, 307, 884, 264, 4571, 13], "temperature": 0.0, "avg_logprob": -0.34626567363739014, "compression_ratio": 1.4606060606060607, "no_speech_prob": 2.8841765015386045e-05}, {"id": 191, "seek": 71600, "start": 716.0, "end": 718.0, "text": " So I'm not sure if that's a good idea.", "tokens": [407, 286, 478, 406, 988, 498, 300, 311, 257, 665, 1558, 13], "temperature": 0.2, "avg_logprob": -0.46472635683806046, "compression_ratio": 1.7149532710280373, "no_speech_prob": 2.246665462735109e-05}, {"id": 192, "seek": 71600, "start": 718.0, "end": 719.0, "text": " I think it's a good idea.", "tokens": [286, 519, 309, 311, 257, 665, 1558, 13], "temperature": 0.2, "avg_logprob": -0.46472635683806046, "compression_ratio": 1.7149532710280373, "no_speech_prob": 2.246665462735109e-05}, {"id": 193, "seek": 71600, "start": 719.0, "end": 720.0, "text": " I think it's a good idea.", "tokens": [286, 519, 309, 311, 257, 665, 1558, 13], "temperature": 0.2, "avg_logprob": -0.46472635683806046, "compression_ratio": 1.7149532710280373, "no_speech_prob": 2.246665462735109e-05}, {"id": 194, "seek": 71600, "start": 720.0, "end": 722.0, "text": " I think we're doing something with a 16 sets.", "tokens": [286, 519, 321, 434, 884, 746, 365, 257, 3165, 6352, 13], "temperature": 0.2, "avg_logprob": -0.46472635683806046, "compression_ratio": 1.7149532710280373, "no_speech_prob": 2.246665462735109e-05}, {"id": 195, "seek": 71600, "start": 722.0, "end": 725.0, "text": " You wish.", "tokens": [509, 3172, 13], "temperature": 0.2, "avg_logprob": -0.46472635683806046, "compression_ratio": 1.7149532710280373, "no_speech_prob": 2.246665462735109e-05}, {"id": 196, "seek": 71600, "start": 725.0, "end": 726.0, "text": " Online magazine kind of thing.", "tokens": [16930, 11332, 733, 295, 551, 13], "temperature": 0.2, "avg_logprob": -0.46472635683806046, "compression_ratio": 1.7149532710280373, "no_speech_prob": 2.246665462735109e-05}, {"id": 197, "seek": 71600, "start": 726.0, "end": 729.0, "text": " And we talked about this idea that.", "tokens": [400, 321, 2825, 466, 341, 1558, 300, 13], "temperature": 0.2, "avg_logprob": -0.46472635683806046, "compression_ratio": 1.7149532710280373, "no_speech_prob": 2.246665462735109e-05}, {"id": 198, "seek": 71600, "start": 729.0, "end": 732.0, "text": " It's kind of prompt engineering as a skill now.", "tokens": [467, 311, 733, 295, 12391, 7043, 382, 257, 5389, 586, 13], "temperature": 0.2, "avg_logprob": -0.46472635683806046, "compression_ratio": 1.7149532710280373, "no_speech_prob": 2.246665462735109e-05}, {"id": 199, "seek": 71600, "start": 732.0, "end": 739.0, "text": " That's a skill. I definitely don't have yet.", "tokens": [663, 311, 257, 5389, 13, 286, 2138, 500, 380, 362, 1939, 13], "temperature": 0.2, "avg_logprob": -0.46472635683806046, "compression_ratio": 1.7149532710280373, "no_speech_prob": 2.246665462735109e-05}, {"id": 200, "seek": 71600, "start": 739.0, "end": 742.0, "text": " I feel like it doesn't generalize from one model to another.", "tokens": [286, 841, 411, 309, 1177, 380, 2674, 1125, 490, 472, 2316, 281, 1071, 13], "temperature": 0.2, "avg_logprob": -0.46472635683806046, "compression_ratio": 1.7149532710280373, "no_speech_prob": 2.246665462735109e-05}, {"id": 201, "seek": 74200, "start": 742.0, "end": 746.0, "text": " I think it's a good idea.", "tokens": [286, 519, 309, 311, 257, 665, 1558, 13], "temperature": 0.0, "avg_logprob": -0.3799250000401547, "compression_ratio": 1.054945054945055, "no_speech_prob": 1.1122916475869715e-05}, {"id": 202, "seek": 74200, "start": 746.0, "end": 755.0, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.3799250000401547, "compression_ratio": 1.054945054945055, "no_speech_prob": 1.1122916475869715e-05}, {"id": 203, "seek": 74200, "start": 755.0, "end": 758.0, "text": " Has anybody got a favorite, like.", "tokens": [8646, 4472, 658, 257, 2954, 11, 411, 13], "temperature": 0.0, "avg_logprob": -0.3799250000401547, "compression_ratio": 1.054945054945055, "no_speech_prob": 1.1122916475869715e-05}, {"id": 204, "seek": 74200, "start": 758.0, "end": 761.0, "text": " Drawing program for.", "tokens": [20386, 278, 1461, 337, 13], "temperature": 0.0, "avg_logprob": -0.3799250000401547, "compression_ratio": 1.054945054945055, "no_speech_prob": 1.1122916475869715e-05}, {"id": 205, "seek": 74200, "start": 761.0, "end": 771.0, "text": " Mac.", "tokens": [5707, 13], "temperature": 0.0, "avg_logprob": -0.3799250000401547, "compression_ratio": 1.054945054945055, "no_speech_prob": 1.1122916475869715e-05}, {"id": 206, "seek": 77100, "start": 771.0, "end": 774.0, "text": " I think it's that fancy like something just for doing.", "tokens": [286, 519, 309, 311, 300, 10247, 411, 746, 445, 337, 884, 13], "temperature": 0.0, "avg_logprob": -0.28495342548076924, "compression_ratio": 1.4052287581699345, "no_speech_prob": 1.618526403035503e-05}, {"id": 207, "seek": 77100, "start": 774.0, "end": 775.0, "text": " You know,", "tokens": [509, 458, 11], "temperature": 0.0, "avg_logprob": -0.28495342548076924, "compression_ratio": 1.4052287581699345, "no_speech_prob": 1.618526403035503e-05}, {"id": 208, "seek": 77100, "start": 775.0, "end": 784.0, "text": " These kind of things.", "tokens": [1981, 733, 295, 721, 13], "temperature": 0.0, "avg_logprob": -0.28495342548076924, "compression_ratio": 1.4052287581699345, "no_speech_prob": 1.618526403035503e-05}, {"id": 209, "seek": 77100, "start": 784.0, "end": 787.0, "text": " And I also had to find out why my right mouse button doesn't work because", "tokens": [400, 286, 611, 632, 281, 915, 484, 983, 452, 558, 9719, 2960, 1177, 380, 589, 570], "temperature": 0.0, "avg_logprob": -0.28495342548076924, "compression_ratio": 1.4052287581699345, "no_speech_prob": 1.618526403035503e-05}, {"id": 210, "seek": 77100, "start": 787.0, "end": 788.0, "text": " since it doesn't work,", "tokens": [1670, 309, 1177, 380, 589, 11], "temperature": 0.0, "avg_logprob": -0.28495342548076924, "compression_ratio": 1.4052287581699345, "no_speech_prob": 1.618526403035503e-05}, {"id": 211, "seek": 77100, "start": 788.0, "end": 792.0, "text": " I'm now not sure how to insert.", "tokens": [286, 478, 586, 406, 988, 577, 281, 8969, 13], "temperature": 0.0, "avg_logprob": -0.28495342548076924, "compression_ratio": 1.4052287581699345, "no_speech_prob": 1.618526403035503e-05}, {"id": 212, "seek": 79200, "start": 792.0, "end": 802.0, "text": " Page.", "tokens": [21217, 13], "temperature": 0.0, "avg_logprob": -0.3699062168598175, "compression_ratio": 1.0444444444444445, "no_speech_prob": 9.664856406743638e-06}, {"id": 213, "seek": 79200, "start": 802.0, "end": 809.0, "text": " Area page.", "tokens": [19405, 3028, 13], "temperature": 0.0, "avg_logprob": -0.3699062168598175, "compression_ratio": 1.0444444444444445, "no_speech_prob": 9.664856406743638e-06}, {"id": 214, "seek": 79200, "start": 809.0, "end": 815.0, "text": " I'm guessing everybody is probably familiar with the idea of.", "tokens": [286, 478, 17939, 2201, 307, 1391, 4963, 365, 264, 1558, 295, 13], "temperature": 0.0, "avg_logprob": -0.3699062168598175, "compression_ratio": 1.0444444444444445, "no_speech_prob": 9.664856406743638e-06}, {"id": 215, "seek": 79200, "start": 815.0, "end": 820.0, "text": " Gradients, but.", "tokens": [16710, 2448, 11, 457, 13], "temperature": 0.0, "avg_logprob": -0.3699062168598175, "compression_ratio": 1.0444444444444445, "no_speech_prob": 9.664856406743638e-06}, {"id": 216, "seek": 82000, "start": 820.0, "end": 823.0, "text": " I'm not sure if I can get it to work because I thought we could just briefly", "tokens": [286, 478, 406, 988, 498, 286, 393, 483, 309, 281, 589, 570, 286, 1194, 321, 727, 445, 10515], "temperature": 0.0, "avg_logprob": -0.49773642074230107, "compression_ratio": 1.2321428571428572, "no_speech_prob": 1.4062820810067933e-05}, {"id": 217, "seek": 82000, "start": 823.0, "end": 826.0, "text": " mention it.", "tokens": [2152, 309, 13], "temperature": 0.0, "avg_logprob": -0.49773642074230107, "compression_ratio": 1.2321428571428572, "no_speech_prob": 1.4062820810067933e-05}, {"id": 218, "seek": 82000, "start": 826.0, "end": 836.0, "text": " So if we've got some.", "tokens": [407, 498, 321, 600, 658, 512, 13], "temperature": 0.0, "avg_logprob": -0.49773642074230107, "compression_ratio": 1.2321428571428572, "no_speech_prob": 1.4062820810067933e-05}, {"id": 219, "seek": 82000, "start": 836.0, "end": 848.0, "text": " Something like a quadratic.", "tokens": [6595, 411, 257, 37262, 13], "temperature": 0.0, "avg_logprob": -0.49773642074230107, "compression_ratio": 1.2321428571428572, "no_speech_prob": 1.4062820810067933e-05}, {"id": 220, "seek": 84800, "start": 848.0, "end": 852.0, "text": " Is.", "tokens": [1119, 13], "temperature": 0.0, "avg_logprob": -0.1784394836425781, "compression_ratio": 1.4855072463768115, "no_speech_prob": 4.1332361433887854e-05}, {"id": 221, "seek": 84800, "start": 852.0, "end": 855.0, "text": " Is the slope at that point.", "tokens": [1119, 264, 13525, 412, 300, 935, 13], "temperature": 0.0, "avg_logprob": -0.1784394836425781, "compression_ratio": 1.4855072463768115, "no_speech_prob": 4.1332361433887854e-05}, {"id": 222, "seek": 84800, "start": 855.0, "end": 857.0, "text": " So this would be the gradient.", "tokens": [407, 341, 576, 312, 264, 16235, 13], "temperature": 0.0, "avg_logprob": -0.1784394836425781, "compression_ratio": 1.4855072463768115, "no_speech_prob": 4.1332361433887854e-05}, {"id": 223, "seek": 84800, "start": 857.0, "end": 859.0, "text": " At this point.", "tokens": [1711, 341, 935, 13], "temperature": 0.0, "avg_logprob": -0.1784394836425781, "compression_ratio": 1.4855072463768115, "no_speech_prob": 4.1332361433887854e-05}, {"id": 224, "seek": 84800, "start": 859.0, "end": 861.0, "text": " Is that slope.", "tokens": [1119, 300, 13525, 13], "temperature": 0.0, "avg_logprob": -0.1784394836425781, "compression_ratio": 1.4855072463768115, "no_speech_prob": 4.1332361433887854e-05}, {"id": 225, "seek": 84800, "start": 861.0, "end": 863.0, "text": " And.", "tokens": [400, 13], "temperature": 0.0, "avg_logprob": -0.1784394836425781, "compression_ratio": 1.4855072463768115, "no_speech_prob": 4.1332361433887854e-05}, {"id": 226, "seek": 84800, "start": 863.0, "end": 865.0, "text": " You may or may not remember.", "tokens": [509, 815, 420, 815, 406, 1604, 13], "temperature": 0.0, "avg_logprob": -0.1784394836425781, "compression_ratio": 1.4855072463768115, "no_speech_prob": 4.1332361433887854e-05}, {"id": 227, "seek": 84800, "start": 865.0, "end": 869.0, "text": " That the slope.", "tokens": [663, 264, 13525, 13], "temperature": 0.0, "avg_logprob": -0.1784394836425781, "compression_ratio": 1.4855072463768115, "no_speech_prob": 4.1332361433887854e-05}, {"id": 228, "seek": 84800, "start": 869.0, "end": 872.0, "text": " Is equal to the rise over the run.", "tokens": [1119, 2681, 281, 264, 6272, 670, 264, 1190, 13], "temperature": 0.0, "avg_logprob": -0.1784394836425781, "compression_ratio": 1.4855072463768115, "no_speech_prob": 4.1332361433887854e-05}, {"id": 229, "seek": 84800, "start": 872.0, "end": 875.0, "text": " Which is the change in why.", "tokens": [3013, 307, 264, 1319, 294, 983, 13], "temperature": 0.0, "avg_logprob": -0.1784394836425781, "compression_ratio": 1.4855072463768115, "no_speech_prob": 4.1332361433887854e-05}, {"id": 230, "seek": 87500, "start": 875.0, "end": 878.0, "text": " Over the change in X.", "tokens": [4886, 264, 1319, 294, 1783, 13], "temperature": 0.0, "avg_logprob": -0.3089734093617585, "compression_ratio": 1.2688172043010753, "no_speech_prob": 8.749403787078336e-05}, {"id": 231, "seek": 87500, "start": 878.0, "end": 883.0, "text": " So if this is.", "tokens": [407, 498, 341, 307, 13], "temperature": 0.0, "avg_logprob": -0.3089734093617585, "compression_ratio": 1.2688172043010753, "no_speech_prob": 8.749403787078336e-05}, {"id": 232, "seek": 87500, "start": 883.0, "end": 886.0, "text": " If this is.", "tokens": [759, 341, 307, 13], "temperature": 0.0, "avg_logprob": -0.3089734093617585, "compression_ratio": 1.2688172043010753, "no_speech_prob": 8.749403787078336e-05}, {"id": 233, "seek": 87500, "start": 886.0, "end": 888.0, "text": " X two.", "tokens": [1783, 732, 13], "temperature": 0.0, "avg_logprob": -0.3089734093617585, "compression_ratio": 1.2688172043010753, "no_speech_prob": 8.749403787078336e-05}, {"id": 234, "seek": 87500, "start": 888.0, "end": 891.0, "text": " On a white.", "tokens": [1282, 257, 2418, 13], "temperature": 0.0, "avg_logprob": -0.3089734093617585, "compression_ratio": 1.2688172043010753, "no_speech_prob": 8.749403787078336e-05}, {"id": 235, "seek": 87500, "start": 891.0, "end": 894.0, "text": " And this is X one.", "tokens": [400, 341, 307, 1783, 472, 13], "temperature": 0.0, "avg_logprob": -0.3089734093617585, "compression_ratio": 1.2688172043010753, "no_speech_prob": 8.749403787078336e-05}, {"id": 236, "seek": 87500, "start": 894.0, "end": 897.0, "text": " On a Y one.", "tokens": [1282, 257, 398, 472, 13], "temperature": 0.0, "avg_logprob": -0.3089734093617585, "compression_ratio": 1.2688172043010753, "no_speech_prob": 8.749403787078336e-05}, {"id": 237, "seek": 87500, "start": 897.0, "end": 899.0, "text": " Then the slope.", "tokens": [1396, 264, 13525, 13], "temperature": 0.0, "avg_logprob": -0.3089734093617585, "compression_ratio": 1.2688172043010753, "no_speech_prob": 8.749403787078336e-05}, {"id": 238, "seek": 87500, "start": 899.0, "end": 901.0, "text": " Is.", "tokens": [1119, 13], "temperature": 0.0, "avg_logprob": -0.3089734093617585, "compression_ratio": 1.2688172043010753, "no_speech_prob": 8.749403787078336e-05}, {"id": 239, "seek": 90100, "start": 901.0, "end": 906.0, "text": " Y two.", "tokens": [398, 732, 13], "temperature": 0.0, "avg_logprob": -0.3880167568431181, "compression_ratio": 1.306930693069307, "no_speech_prob": 4.539610381470993e-05}, {"id": 240, "seek": 90100, "start": 906.0, "end": 909.0, "text": " Is rise over run I said.", "tokens": [1119, 6272, 670, 1190, 286, 848, 13], "temperature": 0.0, "avg_logprob": -0.3880167568431181, "compression_ratio": 1.306930693069307, "no_speech_prob": 4.539610381470993e-05}, {"id": 241, "seek": 90100, "start": 909.0, "end": 911.0, "text": " Is.", "tokens": [1119, 13], "temperature": 0.0, "avg_logprob": -0.3880167568431181, "compression_ratio": 1.306930693069307, "no_speech_prob": 4.539610381470993e-05}, {"id": 242, "seek": 90100, "start": 911.0, "end": 913.0, "text": " Y two.", "tokens": [398, 732, 13], "temperature": 0.0, "avg_logprob": -0.3880167568431181, "compression_ratio": 1.306930693069307, "no_speech_prob": 4.539610381470993e-05}, {"id": 243, "seek": 90100, "start": 913.0, "end": 915.0, "text": " Minus Y.", "tokens": [2829, 301, 398, 13], "temperature": 0.0, "avg_logprob": -0.3880167568431181, "compression_ratio": 1.306930693069307, "no_speech_prob": 4.539610381470993e-05}, {"id": 244, "seek": 90100, "start": 915.0, "end": 917.0, "text": " One.", "tokens": [1485, 13], "temperature": 0.0, "avg_logprob": -0.3880167568431181, "compression_ratio": 1.306930693069307, "no_speech_prob": 4.539610381470993e-05}, {"id": 245, "seek": 90100, "start": 917.0, "end": 919.0, "text": " Over.", "tokens": [4886, 13], "temperature": 0.0, "avg_logprob": -0.3880167568431181, "compression_ratio": 1.306930693069307, "no_speech_prob": 4.539610381470993e-05}, {"id": 246, "seek": 90100, "start": 919.0, "end": 921.0, "text": " X two.", "tokens": [1783, 732, 13], "temperature": 0.0, "avg_logprob": -0.3880167568431181, "compression_ratio": 1.306930693069307, "no_speech_prob": 4.539610381470993e-05}, {"id": 247, "seek": 90100, "start": 921.0, "end": 923.0, "text": " Minus X one.", "tokens": [2829, 301, 1783, 472, 13], "temperature": 0.0, "avg_logprob": -0.3880167568431181, "compression_ratio": 1.306930693069307, "no_speech_prob": 4.539610381470993e-05}, {"id": 248, "seek": 90100, "start": 923.0, "end": 925.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.3880167568431181, "compression_ratio": 1.306930693069307, "no_speech_prob": 4.539610381470993e-05}, {"id": 249, "seek": 90100, "start": 925.0, "end": 928.0, "text": " And so what you could do is you could pick.", "tokens": [400, 370, 437, 291, 727, 360, 307, 291, 727, 1888, 13], "temperature": 0.0, "avg_logprob": -0.3880167568431181, "compression_ratio": 1.306930693069307, "no_speech_prob": 4.539610381470993e-05}, {"id": 250, "seek": 92800, "start": 928.0, "end": 931.0, "text": " You know like so this is the point we're going to pick.", "tokens": [509, 458, 411, 370, 341, 307, 264, 935, 321, 434, 516, 281, 1888, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 251, "seek": 92800, "start": 931.0, "end": 933.0, "text": " And then you could just add.", "tokens": [400, 550, 291, 727, 445, 909, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 252, "seek": 92800, "start": 933.0, "end": 936.0, "text": " A little bit to X like point zero one X.", "tokens": [316, 707, 857, 281, 1783, 411, 935, 4018, 472, 1783, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 253, "seek": 92800, "start": 936.0, "end": 938.0, "text": " And this is the point here.", "tokens": [400, 341, 307, 264, 935, 510, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 254, "seek": 92800, "start": 938.0, "end": 941.0, "text": " So in this case.", "tokens": [407, 294, 341, 1389, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 255, "seek": 92800, "start": 941.0, "end": 944.0, "text": " You could actually write.", "tokens": [509, 727, 767, 2464, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 256, "seek": 92800, "start": 944.0, "end": 946.0, "text": " Why to.", "tokens": [1545, 281, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 257, "seek": 92800, "start": 946.0, "end": 947.0, "text": " And in a different way.", "tokens": [400, 294, 257, 819, 636, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 258, "seek": 92800, "start": 947.0, "end": 948.0, "text": " So if you've got.", "tokens": [407, 498, 291, 600, 658, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 259, "seek": 92800, "start": 948.0, "end": 949.0, "text": " So this is like.", "tokens": [407, 341, 307, 411, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 260, "seek": 92800, "start": 949.0, "end": 950.0, "text": " This is.", "tokens": [639, 307, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 261, "seek": 92800, "start": 950.0, "end": 951.0, "text": " This is some function of X.", "tokens": [639, 307, 512, 2445, 295, 1783, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 262, "seek": 92800, "start": 951.0, "end": 952.0, "text": " Like X squared.", "tokens": [1743, 1783, 8889, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 263, "seek": 92800, "start": 952.0, "end": 953.0, "text": " This is X.", "tokens": [639, 307, 1783, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 264, "seek": 92800, "start": 953.0, "end": 955.0, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 265, "seek": 92800, "start": 955.0, "end": 957.0, "text": " So.", "tokens": [407, 13], "temperature": 0.0, "avg_logprob": -0.15302783203125, "compression_ratio": 1.6568627450980393, "no_speech_prob": 1.723127206787467e-05}, {"id": 266, "seek": 95700, "start": 957.0, "end": 962.0, "text": " You could change.", "tokens": [509, 727, 1319, 13], "temperature": 0.0, "avg_logprob": -0.18148383288316325, "compression_ratio": 1.441860465116279, "no_speech_prob": 1.568891093484126e-05}, {"id": 267, "seek": 95700, "start": 962.0, "end": 964.0, "text": " Why to to instead be.", "tokens": [1545, 281, 281, 2602, 312, 13], "temperature": 0.0, "avg_logprob": -0.18148383288316325, "compression_ratio": 1.441860465116279, "no_speech_prob": 1.568891093484126e-05}, {"id": 268, "seek": 95700, "start": 964.0, "end": 967.0, "text": " Function of.", "tokens": [11166, 882, 295, 13], "temperature": 0.0, "avg_logprob": -0.18148383288316325, "compression_ratio": 1.441860465116279, "no_speech_prob": 1.568891093484126e-05}, {"id": 269, "seek": 95700, "start": 967.0, "end": 969.0, "text": " X.", "tokens": [1783, 13], "temperature": 0.0, "avg_logprob": -0.18148383288316325, "compression_ratio": 1.441860465116279, "no_speech_prob": 1.568891093484126e-05}, {"id": 270, "seek": 95700, "start": 969.0, "end": 971.0, "text": " Plus.", "tokens": [7721, 13], "temperature": 0.0, "avg_logprob": -0.18148383288316325, "compression_ratio": 1.441860465116279, "no_speech_prob": 1.568891093484126e-05}, {"id": 271, "seek": 95700, "start": 971.0, "end": 975.0, "text": " A little bit like zero point zero one.", "tokens": [316, 707, 857, 411, 4018, 935, 4018, 472, 13], "temperature": 0.0, "avg_logprob": -0.18148383288316325, "compression_ratio": 1.441860465116279, "no_speech_prob": 1.568891093484126e-05}, {"id": 272, "seek": 95700, "start": 975.0, "end": 978.0, "text": " And why one would be.", "tokens": [400, 983, 472, 576, 312, 13], "temperature": 0.0, "avg_logprob": -0.18148383288316325, "compression_ratio": 1.441860465116279, "no_speech_prob": 1.568891093484126e-05}, {"id": 273, "seek": 95700, "start": 978.0, "end": 980.0, "text": " Function of.", "tokens": [11166, 882, 295, 13], "temperature": 0.0, "avg_logprob": -0.18148383288316325, "compression_ratio": 1.441860465116279, "no_speech_prob": 1.568891093484126e-05}, {"id": 274, "seek": 95700, "start": 980.0, "end": 983.0, "text": " Would be.", "tokens": [6068, 312, 13], "temperature": 0.0, "avg_logprob": -0.18148383288316325, "compression_ratio": 1.441860465116279, "no_speech_prob": 1.568891093484126e-05}, {"id": 275, "seek": 95700, "start": 983.0, "end": 986.0, "text": " The function of X at the starting point.", "tokens": [440, 2445, 295, 1783, 412, 264, 2891, 935, 13], "temperature": 0.0, "avg_logprob": -0.18148383288316325, "compression_ratio": 1.441860465116279, "no_speech_prob": 1.568891093484126e-05}, {"id": 276, "seek": 98600, "start": 986.0, "end": 989.0, "text": " And then you divide by the amount that you moved X by.", "tokens": [400, 550, 291, 9845, 538, 264, 2372, 300, 291, 4259, 1783, 538, 13], "temperature": 0.0, "avg_logprob": -0.10589696865270634, "compression_ratio": 1.5275229357798166, "no_speech_prob": 1.2805232472601347e-05}, {"id": 277, "seek": 98600, "start": 989.0, "end": 993.0, "text": " Which in this case would be zero point zero one.", "tokens": [3013, 294, 341, 1389, 576, 312, 4018, 935, 4018, 472, 13], "temperature": 0.0, "avg_logprob": -0.10589696865270634, "compression_ratio": 1.5275229357798166, "no_speech_prob": 1.2805232472601347e-05}, {"id": 278, "seek": 98600, "start": 993.0, "end": 996.0, "text": " That would be another way of doing the change in Y over change in X.", "tokens": [663, 576, 312, 1071, 636, 295, 884, 264, 1319, 294, 398, 670, 1319, 294, 1783, 13], "temperature": 0.0, "avg_logprob": -0.10589696865270634, "compression_ratio": 1.5275229357798166, "no_speech_prob": 1.2805232472601347e-05}, {"id": 279, "seek": 98600, "start": 996.0, "end": 1000.0, "text": " Does that make sense so far?", "tokens": [4402, 300, 652, 2020, 370, 1400, 30], "temperature": 0.0, "avg_logprob": -0.10589696865270634, "compression_ratio": 1.5275229357798166, "no_speech_prob": 1.2805232472601347e-05}, {"id": 280, "seek": 98600, "start": 1000.0, "end": 1002.0, "text": " And so this is like.", "tokens": [400, 370, 341, 307, 411, 13], "temperature": 0.0, "avg_logprob": -0.10589696865270634, "compression_ratio": 1.5275229357798166, "no_speech_prob": 1.2805232472601347e-05}, {"id": 281, "seek": 98600, "start": 1002.0, "end": 1004.0, "text": " An approximation of the derivative.", "tokens": [1107, 28023, 295, 264, 13760, 13], "temperature": 0.0, "avg_logprob": -0.10589696865270634, "compression_ratio": 1.5275229357798166, "no_speech_prob": 1.2805232472601347e-05}, {"id": 282, "seek": 98600, "start": 1004.0, "end": 1006.0, "text": " It's the slope at a point.", "tokens": [467, 311, 264, 13525, 412, 257, 935, 13], "temperature": 0.0, "avg_logprob": -0.10589696865270634, "compression_ratio": 1.5275229357798166, "no_speech_prob": 1.2805232472601347e-05}, {"id": 283, "seek": 98600, "start": 1006.0, "end": 1011.0, "text": " And I thought we could try and do this.", "tokens": [400, 286, 1194, 321, 727, 853, 293, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.10589696865270634, "compression_ratio": 1.5275229357798166, "no_speech_prob": 1.2805232472601347e-05}, {"id": 284, "seek": 98600, "start": 1011.0, "end": 1015.0, "text": " In APL.", "tokens": [682, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.10589696865270634, "compression_ratio": 1.5275229357798166, "no_speech_prob": 1.2805232472601347e-05}, {"id": 285, "seek": 101500, "start": 1015.0, "end": 1018.0, "text": " So if we picked a function.", "tokens": [407, 498, 321, 6183, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.0913555902593276, "compression_ratio": 1.5214285714285714, "no_speech_prob": 4.683621591539122e-05}, {"id": 286, "seek": 101500, "start": 1018.0, "end": 1020.0, "text": " I'll show you something interesting.", "tokens": [286, 603, 855, 291, 746, 1880, 13], "temperature": 0.0, "avg_logprob": -0.0913555902593276, "compression_ratio": 1.5214285714285714, "no_speech_prob": 4.683621591539122e-05}, {"id": 287, "seek": 101500, "start": 1020.0, "end": 1022.0, "text": " You can do a function a couple of ways.", "tokens": [509, 393, 360, 257, 2445, 257, 1916, 295, 2098, 13], "temperature": 0.0, "avg_logprob": -0.0913555902593276, "compression_ratio": 1.5214285714285714, "no_speech_prob": 4.683621591539122e-05}, {"id": 288, "seek": 101500, "start": 1022.0, "end": 1031.0, "text": " I think we've already learnt.", "tokens": [286, 519, 321, 600, 1217, 18991, 13], "temperature": 0.0, "avg_logprob": -0.0913555902593276, "compression_ratio": 1.5214285714285714, "no_speech_prob": 4.683621591539122e-05}, {"id": 289, "seek": 101500, "start": 1031.0, "end": 1034.0, "text": " That you can do a function like this.", "tokens": [663, 291, 393, 360, 257, 2445, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.0913555902593276, "compression_ratio": 1.5214285714285714, "no_speech_prob": 4.683621591539122e-05}, {"id": 290, "seek": 101500, "start": 1034.0, "end": 1039.0, "text": " If you want to do Y squared.", "tokens": [759, 291, 528, 281, 360, 398, 8889, 13], "temperature": 0.0, "avg_logprob": -0.0913555902593276, "compression_ratio": 1.5214285714285714, "no_speech_prob": 4.683621591539122e-05}, {"id": 291, "seek": 101500, "start": 1039.0, "end": 1043.0, "text": " You can do.", "tokens": [509, 393, 360, 13], "temperature": 0.0, "avg_logprob": -0.0913555902593276, "compression_ratio": 1.5214285714285714, "no_speech_prob": 4.683621591539122e-05}, {"id": 292, "seek": 104300, "start": 1043.0, "end": 1046.0, "text": " Omega.", "tokens": [27645, 13], "temperature": 0.0, "avg_logprob": -0.15790674209594727, "compression_ratio": 1.1869158878504673, "no_speech_prob": 9.817742466111667e-06}, {"id": 293, "seek": 104300, "start": 1046.0, "end": 1052.0, "text": " Square.", "tokens": [16463, 13], "temperature": 0.0, "avg_logprob": -0.15790674209594727, "compression_ratio": 1.1869158878504673, "no_speech_prob": 9.817742466111667e-06}, {"id": 294, "seek": 104300, "start": 1052.0, "end": 1054.0, "text": " That's one way to do it.", "tokens": [663, 311, 472, 636, 281, 360, 309, 13], "temperature": 0.0, "avg_logprob": -0.15790674209594727, "compression_ratio": 1.1869158878504673, "no_speech_prob": 9.817742466111667e-06}, {"id": 295, "seek": 104300, "start": 1054.0, "end": 1056.0, "text": " But.", "tokens": [583, 13], "temperature": 0.0, "avg_logprob": -0.15790674209594727, "compression_ratio": 1.1869158878504673, "no_speech_prob": 9.817742466111667e-06}, {"id": 296, "seek": 104300, "start": 1056.0, "end": 1059.0, "text": " You could also just do this.", "tokens": [509, 727, 611, 445, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.15790674209594727, "compression_ratio": 1.1869158878504673, "no_speech_prob": 9.817742466111667e-06}, {"id": 297, "seek": 104300, "start": 1059.0, "end": 1065.0, "text": " Right. And that means that.", "tokens": [1779, 13, 400, 300, 1355, 300, 13], "temperature": 0.0, "avg_logprob": -0.15790674209594727, "compression_ratio": 1.1869158878504673, "no_speech_prob": 9.817742466111667e-06}, {"id": 298, "seek": 104300, "start": 1065.0, "end": 1067.0, "text": " That just means power of.", "tokens": [663, 445, 1355, 1347, 295, 13], "temperature": 0.0, "avg_logprob": -0.15790674209594727, "compression_ratio": 1.1869158878504673, "no_speech_prob": 9.817742466111667e-06}, {"id": 299, "seek": 106700, "start": 1067.0, "end": 1075.0, "text": " So you could do something like this.", "tokens": [407, 291, 727, 360, 746, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.14283600791555937, "compression_ratio": 1.4375, "no_speech_prob": 1.6440117178717628e-05}, {"id": 300, "seek": 106700, "start": 1075.0, "end": 1078.0, "text": " If that makes sense.", "tokens": [759, 300, 1669, 2020, 13], "temperature": 0.0, "avg_logprob": -0.14283600791555937, "compression_ratio": 1.4375, "no_speech_prob": 1.6440117178717628e-05}, {"id": 301, "seek": 106700, "start": 1078.0, "end": 1082.0, "text": " So then actually what we might do first.", "tokens": [407, 550, 767, 437, 321, 1062, 360, 700, 13], "temperature": 0.0, "avg_logprob": -0.14283600791555937, "compression_ratio": 1.4375, "no_speech_prob": 1.6440117178717628e-05}, {"id": 302, "seek": 106700, "start": 1082.0, "end": 1086.0, "text": " Is a nice operator.", "tokens": [1119, 257, 1481, 12973, 13], "temperature": 0.0, "avg_logprob": -0.14283600791555937, "compression_ratio": 1.4375, "no_speech_prob": 1.6440117178717628e-05}, {"id": 303, "seek": 106700, "start": 1086.0, "end": 1089.0, "text": " So it just returns the power operator.", "tokens": [407, 309, 445, 11247, 264, 1347, 12973, 13], "temperature": 0.0, "avg_logprob": -0.14283600791555937, "compression_ratio": 1.4375, "no_speech_prob": 1.6440117178717628e-05}, {"id": 304, "seek": 106700, "start": 1089.0, "end": 1094.0, "text": " Yes, this is saying that F is the power function.", "tokens": [1079, 11, 341, 307, 1566, 300, 479, 307, 264, 1347, 2445, 13], "temperature": 0.0, "avg_logprob": -0.14283600791555937, "compression_ratio": 1.4375, "no_speech_prob": 1.6440117178717628e-05}, {"id": 305, "seek": 109400, "start": 1094.0, "end": 1097.0, "text": " And that might not sound very interesting yet.", "tokens": [400, 300, 1062, 406, 1626, 588, 1880, 1939, 13], "temperature": 0.0, "avg_logprob": -0.10735674465403837, "compression_ratio": 1.521472392638037, "no_speech_prob": 1.1300462574581616e-05}, {"id": 306, "seek": 109400, "start": 1097.0, "end": 1100.0, "text": " But you could make it a bit more interesting by saying F is.", "tokens": [583, 291, 727, 652, 309, 257, 857, 544, 1880, 538, 1566, 479, 307, 13], "temperature": 0.0, "avg_logprob": -0.10735674465403837, "compression_ratio": 1.521472392638037, "no_speech_prob": 1.1300462574581616e-05}, {"id": 307, "seek": 109400, "start": 1100.0, "end": 1104.0, "text": " A combination of a function and an operator.", "tokens": [316, 6562, 295, 257, 2445, 293, 364, 12973, 13], "temperature": 0.0, "avg_logprob": -0.10735674465403837, "compression_ratio": 1.521472392638037, "no_speech_prob": 1.1300462574581616e-05}, {"id": 308, "seek": 109400, "start": 1104.0, "end": 1109.0, "text": " And we could give that a more sensible name.", "tokens": [400, 321, 727, 976, 300, 257, 544, 25380, 1315, 13], "temperature": 0.0, "avg_logprob": -0.10735674465403837, "compression_ratio": 1.521472392638037, "no_speech_prob": 1.1300462574581616e-05}, {"id": 309, "seek": 109400, "start": 1109.0, "end": 1114.0, "text": " For example.", "tokens": [1171, 1365, 13], "temperature": 0.0, "avg_logprob": -0.10735674465403837, "compression_ratio": 1.521472392638037, "no_speech_prob": 1.1300462574581616e-05}, {"id": 310, "seek": 109400, "start": 1114.0, "end": 1119.0, "text": " And that's exactly the same as doing.", "tokens": [400, 300, 311, 2293, 264, 912, 382, 884, 13], "temperature": 0.0, "avg_logprob": -0.10735674465403837, "compression_ratio": 1.521472392638037, "no_speech_prob": 1.1300462574581616e-05}, {"id": 311, "seek": 111900, "start": 1119.0, "end": 1124.0, "text": " It's exactly the same as doing that.", "tokens": [467, 311, 2293, 264, 912, 382, 884, 300, 13], "temperature": 0.0, "avg_logprob": -0.15971619742257254, "compression_ratio": 1.168421052631579, "no_speech_prob": 3.119896791758947e-05}, {"id": 312, "seek": 111900, "start": 1124.0, "end": 1128.0, "text": " So here's an example of something we could do.", "tokens": [407, 510, 311, 364, 1365, 295, 746, 321, 727, 360, 13], "temperature": 0.0, "avg_logprob": -0.15971619742257254, "compression_ratio": 1.168421052631579, "no_speech_prob": 3.119896791758947e-05}, {"id": 313, "seek": 111900, "start": 1128.0, "end": 1142.0, "text": " Let's learn a new operator.", "tokens": [961, 311, 1466, 257, 777, 12973, 13], "temperature": 0.0, "avg_logprob": -0.15971619742257254, "compression_ratio": 1.168421052631579, "no_speech_prob": 3.119896791758947e-05}, {"id": 314, "seek": 114200, "start": 1142.0, "end": 1150.0, "text": " Which is called.", "tokens": [3013, 307, 1219, 13], "temperature": 0.0, "avg_logprob": -0.14331557902883976, "compression_ratio": 1.3125, "no_speech_prob": 2.2827109205536544e-05}, {"id": 315, "seek": 114200, "start": 1150.0, "end": 1159.0, "text": " Bind, which is J.", "tokens": [363, 471, 11, 597, 307, 508, 13], "temperature": 0.0, "avg_logprob": -0.14331557902883976, "compression_ratio": 1.3125, "no_speech_prob": 2.2827109205536544e-05}, {"id": 316, "seek": 114200, "start": 1159.0, "end": 1164.0, "text": " So we can get the help. Oh, that didn't work.", "tokens": [407, 321, 393, 483, 264, 854, 13, 876, 11, 300, 994, 380, 589, 13], "temperature": 0.0, "avg_logprob": -0.14331557902883976, "compression_ratio": 1.3125, "no_speech_prob": 2.2827109205536544e-05}, {"id": 317, "seek": 114200, "start": 1164.0, "end": 1170.0, "text": " So we can get the help for it by typing help.", "tokens": [407, 321, 393, 483, 264, 854, 337, 309, 538, 18444, 854, 13], "temperature": 0.0, "avg_logprob": -0.14331557902883976, "compression_ratio": 1.3125, "no_speech_prob": 2.2827109205536544e-05}, {"id": 318, "seek": 117000, "start": 1170.0, "end": 1172.0, "text": " That.", "tokens": [663, 13], "temperature": 0.0, "avg_logprob": -0.27534164081920276, "compression_ratio": 1.5621621621621622, "no_speech_prob": 2.4678891350049525e-05}, {"id": 319, "seek": 117000, "start": 1172.0, "end": 1177.0, "text": " Okay, so this thing, this symbol, you'll hear it a lot. It's called Jot.", "tokens": [1033, 11, 370, 341, 551, 11, 341, 5986, 11, 291, 603, 1568, 309, 257, 688, 13, 467, 311, 1219, 508, 310, 13], "temperature": 0.0, "avg_logprob": -0.27534164081920276, "compression_ratio": 1.5621621621621622, "no_speech_prob": 2.4678891350049525e-05}, {"id": 320, "seek": 117000, "start": 1177.0, "end": 1181.0, "text": " And it's a. Oh, this is finished.", "tokens": [400, 309, 311, 257, 13, 876, 11, 341, 307, 4335, 13], "temperature": 0.0, "avg_logprob": -0.27534164081920276, "compression_ratio": 1.5621621621621622, "no_speech_prob": 2.4678891350049525e-05}, {"id": 321, "seek": 117000, "start": 1181.0, "end": 1187.0, "text": " There we go. So, Professor, there was a cat is too hard, but a cat professor is fine.", "tokens": [821, 321, 352, 13, 407, 11, 8419, 11, 456, 390, 257, 3857, 307, 886, 1152, 11, 457, 257, 3857, 8304, 307, 2489, 13], "temperature": 0.0, "avg_logprob": -0.27534164081920276, "compression_ratio": 1.5621621621621622, "no_speech_prob": 2.4678891350049525e-05}, {"id": 322, "seek": 117000, "start": 1187.0, "end": 1190.0, "text": " Not sure what happened before.", "tokens": [1726, 988, 437, 2011, 949, 13], "temperature": 0.0, "avg_logprob": -0.27534164081920276, "compression_ratio": 1.5621621621621622, "no_speech_prob": 2.4678891350049525e-05}, {"id": 323, "seek": 117000, "start": 1190.0, "end": 1195.0, "text": " But clearly professors pointed things. This cat professors.", "tokens": [583, 4448, 15924, 10932, 721, 13, 639, 3857, 15924, 13], "temperature": 0.0, "avg_logprob": -0.27534164081920276, "compression_ratio": 1.5621621621621622, "no_speech_prob": 2.4678891350049525e-05}, {"id": 324, "seek": 119500, "start": 1195.0, "end": 1200.0, "text": " Just faking it because there's a real. In fact, most of the cat professors.", "tokens": [1449, 283, 2456, 309, 570, 456, 311, 257, 957, 13, 682, 1186, 11, 881, 295, 264, 3857, 15924, 13], "temperature": 0.0, "avg_logprob": -0.16027526662807273, "compression_ratio": 1.5911111111111111, "no_speech_prob": 9.66582683759043e-06}, {"id": 325, "seek": 119500, "start": 1200.0, "end": 1203.0, "text": " Some of them are faking it.", "tokens": [2188, 295, 552, 366, 283, 2456, 309, 13], "temperature": 0.0, "avg_logprob": -0.16027526662807273, "compression_ratio": 1.5911111111111111, "no_speech_prob": 9.66582683759043e-06}, {"id": 326, "seek": 119500, "start": 1203.0, "end": 1210.0, "text": " But yeah, professors point at whiteboards with chalk or sticks, apparently.", "tokens": [583, 1338, 11, 15924, 935, 412, 2418, 17228, 365, 28660, 420, 12518, 11, 7970, 13], "temperature": 0.0, "avg_logprob": -0.16027526662807273, "compression_ratio": 1.5911111111111111, "no_speech_prob": 9.66582683759043e-06}, {"id": 327, "seek": 119500, "start": 1210.0, "end": 1216.0, "text": " It's not obvious it's deep learning, but it certainly looks very mathy.", "tokens": [467, 311, 406, 6322, 309, 311, 2452, 2539, 11, 457, 309, 3297, 1542, 588, 5221, 88, 13], "temperature": 0.0, "avg_logprob": -0.16027526662807273, "compression_ratio": 1.5911111111111111, "no_speech_prob": 9.66582683759043e-06}, {"id": 328, "seek": 119500, "start": 1216.0, "end": 1224.0, "text": " Yeah, it's not good. Well, yeah, that one has like some sort of network or something. It looks like. Yeah.", "tokens": [865, 11, 309, 311, 406, 665, 13, 1042, 11, 1338, 11, 300, 472, 575, 411, 512, 1333, 295, 3209, 420, 746, 13, 467, 1542, 411, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.16027526662807273, "compression_ratio": 1.5911111111111111, "no_speech_prob": 9.66582683759043e-06}, {"id": 329, "seek": 122400, "start": 1224.0, "end": 1226.0, "text": " Interesting.", "tokens": [14711, 13], "temperature": 0.0, "avg_logprob": -0.17919009664784308, "compression_ratio": 1.1607142857142858, "no_speech_prob": 1.1840577826660592e-05}, {"id": 330, "seek": 122400, "start": 1226.0, "end": 1230.0, "text": " The first one is maybe looking at some activation function.", "tokens": [440, 700, 472, 307, 1310, 1237, 412, 512, 24433, 2445, 13], "temperature": 0.0, "avg_logprob": -0.17919009664784308, "compression_ratio": 1.1607142857142858, "no_speech_prob": 1.1840577826660592e-05}, {"id": 331, "seek": 122400, "start": 1230.0, "end": 1235.0, "text": " Yeah, could well be.", "tokens": [865, 11, 727, 731, 312, 13], "temperature": 0.0, "avg_logprob": -0.17919009664784308, "compression_ratio": 1.1607142857142858, "no_speech_prob": 1.1840577826660592e-05}, {"id": 332, "seek": 122400, "start": 1235.0, "end": 1236.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.17919009664784308, "compression_ratio": 1.1607142857142858, "no_speech_prob": 1.1840577826660592e-05}, {"id": 333, "seek": 122400, "start": 1236.0, "end": 1240.0, "text": " So, Jot.", "tokens": [407, 11, 508, 310, 13], "temperature": 0.0, "avg_logprob": -0.17919009664784308, "compression_ratio": 1.1607142857142858, "no_speech_prob": 1.1840577826660592e-05}, {"id": 334, "seek": 122400, "start": 1240.0, "end": 1247.0, "text": " Is a dyadic operator.", "tokens": [1119, 257, 14584, 43341, 12973, 13], "temperature": 0.0, "avg_logprob": -0.17919009664784308, "compression_ratio": 1.1607142857142858, "no_speech_prob": 1.1840577826660592e-05}, {"id": 335, "seek": 124700, "start": 1247.0, "end": 1258.0, "text": " So that means that there won't be a monadic.", "tokens": [407, 300, 1355, 300, 456, 1582, 380, 312, 257, 1108, 43341, 13], "temperature": 0.0, "avg_logprob": -0.12615815330954158, "compression_ratio": 1.1818181818181819, "no_speech_prob": 5.626340566777799e-07}, {"id": 336, "seek": 124700, "start": 1258.0, "end": 1266.0, "text": " And it can be a couple of things. It can be beside or bind.", "tokens": [400, 309, 393, 312, 257, 1916, 295, 721, 13, 467, 393, 312, 15726, 420, 14786, 13], "temperature": 0.0, "avg_logprob": -0.12615815330954158, "compression_ratio": 1.1818181818181819, "no_speech_prob": 5.626340566777799e-07}, {"id": 337, "seek": 126600, "start": 1266.0, "end": 1280.0, "text": " Depending on whether you pass it functions or arrays.", "tokens": [22539, 322, 1968, 291, 1320, 309, 6828, 420, 41011, 13], "temperature": 0.0, "avg_logprob": -0.23630879322687784, "compression_ratio": 1.0253164556962024, "no_speech_prob": 2.3185921236290596e-05}, {"id": 338, "seek": 126600, "start": 1280.0, "end": 1283.0, "text": " Now.", "tokens": [823, 13], "temperature": 0.0, "avg_logprob": -0.23630879322687784, "compression_ratio": 1.0253164556962024, "no_speech_prob": 2.3185921236290596e-05}, {"id": 339, "seek": 126600, "start": 1283.0, "end": 1291.0, "text": " Or Python programmers.", "tokens": [1610, 15329, 41504, 13], "temperature": 0.0, "avg_logprob": -0.23630879322687784, "compression_ratio": 1.0253164556962024, "no_speech_prob": 2.3185921236290596e-05}, {"id": 340, "seek": 129100, "start": 1291.0, "end": 1302.0, "text": " It's called this Python equivalence.", "tokens": [467, 311, 1219, 341, 15329, 9052, 655, 13], "temperature": 0.0, "avg_logprob": -0.1418695120975889, "compression_ratio": 1.0875, "no_speech_prob": 1.3006261724513024e-05}, {"id": 341, "seek": 129100, "start": 1302.0, "end": 1308.0, "text": " Partial.", "tokens": [4100, 831, 13], "temperature": 0.0, "avg_logprob": -0.1418695120975889, "compression_ratio": 1.0875, "no_speech_prob": 1.3006261724513024e-05}, {"id": 342, "seek": 129100, "start": 1308.0, "end": 1313.0, "text": " It's the same as using partial in Python.", "tokens": [467, 311, 264, 912, 382, 1228, 14641, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.1418695120975889, "compression_ratio": 1.0875, "no_speech_prob": 1.3006261724513024e-05}, {"id": 343, "seek": 131300, "start": 1313.0, "end": 1325.0, "text": " So that's a kind of a functional programming idea. And most of the functional programming ideas in the standard library are in the func tools module.", "tokens": [407, 300, 311, 257, 733, 295, 257, 11745, 9410, 1558, 13, 400, 881, 295, 264, 11745, 9410, 3487, 294, 264, 3832, 6405, 366, 294, 264, 1019, 66, 3873, 10088, 13], "temperature": 0.0, "avg_logprob": -0.13970872630243716, "compression_ratio": 1.6342857142857143, "no_speech_prob": 2.5612066565372515e-06}, {"id": 344, "seek": 131300, "start": 1325.0, "end": 1336.0, "text": " That's where you can import partial from. And here's what partial does. You define something.", "tokens": [663, 311, 689, 291, 393, 974, 14641, 490, 13, 400, 510, 311, 437, 14641, 775, 13, 509, 6964, 746, 13], "temperature": 0.0, "avg_logprob": -0.13970872630243716, "compression_ratio": 1.6342857142857143, "no_speech_prob": 2.5612066565372515e-06}, {"id": 345, "seek": 131300, "start": 1336.0, "end": 1341.0, "text": " And so let's say we could call this power.", "tokens": [400, 370, 718, 311, 584, 321, 727, 818, 341, 1347, 13], "temperature": 0.0, "avg_logprob": -0.13970872630243716, "compression_ratio": 1.6342857142857143, "no_speech_prob": 2.5612066565372515e-06}, {"id": 346, "seek": 134100, "start": 1341.0, "end": 1346.0, "text": " Which does that.", "tokens": [3013, 775, 300, 13], "temperature": 0.0, "avg_logprob": -0.15400280450519763, "compression_ratio": 1.2285714285714286, "no_speech_prob": 2.9479876957339e-06}, {"id": 347, "seek": 134100, "start": 1346.0, "end": 1348.0, "text": " Three squared.", "tokens": [6244, 8889, 13], "temperature": 0.0, "avg_logprob": -0.15400280450519763, "compression_ratio": 1.2285714285714286, "no_speech_prob": 2.9479876957339e-06}, {"id": 348, "seek": 134100, "start": 1348.0, "end": 1354.0, "text": " Okay. So what if we wanted to now define squared using power.", "tokens": [1033, 13, 407, 437, 498, 321, 1415, 281, 586, 6964, 8889, 1228, 1347, 13], "temperature": 0.0, "avg_logprob": -0.15400280450519763, "compression_ratio": 1.2285714285714286, "no_speech_prob": 2.9479876957339e-06}, {"id": 349, "seek": 134100, "start": 1354.0, "end": 1360.0, "text": " We could say square equals partial.", "tokens": [492, 727, 584, 3732, 6915, 14641, 13], "temperature": 0.0, "avg_logprob": -0.15400280450519763, "compression_ratio": 1.2285714285714286, "no_speech_prob": 2.9479876957339e-06}, {"id": 350, "seek": 136000, "start": 1360.0, "end": 1372.0, "text": " Power comma y equals two. And what that says is so partial is a higher order function or an APL operator.", "tokens": [7086, 22117, 288, 6915, 732, 13, 400, 437, 300, 1619, 307, 370, 14641, 307, 257, 2946, 1668, 2445, 420, 364, 5372, 43, 12973, 13], "temperature": 0.0, "avg_logprob": -0.18126123481326634, "compression_ratio": 1.6348314606741574, "no_speech_prob": 2.090441512336838e-06}, {"id": 351, "seek": 136000, "start": 1372.0, "end": 1379.0, "text": " And the function it returns is something that's going to call this function passing in this parameter.", "tokens": [400, 264, 2445, 309, 11247, 307, 746, 300, 311, 516, 281, 818, 341, 2445, 8437, 294, 341, 13075, 13], "temperature": 0.0, "avg_logprob": -0.18126123481326634, "compression_ratio": 1.6348314606741574, "no_speech_prob": 2.090441512336838e-06}, {"id": 352, "seek": 136000, "start": 1379.0, "end": 1387.0, "text": " So it's going to always set y in the function to two. So I could then say squared.", "tokens": [407, 309, 311, 516, 281, 1009, 992, 288, 294, 264, 2445, 281, 732, 13, 407, 286, 727, 550, 584, 8889, 13], "temperature": 0.0, "avg_logprob": -0.18126123481326634, "compression_ratio": 1.6348314606741574, "no_speech_prob": 2.090441512336838e-06}, {"id": 353, "seek": 138700, "start": 1387.0, "end": 1391.0, "text": " Does that make sense?", "tokens": [4402, 300, 652, 2020, 30], "temperature": 0.0, "avg_logprob": -0.1466912031173706, "compression_ratio": 1.1789473684210525, "no_speech_prob": 2.902276037275442e-06}, {"id": 354, "seek": 138700, "start": 1391.0, "end": 1397.0, "text": " So bind does the same thing.", "tokens": [407, 14786, 775, 264, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.1466912031173706, "compression_ratio": 1.1789473684210525, "no_speech_prob": 2.902276037275442e-06}, {"id": 355, "seek": 138700, "start": 1397.0, "end": 1407.0, "text": " So we could say squared equals.", "tokens": [407, 321, 727, 584, 8889, 6915, 13], "temperature": 0.0, "avg_logprob": -0.1466912031173706, "compression_ratio": 1.1789473684210525, "no_speech_prob": 2.902276037275442e-06}, {"id": 356, "seek": 138700, "start": 1407.0, "end": 1411.0, "text": " And we can create a function.", "tokens": [400, 321, 393, 1884, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.1466912031173706, "compression_ratio": 1.1789473684210525, "no_speech_prob": 2.902276037275442e-06}, {"id": 357, "seek": 141100, "start": 1411.0, "end": 1418.0, "text": " So we're doing a power of function.", "tokens": [407, 321, 434, 884, 257, 1347, 295, 2445, 13], "temperature": 0.0, "avg_logprob": -0.10887970924377441, "compression_ratio": 1.3516483516483517, "no_speech_prob": 4.092850304004969e-06}, {"id": 358, "seek": 141100, "start": 1418.0, "end": 1427.0, "text": " We're doing to the power of two. So this is a function.", "tokens": [492, 434, 884, 281, 264, 1347, 295, 732, 13, 407, 341, 307, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.10887970924377441, "compression_ratio": 1.3516483516483517, "no_speech_prob": 4.092850304004969e-06}, {"id": 359, "seek": 141100, "start": 1427.0, "end": 1434.0, "text": " We don't say equals, obviously.", "tokens": [492, 500, 380, 584, 6915, 11, 2745, 13], "temperature": 0.0, "avg_logprob": -0.10887970924377441, "compression_ratio": 1.3516483516483517, "no_speech_prob": 4.092850304004969e-06}, {"id": 360, "seek": 143400, "start": 1434.0, "end": 1444.0, "text": " And so you can see here, this is this idea that we don't need to use curly brackets and omega and stuff.", "tokens": [400, 370, 291, 393, 536, 510, 11, 341, 307, 341, 1558, 300, 321, 500, 380, 643, 281, 764, 32066, 26179, 293, 10498, 293, 1507, 13], "temperature": 0.0, "avg_logprob": -0.0733637417832466, "compression_ratio": 1.5336538461538463, "no_speech_prob": 2.0580253021762474e-06}, {"id": 361, "seek": 143400, "start": 1444.0, "end": 1448.0, "text": " We can just define a function directly.", "tokens": [492, 393, 445, 6964, 257, 2445, 3838, 13], "temperature": 0.0, "avg_logprob": -0.0733637417832466, "compression_ratio": 1.5336538461538463, "no_speech_prob": 2.0580253021762474e-06}, {"id": 362, "seek": 143400, "start": 1448.0, "end": 1454.0, "text": " This is called point free programming in other languages.", "tokens": [639, 307, 1219, 935, 1737, 9410, 294, 661, 8650, 13], "temperature": 0.0, "avg_logprob": -0.0733637417832466, "compression_ratio": 1.5336538461538463, "no_speech_prob": 2.0580253021762474e-06}, {"id": 363, "seek": 143400, "start": 1454.0, "end": 1462.0, "text": " And it's basically where you write functions without specifically referring to the parameters they're going to take.", "tokens": [400, 309, 311, 1936, 689, 291, 2464, 6828, 1553, 4682, 13761, 281, 264, 9834, 436, 434, 516, 281, 747, 13], "temperature": 0.0, "avg_logprob": -0.0733637417832466, "compression_ratio": 1.5336538461538463, "no_speech_prob": 2.0580253021762474e-06}, {"id": 364, "seek": 146200, "start": 1462.0, "end": 1475.0, "text": " And in this case, because this is an operator that therefore returns a function, there's no need for round brackets and whatnot.", "tokens": [400, 294, 341, 1389, 11, 570, 341, 307, 364, 12973, 300, 4412, 11247, 257, 2445, 11, 456, 311, 572, 643, 337, 3098, 26179, 293, 25882, 13], "temperature": 0.0, "avg_logprob": -0.10266747841468224, "compression_ratio": 1.6987179487179487, "no_speech_prob": 2.282473178638611e-05}, {"id": 365, "seek": 146200, "start": 1475.0, "end": 1483.0, "text": " Does that make sense?", "tokens": [4402, 300, 652, 2020, 30], "temperature": 0.0, "avg_logprob": -0.10266747841468224, "compression_ratio": 1.6987179487179487, "no_speech_prob": 2.282473178638611e-05}, {"id": 366, "seek": 146200, "start": 1483.0, "end": 1485.0, "text": " An operator that returns a function.", "tokens": [1107, 12973, 300, 11247, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.10266747841468224, "compression_ratio": 1.6987179487179487, "no_speech_prob": 2.282473178638611e-05}, {"id": 367, "seek": 146200, "start": 1485.0, "end": 1490.0, "text": " All operators return a function. That's the definition of an operator in APL.", "tokens": [1057, 19077, 2736, 257, 2445, 13, 663, 311, 264, 7123, 295, 364, 12973, 294, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.10266747841468224, "compression_ratio": 1.6987179487179487, "no_speech_prob": 2.282473178638611e-05}, {"id": 368, "seek": 149000, "start": 1490.0, "end": 1494.0, "text": " Do you remember last time we did operators, we learned about backslash and slash.", "tokens": [1144, 291, 1604, 1036, 565, 321, 630, 19077, 11, 321, 3264, 466, 646, 10418, 1299, 293, 17330, 13], "temperature": 0.0, "avg_logprob": -0.2564529800415039, "compression_ratio": 1.7352941176470589, "no_speech_prob": 3.646859113359824e-05}, {"id": 369, "seek": 149000, "start": 1494.0, "end": 1502.0, "text": " Yes. And those are. So it's the B side or bind that's an operator. Right. So it's it's written.", "tokens": [1079, 13, 400, 729, 366, 13, 407, 309, 311, 264, 363, 1252, 420, 14786, 300, 311, 364, 12973, 13, 1779, 13, 407, 309, 311, 309, 311, 3720, 13], "temperature": 0.0, "avg_logprob": -0.2564529800415039, "compression_ratio": 1.7352941176470589, "no_speech_prob": 3.646859113359824e-05}, {"id": 370, "seek": 149000, "start": 1502.0, "end": 1510.0, "text": " It returns a function. OK. So it takes the argument on the left and on the right.", "tokens": [467, 11247, 257, 2445, 13, 2264, 13, 407, 309, 2516, 264, 6770, 322, 264, 1411, 293, 322, 264, 558, 13], "temperature": 0.0, "avg_logprob": -0.2564529800415039, "compression_ratio": 1.7352941176470589, "no_speech_prob": 3.646859113359824e-05}, {"id": 371, "seek": 149000, "start": 1510.0, "end": 1513.0, "text": " That's right. And return to operator.", "tokens": [663, 311, 558, 13, 400, 2736, 281, 12973, 13], "temperature": 0.0, "avg_logprob": -0.2564529800415039, "compression_ratio": 1.7352941176470589, "no_speech_prob": 3.646859113359824e-05}, {"id": 372, "seek": 149000, "start": 1513.0, "end": 1517.0, "text": " So it returns a function. This is the function to apply.", "tokens": [407, 309, 11247, 257, 2445, 13, 639, 307, 264, 2445, 281, 3079, 13], "temperature": 0.0, "avg_logprob": -0.2564529800415039, "compression_ratio": 1.7352941176470589, "no_speech_prob": 3.646859113359824e-05}, {"id": 373, "seek": 151700, "start": 1517.0, "end": 1521.0, "text": " And then this is the right hand side to bind.", "tokens": [400, 550, 341, 307, 264, 558, 1011, 1252, 281, 14786, 13], "temperature": 0.0, "avg_logprob": -0.1430492877960205, "compression_ratio": 1.6932515337423313, "no_speech_prob": 1.4284807548392564e-05}, {"id": 374, "seek": 151700, "start": 1521.0, "end": 1526.0, "text": " And it returns a function. And it's an operator. Therefore, it returns a function. Got it.", "tokens": [400, 309, 11247, 257, 2445, 13, 400, 309, 311, 364, 12973, 13, 7504, 11, 309, 11247, 257, 2445, 13, 5803, 309, 13], "temperature": 0.0, "avg_logprob": -0.1430492877960205, "compression_ratio": 1.6932515337423313, "no_speech_prob": 1.4284807548392564e-05}, {"id": 375, "seek": 151700, "start": 1526.0, "end": 1533.0, "text": " And you can do it the other way as well, which is you could say", "tokens": [400, 291, 393, 360, 309, 264, 661, 636, 382, 731, 11, 597, 307, 291, 727, 584], "temperature": 0.0, "avg_logprob": -0.1430492877960205, "compression_ratio": 1.6932515337423313, "no_speech_prob": 1.4284807548392564e-05}, {"id": 376, "seek": 151700, "start": 1533.0, "end": 1537.0, "text": " a power of two.", "tokens": [257, 1347, 295, 732, 13], "temperature": 0.0, "avg_logprob": -0.1430492877960205, "compression_ratio": 1.6932515337423313, "no_speech_prob": 1.4284807548392564e-05}, {"id": 377, "seek": 151700, "start": 1537.0, "end": 1542.0, "text": " And then you could just do the opposite to to the power of.", "tokens": [400, 550, 291, 727, 445, 360, 264, 6182, 281, 281, 264, 1347, 295, 13], "temperature": 0.0, "avg_logprob": -0.1430492877960205, "compression_ratio": 1.6932515337423313, "no_speech_prob": 1.4284807548392564e-05}, {"id": 378, "seek": 154200, "start": 1542.0, "end": 1552.0, "text": " So this means two to the power of rather than to the power of two. So two to the power of three is eight.", "tokens": [407, 341, 1355, 732, 281, 264, 1347, 295, 2831, 813, 281, 264, 1347, 295, 732, 13, 407, 732, 281, 264, 1347, 295, 1045, 307, 3180, 13], "temperature": 0.0, "avg_logprob": -0.1732646942138672, "compression_ratio": 1.978021978021978, "no_speech_prob": 6.302013935055584e-05}, {"id": 379, "seek": 154200, "start": 1552.0, "end": 1557.0, "text": " So that's the equivalent of this is the equivalent of partial where I bind the rights right hand side.", "tokens": [407, 300, 311, 264, 10344, 295, 341, 307, 264, 10344, 295, 14641, 689, 286, 14786, 264, 4601, 558, 1011, 1252, 13], "temperature": 0.0, "avg_logprob": -0.1732646942138672, "compression_ratio": 1.978021978021978, "no_speech_prob": 6.302013935055584e-05}, {"id": 380, "seek": 154200, "start": 1557.0, "end": 1562.0, "text": " This is the equivalent of partial where I bind the left hand side.", "tokens": [639, 307, 264, 10344, 295, 14641, 689, 286, 14786, 264, 1411, 1011, 1252, 13], "temperature": 0.0, "avg_logprob": -0.1732646942138672, "compression_ratio": 1.978021978021978, "no_speech_prob": 6.302013935055584e-05}, {"id": 381, "seek": 154200, "start": 1562.0, "end": 1564.0, "text": " Wow.", "tokens": [3153, 13], "temperature": 0.0, "avg_logprob": -0.1732646942138672, "compression_ratio": 1.978021978021978, "no_speech_prob": 6.302013935055584e-05}, {"id": 382, "seek": 154200, "start": 1564.0, "end": 1570.0, "text": " It says it's just surprising how succinct it all is. And it's like Lego bricks.", "tokens": [467, 1619, 309, 311, 445, 8830, 577, 21578, 5460, 309, 439, 307, 13, 400, 309, 311, 411, 28761, 25497, 13], "temperature": 0.0, "avg_logprob": -0.1732646942138672, "compression_ratio": 1.978021978021978, "no_speech_prob": 6.302013935055584e-05}, {"id": 383, "seek": 157000, "start": 1570.0, "end": 1575.0, "text": " It is. Yeah.", "tokens": [467, 307, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.23136423480126164, "compression_ratio": 0.9861111111111112, "no_speech_prob": 6.300561653915793e-05}, {"id": 384, "seek": 157000, "start": 1575.0, "end": 1577.0, "text": " So.", "tokens": [407, 13], "temperature": 0.0, "avg_logprob": -0.23136423480126164, "compression_ratio": 0.9861111111111112, "no_speech_prob": 6.300561653915793e-05}, {"id": 385, "seek": 157000, "start": 1577.0, "end": 1587.0, "text": " Let's move some of this stuff into the right spot.", "tokens": [961, 311, 1286, 512, 295, 341, 1507, 666, 264, 558, 4008, 13], "temperature": 0.0, "avg_logprob": -0.23136423480126164, "compression_ratio": 0.9861111111111112, "no_speech_prob": 6.300561653915793e-05}, {"id": 386, "seek": 157000, "start": 1587.0, "end": 1592.0, "text": " OK.", "tokens": [2264, 13], "temperature": 0.0, "avg_logprob": -0.23136423480126164, "compression_ratio": 0.9861111111111112, "no_speech_prob": 6.300561653915793e-05}, {"id": 387, "seek": 159200, "start": 1592.0, "end": 1601.0, "text": " OK. So then. Yeah, let's just go like this.", "tokens": [2264, 13, 407, 550, 13, 865, 11, 718, 311, 445, 352, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.15799582481384278, "compression_ratio": 1.3805970149253732, "no_speech_prob": 2.4824266802170314e-06}, {"id": 388, "seek": 159200, "start": 1601.0, "end": 1609.0, "text": " So this one's called bind and binds a very common computer science term for this", "tokens": [407, 341, 472, 311, 1219, 14786, 293, 41515, 257, 588, 2689, 3820, 3497, 1433, 337, 341], "temperature": 0.0, "avg_logprob": -0.15799582481384278, "compression_ratio": 1.3805970149253732, "no_speech_prob": 2.4824266802170314e-06}, {"id": 389, "seek": 159200, "start": 1609.0, "end": 1616.0, "text": " partial function application or bind and C++ is called bind.", "tokens": [14641, 2445, 3861, 420, 14786, 293, 383, 25472, 307, 1219, 14786, 13], "temperature": 0.0, "avg_logprob": -0.15799582481384278, "compression_ratio": 1.3805970149253732, "no_speech_prob": 2.4824266802170314e-06}, {"id": 390, "seek": 161600, "start": 1616.0, "end": 1633.0, "text": " Now, the other thing we could do is we could do beside and beside is what happens if you put if you just pass two functions to it.", "tokens": [823, 11, 264, 661, 551, 321, 727, 360, 307, 321, 727, 360, 15726, 293, 15726, 307, 437, 2314, 498, 291, 829, 498, 291, 445, 1320, 732, 6828, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.11913960912953252, "compression_ratio": 1.4333333333333333, "no_speech_prob": 5.255247742752545e-06}, {"id": 391, "seek": 161600, "start": 1633.0, "end": 1639.0, "text": " So, for example, we can create a function", "tokens": [407, 11, 337, 1365, 11, 321, 393, 1884, 257, 2445], "temperature": 0.0, "avg_logprob": -0.11913960912953252, "compression_ratio": 1.4333333333333333, "no_speech_prob": 5.255247742752545e-06}, {"id": 392, "seek": 163900, "start": 1639.0, "end": 1646.0, "text": " that first does reciprocal. Remember monadic divide is reciprocal.", "tokens": [300, 700, 775, 46948, 13, 5459, 1108, 43341, 9845, 307, 46948, 13], "temperature": 0.0, "avg_logprob": -0.12210100614107572, "compression_ratio": 1.736842105263158, "no_speech_prob": 7.411154001601972e-06}, {"id": 393, "seek": 163900, "start": 1646.0, "end": 1652.0, "text": " And then it does e to the power of remember star is e to the power of.", "tokens": [400, 550, 309, 775, 308, 281, 264, 1347, 295, 1604, 3543, 307, 308, 281, 264, 1347, 295, 13], "temperature": 0.0, "avg_logprob": -0.12210100614107572, "compression_ratio": 1.736842105263158, "no_speech_prob": 7.411154001601972e-06}, {"id": 394, "seek": 163900, "start": 1652.0, "end": 1660.0, "text": " So this so if we go, for example, reciprocal of three.", "tokens": [407, 341, 370, 498, 321, 352, 11, 337, 1365, 11, 46948, 295, 1045, 13], "temperature": 0.0, "avg_logprob": -0.12210100614107572, "compression_ratio": 1.736842105263158, "no_speech_prob": 7.411154001601972e-06}, {"id": 395, "seek": 163900, "start": 1660.0, "end": 1666.0, "text": " And then we do e to the power of that.", "tokens": [400, 550, 321, 360, 308, 281, 264, 1347, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.12210100614107572, "compression_ratio": 1.736842105263158, "no_speech_prob": 7.411154001601972e-06}, {"id": 396, "seek": 166600, "start": 1666.0, "end": 1674.0, "text": " It's that and we should find f of three is the same thing.", "tokens": [467, 311, 300, 293, 321, 820, 915, 283, 295, 1045, 307, 264, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.17264679272969563, "compression_ratio": 1.563758389261745, "no_speech_prob": 4.936812274536351e-06}, {"id": 397, "seek": 166600, "start": 1674.0, "end": 1679.0, "text": " That makes sense. So this is called function composition.", "tokens": [663, 1669, 2020, 13, 407, 341, 307, 1219, 2445, 12686, 13], "temperature": 0.0, "avg_logprob": -0.17264679272969563, "compression_ratio": 1.563758389261745, "no_speech_prob": 4.936812274536351e-06}, {"id": 398, "seek": 166600, "start": 1679.0, "end": 1692.0, "text": " It's only just one form of it. So first it does this function and then takes the result and passes to that function.", "tokens": [467, 311, 787, 445, 472, 1254, 295, 309, 13, 407, 700, 309, 775, 341, 2445, 293, 550, 2516, 264, 1874, 293, 11335, 281, 300, 2445, 13], "temperature": 0.0, "avg_logprob": -0.17264679272969563, "compression_ratio": 1.563758389261745, "no_speech_prob": 4.936812274536351e-06}, {"id": 399, "seek": 169200, "start": 1692.0, "end": 1699.0, "text": " You can also", "tokens": [509, 393, 611], "temperature": 0.0, "avg_logprob": -0.22646597715524527, "compression_ratio": 0.9861111111111112, "no_speech_prob": 4.495116627367679e-06}, {"id": 400, "seek": 169200, "start": 1699.0, "end": 1709.0, "text": " use the function that is returned diatically.", "tokens": [764, 264, 2445, 300, 307, 8752, 1026, 5030, 13], "temperature": 0.0, "avg_logprob": -0.22646597715524527, "compression_ratio": 0.9861111111111112, "no_speech_prob": 4.495116627367679e-06}, {"id": 401, "seek": 169200, "start": 1709.0, "end": 1712.0, "text": " Like so.", "tokens": [1743, 370, 13], "temperature": 0.0, "avg_logprob": -0.22646597715524527, "compression_ratio": 0.9861111111111112, "no_speech_prob": 4.495116627367679e-06}, {"id": 402, "seek": 169200, "start": 1712.0, "end": 1715.0, "text": " And", "tokens": [400], "temperature": 0.0, "avg_logprob": -0.22646597715524527, "compression_ratio": 0.9861111111111112, "no_speech_prob": 4.495116627367679e-06}, {"id": 403, "seek": 171500, "start": 1715.0, "end": 1723.0, "text": " that is going to be the same as I think.", "tokens": [300, 307, 516, 281, 312, 264, 912, 382, 286, 519, 13], "temperature": 0.0, "avg_logprob": -0.1788957001732998, "compression_ratio": 1.3666666666666667, "no_speech_prob": 2.601608457553084e-06}, {"id": 404, "seek": 171500, "start": 1723.0, "end": 1726.0, "text": " Well, it's not is it?", "tokens": [1042, 11, 309, 311, 406, 307, 309, 30], "temperature": 0.0, "avg_logprob": -0.1788957001732998, "compression_ratio": 1.3666666666666667, "no_speech_prob": 2.601608457553084e-06}, {"id": 405, "seek": 171500, "start": 1726.0, "end": 1731.0, "text": " Two. Yeah, it is. It's going to be two", "tokens": [4453, 13, 865, 11, 309, 307, 13, 467, 311, 516, 281, 312, 732], "temperature": 0.0, "avg_logprob": -0.1788957001732998, "compression_ratio": 1.3666666666666667, "no_speech_prob": 2.601608457553084e-06}, {"id": 406, "seek": 171500, "start": 1731.0, "end": 1738.0, "text": " to the power of", "tokens": [281, 264, 1347, 295], "temperature": 0.0, "avg_logprob": -0.1788957001732998, "compression_ratio": 1.3666666666666667, "no_speech_prob": 2.601608457553084e-06}, {"id": 407, "seek": 171500, "start": 1738.0, "end": 1742.0, "text": " a third. So this will be the cube root of two.", "tokens": [257, 2636, 13, 407, 341, 486, 312, 264, 13728, 5593, 295, 732, 13], "temperature": 0.0, "avg_logprob": -0.1788957001732998, "compression_ratio": 1.3666666666666667, "no_speech_prob": 2.601608457553084e-06}, {"id": 408, "seek": 174200, "start": 1742.0, "end": 1750.0, "text": " Yeah. Okay. So it first so in the case, if you do it diatically, then it first applies this to the right hand side.", "tokens": [865, 13, 1033, 13, 407, 309, 700, 370, 294, 264, 1389, 11, 498, 291, 360, 309, 1026, 5030, 11, 550, 309, 700, 13165, 341, 281, 264, 558, 1011, 1252, 13], "temperature": 0.0, "avg_logprob": -0.14628050778363202, "compression_ratio": 1.646341463414634, "no_speech_prob": 1.0451106390974019e-05}, {"id": 409, "seek": 174200, "start": 1750.0, "end": 1757.0, "text": " And then it applies this to the left hand side and the result of that.", "tokens": [400, 550, 309, 13165, 341, 281, 264, 1411, 1011, 1252, 293, 264, 1874, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.14628050778363202, "compression_ratio": 1.646341463414634, "no_speech_prob": 1.0451106390974019e-05}, {"id": 410, "seek": 174200, "start": 1757.0, "end": 1762.0, "text": " And they've got some really nice pictures of this.", "tokens": [400, 436, 600, 658, 512, 534, 1481, 5242, 295, 341, 13], "temperature": 0.0, "avg_logprob": -0.14628050778363202, "compression_ratio": 1.646341463414634, "no_speech_prob": 1.0451106390974019e-05}, {"id": 411, "seek": 174200, "start": 1762.0, "end": 1770.0, "text": " Somewhere under if they're here.", "tokens": [34500, 833, 498, 436, 434, 510, 13], "temperature": 0.0, "avg_logprob": -0.14628050778363202, "compression_ratio": 1.646341463414634, "no_speech_prob": 1.0451106390974019e-05}, {"id": 412, "seek": 177000, "start": 1770.0, "end": 1775.0, "text": " Oh yeah, bind is also called carrying.", "tokens": [876, 1338, 11, 14786, 307, 611, 1219, 9792, 13], "temperature": 0.0, "avg_logprob": -0.1489409911326873, "compression_ratio": 1.5416666666666667, "no_speech_prob": 3.905375251633814e-06}, {"id": 413, "seek": 177000, "start": 1775.0, "end": 1783.0, "text": " So there's lots of ways of doing function composition. And so beside as you can see it takes y on the right.", "tokens": [407, 456, 311, 3195, 295, 2098, 295, 884, 2445, 12686, 13, 400, 370, 15726, 382, 291, 393, 536, 309, 2516, 288, 322, 264, 558, 13], "temperature": 0.0, "avg_logprob": -0.1489409911326873, "compression_ratio": 1.5416666666666667, "no_speech_prob": 3.905375251633814e-06}, {"id": 414, "seek": 177000, "start": 1783.0, "end": 1787.0, "text": " It passes it through G, which is this function, which was reciprocal.", "tokens": [467, 11335, 309, 807, 460, 11, 597, 307, 341, 2445, 11, 597, 390, 46948, 13], "temperature": 0.0, "avg_logprob": -0.1489409911326873, "compression_ratio": 1.5416666666666667, "no_speech_prob": 3.905375251633814e-06}, {"id": 415, "seek": 177000, "start": 1787.0, "end": 1797.0, "text": " And then f, which was power of gets the left hand side and the result of that.", "tokens": [400, 550, 283, 11, 597, 390, 1347, 295, 2170, 264, 1411, 1011, 1252, 293, 264, 1874, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.1489409911326873, "compression_ratio": 1.5416666666666667, "no_speech_prob": 3.905375251633814e-06}, {"id": 416, "seek": 179700, "start": 1797.0, "end": 1806.0, "text": " Which, interestingly enough, is exactly the same thing", "tokens": [3013, 11, 25873, 1547, 11, 307, 2293, 264, 912, 551], "temperature": 0.0, "avg_logprob": -0.10531029611263636, "compression_ratio": 1.3458646616541354, "no_speech_prob": 8.939533472585026e-06}, {"id": 417, "seek": 179700, "start": 1806.0, "end": 1811.0, "text": " as if you", "tokens": [382, 498, 291], "temperature": 0.0, "avg_logprob": -0.10531029611263636, "compression_ratio": 1.3458646616541354, "no_speech_prob": 8.939533472585026e-06}, {"id": 418, "seek": 179700, "start": 1811.0, "end": 1818.0, "text": " just put them next to each other, I think. Oh no, that's different. That's interesting.", "tokens": [445, 829, 552, 958, 281, 1184, 661, 11, 286, 519, 13, 876, 572, 11, 300, 311, 819, 13, 663, 311, 1880, 13], "temperature": 0.0, "avg_logprob": -0.10531029611263636, "compression_ratio": 1.3458646616541354, "no_speech_prob": 8.939533472585026e-06}, {"id": 419, "seek": 179700, "start": 1818.0, "end": 1824.0, "text": " Okay, I'll take that back.", "tokens": [1033, 11, 286, 603, 747, 300, 646, 13], "temperature": 0.0, "avg_logprob": -0.10531029611263636, "compression_ratio": 1.3458646616541354, "no_speech_prob": 8.939533472585026e-06}, {"id": 420, "seek": 182400, "start": 1824.0, "end": 1830.0, "text": " There's something in the API wiki is good for this stuff.", "tokens": [50364, 821, 311, 746, 294, 264, 9362, 261, 9850, 307, 665, 337, 341, 1507, 13, 50664], "temperature": 0.0, "avg_logprob": -0.3046828999238856, "compression_ratio": 0.9193548387096774, "no_speech_prob": 0.00015830139454919845}, {"id": 421, "seek": 185400, "start": 1854.0, "end": 1866.0, "text": " Wait, it says it's the same.", "tokens": [3802, 11, 309, 1619, 309, 311, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.20689050356547037, "compression_ratio": 1.0625, "no_speech_prob": 0.01032464113086462}, {"id": 422, "seek": 185400, "start": 1866.0, "end": 1874.0, "text": " That's very confusing.", "tokens": [663, 311, 588, 13181, 13], "temperature": 0.0, "avg_logprob": -0.20689050356547037, "compression_ratio": 1.0625, "no_speech_prob": 0.01032464113086462}, {"id": 423, "seek": 185400, "start": 1874.0, "end": 1878.0, "text": " Oh, it's without the parentheses.", "tokens": [876, 11, 309, 311, 1553, 264, 34153, 13], "temperature": 0.0, "avg_logprob": -0.20689050356547037, "compression_ratio": 1.0625, "no_speech_prob": 0.01032464113086462}, {"id": 424, "seek": 187800, "start": 1878.0, "end": 1891.0, "text": " Okay, so that does the same thing. So there's a few ways of doing the same thing here.", "tokens": [1033, 11, 370, 300, 775, 264, 912, 551, 13, 407, 456, 311, 257, 1326, 2098, 295, 884, 264, 912, 551, 510, 13], "temperature": 0.0, "avg_logprob": -0.13325636386871337, "compression_ratio": 1.6193181818181819, "no_speech_prob": 5.255308678897563e-06}, {"id": 425, "seek": 187800, "start": 1891.0, "end": 1899.0, "text": " So it's a bit confusing that, I mean, it doesn't need to be, but it can be if you're not careful that this is a dyadic operator,", "tokens": [407, 309, 311, 257, 857, 13181, 300, 11, 286, 914, 11, 309, 1177, 380, 643, 281, 312, 11, 457, 309, 393, 312, 498, 291, 434, 406, 5026, 300, 341, 307, 257, 14584, 43341, 12973, 11], "temperature": 0.0, "avg_logprob": -0.13325636386871337, "compression_ratio": 1.6193181818181819, "no_speech_prob": 5.255308678897563e-06}, {"id": 426, "seek": 187800, "start": 1899.0, "end": 1903.0, "text": " because it takes it takes the left hand side and the right hand side.", "tokens": [570, 309, 2516, 309, 2516, 264, 1411, 1011, 1252, 293, 264, 558, 1011, 1252, 13], "temperature": 0.0, "avg_logprob": -0.13325636386871337, "compression_ratio": 1.6193181818181819, "no_speech_prob": 5.255308678897563e-06}, {"id": 427, "seek": 190300, "start": 1903.0, "end": 1915.0, "text": " It returns a function. The function it returns can either be used monadically or dyadically.", "tokens": [467, 11247, 257, 2445, 13, 440, 2445, 309, 11247, 393, 2139, 312, 1143, 1108, 345, 984, 420, 14584, 345, 984, 13], "temperature": 0.0, "avg_logprob": -0.12692309561229886, "compression_ratio": 1.3577981651376148, "no_speech_prob": 4.092841663805302e-06}, {"id": 428, "seek": 190300, "start": 1915.0, "end": 1919.0, "text": " That makes sense.", "tokens": [663, 1669, 2020, 13], "temperature": 0.0, "avg_logprob": -0.12692309561229886, "compression_ratio": 1.3577981651376148, "no_speech_prob": 4.092841663805302e-06}, {"id": 429, "seek": 190300, "start": 1919.0, "end": 1926.0, "text": " And so the way it behaves is based on", "tokens": [400, 370, 264, 636, 309, 36896, 307, 2361, 322], "temperature": 0.0, "avg_logprob": -0.12692309561229886, "compression_ratio": 1.3577981651376148, "no_speech_prob": 4.092841663805302e-06}, {"id": 430, "seek": 192600, "start": 1926.0, "end": 1934.0, "text": " if it's used monadically, it's reasonably straightforward. We just first apply this and then we apply that.", "tokens": [498, 309, 311, 1143, 1108, 345, 984, 11, 309, 311, 23551, 15325, 13, 492, 445, 700, 3079, 341, 293, 550, 321, 3079, 300, 13], "temperature": 0.0, "avg_logprob": -0.12696124447716606, "compression_ratio": 1.5433526011560694, "no_speech_prob": 1.8340699170948938e-05}, {"id": 431, "seek": 192600, "start": 1934.0, "end": 1940.0, "text": " If it's dyadically, then it behaves like this.", "tokens": [759, 309, 311, 14584, 345, 984, 11, 550, 309, 36896, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.12696124447716606, "compression_ratio": 1.5433526011560694, "no_speech_prob": 1.8340699170948938e-05}, {"id": 432, "seek": 192600, "start": 1940.0, "end": 1948.0, "text": " It makes sense. It's just interesting that it exists. Like one question is, you know, what it could be used for.", "tokens": [467, 1669, 2020, 13, 467, 311, 445, 1880, 300, 309, 8198, 13, 1743, 472, 1168, 307, 11, 291, 458, 11, 437, 309, 727, 312, 1143, 337, 13], "temperature": 0.0, "avg_logprob": -0.12696124447716606, "compression_ratio": 1.5433526011560694, "no_speech_prob": 1.8340699170948938e-05}, {"id": 433, "seek": 194800, "start": 1948.0, "end": 1956.0, "text": " So the purpose of it is to create is to is the way I think of it is to expand mathematics. Right.", "tokens": [407, 264, 4334, 295, 309, 307, 281, 1884, 307, 281, 307, 264, 636, 286, 519, 295, 309, 307, 281, 5268, 18666, 13, 1779, 13], "temperature": 0.0, "avg_logprob": -0.09642095565795898, "compression_ratio": 1.7311827956989247, "no_speech_prob": 2.5611989258322865e-06}, {"id": 434, "seek": 194800, "start": 1956.0, "end": 1965.0, "text": " So in mathematics, we stick symbols next to each other and they have meanings. Right.", "tokens": [407, 294, 18666, 11, 321, 2897, 16944, 958, 281, 1184, 661, 293, 436, 362, 28138, 13, 1779, 13], "temperature": 0.0, "avg_logprob": -0.09642095565795898, "compression_ratio": 1.7311827956989247, "no_speech_prob": 2.5611989258322865e-06}, {"id": 435, "seek": 194800, "start": 1965.0, "end": 1976.0, "text": " But the rules for what symbols you can stick next to each other and when vary a lot depending on the symbol and stuff like that, you know.", "tokens": [583, 264, 4474, 337, 437, 16944, 291, 393, 2897, 958, 281, 1184, 661, 293, 562, 10559, 257, 688, 5413, 322, 264, 5986, 293, 1507, 411, 300, 11, 291, 458, 13], "temperature": 0.0, "avg_logprob": -0.09642095565795898, "compression_ratio": 1.7311827956989247, "no_speech_prob": 2.5611989258322865e-06}, {"id": 436, "seek": 197600, "start": 1976.0, "end": 1981.0, "text": " So APL tries to just lay out the ground rules and says this is this is how you can do it.", "tokens": [407, 5372, 43, 9898, 281, 445, 2360, 484, 264, 2727, 4474, 293, 1619, 341, 307, 341, 307, 577, 291, 393, 360, 309, 13], "temperature": 0.0, "avg_logprob": -0.10099734393033115, "compression_ratio": 1.4705882352941178, "no_speech_prob": 6.143838163552573e-06}, {"id": 437, "seek": 197600, "start": 1981.0, "end": 1989.0, "text": " And so let me show you my favorite so far example,", "tokens": [400, 370, 718, 385, 855, 291, 452, 2954, 370, 1400, 1365, 11], "temperature": 0.0, "avg_logprob": -0.10099734393033115, "compression_ratio": 1.4705882352941178, "no_speech_prob": 6.143838163552573e-06}, {"id": 438, "seek": 197600, "start": 1989.0, "end": 1998.0, "text": " which is calculating", "tokens": [597, 307, 28258], "temperature": 0.0, "avg_logprob": -0.10099734393033115, "compression_ratio": 1.4705882352941178, "no_speech_prob": 6.143838163552573e-06}, {"id": 439, "seek": 197600, "start": 1998.0, "end": 2004.0, "text": " which is calculating the golden ratio.", "tokens": [597, 307, 28258, 264, 9729, 8509, 13], "temperature": 0.0, "avg_logprob": -0.10099734393033115, "compression_ratio": 1.4705882352941178, "no_speech_prob": 6.143838163552573e-06}, {"id": 440, "seek": 200400, "start": 2004.0, "end": 2011.0, "text": " We're going to need some more operators for this. OK.", "tokens": [492, 434, 516, 281, 643, 512, 544, 19077, 337, 341, 13, 2264, 13], "temperature": 0.0, "avg_logprob": -0.15445932975182167, "compression_ratio": 1.4042553191489362, "no_speech_prob": 1.5935245755827054e-05}, {"id": 441, "seek": 200400, "start": 2011.0, "end": 2021.0, "text": " So we're going to use the next operator we're going to learn is star dioresis.", "tokens": [407, 321, 434, 516, 281, 764, 264, 958, 12973, 321, 434, 516, 281, 1466, 307, 3543, 1026, 2706, 271, 13], "temperature": 0.0, "avg_logprob": -0.15445932975182167, "compression_ratio": 1.4042553191489362, "no_speech_prob": 1.5935245755827054e-05}, {"id": 442, "seek": 202100, "start": 2021.0, "end": 2043.0, "text": " Yeah. Which is shift P.", "tokens": [865, 13, 3013, 307, 5513, 430, 13], "temperature": 0.0, "avg_logprob": -0.22745774009011008, "compression_ratio": 0.7419354838709677, "no_speech_prob": 8.664389497425873e-06}, {"id": 443, "seek": 204300, "start": 2043.0, "end": 2052.0, "text": " And this is also called power, but it's actually the power operator rather than the power function, which is confusing.", "tokens": [400, 341, 307, 611, 1219, 1347, 11, 457, 309, 311, 767, 264, 1347, 12973, 2831, 813, 264, 1347, 2445, 11, 597, 307, 13181, 13], "temperature": 0.0, "avg_logprob": -0.09371522981293347, "compression_ratio": 1.4402985074626866, "no_speech_prob": 3.237709506720421e-06}, {"id": 444, "seek": 204300, "start": 2052.0, "end": 2061.0, "text": " So do you actually have to be careful?", "tokens": [407, 360, 291, 767, 362, 281, 312, 5026, 30], "temperature": 0.0, "avg_logprob": -0.09371522981293347, "compression_ratio": 1.4402985074626866, "no_speech_prob": 3.237709506720421e-06}, {"id": 445, "seek": 204300, "start": 2061.0, "end": 2070.0, "text": " The power function is just a star.", "tokens": [440, 1347, 2445, 307, 445, 257, 3543, 13], "temperature": 0.0, "avg_logprob": -0.09371522981293347, "compression_ratio": 1.4402985074626866, "no_speech_prob": 3.237709506720421e-06}, {"id": 446, "seek": 207000, "start": 2070.0, "end": 2078.0, "text": " OK, it is a operator, therefore it returns a function.", "tokens": [2264, 11, 309, 307, 257, 12973, 11, 4412, 309, 11247, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.13568811013664997, "compression_ratio": 1.612121212121212, "no_speech_prob": 5.422072263172595e-06}, {"id": 447, "seek": 207000, "start": 2078.0, "end": 2084.0, "text": " It's dyadic, therefore it needs a left hand side and a right hand side.", "tokens": [467, 311, 14584, 43341, 11, 4412, 309, 2203, 257, 1411, 1011, 1252, 293, 257, 558, 1011, 1252, 13], "temperature": 0.0, "avg_logprob": -0.13568811013664997, "compression_ratio": 1.612121212121212, "no_speech_prob": 5.422072263172595e-06}, {"id": 448, "seek": 207000, "start": 2084.0, "end": 2094.0, "text": " So let's define. I don't know if any of you have done metamathematics, but metamathematics is the philosophical foundations of mathematics.", "tokens": [407, 718, 311, 6964, 13, 286, 500, 380, 458, 498, 604, 295, 291, 362, 1096, 1131, 335, 998, 37541, 11, 457, 1131, 335, 998, 37541, 307, 264, 25066, 22467, 295, 18666, 13], "temperature": 0.0, "avg_logprob": -0.13568811013664997, "compression_ratio": 1.612121212121212, "no_speech_prob": 5.422072263172595e-06}, {"id": 449, "seek": 209400, "start": 2094.0, "end": 2101.0, "text": " And there's a small set of theorems that you can use.", "tokens": [400, 456, 311, 257, 1359, 992, 295, 10299, 2592, 300, 291, 393, 764, 13], "temperature": 0.0, "avg_logprob": -0.10483419604417754, "compression_ratio": 1.537313432835821, "no_speech_prob": 5.338024948287057e-06}, {"id": 450, "seek": 209400, "start": 2101.0, "end": 2107.0, "text": " I think it called the piano theorem, piano axioms.", "tokens": [286, 519, 309, 1219, 264, 9211, 20904, 11, 9211, 6360, 72, 4785, 13], "temperature": 0.0, "avg_logprob": -0.10483419604417754, "compression_ratio": 1.537313432835821, "no_speech_prob": 5.338024948287057e-06}, {"id": 451, "seek": 209400, "start": 2107.0, "end": 2116.0, "text": " Which people used to think you could then derive all of math from, although it turns out it's not necessarily true.", "tokens": [3013, 561, 1143, 281, 519, 291, 727, 550, 28446, 439, 295, 5221, 490, 11, 4878, 309, 4523, 484, 309, 311, 406, 4725, 2074, 13], "temperature": 0.0, "avg_logprob": -0.10483419604417754, "compression_ratio": 1.537313432835821, "no_speech_prob": 5.338024948287057e-06}, {"id": 452, "seek": 209400, "start": 2116.0, "end": 2122.0, "text": " And so basically the idea is you'd say, OK, we're going to create something called zero.", "tokens": [400, 370, 1936, 264, 1558, 307, 291, 1116, 584, 11, 2264, 11, 321, 434, 516, 281, 1884, 746, 1219, 4018, 13], "temperature": 0.0, "avg_logprob": -0.10483419604417754, "compression_ratio": 1.537313432835821, "no_speech_prob": 5.338024948287057e-06}, {"id": 453, "seek": 212200, "start": 2122.0, "end": 2132.0, "text": " And the way to create something called equals and equals is defined by saying for every number x equals x.", "tokens": [400, 264, 636, 281, 1884, 746, 1219, 6915, 293, 6915, 307, 7642, 538, 1566, 337, 633, 1230, 2031, 6915, 2031, 13], "temperature": 0.0, "avg_logprob": -0.1923133601313052, "compression_ratio": 1.7054794520547945, "no_speech_prob": 1.2218401025165804e-05}, {"id": 454, "seek": 212200, "start": 2132.0, "end": 2137.0, "text": " And that if x, if x equals y, then y equals x.", "tokens": [400, 300, 498, 2031, 11, 498, 2031, 6915, 288, 11, 550, 288, 6915, 2031, 13], "temperature": 0.0, "avg_logprob": -0.1923133601313052, "compression_ratio": 1.7054794520547945, "no_speech_prob": 1.2218401025165804e-05}, {"id": 455, "seek": 212200, "start": 2137.0, "end": 2144.0, "text": " And if x equals y and y equals z, then x equals z. I mean, these are all obviously true things.", "tokens": [400, 498, 2031, 6915, 288, 293, 288, 6915, 710, 11, 550, 2031, 6915, 710, 13, 286, 914, 11, 613, 366, 439, 2745, 2074, 721, 13], "temperature": 0.0, "avg_logprob": -0.1923133601313052, "compression_ratio": 1.7054794520547945, "no_speech_prob": 1.2218401025165804e-05}, {"id": 456, "seek": 214400, "start": 2144.0, "end": 2154.0, "text": " So kind of defining some basic theorems. And then it defines this function called capital S.", "tokens": [407, 733, 295, 17827, 512, 3875, 10299, 2592, 13, 400, 550, 309, 23122, 341, 2445, 1219, 4238, 318, 13], "temperature": 0.0, "avg_logprob": -0.10752707858418309, "compression_ratio": 1.8157894736842106, "no_speech_prob": 4.029393039672868e-06}, {"id": 457, "seek": 214400, "start": 2154.0, "end": 2159.0, "text": " We just basically say it exists and it returns another number.", "tokens": [492, 445, 1936, 584, 309, 8198, 293, 309, 11247, 1071, 1230, 13], "temperature": 0.0, "avg_logprob": -0.10752707858418309, "compression_ratio": 1.8157894736842106, "no_speech_prob": 4.029393039672868e-06}, {"id": 458, "seek": 214400, "start": 2159.0, "end": 2164.0, "text": " And basically it defines it in such a way that it's it's the successor of a number.", "tokens": [400, 1936, 309, 23122, 309, 294, 1270, 257, 636, 300, 309, 311, 309, 311, 264, 31864, 295, 257, 1230, 13], "temperature": 0.0, "avg_logprob": -0.10752707858418309, "compression_ratio": 1.8157894736842106, "no_speech_prob": 4.029393039672868e-06}, {"id": 459, "seek": 214400, "start": 2164.0, "end": 2169.0, "text": " So the successor of zero is one, the successor of one is two, the successor of two is three and so forth.", "tokens": [407, 264, 31864, 295, 4018, 307, 472, 11, 264, 31864, 295, 472, 307, 732, 11, 264, 31864, 295, 732, 307, 1045, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.10752707858418309, "compression_ratio": 1.8157894736842106, "no_speech_prob": 4.029393039672868e-06}, {"id": 460, "seek": 216900, "start": 2169.0, "end": 2175.0, "text": " And we actually can easily define S now.", "tokens": [400, 321, 767, 393, 3612, 6964, 318, 586, 13], "temperature": 0.0, "avg_logprob": -0.14676841100056967, "compression_ratio": 1.710344827586207, "no_speech_prob": 3.844892944471212e-06}, {"id": 461, "seek": 216900, "start": 2175.0, "end": 2184.0, "text": " Because it's plus one.", "tokens": [1436, 309, 311, 1804, 472, 13], "temperature": 0.0, "avg_logprob": -0.14676841100056967, "compression_ratio": 1.710344827586207, "no_speech_prob": 3.844892944471212e-06}, {"id": 462, "seek": 216900, "start": 2184.0, "end": 2191.0, "text": " And so if we assume that zero exists and we assume that the successor exists, then we can create the number one.", "tokens": [400, 370, 498, 321, 6552, 300, 4018, 8198, 293, 321, 6552, 300, 264, 31864, 8198, 11, 550, 321, 393, 1884, 264, 1230, 472, 13], "temperature": 0.0, "avg_logprob": -0.14676841100056967, "compression_ratio": 1.710344827586207, "no_speech_prob": 3.844892944471212e-06}, {"id": 463, "seek": 216900, "start": 2191.0, "end": 2194.0, "text": " And we can create the number two, we create the number three, so forth.", "tokens": [400, 321, 393, 1884, 264, 1230, 732, 11, 321, 1884, 264, 1230, 1045, 11, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.14676841100056967, "compression_ratio": 1.710344827586207, "no_speech_prob": 3.844892944471212e-06}, {"id": 464, "seek": 219400, "start": 2194.0, "end": 2204.0, "text": " And so at this point, we want to invent addition because in mathematics, you basically are not allowed to assume anything exists, except what you put in your premises.", "tokens": [400, 370, 412, 341, 935, 11, 321, 528, 281, 7962, 4500, 570, 294, 18666, 11, 291, 1936, 366, 406, 4350, 281, 6552, 1340, 8198, 11, 3993, 437, 291, 829, 294, 428, 34266, 13], "temperature": 0.0, "avg_logprob": -0.09745221079131704, "compression_ratio": 1.5571428571428572, "no_speech_prob": 1.2482448710215976e-06}, {"id": 465, "seek": 219400, "start": 2204.0, "end": 2210.0, "text": " So addition is what happens when we apply S a bunch of times.", "tokens": [407, 4500, 307, 437, 2314, 562, 321, 3079, 318, 257, 3840, 295, 1413, 13], "temperature": 0.0, "avg_logprob": -0.09745221079131704, "compression_ratio": 1.5571428571428572, "no_speech_prob": 1.2482448710215976e-06}, {"id": 466, "seek": 219400, "start": 2210.0, "end": 2217.0, "text": " If we want to add three to zero, we would write three S's followed by zero.", "tokens": [759, 321, 528, 281, 909, 1045, 281, 4018, 11, 321, 576, 2464, 1045, 318, 311, 6263, 538, 4018, 13], "temperature": 0.0, "avg_logprob": -0.09745221079131704, "compression_ratio": 1.5571428571428572, "no_speech_prob": 1.2482448710215976e-06}, {"id": 467, "seek": 219400, "start": 2217.0, "end": 2219.0, "text": " Does that make sense?", "tokens": [4402, 300, 652, 2020, 30], "temperature": 0.0, "avg_logprob": -0.09745221079131704, "compression_ratio": 1.5571428571428572, "no_speech_prob": 1.2482448710215976e-06}, {"id": 468, "seek": 221900, "start": 2219.0, "end": 2228.0, "text": " So the power function, the power operator, simply says how many times to repeat a function.", "tokens": [407, 264, 1347, 2445, 11, 264, 1347, 12973, 11, 2935, 1619, 577, 867, 1413, 281, 7149, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.10675341866233132, "compression_ratio": 1.5396825396825398, "no_speech_prob": 2.6841487397177843e-06}, {"id": 469, "seek": 221900, "start": 2228.0, "end": 2235.0, "text": " So I want to repeat the function S three times.", "tokens": [407, 286, 528, 281, 7149, 264, 2445, 318, 1045, 1413, 13], "temperature": 0.0, "avg_logprob": -0.10675341866233132, "compression_ratio": 1.5396825396825398, "no_speech_prob": 2.6841487397177843e-06}, {"id": 470, "seek": 221900, "start": 2235.0, "end": 2241.0, "text": " So that's the same as writing S space S space S.", "tokens": [407, 300, 311, 264, 912, 382, 3579, 318, 1901, 318, 1901, 318, 13], "temperature": 0.0, "avg_logprob": -0.10675341866233132, "compression_ratio": 1.5396825396825398, "no_speech_prob": 2.6841487397177843e-06}, {"id": 471, "seek": 221900, "start": 2241.0, "end": 2244.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.10675341866233132, "compression_ratio": 1.5396825396825398, "no_speech_prob": 2.6841487397177843e-06}, {"id": 472, "seek": 224400, "start": 2244.0, "end": 2254.0, "text": " So if we want to create a function called add,", "tokens": [407, 498, 321, 528, 281, 1884, 257, 2445, 1219, 909, 11], "temperature": 0.0, "avg_logprob": -0.1959408980149489, "compression_ratio": 1.4461538461538461, "no_speech_prob": 3.3930837162188254e-06}, {"id": 473, "seek": 224400, "start": 2254.0, "end": 2261.0, "text": " then we basically are going to apply the S function", "tokens": [550, 321, 1936, 366, 516, 281, 3079, 264, 318, 2445], "temperature": 0.0, "avg_logprob": -0.1959408980149489, "compression_ratio": 1.4461538461538461, "no_speech_prob": 3.3930837162188254e-06}, {"id": 474, "seek": 224400, "start": 2261.0, "end": 2266.0, "text": " alpha times to omega.", "tokens": [8961, 1413, 281, 10498, 13], "temperature": 0.0, "avg_logprob": -0.1959408980149489, "compression_ratio": 1.4461538461538461, "no_speech_prob": 3.3930837162188254e-06}, {"id": 475, "seek": 224400, "start": 2266.0, "end": 2271.0, "text": " So that's going to start with, let me just go into really brackets.", "tokens": [407, 300, 311, 516, 281, 722, 365, 11, 718, 385, 445, 352, 666, 534, 26179, 13], "temperature": 0.0, "avg_logprob": -0.1959408980149489, "compression_ratio": 1.4461538461538461, "no_speech_prob": 3.3930837162188254e-06}, {"id": 476, "seek": 227100, "start": 2271.0, "end": 2282.0, "text": " So for example, two added to three, we'll start with three, and then it will apply S twice.", "tokens": [407, 337, 1365, 11, 732, 3869, 281, 1045, 11, 321, 603, 722, 365, 1045, 11, 293, 550, 309, 486, 3079, 318, 6091, 13], "temperature": 0.0, "avg_logprob": -0.103732115427653, "compression_ratio": 1.483695652173913, "no_speech_prob": 8.08335462352261e-05}, {"id": 477, "seek": 227100, "start": 2282.0, "end": 2286.0, "text": " That would be the same as writing S space S space three.", "tokens": [663, 576, 312, 264, 912, 382, 3579, 318, 1901, 318, 1901, 1045, 13], "temperature": 0.0, "avg_logprob": -0.103732115427653, "compression_ratio": 1.483695652173913, "no_speech_prob": 8.08335462352261e-05}, {"id": 478, "seek": 227100, "start": 2286.0, "end": 2290.0, "text": " Does that make sense? So we just invented addition.", "tokens": [4402, 300, 652, 2020, 30, 407, 321, 445, 14479, 4500, 13], "temperature": 0.0, "avg_logprob": -0.103732115427653, "compression_ratio": 1.483695652173913, "no_speech_prob": 8.08335462352261e-05}, {"id": 479, "seek": 227100, "start": 2290.0, "end": 2293.0, "text": " Yes, absolutely it does.", "tokens": [1079, 11, 3122, 309, 775, 13], "temperature": 0.0, "avg_logprob": -0.103732115427653, "compression_ratio": 1.483695652173913, "no_speech_prob": 8.08335462352261e-05}, {"id": 480, "seek": 227100, "start": 2293.0, "end": 2297.0, "text": " So we can do the same thing for multiplication.", "tokens": [407, 321, 393, 360, 264, 912, 551, 337, 27290, 13], "temperature": 0.0, "avg_logprob": -0.103732115427653, "compression_ratio": 1.483695652173913, "no_speech_prob": 8.08335462352261e-05}, {"id": 481, "seek": 229700, "start": 2297.0, "end": 2306.0, "text": " We can apply, multiply.", "tokens": [492, 393, 3079, 11, 12972, 13], "temperature": 0.0, "avg_logprob": -0.1422034968500552, "compression_ratio": 1.3565217391304347, "no_speech_prob": 2.0784291336894967e-05}, {"id": 482, "seek": 229700, "start": 2306.0, "end": 2315.0, "text": " We need to start at one, and then we can multiply.", "tokens": [492, 643, 281, 722, 412, 472, 11, 293, 550, 321, 393, 12972, 13], "temperature": 0.0, "avg_logprob": -0.1422034968500552, "compression_ratio": 1.3565217391304347, "no_speech_prob": 2.0784291336894967e-05}, {"id": 483, "seek": 229700, "start": 2315.0, "end": 2323.0, "text": " So we're going to multiply by, not sure if it matters which way around this goes,", "tokens": [407, 321, 434, 516, 281, 12972, 538, 11, 406, 988, 498, 309, 7001, 597, 636, 926, 341, 1709, 11], "temperature": 0.0, "avg_logprob": -0.1422034968500552, "compression_ratio": 1.3565217391304347, "no_speech_prob": 2.0784291336894967e-05}, {"id": 484, "seek": 232300, "start": 2323.0, "end": 2334.0, "text": " we're going to multiply by alpha omega times.", "tokens": [321, 434, 516, 281, 12972, 538, 8961, 10498, 1413, 13], "temperature": 0.0, "avg_logprob": -0.1953756108003504, "compression_ratio": 1.2892561983471074, "no_speech_prob": 6.643304914177861e-06}, {"id": 485, "seek": 232300, "start": 2334.0, "end": 2339.0, "text": " Oops. Oh, I wrote volt, which obviously is going to break everything.", "tokens": [21726, 13, 876, 11, 286, 4114, 5962, 11, 597, 2745, 307, 516, 281, 1821, 1203, 13], "temperature": 0.0, "avg_logprob": -0.1953756108003504, "compression_ratio": 1.2892561983471074, "no_speech_prob": 6.643304914177861e-06}, {"id": 486, "seek": 232300, "start": 2339.0, "end": 2343.0, "text": " I need to add.", "tokens": [286, 643, 281, 909, 13], "temperature": 0.0, "avg_logprob": -0.1953756108003504, "compression_ratio": 1.2892561983471074, "no_speech_prob": 6.643304914177861e-06}, {"id": 487, "seek": 232300, "start": 2343.0, "end": 2346.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.1953756108003504, "compression_ratio": 1.2892561983471074, "no_speech_prob": 6.643304914177861e-06}, {"id": 488, "seek": 232300, "start": 2346.0, "end": 2350.0, "text": " I'm adding to zero.", "tokens": [286, 478, 5127, 281, 4018, 13], "temperature": 0.0, "avg_logprob": -0.1953756108003504, "compression_ratio": 1.2892561983471074, "no_speech_prob": 6.643304914177861e-06}, {"id": 489, "seek": 235000, "start": 2350.0, "end": 2353.0, "text": " There we go. So I'm adding to zero.", "tokens": [821, 321, 352, 13, 407, 286, 478, 5127, 281, 4018, 13], "temperature": 0.0, "avg_logprob": -0.11036672220601663, "compression_ratio": 1.4662576687116564, "no_speech_prob": 4.936948243994266e-06}, {"id": 490, "seek": 235000, "start": 2353.0, "end": 2355.0, "text": " This is what I add each time.", "tokens": [639, 307, 437, 286, 909, 1184, 565, 13], "temperature": 0.0, "avg_logprob": -0.11036672220601663, "compression_ratio": 1.4662576687116564, "no_speech_prob": 4.936948243994266e-06}, {"id": 491, "seek": 235000, "start": 2355.0, "end": 2359.0, "text": " This is how many times I add.", "tokens": [639, 307, 577, 867, 1413, 286, 909, 13], "temperature": 0.0, "avg_logprob": -0.11036672220601663, "compression_ratio": 1.4662576687116564, "no_speech_prob": 4.936948243994266e-06}, {"id": 492, "seek": 235000, "start": 2359.0, "end": 2362.0, "text": " So we just invented model play.", "tokens": [407, 321, 445, 14479, 2316, 862, 13], "temperature": 0.0, "avg_logprob": -0.11036672220601663, "compression_ratio": 1.4662576687116564, "no_speech_prob": 4.936948243994266e-06}, {"id": 493, "seek": 235000, "start": 2362.0, "end": 2370.0, "text": " So we can, of course, now invent to the power of.", "tokens": [407, 321, 393, 11, 295, 1164, 11, 586, 7962, 281, 264, 1347, 295, 13], "temperature": 0.0, "avg_logprob": -0.11036672220601663, "compression_ratio": 1.4662576687116564, "no_speech_prob": 4.936948243994266e-06}, {"id": 494, "seek": 235000, "start": 2370.0, "end": 2379.0, "text": " And that would be where we'd start with one, and we multiply.", "tokens": [400, 300, 576, 312, 689, 321, 1116, 722, 365, 472, 11, 293, 321, 12972, 13], "temperature": 0.0, "avg_logprob": -0.11036672220601663, "compression_ratio": 1.4662576687116564, "no_speech_prob": 4.936948243994266e-06}, {"id": 495, "seek": 237900, "start": 2379.0, "end": 2385.0, "text": " The number of times we multiply will be.", "tokens": [440, 1230, 295, 1413, 321, 12972, 486, 312, 13], "temperature": 0.0, "avg_logprob": -0.23116913295927502, "compression_ratio": 1.2164948453608246, "no_speech_prob": 4.264005838194862e-05}, {"id": 496, "seek": 237900, "start": 2385.0, "end": 2391.0, "text": " Yeah, the thing on the right. So to to the power of three.", "tokens": [865, 11, 264, 551, 322, 264, 558, 13, 407, 281, 281, 264, 1347, 295, 1045, 13], "temperature": 0.0, "avg_logprob": -0.23116913295927502, "compression_ratio": 1.2164948453608246, "no_speech_prob": 4.264005838194862e-05}, {"id": 497, "seek": 237900, "start": 2391.0, "end": 2396.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.23116913295927502, "compression_ratio": 1.2164948453608246, "no_speech_prob": 4.264005838194862e-05}, {"id": 498, "seek": 237900, "start": 2396.0, "end": 2398.0, "text": " Yeah, it is.", "tokens": [865, 11, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.23116913295927502, "compression_ratio": 1.2164948453608246, "no_speech_prob": 4.264005838194862e-05}, {"id": 499, "seek": 239800, "start": 2398.0, "end": 2409.0, "text": " Yeah, quite mind bending to look at the syntax though because, you know, the star thingy, the star diorasis.", "tokens": [865, 11, 1596, 1575, 22487, 281, 574, 412, 264, 28431, 1673, 570, 11, 291, 458, 11, 264, 3543, 551, 88, 11, 264, 3543, 1026, 284, 26632, 13], "temperature": 0.0, "avg_logprob": -0.4207779785682415, "compression_ratio": 1.5172413793103448, "no_speech_prob": 8.741471538087353e-05}, {"id": 500, "seek": 239800, "start": 2409.0, "end": 2420.0, "text": " Like it look already quite interesting when it was with the monadic as function, you know, and now it can also.", "tokens": [1743, 309, 574, 1217, 1596, 1880, 562, 309, 390, 365, 264, 1108, 43341, 382, 2445, 11, 291, 458, 11, 293, 586, 309, 393, 611, 13], "temperature": 0.0, "avg_logprob": -0.4207779785682415, "compression_ratio": 1.5172413793103448, "no_speech_prob": 8.741471538087353e-05}, {"id": 501, "seek": 242000, "start": 2420.0, "end": 2435.0, "text": " So, yeah, this this thing you have in the cell 26. It's just, you know, on the right hand side of it and it does what it does, but then you can also use it with the diadic.", "tokens": [407, 11, 1338, 11, 341, 341, 551, 291, 362, 294, 264, 2815, 7551, 13, 467, 311, 445, 11, 291, 458, 11, 322, 264, 558, 1011, 1252, 295, 309, 293, 309, 775, 437, 309, 775, 11, 457, 550, 291, 393, 611, 764, 309, 365, 264, 1026, 43341, 13], "temperature": 0.0, "avg_logprob": -0.2513576462155297, "compression_ratio": 1.5677083333333333, "no_speech_prob": 5.647277066600509e-05}, {"id": 502, "seek": 242000, "start": 2435.0, "end": 2446.0, "text": " This is a diadic. Yeah. Yeah. And it's, you know, another example of just composing this very small piece of functionality that.", "tokens": [639, 307, 257, 1026, 43341, 13, 865, 13, 865, 13, 400, 309, 311, 11, 291, 458, 11, 1071, 1365, 295, 445, 715, 6110, 341, 588, 1359, 2522, 295, 14980, 300, 13], "temperature": 0.0, "avg_logprob": -0.2513576462155297, "compression_ratio": 1.5677083333333333, "no_speech_prob": 5.647277066600509e-05}, {"id": 503, "seek": 244600, "start": 2446.0, "end": 2452.0, "text": " Yeah. So it's applying its left operand function cumulatively.", "tokens": [865, 13, 407, 309, 311, 9275, 1080, 1411, 2208, 474, 2445, 12713, 425, 19020, 13], "temperature": 0.0, "avg_logprob": -0.242952028910319, "compression_ratio": 1.2950819672131149, "no_speech_prob": 1.2804985090042464e-05}, {"id": 504, "seek": 244600, "start": 2452.0, "end": 2455.0, "text": " G times.", "tokens": [460, 1413, 13], "temperature": 0.0, "avg_logprob": -0.242952028910319, "compression_ratio": 1.2950819672131149, "no_speech_prob": 1.2804985090042464e-05}, {"id": 505, "seek": 244600, "start": 2455.0, "end": 2460.0, "text": " And if it's a dietic function, it's applied to repeat. Oh no, that's not what we want.", "tokens": [400, 498, 309, 311, 257, 6339, 299, 2445, 11, 309, 311, 6456, 281, 7149, 13, 876, 572, 11, 300, 311, 406, 437, 321, 528, 13], "temperature": 0.0, "avg_logprob": -0.242952028910319, "compression_ratio": 1.2950819672131149, "no_speech_prob": 1.2804985090042464e-05}, {"id": 506, "seek": 246000, "start": 2460.0, "end": 2476.0, "text": " Okay. Here we are. It's bound. So if there's a left argument, it's bound as the left argument. So we've basically seen this idea right of binding an argument. So that's basically what it's doing. It's, it's saying", "tokens": [1033, 13, 1692, 321, 366, 13, 467, 311, 5472, 13, 407, 498, 456, 311, 257, 1411, 6770, 11, 309, 311, 5472, 382, 264, 1411, 6770, 13, 407, 321, 600, 1936, 1612, 341, 1558, 558, 295, 17359, 364, 6770, 13, 407, 300, 311, 1936, 437, 309, 311, 884, 13, 467, 311, 11, 309, 311, 1566], "temperature": 0.0, "avg_logprob": -0.1556014060974121, "compression_ratio": 1.6368715083798884, "no_speech_prob": 1.1478295164124575e-05}, {"id": 507, "seek": 246000, "start": 2476.0, "end": 2484.0, "text": " that this is multiplied by alpha each time.", "tokens": [300, 341, 307, 17207, 538, 8961, 1184, 565, 13], "temperature": 0.0, "avg_logprob": -0.1556014060974121, "compression_ratio": 1.6368715083798884, "no_speech_prob": 1.1478295164124575e-05}, {"id": 508, "seek": 246000, "start": 2484.0, "end": 2488.0, "text": " Okay, now where it gets really fun.", "tokens": [1033, 11, 586, 689, 309, 2170, 534, 1019, 13], "temperature": 0.0, "avg_logprob": -0.1556014060974121, "compression_ratio": 1.6368715083798884, "no_speech_prob": 1.1478295164124575e-05}, {"id": 509, "seek": 248800, "start": 2488.0, "end": 2494.0, "text": " Is that you don't have to put a", "tokens": [1119, 300, 291, 500, 380, 362, 281, 829, 257], "temperature": 0.0, "avg_logprob": -0.12168821298851157, "compression_ratio": 1.4191176470588236, "no_speech_prob": 8.664322194817942e-06}, {"id": 510, "seek": 248800, "start": 2494.0, "end": 2497.0, "text": " number on the right.", "tokens": [1230, 322, 264, 558, 13], "temperature": 0.0, "avg_logprob": -0.12168821298851157, "compression_ratio": 1.4191176470588236, "no_speech_prob": 8.664322194817942e-06}, {"id": 511, "seek": 248800, "start": 2497.0, "end": 2504.0, "text": " You can put a function on the right.", "tokens": [509, 393, 829, 257, 2445, 322, 264, 558, 13], "temperature": 0.0, "avg_logprob": -0.12168821298851157, "compression_ratio": 1.4191176470588236, "no_speech_prob": 8.664322194817942e-06}, {"id": 512, "seek": 248800, "start": 2504.0, "end": 2510.0, "text": " And so this is going to come somewhere towards answering your question right about what's all this for.", "tokens": [400, 370, 341, 307, 516, 281, 808, 4079, 3030, 13430, 428, 1168, 558, 466, 437, 311, 439, 341, 337, 13], "temperature": 0.0, "avg_logprob": -0.12168821298851157, "compression_ratio": 1.4191176470588236, "no_speech_prob": 8.664322194817942e-06}, {"id": 513, "seek": 251000, "start": 2510.0, "end": 2519.0, "text": " So we've now got a sequence of five glyphs in a row.", "tokens": [407, 321, 600, 586, 658, 257, 8310, 295, 1732, 22633, 950, 82, 294, 257, 5386, 13], "temperature": 0.0, "avg_logprob": -0.14608968628777397, "compression_ratio": 1.5394736842105263, "no_speech_prob": 3.3930930385395186e-06}, {"id": 514, "seek": 251000, "start": 2519.0, "end": 2523.0, "text": " Okay, so what does that mean?", "tokens": [1033, 11, 370, 437, 775, 300, 914, 30], "temperature": 0.0, "avg_logprob": -0.14608968628777397, "compression_ratio": 1.5394736842105263, "no_speech_prob": 3.3930930385395186e-06}, {"id": 515, "seek": 251000, "start": 2523.0, "end": 2526.0, "text": " Well,", "tokens": [1042, 11], "temperature": 0.0, "avg_logprob": -0.14608968628777397, "compression_ratio": 1.5394736842105263, "no_speech_prob": 3.3930930385395186e-06}, {"id": 516, "seek": 251000, "start": 2526.0, "end": 2532.0, "text": " this glyph here we know it means take the reciprocal", "tokens": [341, 22633, 950, 510, 321, 458, 309, 1355, 747, 264, 46948], "temperature": 0.0, "avg_logprob": -0.14608968628777397, "compression_ratio": 1.5394736842105263, "no_speech_prob": 3.3930930385395186e-06}, {"id": 517, "seek": 251000, "start": 2532.0, "end": 2539.0, "text": " and then add and as this is on the left so it's going to be take the reciprocal and add one.", "tokens": [293, 550, 909, 293, 382, 341, 307, 322, 264, 1411, 370, 309, 311, 516, 281, 312, 747, 264, 46948, 293, 909, 472, 13], "temperature": 0.0, "avg_logprob": -0.14608968628777397, "compression_ratio": 1.5394736842105263, "no_speech_prob": 3.3930930385395186e-06}, {"id": 518, "seek": 253900, "start": 2539.0, "end": 2550.0, "text": " So let's try it. Let's just grab that.", "tokens": [407, 718, 311, 853, 309, 13, 961, 311, 445, 4444, 300, 13], "temperature": 0.0, "avg_logprob": -0.25427113327325557, "compression_ratio": 1.162162162162162, "no_speech_prob": 6.8541712607839145e-06}, {"id": 519, "seek": 253900, "start": 2550.0, "end": 2554.0, "text": " We'll call that F.", "tokens": [492, 603, 818, 300, 479, 13], "temperature": 0.0, "avg_logprob": -0.25427113327325557, "compression_ratio": 1.162162162162162, "no_speech_prob": 6.8541712607839145e-06}, {"id": 520, "seek": 253900, "start": 2554.0, "end": 2560.0, "text": " And so if we go F of one.", "tokens": [400, 370, 498, 321, 352, 479, 295, 472, 13], "temperature": 0.0, "avg_logprob": -0.25427113327325557, "compression_ratio": 1.162162162162162, "no_speech_prob": 6.8541712607839145e-06}, {"id": 521, "seek": 253900, "start": 2560.0, "end": 2565.0, "text": " Oh, and that's sorry. One F one I should say.", "tokens": [876, 11, 293, 300, 311, 2597, 13, 1485, 479, 472, 286, 820, 584, 13], "temperature": 0.0, "avg_logprob": -0.25427113327325557, "compression_ratio": 1.162162162162162, "no_speech_prob": 6.8541712607839145e-06}, {"id": 522, "seek": 256500, "start": 2565.0, "end": 2569.0, "text": " That equals two right because it takes the reciprocal of this.", "tokens": [663, 6915, 732, 558, 570, 309, 2516, 264, 46948, 295, 341, 13], "temperature": 0.0, "avg_logprob": -0.12291336896126731, "compression_ratio": 1.5434782608695652, "no_speech_prob": 8.01339319878025e-06}, {"id": 523, "seek": 256500, "start": 2569.0, "end": 2579.0, "text": " And then it applies plus to the result and the thing on the left. So one plus one is two.", "tokens": [400, 550, 309, 13165, 1804, 281, 264, 1874, 293, 264, 551, 322, 264, 1411, 13, 407, 472, 1804, 472, 307, 732, 13], "temperature": 0.0, "avg_logprob": -0.12291336896126731, "compression_ratio": 1.5434782608695652, "no_speech_prob": 8.01339319878025e-06}, {"id": 524, "seek": 256500, "start": 2579.0, "end": 2585.0, "text": " Because that's because of this. This is what we get if we do", "tokens": [1436, 300, 311, 570, 295, 341, 13, 639, 307, 437, 321, 483, 498, 321, 360], "temperature": 0.0, "avg_logprob": -0.12291336896126731, "compression_ratio": 1.5434782608695652, "no_speech_prob": 8.01339319878025e-06}, {"id": 525, "seek": 258500, "start": 2585.0, "end": 2595.0, "text": " beside we first apply reciprocal to the right and then we apply plus to the left and the result.", "tokens": [15726, 321, 700, 3079, 46948, 281, 264, 558, 293, 550, 321, 3079, 1804, 281, 264, 1411, 293, 264, 1874, 13], "temperature": 0.0, "avg_logprob": -0.0901409248973048, "compression_ratio": 2.023529411764706, "no_speech_prob": 3.187547235938837e-06}, {"id": 526, "seek": 258500, "start": 2595.0, "end": 2599.0, "text": " So the reciprocal of one is one.", "tokens": [407, 264, 46948, 295, 472, 307, 472, 13], "temperature": 0.0, "avg_logprob": -0.0901409248973048, "compression_ratio": 2.023529411764706, "no_speech_prob": 3.187547235938837e-06}, {"id": 527, "seek": 258500, "start": 2599.0, "end": 2605.0, "text": " And then the left hand side is one and the result of reciprocal is one. And so one plus one is two.", "tokens": [400, 550, 264, 1411, 1011, 1252, 307, 472, 293, 264, 1874, 295, 46948, 307, 472, 13, 400, 370, 472, 1804, 472, 307, 732, 13], "temperature": 0.0, "avg_logprob": -0.0901409248973048, "compression_ratio": 2.023529411764706, "no_speech_prob": 3.187547235938837e-06}, {"id": 528, "seek": 258500, "start": 2605.0, "end": 2613.0, "text": " And we could take the result of that and pass it back into exactly the same function with the same left hand side.", "tokens": [400, 321, 727, 747, 264, 1874, 295, 300, 293, 1320, 309, 646, 666, 2293, 264, 912, 2445, 365, 264, 912, 1411, 1011, 1252, 13], "temperature": 0.0, "avg_logprob": -0.0901409248973048, "compression_ratio": 2.023529411764706, "no_speech_prob": 3.187547235938837e-06}, {"id": 529, "seek": 261300, "start": 2613.0, "end": 2621.0, "text": " And we could do that again. Take the result of that and pass it into the right hand side.", "tokens": [400, 321, 727, 360, 300, 797, 13, 3664, 264, 1874, 295, 300, 293, 1320, 309, 666, 264, 558, 1011, 1252, 13], "temperature": 0.0, "avg_logprob": -0.09643335745368205, "compression_ratio": 1.698224852071006, "no_speech_prob": 1.4738606296305079e-05}, {"id": 530, "seek": 261300, "start": 2621.0, "end": 2625.0, "text": " And if we do this a bunch of times.", "tokens": [400, 498, 321, 360, 341, 257, 3840, 295, 1413, 13], "temperature": 0.0, "avg_logprob": -0.09643335745368205, "compression_ratio": 1.698224852071006, "no_speech_prob": 1.4738606296305079e-05}, {"id": 531, "seek": 261300, "start": 2625.0, "end": 2629.0, "text": " We actually are doing something quite interesting.", "tokens": [492, 767, 366, 884, 746, 1596, 1880, 13], "temperature": 0.0, "avg_logprob": -0.09643335745368205, "compression_ratio": 1.698224852071006, "no_speech_prob": 1.4738606296305079e-05}, {"id": 532, "seek": 261300, "start": 2629.0, "end": 2633.0, "text": " Which is we're creating something called a continued fraction.", "tokens": [3013, 307, 321, 434, 4084, 746, 1219, 257, 7014, 14135, 13], "temperature": 0.0, "avg_logprob": -0.09643335745368205, "compression_ratio": 1.698224852071006, "no_speech_prob": 1.4738606296305079e-05}, {"id": 533, "seek": 261300, "start": 2633.0, "end": 2639.0, "text": " And the continued fraction that we're creating.", "tokens": [400, 264, 7014, 14135, 300, 321, 434, 4084, 13], "temperature": 0.0, "avg_logprob": -0.09643335745368205, "compression_ratio": 1.698224852071006, "no_speech_prob": 1.4738606296305079e-05}, {"id": 534, "seek": 263900, "start": 2639.0, "end": 2646.0, "text": " Is this one.", "tokens": [1119, 341, 472, 13], "temperature": 0.0, "avg_logprob": -0.15264014075784121, "compression_ratio": 2.103448275862069, "no_speech_prob": 1.568889456393663e-05}, {"id": 535, "seek": 263900, "start": 2646.0, "end": 2653.0, "text": " So we started with one plus one over one. And then we made it one plus one over.", "tokens": [407, 321, 1409, 365, 472, 1804, 472, 670, 472, 13, 400, 550, 321, 1027, 309, 472, 1804, 472, 670, 13], "temperature": 0.0, "avg_logprob": -0.15264014075784121, "compression_ratio": 2.103448275862069, "no_speech_prob": 1.568889456393663e-05}, {"id": 536, "seek": 263900, "start": 2653.0, "end": 2658.0, "text": " So when we made it one plus one over that then we made it one plus one over that and we made it one plus one over that.", "tokens": [407, 562, 321, 1027, 309, 472, 1804, 472, 670, 300, 550, 321, 1027, 309, 472, 1804, 472, 670, 300, 293, 321, 1027, 309, 472, 1804, 472, 670, 300, 13], "temperature": 0.0, "avg_logprob": -0.15264014075784121, "compression_ratio": 2.103448275862069, "no_speech_prob": 1.568889456393663e-05}, {"id": 537, "seek": 263900, "start": 2658.0, "end": 2662.0, "text": " Now if we keep doing that enough times.", "tokens": [823, 498, 321, 1066, 884, 300, 1547, 1413, 13], "temperature": 0.0, "avg_logprob": -0.15264014075784121, "compression_ratio": 2.103448275862069, "no_speech_prob": 1.568889456393663e-05}, {"id": 538, "seek": 263900, "start": 2662.0, "end": 2666.0, "text": " Eventually we're going to get a number called five.", "tokens": [17586, 321, 434, 516, 281, 483, 257, 1230, 1219, 1732, 13], "temperature": 0.0, "avg_logprob": -0.15264014075784121, "compression_ratio": 2.103448275862069, "no_speech_prob": 1.568889456393663e-05}, {"id": 539, "seek": 266600, "start": 2666.0, "end": 2678.0, "text": " And phi is also known as the golden ratio.", "tokens": [400, 13107, 307, 611, 2570, 382, 264, 9729, 8509, 13], "temperature": 0.0, "avg_logprob": -0.22439908981323242, "compression_ratio": 1.3924050632911393, "no_speech_prob": 2.6271749447914772e-05}, {"id": 540, "seek": 266600, "start": 2678.0, "end": 2684.0, "text": " And the golden ratio by the golden ratio appears in nature and art.", "tokens": [400, 264, 9729, 8509, 538, 264, 9729, 8509, 7038, 294, 3687, 293, 1523, 13], "temperature": 0.0, "avg_logprob": -0.22439908981323242, "compression_ratio": 1.3924050632911393, "no_speech_prob": 2.6271749447914772e-05}, {"id": 541, "seek": 268400, "start": 2684.0, "end": 2697.0, "text": " Basically everywhere.", "tokens": [8537, 5315, 13], "temperature": 0.0, "avg_logprob": -0.17022242148717245, "compression_ratio": 1.4841269841269842, "no_speech_prob": 3.704277696670033e-05}, {"id": 542, "seek": 268400, "start": 2697.0, "end": 2700.0, "text": " So basically it appears in nature.", "tokens": [407, 1936, 309, 7038, 294, 3687, 13], "temperature": 0.0, "avg_logprob": -0.17022242148717245, "compression_ratio": 1.4841269841269842, "no_speech_prob": 3.704277696670033e-05}, {"id": 543, "seek": 268400, "start": 2700.0, "end": 2706.0, "text": " When we look at kind of the proportions of things it appears as the ratio is in famous paintings.", "tokens": [1133, 321, 574, 412, 733, 295, 264, 32482, 295, 721, 309, 7038, 382, 264, 8509, 307, 294, 4618, 14880, 13], "temperature": 0.0, "avg_logprob": -0.17022242148717245, "compression_ratio": 1.4841269841269842, "no_speech_prob": 3.704277696670033e-05}, {"id": 544, "seek": 268400, "start": 2706.0, "end": 2710.0, "text": " It appears on the snail's shell.", "tokens": [467, 7038, 322, 264, 42555, 311, 8720, 13], "temperature": 0.0, "avg_logprob": -0.17022242148717245, "compression_ratio": 1.4841269841269842, "no_speech_prob": 3.704277696670033e-05}, {"id": 545, "seek": 271000, "start": 2710.0, "end": 2714.0, "text": " It's this number that appears everywhere.", "tokens": [467, 311, 341, 1230, 300, 7038, 5315, 13], "temperature": 0.0, "avg_logprob": -0.12014853954315186, "compression_ratio": 1.3943661971830985, "no_speech_prob": 2.4681256036274135e-05}, {"id": 546, "seek": 271000, "start": 2714.0, "end": 2718.0, "text": " And why are we talking about it?", "tokens": [400, 983, 366, 321, 1417, 466, 309, 30], "temperature": 0.0, "avg_logprob": -0.12014853954315186, "compression_ratio": 1.3943661971830985, "no_speech_prob": 2.4681256036274135e-05}, {"id": 547, "seek": 271000, "start": 2718.0, "end": 2724.0, "text": " Well we can calculate it by typing this again and again and again.", "tokens": [1042, 321, 393, 8873, 309, 538, 18444, 341, 797, 293, 797, 293, 797, 13], "temperature": 0.0, "avg_logprob": -0.12014853954315186, "compression_ratio": 1.3943661971830985, "no_speech_prob": 2.4681256036274135e-05}, {"id": 548, "seek": 271000, "start": 2724.0, "end": 2735.0, "text": " But that's going to get pretty boring.", "tokens": [583, 300, 311, 516, 281, 483, 1238, 9989, 13], "temperature": 0.0, "avg_logprob": -0.12014853954315186, "compression_ratio": 1.3943661971830985, "no_speech_prob": 2.4681256036274135e-05}, {"id": 549, "seek": 271000, "start": 2735.0, "end": 2738.0, "text": " We could do this.", "tokens": [492, 727, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.12014853954315186, "compression_ratio": 1.3943661971830985, "no_speech_prob": 2.4681256036274135e-05}, {"id": 550, "seek": 273800, "start": 2738.0, "end": 2741.0, "text": " Right. So that's going to do one over.", "tokens": [1779, 13, 407, 300, 311, 516, 281, 360, 472, 670, 13], "temperature": 0.0, "avg_logprob": -0.16539910782215206, "compression_ratio": 2.186991869918699, "no_speech_prob": 2.546486575738527e-05}, {"id": 551, "seek": 273800, "start": 2741.0, "end": 2743.0, "text": " Sorry one plus one over one.", "tokens": [4919, 472, 1804, 472, 670, 472, 13], "temperature": 0.0, "avg_logprob": -0.16539910782215206, "compression_ratio": 2.186991869918699, "no_speech_prob": 2.546486575738527e-05}, {"id": 552, "seek": 273800, "start": 2743.0, "end": 2745.0, "text": " And then it's going to do one over that.", "tokens": [400, 550, 309, 311, 516, 281, 360, 472, 670, 300, 13], "temperature": 0.0, "avg_logprob": -0.16539910782215206, "compression_ratio": 2.186991869918699, "no_speech_prob": 2.546486575738527e-05}, {"id": 553, "seek": 273800, "start": 2745.0, "end": 2746.0, "text": " And that's going to be one over that.", "tokens": [400, 300, 311, 516, 281, 312, 472, 670, 300, 13], "temperature": 0.0, "avg_logprob": -0.16539910782215206, "compression_ratio": 2.186991869918699, "no_speech_prob": 2.546486575738527e-05}, {"id": 554, "seek": 273800, "start": 2746.0, "end": 2748.0, "text": " That's going to be one over that.", "tokens": [663, 311, 516, 281, 312, 472, 670, 300, 13], "temperature": 0.0, "avg_logprob": -0.16539910782215206, "compression_ratio": 2.186991869918699, "no_speech_prob": 2.546486575738527e-05}, {"id": 555, "seek": 273800, "start": 2748.0, "end": 2753.0, "text": " It's going to do one over that.", "tokens": [467, 311, 516, 281, 360, 472, 670, 300, 13], "temperature": 0.0, "avg_logprob": -0.16539910782215206, "compression_ratio": 2.186991869918699, "no_speech_prob": 2.546486575738527e-05}, {"id": 556, "seek": 273800, "start": 2753.0, "end": 2760.0, "text": " And I think we now know that we could replace that with.", "tokens": [400, 286, 519, 321, 586, 458, 300, 321, 727, 7406, 300, 365, 13], "temperature": 0.0, "avg_logprob": -0.16539910782215206, "compression_ratio": 2.186991869918699, "no_speech_prob": 2.546486575738527e-05}, {"id": 557, "seek": 276000, "start": 2760.0, "end": 2768.0, "text": " Just do F a bunch of times.", "tokens": [1449, 360, 479, 257, 3840, 295, 1413, 13], "temperature": 0.0, "avg_logprob": -0.14864360963976062, "compression_ratio": 1.396551724137931, "no_speech_prob": 1.5688985513406806e-05}, {"id": 558, "seek": 276000, "start": 2768.0, "end": 2771.0, "text": " So that's nice because now we can like go a bit further and get.", "tokens": [407, 300, 311, 1481, 570, 586, 321, 393, 411, 352, 257, 857, 3052, 293, 483, 13], "temperature": 0.0, "avg_logprob": -0.14864360963976062, "compression_ratio": 1.396551724137931, "no_speech_prob": 1.5688985513406806e-05}, {"id": 559, "seek": 276000, "start": 2771.0, "end": 2778.0, "text": " That's actually a pretty good estimate of the golden ratio.", "tokens": [663, 311, 767, 257, 1238, 665, 12539, 295, 264, 9729, 8509, 13], "temperature": 0.0, "avg_logprob": -0.14864360963976062, "compression_ratio": 1.396551724137931, "no_speech_prob": 1.5688985513406806e-05}, {"id": 560, "seek": 276000, "start": 2778.0, "end": 2783.0, "text": " There you go. Yep. About one to one point six one eight.", "tokens": [821, 291, 352, 13, 7010, 13, 7769, 472, 281, 472, 935, 2309, 472, 3180, 13], "temperature": 0.0, "avg_logprob": -0.14864360963976062, "compression_ratio": 1.396551724137931, "no_speech_prob": 1.5688985513406806e-05}, {"id": 561, "seek": 276000, "start": 2783.0, "end": 2786.0, "text": " Does that make sense so far?", "tokens": [4402, 300, 652, 2020, 370, 1400, 30], "temperature": 0.0, "avg_logprob": -0.14864360963976062, "compression_ratio": 1.396551724137931, "no_speech_prob": 1.5688985513406806e-05}, {"id": 562, "seek": 276000, "start": 2786.0, "end": 2787.0, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.14864360963976062, "compression_ratio": 1.396551724137931, "no_speech_prob": 1.5688985513406806e-05}, {"id": 563, "seek": 278700, "start": 2787.0, "end": 2792.0, "text": " All right. But how do we know how far to go?", "tokens": [1057, 558, 13, 583, 577, 360, 321, 458, 577, 1400, 281, 352, 30], "temperature": 0.0, "avg_logprob": -0.11158555129478717, "compression_ratio": 1.3375796178343948, "no_speech_prob": 6.2408525991486385e-06}, {"id": 564, "seek": 278700, "start": 2792.0, "end": 2798.0, "text": " Well basically we want to keep on applying F until the next time we apply F.", "tokens": [1042, 1936, 321, 528, 281, 1066, 322, 9275, 479, 1826, 264, 958, 565, 321, 3079, 479, 13], "temperature": 0.0, "avg_logprob": -0.11158555129478717, "compression_ratio": 1.3375796178343948, "no_speech_prob": 6.2408525991486385e-06}, {"id": 565, "seek": 278700, "start": 2798.0, "end": 2804.0, "text": " The result doesn't change to within floating point error.", "tokens": [440, 1874, 1177, 380, 1319, 281, 1951, 12607, 935, 6713, 13], "temperature": 0.0, "avg_logprob": -0.11158555129478717, "compression_ratio": 1.3375796178343948, "no_speech_prob": 6.2408525991486385e-06}, {"id": 566, "seek": 278700, "start": 2804.0, "end": 2813.0, "text": " If you replace 15 with equals.", "tokens": [759, 291, 7406, 2119, 365, 6915, 13], "temperature": 0.0, "avg_logprob": -0.11158555129478717, "compression_ratio": 1.3375796178343948, "no_speech_prob": 6.2408525991486385e-06}, {"id": 567, "seek": 281300, "start": 2813.0, "end": 2819.0, "text": " Then the power operator if you put this on the right hand side repeats this function again and again and again.", "tokens": [1396, 264, 1347, 12973, 498, 291, 829, 341, 322, 264, 558, 1011, 1252, 35038, 341, 2445, 797, 293, 797, 293, 797, 13], "temperature": 0.0, "avg_logprob": -0.08992889363278625, "compression_ratio": 1.9033816425120773, "no_speech_prob": 9.874582929114695e-07}, {"id": 568, "seek": 281300, "start": 2819.0, "end": 2824.0, "text": " And each time it passes to this function the previous result and the current result.", "tokens": [400, 1184, 565, 309, 11335, 281, 341, 2445, 264, 3894, 1874, 293, 264, 2190, 1874, 13], "temperature": 0.0, "avg_logprob": -0.08992889363278625, "compression_ratio": 1.9033816425120773, "no_speech_prob": 9.874582929114695e-07}, {"id": 569, "seek": 281300, "start": 2824.0, "end": 2830.0, "text": " And it stops if this function returns one.", "tokens": [400, 309, 10094, 498, 341, 2445, 11247, 472, 13], "temperature": 0.0, "avg_logprob": -0.08992889363278625, "compression_ratio": 1.9033816425120773, "no_speech_prob": 9.874582929114695e-07}, {"id": 570, "seek": 281300, "start": 2830.0, "end": 2833.0, "text": " And in math we call that the fixed point.", "tokens": [400, 294, 5221, 321, 818, 300, 264, 6806, 935, 13], "temperature": 0.0, "avg_logprob": -0.08992889363278625, "compression_ratio": 1.9033816425120773, "no_speech_prob": 9.874582929114695e-07}, {"id": 571, "seek": 281300, "start": 2833.0, "end": 2840.0, "text": " The fixed point of a function is the point at which or sequence I guess is the point at which it stops changing.", "tokens": [440, 6806, 935, 295, 257, 2445, 307, 264, 935, 412, 597, 420, 8310, 286, 2041, 307, 264, 935, 412, 597, 309, 10094, 4473, 13], "temperature": 0.0, "avg_logprob": -0.08992889363278625, "compression_ratio": 1.9033816425120773, "no_speech_prob": 9.874582929114695e-07}, {"id": 572, "seek": 284000, "start": 2840.0, "end": 2843.0, "text": " So there's exactly the same thing.", "tokens": [407, 456, 311, 2293, 264, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.10410020225926449, "compression_ratio": 1.6065573770491803, "no_speech_prob": 1.6536638440811657e-06}, {"id": 573, "seek": 284000, "start": 2843.0, "end": 2846.0, "text": " But iterated exactly the amount of times.", "tokens": [583, 17138, 770, 2293, 264, 2372, 295, 1413, 13], "temperature": 0.0, "avg_logprob": -0.10410020225926449, "compression_ratio": 1.6065573770491803, "no_speech_prob": 1.6536638440811657e-06}, {"id": 574, "seek": 284000, "start": 2846.0, "end": 2849.0, "text": " I'm not sure how to change the precision that we print out things here.", "tokens": [286, 478, 406, 988, 577, 281, 1319, 264, 18356, 300, 321, 4482, 484, 721, 510, 13], "temperature": 0.0, "avg_logprob": -0.10410020225926449, "compression_ratio": 1.6065573770491803, "no_speech_prob": 1.6536638440811657e-06}, {"id": 575, "seek": 284000, "start": 2849.0, "end": 2857.0, "text": " But if you printed this out in high precision and then passed it to itself again it wouldn't change.", "tokens": [583, 498, 291, 13567, 341, 484, 294, 1090, 18356, 293, 550, 4678, 309, 281, 2564, 797, 309, 2759, 380, 1319, 13], "temperature": 0.0, "avg_logprob": -0.10410020225926449, "compression_ratio": 1.6065573770491803, "no_speech_prob": 1.6536638440811657e-06}, {"id": 576, "seek": 284000, "start": 2857.0, "end": 2864.0, "text": " And so if you replace F with its definition.", "tokens": [400, 370, 498, 291, 7406, 479, 365, 1080, 7123, 13], "temperature": 0.0, "avg_logprob": -0.10410020225926449, "compression_ratio": 1.6065573770491803, "no_speech_prob": 1.6536638440811657e-06}, {"id": 577, "seek": 286400, "start": 2864.0, "end": 2871.0, "text": " Which is this. Then you get that.", "tokens": [3013, 307, 341, 13, 1396, 291, 483, 300, 13], "temperature": 0.0, "avg_logprob": -0.14551565987723214, "compression_ratio": 1.507936507936508, "no_speech_prob": 2.2470136173069477e-05}, {"id": 578, "seek": 286400, "start": 2871.0, "end": 2886.0, "text": " And so the answer to your question of like what's all this for is so that we can write short concise mathematical expressions for things like here's the fixed point of the continued fraction that calculates flight.", "tokens": [400, 370, 264, 1867, 281, 428, 1168, 295, 411, 437, 311, 439, 341, 337, 307, 370, 300, 321, 393, 2464, 2099, 44882, 18894, 15277, 337, 721, 411, 510, 311, 264, 6806, 935, 295, 264, 7014, 14135, 300, 4322, 1024, 7018, 13], "temperature": 0.0, "avg_logprob": -0.14551565987723214, "compression_ratio": 1.507936507936508, "no_speech_prob": 2.2470136173069477e-05}, {"id": 579, "seek": 286400, "start": 2886.0, "end": 2888.0, "text": " Is that kind of mind blowing?", "tokens": [1119, 300, 733, 295, 1575, 15068, 30], "temperature": 0.0, "avg_logprob": -0.14551565987723214, "compression_ratio": 1.507936507936508, "no_speech_prob": 2.2470136173069477e-05}, {"id": 580, "seek": 286400, "start": 2888.0, "end": 2890.0, "text": " It is.", "tokens": [467, 307, 13], "temperature": 0.0, "avg_logprob": -0.14551565987723214, "compression_ratio": 1.507936507936508, "no_speech_prob": 2.2470136173069477e-05}, {"id": 581, "seek": 289000, "start": 2890.0, "end": 2894.0, "text": " Very much so.", "tokens": [4372, 709, 370, 13], "temperature": 0.0, "avg_logprob": -0.20482925746751868, "compression_ratio": 1.2522522522522523, "no_speech_prob": 3.821647260338068e-05}, {"id": 582, "seek": 289000, "start": 2894.0, "end": 2895.0, "text": " But it's amazing.", "tokens": [583, 309, 311, 2243, 13], "temperature": 0.0, "avg_logprob": -0.20482925746751868, "compression_ratio": 1.2522522522522523, "no_speech_prob": 3.821647260338068e-05}, {"id": 583, "seek": 289000, "start": 2895.0, "end": 2899.0, "text": " It is amazing.", "tokens": [467, 307, 2243, 13], "temperature": 0.0, "avg_logprob": -0.20482925746751868, "compression_ratio": 1.2522522522522523, "no_speech_prob": 3.821647260338068e-05}, {"id": 584, "seek": 289000, "start": 2899.0, "end": 2906.0, "text": " And you know yeah there's something delightful I think, at least to me, about", "tokens": [400, 291, 458, 1338, 456, 311, 746, 35194, 286, 519, 11, 412, 1935, 281, 385, 11, 466], "temperature": 0.0, "avg_logprob": -0.20482925746751868, "compression_ratio": 1.2522522522522523, "no_speech_prob": 3.821647260338068e-05}, {"id": 585, "seek": 289000, "start": 2906.0, "end": 2908.0, "text": " you know like,", "tokens": [291, 458, 411, 11], "temperature": 0.0, "avg_logprob": -0.20482925746751868, "compression_ratio": 1.2522522522522523, "no_speech_prob": 3.821647260338068e-05}, {"id": 586, "seek": 290800, "start": 2908.0, "end": 2924.0, "text": " analyzing notation can take you this far.", "tokens": [23663, 24657, 393, 747, 291, 341, 1400, 13], "temperature": 0.0, "avg_logprob": -0.21429048582564952, "compression_ratio": 1.38135593220339, "no_speech_prob": 3.6111491681367625e-06}, {"id": 587, "seek": 290800, "start": 2924.0, "end": 2931.0, "text": " And this, you know, and this doesn't even you kind of put this in a computer because what the hell does dot dot dot mean?", "tokens": [400, 341, 11, 291, 458, 11, 293, 341, 1177, 380, 754, 291, 733, 295, 829, 341, 294, 257, 3820, 570, 437, 264, 4921, 775, 5893, 5893, 5893, 914, 30], "temperature": 0.0, "avg_logprob": -0.21429048582564952, "compression_ratio": 1.38135593220339, "no_speech_prob": 3.6111491681367625e-06}, {"id": 588, "seek": 293100, "start": 2931.0, "end": 2938.0, "text": " It's like, oh a human ought to be able to guess what goes here.", "tokens": [467, 311, 411, 11, 1954, 257, 1952, 13416, 281, 312, 1075, 281, 2041, 437, 1709, 510, 13], "temperature": 0.0, "avg_logprob": -0.1475184640766662, "compression_ratio": 1.6326530612244898, "no_speech_prob": 4.784650172950933e-06}, {"id": 589, "seek": 293100, "start": 2938.0, "end": 2947.0, "text": " So, yeah I think it's beautiful. It's a beautiful notation it's a powerful notation and it lets us express concept complex things fairly simply.", "tokens": [407, 11, 1338, 286, 519, 309, 311, 2238, 13, 467, 311, 257, 2238, 24657, 309, 311, 257, 4005, 24657, 293, 309, 6653, 505, 5109, 3410, 3997, 721, 6457, 2935, 13], "temperature": 0.0, "avg_logprob": -0.1475184640766662, "compression_ratio": 1.6326530612244898, "no_speech_prob": 4.784650172950933e-06}, {"id": 590, "seek": 293100, "start": 2947.0, "end": 2956.0, "text": " Like, once we get the idea. And the nice thing is then like, because we were able to express this quite simply.", "tokens": [1743, 11, 1564, 321, 483, 264, 1558, 13, 400, 264, 1481, 551, 307, 550, 411, 11, 570, 321, 645, 1075, 281, 5109, 341, 1596, 2935, 13], "temperature": 0.0, "avg_logprob": -0.1475184640766662, "compression_ratio": 1.6326530612244898, "no_speech_prob": 4.784650172950933e-06}, {"id": 591, "seek": 295600, "start": 2956.0, "end": 2965.0, "text": " Then we can use that as a thing that we then go create another layer of abstraction on top of that we use that as an input to something else.", "tokens": [1396, 321, 393, 764, 300, 382, 257, 551, 300, 321, 550, 352, 1884, 1071, 4583, 295, 37765, 322, 1192, 295, 300, 321, 764, 300, 382, 364, 4846, 281, 746, 1646, 13], "temperature": 0.0, "avg_logprob": -0.14083072576629982, "compression_ratio": 1.735, "no_speech_prob": 3.089369783992879e-06}, {"id": 592, "seek": 295600, "start": 2965.0, "end": 2973.0, "text": " You know, so it's because that, you know, if we didn't have this kind of bind, sorry this is a beside composition idea then", "tokens": [509, 458, 11, 370, 309, 311, 570, 300, 11, 291, 458, 11, 498, 321, 994, 380, 362, 341, 733, 295, 14786, 11, 2597, 341, 307, 257, 15726, 12686, 1558, 550], "temperature": 0.0, "avg_logprob": -0.14083072576629982, "compression_ratio": 1.735, "no_speech_prob": 3.089369783992879e-06}, {"id": 593, "seek": 295600, "start": 2973.0, "end": 2977.0, "text": " this whole thing wouldn't really have worked, you know.", "tokens": [341, 1379, 551, 2759, 380, 534, 362, 2732, 11, 291, 458, 13], "temperature": 0.0, "avg_logprob": -0.14083072576629982, "compression_ratio": 1.735, "no_speech_prob": 3.089369783992879e-06}, {"id": 594, "seek": 295600, "start": 2977.0, "end": 2982.0, "text": " We can use these ideas in", "tokens": [492, 393, 764, 613, 3487, 294], "temperature": 0.0, "avg_logprob": -0.14083072576629982, "compression_ratio": 1.735, "no_speech_prob": 3.089369783992879e-06}, {"id": 595, "seek": 298200, "start": 2982.0, "end": 2990.0, "text": " Python as well. In Python, you can do function composition.", "tokens": [15329, 382, 731, 13, 682, 15329, 11, 291, 393, 360, 2445, 12686, 13], "temperature": 0.0, "avg_logprob": -0.18718285787673222, "compression_ratio": 1.2734375, "no_speech_prob": 1.3418800335784908e-05}, {"id": 596, "seek": 298200, "start": 2990.0, "end": 2996.0, "text": " And I think last call might have something if I remember correctly.", "tokens": [400, 286, 519, 1036, 818, 1062, 362, 746, 498, 286, 1604, 8944, 13], "temperature": 0.0, "avg_logprob": -0.18718285787673222, "compression_ratio": 1.2734375, "no_speech_prob": 1.3418800335784908e-05}, {"id": 597, "seek": 298200, "start": 2996.0, "end": 3004.0, "text": " I can't quite remember what's where", "tokens": [286, 393, 380, 1596, 1604, 437, 311, 689], "temperature": 0.0, "avg_logprob": -0.18718285787673222, "compression_ratio": 1.2734375, "no_speech_prob": 1.3418800335784908e-05}, {"id": 598, "seek": 300400, "start": 3004.0, "end": 3013.0, "text": " the partials that compose. So, this is the same as beside an appeal.", "tokens": [264, 644, 12356, 300, 35925, 13, 407, 11, 341, 307, 264, 912, 382, 15726, 364, 13668, 13], "temperature": 0.0, "avg_logprob": -0.23892019562802072, "compression_ratio": 1.5454545454545454, "no_speech_prob": 7.182693934737472e-06}, {"id": 599, "seek": 300400, "start": 3013.0, "end": 3020.0, "text": " So you can pass it a list of functions. So for example, here's", "tokens": [407, 291, 393, 1320, 309, 257, 1329, 295, 6828, 13, 407, 337, 1365, 11, 510, 311], "temperature": 0.0, "avg_logprob": -0.23892019562802072, "compression_ratio": 1.5454545454545454, "no_speech_prob": 7.182693934737472e-06}, {"id": 600, "seek": 300400, "start": 3020.0, "end": 3027.0, "text": " one function and here's another function and then here we are composing the two together.", "tokens": [472, 2445, 293, 510, 311, 1071, 2445, 293, 550, 510, 321, 366, 715, 6110, 264, 732, 1214, 13], "temperature": 0.0, "avg_logprob": -0.23892019562802072, "compression_ratio": 1.5454545454545454, "no_speech_prob": 7.182693934737472e-06}, {"id": 601, "seek": 302700, "start": 3027.0, "end": 3037.0, "text": " It goes in the opposite order, I think. So it applies F1 first and then F2.", "tokens": [467, 1709, 294, 264, 6182, 1668, 11, 286, 519, 13, 407, 309, 13165, 479, 16, 700, 293, 550, 479, 17, 13], "temperature": 0.0, "avg_logprob": -0.23903940684759795, "compression_ratio": 1.360248447204969, "no_speech_prob": 7.527652542194119e-06}, {"id": 602, "seek": 302700, "start": 3037.0, "end": 3042.0, "text": " Sorry, what you're saying?", "tokens": [4919, 11, 437, 291, 434, 1566, 30], "temperature": 0.0, "avg_logprob": -0.23903940684759795, "compression_ratio": 1.360248447204969, "no_speech_prob": 7.527652542194119e-06}, {"id": 603, "seek": 302700, "start": 3042.0, "end": 3047.0, "text": " Oh, no, I was going to point you to the compose function, but you found it before I said anything.", "tokens": [876, 11, 572, 11, 286, 390, 516, 281, 935, 291, 281, 264, 35925, 2445, 11, 457, 291, 1352, 309, 949, 286, 848, 1340, 13], "temperature": 0.0, "avg_logprob": -0.23903940684759795, "compression_ratio": 1.360248447204969, "no_speech_prob": 7.527652542194119e-06}, {"id": 604, "seek": 302700, "start": 3047.0, "end": 3050.0, "text": " Yeah, no worries.", "tokens": [865, 11, 572, 16340, 13], "temperature": 0.0, "avg_logprob": -0.23903940684759795, "compression_ratio": 1.360248447204969, "no_speech_prob": 7.527652542194119e-06}, {"id": 605, "seek": 305000, "start": 3050.0, "end": 3063.0, "text": " And there's a bunch of things like this in fast course. So for example, I really like partial. So I created a better version of partial, which doesn't throw away documentation.", "tokens": [400, 456, 311, 257, 3840, 295, 721, 411, 341, 294, 2370, 1164, 13, 407, 337, 1365, 11, 286, 534, 411, 14641, 13, 407, 286, 2942, 257, 1101, 3037, 295, 14641, 11, 597, 1177, 380, 3507, 1314, 14333, 13], "temperature": 0.0, "avg_logprob": -0.14821675971702294, "compression_ratio": 1.425, "no_speech_prob": 7.071619165799348e-06}, {"id": 606, "seek": 305000, "start": 3063.0, "end": 3069.0, "text": " This is basically the same as kind of broadcasting.", "tokens": [639, 307, 1936, 264, 912, 382, 733, 295, 30024, 13], "temperature": 0.0, "avg_logprob": -0.14821675971702294, "compression_ratio": 1.425, "no_speech_prob": 7.071619165799348e-06}, {"id": 607, "seek": 306900, "start": 3069.0, "end": 3081.0, "text": " Here we are. I created my own bind class. Now I created all these before I did much with APL because they used another functional programming languages.", "tokens": [1692, 321, 366, 13, 286, 2942, 452, 1065, 14786, 1508, 13, 823, 286, 2942, 439, 613, 949, 286, 630, 709, 365, 5372, 43, 570, 436, 1143, 1071, 11745, 9410, 8650, 13], "temperature": 0.0, "avg_logprob": -0.18970114724677906, "compression_ratio": 1.396341463414634, "no_speech_prob": 9.079950359591749e-06}, {"id": 608, "seek": 306900, "start": 3081.0, "end": 3092.0, "text": " Possibly, possibly, or maybe even probably APL did them first. I'm not sure.", "tokens": [33112, 3545, 11, 6264, 11, 420, 1310, 754, 1391, 5372, 43, 630, 552, 700, 13, 286, 478, 406, 988, 13], "temperature": 0.0, "avg_logprob": -0.18970114724677906, "compression_ratio": 1.396341463414634, "no_speech_prob": 9.079950359591749e-06}, {"id": 609, "seek": 309200, "start": 3092.0, "end": 3101.0, "text": " There's a there's actually a whole academic world.", "tokens": [821, 311, 257, 456, 311, 767, 257, 1379, 7778, 1002, 13], "temperature": 0.0, "avg_logprob": -0.24228361303156074, "compression_ratio": 1.3398692810457515, "no_speech_prob": 4.6372315409826115e-06}, {"id": 610, "seek": 309200, "start": 3101.0, "end": 3109.0, "text": " What complementary logic, which is all about", "tokens": [708, 40705, 9952, 11, 597, 307, 439, 466], "temperature": 0.0, "avg_logprob": -0.24228361303156074, "compression_ratio": 1.3398692810457515, "no_speech_prob": 4.6372315409826115e-06}, {"id": 611, "seek": 309200, "start": 3109.0, "end": 3112.0, "text": " they go eliminate the need for variables.", "tokens": [436, 352, 13819, 264, 643, 337, 9102, 13], "temperature": 0.0, "avg_logprob": -0.24228361303156074, "compression_ratio": 1.3398692810457515, "no_speech_prob": 4.6372315409826115e-06}, {"id": 612, "seek": 309200, "start": 3112.0, "end": 3115.0, "text": " Kind of like point free programming.", "tokens": [9242, 295, 411, 935, 1737, 9410, 13], "temperature": 0.0, "avg_logprob": -0.24228361303156074, "compression_ratio": 1.3398692810457515, "no_speech_prob": 4.6372315409826115e-06}, {"id": 613, "seek": 309200, "start": 3115.0, "end": 3120.0, "text": " And the ideas that are in APL.", "tokens": [400, 264, 3487, 300, 366, 294, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.24228361303156074, "compression_ratio": 1.3398692810457515, "no_speech_prob": 4.6372315409826115e-06}, {"id": 614, "seek": 312000, "start": 3120.0, "end": 3131.0, "text": " I wouldn't say they come from combinatorial logic because nobody knows if Ken Iverson had ever seen this stuff before. It's quite possible he reinvented all this from scratch.", "tokens": [286, 2759, 380, 584, 436, 808, 490, 2512, 31927, 831, 9952, 570, 5079, 3255, 498, 8273, 286, 840, 266, 632, 1562, 1612, 341, 1507, 949, 13, 467, 311, 1596, 1944, 415, 33477, 292, 439, 341, 490, 8459, 13], "temperature": 0.0, "avg_logprob": -0.1563763936360677, "compression_ratio": 1.4832535885167464, "no_speech_prob": 1.1124927368655335e-05}, {"id": 615, "seek": 312000, "start": 3131.0, "end": 3134.0, "text": " But it turns out they're all exactly the same.", "tokens": [583, 309, 4523, 484, 436, 434, 439, 2293, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.1563763936360677, "compression_ratio": 1.4832535885167464, "no_speech_prob": 1.1124927368655335e-05}, {"id": 616, "seek": 312000, "start": 3134.0, "end": 3145.0, "text": " And something that Connor in the Arraycast podcast mentioned, which I has just arrived,", "tokens": [400, 746, 300, 33133, 294, 264, 1587, 3458, 3734, 7367, 2835, 11, 597, 286, 575, 445, 6678, 11], "temperature": 0.0, "avg_logprob": -0.1563763936360677, "compression_ratio": 1.4832535885167464, "no_speech_prob": 1.1124927368655335e-05}, {"id": 617, "seek": 314500, "start": 3145.0, "end": 3158.0, "text": " is that there's a book of puzzles, which actually cover lots of the combinatorial logic", "tokens": [307, 300, 456, 311, 257, 1446, 295, 24138, 11, 597, 767, 2060, 3195, 295, 264, 2512, 31927, 831, 9952], "temperature": 0.0, "avg_logprob": -0.13687185711330838, "compression_ratio": 1.2421875, "no_speech_prob": 9.815241355681792e-06}, {"id": 618, "seek": 314500, "start": 3158.0, "end": 3160.0, "text": " ideas.", "tokens": [3487, 13], "temperature": 0.0, "avg_logprob": -0.13687185711330838, "compression_ratio": 1.2421875, "no_speech_prob": 9.815241355681792e-06}, {"id": 619, "seek": 314500, "start": 3160.0, "end": 3168.0, "text": " So, I will let you know once I start going through what I think.", "tokens": [407, 11, 286, 486, 718, 291, 458, 1564, 286, 722, 516, 807, 437, 286, 519, 13], "temperature": 0.0, "avg_logprob": -0.13687185711330838, "compression_ratio": 1.2421875, "no_speech_prob": 9.815241355681792e-06}, {"id": 620, "seek": 316800, "start": 3168.0, "end": 3188.0, "text": " So there's a lot of like layers of the onion, we can peel off, you know, and it turns out that we kind of find ourselves in all these different areas of math and logic and philosophy and whatever.", "tokens": [407, 456, 311, 257, 688, 295, 411, 7914, 295, 264, 10916, 11, 321, 393, 13889, 766, 11, 291, 458, 11, 293, 309, 4523, 484, 300, 321, 733, 295, 915, 4175, 294, 439, 613, 819, 3179, 295, 5221, 293, 9952, 293, 10675, 293, 2035, 13], "temperature": 0.0, "avg_logprob": -0.09266557296117146, "compression_ratio": 1.4202898550724639, "no_speech_prob": 4.783852091350127e-06}, {"id": 621, "seek": 318800, "start": 3188.0, "end": 3199.0, "text": " Jeremy if you check that book out you have to let me know how it goes. I checked it out before, maybe a couple years ago.", "tokens": [17809, 498, 291, 1520, 300, 1446, 484, 291, 362, 281, 718, 385, 458, 577, 309, 1709, 13, 286, 10033, 309, 484, 949, 11, 1310, 257, 1916, 924, 2057, 13], "temperature": 0.0, "avg_logprob": -0.13577932896821396, "compression_ratio": 1.5949367088607596, "no_speech_prob": 3.0709761631442234e-05}, {"id": 622, "seek": 318800, "start": 3199.0, "end": 3214.0, "text": " Stephen Wolfram, you know, Mathematica was talking about combinators maybe it's only a year ago, and I happened to get interested and I checked that book out and I, I kind of worked through some but I got lost pretty quickly I'm sure that you will probably", "tokens": [13391, 16634, 2356, 11, 291, 458, 11, 15776, 8615, 2262, 390, 1417, 466, 38514, 3391, 1310, 309, 311, 787, 257, 1064, 2057, 11, 293, 286, 2011, 281, 483, 3102, 293, 286, 10033, 300, 1446, 484, 293, 286, 11, 286, 733, 295, 2732, 807, 512, 457, 286, 658, 2731, 1238, 2661, 286, 478, 988, 300, 291, 486, 1391], "temperature": 0.0, "avg_logprob": -0.13577932896821396, "compression_ratio": 1.5949367088607596, "no_speech_prob": 3.0709761631442234e-05}, {"id": 623, "seek": 321400, "start": 3214.0, "end": 3220.0, "text": " find it much better than me. I don't know about that.", "tokens": [915, 309, 709, 1101, 813, 385, 13, 286, 500, 380, 458, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.20503708032461312, "compression_ratio": 1.2941176470588236, "no_speech_prob": 3.9414742786902934e-05}, {"id": 624, "seek": 321400, "start": 3220.0, "end": 3230.0, "text": " Well you know maybe at some point we can start working through it together if people get interested.", "tokens": [1042, 291, 458, 1310, 412, 512, 935, 321, 393, 722, 1364, 807, 309, 1214, 498, 561, 483, 3102, 13], "temperature": 0.0, "avg_logprob": -0.20503708032461312, "compression_ratio": 1.2941176470588236, "no_speech_prob": 3.9414742786902934e-05}, {"id": 625, "seek": 323000, "start": 3230.0, "end": 3245.0, "text": " Yeah, it's interesting listening to like earlier a cast episode we're kind of talked about how he went to some, he just started with a PL, and he went to some API user group meeting or something and like said to people like, wait, trains so they", "tokens": [865, 11, 309, 311, 1880, 4764, 281, 411, 3071, 257, 4193, 3500, 321, 434, 733, 295, 2825, 466, 577, 415, 1437, 281, 512, 11, 415, 445, 1409, 365, 257, 6999, 11, 293, 415, 1437, 281, 512, 9362, 4195, 1594, 3440, 420, 746, 293, 411, 848, 281, 561, 411, 11, 1699, 11, 16329, 370, 436], "temperature": 0.0, "avg_logprob": -0.20426737028976966, "compression_ratio": 1.5030674846625767, "no_speech_prob": 1.6959304048214108e-05}, {"id": 626, "seek": 324500, "start": 3245.0, "end": 3260.0, "text": " combinators and combinators are trains and everybody at the API user group meeting he said all said like, No, this is a new API invention. It's not some other thing.", "tokens": [38514, 3391, 293, 38514, 3391, 366, 16329, 293, 2201, 412, 264, 9362, 4195, 1594, 3440, 415, 848, 439, 848, 411, 11, 883, 11, 341, 307, 257, 777, 9362, 22265, 13, 467, 311, 406, 512, 661, 551, 13], "temperature": 0.0, "avg_logprob": -0.14604918549700482, "compression_ratio": 1.3306451612903225, "no_speech_prob": 9.078510629478842e-06}, {"id": 627, "seek": 326000, "start": 3260.0, "end": 3275.0, "text": " They don't mesh very much and nobody realized, particularly the APL intellectual world I've noticed it's pretty pretty close to it.", "tokens": [814, 500, 380, 17407, 588, 709, 293, 5079, 5334, 11, 4098, 264, 5372, 43, 12576, 1002, 286, 600, 5694, 309, 311, 1238, 1238, 1998, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.18704752768239669, "compression_ratio": 1.4104046242774566, "no_speech_prob": 2.8402697353158146e-05}, {"id": 628, "seek": 326000, "start": 3275.0, "end": 3281.0, "text": " So anyway yeah they are. They are the same thing.", "tokens": [407, 4033, 1338, 436, 366, 13, 814, 366, 264, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.18704752768239669, "compression_ratio": 1.4104046242774566, "no_speech_prob": 2.8402697353158146e-05}, {"id": 629, "seek": 326000, "start": 3281.0, "end": 3289.0, "text": " So I'm trying to remember why the hell we were doing all this.", "tokens": [407, 286, 478, 1382, 281, 1604, 983, 264, 4921, 321, 645, 884, 439, 341, 13], "temperature": 0.0, "avg_logprob": -0.18704752768239669, "compression_ratio": 1.4104046242774566, "no_speech_prob": 2.8402697353158146e-05}, {"id": 630, "seek": 328900, "start": 3289.0, "end": 3300.0, "text": " This is the most intense study session right.", "tokens": [639, 307, 264, 881, 9447, 2979, 5481, 558, 13], "temperature": 0.0, "avg_logprob": -0.13179794710073897, "compression_ratio": 1.5376344086021505, "no_speech_prob": 5.1425704441498965e-05}, {"id": 631, "seek": 328900, "start": 3300.0, "end": 3318.0, "text": " And please don't be worried if this feels a bit intimidating, because it is, and that's fine. And this we're meant to be learning new interesting parts of the world and when we find them we shouldn't expect them to make sense straight away.", "tokens": [400, 1767, 500, 380, 312, 5804, 498, 341, 3417, 257, 857, 29714, 11, 570, 309, 307, 11, 293, 300, 311, 2489, 13, 400, 341, 321, 434, 4140, 281, 312, 2539, 777, 1880, 3166, 295, 264, 1002, 293, 562, 321, 915, 552, 321, 4659, 380, 2066, 552, 281, 652, 2020, 2997, 1314, 13], "temperature": 0.0, "avg_logprob": -0.13179794710073897, "compression_ratio": 1.5376344086021505, "no_speech_prob": 5.1425704441498965e-05}, {"id": 632, "seek": 331800, "start": 3318.0, "end": 3320.0, "text": " So we were doing.", "tokens": [407, 321, 645, 884, 13], "temperature": 0.0, "avg_logprob": -0.15788664537317612, "compression_ratio": 1.5185185185185186, "no_speech_prob": 2.2472622731584124e-05}, {"id": 633, "seek": 331800, "start": 3320.0, "end": 3324.0, "text": " That's right, we were doing chart.", "tokens": [663, 311, 558, 11, 321, 645, 884, 6927, 13], "temperature": 0.0, "avg_logprob": -0.15788664537317612, "compression_ratio": 1.5185185185185186, "no_speech_prob": 2.2472622731584124e-05}, {"id": 634, "seek": 331800, "start": 3324.0, "end": 3332.0, "text": " Yeah, no, that's probably it. That's a good place to finish isn't it.", "tokens": [865, 11, 572, 11, 300, 311, 1391, 309, 13, 663, 311, 257, 665, 1081, 281, 2413, 1943, 380, 309, 13], "temperature": 0.0, "avg_logprob": -0.15788664537317612, "compression_ratio": 1.5185185185185186, "no_speech_prob": 2.2472622731584124e-05}, {"id": 635, "seek": 331800, "start": 3332.0, "end": 3338.0, "text": " Remember that we were doing.", "tokens": [5459, 300, 321, 645, 884, 13], "temperature": 0.0, "avg_logprob": -0.15788664537317612, "compression_ratio": 1.5185185185185186, "no_speech_prob": 2.2472622731584124e-05}, {"id": 636, "seek": 331800, "start": 3338.0, "end": 3344.0, "text": " Yeah, that's fine. I don't think we need any of this.", "tokens": [865, 11, 300, 311, 2489, 13, 286, 500, 380, 519, 321, 643, 604, 295, 341, 13], "temperature": 0.0, "avg_logprob": -0.15788664537317612, "compression_ratio": 1.5185185185185186, "no_speech_prob": 2.2472622731584124e-05}, {"id": 637, "seek": 334400, "start": 3344.0, "end": 3353.0, "text": " Oh, that's right, we're going to do custom operators. Okay, I think we've got some good background to tackle that. Oh yeah, we're.", "tokens": [876, 11, 300, 311, 558, 11, 321, 434, 516, 281, 360, 2375, 19077, 13, 1033, 11, 286, 519, 321, 600, 658, 512, 665, 3678, 281, 14896, 300, 13, 876, 1338, 11, 321, 434, 13], "temperature": 0.0, "avg_logprob": -0.1399820327758789, "compression_ratio": 1.5767195767195767, "no_speech_prob": 7.527164143539267e-06}, {"id": 638, "seek": 334400, "start": 3353.0, "end": 3359.0, "text": " Yeah, yeah. Okay. So we got to here.", "tokens": [865, 11, 1338, 13, 1033, 13, 407, 321, 658, 281, 510, 13], "temperature": 0.0, "avg_logprob": -0.1399820327758789, "compression_ratio": 1.5767195767195767, "no_speech_prob": 7.527164143539267e-06}, {"id": 639, "seek": 334400, "start": 3359.0, "end": 3373.0, "text": " I guess before we go we should at least write down something so that we've made some start here. So, oh yeah, okay I remember now.", "tokens": [286, 2041, 949, 321, 352, 321, 820, 412, 1935, 2464, 760, 746, 370, 300, 321, 600, 1027, 512, 722, 510, 13, 407, 11, 1954, 1338, 11, 1392, 286, 1604, 586, 13], "temperature": 0.0, "avg_logprob": -0.1399820327758789, "compression_ratio": 1.5767195767195767, "no_speech_prob": 7.527164143539267e-06}, {"id": 640, "seek": 337300, "start": 3373.0, "end": 3387.0, "text": " I wanted to point out then yeah okay so we're just we were going to use, I was going to do squared. That's right. So I wanted my function to be squared. And so to do that, I had to show you that this means squared.", "tokens": [286, 1415, 281, 935, 484, 550, 1338, 1392, 370, 321, 434, 445, 321, 645, 516, 281, 764, 11, 286, 390, 516, 281, 360, 8889, 13, 663, 311, 558, 13, 407, 286, 1415, 452, 2445, 281, 312, 8889, 13, 400, 370, 281, 360, 300, 11, 286, 632, 281, 855, 291, 300, 341, 1355, 8889, 13], "temperature": 0.0, "avg_logprob": -0.1936801817358994, "compression_ratio": 1.608695652173913, "no_speech_prob": 7.888969776104204e-06}, {"id": 641, "seek": 337300, "start": 3387.0, "end": 3389.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.1936801817358994, "compression_ratio": 1.608695652173913, "no_speech_prob": 7.888969776104204e-06}, {"id": 642, "seek": 337300, "start": 3389.0, "end": 3392.0, "text": " So then to calculate.", "tokens": [407, 550, 281, 8873, 13], "temperature": 0.0, "avg_logprob": -0.1936801817358994, "compression_ratio": 1.608695652173913, "no_speech_prob": 7.888969776104204e-06}, {"id": 643, "seek": 337300, "start": 3392.0, "end": 3396.0, "text": " The derivative of this function at set at some point.", "tokens": [440, 13760, 295, 341, 2445, 412, 992, 412, 512, 935, 13], "temperature": 0.0, "avg_logprob": -0.1936801817358994, "compression_ratio": 1.608695652173913, "no_speech_prob": 7.888969776104204e-06}, {"id": 644, "seek": 339600, "start": 3396.0, "end": 3404.0, "text": " We're going to use this formula, we wrote down.", "tokens": [492, 434, 516, 281, 764, 341, 8513, 11, 321, 4114, 760, 13], "temperature": 0.0, "avg_logprob": -0.15201788170393124, "compression_ratio": 1.654970760233918, "no_speech_prob": 4.425457063916838e-06}, {"id": 645, "seek": 339600, "start": 3404.0, "end": 3406.0, "text": " This one here.", "tokens": [639, 472, 510, 13], "temperature": 0.0, "avg_logprob": -0.15201788170393124, "compression_ratio": 1.654970760233918, "no_speech_prob": 4.425457063916838e-06}, {"id": 646, "seek": 339600, "start": 3406.0, "end": 3410.0, "text": " So it's going to be F of.", "tokens": [407, 309, 311, 516, 281, 312, 479, 295, 13], "temperature": 0.0, "avg_logprob": -0.15201788170393124, "compression_ratio": 1.654970760233918, "no_speech_prob": 4.425457063916838e-06}, {"id": 647, "seek": 339600, "start": 3410.0, "end": 3417.0, "text": " Let's create some number to hold up point over one so the difference we're going to work on is going to be 0.01.", "tokens": [961, 311, 1884, 512, 1230, 281, 1797, 493, 935, 670, 472, 370, 264, 2649, 321, 434, 516, 281, 589, 322, 307, 516, 281, 312, 1958, 13, 10607, 13], "temperature": 0.0, "avg_logprob": -0.15201788170393124, "compression_ratio": 1.654970760233918, "no_speech_prob": 4.425457063916838e-06}, {"id": 648, "seek": 339600, "start": 3417.0, "end": 3423.0, "text": " So it's going to be the function F of, and so let's calculate this at some point.", "tokens": [407, 309, 311, 516, 281, 312, 264, 2445, 479, 295, 11, 293, 370, 718, 311, 8873, 341, 412, 512, 935, 13], "temperature": 0.0, "avg_logprob": -0.15201788170393124, "compression_ratio": 1.654970760233918, "no_speech_prob": 4.425457063916838e-06}, {"id": 649, "seek": 342300, "start": 3423.0, "end": 3426.0, "text": " Say two.", "tokens": [6463, 732, 13], "temperature": 0.0, "avg_logprob": -0.1984565109014511, "compression_ratio": 1.463235294117647, "no_speech_prob": 9.972746738640126e-06}, {"id": 650, "seek": 342300, "start": 3426.0, "end": 3428.0, "text": " That's three.", "tokens": [663, 311, 1045, 13], "temperature": 0.0, "avg_logprob": -0.1984565109014511, "compression_ratio": 1.463235294117647, "no_speech_prob": 9.972746738640126e-06}, {"id": 651, "seek": 342300, "start": 3428.0, "end": 3435.0, "text": " Okay, so we're going to calculate it at x equals three. So I gotta go function of x plus d.", "tokens": [1033, 11, 370, 321, 434, 516, 281, 8873, 309, 412, 2031, 6915, 1045, 13, 407, 286, 3428, 352, 2445, 295, 2031, 1804, 274, 13], "temperature": 0.0, "avg_logprob": -0.1984565109014511, "compression_ratio": 1.463235294117647, "no_speech_prob": 9.972746738640126e-06}, {"id": 652, "seek": 342300, "start": 3435.0, "end": 3441.0, "text": " Okay, minus", "tokens": [1033, 11, 3175], "temperature": 0.0, "avg_logprob": -0.1984565109014511, "compression_ratio": 1.463235294117647, "no_speech_prob": 9.972746738640126e-06}, {"id": 653, "seek": 342300, "start": 3441.0, "end": 3449.0, "text": " function of x. Okay, and then that's going to have to go in parentheses.", "tokens": [2445, 295, 2031, 13, 1033, 11, 293, 550, 300, 311, 516, 281, 362, 281, 352, 294, 34153, 13], "temperature": 0.0, "avg_logprob": -0.1984565109014511, "compression_ratio": 1.463235294117647, "no_speech_prob": 9.972746738640126e-06}, {"id": 654, "seek": 344900, "start": 3449.0, "end": 3454.0, "text": " Okay, and then we're going to divide that by point oh one.", "tokens": [1033, 11, 293, 550, 321, 434, 516, 281, 9845, 300, 538, 935, 1954, 472, 13], "temperature": 0.0, "avg_logprob": -0.1231418185763889, "compression_ratio": 1.4845814977973568, "no_speech_prob": 3.844897946692072e-06}, {"id": 655, "seek": 344900, "start": 3454.0, "end": 3460.0, "text": " There are better ways to write this in a peel but I want to make it like somewhat familiar.", "tokens": [821, 366, 1101, 2098, 281, 2464, 341, 294, 257, 13889, 457, 286, 528, 281, 652, 309, 411, 8344, 4963, 13], "temperature": 0.0, "avg_logprob": -0.1231418185763889, "compression_ratio": 1.4845814977973568, "no_speech_prob": 3.844897946692072e-06}, {"id": 656, "seek": 344900, "start": 3460.0, "end": 3470.0, "text": " Okay. And for those of you who remember calculus, the actual derivative of x squared is to x. So the correct answer would have been six.", "tokens": [1033, 13, 400, 337, 729, 295, 291, 567, 1604, 33400, 11, 264, 3539, 13760, 295, 2031, 8889, 307, 281, 2031, 13, 407, 264, 3006, 1867, 576, 362, 668, 2309, 13], "temperature": 0.0, "avg_logprob": -0.1231418185763889, "compression_ratio": 1.4845814977973568, "no_speech_prob": 3.844897946692072e-06}, {"id": 657, "seek": 344900, "start": 3470.0, "end": 3478.0, "text": " So, which is, you know, we're on the right track.", "tokens": [407, 11, 597, 307, 11, 291, 458, 11, 321, 434, 322, 264, 558, 2837, 13], "temperature": 0.0, "avg_logprob": -0.1231418185763889, "compression_ratio": 1.4845814977973568, "no_speech_prob": 3.844897946692072e-06}, {"id": 658, "seek": 347800, "start": 3478.0, "end": 3489.0, "text": " If we set d to a smaller number, we would get a more precise answer.", "tokens": [759, 321, 992, 274, 281, 257, 4356, 1230, 11, 321, 576, 483, 257, 544, 13600, 1867, 13], "temperature": 0.0, "avg_logprob": -0.10424247469220843, "compression_ratio": 1.5083798882681565, "no_speech_prob": 2.561244400567375e-06}, {"id": 659, "seek": 347800, "start": 3489.0, "end": 3498.0, "text": " Yeah, so we're going to try and head to is that we can actually create our own operator that will calculate the derivative of function at a point.", "tokens": [865, 11, 370, 321, 434, 516, 281, 853, 293, 1378, 281, 307, 300, 321, 393, 767, 1884, 527, 1065, 12973, 300, 486, 8873, 264, 13760, 295, 2445, 412, 257, 935, 13], "temperature": 0.0, "avg_logprob": -0.10424247469220843, "compression_ratio": 1.5083798882681565, "no_speech_prob": 2.561244400567375e-06}, {"id": 660, "seek": 347800, "start": 3498.0, "end": 3503.0, "text": " And so maybe that's what we're trying to do next time.", "tokens": [400, 370, 1310, 300, 311, 437, 321, 434, 1382, 281, 360, 958, 565, 13], "temperature": 0.0, "avg_logprob": -0.10424247469220843, "compression_ratio": 1.5083798882681565, "no_speech_prob": 2.561244400567375e-06}, {"id": 661, "seek": 350300, "start": 3503.0, "end": 3509.0, "text": " Any comments or questions before we go.", "tokens": [2639, 3053, 420, 1651, 949, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.2822201865059989, "compression_ratio": 1.4511278195488722, "no_speech_prob": 0.00014875935448799282}, {"id": 662, "seek": 350300, "start": 3509.0, "end": 3511.0, "text": " It's really cool.", "tokens": [467, 311, 534, 1627, 13], "temperature": 0.0, "avg_logprob": -0.2822201865059989, "compression_ratio": 1.4511278195488722, "no_speech_prob": 0.00014875935448799282}, {"id": 663, "seek": 350300, "start": 3511.0, "end": 3514.0, "text": " Awesome.", "tokens": [10391, 13], "temperature": 0.0, "avg_logprob": -0.2822201865059989, "compression_ratio": 1.4511278195488722, "no_speech_prob": 0.00014875935448799282}, {"id": 664, "seek": 350300, "start": 3514.0, "end": 3517.0, "text": " I'm glad you. Yeah, it's great again. Thank you.", "tokens": [286, 478, 5404, 291, 13, 865, 11, 309, 311, 869, 797, 13, 1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.2822201865059989, "compression_ratio": 1.4511278195488722, "no_speech_prob": 0.00014875935448799282}, {"id": 665, "seek": 350300, "start": 3517.0, "end": 3518.0, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.2822201865059989, "compression_ratio": 1.4511278195488722, "no_speech_prob": 0.00014875935448799282}, {"id": 666, "seek": 350300, "start": 3518.0, "end": 3520.0, "text": " All right. Bye all.", "tokens": [1057, 558, 13, 4621, 439, 13], "temperature": 0.0, "avg_logprob": -0.2822201865059989, "compression_ratio": 1.4511278195488722, "no_speech_prob": 0.00014875935448799282}, {"id": 667, "seek": 350300, "start": 3520.0, "end": 3522.0, "text": " Thank you for showing us this.", "tokens": [1044, 291, 337, 4099, 505, 341, 13], "temperature": 0.0, "avg_logprob": -0.2822201865059989, "compression_ratio": 1.4511278195488722, "no_speech_prob": 0.00014875935448799282}, {"id": 668, "seek": 350300, "start": 3522.0, "end": 3523.0, "text": " Bye.", "tokens": [4621, 13], "temperature": 0.0, "avg_logprob": -0.2822201865059989, "compression_ratio": 1.4511278195488722, "no_speech_prob": 0.00014875935448799282}, {"id": 669, "seek": 352300, "start": 3523.0, "end": 3534.0, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50914], "temperature": 0.0, "avg_logprob": -0.3443748553593953, "compression_ratio": 0.5555555555555556, "no_speech_prob": 9.60123652475886e-05}], "language": "en"}