{"text": " Hi, Hamo. You're muted. I said now I understand why you're looking up like this. Hi, Ro. Hi, Hamo. You're muted. I will move you down to my level. There we go. All righty. Hello, everybody. Hi, Wayne. How are you? Doing good. How are you doing? Feeling a little better today? Yeah. The hay fever has gone away. I hardly ever get hay fever anymore because we filled our house with air purifiers, which do a great job. But something got past them yesterday and I just, ah. So now I feel like a bit flat after a day of feeling bad. You know, the next day you're kind of like, yeah. But, you know, APL will cheer me up and the company of you folks. I'm not sure if you have any recommendations on air purifiers. I know there's like the Dyson formaldehyde ones and Molecule and all this kind of stuff, but I haven't seen any. Oh my God, do I? Of course I do. Pretty tough. I'm all about air quality. So there's basically. If you Google for like. Yes, CADR calculator that tells you the clean air delivery rate that you'll need. Basically to get a certain number of air changes per hour, which is ACH. And like if you aim for, I don't know, like. Five to eight air changes per hour is being pretty good, then you just type in your room size into one of those online CADR calculators. Clean air delivery rate calculators and it will tell you what CADR you need. So that is just a case of buying an air purifier that has that CADR and a HEPA filter. It's like it couldn't be less high tech. It's literally like a piece of woven cloth, which with a fan that blows air through it. That's what an air purifier is. So I got this thing called the the Yoohoo. It's like a sensor because I was interested to know air quality and I discovered the CO2 was way too high just because closed windows and things. And so definitely that's easy, right? You have to ventilate. There's no solution other than scrubbing. Yes, you did. Yeah. So I went through that last year or the year before with the wildfires in California. And we had to close up all the windows and everything. And, you know, the process I was worried about, like, oh, is that going to be bad? And I bought a CO2 monitor and I discovered our CO2 was like 1800, you know, when the maximum recommended. Yeah, you get headaches and you feel like an idiot. And so ever since then, I've been pretty careful about CO2. You know, that's separate. Of course, you know, you can have perfectly good CO2, but still bad air quality if there's one thing that I have is quite high T-vox that are unpredictable. Like, I don't know if it's the sensor. Sorry. Okay, I was just gonna say I don't know if anyone has any experience with that because I haven't been able to figure it out. I've been collecting data for months now and I can't really figure out any clear correlation with the T-vox. But they sometimes are quite high and I suspect it affects, you know, sleep and things like that. So I do know there's some sensors on the market. So I just don't know if that's something you already looked into. Yeah, I mean, I've got air purifiers which have gas and particle sensors on them. And so then they have an auto mode where they'll go harder if there's more stuff. I don't find they seem to correlate with my hay fever though, honestly. So my method of setting the fan level is if I start getting hay fever, I turn it up. I don't find the auto seems to work that well for me. But yeah, that's definitely been a life changer for me is getting clean air in my house. That's basically the first bad hay fever I've had in like 18 months. And it used to, you know, be like the single biggest impact I reckon on my quality of life was really crap all the time. Anyhow, that's a bit of a side, interesting aside, nonetheless. Any interesting APL discoveries since yesterday or questions or anything else? It's remarkably hard to do simple things. Yeah, well, I mean, we just started right so that's yeah. Shockingly hard to load. I posted in the forums a basic kind of genetic algorithm, which was pretty cool but I saw that. I think basic is not a fair description. I mean, compared to where, at least I'm up to, it looks pretty sophisticated. I feel like there's a lot that can be done to transform it into a more kind of array based solution and Well, that'll be an interesting project for us all to try to help with. I think, yeah, I mean, we're not close to knowing all the glyphs that you're using yet. I think we've got some catching up to do. My goal is to implement Connect4. I've implemented it in so many languages and it seems a good enough problem that is non-trivial. Yeah, so like with an AI that you play against? Yeah, yeah, just minimax kind of implementation. There's a good Kaggle competition on that one going on since a while, which is fun. Then we could try slotting in a genetic algorithm to try to optimize it as well. That'd be cool. Yes, but just like the simple, the board and simple, how to best represent the array of the board is already hard. Yeah, I'm not even at a point of thinking about doing anything yet. Oh, I just pressed the wrong button. I just had a question from this topic about, oh sorry, turn again? Oh, I was just going to say I spent a lot of time the last day trying to figure out how to load images into APL just to get the pixel values. Did you have any luck? It was a lot harder. No. No, and I asked on the Discord if there was any kind of beginner friendly ways to load it and I got a lot of resources that I had no luck deciphering. Was that on the APL Discord? Yeah. I saw a dialogue conference that they're having coming up that this is a hot topic that they're going to discuss. Image processing? Yeah. Awesome. I wanted to ask, we'd be talking about complex numbers which are super cool. I noticed they're supported in Torch and PyTorch. Is it like deep learning uses? Oh yes. What is that? Absolutely. Absolutely. Yeah. I mean apart from anything else, they're an input format for audio for example, we would often represent as kind of magnitude and phase. And we don't normally have to worry about it, but you can optimize convolutions using Fourier transforms, you know, and using complex representation. That's kind of handled for us by Kudi and N, nowadays. But yeah, you know, inputs and outputs as complex numbers is certainly a thing and also if you've got layers that represent kind of more like, you know, the activations you hope might kind of represent something from your domain, they might, you know, be represented well as complex numbers, you might have loss functions based on that or... Cool. Yeah. The only time I've used them in PyTorch is for audio, but I know other folks use them for other things. I also saw that Adam, who actually works at Dialog, and I think he's the guy at Arraycast who said he's like used APL his whole life, answered some of our questions. Okay, so if you use, I'm on Mac, not on Windows, but on Windows, once you've removed some docked Windows, you can click Session Save, you can right click on the language bar and hide caption. Once you've got boxing on, you can save your session. And yes, I've already thrown the forum to get backticks with the in-browser backticks space. So that was good to get Adam to answer some of our questions. And then the other thing I wanted to mention is that... Yeah. Wasim did some really nice notes, which I finally got around to reading. And so I, yeah, I actually highly recommend them. So they're linked from the Lesson 1 forum. So thanks for doing that, Wasim. Am I pronouncing your name right? Yep. Cool. Chris, where is that name from? You're in South Africa, right? So funny enough, I'm in Sydney at the moment. No way. My parents, but I'm originally from South Africa. And the name is Arabic. Cool. Welcome to Australia. Better time zone for you. How long are you here for? Until end of next month, actually. It's a nice long time. Great. Yeah. If you say hi in the forum, if you want to meet up with any Fast AI people, I'm sure there's, I know there's a bunch of people in Sydney. Yeah, these are great notes. Thank you so much. I love that you've got the juggling notation. Had you come across juggling notation before we discussed it? No, not at all. It's interesting, isn't it? It's like it was game changing, apparently. And Aaron Hughes PhD. I don't know how you pronounce this name. Serada, you might know. Do you know how you pronounce this? I guess this is a Chinese name. I know it's not Pinyin, but it's... No? Okay. I thought for APL today... Oh, good. There's a link here. Thank you. By the way, for those of you who hadn't noticed, at least when I remember or when Serada reminds me, I click on the Make Wiki, which means that anybody can click Edit on these posts. So thank you for those of you who have been adding stuff to them. I was thinking like in terms of stuff that's going to help us understand more of the documentation and do more things, I think there's two main things I wanted to cover today, which is left arrow and row. And basically... Do they call it left arrow? They do. Okay, cool. So left arrow, which is left square bracket, is used to assign names to variables. So A is 3. So obviously in a lot of languages, we would use equals for that. But, you know, a statement like x equals x plus 1 is not a mathematically sane statement. So I'm glad APL does not use equals to mean that. So in other languages, we have to say equals equals to mean that. And I know this is something, you know, the kids I teach found quite confusing when we're doing Python. It's like, it's a very strange meaning of equals. So you can absolutely do that. You know, if you've got something called x, you can rebind it to its previous value plus 1. I mean, let's try it. A plus 1. Okay. If you add a plus sign before that A, you'd have A plus A arrow A plus 1, it'll actually print it out for you as well. Just to save you a line. I mean, that makes sense, doesn't it, right? Because we learned that monadic plus is conjugate. Now, that won't work for a complex number because it will actually give you the conjugate. But yeah, this is going to return the conjugate of everything to the right. So assignment is returning the assigned value and then taking the conjugate of it will as a result print it out. I think this might be better. LeftTack. That's because that's actually always monadic function. Same. So if I replace this with that. And I think you can also, when you start nesting these assignments, because these assignments can be, you could create a new variable as part of, you can create A is left arrow. Left arrow B plus 1, A plus 1. So you can actually nest them. I think if you do left arrow and then the box, I forget what it's called. Assignment in the box. This quad, which is, is that an L there? That tick L? Yes. Yeah. So I think if you assign to that. That's what they do with the docs usually. The new monic is you're kind of like saving to the screen. Got it. So that's a special thing to assign to. Yeah, a lot of the IO operations are handled by quad. Uh huh. Great. Now the other interesting thing, which is happening. Is that Isaac has started creating a website for the study group. Which is not quite up and running yet. Did you do the settings pages? The GitHub pages, the GitHub pages branch and all that. Yeah, I think we could just probably do that now. So let me, while I remember. Do a git pull and then yeah, we should be. So for those of you that don't know, GitHub has a very nice feature called GitHub pages, which basically turns a repo into a website. And to use it. You basically go to pages. And you say, sources this branch. And in theory, I should now be able to click on this. We may need to. Oops. So I can check what's going on by switching to that branch. Okay, so there's definitely something there. I can do a little after I set the settings and pages, I had to make a small commit to publish the first time. I've noticed that too. Okay, I'll remove one carriage return from here. And I can vaguely hear. How are you talking? I can vaguely hear your ghostly distant voice. Can you hear me now? It's it's the side is up actually it's ready. Fastai.GitHub.io. Something I like to do is when I go here is I copy this. And then I go into settings and paste it here. And then I can see how anybody on my page, including me, can jump to the website. I really wish they knew that automatically. Yeah. Good that. Okay. Thank you, Isaac. This is beautiful. There it all is. Notice this thing here automatically pops open. So this is Quarto, which is what NBdev2 will be using, which is full of neat tricks. Tags. So a lot of Quarto's commands are really well designed. Yeah, it really is. It's from RStudio, JJ Euler's company and everything he's done has been great. He's hired a lot of great people as well. And he's been super helpful. I think we need some image of some APL thing. That'd be nice. It's a very cool image though. All right. Well, that was easy. Yeah, all the images are the Quarto default. I see. Well, if anybody wants to do a PR, which uploads an image of, I don't know, a cool formula or picture of Isaac with a little lambda on his head or whatever, you know, that'll be good. So the way, yeah, so the way this works is, as I say, basically, the way I like to do it, and it works pretty easily, is if you have a branch called ghpages, then any HTML, etc. in that branch just ends up as your website. So here's index.html, and that's the website. And now the way that's being created is there's a thing called GitHub actions, which is basically something that will automatically run some code for you when you do things on GitHub. They're YAML files, of course, because all the cool kids use YAML files. And so you say, okay, well, when should this run? And it's going to run when you push to master. Okay, what happens when you push to master? Well, it's going to run a job called deploy, which will run on Ubuntu. So they've got like every major OS with lots of releases, which will check out this repo, set up Python, run this script, run this command, and then run this action, which is deploy to GitHub pages. And I'm guessing, Isaac, you basically borrowed this from NB Process. It looks similar. Yeah, yeah, I took this from your Fast Kaggle repository, and there's some minor changes, but roughly the same. Yeah, so Fast Kaggle, I just did NB Process new. NB Process is the current name of what will be NB Dev2, hopefully within three weeks or so. And as you might have noticed, one nice thing about this is that, you know, we have a... Why is this in a separate folder, by the way, Isaac, was that necessary for some reason or? That was the default create website porto function did, and I didn't change the structure. Anyway, so we've got a notebook here. And that notebook has been auto converted into a post, which is nice. So once you've got this set up, you can start authoring technical blog posts with notebooks really easily, particularly because if you hit dot... Why is it not working? I thought if you hit dot... Yeah, it's meant to be dot, never mind. You can open up the notebook in GitHub.dev, which is basically a slimmed down online version of VS Code. And so I can start editing straight away. I assume that they won't have the APL kernel installed, but I'm not sure. You're not sure you can even run Python, can you? But you can certainly edit the markdown and move cells around and stuff. Or you could just put mapdown files in there. All right. So... In fact, let's go ahead and make this a bit simpler while we're here. Otherwise, I might go a bit crazy. All right. So if we move all that into the parent, then we should be able to remove that. Yes, OK. We can add this to this.getignore. So getignore is the file which contains a list of all the things that git will by default ignore. So dot quarter. And if you end up with a slash, it means it's a directory. All right. Move all that. So we should also add dot ipynb checkpoints to our getignore. And so then let's check. So then underscore quarter dot yaml is where it's kind of defined. So this doesn't need to be dot dot slash anymore. Can you think of anything else I might need to change off the top of your head? Isaac? Thank you. I think you got everything. What does freeze do? Is that different to execute false? I'm not sure, to be honest. That was a default setting. All right. So git status will tell us how we're doing here. Oh, yeah. And I was going to add dot ipynb checkpoints. So I think that means it's not going to rerender or rerun file unless it's changed. Okay. Makes sense. All right. So we've renamed some things. We've deleted one thing. We've modified one thing. That sounds good. Oh, I haven't got this set up yet. That's fine. All right. So git commit minus am. So a will add everything that's not yet added. And m means I'm going to put a message right here. I thought I'd already done that. Oh, that's right. I added that one carriage return. Great. And so now we should be able to go to fastai.github.io slash APL study. And it's still working. How about that? And so something that's useful to know is your GitHub actions when they run. Oh, didn't work. They get logged here. And so when it breaks, you get a cross. Okay. Quartarender is going to have to change. So that's just no, that's not going to need anything anymore. So we'll change our. I mean, so, you know, just something else to show you. We don't have to like switch to the terminal. We can just go to GitHub workflows and click on here and click on edit. And just edit it directly if we want to. And that by default uses the current directory, I believe. We can just go ahead and commit that. And I don't know where we have architecture here. I think it defaults to x64, doesn't it, Hamil? Yes. Yeah, you don't need that. And then something else you don't need is this pipe is used in Yamal to do a multi-line thing. And since we only have one line here, we don't need that either. But your screen has so much vertical space now. But it's split in half, Hamil, so it doesn't really. So I still have reason to complain about vertical space. Besides which that's an important part of my personality. All right, so that worked. That's good. And so after it updates, then the GitHub pages bot will actually put that up on our website. Okay. So. Great. So this is called a raw cell, which Isaac's created for us. And you can create a raw cell by pressing R during this menu. And things that are between three dashes are called Yamal front matter. Yamal is yet another markup language. And basically this is a bunch of key value things in Yamal. And yeah, this is where we basically put the information we want. The title is actually not needed because it will pick it up automatically from an H1. Or to put it another way, the H1 is needed because it will come automatically from the title. Great. I suppose I should put my name here since I'm writing it at the moment. And. All right. Something I find really helpful is I use this thing called collapsible headings. And so I just hit control shift left and as you can see, it closes everything up. And then you can basically press right arrow to jump to the end of a section or to open a section. So that's left, right. And if you're already at the start of the section, you press left again, it'll close it up. I find it really helpful for zipping around quickly. As you can see. So we started talking about precedence yesterday. Yeah, I don't think there's too much more to say about precedence. Maybe we'll create a section called like. Expressions. Of which part of that is about precedence. And then the other thing we put in here is about functions. OK. So in Python or indeed in math, in math, you would write a function like this. You'd say f of x is, you know, whatever. 2x say or in Python, you would say define a function which takes x and it returns to times x. Or you could create a lambda in function. F is a function which takes x and returns to x. So these are ways you can define functions in math or these two or two ways you can define functions in Python. They all have something in common, which is that you're telling you're telling the reader in the case of math and the interpreter in the case of Python. What's the name of the thing that you're passing in? And you could pass in more than one thing. Right. APL is different. APL has decided for you what names you're going to call things. So to create a function in APL, it's just assigning something to a symbol. Right. So rather than saying, oh, I'm going to turn my APL thingy on. Which means I just turn on my bookmark bar, which I thought I need a shortcut key to, but I don't. Shift command B. Let's try that again. Command shift B. Oh, there we go. APL. Alright. F. So we can assign a scalar or a list or the result of an expression with possibly various other functions in. Right. Whatever. Or we can assign a function. And to create a function in APL, you use curly brackets. So curly brackets means this is a function. And then inside the function, you say what you want to do and you don't have to name the parameters. They already have names. If you have one parameter, it's going to get called Omega, which is W. So here's a times two function. And to pass the one parameter, you just check it on the right. OK. What if you want to create a function called G, which does something times two plus something else? Then a second parameter will always be called alpha. Now, the second parameter goes on the left. So this will be this becomes Omega. So it'll be four times two, which is eight plus three is eleven. That's not right. Oh, sorry. It's going to be this. Sorry. This is going to happen first. Yeah. Thank you. So it'll be two plus three is five times four is twenty. OK. Great. As you can see, I'm still not thinking APL yet. That's I think all there is to know about functions at this stage until we get to operators. Actually, we should do operators first. Maybe. Do we? No, that's not. I think that's enough. So what happened? We have more than two variables. Good luck. You don't. You can have zero. One or two. I guess, like, basically, I have a feeling it can do unpacking. It can. You can do some pattern matching. Yeah. So you could pass a list and then unpack it. Or destructuring, as I think some people call it. I guess we should keep that here because that's actually quite interesting. Can you pass in the function above as to the equation function? Can you pass the function above? What do you mean? Can you put the F inside the G function? Oh, yeah, absolutely. F and G are now like just the same as plus, minus whatever. They're just APL functions that you can do whatever with. So, yeah. So we could. H is equal to two plus F of omega. Yeah. So that's something that I like, right? Because all the APL glyphs, at least the ones that are functions, are either unary, monadic or binary, dyadic. And they always, you know, if they're monadic, the thing goes on the right. And if they're dyadic, then they're infix. And the functions you create are exactly the same. And you can create Unicode function names if you want to. So you can like create your own very APL-ish looking functions if you wish. De-structuring assignment. OK. So when we use the word array, we're using it to mean the same thing that NumPy calls arrays and that PyTorch calls tensors. So they're, you know, n-dimensional, regularly shaped bunches of things. And in PyTorch, we call the rank of a tensor the number of dimensions that it has. So a vector would be one dimensional, the matrix would be two dimensional, a scalar would be zero dimensional. So it'd be helpful to know how to create things. So we know how to create scalars. You just type them in. We know how to create vectors. So rank one arrays, you type them with spaces. So something's going to be helpful explaining this. We'll actually first of all be to learn about IOTA. You can also, as an earlier step, you might be if you wanted to teach the row, you could you can actually use the row to reshape and give it a one or zero to broadcast it. Yeah. Yeah, absolutely. Okay. Yeah, let's do it that way. Thanks. Oh, we can just type it in. Let's just type it in. So let's just create something. And let's use our trick now that we've learned it. Okay. So display a list we assigned a. And we're going to have to do this backwards, but I think that's fine. So let's look it up. Here it is. And we are going to get to learn a song today. That's the good news. In fact, we're starting to see some of the song here. That's cool. I guess we should mention strings actually because they do use them in the documentation a lot. I don't know what they call numbers and strings and arrays. What's the term for those things? Things that aren't functions. I got to call them basic objects for now, but if anybody learns what they're actually meant to be called, let me know. In the box they say is a language element. Is it supposed to call all these symbols as elements? Yeah, that's right. But I'm trying to talk about things that aren't those. I'm trying to talk about numbers, arrays and strings, which is none of these things. We'll figure it out. So strings. I'm not sure there's much more to say about strings. What does the language reference say if I search for strings? I'm not quite sure what order they think they're showing this in, but it's definitely not the most helpful one. I see they don't call them strings. Maybe this is considered a list of characters. I suspect it is actually. Found another blog post that calls them character vectors and scalars. Oh, right, because I think this is different, right? Okay, so we're about to get a slightly ahead of ourselves, but this tells us the shape. Okay, so that's weird, right? So I don't think we should do strings yet until we do row because they don't make sense until we can look at shapes. Okay. All right, so we've got a list. So we can turn that into a matrix using dyadic row. I'll figure out what I did with my heading levels here. That's two. Oh, yeah, that's three. Okay, that's four. Great. So that's reshape. And so that is, I think, is that the same as what NumPy calls it? Reshape? Yes, same as NumPy reshape. So it gives a new shape to an array. So the shape of an array is basically like how many columns and rows and whatever does it have. So if we want to do three rows of two columns, we can reshape our array. As you see. Something that threw me off. I was just going to say at this point, like, or maybe at the very top of this, we should say boxing style equals max. Did I do that? I'll stop boxing on style equals max. I think it was style dash max. I think. There we go. Okay, so I think Isaac wrote something on the forum about this. So anywhere you see an arrow, that means this is like a dimension that exists. Right. There's no arrow here. So this is considered like infinitely thin. So think of this as a vector, not as a one height. You know, as a matrix with one row. This is a vector. I was talking to my daughter about this yesterday and she found this very confusing. She's like, well, it does have height. So say like, okay, it does on the screen, but this is a representation on the screen of an abstract mathematical object that doesn't have height. And it's just that if I drew it infinitely thin, you know, it's like Claire, you wouldn't be able to read it. And you would think that was very helpful, which she agreed was true. Whereas this thing here has two arrows. This actually has three rows and two columns. And then the sprigle means that this got numbers in. There's two other options. It could have a mixture of things with some strings and stuff in, or it could even have other arrays in. They would get different symbols. So I think perhaps one of the more interesting ones to look at is what happens if we have one row with six. So now it does not look the same, right? No arrow, arrow. So this is a matrix. So the shape is whatever is on whatever you would put on the left hand side to create that thing. I assume it's going to be called shape, but I suppose I should check. Shape of. OK. Shape of. So, for example. Let's call this. Matrix. OK. And so if we then get the shape of a. It's a single dimension of length six. Whereas the shape of match matrix. Is two rows by three columns. Yes, in question. Yeah, I may have missed this. What is the writing to the box thing do again? It's just printing it in a more nice way for us. So, you know, what I mean is I'll write it to the box that prints it out on the screen. So it's not on the matrix and then you want it on the screen. No, it doesn't. If I remove it. Because I'm assigning. It doesn't display it. Oh, because you're assigning. So you're just kind of adding changing the assignment to the screen as well. And this box is a function like. Yeah, that that's a that's a function called quad. Which I think does a lot of things. I think this is squad is the same thing as quad. Never mind. It's a good question. I don't know. I didn't think so. No squad is used for indexing. OK, so maybe quad is like not a language element and it's some weird special thing. What if I search for it? Yeah, it's a variable. Which communicates between the user's terminal and APL depends on whether it's been assigned a reference, but it's assigned the array is displayed. OK, so it's a special magic variable. One thing about these. One thing on these creating and reshaping matrices that cause some confusion for me. I didn't realize I had a bug. You can actually reshape to any size. So if you have four numbers and you reshape it to a three by three, it'll just loop through. It'll use the first your four numbers plus the first two in the array to make six. So it can broadcast in kind of weird ways. Sorry, I'm just wondering, did we? We've got something here called functions and assignment, but I don't actually see if we ever did normal assignment. Oh, OK. Well, that'd be the right place to talk about quad. That seems like a bit of an oversight. OK, so let's pop it. So actually, I guess we can do. This a function, an anonymous function without assignment. So that's a function. And therefore we can apply it to something. And that's the same as first assigning it to F and then calling F on the thing. OK, assignments. OK, so we can go a equals three. I. And then this is the same thing. But with printing. And we can assign a list. I'm kind of curious to use the box still hold the value three. I guess I can check here. It said that there was some special thing when you reference it. So, no, it doesn't. It's not a normal variable. It's a weird special thing. When you reference it, a prompt is displayed and input is requested and then you can put things after it as well like I.O. and stuff to change the way things work. All right. So. That means we can do. We've got a. We've got a row of our matrix. We've got a row of a. We could do also things like row of three. And that's this is special. This is. This is a scalar. I believe. Although it's printing out. Well, this is a scalar. Oh, no, this is not a scalar. This is just this is like the empty set. This is nothing at all. Which I think is a symbol for. Might not count as one of the last three. I think they call it the zilled day. Just one moment. Yeah, sorry. That is one of the last three zilled day or something. The old day. Is a numeric constant. OK. Let's see if that displays the same way. It is OK. And the shape of that is zero, I think. How do you enter that? The check the shape. How do you tell how do you type is the order? I just pasted it. It's the back tick. Right. Curly bracket. OK. How did you find that? Was a matter of interest. It's kind of far right of your keyboard up at the top. All right. Three from the right. Oh, well found. I see. And so interestingly, the rank of zilled day is not zilled day. It's actually. An array containing zero. And so this brings us to the song, which is that if I. So given that row of math is two, three. That means row of row of math is true. Right. Because it's like this is a list. One dimensional array rank one array containing two elements. So this is row of two, three. And so row of that is one. And because row of zilled day is this. Row of row of that. Is one and row of row of row of that is one. And. Actually, let's go higher dimensional. We can do. Bigger ones, we can say, give me two faces, each with two rows, each with three columns. This is like a kind of a rectangular prism, if you like. And that's how they display it. I changed somewhere along the lines. Let's run this again. He's a. And you'll see it's created two matrices that kind of you can think of them as stacked on top of each other. So this is a rank three tensor. And it's when it ran out of numbers from a. It just went back to the start. So you can use row as repeat. So, for example, if I use a scalar is just a matrix of ones. So let's call this C for cube. And so we can get. This is on that matrix thing. Does the thing on the margin of it mean anything to you like this one here? No, no, like the one above it, you know, this one here. Yeah. Yeah. So this has got this has got to there's actually two dimensions happening here. There's this dimension and there's this dimension. So ideally, if we had a 3D display, they would be on top of each other, you know, but we don't. So just print some with a space between and it puts two kind of dimension lines here to tell us this is actually representing two separate axes. This is two faces by two rows by three columns. I see. OK. So each arrow is kind of a dimension. Exactly. Exactly. Yeah. So we could do row of row of row of C and so row of row of row of anything ends up being one. And so that gives us our first and possibly only APL song. APL row, row, Richard Storman. Here we go. Oh, there is actually a dialogue poetry section that's important. And here's the one about row, which Claire and I have now learned by heart. Row, row, row of X always equals one row is dimension, row, row rank APL is fun. So, yeah, row, row, row of anything gives us one row of something is the dimension. So row so tells us how many rows by columns or whatever it's I would call it shape. They call dimension row of row of something tells you the tensor rank. So that's why that poem. One above it's pretty good too. There you go. There's an MP3 recording of an APL song. So to wrap up, let's do IOTA, which is a nice easy one. So IOTA is just the same as range, basically. So IOTA four. It's the same as range, except it starts at one rather than zero by default. You can change that. I believe you can say quad IOTA zero or something like that to change. Like so it starts at zero instead of one. I kind of like just going to leave it in the defaults. Otherwise, it's just going to get confusing. If you haven't found it yet, one of the really cool things about IOTA is you can range in multiple dimensions. So if you do IOTA two, two. Yeah, so it's creating basically all of the coordinates to kind of index into a multidimensional structure, I guess. So here's it's like the Cartesian product of the set of one, two with a set one, two, three. And so now we've got arrays and arrays. And so you can change these symbols changed. So to create our matrix, an easier way to create the matrix would have been to just go two, three row of IOTA six. So IOTA six is one, two, three, four, five, six, and then two, three of that is the matrix. All right. So let's. Oh, did I close that? I had a question. Yeah. With IOTA, like, you know how like in PyPythid we have like a start, stop and step. Is there something similar with IOTA? No, it's not. But you don't really need it, right? Because like, let's say I want to step by two. That's easy enough, you know. Or if I want to start one more than that. That's easy enough, you know. So I think that's why we don't really need it. Okay. Where is it? Here it is. Okay. Monadic IOTA means index generator. Okay. So that's why it's called index generator because these are the indices of all of the locations in a two by three array. Monadic index generator. Okay. And then dyadic. Okay. Let's just check the help index generators, see if we missed anything. Okay, so R equals IOTA Y, you pass it a scalar or a vector of non-negative numbers and you get back a numeric array, the set of all possible coordinates, which is exactly what we thought. Okay. Oh, so that's interesting. So I think one special thing is IOTA zero, which is another way of getting that. The order thing. That's the empty set. Okay. So the dyadic version is index of. And this won't make any sense really until we've got strings. So let's do strings first. So strings are basically vector arrays, sorry, character, characters and character vectors. So that's a character vector and that's a character. And so now we should be able to understand their example. So I've noticed the examples when I click on like the name of like the dyadic version, for example, the examples tend to be more complicated than the one in the overall summary. Just to warn you. So I'm going to use the simpler ones. Okay, so index of takes this list, this array and tells you the index of each of these things. And so remember, this is a list of three letters. I believe it's identical. Let's see. Actually, it's true. Here's ACF. And here's a list containing A, C and F. They're the same thing. So that's interesting. Yeah, so. So that is a single character. This is a list of characters, and this is just a little syntactic shortcut for creating a list of characters and lists of characters appear with no space between them when it outputs them. But they are still just lists of characters. I believe if you put a character on the right hand side that's not in the left, like the, it will give you one more than the total length. Oh, good. That 11 is there but it's not actually in the list. Thanks. So then an interesting example they have is if what what if you've got a higher ranked matrix. So here they're saying, oh, let's assume I've already got a matrix with this in it, because they're assuming we don't know how to create one, we might get confused. So now that we do, let's go ahead and create one. So create a matrix, and they used three rows of two columns of iota six. Row. Okay. And so then they said given that what if we do this. What's that doing. The first occurrence of sub arrays in y, which match major cells of x. Okay, so this is an important concept. I don't know the difference between a sub array and a major cell yet, but the idea is, okay, so why is the thing on the right, x is the thing on the left. Okay, so here's why. So it's going to try to find this. What do they call it this. Sub array in the major cells of x. So this they're going to treat this as a row and try to find which row contains that in it. And the answer is row three. Does it work if you put 135 or something, we'll find it, I guess. It doesn't work. I'm pretty sure it's not going to because that's not considered a major cell. Yeah. So the major cells of this so it's rows. So if you wanted to do this, you'd have to transpose it first. And there is a transpose operator. So we should probably do a like, I think something that's missing in the dialogue docs is the simplest possible versions of things. So let's just say let's find the number three in the list. One, three, six, five, four. Why is, oh, wrong way around. In the list of this, find the number three. Okay. Are we done. So I think we made good progress. I think so too. Thanks gang. So an array can be any shape. So a vector is a rank one array. A matrix is a rank two array. A scalar is a rank zero array. I don't know what we call rank three arrays, but yeah. It's the same as what pytorch causes tensor. Thank you. Although one difference is a pytorch tensor can't contain tensors. But I think a NumPy array can contain arrays. It's probably more like NumPy than pytorch. All right. Thanks everyone. That was cool. Thanks everybody.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.0, "text": " Hi, Hamo.", "tokens": [2421, 11, 8234, 78, 13], "temperature": 0.0, "avg_logprob": -0.6648760507273119, "compression_ratio": 1.101123595505618, "no_speech_prob": 0.07564371079206467}, {"id": 1, "seek": 0, "start": 7.0, "end": 10.0, "text": " You're muted.", "tokens": [509, 434, 32808, 13], "temperature": 0.0, "avg_logprob": -0.6648760507273119, "compression_ratio": 1.101123595505618, "no_speech_prob": 0.07564371079206467}, {"id": 2, "seek": 0, "start": 10.0, "end": 15.0, "text": " I said now I understand why you're looking up like this.", "tokens": [286, 848, 586, 286, 1223, 983, 291, 434, 1237, 493, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.6648760507273119, "compression_ratio": 1.101123595505618, "no_speech_prob": 0.07564371079206467}, {"id": 3, "seek": 0, "start": 15.0, "end": 17.0, "text": " Hi, Ro.", "tokens": [2421, 11, 3101, 13], "temperature": 0.0, "avg_logprob": -0.6648760507273119, "compression_ratio": 1.101123595505618, "no_speech_prob": 0.07564371079206467}, {"id": 4, "seek": 0, "start": 17.0, "end": 20.0, "text": " Hi, Hamo.", "tokens": [2421, 11, 8234, 78, 13], "temperature": 0.0, "avg_logprob": -0.6648760507273119, "compression_ratio": 1.101123595505618, "no_speech_prob": 0.07564371079206467}, {"id": 5, "seek": 2000, "start": 20.0, "end": 30.0, "text": " You're muted.", "tokens": [509, 434, 32808, 13], "temperature": 0.0, "avg_logprob": -0.18363224513947018, "compression_ratio": 1.3037037037037038, "no_speech_prob": 0.00019947896362282336}, {"id": 6, "seek": 2000, "start": 30.0, "end": 32.0, "text": " I will move you down to my level.", "tokens": [286, 486, 1286, 291, 760, 281, 452, 1496, 13], "temperature": 0.0, "avg_logprob": -0.18363224513947018, "compression_ratio": 1.3037037037037038, "no_speech_prob": 0.00019947896362282336}, {"id": 7, "seek": 2000, "start": 32.0, "end": 37.0, "text": " There we go.", "tokens": [821, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.18363224513947018, "compression_ratio": 1.3037037037037038, "no_speech_prob": 0.00019947896362282336}, {"id": 8, "seek": 2000, "start": 37.0, "end": 39.0, "text": " All righty. Hello, everybody.", "tokens": [1057, 558, 88, 13, 2425, 11, 2201, 13], "temperature": 0.0, "avg_logprob": -0.18363224513947018, "compression_ratio": 1.3037037037037038, "no_speech_prob": 0.00019947896362282336}, {"id": 9, "seek": 2000, "start": 39.0, "end": 42.0, "text": " Hi, Wayne. How are you?", "tokens": [2421, 11, 22101, 13, 1012, 366, 291, 30], "temperature": 0.0, "avg_logprob": -0.18363224513947018, "compression_ratio": 1.3037037037037038, "no_speech_prob": 0.00019947896362282336}, {"id": 10, "seek": 2000, "start": 42.0, "end": 43.0, "text": " Doing good. How are you doing?", "tokens": [18496, 665, 13, 1012, 366, 291, 884, 30], "temperature": 0.0, "avg_logprob": -0.18363224513947018, "compression_ratio": 1.3037037037037038, "no_speech_prob": 0.00019947896362282336}, {"id": 11, "seek": 2000, "start": 43.0, "end": 45.0, "text": " Feeling a little better today?", "tokens": [29945, 257, 707, 1101, 965, 30], "temperature": 0.0, "avg_logprob": -0.18363224513947018, "compression_ratio": 1.3037037037037038, "no_speech_prob": 0.00019947896362282336}, {"id": 12, "seek": 4500, "start": 45.0, "end": 50.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.19748728743223387, "compression_ratio": 1.5333333333333334, "no_speech_prob": 6.914893310749903e-05}, {"id": 13, "seek": 4500, "start": 50.0, "end": 52.0, "text": " The hay fever has gone away.", "tokens": [440, 4842, 18277, 575, 2780, 1314, 13], "temperature": 0.0, "avg_logprob": -0.19748728743223387, "compression_ratio": 1.5333333333333334, "no_speech_prob": 6.914893310749903e-05}, {"id": 14, "seek": 4500, "start": 52.0, "end": 57.0, "text": " I hardly ever get hay fever anymore because we filled our house with air purifiers, which do a great job.", "tokens": [286, 13572, 1562, 483, 4842, 18277, 3602, 570, 321, 6412, 527, 1782, 365, 1988, 1864, 23463, 11, 597, 360, 257, 869, 1691, 13], "temperature": 0.0, "avg_logprob": -0.19748728743223387, "compression_ratio": 1.5333333333333334, "no_speech_prob": 6.914893310749903e-05}, {"id": 15, "seek": 4500, "start": 57.0, "end": 60.0, "text": " But something got past them yesterday and I just, ah.", "tokens": [583, 746, 658, 1791, 552, 5186, 293, 286, 445, 11, 3716, 13], "temperature": 0.0, "avg_logprob": -0.19748728743223387, "compression_ratio": 1.5333333333333334, "no_speech_prob": 6.914893310749903e-05}, {"id": 16, "seek": 4500, "start": 60.0, "end": 65.0, "text": " So now I feel like a bit flat after a day of feeling bad.", "tokens": [407, 586, 286, 841, 411, 257, 857, 4962, 934, 257, 786, 295, 2633, 1578, 13], "temperature": 0.0, "avg_logprob": -0.19748728743223387, "compression_ratio": 1.5333333333333334, "no_speech_prob": 6.914893310749903e-05}, {"id": 17, "seek": 4500, "start": 65.0, "end": 68.0, "text": " You know, the next day you're kind of like, yeah.", "tokens": [509, 458, 11, 264, 958, 786, 291, 434, 733, 295, 411, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.19748728743223387, "compression_ratio": 1.5333333333333334, "no_speech_prob": 6.914893310749903e-05}, {"id": 18, "seek": 4500, "start": 68.0, "end": 74.0, "text": " But, you know, APL will cheer me up and the company of you folks.", "tokens": [583, 11, 291, 458, 11, 5372, 43, 486, 12581, 385, 493, 293, 264, 2237, 295, 291, 4024, 13], "temperature": 0.0, "avg_logprob": -0.19748728743223387, "compression_ratio": 1.5333333333333334, "no_speech_prob": 6.914893310749903e-05}, {"id": 19, "seek": 7400, "start": 74.0, "end": 77.0, "text": " I'm not sure if you have any recommendations on air purifiers.", "tokens": [286, 478, 406, 988, 498, 291, 362, 604, 10434, 322, 1988, 1864, 23463, 13], "temperature": 0.2, "avg_logprob": -0.3929820365094124, "compression_ratio": 1.4114832535885167, "no_speech_prob": 4.005261143902317e-05}, {"id": 20, "seek": 7400, "start": 77.0, "end": 82.0, "text": " I know there's like the Dyson formaldehyde ones and Molecule and all this kind of stuff, but I haven't seen any.", "tokens": [286, 458, 456, 311, 411, 264, 413, 28194, 9860, 1479, 3495, 1479, 2306, 293, 46914, 66, 2271, 293, 439, 341, 733, 295, 1507, 11, 457, 286, 2378, 380, 1612, 604, 13], "temperature": 0.2, "avg_logprob": -0.3929820365094124, "compression_ratio": 1.4114832535885167, "no_speech_prob": 4.005261143902317e-05}, {"id": 21, "seek": 7400, "start": 82.0, "end": 86.0, "text": " Oh my God, do I? Of course I do.", "tokens": [876, 452, 1265, 11, 360, 286, 30, 2720, 1164, 286, 360, 13], "temperature": 0.2, "avg_logprob": -0.3929820365094124, "compression_ratio": 1.4114832535885167, "no_speech_prob": 4.005261143902317e-05}, {"id": 22, "seek": 7400, "start": 86.0, "end": 87.0, "text": " Pretty tough.", "tokens": [10693, 4930, 13], "temperature": 0.2, "avg_logprob": -0.3929820365094124, "compression_ratio": 1.4114832535885167, "no_speech_prob": 4.005261143902317e-05}, {"id": 23, "seek": 7400, "start": 87.0, "end": 89.0, "text": " I'm all about air quality.", "tokens": [286, 478, 439, 466, 1988, 3125, 13], "temperature": 0.2, "avg_logprob": -0.3929820365094124, "compression_ratio": 1.4114832535885167, "no_speech_prob": 4.005261143902317e-05}, {"id": 24, "seek": 7400, "start": 89.0, "end": 94.0, "text": " So there's basically.", "tokens": [407, 456, 311, 1936, 13], "temperature": 0.2, "avg_logprob": -0.3929820365094124, "compression_ratio": 1.4114832535885167, "no_speech_prob": 4.005261143902317e-05}, {"id": 25, "seek": 7400, "start": 94.0, "end": 99.0, "text": " If you Google for like.", "tokens": [759, 291, 3329, 337, 411, 13], "temperature": 0.2, "avg_logprob": -0.3929820365094124, "compression_ratio": 1.4114832535885167, "no_speech_prob": 4.005261143902317e-05}, {"id": 26, "seek": 9900, "start": 99.0, "end": 110.0, "text": " Yes, CADR calculator that tells you the clean air delivery rate that you'll need.", "tokens": [1079, 11, 41143, 49, 24993, 300, 5112, 291, 264, 2541, 1988, 8982, 3314, 300, 291, 603, 643, 13], "temperature": 0.0, "avg_logprob": -0.2029811792206346, "compression_ratio": 1.3092105263157894, "no_speech_prob": 2.7106061679660343e-05}, {"id": 27, "seek": 9900, "start": 110.0, "end": 117.0, "text": " Basically to get a certain number of air changes per hour, which is ACH.", "tokens": [8537, 281, 483, 257, 1629, 1230, 295, 1988, 2962, 680, 1773, 11, 597, 307, 316, 5462, 13], "temperature": 0.0, "avg_logprob": -0.2029811792206346, "compression_ratio": 1.3092105263157894, "no_speech_prob": 2.7106061679660343e-05}, {"id": 28, "seek": 9900, "start": 117.0, "end": 121.0, "text": " And like if you aim for, I don't know, like.", "tokens": [400, 411, 498, 291, 5939, 337, 11, 286, 500, 380, 458, 11, 411, 13], "temperature": 0.0, "avg_logprob": -0.2029811792206346, "compression_ratio": 1.3092105263157894, "no_speech_prob": 2.7106061679660343e-05}, {"id": 29, "seek": 12100, "start": 121.0, "end": 130.0, "text": " Five to eight air changes per hour is being pretty good, then you just type in your room size into one of those online CADR calculators.", "tokens": [9436, 281, 3180, 1988, 2962, 680, 1773, 307, 885, 1238, 665, 11, 550, 291, 445, 2010, 294, 428, 1808, 2744, 666, 472, 295, 729, 2950, 41143, 49, 4322, 3391, 13], "temperature": 0.0, "avg_logprob": -0.10967474398405655, "compression_ratio": 1.5223214285714286, "no_speech_prob": 1.7501031834399328e-05}, {"id": 30, "seek": 12100, "start": 130.0, "end": 135.0, "text": " Clean air delivery rate calculators and it will tell you what CADR you need.", "tokens": [18463, 1988, 8982, 3314, 4322, 3391, 293, 309, 486, 980, 291, 437, 41143, 49, 291, 643, 13], "temperature": 0.0, "avg_logprob": -0.10967474398405655, "compression_ratio": 1.5223214285714286, "no_speech_prob": 1.7501031834399328e-05}, {"id": 31, "seek": 12100, "start": 135.0, "end": 144.0, "text": " So that is just a case of buying an air purifier that has that CADR and a HEPA filter.", "tokens": [407, 300, 307, 445, 257, 1389, 295, 6382, 364, 1988, 1864, 9902, 300, 575, 300, 41143, 49, 293, 257, 389, 8929, 32, 6608, 13], "temperature": 0.0, "avg_logprob": -0.10967474398405655, "compression_ratio": 1.5223214285714286, "no_speech_prob": 1.7501031834399328e-05}, {"id": 32, "seek": 12100, "start": 144.0, "end": 147.0, "text": " It's like it couldn't be less high tech.", "tokens": [467, 311, 411, 309, 2809, 380, 312, 1570, 1090, 7553, 13], "temperature": 0.0, "avg_logprob": -0.10967474398405655, "compression_ratio": 1.5223214285714286, "no_speech_prob": 1.7501031834399328e-05}, {"id": 33, "seek": 14700, "start": 147.0, "end": 154.0, "text": " It's literally like a piece of woven cloth, which with a fan that blows air through it.", "tokens": [467, 311, 3736, 411, 257, 2522, 295, 39221, 13619, 11, 597, 365, 257, 3429, 300, 18458, 1988, 807, 309, 13], "temperature": 0.0, "avg_logprob": -0.12269391653672704, "compression_ratio": 1.5509433962264152, "no_speech_prob": 1.2410856470523868e-05}, {"id": 34, "seek": 14700, "start": 154.0, "end": 157.0, "text": " That's what an air purifier is.", "tokens": [663, 311, 437, 364, 1988, 1864, 9902, 307, 13], "temperature": 0.0, "avg_logprob": -0.12269391653672704, "compression_ratio": 1.5509433962264152, "no_speech_prob": 1.2410856470523868e-05}, {"id": 35, "seek": 14700, "start": 157.0, "end": 160.0, "text": " So I got this thing called the the Yoohoo.", "tokens": [407, 286, 658, 341, 551, 1219, 264, 264, 22330, 19069, 13], "temperature": 0.0, "avg_logprob": -0.12269391653672704, "compression_ratio": 1.5509433962264152, "no_speech_prob": 1.2410856470523868e-05}, {"id": 36, "seek": 14700, "start": 160.0, "end": 167.0, "text": " It's like a sensor because I was interested to know air quality and I discovered the CO2 was way too high just because closed windows and things.", "tokens": [467, 311, 411, 257, 10200, 570, 286, 390, 3102, 281, 458, 1988, 3125, 293, 286, 6941, 264, 3002, 17, 390, 636, 886, 1090, 445, 570, 5395, 9309, 293, 721, 13], "temperature": 0.0, "avg_logprob": -0.12269391653672704, "compression_ratio": 1.5509433962264152, "no_speech_prob": 1.2410856470523868e-05}, {"id": 37, "seek": 14700, "start": 167.0, "end": 172.0, "text": " And so definitely that's easy, right? You have to ventilate. There's no solution other than scrubbing.", "tokens": [400, 370, 2138, 300, 311, 1858, 11, 558, 30, 509, 362, 281, 27498, 473, 13, 821, 311, 572, 3827, 661, 813, 24163, 4324, 13], "temperature": 0.0, "avg_logprob": -0.12269391653672704, "compression_ratio": 1.5509433962264152, "no_speech_prob": 1.2410856470523868e-05}, {"id": 38, "seek": 17200, "start": 172.0, "end": 184.0, "text": " Yes, you did. Yeah. So I went through that last year or the year before with the wildfires in California.", "tokens": [1079, 11, 291, 630, 13, 865, 13, 407, 286, 1437, 807, 300, 1036, 1064, 420, 264, 1064, 949, 365, 264, 4868, 36197, 294, 5384, 13], "temperature": 0.0, "avg_logprob": -0.1643532903570878, "compression_ratio": 1.5151515151515151, "no_speech_prob": 1.4283872587839141e-05}, {"id": 39, "seek": 17200, "start": 184.0, "end": 188.0, "text": " And we had to close up all the windows and everything.", "tokens": [400, 321, 632, 281, 1998, 493, 439, 264, 9309, 293, 1203, 13], "temperature": 0.0, "avg_logprob": -0.1643532903570878, "compression_ratio": 1.5151515151515151, "no_speech_prob": 1.4283872587839141e-05}, {"id": 40, "seek": 17200, "start": 188.0, "end": 191.0, "text": " And, you know, the process I was worried about, like, oh, is that going to be bad?", "tokens": [400, 11, 291, 458, 11, 264, 1399, 286, 390, 5804, 466, 11, 411, 11, 1954, 11, 307, 300, 516, 281, 312, 1578, 30], "temperature": 0.0, "avg_logprob": -0.1643532903570878, "compression_ratio": 1.5151515151515151, "no_speech_prob": 1.4283872587839141e-05}, {"id": 41, "seek": 17200, "start": 191.0, "end": 201.0, "text": " And I bought a CO2 monitor and I discovered our CO2 was like 1800, you know, when the maximum recommended.", "tokens": [400, 286, 4243, 257, 3002, 17, 6002, 293, 286, 6941, 527, 3002, 17, 390, 411, 24327, 11, 291, 458, 11, 562, 264, 6674, 9628, 13], "temperature": 0.0, "avg_logprob": -0.1643532903570878, "compression_ratio": 1.5151515151515151, "no_speech_prob": 1.4283872587839141e-05}, {"id": 42, "seek": 20100, "start": 201.0, "end": 204.0, "text": " Yeah, you get headaches and you feel like an idiot.", "tokens": [865, 11, 291, 483, 35046, 293, 291, 841, 411, 364, 14270, 13], "temperature": 0.0, "avg_logprob": -0.16145675182342528, "compression_ratio": 1.4390243902439024, "no_speech_prob": 1.0128699614142533e-05}, {"id": 43, "seek": 20100, "start": 204.0, "end": 210.0, "text": " And so ever since then, I've been pretty careful about CO2.", "tokens": [400, 370, 1562, 1670, 550, 11, 286, 600, 668, 1238, 5026, 466, 3002, 17, 13], "temperature": 0.0, "avg_logprob": -0.16145675182342528, "compression_ratio": 1.4390243902439024, "no_speech_prob": 1.0128699614142533e-05}, {"id": 44, "seek": 20100, "start": 210.0, "end": 221.0, "text": " You know, that's separate. Of course, you know, you can have perfectly good CO2, but still bad air quality if there's one thing that I have is quite high T-vox that are unpredictable.", "tokens": [509, 458, 11, 300, 311, 4994, 13, 2720, 1164, 11, 291, 458, 11, 291, 393, 362, 6239, 665, 3002, 17, 11, 457, 920, 1578, 1988, 3125, 498, 456, 311, 472, 551, 300, 286, 362, 307, 1596, 1090, 314, 12, 3080, 87, 300, 366, 31160, 13], "temperature": 0.0, "avg_logprob": -0.16145675182342528, "compression_ratio": 1.4390243902439024, "no_speech_prob": 1.0128699614142533e-05}, {"id": 45, "seek": 22100, "start": 221.0, "end": 234.0, "text": " Like, I don't know if it's the sensor.", "tokens": [1743, 11, 286, 500, 380, 458, 498, 309, 311, 264, 10200, 13], "temperature": 0.0, "avg_logprob": -0.16079124651457133, "compression_ratio": 1.4919786096256684, "no_speech_prob": 1.3844605746271554e-05}, {"id": 46, "seek": 22100, "start": 234.0, "end": 235.0, "text": " Sorry.", "tokens": [4919, 13], "temperature": 0.0, "avg_logprob": -0.16079124651457133, "compression_ratio": 1.4919786096256684, "no_speech_prob": 1.3844605746271554e-05}, {"id": 47, "seek": 22100, "start": 235.0, "end": 244.0, "text": " Okay, I was just gonna say I don't know if anyone has any experience with that because I haven't been able to figure it out. I've been collecting data for months now and I can't really figure out any clear correlation with the T-vox.", "tokens": [1033, 11, 286, 390, 445, 799, 584, 286, 500, 380, 458, 498, 2878, 575, 604, 1752, 365, 300, 570, 286, 2378, 380, 668, 1075, 281, 2573, 309, 484, 13, 286, 600, 668, 12510, 1412, 337, 2493, 586, 293, 286, 393, 380, 534, 2573, 484, 604, 1850, 20009, 365, 264, 314, 12, 3080, 87, 13], "temperature": 0.0, "avg_logprob": -0.16079124651457133, "compression_ratio": 1.4919786096256684, "no_speech_prob": 1.3844605746271554e-05}, {"id": 48, "seek": 24400, "start": 244.0, "end": 253.0, "text": " But they sometimes are quite high and I suspect it affects, you know, sleep and things like that. So I do know there's some sensors on the market. So I just don't know if that's something you already looked into.", "tokens": [583, 436, 2171, 366, 1596, 1090, 293, 286, 9091, 309, 11807, 11, 291, 458, 11, 2817, 293, 721, 411, 300, 13, 407, 286, 360, 458, 456, 311, 512, 14840, 322, 264, 2142, 13, 407, 286, 445, 500, 380, 458, 498, 300, 311, 746, 291, 1217, 2956, 666, 13], "temperature": 0.0, "avg_logprob": -0.10657183544055836, "compression_ratio": 1.5638297872340425, "no_speech_prob": 5.17365924679325e-06}, {"id": 49, "seek": 24400, "start": 253.0, "end": 263.0, "text": " Yeah, I mean, I've got air purifiers which have gas and particle sensors on them.", "tokens": [865, 11, 286, 914, 11, 286, 600, 658, 1988, 1864, 23463, 597, 362, 4211, 293, 12359, 14840, 322, 552, 13], "temperature": 0.0, "avg_logprob": -0.10657183544055836, "compression_ratio": 1.5638297872340425, "no_speech_prob": 5.17365924679325e-06}, {"id": 50, "seek": 26300, "start": 263.0, "end": 277.0, "text": " And so then they have an auto mode where they'll go harder if there's more stuff. I don't find they seem to correlate with my hay fever though, honestly. So my method of setting the fan level is if I start getting hay fever, I turn it up.", "tokens": [400, 370, 550, 436, 362, 364, 8399, 4391, 689, 436, 603, 352, 6081, 498, 456, 311, 544, 1507, 13, 286, 500, 380, 915, 436, 1643, 281, 48742, 365, 452, 4842, 18277, 1673, 11, 6095, 13, 407, 452, 3170, 295, 3287, 264, 3429, 1496, 307, 498, 286, 722, 1242, 4842, 18277, 11, 286, 1261, 309, 493, 13], "temperature": 0.0, "avg_logprob": -0.07523992187098454, "compression_ratio": 1.5783783783783785, "no_speech_prob": 7.766408089082688e-06}, {"id": 51, "seek": 26300, "start": 277.0, "end": 281.0, "text": " I don't find the auto seems to work that well for me.", "tokens": [286, 500, 380, 915, 264, 8399, 2544, 281, 589, 300, 731, 337, 385, 13], "temperature": 0.0, "avg_logprob": -0.07523992187098454, "compression_ratio": 1.5783783783783785, "no_speech_prob": 7.766408089082688e-06}, {"id": 52, "seek": 28100, "start": 281.0, "end": 304.0, "text": " But yeah, that's definitely been a life changer for me is getting clean air in my house. That's basically the first bad hay fever I've had in like 18 months. And it used to, you know, be like the single biggest impact I reckon on my quality of life was really crap all the time.", "tokens": [583, 1338, 11, 300, 311, 2138, 668, 257, 993, 22822, 337, 385, 307, 1242, 2541, 1988, 294, 452, 1782, 13, 663, 311, 1936, 264, 700, 1578, 4842, 18277, 286, 600, 632, 294, 411, 2443, 2493, 13, 400, 309, 1143, 281, 11, 291, 458, 11, 312, 411, 264, 2167, 3880, 2712, 286, 29548, 322, 452, 3125, 295, 993, 390, 534, 12426, 439, 264, 565, 13], "temperature": 0.0, "avg_logprob": -0.10357935989604276, "compression_ratio": 1.4404145077720207, "no_speech_prob": 3.844724233204033e-06}, {"id": 53, "seek": 30400, "start": 304.0, "end": 313.0, "text": " Anyhow, that's a bit of a side, interesting aside, nonetheless.", "tokens": [2639, 4286, 11, 300, 311, 257, 857, 295, 257, 1252, 11, 1880, 7359, 11, 26756, 13], "temperature": 0.0, "avg_logprob": -0.15807649363642154, "compression_ratio": 1.3430656934306568, "no_speech_prob": 2.976313953695353e-05}, {"id": 54, "seek": 30400, "start": 313.0, "end": 328.0, "text": " Any interesting APL discoveries since yesterday or questions or anything else?", "tokens": [2639, 1880, 5372, 43, 28400, 1670, 5186, 420, 1651, 420, 1340, 1646, 30], "temperature": 0.0, "avg_logprob": -0.15807649363642154, "compression_ratio": 1.3430656934306568, "no_speech_prob": 2.976313953695353e-05}, {"id": 55, "seek": 30400, "start": 328.0, "end": 332.0, "text": " It's remarkably hard to do simple things.", "tokens": [467, 311, 37381, 1152, 281, 360, 2199, 721, 13], "temperature": 0.0, "avg_logprob": -0.15807649363642154, "compression_ratio": 1.3430656934306568, "no_speech_prob": 2.976313953695353e-05}, {"id": 56, "seek": 33200, "start": 332.0, "end": 336.0, "text": " Yeah, well, I mean, we just started right so that's yeah.", "tokens": [865, 11, 731, 11, 286, 914, 11, 321, 445, 1409, 558, 370, 300, 311, 1338, 13], "temperature": 0.0, "avg_logprob": -0.2206429140067395, "compression_ratio": 1.5076142131979695, "no_speech_prob": 9.027349733514711e-05}, {"id": 57, "seek": 33200, "start": 336.0, "end": 340.0, "text": " Shockingly hard to load.", "tokens": [39474, 12163, 1152, 281, 3677, 13], "temperature": 0.0, "avg_logprob": -0.2206429140067395, "compression_ratio": 1.5076142131979695, "no_speech_prob": 9.027349733514711e-05}, {"id": 58, "seek": 33200, "start": 340.0, "end": 350.0, "text": " I posted in the forums a basic kind of genetic algorithm, which was pretty cool but", "tokens": [286, 9437, 294, 264, 26998, 257, 3875, 733, 295, 12462, 9284, 11, 597, 390, 1238, 1627, 457], "temperature": 0.0, "avg_logprob": -0.2206429140067395, "compression_ratio": 1.5076142131979695, "no_speech_prob": 9.027349733514711e-05}, {"id": 59, "seek": 33200, "start": 350.0, "end": 360.0, "text": " I saw that. I think basic is not a fair description. I mean, compared to where, at least I'm up to, it looks pretty sophisticated.", "tokens": [286, 1866, 300, 13, 286, 519, 3875, 307, 406, 257, 3143, 3855, 13, 286, 914, 11, 5347, 281, 689, 11, 412, 1935, 286, 478, 493, 281, 11, 309, 1542, 1238, 16950, 13], "temperature": 0.0, "avg_logprob": -0.2206429140067395, "compression_ratio": 1.5076142131979695, "no_speech_prob": 9.027349733514711e-05}, {"id": 60, "seek": 36000, "start": 360.0, "end": 369.0, "text": " I feel like there's a lot that can be done to", "tokens": [286, 841, 411, 456, 311, 257, 688, 300, 393, 312, 1096, 281], "temperature": 0.0, "avg_logprob": -0.1135912717774857, "compression_ratio": 1.5326633165829147, "no_speech_prob": 2.977219810418319e-05}, {"id": 61, "seek": 36000, "start": 369.0, "end": 374.0, "text": " transform it into a more kind of array based solution and", "tokens": [4088, 309, 666, 257, 544, 733, 295, 10225, 2361, 3827, 293], "temperature": 0.0, "avg_logprob": -0.1135912717774857, "compression_ratio": 1.5326633165829147, "no_speech_prob": 2.977219810418319e-05}, {"id": 62, "seek": 36000, "start": 374.0, "end": 384.0, "text": " Well, that'll be an interesting project for us all to try to help with. I think, yeah, I mean, we're not close to knowing all the glyphs that you're using yet.", "tokens": [1042, 11, 300, 603, 312, 364, 1880, 1716, 337, 505, 439, 281, 853, 281, 854, 365, 13, 286, 519, 11, 1338, 11, 286, 914, 11, 321, 434, 406, 1998, 281, 5276, 439, 264, 22633, 950, 82, 300, 291, 434, 1228, 1939, 13], "temperature": 0.0, "avg_logprob": -0.1135912717774857, "compression_ratio": 1.5326633165829147, "no_speech_prob": 2.977219810418319e-05}, {"id": 63, "seek": 36000, "start": 384.0, "end": 387.0, "text": " I think we've got some catching up to do.", "tokens": [286, 519, 321, 600, 658, 512, 16124, 493, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.1135912717774857, "compression_ratio": 1.5326633165829147, "no_speech_prob": 2.977219810418319e-05}, {"id": 64, "seek": 38700, "start": 387.0, "end": 397.0, "text": " My goal is to implement Connect4. I've implemented it in so many languages and it seems a good enough problem that is non-trivial.", "tokens": [1222, 3387, 307, 281, 4445, 11653, 19, 13, 286, 600, 12270, 309, 294, 370, 867, 8650, 293, 309, 2544, 257, 665, 1547, 1154, 300, 307, 2107, 12, 83, 470, 22640, 13], "temperature": 0.0, "avg_logprob": -0.17068462837033155, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.00010888225369853899}, {"id": 65, "seek": 38700, "start": 397.0, "end": 400.0, "text": " Yeah, so like with an AI that you play against?", "tokens": [865, 11, 370, 411, 365, 364, 7318, 300, 291, 862, 1970, 30], "temperature": 0.0, "avg_logprob": -0.17068462837033155, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.00010888225369853899}, {"id": 66, "seek": 38700, "start": 400.0, "end": 410.0, "text": " Yeah, yeah, just minimax kind of implementation. There's a good Kaggle competition on that one going on since a while, which is fun.", "tokens": [865, 11, 1338, 11, 445, 4464, 2797, 733, 295, 11420, 13, 821, 311, 257, 665, 48751, 22631, 6211, 322, 300, 472, 516, 322, 1670, 257, 1339, 11, 597, 307, 1019, 13], "temperature": 0.0, "avg_logprob": -0.17068462837033155, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.00010888225369853899}, {"id": 67, "seek": 41000, "start": 410.0, "end": 417.0, "text": " Then we could try slotting in a genetic algorithm to try to optimize it as well. That'd be cool.", "tokens": [1396, 321, 727, 853, 14747, 783, 294, 257, 12462, 9284, 281, 853, 281, 19719, 309, 382, 731, 13, 663, 1116, 312, 1627, 13], "temperature": 0.0, "avg_logprob": -0.12347541536603655, "compression_ratio": 1.5643564356435644, "no_speech_prob": 9.515231795376167e-06}, {"id": 68, "seek": 41000, "start": 417.0, "end": 425.0, "text": " Yes, but just like the simple, the board and simple, how to best represent the array of the board is already hard.", "tokens": [1079, 11, 457, 445, 411, 264, 2199, 11, 264, 3150, 293, 2199, 11, 577, 281, 1151, 2906, 264, 10225, 295, 264, 3150, 307, 1217, 1152, 13], "temperature": 0.0, "avg_logprob": -0.12347541536603655, "compression_ratio": 1.5643564356435644, "no_speech_prob": 9.515231795376167e-06}, {"id": 69, "seek": 41000, "start": 425.0, "end": 431.0, "text": " Yeah, I'm not even at a point of thinking about doing anything yet.", "tokens": [865, 11, 286, 478, 406, 754, 412, 257, 935, 295, 1953, 466, 884, 1340, 1939, 13], "temperature": 0.0, "avg_logprob": -0.12347541536603655, "compression_ratio": 1.5643564356435644, "no_speech_prob": 9.515231795376167e-06}, {"id": 70, "seek": 41000, "start": 431.0, "end": 433.0, "text": " Oh, I just pressed the wrong button.", "tokens": [876, 11, 286, 445, 17355, 264, 2085, 2960, 13], "temperature": 0.0, "avg_logprob": -0.12347541536603655, "compression_ratio": 1.5643564356435644, "no_speech_prob": 9.515231795376167e-06}, {"id": 71, "seek": 43300, "start": 433.0, "end": 440.0, "text": " I just had a question from this topic about, oh sorry, turn again?", "tokens": [286, 445, 632, 257, 1168, 490, 341, 4829, 466, 11, 1954, 2597, 11, 1261, 797, 30], "temperature": 0.0, "avg_logprob": -0.21721299978402944, "compression_ratio": 1.375, "no_speech_prob": 4.6375321289815474e-06}, {"id": 72, "seek": 43300, "start": 440.0, "end": 454.0, "text": " Oh, I was just going to say I spent a lot of time the last day trying to figure out how to load images into APL just to get the pixel values.", "tokens": [876, 11, 286, 390, 445, 516, 281, 584, 286, 4418, 257, 688, 295, 565, 264, 1036, 786, 1382, 281, 2573, 484, 577, 281, 3677, 5267, 666, 5372, 43, 445, 281, 483, 264, 19261, 4190, 13], "temperature": 0.0, "avg_logprob": -0.21721299978402944, "compression_ratio": 1.375, "no_speech_prob": 4.6375321289815474e-06}, {"id": 73, "seek": 43300, "start": 454.0, "end": 455.0, "text": " Did you have any luck?", "tokens": [2589, 291, 362, 604, 3668, 30], "temperature": 0.0, "avg_logprob": -0.21721299978402944, "compression_ratio": 1.375, "no_speech_prob": 4.6375321289815474e-06}, {"id": 74, "seek": 45500, "start": 455.0, "end": 471.0, "text": " It was a lot harder. No. No, and I asked on the Discord if there was any kind of beginner friendly ways to load it and I got a lot of resources that I had no luck deciphering.", "tokens": [467, 390, 257, 688, 6081, 13, 883, 13, 883, 11, 293, 286, 2351, 322, 264, 32623, 498, 456, 390, 604, 733, 295, 22080, 9208, 2098, 281, 3677, 309, 293, 286, 658, 257, 688, 295, 3593, 300, 286, 632, 572, 3668, 49859, 278, 13], "temperature": 0.0, "avg_logprob": -0.12804246790268842, "compression_ratio": 1.5576923076923077, "no_speech_prob": 4.4252860789129045e-06}, {"id": 75, "seek": 45500, "start": 471.0, "end": 474.0, "text": " Was that on the APL Discord?", "tokens": [3027, 300, 322, 264, 5372, 43, 32623, 30], "temperature": 0.0, "avg_logprob": -0.12804246790268842, "compression_ratio": 1.5576923076923077, "no_speech_prob": 4.4252860789129045e-06}, {"id": 76, "seek": 45500, "start": 474.0, "end": 481.0, "text": " Yeah. I saw a dialogue conference that they're having coming up that this is a hot topic that they're going to discuss.", "tokens": [865, 13, 286, 1866, 257, 10221, 7586, 300, 436, 434, 1419, 1348, 493, 300, 341, 307, 257, 2368, 4829, 300, 436, 434, 516, 281, 2248, 13], "temperature": 0.0, "avg_logprob": -0.12804246790268842, "compression_ratio": 1.5576923076923077, "no_speech_prob": 4.4252860789129045e-06}, {"id": 77, "seek": 48100, "start": 481.0, "end": 486.0, "text": " Image processing? Yeah.", "tokens": [29903, 9007, 30, 865, 13], "temperature": 0.0, "avg_logprob": -0.25504832797580296, "compression_ratio": 1.3908045977011494, "no_speech_prob": 1.5687855920987204e-05}, {"id": 78, "seek": 48100, "start": 486.0, "end": 487.0, "text": " Awesome.", "tokens": [10391, 13], "temperature": 0.0, "avg_logprob": -0.25504832797580296, "compression_ratio": 1.3908045977011494, "no_speech_prob": 1.5687855920987204e-05}, {"id": 79, "seek": 48100, "start": 487.0, "end": 496.0, "text": " I wanted to ask, we'd be talking about complex numbers which are super cool. I noticed they're supported in Torch and PyTorch. Is it like deep learning uses?", "tokens": [286, 1415, 281, 1029, 11, 321, 1116, 312, 1417, 466, 3997, 3547, 597, 366, 1687, 1627, 13, 286, 5694, 436, 434, 8104, 294, 7160, 339, 293, 9953, 51, 284, 339, 13, 1119, 309, 411, 2452, 2539, 4960, 30], "temperature": 0.0, "avg_logprob": -0.25504832797580296, "compression_ratio": 1.3908045977011494, "no_speech_prob": 1.5687855920987204e-05}, {"id": 80, "seek": 48100, "start": 496.0, "end": 497.0, "text": " Oh yes.", "tokens": [876, 2086, 13], "temperature": 0.0, "avg_logprob": -0.25504832797580296, "compression_ratio": 1.3908045977011494, "no_speech_prob": 1.5687855920987204e-05}, {"id": 81, "seek": 48100, "start": 497.0, "end": 498.0, "text": " What is that?", "tokens": [708, 307, 300, 30], "temperature": 0.0, "avg_logprob": -0.25504832797580296, "compression_ratio": 1.3908045977011494, "no_speech_prob": 1.5687855920987204e-05}, {"id": 82, "seek": 48100, "start": 498.0, "end": 500.0, "text": " Absolutely. Absolutely. Yeah.", "tokens": [7021, 13, 7021, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.25504832797580296, "compression_ratio": 1.3908045977011494, "no_speech_prob": 1.5687855920987204e-05}, {"id": 83, "seek": 50000, "start": 500.0, "end": 512.0, "text": " I mean apart from anything else, they're an input format for audio for example, we would often represent as kind of magnitude and phase.", "tokens": [286, 914, 4936, 490, 1340, 1646, 11, 436, 434, 364, 4846, 7877, 337, 6278, 337, 1365, 11, 321, 576, 2049, 2906, 382, 733, 295, 15668, 293, 5574, 13], "temperature": 0.0, "avg_logprob": -0.13551297263493614, "compression_ratio": 1.4818652849740932, "no_speech_prob": 8.1366906670155e-06}, {"id": 84, "seek": 50000, "start": 512.0, "end": 527.0, "text": " And we don't normally have to worry about it, but you can optimize convolutions using Fourier transforms, you know, and using complex representation.", "tokens": [400, 321, 500, 380, 5646, 362, 281, 3292, 466, 309, 11, 457, 291, 393, 19719, 3754, 15892, 1228, 36810, 35592, 11, 291, 458, 11, 293, 1228, 3997, 10290, 13], "temperature": 0.0, "avg_logprob": -0.13551297263493614, "compression_ratio": 1.4818652849740932, "no_speech_prob": 8.1366906670155e-06}, {"id": 85, "seek": 52700, "start": 527.0, "end": 549.0, "text": " That's kind of handled for us by Kudi and N, nowadays. But yeah, you know, inputs and outputs as complex numbers is certainly a thing and also if you've got layers that represent kind of more like, you know, the activations you hope might kind of represent", "tokens": [663, 311, 733, 295, 18033, 337, 505, 538, 591, 26000, 293, 426, 11, 13434, 13, 583, 1338, 11, 291, 458, 11, 15743, 293, 23930, 382, 3997, 3547, 307, 3297, 257, 551, 293, 611, 498, 291, 600, 658, 7914, 300, 2906, 733, 295, 544, 411, 11, 291, 458, 11, 264, 2430, 763, 291, 1454, 1062, 733, 295, 2906], "temperature": 0.0, "avg_logprob": -0.2302918981333248, "compression_ratio": 1.5058823529411764, "no_speech_prob": 1.952292222995311e-05}, {"id": 86, "seek": 54900, "start": 549.0, "end": 558.0, "text": " something from your domain, they might, you know, be represented well as complex numbers, you might have loss functions based on that or...", "tokens": [746, 490, 428, 9274, 11, 436, 1062, 11, 291, 458, 11, 312, 10379, 731, 382, 3997, 3547, 11, 291, 1062, 362, 4470, 6828, 2361, 322, 300, 420, 485], "temperature": 0.0, "avg_logprob": -0.13872781440393248, "compression_ratio": 1.457142857142857, "no_speech_prob": 7.888283107604366e-06}, {"id": 87, "seek": 54900, "start": 558.0, "end": 560.0, "text": " Cool. Yeah.", "tokens": [8561, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.13872781440393248, "compression_ratio": 1.457142857142857, "no_speech_prob": 7.888283107604366e-06}, {"id": 88, "seek": 54900, "start": 560.0, "end": 570.0, "text": " The only time I've used them in PyTorch is for audio, but I know other folks use them for other things.", "tokens": [440, 787, 565, 286, 600, 1143, 552, 294, 9953, 51, 284, 339, 307, 337, 6278, 11, 457, 286, 458, 661, 4024, 764, 552, 337, 661, 721, 13], "temperature": 0.0, "avg_logprob": -0.13872781440393248, "compression_ratio": 1.457142857142857, "no_speech_prob": 7.888283107604366e-06}, {"id": 89, "seek": 57000, "start": 570.0, "end": 589.0, "text": " I also saw that Adam, who actually works at Dialog, and I think he's the guy at Arraycast who said he's like used APL his whole life, answered some of our questions.", "tokens": [286, 611, 1866, 300, 7938, 11, 567, 767, 1985, 412, 29658, 664, 11, 293, 286, 519, 415, 311, 264, 2146, 412, 1587, 3458, 3734, 567, 848, 415, 311, 411, 1143, 5372, 43, 702, 1379, 993, 11, 10103, 512, 295, 527, 1651, 13], "temperature": 0.0, "avg_logprob": -0.11405612074810526, "compression_ratio": 1.2692307692307692, "no_speech_prob": 1.3629446584673133e-05}, {"id": 90, "seek": 58900, "start": 589.0, "end": 604.0, "text": " Okay, so if you use, I'm on Mac, not on Windows, but on Windows, once you've removed some docked Windows, you can click Session Save, you can right click on the language bar and hide caption.", "tokens": [1033, 11, 370, 498, 291, 764, 11, 286, 478, 322, 5707, 11, 406, 322, 8591, 11, 457, 322, 8591, 11, 1564, 291, 600, 7261, 512, 20929, 292, 8591, 11, 291, 393, 2052, 318, 4311, 15541, 11, 291, 393, 558, 2052, 322, 264, 2856, 2159, 293, 6479, 31974, 13], "temperature": 0.0, "avg_logprob": -0.15566313444678462, "compression_ratio": 1.5605095541401275, "no_speech_prob": 1.1657845789159182e-05}, {"id": 91, "seek": 58900, "start": 604.0, "end": 608.0, "text": " Once you've got boxing on, you can save your session.", "tokens": [3443, 291, 600, 658, 24424, 322, 11, 291, 393, 3155, 428, 5481, 13], "temperature": 0.0, "avg_logprob": -0.15566313444678462, "compression_ratio": 1.5605095541401275, "no_speech_prob": 1.1657845789159182e-05}, {"id": 92, "seek": 60800, "start": 608.0, "end": 620.0, "text": " And yes, I've already thrown the forum to get backticks with the in-browser backticks space. So that was good to get Adam to answer some of our questions.", "tokens": [400, 2086, 11, 286, 600, 1217, 11732, 264, 17542, 281, 483, 646, 83, 7663, 365, 264, 294, 12, 1443, 30947, 646, 83, 7663, 1901, 13, 407, 300, 390, 665, 281, 483, 7938, 281, 1867, 512, 295, 527, 1651, 13], "temperature": 0.0, "avg_logprob": -0.17248101820025527, "compression_ratio": 1.4189189189189189, "no_speech_prob": 9.36529704631539e-06}, {"id": 93, "seek": 60800, "start": 620.0, "end": 633.0, "text": " And then the other thing I wanted to mention is that...", "tokens": [400, 550, 264, 661, 551, 286, 1415, 281, 2152, 307, 300, 485], "temperature": 0.0, "avg_logprob": -0.17248101820025527, "compression_ratio": 1.4189189189189189, "no_speech_prob": 9.36529704631539e-06}, {"id": 94, "seek": 63300, "start": 633.0, "end": 640.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.15484934586745042, "compression_ratio": 1.4067796610169492, "no_speech_prob": 6.701529491692781e-05}, {"id": 95, "seek": 63300, "start": 640.0, "end": 645.0, "text": " Wasim did some really nice notes, which I finally got around to reading.", "tokens": [3027, 332, 630, 512, 534, 1481, 5570, 11, 597, 286, 2721, 658, 926, 281, 3760, 13], "temperature": 0.0, "avg_logprob": -0.15484934586745042, "compression_ratio": 1.4067796610169492, "no_speech_prob": 6.701529491692781e-05}, {"id": 96, "seek": 63300, "start": 645.0, "end": 651.0, "text": " And so I, yeah, I actually highly recommend them. So they're linked from the Lesson 1 forum.", "tokens": [400, 370, 286, 11, 1338, 11, 286, 767, 5405, 2748, 552, 13, 407, 436, 434, 9408, 490, 264, 18649, 266, 502, 17542, 13], "temperature": 0.0, "avg_logprob": -0.15484934586745042, "compression_ratio": 1.4067796610169492, "no_speech_prob": 6.701529491692781e-05}, {"id": 97, "seek": 63300, "start": 651.0, "end": 654.0, "text": " So thanks for doing that, Wasim.", "tokens": [407, 3231, 337, 884, 300, 11, 3027, 332, 13], "temperature": 0.0, "avg_logprob": -0.15484934586745042, "compression_ratio": 1.4067796610169492, "no_speech_prob": 6.701529491692781e-05}, {"id": 98, "seek": 63300, "start": 654.0, "end": 657.0, "text": " Am I pronouncing your name right?", "tokens": [2012, 286, 14144, 2175, 428, 1315, 558, 30], "temperature": 0.0, "avg_logprob": -0.15484934586745042, "compression_ratio": 1.4067796610169492, "no_speech_prob": 6.701529491692781e-05}, {"id": 99, "seek": 63300, "start": 657.0, "end": 658.0, "text": " Yep.", "tokens": [7010, 13], "temperature": 0.0, "avg_logprob": -0.15484934586745042, "compression_ratio": 1.4067796610169492, "no_speech_prob": 6.701529491692781e-05}, {"id": 100, "seek": 63300, "start": 658.0, "end": 659.0, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.15484934586745042, "compression_ratio": 1.4067796610169492, "no_speech_prob": 6.701529491692781e-05}, {"id": 101, "seek": 65900, "start": 659.0, "end": 665.0, "text": " Chris, where is that name from? You're in South Africa, right?", "tokens": [6688, 11, 689, 307, 300, 1315, 490, 30, 509, 434, 294, 4242, 7349, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.15448836276405736, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.0002764576638583094}, {"id": 102, "seek": 65900, "start": 665.0, "end": 668.0, "text": " So funny enough, I'm in Sydney at the moment.", "tokens": [407, 4074, 1547, 11, 286, 478, 294, 21065, 412, 264, 1623, 13], "temperature": 0.0, "avg_logprob": -0.15448836276405736, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.0002764576638583094}, {"id": 103, "seek": 65900, "start": 668.0, "end": 669.0, "text": " No way.", "tokens": [883, 636, 13], "temperature": 0.0, "avg_logprob": -0.15448836276405736, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.0002764576638583094}, {"id": 104, "seek": 65900, "start": 669.0, "end": 674.0, "text": " My parents, but I'm originally from South Africa.", "tokens": [1222, 3152, 11, 457, 286, 478, 7993, 490, 4242, 7349, 13], "temperature": 0.0, "avg_logprob": -0.15448836276405736, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.0002764576638583094}, {"id": 105, "seek": 65900, "start": 674.0, "end": 677.0, "text": " And the name is Arabic.", "tokens": [400, 264, 1315, 307, 19938, 13], "temperature": 0.0, "avg_logprob": -0.15448836276405736, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.0002764576638583094}, {"id": 106, "seek": 65900, "start": 677.0, "end": 679.0, "text": " Cool. Welcome to Australia.", "tokens": [8561, 13, 4027, 281, 7060, 13], "temperature": 0.0, "avg_logprob": -0.15448836276405736, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.0002764576638583094}, {"id": 107, "seek": 65900, "start": 679.0, "end": 681.0, "text": " Better time zone for you.", "tokens": [15753, 565, 6668, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.15448836276405736, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.0002764576638583094}, {"id": 108, "seek": 65900, "start": 681.0, "end": 683.0, "text": " How long are you here for?", "tokens": [1012, 938, 366, 291, 510, 337, 30], "temperature": 0.0, "avg_logprob": -0.15448836276405736, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.0002764576638583094}, {"id": 109, "seek": 65900, "start": 683.0, "end": 686.0, "text": " Until end of next month, actually.", "tokens": [9088, 917, 295, 958, 1618, 11, 767, 13], "temperature": 0.0, "avg_logprob": -0.15448836276405736, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.0002764576638583094}, {"id": 110, "seek": 68600, "start": 686.0, "end": 690.0, "text": " It's a nice long time. Great. Yeah.", "tokens": [467, 311, 257, 1481, 938, 565, 13, 3769, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.1111299829575622, "compression_ratio": 1.5401785714285714, "no_speech_prob": 7.475887832697481e-05}, {"id": 111, "seek": 68600, "start": 690.0, "end": 699.0, "text": " If you say hi in the forum, if you want to meet up with any Fast AI people, I'm sure there's, I know there's a bunch of people in Sydney.", "tokens": [759, 291, 584, 4879, 294, 264, 17542, 11, 498, 291, 528, 281, 1677, 493, 365, 604, 15968, 7318, 561, 11, 286, 478, 988, 456, 311, 11, 286, 458, 456, 311, 257, 3840, 295, 561, 294, 21065, 13], "temperature": 0.0, "avg_logprob": -0.1111299829575622, "compression_ratio": 1.5401785714285714, "no_speech_prob": 7.475887832697481e-05}, {"id": 112, "seek": 68600, "start": 699.0, "end": 703.0, "text": " Yeah, these are great notes. Thank you so much.", "tokens": [865, 11, 613, 366, 869, 5570, 13, 1044, 291, 370, 709, 13], "temperature": 0.0, "avg_logprob": -0.1111299829575622, "compression_ratio": 1.5401785714285714, "no_speech_prob": 7.475887832697481e-05}, {"id": 113, "seek": 68600, "start": 703.0, "end": 705.0, "text": " I love that you've got the juggling notation.", "tokens": [286, 959, 300, 291, 600, 658, 264, 361, 29921, 24657, 13], "temperature": 0.0, "avg_logprob": -0.1111299829575622, "compression_ratio": 1.5401785714285714, "no_speech_prob": 7.475887832697481e-05}, {"id": 114, "seek": 68600, "start": 705.0, "end": 708.0, "text": " Had you come across juggling notation before we discussed it?", "tokens": [12298, 291, 808, 2108, 361, 29921, 24657, 949, 321, 7152, 309, 30], "temperature": 0.0, "avg_logprob": -0.1111299829575622, "compression_ratio": 1.5401785714285714, "no_speech_prob": 7.475887832697481e-05}, {"id": 115, "seek": 68600, "start": 708.0, "end": 710.0, "text": " No, not at all.", "tokens": [883, 11, 406, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.1111299829575622, "compression_ratio": 1.5401785714285714, "no_speech_prob": 7.475887832697481e-05}, {"id": 116, "seek": 71000, "start": 710.0, "end": 716.0, "text": " It's interesting, isn't it? It's like it was game changing, apparently.", "tokens": [467, 311, 1880, 11, 1943, 380, 309, 30, 467, 311, 411, 309, 390, 1216, 4473, 11, 7970, 13], "temperature": 0.0, "avg_logprob": -0.1876070022583008, "compression_ratio": 1.5337078651685394, "no_speech_prob": 4.467440885491669e-05}, {"id": 117, "seek": 71000, "start": 716.0, "end": 722.0, "text": " And Aaron Hughes PhD. I don't know how you pronounce this name.", "tokens": [400, 14018, 41102, 14476, 13, 286, 500, 380, 458, 577, 291, 19567, 341, 1315, 13], "temperature": 0.0, "avg_logprob": -0.1876070022583008, "compression_ratio": 1.5337078651685394, "no_speech_prob": 4.467440885491669e-05}, {"id": 118, "seek": 71000, "start": 722.0, "end": 727.0, "text": " Serada, you might know. Do you know how you pronounce this? I guess this is a Chinese name.", "tokens": [4210, 1538, 11, 291, 1062, 458, 13, 1144, 291, 458, 577, 291, 19567, 341, 30, 286, 2041, 341, 307, 257, 4649, 1315, 13], "temperature": 0.0, "avg_logprob": -0.1876070022583008, "compression_ratio": 1.5337078651685394, "no_speech_prob": 4.467440885491669e-05}, {"id": 119, "seek": 71000, "start": 727.0, "end": 731.0, "text": " I know it's not Pinyin, but it's...", "tokens": [286, 458, 309, 311, 406, 430, 3519, 259, 11, 457, 309, 311, 485], "temperature": 0.0, "avg_logprob": -0.1876070022583008, "compression_ratio": 1.5337078651685394, "no_speech_prob": 4.467440885491669e-05}, {"id": 120, "seek": 71000, "start": 731.0, "end": 737.0, "text": " No? Okay.", "tokens": [883, 30, 1033, 13], "temperature": 0.0, "avg_logprob": -0.1876070022583008, "compression_ratio": 1.5337078651685394, "no_speech_prob": 4.467440885491669e-05}, {"id": 121, "seek": 73700, "start": 737.0, "end": 743.0, "text": " I thought for APL today...", "tokens": [286, 1194, 337, 5372, 43, 965, 485], "temperature": 0.0, "avg_logprob": -0.11244248672270439, "compression_ratio": 1.3944444444444444, "no_speech_prob": 4.5321758079808205e-05}, {"id": 122, "seek": 73700, "start": 743.0, "end": 745.0, "text": " Oh, good. There's a link here. Thank you.", "tokens": [876, 11, 665, 13, 821, 311, 257, 2113, 510, 13, 1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.11244248672270439, "compression_ratio": 1.3944444444444444, "no_speech_prob": 4.5321758079808205e-05}, {"id": 123, "seek": 73700, "start": 745.0, "end": 763.0, "text": " By the way, for those of you who hadn't noticed, at least when I remember or when Serada reminds me, I click on the Make Wiki, which means that anybody can click Edit on these posts.", "tokens": [3146, 264, 636, 11, 337, 729, 295, 291, 567, 8782, 380, 5694, 11, 412, 1935, 562, 286, 1604, 420, 562, 4210, 1538, 12025, 385, 11, 286, 2052, 322, 264, 4387, 35892, 11, 597, 1355, 300, 4472, 393, 2052, 33241, 322, 613, 12300, 13], "temperature": 0.0, "avg_logprob": -0.11244248672270439, "compression_ratio": 1.3944444444444444, "no_speech_prob": 4.5321758079808205e-05}, {"id": 124, "seek": 76300, "start": 763.0, "end": 769.0, "text": " So thank you for those of you who have been adding stuff to them.", "tokens": [407, 1309, 291, 337, 729, 295, 291, 567, 362, 668, 5127, 1507, 281, 552, 13], "temperature": 0.0, "avg_logprob": -0.09999895777021135, "compression_ratio": 1.5265957446808511, "no_speech_prob": 4.329580769990571e-05}, {"id": 125, "seek": 76300, "start": 769.0, "end": 783.0, "text": " I was thinking like in terms of stuff that's going to help us understand more of the documentation and do more things, I think there's two main things I wanted to cover today, which is left arrow and row.", "tokens": [286, 390, 1953, 411, 294, 2115, 295, 1507, 300, 311, 516, 281, 854, 505, 1223, 544, 295, 264, 14333, 293, 360, 544, 721, 11, 286, 519, 456, 311, 732, 2135, 721, 286, 1415, 281, 2060, 965, 11, 597, 307, 1411, 11610, 293, 5386, 13], "temperature": 0.0, "avg_logprob": -0.09999895777021135, "compression_ratio": 1.5265957446808511, "no_speech_prob": 4.329580769990571e-05}, {"id": 126, "seek": 76300, "start": 783.0, "end": 788.0, "text": " And basically...", "tokens": [400, 1936, 485], "temperature": 0.0, "avg_logprob": -0.09999895777021135, "compression_ratio": 1.5265957446808511, "no_speech_prob": 4.329580769990571e-05}, {"id": 127, "seek": 78800, "start": 788.0, "end": 799.0, "text": " Do they call it left arrow? They do. Okay, cool. So left arrow, which is left square bracket, is used to assign names to variables.", "tokens": [1144, 436, 818, 309, 1411, 11610, 30, 814, 360, 13, 1033, 11, 1627, 13, 407, 1411, 11610, 11, 597, 307, 1411, 3732, 16904, 11, 307, 1143, 281, 6269, 5288, 281, 9102, 13], "temperature": 0.0, "avg_logprob": -0.10826608339945475, "compression_ratio": 1.3774834437086092, "no_speech_prob": 6.20153296040371e-05}, {"id": 128, "seek": 78800, "start": 799.0, "end": 806.0, "text": " So A is 3.", "tokens": [407, 316, 307, 805, 13], "temperature": 0.0, "avg_logprob": -0.10826608339945475, "compression_ratio": 1.3774834437086092, "no_speech_prob": 6.20153296040371e-05}, {"id": 129, "seek": 78800, "start": 806.0, "end": 814.0, "text": " So obviously in a lot of languages, we would use equals for that.", "tokens": [407, 2745, 294, 257, 688, 295, 8650, 11, 321, 576, 764, 6915, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.10826608339945475, "compression_ratio": 1.3774834437086092, "no_speech_prob": 6.20153296040371e-05}, {"id": 130, "seek": 81400, "start": 814.0, "end": 822.0, "text": " But, you know, a statement like x equals x plus 1 is not a mathematically sane statement.", "tokens": [583, 11, 291, 458, 11, 257, 5629, 411, 2031, 6915, 2031, 1804, 502, 307, 406, 257, 44003, 45610, 5629, 13], "temperature": 0.0, "avg_logprob": -0.10762334120901007, "compression_ratio": 1.617117117117117, "no_speech_prob": 3.645560718723573e-05}, {"id": 131, "seek": 81400, "start": 822.0, "end": 830.0, "text": " So I'm glad APL does not use equals to mean that. So in other languages, we have to say equals equals to mean that.", "tokens": [407, 286, 478, 5404, 5372, 43, 775, 406, 764, 6915, 281, 914, 300, 13, 407, 294, 661, 8650, 11, 321, 362, 281, 584, 6915, 6915, 281, 914, 300, 13], "temperature": 0.0, "avg_logprob": -0.10762334120901007, "compression_ratio": 1.617117117117117, "no_speech_prob": 3.645560718723573e-05}, {"id": 132, "seek": 81400, "start": 830.0, "end": 837.0, "text": " And I know this is something, you know, the kids I teach found quite confusing when we're doing Python.", "tokens": [400, 286, 458, 341, 307, 746, 11, 291, 458, 11, 264, 2301, 286, 2924, 1352, 1596, 13181, 562, 321, 434, 884, 15329, 13], "temperature": 0.0, "avg_logprob": -0.10762334120901007, "compression_ratio": 1.617117117117117, "no_speech_prob": 3.645560718723573e-05}, {"id": 133, "seek": 81400, "start": 837.0, "end": 842.0, "text": " It's like, it's a very strange meaning of equals.", "tokens": [467, 311, 411, 11, 309, 311, 257, 588, 5861, 3620, 295, 6915, 13], "temperature": 0.0, "avg_logprob": -0.10762334120901007, "compression_ratio": 1.617117117117117, "no_speech_prob": 3.645560718723573e-05}, {"id": 134, "seek": 84200, "start": 842.0, "end": 852.0, "text": " So you can absolutely do that. You know, if you've got something called x, you can rebind it to its previous value plus 1.", "tokens": [407, 291, 393, 3122, 360, 300, 13, 509, 458, 11, 498, 291, 600, 658, 746, 1219, 2031, 11, 291, 393, 12970, 471, 309, 281, 1080, 3894, 2158, 1804, 502, 13], "temperature": 0.0, "avg_logprob": -0.12321467582996075, "compression_ratio": 1.25, "no_speech_prob": 7.410461421386572e-06}, {"id": 135, "seek": 84200, "start": 852.0, "end": 858.0, "text": " I mean, let's try it. A plus 1.", "tokens": [286, 914, 11, 718, 311, 853, 309, 13, 316, 1804, 502, 13], "temperature": 0.0, "avg_logprob": -0.12321467582996075, "compression_ratio": 1.25, "no_speech_prob": 7.410461421386572e-06}, {"id": 136, "seek": 84200, "start": 858.0, "end": 861.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.12321467582996075, "compression_ratio": 1.25, "no_speech_prob": 7.410461421386572e-06}, {"id": 137, "seek": 86100, "start": 861.0, "end": 873.0, "text": " If you add a plus sign before that A, you'd have A plus A arrow A plus 1, it'll actually print it out for you as well.", "tokens": [759, 291, 909, 257, 1804, 1465, 949, 300, 316, 11, 291, 1116, 362, 316, 1804, 316, 11610, 316, 1804, 502, 11, 309, 603, 767, 4482, 309, 484, 337, 291, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.21326923370361328, "compression_ratio": 1.4484848484848485, "no_speech_prob": 2.1907476366322953e-06}, {"id": 138, "seek": 86100, "start": 873.0, "end": 881.0, "text": " Just to save you a line. I mean, that makes sense, doesn't it, right? Because we learned that monadic plus is conjugate.", "tokens": [1449, 281, 3155, 291, 257, 1622, 13, 286, 914, 11, 300, 1669, 2020, 11, 1177, 380, 309, 11, 558, 30, 1436, 321, 3264, 300, 1108, 43341, 1804, 307, 45064, 13], "temperature": 0.0, "avg_logprob": -0.21326923370361328, "compression_ratio": 1.4484848484848485, "no_speech_prob": 2.1907476366322953e-06}, {"id": 139, "seek": 88100, "start": 881.0, "end": 892.0, "text": " Now, that won't work for a complex number because it will actually give you the conjugate. But yeah, this is going to return the conjugate of everything to the right.", "tokens": [823, 11, 300, 1582, 380, 589, 337, 257, 3997, 1230, 570, 309, 486, 767, 976, 291, 264, 45064, 13, 583, 1338, 11, 341, 307, 516, 281, 2736, 264, 45064, 295, 1203, 281, 264, 558, 13], "temperature": 0.0, "avg_logprob": -0.13063050571240878, "compression_ratio": 1.5792079207920793, "no_speech_prob": 9.570770771460957e-07}, {"id": 140, "seek": 88100, "start": 892.0, "end": 903.0, "text": " So assignment is returning the assigned value and then taking the conjugate of it will as a result print it out.", "tokens": [407, 15187, 307, 12678, 264, 13279, 2158, 293, 550, 1940, 264, 45064, 295, 309, 486, 382, 257, 1874, 4482, 309, 484, 13], "temperature": 0.0, "avg_logprob": -0.13063050571240878, "compression_ratio": 1.5792079207920793, "no_speech_prob": 9.570770771460957e-07}, {"id": 141, "seek": 88100, "start": 903.0, "end": 909.0, "text": " I think this might be better. LeftTack.", "tokens": [286, 519, 341, 1062, 312, 1101, 13, 16405, 51, 501, 13], "temperature": 0.0, "avg_logprob": -0.13063050571240878, "compression_ratio": 1.5792079207920793, "no_speech_prob": 9.570770771460957e-07}, {"id": 142, "seek": 90900, "start": 909.0, "end": 915.0, "text": " That's because that's actually always monadic function. Same.", "tokens": [663, 311, 570, 300, 311, 767, 1009, 1108, 43341, 2445, 13, 10635, 13], "temperature": 0.0, "avg_logprob": -0.1695379649891573, "compression_ratio": 1.5485714285714285, "no_speech_prob": 1.6700698324711993e-05}, {"id": 143, "seek": 90900, "start": 915.0, "end": 922.0, "text": " So if I replace this with that.", "tokens": [407, 498, 286, 7406, 341, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.1695379649891573, "compression_ratio": 1.5485714285714285, "no_speech_prob": 1.6700698324711993e-05}, {"id": 144, "seek": 90900, "start": 922.0, "end": 938.0, "text": " And I think you can also, when you start nesting these assignments, because these assignments can be, you could create a new variable as part of, you can create A is left arrow.", "tokens": [400, 286, 519, 291, 393, 611, 11, 562, 291, 722, 297, 8714, 613, 22546, 11, 570, 613, 22546, 393, 312, 11, 291, 727, 1884, 257, 777, 7006, 382, 644, 295, 11, 291, 393, 1884, 316, 307, 1411, 11610, 13], "temperature": 0.0, "avg_logprob": -0.1695379649891573, "compression_ratio": 1.5485714285714285, "no_speech_prob": 1.6700698324711993e-05}, {"id": 145, "seek": 93800, "start": 938.0, "end": 943.0, "text": " Left arrow B plus 1, A plus 1. So you can actually nest them.", "tokens": [16405, 11610, 363, 1804, 502, 11, 316, 1804, 502, 13, 407, 291, 393, 767, 15646, 552, 13], "temperature": 0.0, "avg_logprob": -0.25856658533999793, "compression_ratio": 1.530612244897959, "no_speech_prob": 2.507069439161569e-05}, {"id": 146, "seek": 93800, "start": 943.0, "end": 950.0, "text": " I think if you do left arrow and then the box, I forget what it's called. Assignment in the box.", "tokens": [286, 519, 498, 291, 360, 1411, 11610, 293, 550, 264, 2424, 11, 286, 2870, 437, 309, 311, 1219, 13, 6281, 41134, 294, 264, 2424, 13], "temperature": 0.0, "avg_logprob": -0.25856658533999793, "compression_ratio": 1.530612244897959, "no_speech_prob": 2.507069439161569e-05}, {"id": 147, "seek": 93800, "start": 950.0, "end": 954.0, "text": " This quad, which is, is that an L there? That tick L?", "tokens": [639, 10787, 11, 597, 307, 11, 307, 300, 364, 441, 456, 30, 663, 5204, 441, 30], "temperature": 0.0, "avg_logprob": -0.25856658533999793, "compression_ratio": 1.530612244897959, "no_speech_prob": 2.507069439161569e-05}, {"id": 148, "seek": 93800, "start": 954.0, "end": 956.0, "text": " Yes. Yeah.", "tokens": [1079, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.25856658533999793, "compression_ratio": 1.530612244897959, "no_speech_prob": 2.507069439161569e-05}, {"id": 149, "seek": 93800, "start": 956.0, "end": 960.0, "text": " So I think if you assign to that.", "tokens": [407, 286, 519, 498, 291, 6269, 281, 300, 13], "temperature": 0.0, "avg_logprob": -0.25856658533999793, "compression_ratio": 1.530612244897959, "no_speech_prob": 2.507069439161569e-05}, {"id": 150, "seek": 93800, "start": 960.0, "end": 963.0, "text": " That's what they do with the docs usually.", "tokens": [663, 311, 437, 436, 360, 365, 264, 45623, 2673, 13], "temperature": 0.0, "avg_logprob": -0.25856658533999793, "compression_ratio": 1.530612244897959, "no_speech_prob": 2.507069439161569e-05}, {"id": 151, "seek": 96300, "start": 963.0, "end": 969.0, "text": " The new monic is you're kind of like saving to the screen.", "tokens": [440, 777, 1108, 299, 307, 291, 434, 733, 295, 411, 6816, 281, 264, 2568, 13], "temperature": 0.0, "avg_logprob": -0.13904676267078944, "compression_ratio": 1.2773722627737227, "no_speech_prob": 2.2827765860711224e-05}, {"id": 152, "seek": 96300, "start": 969.0, "end": 973.0, "text": " Got it. So that's a special thing to assign to.", "tokens": [5803, 309, 13, 407, 300, 311, 257, 2121, 551, 281, 6269, 281, 13], "temperature": 0.0, "avg_logprob": -0.13904676267078944, "compression_ratio": 1.2773722627737227, "no_speech_prob": 2.2827765860711224e-05}, {"id": 153, "seek": 96300, "start": 973.0, "end": 979.0, "text": " Yeah, a lot of the IO operations are handled by quad.", "tokens": [865, 11, 257, 688, 295, 264, 39839, 7705, 366, 18033, 538, 10787, 13], "temperature": 0.0, "avg_logprob": -0.13904676267078944, "compression_ratio": 1.2773722627737227, "no_speech_prob": 2.2827765860711224e-05}, {"id": 154, "seek": 96300, "start": 979.0, "end": 986.0, "text": " Uh huh. Great.", "tokens": [4019, 7020, 13, 3769, 13], "temperature": 0.0, "avg_logprob": -0.13904676267078944, "compression_ratio": 1.2773722627737227, "no_speech_prob": 2.2827765860711224e-05}, {"id": 155, "seek": 98600, "start": 986.0, "end": 995.0, "text": " Now the other interesting thing, which is happening.", "tokens": [823, 264, 661, 1880, 551, 11, 597, 307, 2737, 13], "temperature": 0.0, "avg_logprob": -0.2189041992713665, "compression_ratio": 1.2291666666666667, "no_speech_prob": 2.902097548940219e-06}, {"id": 156, "seek": 98600, "start": 995.0, "end": 1009.0, "text": " Is that Isaac has started creating a website for the study group.", "tokens": [1119, 300, 22505, 575, 1409, 4084, 257, 3144, 337, 264, 2979, 1594, 13], "temperature": 0.0, "avg_logprob": -0.2189041992713665, "compression_ratio": 1.2291666666666667, "no_speech_prob": 2.902097548940219e-06}, {"id": 157, "seek": 100900, "start": 1009.0, "end": 1016.0, "text": " Which is not quite up and running yet.", "tokens": [3013, 307, 406, 1596, 493, 293, 2614, 1939, 13], "temperature": 0.0, "avg_logprob": -0.22948669565135035, "compression_ratio": 1.3509933774834437, "no_speech_prob": 8.579160635235894e-07}, {"id": 158, "seek": 100900, "start": 1016.0, "end": 1021.0, "text": " Did you do the settings pages?", "tokens": [2589, 291, 360, 264, 6257, 7183, 30], "temperature": 0.0, "avg_logprob": -0.22948669565135035, "compression_ratio": 1.3509933774834437, "no_speech_prob": 8.579160635235894e-07}, {"id": 159, "seek": 100900, "start": 1021.0, "end": 1026.0, "text": " The GitHub pages, the GitHub pages branch and all that.", "tokens": [440, 23331, 7183, 11, 264, 23331, 7183, 9819, 293, 439, 300, 13], "temperature": 0.0, "avg_logprob": -0.22948669565135035, "compression_ratio": 1.3509933774834437, "no_speech_prob": 8.579160635235894e-07}, {"id": 160, "seek": 100900, "start": 1026.0, "end": 1034.0, "text": " Yeah, I think we could just probably do that now. So let me, while I remember.", "tokens": [865, 11, 286, 519, 321, 727, 445, 1391, 360, 300, 586, 13, 407, 718, 385, 11, 1339, 286, 1604, 13], "temperature": 0.0, "avg_logprob": -0.22948669565135035, "compression_ratio": 1.3509933774834437, "no_speech_prob": 8.579160635235894e-07}, {"id": 161, "seek": 103400, "start": 1034.0, "end": 1039.0, "text": " Do a git pull and then yeah, we should be.", "tokens": [1144, 257, 18331, 2235, 293, 550, 1338, 11, 321, 820, 312, 13], "temperature": 0.0, "avg_logprob": -0.158446803689003, "compression_ratio": 1.3974358974358974, "no_speech_prob": 3.7265781429596245e-06}, {"id": 162, "seek": 103400, "start": 1039.0, "end": 1046.0, "text": " So for those of you that don't know, GitHub has a very nice feature called GitHub pages,", "tokens": [407, 337, 729, 295, 291, 300, 500, 380, 458, 11, 23331, 575, 257, 588, 1481, 4111, 1219, 23331, 7183, 11], "temperature": 0.0, "avg_logprob": -0.158446803689003, "compression_ratio": 1.3974358974358974, "no_speech_prob": 3.7265781429596245e-06}, {"id": 163, "seek": 103400, "start": 1046.0, "end": 1051.0, "text": " which basically turns a repo into a website.", "tokens": [597, 1936, 4523, 257, 49040, 666, 257, 3144, 13], "temperature": 0.0, "avg_logprob": -0.158446803689003, "compression_ratio": 1.3974358974358974, "no_speech_prob": 3.7265781429596245e-06}, {"id": 164, "seek": 103400, "start": 1051.0, "end": 1057.0, "text": " And to use it.", "tokens": [400, 281, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.158446803689003, "compression_ratio": 1.3974358974358974, "no_speech_prob": 3.7265781429596245e-06}, {"id": 165, "seek": 103400, "start": 1057.0, "end": 1061.0, "text": " You basically go to pages.", "tokens": [509, 1936, 352, 281, 7183, 13], "temperature": 0.0, "avg_logprob": -0.158446803689003, "compression_ratio": 1.3974358974358974, "no_speech_prob": 3.7265781429596245e-06}, {"id": 166, "seek": 106100, "start": 1061.0, "end": 1067.0, "text": " And you say, sources this branch.", "tokens": [400, 291, 584, 11, 7139, 341, 9819, 13], "temperature": 0.0, "avg_logprob": -0.16923800110816956, "compression_ratio": 1.3986928104575163, "no_speech_prob": 6.2408084886556026e-06}, {"id": 167, "seek": 106100, "start": 1067.0, "end": 1074.0, "text": " And in theory, I should now be able to click on this.", "tokens": [400, 294, 5261, 11, 286, 820, 586, 312, 1075, 281, 2052, 322, 341, 13], "temperature": 0.0, "avg_logprob": -0.16923800110816956, "compression_ratio": 1.3986928104575163, "no_speech_prob": 6.2408084886556026e-06}, {"id": 168, "seek": 106100, "start": 1074.0, "end": 1076.0, "text": " We may need to.", "tokens": [492, 815, 643, 281, 13], "temperature": 0.0, "avg_logprob": -0.16923800110816956, "compression_ratio": 1.3986928104575163, "no_speech_prob": 6.2408084886556026e-06}, {"id": 169, "seek": 106100, "start": 1076.0, "end": 1083.0, "text": " Oops. So I can check what's going on by switching to that branch.", "tokens": [21726, 13, 407, 286, 393, 1520, 437, 311, 516, 322, 538, 16493, 281, 300, 9819, 13], "temperature": 0.0, "avg_logprob": -0.16923800110816956, "compression_ratio": 1.3986928104575163, "no_speech_prob": 6.2408084886556026e-06}, {"id": 170, "seek": 106100, "start": 1083.0, "end": 1086.0, "text": " Okay, so there's definitely something there.", "tokens": [1033, 11, 370, 456, 311, 2138, 746, 456, 13], "temperature": 0.0, "avg_logprob": -0.16923800110816956, "compression_ratio": 1.3986928104575163, "no_speech_prob": 6.2408084886556026e-06}, {"id": 171, "seek": 108600, "start": 1086.0, "end": 1093.0, "text": " I can do a little after I set the settings and pages, I had to make a small commit to publish the first time.", "tokens": [286, 393, 360, 257, 707, 934, 286, 992, 264, 6257, 293, 7183, 11, 286, 632, 281, 652, 257, 1359, 5599, 281, 11374, 264, 700, 565, 13], "temperature": 0.0, "avg_logprob": -0.20750210285186768, "compression_ratio": 1.5, "no_speech_prob": 1.6700305423000827e-05}, {"id": 172, "seek": 108600, "start": 1093.0, "end": 1095.0, "text": " I've noticed that too.", "tokens": [286, 600, 5694, 300, 886, 13], "temperature": 0.0, "avg_logprob": -0.20750210285186768, "compression_ratio": 1.5, "no_speech_prob": 1.6700305423000827e-05}, {"id": 173, "seek": 108600, "start": 1095.0, "end": 1101.0, "text": " Okay, I'll remove one carriage return from here.", "tokens": [1033, 11, 286, 603, 4159, 472, 31811, 2736, 490, 510, 13], "temperature": 0.0, "avg_logprob": -0.20750210285186768, "compression_ratio": 1.5, "no_speech_prob": 1.6700305423000827e-05}, {"id": 174, "seek": 108600, "start": 1101.0, "end": 1108.0, "text": " And", "tokens": [400], "temperature": 0.0, "avg_logprob": -0.20750210285186768, "compression_ratio": 1.5, "no_speech_prob": 1.6700305423000827e-05}, {"id": 175, "seek": 108600, "start": 1108.0, "end": 1109.0, "text": " I can vaguely hear.", "tokens": [286, 393, 13501, 48863, 1568, 13], "temperature": 0.0, "avg_logprob": -0.20750210285186768, "compression_ratio": 1.5, "no_speech_prob": 1.6700305423000827e-05}, {"id": 176, "seek": 108600, "start": 1109.0, "end": 1114.0, "text": " How are you talking? I can vaguely hear your ghostly distant voice.", "tokens": [1012, 366, 291, 1417, 30, 286, 393, 13501, 48863, 1568, 428, 8359, 356, 17275, 3177, 13], "temperature": 0.0, "avg_logprob": -0.20750210285186768, "compression_ratio": 1.5, "no_speech_prob": 1.6700305423000827e-05}, {"id": 177, "seek": 111400, "start": 1114.0, "end": 1117.0, "text": " Can you hear me now?", "tokens": [1664, 291, 1568, 385, 586, 30], "temperature": 0.0, "avg_logprob": -0.2522237373120857, "compression_ratio": 1.3333333333333333, "no_speech_prob": 7.766285307297949e-06}, {"id": 178, "seek": 111400, "start": 1117.0, "end": 1120.0, "text": " It's it's the side is up actually it's ready.", "tokens": [467, 311, 309, 311, 264, 1252, 307, 493, 767, 309, 311, 1919, 13], "temperature": 0.0, "avg_logprob": -0.2522237373120857, "compression_ratio": 1.3333333333333333, "no_speech_prob": 7.766285307297949e-06}, {"id": 179, "seek": 111400, "start": 1120.0, "end": 1123.0, "text": " Fastai.GitHub.io.", "tokens": [15968, 1301, 13, 38, 270, 21150, 13, 1004, 13], "temperature": 0.0, "avg_logprob": -0.2522237373120857, "compression_ratio": 1.3333333333333333, "no_speech_prob": 7.766285307297949e-06}, {"id": 180, "seek": 111400, "start": 1123.0, "end": 1130.0, "text": " Something I like to do is when I go here is I copy this.", "tokens": [6595, 286, 411, 281, 360, 307, 562, 286, 352, 510, 307, 286, 5055, 341, 13], "temperature": 0.0, "avg_logprob": -0.2522237373120857, "compression_ratio": 1.3333333333333333, "no_speech_prob": 7.766285307297949e-06}, {"id": 181, "seek": 111400, "start": 1130.0, "end": 1138.0, "text": " And then I go into settings and paste it here.", "tokens": [400, 550, 286, 352, 666, 6257, 293, 9163, 309, 510, 13], "temperature": 0.0, "avg_logprob": -0.2522237373120857, "compression_ratio": 1.3333333333333333, "no_speech_prob": 7.766285307297949e-06}, {"id": 182, "seek": 113800, "start": 1138.0, "end": 1145.0, "text": " And then I can see how anybody on my page, including me, can jump to the website.", "tokens": [400, 550, 286, 393, 536, 577, 4472, 322, 452, 3028, 11, 3009, 385, 11, 393, 3012, 281, 264, 3144, 13], "temperature": 0.0, "avg_logprob": -0.3144152907074475, "compression_ratio": 1.3377483443708609, "no_speech_prob": 4.157166586082894e-06}, {"id": 183, "seek": 113800, "start": 1145.0, "end": 1149.0, "text": " I really wish they knew that automatically. Yeah.", "tokens": [286, 534, 3172, 436, 2586, 300, 6772, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.3144152907074475, "compression_ratio": 1.3377483443708609, "no_speech_prob": 4.157166586082894e-06}, {"id": 184, "seek": 113800, "start": 1149.0, "end": 1153.0, "text": " Good that. Okay.", "tokens": [2205, 300, 13, 1033, 13], "temperature": 0.0, "avg_logprob": -0.3144152907074475, "compression_ratio": 1.3377483443708609, "no_speech_prob": 4.157166586082894e-06}, {"id": 185, "seek": 113800, "start": 1153.0, "end": 1161.0, "text": " Thank you, Isaac. This is beautiful.", "tokens": [1044, 291, 11, 22505, 13, 639, 307, 2238, 13], "temperature": 0.0, "avg_logprob": -0.3144152907074475, "compression_ratio": 1.3377483443708609, "no_speech_prob": 4.157166586082894e-06}, {"id": 186, "seek": 113800, "start": 1161.0, "end": 1165.0, "text": " There it all is.", "tokens": [821, 309, 439, 307, 13], "temperature": 0.0, "avg_logprob": -0.3144152907074475, "compression_ratio": 1.3377483443708609, "no_speech_prob": 4.157166586082894e-06}, {"id": 187, "seek": 116500, "start": 1165.0, "end": 1169.0, "text": " Notice this thing here automatically pops open.", "tokens": [13428, 341, 551, 510, 6772, 16795, 1269, 13], "temperature": 0.0, "avg_logprob": -0.24928734519264914, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.4737865058123134e-05}, {"id": 188, "seek": 116500, "start": 1169.0, "end": 1179.0, "text": " So this is Quarto, which is what NBdev2 will be using, which is full of neat tricks.", "tokens": [407, 341, 307, 2326, 15864, 11, 597, 307, 437, 426, 33, 40343, 17, 486, 312, 1228, 11, 597, 307, 1577, 295, 10654, 11733, 13], "temperature": 0.0, "avg_logprob": -0.24928734519264914, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.4737865058123134e-05}, {"id": 189, "seek": 116500, "start": 1179.0, "end": 1181.0, "text": " Tags.", "tokens": [11204, 82, 13], "temperature": 0.0, "avg_logprob": -0.24928734519264914, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.4737865058123134e-05}, {"id": 190, "seek": 116500, "start": 1181.0, "end": 1186.0, "text": " So a lot of Quarto's commands are really well designed.", "tokens": [407, 257, 688, 295, 2326, 15864, 311, 16901, 366, 534, 731, 4761, 13], "temperature": 0.0, "avg_logprob": -0.24928734519264914, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.4737865058123134e-05}, {"id": 191, "seek": 116500, "start": 1186.0, "end": 1191.0, "text": " Yeah, it really is.", "tokens": [865, 11, 309, 534, 307, 13], "temperature": 0.0, "avg_logprob": -0.24928734519264914, "compression_ratio": 1.3806451612903226, "no_speech_prob": 1.4737865058123134e-05}, {"id": 192, "seek": 119100, "start": 1191.0, "end": 1196.0, "text": " It's from RStudio, JJ Euler's company and everything he's done has been great.", "tokens": [467, 311, 490, 497, 42665, 1004, 11, 21386, 462, 26318, 311, 2237, 293, 1203, 415, 311, 1096, 575, 668, 869, 13], "temperature": 0.0, "avg_logprob": -0.15361084027236768, "compression_ratio": 1.4196891191709844, "no_speech_prob": 5.6820786085154396e-06}, {"id": 193, "seek": 119100, "start": 1196.0, "end": 1199.0, "text": " He's hired a lot of great people as well.", "tokens": [634, 311, 13144, 257, 688, 295, 869, 561, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.15361084027236768, "compression_ratio": 1.4196891191709844, "no_speech_prob": 5.6820786085154396e-06}, {"id": 194, "seek": 119100, "start": 1199.0, "end": 1205.0, "text": " And he's been super helpful.", "tokens": [400, 415, 311, 668, 1687, 4961, 13], "temperature": 0.0, "avg_logprob": -0.15361084027236768, "compression_ratio": 1.4196891191709844, "no_speech_prob": 5.6820786085154396e-06}, {"id": 195, "seek": 119100, "start": 1205.0, "end": 1211.0, "text": " I think we need some image of some APL thing.", "tokens": [286, 519, 321, 643, 512, 3256, 295, 512, 5372, 43, 551, 13], "temperature": 0.0, "avg_logprob": -0.15361084027236768, "compression_ratio": 1.4196891191709844, "no_speech_prob": 5.6820786085154396e-06}, {"id": 196, "seek": 119100, "start": 1211.0, "end": 1213.0, "text": " That'd be nice.", "tokens": [663, 1116, 312, 1481, 13], "temperature": 0.0, "avg_logprob": -0.15361084027236768, "compression_ratio": 1.4196891191709844, "no_speech_prob": 5.6820786085154396e-06}, {"id": 197, "seek": 119100, "start": 1213.0, "end": 1216.0, "text": " It's a very cool image though.", "tokens": [467, 311, 257, 588, 1627, 3256, 1673, 13], "temperature": 0.0, "avg_logprob": -0.15361084027236768, "compression_ratio": 1.4196891191709844, "no_speech_prob": 5.6820786085154396e-06}, {"id": 198, "seek": 119100, "start": 1216.0, "end": 1218.0, "text": " All right. Well, that was easy.", "tokens": [1057, 558, 13, 1042, 11, 300, 390, 1858, 13], "temperature": 0.0, "avg_logprob": -0.15361084027236768, "compression_ratio": 1.4196891191709844, "no_speech_prob": 5.6820786085154396e-06}, {"id": 199, "seek": 121800, "start": 1218.0, "end": 1221.0, "text": " Yeah, all the images are the Quarto default.", "tokens": [865, 11, 439, 264, 5267, 366, 264, 2326, 15864, 7576, 13], "temperature": 0.0, "avg_logprob": -0.18204086477106268, "compression_ratio": 1.3905325443786982, "no_speech_prob": 1.2409921509970445e-05}, {"id": 200, "seek": 121800, "start": 1221.0, "end": 1235.0, "text": " I see. Well, if anybody wants to do a PR, which uploads an image of, I don't know, a cool formula or picture of Isaac with a little lambda on his head or whatever, you know, that'll be good.", "tokens": [286, 536, 13, 1042, 11, 498, 4472, 2738, 281, 360, 257, 11568, 11, 597, 48611, 364, 3256, 295, 11, 286, 500, 380, 458, 11, 257, 1627, 8513, 420, 3036, 295, 22505, 365, 257, 707, 13607, 322, 702, 1378, 420, 2035, 11, 291, 458, 11, 300, 603, 312, 665, 13], "temperature": 0.0, "avg_logprob": -0.18204086477106268, "compression_ratio": 1.3905325443786982, "no_speech_prob": 1.2409921509970445e-05}, {"id": 201, "seek": 123500, "start": 1235.0, "end": 1255.0, "text": " So the way, yeah, so the way this works is, as I say, basically, the way I like to do it, and it works pretty easily, is if you have a branch called ghpages, then any HTML, etc. in that branch just ends up as your website.", "tokens": [407, 264, 636, 11, 1338, 11, 370, 264, 636, 341, 1985, 307, 11, 382, 286, 584, 11, 1936, 11, 264, 636, 286, 411, 281, 360, 309, 11, 293, 309, 1985, 1238, 3612, 11, 307, 498, 291, 362, 257, 9819, 1219, 33937, 79, 1660, 11, 550, 604, 17995, 11, 5183, 13, 294, 300, 9819, 445, 5314, 493, 382, 428, 3144, 13], "temperature": 0.0, "avg_logprob": -0.11357295513153076, "compression_ratio": 1.5402298850574712, "no_speech_prob": 2.225182925030822e-06}, {"id": 202, "seek": 123500, "start": 1255.0, "end": 1259.0, "text": " So here's index.html, and that's the website.", "tokens": [407, 510, 311, 8186, 13, 357, 15480, 11, 293, 300, 311, 264, 3144, 13], "temperature": 0.0, "avg_logprob": -0.11357295513153076, "compression_ratio": 1.5402298850574712, "no_speech_prob": 2.225182925030822e-06}, {"id": 203, "seek": 125900, "start": 1259.0, "end": 1271.0, "text": " And now the way that's being created is there's a thing called GitHub actions, which is basically something that will automatically run some code for you when you do things on GitHub.", "tokens": [400, 586, 264, 636, 300, 311, 885, 2942, 307, 456, 311, 257, 551, 1219, 23331, 5909, 11, 597, 307, 1936, 746, 300, 486, 6772, 1190, 512, 3089, 337, 291, 562, 291, 360, 721, 322, 23331, 13], "temperature": 0.0, "avg_logprob": -0.10786558507562993, "compression_ratio": 1.6045454545454545, "no_speech_prob": 6.854036655568052e-06}, {"id": 204, "seek": 125900, "start": 1271.0, "end": 1276.0, "text": " They're YAML files, of course, because all the cool kids use YAML files.", "tokens": [814, 434, 398, 2865, 43, 7098, 11, 295, 1164, 11, 570, 439, 264, 1627, 2301, 764, 398, 2865, 43, 7098, 13], "temperature": 0.0, "avg_logprob": -0.10786558507562993, "compression_ratio": 1.6045454545454545, "no_speech_prob": 6.854036655568052e-06}, {"id": 205, "seek": 125900, "start": 1276.0, "end": 1283.0, "text": " And so you say, okay, well, when should this run? And it's going to run when you push to master.", "tokens": [400, 370, 291, 584, 11, 1392, 11, 731, 11, 562, 820, 341, 1190, 30, 400, 309, 311, 516, 281, 1190, 562, 291, 2944, 281, 4505, 13], "temperature": 0.0, "avg_logprob": -0.10786558507562993, "compression_ratio": 1.6045454545454545, "no_speech_prob": 6.854036655568052e-06}, {"id": 206, "seek": 128300, "start": 1283.0, "end": 1291.0, "text": " Okay, what happens when you push to master? Well, it's going to run a job called deploy, which will run on Ubuntu.", "tokens": [1033, 11, 437, 2314, 562, 291, 2944, 281, 4505, 30, 1042, 11, 309, 311, 516, 281, 1190, 257, 1691, 1219, 7274, 11, 597, 486, 1190, 322, 30230, 45605, 13], "temperature": 0.0, "avg_logprob": -0.07218759059906006, "compression_ratio": 1.526829268292683, "no_speech_prob": 4.637769052351359e-06}, {"id": 207, "seek": 128300, "start": 1291.0, "end": 1312.0, "text": " So they've got like every major OS with lots of releases, which will check out this repo, set up Python, run this script, run this command, and then run this action, which is deploy to GitHub pages.", "tokens": [407, 436, 600, 658, 411, 633, 2563, 12731, 365, 3195, 295, 16952, 11, 597, 486, 1520, 484, 341, 49040, 11, 992, 493, 15329, 11, 1190, 341, 5755, 11, 1190, 341, 5622, 11, 293, 550, 1190, 341, 3069, 11, 597, 307, 7274, 281, 23331, 7183, 13], "temperature": 0.0, "avg_logprob": -0.07218759059906006, "compression_ratio": 1.526829268292683, "no_speech_prob": 4.637769052351359e-06}, {"id": 208, "seek": 131200, "start": 1312.0, "end": 1321.0, "text": " And I'm guessing, Isaac, you basically borrowed this from NB Process. It looks similar.", "tokens": [400, 286, 478, 17939, 11, 22505, 11, 291, 1936, 26805, 341, 490, 426, 33, 31093, 13, 467, 1542, 2531, 13], "temperature": 0.0, "avg_logprob": -0.21673400585468, "compression_ratio": 1.3092105263157894, "no_speech_prob": 1.4063242815609556e-05}, {"id": 209, "seek": 131200, "start": 1321.0, "end": 1328.0, "text": " Yeah, yeah, I took this from your Fast Kaggle repository, and there's some minor changes, but roughly the same.", "tokens": [865, 11, 1338, 11, 286, 1890, 341, 490, 428, 15968, 48751, 22631, 25841, 11, 293, 456, 311, 512, 6696, 2962, 11, 457, 9810, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.21673400585468, "compression_ratio": 1.3092105263157894, "no_speech_prob": 1.4063242815609556e-05}, {"id": 210, "seek": 132800, "start": 1328.0, "end": 1343.0, "text": " Yeah, so Fast Kaggle, I just did NB Process new. NB Process is the current name of what will be NB Dev2, hopefully within three weeks or so.", "tokens": [865, 11, 370, 15968, 48751, 22631, 11, 286, 445, 630, 426, 33, 31093, 777, 13, 426, 33, 31093, 307, 264, 2190, 1315, 295, 437, 486, 312, 426, 33, 9096, 17, 11, 4696, 1951, 1045, 3259, 420, 370, 13], "temperature": 0.0, "avg_logprob": -0.1457177343822661, "compression_ratio": 1.1764705882352942, "no_speech_prob": 2.8129320526204538e-06}, {"id": 211, "seek": 134300, "start": 1343.0, "end": 1358.0, "text": " And as you might have noticed, one nice thing about this is that, you know, we have a...", "tokens": [400, 382, 291, 1062, 362, 5694, 11, 472, 1481, 551, 466, 341, 307, 300, 11, 291, 458, 11, 321, 362, 257, 485], "temperature": 0.0, "avg_logprob": -0.13869630813598632, "compression_ratio": 1.3636363636363635, "no_speech_prob": 5.594066351477522e-06}, {"id": 212, "seek": 134300, "start": 1358.0, "end": 1362.0, "text": " Why is this in a separate folder, by the way, Isaac, was that necessary for some reason or?", "tokens": [1545, 307, 341, 294, 257, 4994, 10820, 11, 538, 264, 636, 11, 22505, 11, 390, 300, 4818, 337, 512, 1778, 420, 30], "temperature": 0.0, "avg_logprob": -0.13869630813598632, "compression_ratio": 1.3636363636363635, "no_speech_prob": 5.594066351477522e-06}, {"id": 213, "seek": 136200, "start": 1362.0, "end": 1373.0, "text": " That was the default create website porto function did, and I didn't change the structure.", "tokens": [663, 390, 264, 7576, 1884, 3144, 2436, 78, 2445, 630, 11, 293, 286, 994, 380, 1319, 264, 3877, 13], "temperature": 0.0, "avg_logprob": -0.20285450044225473, "compression_ratio": 1.4375, "no_speech_prob": 2.3320135369431227e-06}, {"id": 214, "seek": 136200, "start": 1373.0, "end": 1376.0, "text": " Anyway, so we've got a notebook here.", "tokens": [5684, 11, 370, 321, 600, 658, 257, 21060, 510, 13], "temperature": 0.0, "avg_logprob": -0.20285450044225473, "compression_ratio": 1.4375, "no_speech_prob": 2.3320135369431227e-06}, {"id": 215, "seek": 136200, "start": 1376.0, "end": 1386.0, "text": " And that notebook has been auto converted into a post, which is nice. So once you've got this set up,", "tokens": [400, 300, 21060, 575, 668, 8399, 16424, 666, 257, 2183, 11, 597, 307, 1481, 13, 407, 1564, 291, 600, 658, 341, 992, 493, 11], "temperature": 0.0, "avg_logprob": -0.20285450044225473, "compression_ratio": 1.4375, "no_speech_prob": 2.3320135369431227e-06}, {"id": 216, "seek": 138600, "start": 1386.0, "end": 1396.0, "text": " you can start authoring technical blog posts with notebooks really easily, particularly because if you hit dot...", "tokens": [291, 393, 722, 3793, 278, 6191, 6968, 12300, 365, 43782, 534, 3612, 11, 4098, 570, 498, 291, 2045, 5893, 485], "temperature": 0.0, "avg_logprob": -0.10967280647971413, "compression_ratio": 1.4784688995215312, "no_speech_prob": 4.425362931215204e-06}, {"id": 217, "seek": 138600, "start": 1396.0, "end": 1403.0, "text": " Why is it not working? I thought if you hit dot... Yeah, it's meant to be dot, never mind.", "tokens": [1545, 307, 309, 406, 1364, 30, 286, 1194, 498, 291, 2045, 5893, 485, 865, 11, 309, 311, 4140, 281, 312, 5893, 11, 1128, 1575, 13], "temperature": 0.0, "avg_logprob": -0.10967280647971413, "compression_ratio": 1.4784688995215312, "no_speech_prob": 4.425362931215204e-06}, {"id": 218, "seek": 138600, "start": 1403.0, "end": 1413.0, "text": " You can open up the notebook in GitHub.dev, which is basically a slimmed down online version of VS Code.", "tokens": [509, 393, 1269, 493, 264, 21060, 294, 23331, 13, 40343, 11, 597, 307, 1936, 257, 25357, 1912, 760, 2950, 3037, 295, 25091, 15549, 13], "temperature": 0.0, "avg_logprob": -0.10967280647971413, "compression_ratio": 1.4784688995215312, "no_speech_prob": 4.425362931215204e-06}, {"id": 219, "seek": 141300, "start": 1413.0, "end": 1420.0, "text": " And so I can start editing straight away.", "tokens": [400, 370, 286, 393, 722, 10000, 2997, 1314, 13], "temperature": 0.0, "avg_logprob": -0.10915566235780716, "compression_ratio": 1.4082840236686391, "no_speech_prob": 1.3630531611852348e-05}, {"id": 220, "seek": 141300, "start": 1420.0, "end": 1429.0, "text": " I assume that they won't have the APL kernel installed, but I'm not sure.", "tokens": [286, 6552, 300, 436, 1582, 380, 362, 264, 5372, 43, 28256, 8899, 11, 457, 286, 478, 406, 988, 13], "temperature": 0.0, "avg_logprob": -0.10915566235780716, "compression_ratio": 1.4082840236686391, "no_speech_prob": 1.3630531611852348e-05}, {"id": 221, "seek": 141300, "start": 1429.0, "end": 1439.0, "text": " You're not sure you can even run Python, can you? But you can certainly edit the markdown and move cells around and stuff.", "tokens": [509, 434, 406, 988, 291, 393, 754, 1190, 15329, 11, 393, 291, 30, 583, 291, 393, 3297, 8129, 264, 1491, 5093, 293, 1286, 5438, 926, 293, 1507, 13], "temperature": 0.0, "avg_logprob": -0.10915566235780716, "compression_ratio": 1.4082840236686391, "no_speech_prob": 1.3630531611852348e-05}, {"id": 222, "seek": 143900, "start": 1439.0, "end": 1455.0, "text": " Or you could just put mapdown files in there. All right. So...", "tokens": [1610, 291, 727, 445, 829, 4471, 5093, 7098, 294, 456, 13, 1057, 558, 13, 407, 485], "temperature": 0.0, "avg_logprob": -0.19737471342086793, "compression_ratio": 1.168141592920354, "no_speech_prob": 1.1657843060675077e-05}, {"id": 223, "seek": 143900, "start": 1455.0, "end": 1460.0, "text": " In fact, let's go ahead and make this a bit simpler while we're here.", "tokens": [682, 1186, 11, 718, 311, 352, 2286, 293, 652, 341, 257, 857, 18587, 1339, 321, 434, 510, 13], "temperature": 0.0, "avg_logprob": -0.19737471342086793, "compression_ratio": 1.168141592920354, "no_speech_prob": 1.1657843060675077e-05}, {"id": 224, "seek": 146000, "start": 1460.0, "end": 1483.0, "text": " Otherwise, I might go a bit crazy.", "tokens": [10328, 11, 286, 1062, 352, 257, 857, 3219, 13], "temperature": 0.0, "avg_logprob": -0.1649156166956975, "compression_ratio": 0.8095238095238095, "no_speech_prob": 1.406139290338615e-05}, {"id": 225, "seek": 148300, "start": 1483.0, "end": 1507.0, "text": " All right. So if we move all that into the parent, then we should be able to remove that.", "tokens": [1057, 558, 13, 407, 498, 321, 1286, 439, 300, 666, 264, 2596, 11, 550, 321, 820, 312, 1075, 281, 4159, 300, 13], "temperature": 0.0, "avg_logprob": -0.13112370784466082, "compression_ratio": 1.1265822784810127, "no_speech_prob": 1.5534776593995048e-06}, {"id": 226, "seek": 150700, "start": 1507.0, "end": 1522.0, "text": " Yes, OK. We can add this to this.getignore. So getignore is the file which contains a list of all the things that git will by default ignore.", "tokens": [1079, 11, 2264, 13, 492, 393, 909, 341, 281, 341, 13, 847, 788, 418, 13, 407, 483, 788, 418, 307, 264, 3991, 597, 8306, 257, 1329, 295, 439, 264, 721, 300, 18331, 486, 538, 7576, 11200, 13], "temperature": 0.0, "avg_logprob": -0.21142368781857374, "compression_ratio": 1.2702702702702702, "no_speech_prob": 9.972094630938955e-06}, {"id": 227, "seek": 152200, "start": 1522.0, "end": 1540.0, "text": " So dot quarter. And if you end up with a slash, it means it's a directory.", "tokens": [407, 5893, 6555, 13, 400, 498, 291, 917, 493, 365, 257, 17330, 11, 309, 1355, 309, 311, 257, 21120, 13], "temperature": 0.0, "avg_logprob": -0.217978835105896, "compression_ratio": 0.9866666666666667, "no_speech_prob": 5.506899469764903e-06}, {"id": 228, "seek": 154000, "start": 1540.0, "end": 1553.0, "text": " All right. Move all that.", "tokens": [1057, 558, 13, 10475, 439, 300, 13], "temperature": 0.0, "avg_logprob": -0.14469606226140802, "compression_ratio": 0.8064516129032258, "no_speech_prob": 6.961362032598117e-06}, {"id": 229, "seek": 155300, "start": 1553.0, "end": 1573.0, "text": " So we should also add dot ipynb checkpoints to our getignore.", "tokens": [407, 321, 820, 611, 909, 5893, 28501, 2534, 65, 1520, 20552, 281, 527, 483, 788, 418, 13], "temperature": 0.0, "avg_logprob": -0.22358880724225724, "compression_ratio": 0.953125, "no_speech_prob": 2.8129077236371813e-06}, {"id": 230, "seek": 157300, "start": 1573.0, "end": 1590.0, "text": " And so then let's check. So then underscore quarter dot yaml is where it's kind of defined. So this doesn't need to be dot dot slash anymore.", "tokens": [400, 370, 550, 718, 311, 1520, 13, 407, 550, 37556, 6555, 5893, 288, 335, 75, 307, 689, 309, 311, 733, 295, 7642, 13, 407, 341, 1177, 380, 643, 281, 312, 5893, 5893, 17330, 3602, 13], "temperature": 0.0, "avg_logprob": -0.12229212259842177, "compression_ratio": 1.4444444444444444, "no_speech_prob": 3.138048896289547e-06}, {"id": 231, "seek": 157300, "start": 1590.0, "end": 1596.0, "text": " Can you think of anything else I might need to change off the top of your head?", "tokens": [1664, 291, 519, 295, 1340, 1646, 286, 1062, 643, 281, 1319, 766, 264, 1192, 295, 428, 1378, 30], "temperature": 0.0, "avg_logprob": -0.12229212259842177, "compression_ratio": 1.4444444444444444, "no_speech_prob": 3.138048896289547e-06}, {"id": 232, "seek": 159600, "start": 1596.0, "end": 1604.0, "text": " Isaac? Thank you. I think you got everything.", "tokens": [22505, 30, 1044, 291, 13, 286, 519, 291, 658, 1203, 13], "temperature": 0.0, "avg_logprob": -0.1949754175932511, "compression_ratio": 1.3057851239669422, "no_speech_prob": 7.646306585229468e-06}, {"id": 233, "seek": 159600, "start": 1604.0, "end": 1610.0, "text": " What does freeze do? Is that different to execute false?", "tokens": [708, 775, 15959, 360, 30, 1119, 300, 819, 281, 14483, 7908, 30], "temperature": 0.0, "avg_logprob": -0.1949754175932511, "compression_ratio": 1.3057851239669422, "no_speech_prob": 7.646306585229468e-06}, {"id": 234, "seek": 159600, "start": 1610.0, "end": 1620.0, "text": " I'm not sure, to be honest. That was a default setting.", "tokens": [286, 478, 406, 988, 11, 281, 312, 3245, 13, 663, 390, 257, 7576, 3287, 13], "temperature": 0.0, "avg_logprob": -0.1949754175932511, "compression_ratio": 1.3057851239669422, "no_speech_prob": 7.646306585229468e-06}, {"id": 235, "seek": 162000, "start": 1620.0, "end": 1634.0, "text": " All right. So git status will tell us how we're doing here. Oh, yeah. And I was going to add dot ipynb checkpoints.", "tokens": [1057, 558, 13, 407, 18331, 6558, 486, 980, 505, 577, 321, 434, 884, 510, 13, 876, 11, 1338, 13, 400, 286, 390, 516, 281, 909, 5893, 28501, 2534, 65, 1520, 20552, 13], "temperature": 0.0, "avg_logprob": -0.16427130618337857, "compression_ratio": 1.3724137931034484, "no_speech_prob": 2.601578671601601e-06}, {"id": 236, "seek": 162000, "start": 1634.0, "end": 1646.0, "text": " So I think that means it's not going to rerender or rerun file unless it's changed.", "tokens": [407, 286, 519, 300, 1355, 309, 311, 406, 516, 281, 43819, 3216, 420, 43819, 409, 3991, 5969, 309, 311, 3105, 13], "temperature": 0.0, "avg_logprob": -0.16427130618337857, "compression_ratio": 1.3724137931034484, "no_speech_prob": 2.601578671601601e-06}, {"id": 237, "seek": 164600, "start": 1646.0, "end": 1660.0, "text": " Okay. Makes sense. All right. So we've renamed some things. We've deleted one thing. We've modified one thing. That sounds good.", "tokens": [1033, 13, 25245, 2020, 13, 1057, 558, 13, 407, 321, 600, 40949, 512, 721, 13, 492, 600, 22981, 472, 551, 13, 492, 600, 15873, 472, 551, 13, 663, 3263, 665, 13], "temperature": 0.0, "avg_logprob": -0.11640228674961971, "compression_ratio": 1.3435114503816794, "no_speech_prob": 2.0904478787997505e-06}, {"id": 238, "seek": 164600, "start": 1660.0, "end": 1671.0, "text": " Oh, I haven't got this set up yet. That's fine.", "tokens": [876, 11, 286, 2378, 380, 658, 341, 992, 493, 1939, 13, 663, 311, 2489, 13], "temperature": 0.0, "avg_logprob": -0.11640228674961971, "compression_ratio": 1.3435114503816794, "no_speech_prob": 2.0904478787997505e-06}, {"id": 239, "seek": 167100, "start": 1671.0, "end": 1684.0, "text": " All right. So git commit minus am. So a will add everything that's not yet added. And m means I'm going to put a message right here.", "tokens": [1057, 558, 13, 407, 18331, 5599, 3175, 669, 13, 407, 257, 486, 909, 1203, 300, 311, 406, 1939, 3869, 13, 400, 275, 1355, 286, 478, 516, 281, 829, 257, 3636, 558, 510, 13], "temperature": 0.0, "avg_logprob": -0.14105979601542154, "compression_ratio": 1.4563758389261745, "no_speech_prob": 2.99437988360296e-06}, {"id": 240, "seek": 167100, "start": 1684.0, "end": 1697.0, "text": " I thought I'd already done that. Oh, that's right. I added that one carriage return.", "tokens": [286, 1194, 286, 1116, 1217, 1096, 300, 13, 876, 11, 300, 311, 558, 13, 286, 3869, 300, 472, 31811, 2736, 13], "temperature": 0.0, "avg_logprob": -0.14105979601542154, "compression_ratio": 1.4563758389261745, "no_speech_prob": 2.99437988360296e-06}, {"id": 241, "seek": 169700, "start": 1697.0, "end": 1706.0, "text": " Great.", "tokens": [3769, 13], "temperature": 0.0, "avg_logprob": -0.25706540213690865, "compression_ratio": 0.88, "no_speech_prob": 4.5209134214019286e-07}, {"id": 242, "seek": 169700, "start": 1706.0, "end": 1711.0, "text": " And so now we should be able to go to", "tokens": [400, 370, 586, 321, 820, 312, 1075, 281, 352, 281], "temperature": 0.0, "avg_logprob": -0.25706540213690865, "compression_ratio": 0.88, "no_speech_prob": 4.5209134214019286e-07}, {"id": 243, "seek": 171100, "start": 1711.0, "end": 1731.0, "text": " fastai.github.io slash APL study. And it's still working. How about that? And so something that's useful to know is", "tokens": [2370, 1301, 13, 70, 355, 836, 13, 1004, 17330, 5372, 43, 2979, 13, 400, 309, 311, 920, 1364, 13, 1012, 466, 300, 30, 400, 370, 746, 300, 311, 4420, 281, 458, 307], "temperature": 0.0, "avg_logprob": -0.16597060362497965, "compression_ratio": 1.1274509803921569, "no_speech_prob": 5.98924827954761e-07}, {"id": 244, "seek": 173100, "start": 1731.0, "end": 1746.0, "text": " your GitHub actions when they run. Oh, didn't work. They get logged here. And so when it breaks, you get a cross.", "tokens": [428, 23331, 5909, 562, 436, 1190, 13, 876, 11, 994, 380, 589, 13, 814, 483, 27231, 510, 13, 400, 370, 562, 309, 9857, 11, 291, 483, 257, 3278, 13], "temperature": 0.0, "avg_logprob": -0.2516046883403391, "compression_ratio": 1.4210526315789473, "no_speech_prob": 3.5005296012968756e-06}, {"id": 245, "seek": 173100, "start": 1746.0, "end": 1753.0, "text": " Okay. Quartarender is going to have to change. So that's just no, that's not going to need anything anymore. So we'll change our.", "tokens": [1033, 13, 2326, 446, 543, 20535, 307, 516, 281, 362, 281, 1319, 13, 407, 300, 311, 445, 572, 11, 300, 311, 406, 516, 281, 643, 1340, 3602, 13, 407, 321, 603, 1319, 527, 13], "temperature": 0.0, "avg_logprob": -0.2516046883403391, "compression_ratio": 1.4210526315789473, "no_speech_prob": 3.5005296012968756e-06}, {"id": 246, "seek": 175300, "start": 1753.0, "end": 1764.0, "text": " I mean, so, you know, just something else to show you. We don't have to like switch to the terminal. We can just go to GitHub workflows and click on here and click on edit.", "tokens": [286, 914, 11, 370, 11, 291, 458, 11, 445, 746, 1646, 281, 855, 291, 13, 492, 500, 380, 362, 281, 411, 3679, 281, 264, 14709, 13, 492, 393, 445, 352, 281, 23331, 43461, 293, 2052, 322, 510, 293, 2052, 322, 8129, 13], "temperature": 0.0, "avg_logprob": -0.11009170668465751, "compression_ratio": 1.511111111111111, "no_speech_prob": 2.282074092363473e-05}, {"id": 247, "seek": 175300, "start": 1764.0, "end": 1771.0, "text": " And just edit it directly if we want to. And that by default uses the current directory, I believe.", "tokens": [400, 445, 8129, 309, 3838, 498, 321, 528, 281, 13, 400, 300, 538, 7576, 4960, 264, 2190, 21120, 11, 286, 1697, 13], "temperature": 0.0, "avg_logprob": -0.11009170668465751, "compression_ratio": 1.511111111111111, "no_speech_prob": 2.282074092363473e-05}, {"id": 248, "seek": 177100, "start": 1771.0, "end": 1784.0, "text": " We can just go ahead and commit that.", "tokens": [492, 393, 445, 352, 2286, 293, 5599, 300, 13], "temperature": 0.0, "avg_logprob": -0.16617700031825475, "compression_ratio": 1.1652173913043478, "no_speech_prob": 9.515579222352244e-06}, {"id": 249, "seek": 177100, "start": 1784.0, "end": 1791.0, "text": " And I don't know where we have architecture here. I think it defaults to x64, doesn't it, Hamil?", "tokens": [400, 286, 500, 380, 458, 689, 321, 362, 9482, 510, 13, 286, 519, 309, 7576, 82, 281, 2031, 19395, 11, 1177, 380, 309, 11, 8234, 388, 30], "temperature": 0.0, "avg_logprob": -0.16617700031825475, "compression_ratio": 1.1652173913043478, "no_speech_prob": 9.515579222352244e-06}, {"id": 250, "seek": 179100, "start": 1791.0, "end": 1803.0, "text": " Yes. Yeah, you don't need that.", "tokens": [1079, 13, 865, 11, 291, 500, 380, 643, 300, 13], "temperature": 0.0, "avg_logprob": -0.11994212865829468, "compression_ratio": 1.528, "no_speech_prob": 3.6684500628325623e-06}, {"id": 251, "seek": 179100, "start": 1803.0, "end": 1815.0, "text": " And then something else you don't need is this pipe is used in Yamal to do a multi-line thing. And since we only have one line here, we don't need that either.", "tokens": [400, 550, 746, 1646, 291, 500, 380, 643, 307, 341, 11240, 307, 1143, 294, 18992, 304, 281, 360, 257, 4825, 12, 1889, 551, 13, 400, 1670, 321, 787, 362, 472, 1622, 510, 11, 321, 500, 380, 643, 300, 2139, 13], "temperature": 0.0, "avg_logprob": -0.11994212865829468, "compression_ratio": 1.528, "no_speech_prob": 3.6684500628325623e-06}, {"id": 252, "seek": 181500, "start": 1815.0, "end": 1825.0, "text": " But your screen has so much vertical space now. But it's split in half, Hamil, so it doesn't really.", "tokens": [583, 428, 2568, 575, 370, 709, 9429, 1901, 586, 13, 583, 309, 311, 7472, 294, 1922, 11, 8234, 388, 11, 370, 309, 1177, 380, 534, 13], "temperature": 0.0, "avg_logprob": -0.1367746541197871, "compression_ratio": 1.4325842696629214, "no_speech_prob": 9.36782089411281e-06}, {"id": 253, "seek": 181500, "start": 1825.0, "end": 1829.0, "text": " So I still have reason to complain about vertical space.", "tokens": [407, 286, 920, 362, 1778, 281, 11024, 466, 9429, 1901, 13], "temperature": 0.0, "avg_logprob": -0.1367746541197871, "compression_ratio": 1.4325842696629214, "no_speech_prob": 9.36782089411281e-06}, {"id": 254, "seek": 181500, "start": 1829.0, "end": 1832.0, "text": " Besides which that's an important part of my personality.", "tokens": [13212, 597, 300, 311, 364, 1021, 644, 295, 452, 9033, 13], "temperature": 0.0, "avg_logprob": -0.1367746541197871, "compression_ratio": 1.4325842696629214, "no_speech_prob": 9.36782089411281e-06}, {"id": 255, "seek": 181500, "start": 1832.0, "end": 1834.0, "text": " All right, so that worked.", "tokens": [1057, 558, 11, 370, 300, 2732, 13], "temperature": 0.0, "avg_logprob": -0.1367746541197871, "compression_ratio": 1.4325842696629214, "no_speech_prob": 9.36782089411281e-06}, {"id": 256, "seek": 181500, "start": 1834.0, "end": 1838.0, "text": " That's good.", "tokens": [663, 311, 665, 13], "temperature": 0.0, "avg_logprob": -0.1367746541197871, "compression_ratio": 1.4325842696629214, "no_speech_prob": 9.36782089411281e-06}, {"id": 257, "seek": 183800, "start": 1838.0, "end": 1848.0, "text": " And so after it updates, then the GitHub pages bot will actually put that up on our website.", "tokens": [400, 370, 934, 309, 9205, 11, 550, 264, 23331, 7183, 10592, 486, 767, 829, 300, 493, 322, 527, 3144, 13], "temperature": 0.0, "avg_logprob": -0.21618998050689697, "compression_ratio": 1.0851063829787233, "no_speech_prob": 1.593513115949463e-05}, {"id": 258, "seek": 183800, "start": 1848.0, "end": 1850.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.21618998050689697, "compression_ratio": 1.0851063829787233, "no_speech_prob": 1.593513115949463e-05}, {"id": 259, "seek": 183800, "start": 1850.0, "end": 1858.0, "text": " So.", "tokens": [407, 13], "temperature": 0.0, "avg_logprob": -0.21618998050689697, "compression_ratio": 1.0851063829787233, "no_speech_prob": 1.593513115949463e-05}, {"id": 260, "seek": 185800, "start": 1858.0, "end": 1870.0, "text": " Great. So this is called a raw cell, which Isaac's created for us. And you can create a raw cell by pressing R during this menu.", "tokens": [3769, 13, 407, 341, 307, 1219, 257, 8936, 2815, 11, 597, 22505, 311, 2942, 337, 505, 13, 400, 291, 393, 1884, 257, 8936, 2815, 538, 12417, 497, 1830, 341, 6510, 13], "temperature": 0.0, "avg_logprob": -0.1192620884288441, "compression_ratio": 1.568421052631579, "no_speech_prob": 4.425184670253657e-06}, {"id": 261, "seek": 185800, "start": 1870.0, "end": 1875.0, "text": " And things that are between three dashes are called Yamal front matter.", "tokens": [400, 721, 300, 366, 1296, 1045, 8240, 279, 366, 1219, 18992, 304, 1868, 1871, 13], "temperature": 0.0, "avg_logprob": -0.1192620884288441, "compression_ratio": 1.568421052631579, "no_speech_prob": 4.425184670253657e-06}, {"id": 262, "seek": 185800, "start": 1875.0, "end": 1885.0, "text": " Yamal is yet another markup language. And basically this is a bunch of key value things in Yamal.", "tokens": [18992, 304, 307, 1939, 1071, 1491, 1010, 2856, 13, 400, 1936, 341, 307, 257, 3840, 295, 2141, 2158, 721, 294, 18992, 304, 13], "temperature": 0.0, "avg_logprob": -0.1192620884288441, "compression_ratio": 1.568421052631579, "no_speech_prob": 4.425184670253657e-06}, {"id": 263, "seek": 188500, "start": 1885.0, "end": 1889.0, "text": " And yeah, this is where we basically put the information we want.", "tokens": [400, 1338, 11, 341, 307, 689, 321, 1936, 829, 264, 1589, 321, 528, 13], "temperature": 0.0, "avg_logprob": -0.10872038399300925, "compression_ratio": 1.6281407035175879, "no_speech_prob": 6.144019152998226e-06}, {"id": 264, "seek": 188500, "start": 1889.0, "end": 1894.0, "text": " The title is actually not needed because it will pick it up automatically from an H1.", "tokens": [440, 4876, 307, 767, 406, 2978, 570, 309, 486, 1888, 309, 493, 6772, 490, 364, 389, 16, 13], "temperature": 0.0, "avg_logprob": -0.10872038399300925, "compression_ratio": 1.6281407035175879, "no_speech_prob": 6.144019152998226e-06}, {"id": 265, "seek": 188500, "start": 1894.0, "end": 1903.0, "text": " Or to put it another way, the H1 is needed because it will come automatically from the title.", "tokens": [1610, 281, 829, 309, 1071, 636, 11, 264, 389, 16, 307, 2978, 570, 309, 486, 808, 6772, 490, 264, 4876, 13], "temperature": 0.0, "avg_logprob": -0.10872038399300925, "compression_ratio": 1.6281407035175879, "no_speech_prob": 6.144019152998226e-06}, {"id": 266, "seek": 188500, "start": 1903.0, "end": 1911.0, "text": " Great. I suppose I should put my name here since I'm writing it at the moment.", "tokens": [3769, 13, 286, 7297, 286, 820, 829, 452, 1315, 510, 1670, 286, 478, 3579, 309, 412, 264, 1623, 13], "temperature": 0.0, "avg_logprob": -0.10872038399300925, "compression_ratio": 1.6281407035175879, "no_speech_prob": 6.144019152998226e-06}, {"id": 267, "seek": 191100, "start": 1911.0, "end": 1916.0, "text": " And.", "tokens": [400, 13], "temperature": 0.0, "avg_logprob": -0.13034990310668945, "compression_ratio": 1.3484848484848484, "no_speech_prob": 7.295912382687675e-06}, {"id": 268, "seek": 191100, "start": 1916.0, "end": 1925.0, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.13034990310668945, "compression_ratio": 1.3484848484848484, "no_speech_prob": 7.295912382687675e-06}, {"id": 269, "seek": 191100, "start": 1925.0, "end": 1932.0, "text": " Something I find really helpful is I use this thing called collapsible headings.", "tokens": [6595, 286, 915, 534, 4961, 307, 286, 764, 341, 551, 1219, 16567, 964, 1378, 1109, 13], "temperature": 0.0, "avg_logprob": -0.13034990310668945, "compression_ratio": 1.3484848484848484, "no_speech_prob": 7.295912382687675e-06}, {"id": 270, "seek": 191100, "start": 1932.0, "end": 1937.0, "text": " And so I just hit control shift left and as you can see, it closes everything up.", "tokens": [400, 370, 286, 445, 2045, 1969, 5513, 1411, 293, 382, 291, 393, 536, 11, 309, 24157, 1203, 493, 13], "temperature": 0.0, "avg_logprob": -0.13034990310668945, "compression_ratio": 1.3484848484848484, "no_speech_prob": 7.295912382687675e-06}, {"id": 271, "seek": 193700, "start": 1937.0, "end": 1943.0, "text": " And then you can basically press right arrow to jump to the end of a section or to open a section.", "tokens": [400, 550, 291, 393, 1936, 1886, 558, 11610, 281, 3012, 281, 264, 917, 295, 257, 3541, 420, 281, 1269, 257, 3541, 13], "temperature": 0.0, "avg_logprob": -0.08666269966725552, "compression_ratio": 1.5885167464114833, "no_speech_prob": 6.338981165754376e-06}, {"id": 272, "seek": 193700, "start": 1943.0, "end": 1950.0, "text": " So that's left, right. And if you're already at the start of the section, you press left again, it'll close it up.", "tokens": [407, 300, 311, 1411, 11, 558, 13, 400, 498, 291, 434, 1217, 412, 264, 722, 295, 264, 3541, 11, 291, 1886, 1411, 797, 11, 309, 603, 1998, 309, 493, 13], "temperature": 0.0, "avg_logprob": -0.08666269966725552, "compression_ratio": 1.5885167464114833, "no_speech_prob": 6.338981165754376e-06}, {"id": 273, "seek": 193700, "start": 1950.0, "end": 1955.0, "text": " I find it really helpful for zipping around quickly.", "tokens": [286, 915, 309, 534, 4961, 337, 710, 6297, 926, 2661, 13], "temperature": 0.0, "avg_logprob": -0.08666269966725552, "compression_ratio": 1.5885167464114833, "no_speech_prob": 6.338981165754376e-06}, {"id": 274, "seek": 193700, "start": 1955.0, "end": 1959.0, "text": " As you can see.", "tokens": [1018, 291, 393, 536, 13], "temperature": 0.0, "avg_logprob": -0.08666269966725552, "compression_ratio": 1.5885167464114833, "no_speech_prob": 6.338981165754376e-06}, {"id": 275, "seek": 193700, "start": 1959.0, "end": 1966.0, "text": " So we started talking about precedence yesterday.", "tokens": [407, 321, 1409, 1417, 466, 16969, 655, 5186, 13], "temperature": 0.0, "avg_logprob": -0.08666269966725552, "compression_ratio": 1.5885167464114833, "no_speech_prob": 6.338981165754376e-06}, {"id": 276, "seek": 196600, "start": 1966.0, "end": 1982.0, "text": " Yeah, I don't think there's too much more to say about precedence.", "tokens": [865, 11, 286, 500, 380, 519, 456, 311, 886, 709, 544, 281, 584, 466, 16969, 655, 13], "temperature": 0.0, "avg_logprob": -0.10391107946634293, "compression_ratio": 1.1368421052631579, "no_speech_prob": 6.4388959799543954e-06}, {"id": 277, "seek": 196600, "start": 1982.0, "end": 1987.0, "text": " Maybe we'll create a section called like.", "tokens": [2704, 321, 603, 1884, 257, 3541, 1219, 411, 13], "temperature": 0.0, "avg_logprob": -0.10391107946634293, "compression_ratio": 1.1368421052631579, "no_speech_prob": 6.4388959799543954e-06}, {"id": 278, "seek": 198700, "start": 1987.0, "end": 1996.0, "text": " Expressions. Of which part of that is about precedence. And then the other thing we put in here is about functions.", "tokens": [20212, 626, 13, 2720, 597, 644, 295, 300, 307, 466, 16969, 655, 13, 400, 550, 264, 661, 551, 321, 829, 294, 510, 307, 466, 6828, 13], "temperature": 0.0, "avg_logprob": -0.1547087501077091, "compression_ratio": 1.4662576687116564, "no_speech_prob": 1.4063325579627417e-05}, {"id": 279, "seek": 198700, "start": 1996.0, "end": 2004.0, "text": " OK. So in Python or indeed in math, in math, you would write a function like this.", "tokens": [2264, 13, 407, 294, 15329, 420, 6451, 294, 5221, 11, 294, 5221, 11, 291, 576, 2464, 257, 2445, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.1547087501077091, "compression_ratio": 1.4662576687116564, "no_speech_prob": 1.4063325579627417e-05}, {"id": 280, "seek": 198700, "start": 2004.0, "end": 2009.0, "text": " You'd say f of x is, you know, whatever.", "tokens": [509, 1116, 584, 283, 295, 2031, 307, 11, 291, 458, 11, 2035, 13], "temperature": 0.0, "avg_logprob": -0.1547087501077091, "compression_ratio": 1.4662576687116564, "no_speech_prob": 1.4063325579627417e-05}, {"id": 281, "seek": 200900, "start": 2009.0, "end": 2020.0, "text": " 2x say or in Python, you would say define a function which takes x and it returns to times x.", "tokens": [568, 87, 584, 420, 294, 15329, 11, 291, 576, 584, 6964, 257, 2445, 597, 2516, 2031, 293, 309, 11247, 281, 1413, 2031, 13], "temperature": 0.0, "avg_logprob": -0.14801469167073567, "compression_ratio": 1.891025641025641, "no_speech_prob": 3.041570835193852e-06}, {"id": 282, "seek": 200900, "start": 2020.0, "end": 2028.0, "text": " Or you could create a lambda in function. F is a function which takes x and returns to x.", "tokens": [1610, 291, 727, 1884, 257, 13607, 294, 2445, 13, 479, 307, 257, 2445, 597, 2516, 2031, 293, 11247, 281, 2031, 13], "temperature": 0.0, "avg_logprob": -0.14801469167073567, "compression_ratio": 1.891025641025641, "no_speech_prob": 3.041570835193852e-06}, {"id": 283, "seek": 200900, "start": 2028.0, "end": 2037.0, "text": " So these are ways you can define functions in math or these two or two ways you can define functions in Python.", "tokens": [407, 613, 366, 2098, 291, 393, 6964, 6828, 294, 5221, 420, 613, 732, 420, 732, 2098, 291, 393, 6964, 6828, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.14801469167073567, "compression_ratio": 1.891025641025641, "no_speech_prob": 3.041570835193852e-06}, {"id": 284, "seek": 203700, "start": 2037.0, "end": 2046.0, "text": " They all have something in common, which is that you're telling you're telling the reader in the case of math and the interpreter in the case of Python.", "tokens": [814, 439, 362, 746, 294, 2689, 11, 597, 307, 300, 291, 434, 3585, 291, 434, 3585, 264, 15149, 294, 264, 1389, 295, 5221, 293, 264, 34132, 294, 264, 1389, 295, 15329, 13], "temperature": 0.0, "avg_logprob": -0.09379713562713272, "compression_ratio": 1.702020202020202, "no_speech_prob": 2.2958747649681754e-06}, {"id": 285, "seek": 203700, "start": 2046.0, "end": 2053.0, "text": " What's the name of the thing that you're passing in? And you could pass in more than one thing.", "tokens": [708, 311, 264, 1315, 295, 264, 551, 300, 291, 434, 8437, 294, 30, 400, 291, 727, 1320, 294, 544, 813, 472, 551, 13], "temperature": 0.0, "avg_logprob": -0.09379713562713272, "compression_ratio": 1.702020202020202, "no_speech_prob": 2.2958747649681754e-06}, {"id": 286, "seek": 203700, "start": 2053.0, "end": 2055.0, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.09379713562713272, "compression_ratio": 1.702020202020202, "no_speech_prob": 2.2958747649681754e-06}, {"id": 287, "seek": 203700, "start": 2055.0, "end": 2063.0, "text": " APL is different. APL has decided for you what names you're going to call things.", "tokens": [5372, 43, 307, 819, 13, 5372, 43, 575, 3047, 337, 291, 437, 5288, 291, 434, 516, 281, 818, 721, 13], "temperature": 0.0, "avg_logprob": -0.09379713562713272, "compression_ratio": 1.702020202020202, "no_speech_prob": 2.2958747649681754e-06}, {"id": 288, "seek": 206300, "start": 2063.0, "end": 2070.0, "text": " So to create a function in APL, it's just assigning something to a symbol.", "tokens": [407, 281, 1884, 257, 2445, 294, 5372, 43, 11, 309, 311, 445, 49602, 746, 281, 257, 5986, 13], "temperature": 0.0, "avg_logprob": -0.18481914648848974, "compression_ratio": 1.4801980198019802, "no_speech_prob": 2.0580334876285633e-06}, {"id": 289, "seek": 206300, "start": 2070.0, "end": 2079.0, "text": " Right. So rather than saying, oh, I'm going to turn my APL thingy on.", "tokens": [1779, 13, 407, 2831, 813, 1566, 11, 1954, 11, 286, 478, 516, 281, 1261, 452, 5372, 43, 551, 88, 322, 13], "temperature": 0.0, "avg_logprob": -0.18481914648848974, "compression_ratio": 1.4801980198019802, "no_speech_prob": 2.0580334876285633e-06}, {"id": 290, "seek": 206300, "start": 2079.0, "end": 2085.0, "text": " Which means I just turn on my bookmark bar, which I thought I need a shortcut key to, but I don't.", "tokens": [3013, 1355, 286, 445, 1261, 322, 452, 1446, 5638, 2159, 11, 597, 286, 1194, 286, 643, 257, 24822, 2141, 281, 11, 457, 286, 500, 380, 13], "temperature": 0.0, "avg_logprob": -0.18481914648848974, "compression_ratio": 1.4801980198019802, "no_speech_prob": 2.0580334876285633e-06}, {"id": 291, "seek": 206300, "start": 2085.0, "end": 2091.0, "text": " Shift command B. Let's try that again. Command shift B.", "tokens": [28304, 5622, 363, 13, 961, 311, 853, 300, 797, 13, 17901, 5513, 363, 13], "temperature": 0.0, "avg_logprob": -0.18481914648848974, "compression_ratio": 1.4801980198019802, "no_speech_prob": 2.0580334876285633e-06}, {"id": 292, "seek": 209100, "start": 2091.0, "end": 2097.0, "text": " Oh, there we go. APL.", "tokens": [876, 11, 456, 321, 352, 13, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.17434008916219076, "compression_ratio": 1.3823529411764706, "no_speech_prob": 8.851541224430548e-07}, {"id": 293, "seek": 209100, "start": 2097.0, "end": 2110.0, "text": " Alright. F. So we can assign a scalar or a list or the result of an expression with possibly various other functions in.", "tokens": [2798, 13, 479, 13, 407, 321, 393, 6269, 257, 39684, 420, 257, 1329, 420, 264, 1874, 295, 364, 6114, 365, 6264, 3683, 661, 6828, 294, 13], "temperature": 0.0, "avg_logprob": -0.17434008916219076, "compression_ratio": 1.3823529411764706, "no_speech_prob": 8.851541224430548e-07}, {"id": 294, "seek": 209100, "start": 2110.0, "end": 2113.0, "text": " Right. Whatever. Or we can assign a function.", "tokens": [1779, 13, 8541, 13, 1610, 321, 393, 6269, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.17434008916219076, "compression_ratio": 1.3823529411764706, "no_speech_prob": 8.851541224430548e-07}, {"id": 295, "seek": 211300, "start": 2113.0, "end": 2121.0, "text": " And to create a function in APL, you use curly brackets. So curly brackets means this is a function.", "tokens": [400, 281, 1884, 257, 2445, 294, 5372, 43, 11, 291, 764, 32066, 26179, 13, 407, 32066, 26179, 1355, 341, 307, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.0708086026179326, "compression_ratio": 1.5797872340425532, "no_speech_prob": 5.173865247343201e-06}, {"id": 296, "seek": 211300, "start": 2121.0, "end": 2126.0, "text": " And then inside the function, you say what you want to do and you don't have to name the parameters.", "tokens": [400, 550, 1854, 264, 2445, 11, 291, 584, 437, 291, 528, 281, 360, 293, 291, 500, 380, 362, 281, 1315, 264, 9834, 13], "temperature": 0.0, "avg_logprob": -0.0708086026179326, "compression_ratio": 1.5797872340425532, "no_speech_prob": 5.173865247343201e-06}, {"id": 297, "seek": 211300, "start": 2126.0, "end": 2134.0, "text": " They already have names. If you have one parameter, it's going to get called Omega, which is W.", "tokens": [814, 1217, 362, 5288, 13, 759, 291, 362, 472, 13075, 11, 309, 311, 516, 281, 483, 1219, 27645, 11, 597, 307, 343, 13], "temperature": 0.0, "avg_logprob": -0.0708086026179326, "compression_ratio": 1.5797872340425532, "no_speech_prob": 5.173865247343201e-06}, {"id": 298, "seek": 213400, "start": 2134.0, "end": 2145.0, "text": " So here's a times two function. And to pass the one parameter, you just check it on the right.", "tokens": [407, 510, 311, 257, 1413, 732, 2445, 13, 400, 281, 1320, 264, 472, 13075, 11, 291, 445, 1520, 309, 322, 264, 558, 13], "temperature": 0.0, "avg_logprob": -0.11717986125572055, "compression_ratio": 1.3846153846153846, "no_speech_prob": 1.7330372656942927e-06}, {"id": 299, "seek": 213400, "start": 2145.0, "end": 2158.0, "text": " OK. What if you want to create a function called G, which does something times two plus something else?", "tokens": [2264, 13, 708, 498, 291, 528, 281, 1884, 257, 2445, 1219, 460, 11, 597, 775, 746, 1413, 732, 1804, 746, 1646, 30], "temperature": 0.0, "avg_logprob": -0.11717986125572055, "compression_ratio": 1.3846153846153846, "no_speech_prob": 1.7330372656942927e-06}, {"id": 300, "seek": 215800, "start": 2158.0, "end": 2164.0, "text": " Then a second parameter will always be called alpha.", "tokens": [1396, 257, 1150, 13075, 486, 1009, 312, 1219, 8961, 13], "temperature": 0.0, "avg_logprob": -0.17480513415759122, "compression_ratio": 1.5769230769230769, "no_speech_prob": 2.8129802558396477e-06}, {"id": 301, "seek": 215800, "start": 2164.0, "end": 2169.0, "text": " Now, the second parameter goes on the left.", "tokens": [823, 11, 264, 1150, 13075, 1709, 322, 264, 1411, 13], "temperature": 0.0, "avg_logprob": -0.17480513415759122, "compression_ratio": 1.5769230769230769, "no_speech_prob": 2.8129802558396477e-06}, {"id": 302, "seek": 215800, "start": 2169.0, "end": 2176.0, "text": " So this will be this becomes Omega. So it'll be four times two, which is eight plus three is eleven.", "tokens": [407, 341, 486, 312, 341, 3643, 27645, 13, 407, 309, 603, 312, 1451, 1413, 732, 11, 597, 307, 3180, 1804, 1045, 307, 21090, 13], "temperature": 0.0, "avg_logprob": -0.17480513415759122, "compression_ratio": 1.5769230769230769, "no_speech_prob": 2.8129802558396477e-06}, {"id": 303, "seek": 215800, "start": 2176.0, "end": 2180.0, "text": " That's not right. Oh, sorry. It's going to be this. Sorry. This is going to happen first.", "tokens": [663, 311, 406, 558, 13, 876, 11, 2597, 13, 467, 311, 516, 281, 312, 341, 13, 4919, 13, 639, 307, 516, 281, 1051, 700, 13], "temperature": 0.0, "avg_logprob": -0.17480513415759122, "compression_ratio": 1.5769230769230769, "no_speech_prob": 2.8129802558396477e-06}, {"id": 304, "seek": 218000, "start": 2180.0, "end": 2189.0, "text": " Yeah. Thank you. So it'll be two plus three is five times four is twenty. OK. Great.", "tokens": [865, 13, 1044, 291, 13, 407, 309, 603, 312, 732, 1804, 1045, 307, 1732, 1413, 1451, 307, 7699, 13, 2264, 13, 3769, 13], "temperature": 0.0, "avg_logprob": -0.09237398734459511, "compression_ratio": 1.3636363636363635, "no_speech_prob": 2.601568894533557e-06}, {"id": 305, "seek": 218000, "start": 2189.0, "end": 2196.0, "text": " As you can see, I'm still not thinking APL yet.", "tokens": [1018, 291, 393, 536, 11, 286, 478, 920, 406, 1953, 5372, 43, 1939, 13], "temperature": 0.0, "avg_logprob": -0.09237398734459511, "compression_ratio": 1.3636363636363635, "no_speech_prob": 2.601568894533557e-06}, {"id": 306, "seek": 218000, "start": 2196.0, "end": 2204.0, "text": " That's I think all there is to know about functions at this stage until we get to operators.", "tokens": [663, 311, 286, 519, 439, 456, 307, 281, 458, 466, 6828, 412, 341, 3233, 1826, 321, 483, 281, 19077, 13], "temperature": 0.0, "avg_logprob": -0.09237398734459511, "compression_ratio": 1.3636363636363635, "no_speech_prob": 2.601568894533557e-06}, {"id": 307, "seek": 220400, "start": 2204.0, "end": 2218.0, "text": " Actually, we should do operators first. Maybe. Do we? No, that's not. I think that's enough.", "tokens": [5135, 11, 321, 820, 360, 19077, 700, 13, 2704, 13, 1144, 321, 30, 883, 11, 300, 311, 406, 13, 286, 519, 300, 311, 1547, 13], "temperature": 0.0, "avg_logprob": -0.257347651890346, "compression_ratio": 1.1916666666666667, "no_speech_prob": 4.263415758032352e-05}, {"id": 308, "seek": 220400, "start": 2218.0, "end": 2225.0, "text": " So what happened? We have more than two variables.", "tokens": [407, 437, 2011, 30, 492, 362, 544, 813, 732, 9102, 13], "temperature": 0.0, "avg_logprob": -0.257347651890346, "compression_ratio": 1.1916666666666667, "no_speech_prob": 4.263415758032352e-05}, {"id": 309, "seek": 222500, "start": 2225.0, "end": 2234.0, "text": " Good luck. You don't. You can have zero.", "tokens": [2205, 3668, 13, 509, 500, 380, 13, 509, 393, 362, 4018, 13], "temperature": 0.0, "avg_logprob": -0.1323694060830509, "compression_ratio": 1.3057851239669422, "no_speech_prob": 4.425196948432131e-06}, {"id": 310, "seek": 222500, "start": 2234.0, "end": 2244.0, "text": " One or two. I guess, like, basically, I have a feeling it can do unpacking.", "tokens": [1485, 420, 732, 13, 286, 2041, 11, 411, 11, 1936, 11, 286, 362, 257, 2633, 309, 393, 360, 26699, 278, 13], "temperature": 0.0, "avg_logprob": -0.1323694060830509, "compression_ratio": 1.3057851239669422, "no_speech_prob": 4.425196948432131e-06}, {"id": 311, "seek": 222500, "start": 2244.0, "end": 2248.0, "text": " It can. You can do some pattern matching.", "tokens": [467, 393, 13, 509, 393, 360, 512, 5102, 14324, 13], "temperature": 0.0, "avg_logprob": -0.1323694060830509, "compression_ratio": 1.3057851239669422, "no_speech_prob": 4.425196948432131e-06}, {"id": 312, "seek": 224800, "start": 2248.0, "end": 2259.0, "text": " Yeah. So you could pass a list and then unpack it.", "tokens": [865, 13, 407, 291, 727, 1320, 257, 1329, 293, 550, 26699, 309, 13], "temperature": 0.0, "avg_logprob": -0.1061080675276499, "compression_ratio": 1.437125748502994, "no_speech_prob": 2.0579716419888427e-06}, {"id": 313, "seek": 224800, "start": 2259.0, "end": 2263.0, "text": " Or destructuring, as I think some people call it.", "tokens": [1610, 2677, 1757, 1345, 11, 382, 286, 519, 512, 561, 818, 309, 13], "temperature": 0.0, "avg_logprob": -0.1061080675276499, "compression_ratio": 1.437125748502994, "no_speech_prob": 2.0579716419888427e-06}, {"id": 314, "seek": 224800, "start": 2263.0, "end": 2269.0, "text": " I guess we should keep that here because that's actually quite interesting.", "tokens": [286, 2041, 321, 820, 1066, 300, 510, 570, 300, 311, 767, 1596, 1880, 13], "temperature": 0.0, "avg_logprob": -0.1061080675276499, "compression_ratio": 1.437125748502994, "no_speech_prob": 2.0579716419888427e-06}, {"id": 315, "seek": 224800, "start": 2269.0, "end": 2277.0, "text": " Can you pass in the function above as to the equation function?", "tokens": [1664, 291, 1320, 294, 264, 2445, 3673, 382, 281, 264, 5367, 2445, 30], "temperature": 0.0, "avg_logprob": -0.1061080675276499, "compression_ratio": 1.437125748502994, "no_speech_prob": 2.0579716419888427e-06}, {"id": 316, "seek": 227700, "start": 2277.0, "end": 2282.0, "text": " Can you pass the function above? What do you mean?", "tokens": [1664, 291, 1320, 264, 2445, 3673, 30, 708, 360, 291, 914, 30], "temperature": 0.0, "avg_logprob": -0.14385106222970145, "compression_ratio": 1.4518072289156627, "no_speech_prob": 1.9831550162052736e-05}, {"id": 317, "seek": 227700, "start": 2282.0, "end": 2286.0, "text": " Can you put the F inside the G function? Oh, yeah, absolutely.", "tokens": [1664, 291, 829, 264, 479, 1854, 264, 460, 2445, 30, 876, 11, 1338, 11, 3122, 13], "temperature": 0.0, "avg_logprob": -0.14385106222970145, "compression_ratio": 1.4518072289156627, "no_speech_prob": 1.9831550162052736e-05}, {"id": 318, "seek": 227700, "start": 2286.0, "end": 2291.0, "text": " F and G are now like just the same as plus, minus whatever.", "tokens": [479, 293, 460, 366, 586, 411, 445, 264, 912, 382, 1804, 11, 3175, 2035, 13], "temperature": 0.0, "avg_logprob": -0.14385106222970145, "compression_ratio": 1.4518072289156627, "no_speech_prob": 1.9831550162052736e-05}, {"id": 319, "seek": 227700, "start": 2291.0, "end": 2294.0, "text": " They're just APL functions that you can do whatever with. So, yeah.", "tokens": [814, 434, 445, 5372, 43, 6828, 300, 291, 393, 360, 2035, 365, 13, 407, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.14385106222970145, "compression_ratio": 1.4518072289156627, "no_speech_prob": 1.9831550162052736e-05}, {"id": 320, "seek": 229400, "start": 2294.0, "end": 2321.0, "text": " So we could. H is equal to two plus F of omega.", "tokens": [407, 321, 727, 13, 389, 307, 2681, 281, 732, 1804, 479, 295, 10498, 13], "temperature": 0.0, "avg_logprob": -0.21634548240237766, "compression_ratio": 0.8545454545454545, "no_speech_prob": 8.013107617443893e-06}, {"id": 321, "seek": 232100, "start": 2321.0, "end": 2326.0, "text": " Yeah. So that's something that I like, right? Because all the APL glyphs,", "tokens": [865, 13, 407, 300, 311, 746, 300, 286, 411, 11, 558, 30, 1436, 439, 264, 5372, 43, 22633, 950, 82, 11], "temperature": 0.0, "avg_logprob": -0.13928162514626444, "compression_ratio": 1.737556561085973, "no_speech_prob": 5.014453563489951e-06}, {"id": 322, "seek": 232100, "start": 2326.0, "end": 2333.0, "text": " at least the ones that are functions, are either unary, monadic or binary,", "tokens": [412, 1935, 264, 2306, 300, 366, 6828, 11, 366, 2139, 517, 822, 11, 1108, 43341, 420, 17434, 11], "temperature": 0.0, "avg_logprob": -0.13928162514626444, "compression_ratio": 1.737556561085973, "no_speech_prob": 5.014453563489951e-06}, {"id": 323, "seek": 232100, "start": 2333.0, "end": 2338.0, "text": " dyadic. And they always, you know, if they're monadic, the thing goes on the right.", "tokens": [14584, 43341, 13, 400, 436, 1009, 11, 291, 458, 11, 498, 436, 434, 1108, 43341, 11, 264, 551, 1709, 322, 264, 558, 13], "temperature": 0.0, "avg_logprob": -0.13928162514626444, "compression_ratio": 1.737556561085973, "no_speech_prob": 5.014453563489951e-06}, {"id": 324, "seek": 232100, "start": 2338.0, "end": 2342.0, "text": " And if they're dyadic, then they're infix. And the functions you create are exactly the same.", "tokens": [400, 498, 436, 434, 14584, 43341, 11, 550, 436, 434, 1536, 970, 13, 400, 264, 6828, 291, 1884, 366, 2293, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.13928162514626444, "compression_ratio": 1.737556561085973, "no_speech_prob": 5.014453563489951e-06}, {"id": 325, "seek": 232100, "start": 2342.0, "end": 2347.0, "text": " And you can create Unicode function names if you want to.", "tokens": [400, 291, 393, 1884, 1156, 299, 1429, 2445, 5288, 498, 291, 528, 281, 13], "temperature": 0.0, "avg_logprob": -0.13928162514626444, "compression_ratio": 1.737556561085973, "no_speech_prob": 5.014453563489951e-06}, {"id": 326, "seek": 234700, "start": 2347.0, "end": 2367.0, "text": " So you can like create your own very APL-ish looking functions if you wish.", "tokens": [407, 291, 393, 411, 1884, 428, 1065, 588, 5372, 43, 12, 742, 1237, 6828, 498, 291, 3172, 13], "temperature": 0.0, "avg_logprob": -0.1903370510448109, "compression_ratio": 0.9868421052631579, "no_speech_prob": 8.613178943051025e-05}, {"id": 327, "seek": 236700, "start": 2367.0, "end": 2391.0, "text": " De-structuring assignment. OK.", "tokens": [1346, 12, 372, 1757, 1345, 15187, 13, 2264, 13], "temperature": 0.0, "avg_logprob": -0.2899342867044302, "compression_ratio": 0.7894736842105263, "no_speech_prob": 2.3921367755974643e-05}, {"id": 328, "seek": 239100, "start": 2391.0, "end": 2400.0, "text": " So when we use the word array, we're using it to mean the same thing that NumPy calls arrays and that PyTorch calls tensors.", "tokens": [407, 562, 321, 764, 264, 1349, 10225, 11, 321, 434, 1228, 309, 281, 914, 264, 912, 551, 300, 22592, 47, 88, 5498, 41011, 293, 300, 9953, 51, 284, 339, 5498, 10688, 830, 13], "temperature": 0.0, "avg_logprob": -0.11697425340351306, "compression_ratio": 1.3873239436619718, "no_speech_prob": 2.2468741008196957e-05}, {"id": 329, "seek": 239100, "start": 2400.0, "end": 2413.0, "text": " So they're, you know, n-dimensional, regularly shaped bunches of things.", "tokens": [407, 436, 434, 11, 291, 458, 11, 297, 12, 18759, 11, 11672, 13475, 3840, 279, 295, 721, 13], "temperature": 0.0, "avg_logprob": -0.11697425340351306, "compression_ratio": 1.3873239436619718, "no_speech_prob": 2.2468741008196957e-05}, {"id": 330, "seek": 241300, "start": 2413.0, "end": 2423.0, "text": " And in PyTorch, we call the rank of a tensor the number of dimensions that it has.", "tokens": [400, 294, 9953, 51, 284, 339, 11, 321, 818, 264, 6181, 295, 257, 40863, 264, 1230, 295, 12819, 300, 309, 575, 13], "temperature": 0.0, "avg_logprob": -0.09290671348571777, "compression_ratio": 1.5564516129032258, "no_speech_prob": 6.338853381748777e-06}, {"id": 331, "seek": 241300, "start": 2423.0, "end": 2434.0, "text": " So a vector would be one dimensional, the matrix would be two dimensional, a scalar would be zero dimensional.", "tokens": [407, 257, 8062, 576, 312, 472, 18795, 11, 264, 8141, 576, 312, 732, 18795, 11, 257, 39684, 576, 312, 4018, 18795, 13], "temperature": 0.0, "avg_logprob": -0.09290671348571777, "compression_ratio": 1.5564516129032258, "no_speech_prob": 6.338853381748777e-06}, {"id": 332, "seek": 243400, "start": 2434.0, "end": 2444.0, "text": " So it'd be helpful to know how to create things. So we know how to create scalars.", "tokens": [407, 309, 1116, 312, 4961, 281, 458, 577, 281, 1884, 721, 13, 407, 321, 458, 577, 281, 1884, 15664, 685, 13], "temperature": 0.0, "avg_logprob": -0.08266671498616536, "compression_ratio": 1.525, "no_speech_prob": 1.8738485323410714e-06}, {"id": 333, "seek": 243400, "start": 2444.0, "end": 2454.0, "text": " You just type them in. We know how to create vectors. So rank one arrays, you type them with spaces.", "tokens": [509, 445, 2010, 552, 294, 13, 492, 458, 577, 281, 1884, 18875, 13, 407, 6181, 472, 41011, 11, 291, 2010, 552, 365, 7673, 13], "temperature": 0.0, "avg_logprob": -0.08266671498616536, "compression_ratio": 1.525, "no_speech_prob": 1.8738485323410714e-06}, {"id": 334, "seek": 245400, "start": 2454.0, "end": 2465.0, "text": " So something's going to be helpful explaining this. We'll actually first of all be to learn about IOTA.", "tokens": [407, 746, 311, 516, 281, 312, 4961, 13468, 341, 13, 492, 603, 767, 700, 295, 439, 312, 281, 1466, 466, 286, 5068, 32, 13], "temperature": 0.0, "avg_logprob": -0.17484232187271118, "compression_ratio": 1.5025125628140703, "no_speech_prob": 5.862581474502804e-06}, {"id": 335, "seek": 245400, "start": 2465.0, "end": 2478.0, "text": " You can also, as an earlier step, you might be if you wanted to teach the row, you could you can actually use the row to reshape and give it a one or zero to broadcast it.", "tokens": [509, 393, 611, 11, 382, 364, 3071, 1823, 11, 291, 1062, 312, 498, 291, 1415, 281, 2924, 264, 5386, 11, 291, 727, 291, 393, 767, 764, 264, 5386, 281, 725, 42406, 293, 976, 309, 257, 472, 420, 4018, 281, 9975, 309, 13], "temperature": 0.0, "avg_logprob": -0.17484232187271118, "compression_ratio": 1.5025125628140703, "no_speech_prob": 5.862581474502804e-06}, {"id": 336, "seek": 245400, "start": 2478.0, "end": 2482.0, "text": " Yeah. Yeah, absolutely.", "tokens": [865, 13, 865, 11, 3122, 13], "temperature": 0.0, "avg_logprob": -0.17484232187271118, "compression_ratio": 1.5025125628140703, "no_speech_prob": 5.862581474502804e-06}, {"id": 337, "seek": 248200, "start": 2482.0, "end": 2492.0, "text": " Okay. Yeah, let's do it that way. Thanks.", "tokens": [1033, 13, 865, 11, 718, 311, 360, 309, 300, 636, 13, 2561, 13], "temperature": 0.0, "avg_logprob": -0.11607375599089123, "compression_ratio": 1.2916666666666667, "no_speech_prob": 1.0952805496344808e-05}, {"id": 338, "seek": 248200, "start": 2492.0, "end": 2504.0, "text": " Oh, we can just type it in. Let's just type it in. So let's just create something.", "tokens": [876, 11, 321, 393, 445, 2010, 309, 294, 13, 961, 311, 445, 2010, 309, 294, 13, 407, 718, 311, 445, 1884, 746, 13], "temperature": 0.0, "avg_logprob": -0.11607375599089123, "compression_ratio": 1.2916666666666667, "no_speech_prob": 1.0952805496344808e-05}, {"id": 339, "seek": 250400, "start": 2504.0, "end": 2514.0, "text": " And let's use our trick now that we've learned it.", "tokens": [400, 718, 311, 764, 527, 4282, 586, 300, 321, 600, 3264, 309, 13], "temperature": 0.0, "avg_logprob": -0.1874842150457974, "compression_ratio": 1.0595238095238095, "no_speech_prob": 4.784998509421712e-06}, {"id": 340, "seek": 250400, "start": 2514.0, "end": 2525.0, "text": " Okay. So display a list we assigned a.", "tokens": [1033, 13, 407, 4674, 257, 1329, 321, 13279, 257, 13], "temperature": 0.0, "avg_logprob": -0.1874842150457974, "compression_ratio": 1.0595238095238095, "no_speech_prob": 4.784998509421712e-06}, {"id": 341, "seek": 252500, "start": 2525.0, "end": 2537.0, "text": " And we're going to have to do this backwards, but I think that's fine.", "tokens": [400, 321, 434, 516, 281, 362, 281, 360, 341, 12204, 11, 457, 286, 519, 300, 311, 2489, 13], "temperature": 0.0, "avg_logprob": -0.09900868733723958, "compression_ratio": 1.5126582278481013, "no_speech_prob": 6.5401141000620555e-06}, {"id": 342, "seek": 252500, "start": 2537.0, "end": 2541.0, "text": " So let's look it up.", "tokens": [407, 718, 311, 574, 309, 493, 13], "temperature": 0.0, "avg_logprob": -0.09900868733723958, "compression_ratio": 1.5126582278481013, "no_speech_prob": 6.5401141000620555e-06}, {"id": 343, "seek": 252500, "start": 2541.0, "end": 2549.0, "text": " Here it is. And we are going to get to learn a song today. That's the good news.", "tokens": [1692, 309, 307, 13, 400, 321, 366, 516, 281, 483, 281, 1466, 257, 2153, 965, 13, 663, 311, 264, 665, 2583, 13], "temperature": 0.0, "avg_logprob": -0.09900868733723958, "compression_ratio": 1.5126582278481013, "no_speech_prob": 6.5401141000620555e-06}, {"id": 344, "seek": 252500, "start": 2549.0, "end": 2554.0, "text": " In fact, we're starting to see some of the song here. That's cool.", "tokens": [682, 1186, 11, 321, 434, 2891, 281, 536, 512, 295, 264, 2153, 510, 13, 663, 311, 1627, 13], "temperature": 0.0, "avg_logprob": -0.09900868733723958, "compression_ratio": 1.5126582278481013, "no_speech_prob": 6.5401141000620555e-06}, {"id": 345, "seek": 255400, "start": 2554.0, "end": 2567.0, "text": " I guess we should mention strings actually because they do use them in the documentation a lot.", "tokens": [286, 2041, 321, 820, 2152, 13985, 767, 570, 436, 360, 764, 552, 294, 264, 14333, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.07612755613506965, "compression_ratio": 1.4797297297297298, "no_speech_prob": 3.7265908758854493e-06}, {"id": 346, "seek": 255400, "start": 2567.0, "end": 2576.0, "text": " I don't know what they call numbers and strings and arrays.", "tokens": [286, 500, 380, 458, 437, 436, 818, 3547, 293, 13985, 293, 41011, 13], "temperature": 0.0, "avg_logprob": -0.07612755613506965, "compression_ratio": 1.4797297297297298, "no_speech_prob": 3.7265908758854493e-06}, {"id": 347, "seek": 255400, "start": 2576.0, "end": 2582.0, "text": " What's the term for those things? Things that aren't functions.", "tokens": [708, 311, 264, 1433, 337, 729, 721, 30, 9514, 300, 3212, 380, 6828, 13], "temperature": 0.0, "avg_logprob": -0.07612755613506965, "compression_ratio": 1.4797297297297298, "no_speech_prob": 3.7265908758854493e-06}, {"id": 348, "seek": 258200, "start": 2582.0, "end": 2589.0, "text": " I got to call them basic objects for now, but if anybody learns what they're actually meant to be called, let me know.", "tokens": [286, 658, 281, 818, 552, 3875, 6565, 337, 586, 11, 457, 498, 4472, 27152, 437, 436, 434, 767, 4140, 281, 312, 1219, 11, 718, 385, 458, 13], "temperature": 0.0, "avg_logprob": -0.19791282307017932, "compression_ratio": 1.627906976744186, "no_speech_prob": 5.7367884437553585e-05}, {"id": 349, "seek": 258200, "start": 2589.0, "end": 2596.0, "text": " In the box they say is a language element. Is it supposed to call all these symbols as elements?", "tokens": [682, 264, 2424, 436, 584, 307, 257, 2856, 4478, 13, 1119, 309, 3442, 281, 818, 439, 613, 16944, 382, 4959, 30], "temperature": 0.0, "avg_logprob": -0.19791282307017932, "compression_ratio": 1.627906976744186, "no_speech_prob": 5.7367884437553585e-05}, {"id": 350, "seek": 258200, "start": 2596.0, "end": 2608.0, "text": " Yeah, that's right. But I'm trying to talk about things that aren't those. I'm trying to talk about numbers, arrays and strings, which", "tokens": [865, 11, 300, 311, 558, 13, 583, 286, 478, 1382, 281, 751, 466, 721, 300, 3212, 380, 729, 13, 286, 478, 1382, 281, 751, 466, 3547, 11, 41011, 293, 13985, 11, 597], "temperature": 0.0, "avg_logprob": -0.19791282307017932, "compression_ratio": 1.627906976744186, "no_speech_prob": 5.7367884437553585e-05}, {"id": 351, "seek": 260800, "start": 2608.0, "end": 2618.0, "text": " is none of these things.", "tokens": [307, 6022, 295, 613, 721, 13], "temperature": 0.0, "avg_logprob": -0.21051089659981106, "compression_ratio": 0.95, "no_speech_prob": 1.834160866565071e-05}, {"id": 352, "seek": 260800, "start": 2618.0, "end": 2623.0, "text": " We'll figure it out.", "tokens": [492, 603, 2573, 309, 484, 13], "temperature": 0.0, "avg_logprob": -0.21051089659981106, "compression_ratio": 0.95, "no_speech_prob": 1.834160866565071e-05}, {"id": 353, "seek": 260800, "start": 2623.0, "end": 2633.0, "text": " So strings.", "tokens": [407, 13985, 13], "temperature": 0.0, "avg_logprob": -0.21051089659981106, "compression_ratio": 0.95, "no_speech_prob": 1.834160866565071e-05}, {"id": 354, "seek": 263300, "start": 2633.0, "end": 2648.0, "text": " I'm not sure there's much more to say about strings. What does the language reference say if I search for strings?", "tokens": [286, 478, 406, 988, 456, 311, 709, 544, 281, 584, 466, 13985, 13, 708, 775, 264, 2856, 6408, 584, 498, 286, 3164, 337, 13985, 30], "temperature": 0.0, "avg_logprob": -0.08038464907942147, "compression_ratio": 1.1875, "no_speech_prob": 2.668187335075345e-05}, {"id": 355, "seek": 264800, "start": 2648.0, "end": 2665.0, "text": " I'm not quite sure what order they think they're showing this in, but it's definitely not the most helpful one.", "tokens": [286, 478, 406, 1596, 988, 437, 1668, 436, 519, 436, 434, 4099, 341, 294, 11, 457, 309, 311, 2138, 406, 264, 881, 4961, 472, 13], "temperature": 0.0, "avg_logprob": -0.07074620805937669, "compression_ratio": 1.168421052631579, "no_speech_prob": 2.1778369045932777e-05}, {"id": 356, "seek": 266500, "start": 2665.0, "end": 2680.0, "text": " I see they don't call them strings. Maybe this is considered a list of characters.", "tokens": [286, 536, 436, 500, 380, 818, 552, 13985, 13, 2704, 341, 307, 4888, 257, 1329, 295, 4342, 13], "temperature": 0.0, "avg_logprob": -0.12792577743530273, "compression_ratio": 1.45, "no_speech_prob": 6.338699222396826e-06}, {"id": 357, "seek": 266500, "start": 2680.0, "end": 2682.0, "text": " I suspect it is actually.", "tokens": [286, 9091, 309, 307, 767, 13], "temperature": 0.0, "avg_logprob": -0.12792577743530273, "compression_ratio": 1.45, "no_speech_prob": 6.338699222396826e-06}, {"id": 358, "seek": 266500, "start": 2682.0, "end": 2687.0, "text": " Found another blog post that calls them character vectors and scalars.", "tokens": [8207, 1071, 6968, 2183, 300, 5498, 552, 2517, 18875, 293, 15664, 685, 13], "temperature": 0.0, "avg_logprob": -0.12792577743530273, "compression_ratio": 1.45, "no_speech_prob": 6.338699222396826e-06}, {"id": 359, "seek": 266500, "start": 2687.0, "end": 2692.0, "text": " Oh, right, because I think this is different, right?", "tokens": [876, 11, 558, 11, 570, 286, 519, 341, 307, 819, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.12792577743530273, "compression_ratio": 1.45, "no_speech_prob": 6.338699222396826e-06}, {"id": 360, "seek": 269200, "start": 2692.0, "end": 2702.0, "text": " Okay, so we're about to get a slightly ahead of ourselves, but this tells us the shape.", "tokens": [1033, 11, 370, 321, 434, 466, 281, 483, 257, 4748, 2286, 295, 4175, 11, 457, 341, 5112, 505, 264, 3909, 13], "temperature": 0.0, "avg_logprob": -0.12279792785644532, "compression_ratio": 1.0740740740740742, "no_speech_prob": 8.800244359008502e-06}, {"id": 361, "seek": 270200, "start": 2702.0, "end": 2727.0, "text": " Okay, so that's weird, right? So I don't think we should do strings yet until we do row because they don't make sense until we can look at shapes.", "tokens": [1033, 11, 370, 300, 311, 3657, 11, 558, 30, 407, 286, 500, 380, 519, 321, 820, 360, 13985, 1939, 1826, 321, 360, 5386, 570, 436, 500, 380, 652, 2020, 1826, 321, 393, 574, 412, 10854, 13], "temperature": 0.0, "avg_logprob": -0.09136110544204712, "compression_ratio": 1.2586206896551724, "no_speech_prob": 2.7529411454452202e-05}, {"id": 362, "seek": 272700, "start": 2727.0, "end": 2736.0, "text": " Okay. All right, so we've got a list.", "tokens": [1033, 13, 1057, 558, 11, 370, 321, 600, 658, 257, 1329, 13], "temperature": 0.0, "avg_logprob": -0.18113768100738525, "compression_ratio": 0.8222222222222222, "no_speech_prob": 5.014298494643299e-06}, {"id": 363, "seek": 273600, "start": 2736.0, "end": 2760.0, "text": " So we can turn that into a matrix using dyadic row.", "tokens": [407, 321, 393, 1261, 300, 666, 257, 8141, 1228, 14584, 43341, 5386, 13], "temperature": 0.0, "avg_logprob": -0.125807523727417, "compression_ratio": 0.8947368421052632, "no_speech_prob": 4.565838480630191e-06}, {"id": 364, "seek": 276000, "start": 2760.0, "end": 2788.0, "text": " I'll figure out what I did with my heading levels here.", "tokens": [286, 603, 2573, 484, 437, 286, 630, 365, 452, 9864, 4358, 510, 13], "temperature": 0.0, "avg_logprob": -0.26635296204510855, "compression_ratio": 0.9016393442622951, "no_speech_prob": 9.757175575941801e-05}, {"id": 365, "seek": 278800, "start": 2788.0, "end": 2791.0, "text": " That's two. Oh, yeah, that's three.", "tokens": [663, 311, 732, 13, 876, 11, 1338, 11, 300, 311, 1045, 13], "temperature": 0.0, "avg_logprob": -0.1697731664625265, "compression_ratio": 1.3135593220338984, "no_speech_prob": 1.241096560988808e-05}, {"id": 366, "seek": 278800, "start": 2791.0, "end": 2798.0, "text": " Okay, that's four. Great.", "tokens": [1033, 11, 300, 311, 1451, 13, 3769, 13], "temperature": 0.0, "avg_logprob": -0.1697731664625265, "compression_ratio": 1.3135593220338984, "no_speech_prob": 1.241096560988808e-05}, {"id": 367, "seek": 278800, "start": 2798.0, "end": 2803.0, "text": " So that's reshape.", "tokens": [407, 300, 311, 725, 42406, 13], "temperature": 0.0, "avg_logprob": -0.1697731664625265, "compression_ratio": 1.3135593220338984, "no_speech_prob": 1.241096560988808e-05}, {"id": 368, "seek": 278800, "start": 2803.0, "end": 2810.0, "text": " And so that is, I think, is that the same as what NumPy calls it? Reshape?", "tokens": [400, 370, 300, 307, 11, 286, 519, 11, 307, 300, 264, 912, 382, 437, 22592, 47, 88, 5498, 309, 30, 5015, 42406, 30], "temperature": 0.0, "avg_logprob": -0.1697731664625265, "compression_ratio": 1.3135593220338984, "no_speech_prob": 1.241096560988808e-05}, {"id": 369, "seek": 281000, "start": 2810.0, "end": 2821.0, "text": " Yes, same as NumPy reshape. So it gives a new shape to an array. So the shape of an array is basically like how many columns and rows and whatever does it have.", "tokens": [1079, 11, 912, 382, 22592, 47, 88, 725, 42406, 13, 407, 309, 2709, 257, 777, 3909, 281, 364, 10225, 13, 407, 264, 3909, 295, 364, 10225, 307, 1936, 411, 577, 867, 13766, 293, 13241, 293, 2035, 775, 309, 362, 13], "temperature": 0.0, "avg_logprob": -0.1251162999792944, "compression_ratio": 1.583815028901734, "no_speech_prob": 2.8572762857947964e-06}, {"id": 370, "seek": 281000, "start": 2821.0, "end": 2828.0, "text": " So if we want to do three rows of two columns, we can reshape our array.", "tokens": [407, 498, 321, 528, 281, 360, 1045, 13241, 295, 732, 13766, 11, 321, 393, 725, 42406, 527, 10225, 13], "temperature": 0.0, "avg_logprob": -0.1251162999792944, "compression_ratio": 1.583815028901734, "no_speech_prob": 2.8572762857947964e-06}, {"id": 371, "seek": 281000, "start": 2828.0, "end": 2831.0, "text": " As you see.", "tokens": [1018, 291, 536, 13], "temperature": 0.0, "avg_logprob": -0.1251162999792944, "compression_ratio": 1.583815028901734, "no_speech_prob": 2.8572762857947964e-06}, {"id": 372, "seek": 281000, "start": 2831.0, "end": 2834.0, "text": " Something that threw me off.", "tokens": [6595, 300, 11918, 385, 766, 13], "temperature": 0.0, "avg_logprob": -0.1251162999792944, "compression_ratio": 1.583815028901734, "no_speech_prob": 2.8572762857947964e-06}, {"id": 373, "seek": 283400, "start": 2834.0, "end": 2842.0, "text": " I was just going to say at this point, like, or maybe at the very top of this, we should", "tokens": [286, 390, 445, 516, 281, 584, 412, 341, 935, 11, 411, 11, 420, 1310, 412, 264, 588, 1192, 295, 341, 11, 321, 820], "temperature": 0.0, "avg_logprob": -0.18725032432406558, "compression_ratio": 1.4049586776859504, "no_speech_prob": 3.555935336407856e-06}, {"id": 374, "seek": 283400, "start": 2842.0, "end": 2850.0, "text": " say boxing style equals max.", "tokens": [584, 24424, 3758, 6915, 11469, 13], "temperature": 0.0, "avg_logprob": -0.18725032432406558, "compression_ratio": 1.4049586776859504, "no_speech_prob": 3.555935336407856e-06}, {"id": 375, "seek": 283400, "start": 2850.0, "end": 2856.0, "text": " Did I do that? I'll stop boxing on style equals max.", "tokens": [2589, 286, 360, 300, 30, 286, 603, 1590, 24424, 322, 3758, 6915, 11469, 13], "temperature": 0.0, "avg_logprob": -0.18725032432406558, "compression_ratio": 1.4049586776859504, "no_speech_prob": 3.555935336407856e-06}, {"id": 376, "seek": 285600, "start": 2856.0, "end": 2866.0, "text": " I think it was style dash max. I think.", "tokens": [286, 519, 309, 390, 3758, 8240, 11469, 13, 286, 519, 13], "temperature": 0.0, "avg_logprob": -0.47185341517130536, "compression_ratio": 0.9069767441860465, "no_speech_prob": 8.13871702121105e-06}, {"id": 377, "seek": 286600, "start": 2866.0, "end": 2887.0, "text": " There we go.", "tokens": [821, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.10554965337117513, "compression_ratio": 0.987012987012987, "no_speech_prob": 8.267197699751705e-06}, {"id": 378, "seek": 286600, "start": 2887.0, "end": 2892.0, "text": " Okay, so I think Isaac wrote something on the forum about this.", "tokens": [1033, 11, 370, 286, 519, 22505, 4114, 746, 322, 264, 17542, 466, 341, 13], "temperature": 0.0, "avg_logprob": -0.10554965337117513, "compression_ratio": 0.987012987012987, "no_speech_prob": 8.267197699751705e-06}, {"id": 379, "seek": 289200, "start": 2892.0, "end": 2897.0, "text": " So anywhere you see an arrow, that means this is like a dimension that exists. Right.", "tokens": [407, 4992, 291, 536, 364, 11610, 11, 300, 1355, 341, 307, 411, 257, 10139, 300, 8198, 13, 1779, 13], "temperature": 0.0, "avg_logprob": -0.10542642007959951, "compression_ratio": 1.6784140969162995, "no_speech_prob": 1.0783002835523803e-05}, {"id": 380, "seek": 289200, "start": 2897.0, "end": 2901.0, "text": " There's no arrow here. So this is considered like infinitely thin.", "tokens": [821, 311, 572, 11610, 510, 13, 407, 341, 307, 4888, 411, 36227, 5862, 13], "temperature": 0.0, "avg_logprob": -0.10542642007959951, "compression_ratio": 1.6784140969162995, "no_speech_prob": 1.0783002835523803e-05}, {"id": 381, "seek": 289200, "start": 2901.0, "end": 2907.0, "text": " So think of this as a vector, not as a one height.", "tokens": [407, 519, 295, 341, 382, 257, 8062, 11, 406, 382, 257, 472, 6681, 13], "temperature": 0.0, "avg_logprob": -0.10542642007959951, "compression_ratio": 1.6784140969162995, "no_speech_prob": 1.0783002835523803e-05}, {"id": 382, "seek": 289200, "start": 2907.0, "end": 2911.0, "text": " You know, as a matrix with one row. This is a vector.", "tokens": [509, 458, 11, 382, 257, 8141, 365, 472, 5386, 13, 639, 307, 257, 8062, 13], "temperature": 0.0, "avg_logprob": -0.10542642007959951, "compression_ratio": 1.6784140969162995, "no_speech_prob": 1.0783002835523803e-05}, {"id": 383, "seek": 289200, "start": 2911.0, "end": 2916.0, "text": " I was talking to my daughter about this yesterday and she found this very confusing. She's like, well, it does have height.", "tokens": [286, 390, 1417, 281, 452, 4653, 466, 341, 5186, 293, 750, 1352, 341, 588, 13181, 13, 1240, 311, 411, 11, 731, 11, 309, 775, 362, 6681, 13], "temperature": 0.0, "avg_logprob": -0.10542642007959951, "compression_ratio": 1.6784140969162995, "no_speech_prob": 1.0783002835523803e-05}, {"id": 384, "seek": 291600, "start": 2916.0, "end": 2926.0, "text": " So say like, okay, it does on the screen, but this is a representation on the screen of an abstract mathematical object that doesn't have height.", "tokens": [407, 584, 411, 11, 1392, 11, 309, 775, 322, 264, 2568, 11, 457, 341, 307, 257, 10290, 322, 264, 2568, 295, 364, 12649, 18894, 2657, 300, 1177, 380, 362, 6681, 13], "temperature": 0.0, "avg_logprob": -0.11872249491074506, "compression_ratio": 1.6374501992031874, "no_speech_prob": 5.682327810063725e-06}, {"id": 385, "seek": 291600, "start": 2926.0, "end": 2931.0, "text": " And it's just that if I drew it infinitely thin, you know, it's like Claire, you wouldn't be able to read it.", "tokens": [400, 309, 311, 445, 300, 498, 286, 12804, 309, 36227, 5862, 11, 291, 458, 11, 309, 311, 411, 22605, 11, 291, 2759, 380, 312, 1075, 281, 1401, 309, 13], "temperature": 0.0, "avg_logprob": -0.11872249491074506, "compression_ratio": 1.6374501992031874, "no_speech_prob": 5.682327810063725e-06}, {"id": 386, "seek": 291600, "start": 2931.0, "end": 2936.0, "text": " And you would think that was very helpful, which she agreed was true.", "tokens": [400, 291, 576, 519, 300, 390, 588, 4961, 11, 597, 750, 9166, 390, 2074, 13], "temperature": 0.0, "avg_logprob": -0.11872249491074506, "compression_ratio": 1.6374501992031874, "no_speech_prob": 5.682327810063725e-06}, {"id": 387, "seek": 291600, "start": 2936.0, "end": 2942.0, "text": " Whereas this thing here has two arrows. This actually has three rows and two columns.", "tokens": [13813, 341, 551, 510, 575, 732, 19669, 13, 639, 767, 575, 1045, 13241, 293, 732, 13766, 13], "temperature": 0.0, "avg_logprob": -0.11872249491074506, "compression_ratio": 1.6374501992031874, "no_speech_prob": 5.682327810063725e-06}, {"id": 388, "seek": 294200, "start": 2942.0, "end": 2946.0, "text": " And then the sprigle means that this got numbers in.", "tokens": [400, 550, 264, 6103, 328, 306, 1355, 300, 341, 658, 3547, 294, 13], "temperature": 0.0, "avg_logprob": -0.07892882533189727, "compression_ratio": 1.5598086124401913, "no_speech_prob": 2.0462415704969317e-05}, {"id": 389, "seek": 294200, "start": 2946.0, "end": 2953.0, "text": " There's two other options. It could have a mixture of things with some strings and stuff in, or it could even have other arrays in.", "tokens": [821, 311, 732, 661, 3956, 13, 467, 727, 362, 257, 9925, 295, 721, 365, 512, 13985, 293, 1507, 294, 11, 420, 309, 727, 754, 362, 661, 41011, 294, 13], "temperature": 0.0, "avg_logprob": -0.07892882533189727, "compression_ratio": 1.5598086124401913, "no_speech_prob": 2.0462415704969317e-05}, {"id": 390, "seek": 294200, "start": 2953.0, "end": 2957.0, "text": " They would get different symbols.", "tokens": [814, 576, 483, 819, 16944, 13], "temperature": 0.0, "avg_logprob": -0.07892882533189727, "compression_ratio": 1.5598086124401913, "no_speech_prob": 2.0462415704969317e-05}, {"id": 391, "seek": 294200, "start": 2957.0, "end": 2966.0, "text": " So I think perhaps one of the more interesting ones to look at is what happens if we have one row with six.", "tokens": [407, 286, 519, 4317, 472, 295, 264, 544, 1880, 2306, 281, 574, 412, 307, 437, 2314, 498, 321, 362, 472, 5386, 365, 2309, 13], "temperature": 0.0, "avg_logprob": -0.07892882533189727, "compression_ratio": 1.5598086124401913, "no_speech_prob": 2.0462415704969317e-05}, {"id": 392, "seek": 296600, "start": 2966.0, "end": 2972.0, "text": " So now it does not look the same, right? No arrow, arrow. So this is a matrix.", "tokens": [407, 586, 309, 775, 406, 574, 264, 912, 11, 558, 30, 883, 11610, 11, 11610, 13, 407, 341, 307, 257, 8141, 13], "temperature": 0.0, "avg_logprob": -0.14260418274823358, "compression_ratio": 1.4819277108433735, "no_speech_prob": 1.93335199583089e-06}, {"id": 393, "seek": 296600, "start": 2972.0, "end": 2987.0, "text": " So the shape is whatever is on whatever you would put on the left hand side to create that thing.", "tokens": [407, 264, 3909, 307, 2035, 307, 322, 2035, 291, 576, 829, 322, 264, 1411, 1011, 1252, 281, 1884, 300, 551, 13], "temperature": 0.0, "avg_logprob": -0.14260418274823358, "compression_ratio": 1.4819277108433735, "no_speech_prob": 1.93335199583089e-06}, {"id": 394, "seek": 296600, "start": 2987.0, "end": 2991.0, "text": " I assume it's going to be called shape, but I suppose I should check.", "tokens": [286, 6552, 309, 311, 516, 281, 312, 1219, 3909, 11, 457, 286, 7297, 286, 820, 1520, 13], "temperature": 0.0, "avg_logprob": -0.14260418274823358, "compression_ratio": 1.4819277108433735, "no_speech_prob": 1.93335199583089e-06}, {"id": 395, "seek": 299100, "start": 2991.0, "end": 3002.0, "text": " Shape of. OK. Shape of.", "tokens": [49148, 295, 13, 2264, 13, 49148, 295, 13], "temperature": 0.0, "avg_logprob": -0.39513250192006427, "compression_ratio": 0.9583333333333334, "no_speech_prob": 3.1200590456137434e-05}, {"id": 396, "seek": 300200, "start": 3002.0, "end": 3022.0, "text": " So, for example. Let's call this. Matrix.", "tokens": [407, 11, 337, 1365, 13, 961, 311, 818, 341, 13, 36274, 13], "temperature": 0.0, "avg_logprob": -0.12615486979484558, "compression_ratio": 0.8367346938775511, "no_speech_prob": 2.9022210128459847e-06}, {"id": 397, "seek": 302200, "start": 3022.0, "end": 3032.0, "text": " OK. And so if we then get the shape of a.", "tokens": [2264, 13, 400, 370, 498, 321, 550, 483, 264, 3909, 295, 257, 13], "temperature": 0.0, "avg_logprob": -0.19316200588060461, "compression_ratio": 1.2831858407079646, "no_speech_prob": 2.0903637505398365e-06}, {"id": 398, "seek": 302200, "start": 3032.0, "end": 3038.0, "text": " It's a single dimension of length six.", "tokens": [467, 311, 257, 2167, 10139, 295, 4641, 2309, 13], "temperature": 0.0, "avg_logprob": -0.19316200588060461, "compression_ratio": 1.2831858407079646, "no_speech_prob": 2.0903637505398365e-06}, {"id": 399, "seek": 302200, "start": 3038.0, "end": 3042.0, "text": " Whereas the shape of match matrix.", "tokens": [13813, 264, 3909, 295, 2995, 8141, 13], "temperature": 0.0, "avg_logprob": -0.19316200588060461, "compression_ratio": 1.2831858407079646, "no_speech_prob": 2.0903637505398365e-06}, {"id": 400, "seek": 302200, "start": 3042.0, "end": 3045.0, "text": " Is two rows by three columns.", "tokens": [1119, 732, 13241, 538, 1045, 13766, 13], "temperature": 0.0, "avg_logprob": -0.19316200588060461, "compression_ratio": 1.2831858407079646, "no_speech_prob": 2.0903637505398365e-06}, {"id": 401, "seek": 304500, "start": 3045.0, "end": 3052.0, "text": " Yes, in question. Yeah, I may have missed this. What is the writing to the box thing do again?", "tokens": [1079, 11, 294, 1168, 13, 865, 11, 286, 815, 362, 6721, 341, 13, 708, 307, 264, 3579, 281, 264, 2424, 551, 360, 797, 30], "temperature": 0.0, "avg_logprob": -0.24028100513276598, "compression_ratio": 1.5963302752293578, "no_speech_prob": 5.255287305772072e-06}, {"id": 402, "seek": 304500, "start": 3052.0, "end": 3056.0, "text": " It's just printing it in a more nice way for us.", "tokens": [467, 311, 445, 14699, 309, 294, 257, 544, 1481, 636, 337, 505, 13], "temperature": 0.0, "avg_logprob": -0.24028100513276598, "compression_ratio": 1.5963302752293578, "no_speech_prob": 5.255287305772072e-06}, {"id": 403, "seek": 304500, "start": 3056.0, "end": 3063.0, "text": " So, you know, what I mean is I'll write it to the box that prints it out on the screen.", "tokens": [407, 11, 291, 458, 11, 437, 286, 914, 307, 286, 603, 2464, 309, 281, 264, 2424, 300, 22305, 309, 484, 322, 264, 2568, 13], "temperature": 0.0, "avg_logprob": -0.24028100513276598, "compression_ratio": 1.5963302752293578, "no_speech_prob": 5.255287305772072e-06}, {"id": 404, "seek": 304500, "start": 3063.0, "end": 3067.0, "text": " So it's not on the matrix and then you want it on the screen. No, it doesn't.", "tokens": [407, 309, 311, 406, 322, 264, 8141, 293, 550, 291, 528, 309, 322, 264, 2568, 13, 883, 11, 309, 1177, 380, 13], "temperature": 0.0, "avg_logprob": -0.24028100513276598, "compression_ratio": 1.5963302752293578, "no_speech_prob": 5.255287305772072e-06}, {"id": 405, "seek": 304500, "start": 3067.0, "end": 3072.0, "text": " If I remove it. Because I'm assigning.", "tokens": [759, 286, 4159, 309, 13, 1436, 286, 478, 49602, 13], "temperature": 0.0, "avg_logprob": -0.24028100513276598, "compression_ratio": 1.5963302752293578, "no_speech_prob": 5.255287305772072e-06}, {"id": 406, "seek": 307200, "start": 3072.0, "end": 3077.0, "text": " It doesn't display it. Oh, because you're assigning.", "tokens": [467, 1177, 380, 4674, 309, 13, 876, 11, 570, 291, 434, 49602, 13], "temperature": 0.0, "avg_logprob": -0.227675994237264, "compression_ratio": 1.4489795918367347, "no_speech_prob": 5.0144963097409345e-06}, {"id": 407, "seek": 307200, "start": 3077.0, "end": 3083.0, "text": " So you're just kind of adding changing the assignment to the screen as well.", "tokens": [407, 291, 434, 445, 733, 295, 5127, 4473, 264, 15187, 281, 264, 2568, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.227675994237264, "compression_ratio": 1.4489795918367347, "no_speech_prob": 5.0144963097409345e-06}, {"id": 408, "seek": 307200, "start": 3083.0, "end": 3087.0, "text": " And this box is a function like.", "tokens": [400, 341, 2424, 307, 257, 2445, 411, 13], "temperature": 0.0, "avg_logprob": -0.227675994237264, "compression_ratio": 1.4489795918367347, "no_speech_prob": 5.0144963097409345e-06}, {"id": 409, "seek": 307200, "start": 3087.0, "end": 3093.0, "text": " Yeah, that that's a that's a function called quad.", "tokens": [865, 11, 300, 300, 311, 257, 300, 311, 257, 2445, 1219, 10787, 13], "temperature": 0.0, "avg_logprob": -0.227675994237264, "compression_ratio": 1.4489795918367347, "no_speech_prob": 5.0144963097409345e-06}, {"id": 410, "seek": 309300, "start": 3093.0, "end": 3104.0, "text": " Which I think does a lot of things.", "tokens": [3013, 286, 519, 775, 257, 688, 295, 721, 13], "temperature": 0.0, "avg_logprob": -0.1817761596880461, "compression_ratio": 1.2553191489361701, "no_speech_prob": 4.78463834951981e-06}, {"id": 411, "seek": 309300, "start": 3104.0, "end": 3109.0, "text": " I think this is squad is the same thing as quad.", "tokens": [286, 519, 341, 307, 15310, 307, 264, 912, 551, 382, 10787, 13], "temperature": 0.0, "avg_logprob": -0.1817761596880461, "compression_ratio": 1.2553191489361701, "no_speech_prob": 4.78463834951981e-06}, {"id": 412, "seek": 309300, "start": 3109.0, "end": 3116.0, "text": " Never mind. It's a good question.", "tokens": [7344, 1575, 13, 467, 311, 257, 665, 1168, 13], "temperature": 0.0, "avg_logprob": -0.1817761596880461, "compression_ratio": 1.2553191489361701, "no_speech_prob": 4.78463834951981e-06}, {"id": 413, "seek": 311600, "start": 3116.0, "end": 3123.0, "text": " I don't know. I didn't think so.", "tokens": [286, 500, 380, 458, 13, 286, 994, 380, 519, 370, 13], "temperature": 0.0, "avg_logprob": -0.11613853454589844, "compression_ratio": 0.9402985074626866, "no_speech_prob": 2.9943703339085914e-06}, {"id": 414, "seek": 311600, "start": 3123.0, "end": 3127.0, "text": " No squad is used for indexing.", "tokens": [883, 15310, 307, 1143, 337, 8186, 278, 13], "temperature": 0.0, "avg_logprob": -0.11613853454589844, "compression_ratio": 0.9402985074626866, "no_speech_prob": 2.9943703339085914e-06}, {"id": 415, "seek": 312700, "start": 3127.0, "end": 3156.0, "text": " OK, so maybe quad is like not a language element and it's some weird special thing. What if I search for it?", "tokens": [2264, 11, 370, 1310, 10787, 307, 411, 406, 257, 2856, 4478, 293, 309, 311, 512, 3657, 2121, 551, 13, 708, 498, 286, 3164, 337, 309, 30], "temperature": 0.0, "avg_logprob": -0.12417685190836589, "compression_ratio": 1.08, "no_speech_prob": 5.771506494056666e-06}, {"id": 416, "seek": 315600, "start": 3156.0, "end": 3160.0, "text": " Yeah, it's a variable.", "tokens": [865, 11, 309, 311, 257, 7006, 13], "temperature": 0.0, "avg_logprob": -0.15562803095037286, "compression_ratio": 1.4149659863945578, "no_speech_prob": 3.237622422602726e-06}, {"id": 417, "seek": 315600, "start": 3160.0, "end": 3168.0, "text": " Which communicates between the user's terminal and APL depends on whether it's been assigned a reference, but it's assigned the array is displayed.", "tokens": [3013, 3363, 1024, 1296, 264, 4195, 311, 14709, 293, 5372, 43, 5946, 322, 1968, 309, 311, 668, 13279, 257, 6408, 11, 457, 309, 311, 13279, 264, 10225, 307, 16372, 13], "temperature": 0.0, "avg_logprob": -0.15562803095037286, "compression_ratio": 1.4149659863945578, "no_speech_prob": 3.237622422602726e-06}, {"id": 418, "seek": 315600, "start": 3168.0, "end": 3177.0, "text": " OK, so it's a special magic variable.", "tokens": [2264, 11, 370, 309, 311, 257, 2121, 5585, 7006, 13], "temperature": 0.0, "avg_logprob": -0.15562803095037286, "compression_ratio": 1.4149659863945578, "no_speech_prob": 3.237622422602726e-06}, {"id": 419, "seek": 317700, "start": 3177.0, "end": 3180.0, "text": " One thing about these.", "tokens": [1485, 551, 466, 613, 13], "temperature": 0.0, "avg_logprob": -0.21961992665341026, "compression_ratio": 1.5227272727272727, "no_speech_prob": 2.4822631985443877e-06}, {"id": 420, "seek": 317700, "start": 3180.0, "end": 3186.0, "text": " One thing on these creating and reshaping matrices that cause some confusion for me.", "tokens": [1485, 551, 322, 613, 4084, 293, 725, 71, 569, 278, 32284, 300, 3082, 512, 15075, 337, 385, 13], "temperature": 0.0, "avg_logprob": -0.21961992665341026, "compression_ratio": 1.5227272727272727, "no_speech_prob": 2.4822631985443877e-06}, {"id": 421, "seek": 317700, "start": 3186.0, "end": 3189.0, "text": " I didn't realize I had a bug.", "tokens": [286, 994, 380, 4325, 286, 632, 257, 7426, 13], "temperature": 0.0, "avg_logprob": -0.21961992665341026, "compression_ratio": 1.5227272727272727, "no_speech_prob": 2.4822631985443877e-06}, {"id": 422, "seek": 317700, "start": 3189.0, "end": 3192.0, "text": " You can actually reshape to any size.", "tokens": [509, 393, 767, 725, 42406, 281, 604, 2744, 13], "temperature": 0.0, "avg_logprob": -0.21961992665341026, "compression_ratio": 1.5227272727272727, "no_speech_prob": 2.4822631985443877e-06}, {"id": 423, "seek": 317700, "start": 3192.0, "end": 3198.0, "text": " So if you have four numbers and you reshape it to a three by three, it'll just loop through.", "tokens": [407, 498, 291, 362, 1451, 3547, 293, 291, 725, 42406, 309, 281, 257, 1045, 538, 1045, 11, 309, 603, 445, 6367, 807, 13], "temperature": 0.0, "avg_logprob": -0.21961992665341026, "compression_ratio": 1.5227272727272727, "no_speech_prob": 2.4822631985443877e-06}, {"id": 424, "seek": 319800, "start": 3198.0, "end": 3207.0, "text": " It'll use the first your four numbers plus the first two in the array to make six.", "tokens": [467, 603, 764, 264, 700, 428, 1451, 3547, 1804, 264, 700, 732, 294, 264, 10225, 281, 652, 2309, 13], "temperature": 0.0, "avg_logprob": -0.23112119947160994, "compression_ratio": 1.481283422459893, "no_speech_prob": 3.5556181501306128e-06}, {"id": 425, "seek": 319800, "start": 3207.0, "end": 3210.0, "text": " So it can broadcast in kind of weird ways.", "tokens": [407, 309, 393, 9975, 294, 733, 295, 3657, 2098, 13], "temperature": 0.0, "avg_logprob": -0.23112119947160994, "compression_ratio": 1.481283422459893, "no_speech_prob": 3.5556181501306128e-06}, {"id": 426, "seek": 319800, "start": 3210.0, "end": 3221.0, "text": " Sorry, I'm just wondering, did we? We've got something here called functions and assignment, but I don't actually see if we ever did normal assignment.", "tokens": [4919, 11, 286, 478, 445, 6359, 11, 630, 321, 30, 492, 600, 658, 746, 510, 1219, 6828, 293, 15187, 11, 457, 286, 500, 380, 767, 536, 498, 321, 1562, 630, 2710, 15187, 13], "temperature": 0.0, "avg_logprob": -0.23112119947160994, "compression_ratio": 1.481283422459893, "no_speech_prob": 3.5556181501306128e-06}, {"id": 427, "seek": 322100, "start": 3221.0, "end": 3228.0, "text": " Oh, OK. Well, that'd be the right place to talk about quad.", "tokens": [876, 11, 2264, 13, 1042, 11, 300, 1116, 312, 264, 558, 1081, 281, 751, 466, 10787, 13], "temperature": 0.0, "avg_logprob": -0.15280172938392275, "compression_ratio": 1.1553398058252426, "no_speech_prob": 1.543913094792515e-05}, {"id": 428, "seek": 322100, "start": 3228.0, "end": 3230.0, "text": " That seems like a bit of an oversight.", "tokens": [663, 2544, 411, 257, 857, 295, 364, 29146, 13], "temperature": 0.0, "avg_logprob": -0.15280172938392275, "compression_ratio": 1.1553398058252426, "no_speech_prob": 1.543913094792515e-05}, {"id": 429, "seek": 322100, "start": 3230.0, "end": 3244.0, "text": " OK, so let's pop it.", "tokens": [2264, 11, 370, 718, 311, 1665, 309, 13], "temperature": 0.0, "avg_logprob": -0.15280172938392275, "compression_ratio": 1.1553398058252426, "no_speech_prob": 1.543913094792515e-05}, {"id": 430, "seek": 324400, "start": 3244.0, "end": 3251.0, "text": " So actually, I guess we can do.", "tokens": [407, 767, 11, 286, 2041, 321, 393, 360, 13], "temperature": 0.0, "avg_logprob": -0.14990040705754207, "compression_ratio": 1.5526315789473684, "no_speech_prob": 3.0894464089215035e-06}, {"id": 431, "seek": 324400, "start": 3251.0, "end": 3255.0, "text": " This a function, an anonymous function without assignment.", "tokens": [639, 257, 2445, 11, 364, 24932, 2445, 1553, 15187, 13], "temperature": 0.0, "avg_logprob": -0.14990040705754207, "compression_ratio": 1.5526315789473684, "no_speech_prob": 3.0894464089215035e-06}, {"id": 432, "seek": 324400, "start": 3255.0, "end": 3257.0, "text": " So that's a function.", "tokens": [407, 300, 311, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.14990040705754207, "compression_ratio": 1.5526315789473684, "no_speech_prob": 3.0894464089215035e-06}, {"id": 433, "seek": 324400, "start": 3257.0, "end": 3261.0, "text": " And therefore we can apply it to something.", "tokens": [400, 4412, 321, 393, 3079, 309, 281, 746, 13], "temperature": 0.0, "avg_logprob": -0.14990040705754207, "compression_ratio": 1.5526315789473684, "no_speech_prob": 3.0894464089215035e-06}, {"id": 434, "seek": 324400, "start": 3261.0, "end": 3271.0, "text": " And that's the same as first assigning it to F and then calling F on the thing.", "tokens": [400, 300, 311, 264, 912, 382, 700, 49602, 309, 281, 479, 293, 550, 5141, 479, 322, 264, 551, 13], "temperature": 0.0, "avg_logprob": -0.14990040705754207, "compression_ratio": 1.5526315789473684, "no_speech_prob": 3.0894464089215035e-06}, {"id": 435, "seek": 327100, "start": 3271.0, "end": 3278.0, "text": " OK, assignments. OK, so we can go a equals three.", "tokens": [2264, 11, 22546, 13, 2264, 11, 370, 321, 393, 352, 257, 6915, 1045, 13], "temperature": 0.0, "avg_logprob": -0.17087566587660047, "compression_ratio": 1.2621359223300972, "no_speech_prob": 2.812969569276902e-06}, {"id": 436, "seek": 327100, "start": 3278.0, "end": 3284.0, "text": " I. And then this is the same thing.", "tokens": [286, 13, 400, 550, 341, 307, 264, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.17087566587660047, "compression_ratio": 1.2621359223300972, "no_speech_prob": 2.812969569276902e-06}, {"id": 437, "seek": 327100, "start": 3284.0, "end": 3289.0, "text": " But with printing.", "tokens": [583, 365, 14699, 13], "temperature": 0.0, "avg_logprob": -0.17087566587660047, "compression_ratio": 1.2621359223300972, "no_speech_prob": 2.812969569276902e-06}, {"id": 438, "seek": 327100, "start": 3289.0, "end": 3295.0, "text": " And we can assign a list.", "tokens": [400, 321, 393, 6269, 257, 1329, 13], "temperature": 0.0, "avg_logprob": -0.17087566587660047, "compression_ratio": 1.2621359223300972, "no_speech_prob": 2.812969569276902e-06}, {"id": 439, "seek": 329500, "start": 3295.0, "end": 3302.0, "text": " I'm kind of curious to use the box still hold the value three.", "tokens": [286, 478, 733, 295, 6369, 281, 764, 264, 2424, 920, 1797, 264, 2158, 1045, 13], "temperature": 0.0, "avg_logprob": -0.22639039846567008, "compression_ratio": 1.4585987261146496, "no_speech_prob": 2.0261106783436844e-06}, {"id": 440, "seek": 329500, "start": 3302.0, "end": 3310.0, "text": " I guess I can check here. It said that there was some special thing when you reference it. So, no, it doesn't.", "tokens": [286, 2041, 286, 393, 1520, 510, 13, 467, 848, 300, 456, 390, 512, 2121, 551, 562, 291, 6408, 309, 13, 407, 11, 572, 11, 309, 1177, 380, 13], "temperature": 0.0, "avg_logprob": -0.22639039846567008, "compression_ratio": 1.4585987261146496, "no_speech_prob": 2.0261106783436844e-06}, {"id": 441, "seek": 329500, "start": 3310.0, "end": 3318.0, "text": " It's not a normal variable. It's a weird special thing.", "tokens": [467, 311, 406, 257, 2710, 7006, 13, 467, 311, 257, 3657, 2121, 551, 13], "temperature": 0.0, "avg_logprob": -0.22639039846567008, "compression_ratio": 1.4585987261146496, "no_speech_prob": 2.0261106783436844e-06}, {"id": 442, "seek": 331800, "start": 3318.0, "end": 3333.0, "text": " When you reference it, a prompt is displayed and input is requested and then you can put things after it as well like I.O. and stuff to change the way things work.", "tokens": [1133, 291, 6408, 309, 11, 257, 12391, 307, 16372, 293, 4846, 307, 16436, 293, 550, 291, 393, 829, 721, 934, 309, 382, 731, 411, 286, 13, 46, 13, 293, 1507, 281, 1319, 264, 636, 721, 589, 13], "temperature": 0.0, "avg_logprob": -0.24738929748535157, "compression_ratio": 1.3587786259541985, "no_speech_prob": 2.0903821678075474e-06}, {"id": 443, "seek": 331800, "start": 3333.0, "end": 3340.0, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.24738929748535157, "compression_ratio": 1.3587786259541985, "no_speech_prob": 2.0903821678075474e-06}, {"id": 444, "seek": 331800, "start": 3340.0, "end": 3343.0, "text": " So.", "tokens": [407, 13], "temperature": 0.0, "avg_logprob": -0.24738929748535157, "compression_ratio": 1.3587786259541985, "no_speech_prob": 2.0903821678075474e-06}, {"id": 445, "seek": 334300, "start": 3343.0, "end": 3348.0, "text": " That means we can do. We've got a.", "tokens": [663, 1355, 321, 393, 360, 13, 492, 600, 658, 257, 13], "temperature": 0.0, "avg_logprob": -0.1871024019577924, "compression_ratio": 1.5193798449612403, "no_speech_prob": 4.029387582704658e-06}, {"id": 446, "seek": 334300, "start": 3348.0, "end": 3357.0, "text": " We've got a row of our matrix. We've got a row of a. We could do also things like row of three.", "tokens": [492, 600, 658, 257, 5386, 295, 527, 8141, 13, 492, 600, 658, 257, 5386, 295, 257, 13, 492, 727, 360, 611, 721, 411, 5386, 295, 1045, 13], "temperature": 0.0, "avg_logprob": -0.1871024019577924, "compression_ratio": 1.5193798449612403, "no_speech_prob": 4.029387582704658e-06}, {"id": 447, "seek": 334300, "start": 3357.0, "end": 3360.0, "text": " And that's this is special.", "tokens": [400, 300, 311, 341, 307, 2121, 13], "temperature": 0.0, "avg_logprob": -0.1871024019577924, "compression_ratio": 1.5193798449612403, "no_speech_prob": 4.029387582704658e-06}, {"id": 448, "seek": 334300, "start": 3360.0, "end": 3367.0, "text": " This is. This is a scalar.", "tokens": [639, 307, 13, 639, 307, 257, 39684, 13], "temperature": 0.0, "avg_logprob": -0.1871024019577924, "compression_ratio": 1.5193798449612403, "no_speech_prob": 4.029387582704658e-06}, {"id": 449, "seek": 334300, "start": 3367.0, "end": 3369.0, "text": " I believe.", "tokens": [286, 1697, 13], "temperature": 0.0, "avg_logprob": -0.1871024019577924, "compression_ratio": 1.5193798449612403, "no_speech_prob": 4.029387582704658e-06}, {"id": 450, "seek": 336900, "start": 3369.0, "end": 3374.0, "text": " Although it's printing out. Well, this is a scalar.", "tokens": [5780, 309, 311, 14699, 484, 13, 1042, 11, 341, 307, 257, 39684, 13], "temperature": 0.0, "avg_logprob": -0.1872733227618329, "compression_ratio": 1.5705521472392638, "no_speech_prob": 9.516039426671341e-06}, {"id": 451, "seek": 336900, "start": 3374.0, "end": 3379.0, "text": " Oh, no, this is not a scalar. This is just this is like the empty set. This is nothing at all.", "tokens": [876, 11, 572, 11, 341, 307, 406, 257, 39684, 13, 639, 307, 445, 341, 307, 411, 264, 6707, 992, 13, 639, 307, 1825, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.1872733227618329, "compression_ratio": 1.5705521472392638, "no_speech_prob": 9.516039426671341e-06}, {"id": 452, "seek": 336900, "start": 3379.0, "end": 3388.0, "text": " Which I think is a symbol for.", "tokens": [3013, 286, 519, 307, 257, 5986, 337, 13], "temperature": 0.0, "avg_logprob": -0.1872733227618329, "compression_ratio": 1.5705521472392638, "no_speech_prob": 9.516039426671341e-06}, {"id": 453, "seek": 336900, "start": 3388.0, "end": 3397.0, "text": " Might not count as one of the last three. I think they call it the zilled day.", "tokens": [23964, 406, 1207, 382, 472, 295, 264, 1036, 1045, 13, 286, 519, 436, 818, 309, 264, 710, 6261, 786, 13], "temperature": 0.0, "avg_logprob": -0.1872733227618329, "compression_ratio": 1.5705521472392638, "no_speech_prob": 9.516039426671341e-06}, {"id": 454, "seek": 339700, "start": 3397.0, "end": 3409.0, "text": " Just one moment.", "tokens": [1449, 472, 1623, 13], "temperature": 0.0, "avg_logprob": -0.30505520956856863, "compression_ratio": 1.127906976744186, "no_speech_prob": 4.26435362896882e-05}, {"id": 455, "seek": 339700, "start": 3409.0, "end": 3415.0, "text": " Yeah, sorry.", "tokens": [865, 11, 2597, 13], "temperature": 0.0, "avg_logprob": -0.30505520956856863, "compression_ratio": 1.127906976744186, "no_speech_prob": 4.26435362896882e-05}, {"id": 456, "seek": 339700, "start": 3415.0, "end": 3418.0, "text": " That is one of the last three zilled day or something.", "tokens": [663, 307, 472, 295, 264, 1036, 1045, 710, 6261, 786, 420, 746, 13], "temperature": 0.0, "avg_logprob": -0.30505520956856863, "compression_ratio": 1.127906976744186, "no_speech_prob": 4.26435362896882e-05}, {"id": 457, "seek": 339700, "start": 3418.0, "end": 3421.0, "text": " The old day.", "tokens": [440, 1331, 786, 13], "temperature": 0.0, "avg_logprob": -0.30505520956856863, "compression_ratio": 1.127906976744186, "no_speech_prob": 4.26435362896882e-05}, {"id": 458, "seek": 342100, "start": 3421.0, "end": 3427.0, "text": " Is a numeric constant. OK.", "tokens": [1119, 257, 7866, 299, 5754, 13, 2264, 13], "temperature": 0.0, "avg_logprob": -0.1718270731907265, "compression_ratio": 1.2280701754385965, "no_speech_prob": 8.267746125056874e-06}, {"id": 459, "seek": 342100, "start": 3427.0, "end": 3433.0, "text": " Let's see if that displays the same way.", "tokens": [961, 311, 536, 498, 300, 20119, 264, 912, 636, 13], "temperature": 0.0, "avg_logprob": -0.1718270731907265, "compression_ratio": 1.2280701754385965, "no_speech_prob": 8.267746125056874e-06}, {"id": 460, "seek": 342100, "start": 3433.0, "end": 3435.0, "text": " It is OK.", "tokens": [467, 307, 2264, 13], "temperature": 0.0, "avg_logprob": -0.1718270731907265, "compression_ratio": 1.2280701754385965, "no_speech_prob": 8.267746125056874e-06}, {"id": 461, "seek": 342100, "start": 3435.0, "end": 3441.0, "text": " And the shape of that is zero, I think.", "tokens": [400, 264, 3909, 295, 300, 307, 4018, 11, 286, 519, 13], "temperature": 0.0, "avg_logprob": -0.1718270731907265, "compression_ratio": 1.2280701754385965, "no_speech_prob": 8.267746125056874e-06}, {"id": 462, "seek": 342100, "start": 3441.0, "end": 3446.0, "text": " How do you enter that?", "tokens": [1012, 360, 291, 3242, 300, 30], "temperature": 0.0, "avg_logprob": -0.1718270731907265, "compression_ratio": 1.2280701754385965, "no_speech_prob": 8.267746125056874e-06}, {"id": 463, "seek": 344600, "start": 3446.0, "end": 3451.0, "text": " The check the shape. How do you tell how do you type is the order? I just pasted it.", "tokens": [440, 1520, 264, 3909, 13, 1012, 360, 291, 980, 577, 360, 291, 2010, 307, 264, 1668, 30, 286, 445, 1791, 292, 309, 13], "temperature": 0.0, "avg_logprob": -0.3108170653042728, "compression_ratio": 1.4355828220858895, "no_speech_prob": 4.53947031928692e-05}, {"id": 464, "seek": 344600, "start": 3451.0, "end": 3454.0, "text": " It's the back tick. Right. Curly bracket.", "tokens": [467, 311, 264, 646, 5204, 13, 1779, 13, 7907, 356, 16904, 13], "temperature": 0.0, "avg_logprob": -0.3108170653042728, "compression_ratio": 1.4355828220858895, "no_speech_prob": 4.53947031928692e-05}, {"id": 465, "seek": 344600, "start": 3454.0, "end": 3459.0, "text": " OK. How did you find that? Was a matter of interest.", "tokens": [2264, 13, 1012, 630, 291, 915, 300, 30, 3027, 257, 1871, 295, 1179, 13], "temperature": 0.0, "avg_logprob": -0.3108170653042728, "compression_ratio": 1.4355828220858895, "no_speech_prob": 4.53947031928692e-05}, {"id": 466, "seek": 344600, "start": 3459.0, "end": 3467.0, "text": " It's kind of far right of your keyboard up at the top.", "tokens": [467, 311, 733, 295, 1400, 558, 295, 428, 10186, 493, 412, 264, 1192, 13], "temperature": 0.0, "avg_logprob": -0.3108170653042728, "compression_ratio": 1.4355828220858895, "no_speech_prob": 4.53947031928692e-05}, {"id": 467, "seek": 346700, "start": 3467.0, "end": 3477.0, "text": " All right. Three from the right. Oh, well found. I see.", "tokens": [1057, 558, 13, 6244, 490, 264, 558, 13, 876, 11, 731, 1352, 13, 286, 536, 13], "temperature": 0.0, "avg_logprob": -0.22086033166623584, "compression_ratio": 1.3008130081300813, "no_speech_prob": 3.3404082842025673e-06}, {"id": 468, "seek": 346700, "start": 3477.0, "end": 3484.0, "text": " And so interestingly, the rank of zilled day is not zilled day.", "tokens": [400, 370, 25873, 11, 264, 6181, 295, 710, 6261, 786, 307, 406, 710, 6261, 786, 13], "temperature": 0.0, "avg_logprob": -0.22086033166623584, "compression_ratio": 1.3008130081300813, "no_speech_prob": 3.3404082842025673e-06}, {"id": 469, "seek": 346700, "start": 3484.0, "end": 3487.0, "text": " It's actually.", "tokens": [467, 311, 767, 13], "temperature": 0.0, "avg_logprob": -0.22086033166623584, "compression_ratio": 1.3008130081300813, "no_speech_prob": 3.3404082842025673e-06}, {"id": 470, "seek": 346700, "start": 3487.0, "end": 3491.0, "text": " An array containing zero.", "tokens": [1107, 10225, 19273, 4018, 13], "temperature": 0.0, "avg_logprob": -0.22086033166623584, "compression_ratio": 1.3008130081300813, "no_speech_prob": 3.3404082842025673e-06}, {"id": 471, "seek": 349100, "start": 3491.0, "end": 3498.0, "text": " And so this brings us to the song, which is that if I.", "tokens": [400, 370, 341, 5607, 505, 281, 264, 2153, 11, 597, 307, 300, 498, 286, 13], "temperature": 0.0, "avg_logprob": -0.1468523144721985, "compression_ratio": 1.608433734939759, "no_speech_prob": 4.425421593623469e-06}, {"id": 472, "seek": 349100, "start": 3498.0, "end": 3502.0, "text": " So given that row of math is two, three.", "tokens": [407, 2212, 300, 5386, 295, 5221, 307, 732, 11, 1045, 13], "temperature": 0.0, "avg_logprob": -0.1468523144721985, "compression_ratio": 1.608433734939759, "no_speech_prob": 4.425421593623469e-06}, {"id": 473, "seek": 349100, "start": 3502.0, "end": 3507.0, "text": " That means row of row of math is true. Right.", "tokens": [663, 1355, 5386, 295, 5386, 295, 5221, 307, 2074, 13, 1779, 13], "temperature": 0.0, "avg_logprob": -0.1468523144721985, "compression_ratio": 1.608433734939759, "no_speech_prob": 4.425421593623469e-06}, {"id": 474, "seek": 349100, "start": 3507.0, "end": 3510.0, "text": " Because it's like this is a list.", "tokens": [1436, 309, 311, 411, 341, 307, 257, 1329, 13], "temperature": 0.0, "avg_logprob": -0.1468523144721985, "compression_ratio": 1.608433734939759, "no_speech_prob": 4.425421593623469e-06}, {"id": 475, "seek": 349100, "start": 3510.0, "end": 3515.0, "text": " One dimensional array rank one array containing two elements.", "tokens": [1485, 18795, 10225, 6181, 472, 10225, 19273, 732, 4959, 13], "temperature": 0.0, "avg_logprob": -0.1468523144721985, "compression_ratio": 1.608433734939759, "no_speech_prob": 4.425421593623469e-06}, {"id": 476, "seek": 349100, "start": 3515.0, "end": 3519.0, "text": " So this is row of two, three.", "tokens": [407, 341, 307, 5386, 295, 732, 11, 1045, 13], "temperature": 0.0, "avg_logprob": -0.1468523144721985, "compression_ratio": 1.608433734939759, "no_speech_prob": 4.425421593623469e-06}, {"id": 477, "seek": 351900, "start": 3519.0, "end": 3524.0, "text": " And so row of that is one.", "tokens": [400, 370, 5386, 295, 300, 307, 472, 13], "temperature": 0.0, "avg_logprob": -0.13781393275541418, "compression_ratio": 1.588235294117647, "no_speech_prob": 1.6536794191779336e-06}, {"id": 478, "seek": 351900, "start": 3524.0, "end": 3531.0, "text": " And because row of zilled day is this.", "tokens": [400, 570, 5386, 295, 710, 6261, 786, 307, 341, 13], "temperature": 0.0, "avg_logprob": -0.13781393275541418, "compression_ratio": 1.588235294117647, "no_speech_prob": 1.6536794191779336e-06}, {"id": 479, "seek": 351900, "start": 3531.0, "end": 3536.0, "text": " Row of row of that.", "tokens": [20309, 295, 5386, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.13781393275541418, "compression_ratio": 1.588235294117647, "no_speech_prob": 1.6536794191779336e-06}, {"id": 480, "seek": 351900, "start": 3536.0, "end": 3541.0, "text": " Is one and row of row of row of that is one.", "tokens": [1119, 472, 293, 5386, 295, 5386, 295, 5386, 295, 300, 307, 472, 13], "temperature": 0.0, "avg_logprob": -0.13781393275541418, "compression_ratio": 1.588235294117647, "no_speech_prob": 1.6536794191779336e-06}, {"id": 481, "seek": 351900, "start": 3541.0, "end": 3545.0, "text": " And.", "tokens": [400, 13], "temperature": 0.0, "avg_logprob": -0.13781393275541418, "compression_ratio": 1.588235294117647, "no_speech_prob": 1.6536794191779336e-06}, {"id": 482, "seek": 354500, "start": 3545.0, "end": 3553.0, "text": " Actually, let's go higher dimensional. We can do.", "tokens": [5135, 11, 718, 311, 352, 2946, 18795, 13, 492, 393, 360, 13], "temperature": 0.0, "avg_logprob": -0.1034153559628655, "compression_ratio": 1.4099378881987579, "no_speech_prob": 5.955032065685373e-06}, {"id": 483, "seek": 354500, "start": 3553.0, "end": 3561.0, "text": " Bigger ones, we can say, give me two faces, each with two rows, each with three columns.", "tokens": [5429, 1321, 2306, 11, 321, 393, 584, 11, 976, 385, 732, 8475, 11, 1184, 365, 732, 13241, 11, 1184, 365, 1045, 13766, 13], "temperature": 0.0, "avg_logprob": -0.1034153559628655, "compression_ratio": 1.4099378881987579, "no_speech_prob": 5.955032065685373e-06}, {"id": 484, "seek": 354500, "start": 3561.0, "end": 3566.0, "text": " This is like a kind of a rectangular prism, if you like.", "tokens": [639, 307, 411, 257, 733, 295, 257, 31167, 582, 1434, 11, 498, 291, 411, 13], "temperature": 0.0, "avg_logprob": -0.1034153559628655, "compression_ratio": 1.4099378881987579, "no_speech_prob": 5.955032065685373e-06}, {"id": 485, "seek": 354500, "start": 3566.0, "end": 3570.0, "text": " And that's how they display it.", "tokens": [400, 300, 311, 577, 436, 4674, 309, 13], "temperature": 0.0, "avg_logprob": -0.1034153559628655, "compression_ratio": 1.4099378881987579, "no_speech_prob": 5.955032065685373e-06}, {"id": 486, "seek": 357000, "start": 3570.0, "end": 3577.0, "text": " I changed somewhere along the lines.", "tokens": [286, 3105, 4079, 2051, 264, 3876, 13], "temperature": 0.0, "avg_logprob": -0.1437658154687216, "compression_ratio": 1.521505376344086, "no_speech_prob": 5.1737879402935505e-06}, {"id": 487, "seek": 357000, "start": 3577.0, "end": 3579.0, "text": " Let's run this again.", "tokens": [961, 311, 1190, 341, 797, 13], "temperature": 0.0, "avg_logprob": -0.1437658154687216, "compression_ratio": 1.521505376344086, "no_speech_prob": 5.1737879402935505e-06}, {"id": 488, "seek": 357000, "start": 3579.0, "end": 3581.0, "text": " He's a.", "tokens": [634, 311, 257, 13], "temperature": 0.0, "avg_logprob": -0.1437658154687216, "compression_ratio": 1.521505376344086, "no_speech_prob": 5.1737879402935505e-06}, {"id": 489, "seek": 357000, "start": 3581.0, "end": 3586.0, "text": " And you'll see it's created two matrices that kind of you can think of them as stacked on top of each other.", "tokens": [400, 291, 603, 536, 309, 311, 2942, 732, 32284, 300, 733, 295, 291, 393, 519, 295, 552, 382, 28867, 322, 1192, 295, 1184, 661, 13], "temperature": 0.0, "avg_logprob": -0.1437658154687216, "compression_ratio": 1.521505376344086, "no_speech_prob": 5.1737879402935505e-06}, {"id": 490, "seek": 357000, "start": 3586.0, "end": 3589.0, "text": " So this is a rank three tensor.", "tokens": [407, 341, 307, 257, 6181, 1045, 40863, 13], "temperature": 0.0, "avg_logprob": -0.1437658154687216, "compression_ratio": 1.521505376344086, "no_speech_prob": 5.1737879402935505e-06}, {"id": 491, "seek": 357000, "start": 3589.0, "end": 3593.0, "text": " And it's when it ran out of numbers from a.", "tokens": [400, 309, 311, 562, 309, 5872, 484, 295, 3547, 490, 257, 13], "temperature": 0.0, "avg_logprob": -0.1437658154687216, "compression_ratio": 1.521505376344086, "no_speech_prob": 5.1737879402935505e-06}, {"id": 492, "seek": 357000, "start": 3593.0, "end": 3597.0, "text": " It just went back to the start.", "tokens": [467, 445, 1437, 646, 281, 264, 722, 13], "temperature": 0.0, "avg_logprob": -0.1437658154687216, "compression_ratio": 1.521505376344086, "no_speech_prob": 5.1737879402935505e-06}, {"id": 493, "seek": 359700, "start": 3597.0, "end": 3601.0, "text": " So you can use row as repeat.", "tokens": [407, 291, 393, 764, 5386, 382, 7149, 13], "temperature": 0.0, "avg_logprob": -0.11748974663870675, "compression_ratio": 1.198019801980198, "no_speech_prob": 2.225245452791569e-06}, {"id": 494, "seek": 359700, "start": 3601.0, "end": 3609.0, "text": " So, for example, if I use a scalar is just a matrix of ones.", "tokens": [407, 11, 337, 1365, 11, 498, 286, 764, 257, 39684, 307, 445, 257, 8141, 295, 2306, 13], "temperature": 0.0, "avg_logprob": -0.11748974663870675, "compression_ratio": 1.198019801980198, "no_speech_prob": 2.225245452791569e-06}, {"id": 495, "seek": 359700, "start": 3609.0, "end": 3622.0, "text": " So let's call this C for cube.", "tokens": [407, 718, 311, 818, 341, 383, 337, 13728, 13], "temperature": 0.0, "avg_logprob": -0.11748974663870675, "compression_ratio": 1.198019801980198, "no_speech_prob": 2.225245452791569e-06}, {"id": 496, "seek": 362200, "start": 3622.0, "end": 3628.0, "text": " And so we can get.", "tokens": [400, 370, 321, 393, 483, 13], "temperature": 0.0, "avg_logprob": -0.16985034942626953, "compression_ratio": 1.619047619047619, "no_speech_prob": 4.565873041428858e-06}, {"id": 497, "seek": 362200, "start": 3628.0, "end": 3632.0, "text": " This is on that matrix thing.", "tokens": [639, 307, 322, 300, 8141, 551, 13], "temperature": 0.0, "avg_logprob": -0.16985034942626953, "compression_ratio": 1.619047619047619, "no_speech_prob": 4.565873041428858e-06}, {"id": 498, "seek": 362200, "start": 3632.0, "end": 3637.0, "text": " Does the thing on the margin of it mean anything to you like this one here?", "tokens": [4402, 264, 551, 322, 264, 10270, 295, 309, 914, 1340, 281, 291, 411, 341, 472, 510, 30], "temperature": 0.0, "avg_logprob": -0.16985034942626953, "compression_ratio": 1.619047619047619, "no_speech_prob": 4.565873041428858e-06}, {"id": 499, "seek": 362200, "start": 3637.0, "end": 3642.0, "text": " No, no, like the one above it, you know, this one here. Yeah. Yeah.", "tokens": [883, 11, 572, 11, 411, 264, 472, 3673, 309, 11, 291, 458, 11, 341, 472, 510, 13, 865, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.16985034942626953, "compression_ratio": 1.619047619047619, "no_speech_prob": 4.565873041428858e-06}, {"id": 500, "seek": 362200, "start": 3642.0, "end": 3648.0, "text": " So this has got this has got to there's actually two dimensions happening here.", "tokens": [407, 341, 575, 658, 341, 575, 658, 281, 456, 311, 767, 732, 12819, 2737, 510, 13], "temperature": 0.0, "avg_logprob": -0.16985034942626953, "compression_ratio": 1.619047619047619, "no_speech_prob": 4.565873041428858e-06}, {"id": 501, "seek": 364800, "start": 3648.0, "end": 3653.0, "text": " There's this dimension and there's this dimension.", "tokens": [821, 311, 341, 10139, 293, 456, 311, 341, 10139, 13], "temperature": 0.0, "avg_logprob": -0.13779636494164327, "compression_ratio": 1.6440677966101696, "no_speech_prob": 1.1015625887011993e-06}, {"id": 502, "seek": 364800, "start": 3653.0, "end": 3659.0, "text": " So ideally, if we had a 3D display, they would be on top of each other, you know, but we don't.", "tokens": [407, 22915, 11, 498, 321, 632, 257, 805, 35, 4674, 11, 436, 576, 312, 322, 1192, 295, 1184, 661, 11, 291, 458, 11, 457, 321, 500, 380, 13], "temperature": 0.0, "avg_logprob": -0.13779636494164327, "compression_ratio": 1.6440677966101696, "no_speech_prob": 1.1015625887011993e-06}, {"id": 503, "seek": 364800, "start": 3659.0, "end": 3668.0, "text": " So just print some with a space between and it puts two kind of dimension lines here to tell us this is actually representing two separate axes.", "tokens": [407, 445, 4482, 512, 365, 257, 1901, 1296, 293, 309, 8137, 732, 733, 295, 10139, 3876, 510, 281, 980, 505, 341, 307, 767, 13460, 732, 4994, 35387, 13], "temperature": 0.0, "avg_logprob": -0.13779636494164327, "compression_ratio": 1.6440677966101696, "no_speech_prob": 1.1015625887011993e-06}, {"id": 504, "seek": 364800, "start": 3668.0, "end": 3672.0, "text": " This is two faces by two rows by three columns.", "tokens": [639, 307, 732, 8475, 538, 732, 13241, 538, 1045, 13766, 13], "temperature": 0.0, "avg_logprob": -0.13779636494164327, "compression_ratio": 1.6440677966101696, "no_speech_prob": 1.1015625887011993e-06}, {"id": 505, "seek": 364800, "start": 3672.0, "end": 3676.0, "text": " I see. OK. So each arrow is kind of a dimension.", "tokens": [286, 536, 13, 2264, 13, 407, 1184, 11610, 307, 733, 295, 257, 10139, 13], "temperature": 0.0, "avg_logprob": -0.13779636494164327, "compression_ratio": 1.6440677966101696, "no_speech_prob": 1.1015625887011993e-06}, {"id": 506, "seek": 367600, "start": 3676.0, "end": 3684.0, "text": " Exactly. Exactly.", "tokens": [7587, 13, 7587, 13], "temperature": 0.0, "avg_logprob": -0.1574614902712264, "compression_ratio": 1.4426229508196722, "no_speech_prob": 1.0288943485647906e-05}, {"id": 507, "seek": 367600, "start": 3684.0, "end": 3694.0, "text": " Yeah. So we could do row of row of row of C and so row of row of row of anything ends up being one.", "tokens": [865, 13, 407, 321, 727, 360, 5386, 295, 5386, 295, 5386, 295, 383, 293, 370, 5386, 295, 5386, 295, 5386, 295, 1340, 5314, 493, 885, 472, 13], "temperature": 0.0, "avg_logprob": -0.1574614902712264, "compression_ratio": 1.4426229508196722, "no_speech_prob": 1.0288943485647906e-05}, {"id": 508, "seek": 367600, "start": 3694.0, "end": 3700.0, "text": " And so that gives us our first and possibly only APL song.", "tokens": [400, 370, 300, 2709, 505, 527, 700, 293, 6264, 787, 5372, 43, 2153, 13], "temperature": 0.0, "avg_logprob": -0.1574614902712264, "compression_ratio": 1.4426229508196722, "no_speech_prob": 1.0288943485647906e-05}, {"id": 509, "seek": 370000, "start": 3700.0, "end": 3709.0, "text": " APL row, row, Richard Storman.", "tokens": [5372, 43, 5386, 11, 5386, 11, 9809, 20494, 282, 13], "temperature": 0.0, "avg_logprob": -0.17057904330166904, "compression_ratio": 1.2867132867132867, "no_speech_prob": 6.854254479549127e-06}, {"id": 510, "seek": 370000, "start": 3709.0, "end": 3712.0, "text": " Here we go.", "tokens": [1692, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.17057904330166904, "compression_ratio": 1.2867132867132867, "no_speech_prob": 6.854254479549127e-06}, {"id": 511, "seek": 370000, "start": 3712.0, "end": 3720.0, "text": " Oh, there is actually a dialogue poetry section that's important.", "tokens": [876, 11, 456, 307, 767, 257, 10221, 15155, 3541, 300, 311, 1021, 13], "temperature": 0.0, "avg_logprob": -0.17057904330166904, "compression_ratio": 1.2867132867132867, "no_speech_prob": 6.854254479549127e-06}, {"id": 512, "seek": 370000, "start": 3720.0, "end": 3725.0, "text": " And here's the one about row, which Claire and I have now learned by heart.", "tokens": [400, 510, 311, 264, 472, 466, 5386, 11, 597, 22605, 293, 286, 362, 586, 3264, 538, 1917, 13], "temperature": 0.0, "avg_logprob": -0.17057904330166904, "compression_ratio": 1.2867132867132867, "no_speech_prob": 6.854254479549127e-06}, {"id": 513, "seek": 372500, "start": 3725.0, "end": 3733.0, "text": " Row, row, row of X always equals one row is dimension, row, row rank APL is fun.", "tokens": [20309, 11, 5386, 11, 5386, 295, 1783, 1009, 6915, 472, 5386, 307, 10139, 11, 5386, 11, 5386, 6181, 5372, 43, 307, 1019, 13], "temperature": 0.0, "avg_logprob": -0.16492488167502664, "compression_ratio": 1.7243243243243243, "no_speech_prob": 1.4970763913879637e-05}, {"id": 514, "seek": 372500, "start": 3733.0, "end": 3740.0, "text": " So, yeah, row, row, row of anything gives us one row of something is the dimension.", "tokens": [407, 11, 1338, 11, 5386, 11, 5386, 11, 5386, 295, 1340, 2709, 505, 472, 5386, 295, 746, 307, 264, 10139, 13], "temperature": 0.0, "avg_logprob": -0.16492488167502664, "compression_ratio": 1.7243243243243243, "no_speech_prob": 1.4970763913879637e-05}, {"id": 515, "seek": 372500, "start": 3740.0, "end": 3747.0, "text": " So row so tells us how many rows by columns or whatever it's I would call it shape.", "tokens": [407, 5386, 370, 5112, 505, 577, 867, 13241, 538, 13766, 420, 2035, 309, 311, 286, 576, 818, 309, 3909, 13], "temperature": 0.0, "avg_logprob": -0.16492488167502664, "compression_ratio": 1.7243243243243243, "no_speech_prob": 1.4970763913879637e-05}, {"id": 516, "seek": 372500, "start": 3747.0, "end": 3753.0, "text": " They call dimension row of row of something tells you the tensor rank.", "tokens": [814, 818, 10139, 5386, 295, 5386, 295, 746, 5112, 291, 264, 40863, 6181, 13], "temperature": 0.0, "avg_logprob": -0.16492488167502664, "compression_ratio": 1.7243243243243243, "no_speech_prob": 1.4970763913879637e-05}, {"id": 517, "seek": 375300, "start": 3753.0, "end": 3756.0, "text": " So that's why that poem.", "tokens": [407, 300, 311, 983, 300, 13065, 13], "temperature": 0.0, "avg_logprob": -0.23283872848901993, "compression_ratio": 1.1443298969072164, "no_speech_prob": 1.4735665899934247e-05}, {"id": 518, "seek": 375300, "start": 3756.0, "end": 3767.0, "text": " One above it's pretty good too.", "tokens": [1485, 3673, 309, 311, 1238, 665, 886, 13], "temperature": 0.0, "avg_logprob": -0.23283872848901993, "compression_ratio": 1.1443298969072164, "no_speech_prob": 1.4735665899934247e-05}, {"id": 519, "seek": 375300, "start": 3767.0, "end": 3777.0, "text": " There you go. There's an MP3 recording of an APL song.", "tokens": [821, 291, 352, 13, 821, 311, 364, 14146, 18, 6613, 295, 364, 5372, 43, 2153, 13], "temperature": 0.0, "avg_logprob": -0.23283872848901993, "compression_ratio": 1.1443298969072164, "no_speech_prob": 1.4735665899934247e-05}, {"id": 520, "seek": 377700, "start": 3777.0, "end": 3786.0, "text": " So to wrap up, let's do IOTA, which is a nice easy one.", "tokens": [407, 281, 7019, 493, 11, 718, 311, 360, 286, 5068, 32, 11, 597, 307, 257, 1481, 1858, 472, 13], "temperature": 0.0, "avg_logprob": -0.1195127931359696, "compression_ratio": 1.4589041095890412, "no_speech_prob": 7.295907380466815e-06}, {"id": 521, "seek": 377700, "start": 3786.0, "end": 3791.0, "text": " So IOTA is just the same as range, basically.", "tokens": [407, 286, 5068, 32, 307, 445, 264, 912, 382, 3613, 11, 1936, 13], "temperature": 0.0, "avg_logprob": -0.1195127931359696, "compression_ratio": 1.4589041095890412, "no_speech_prob": 7.295907380466815e-06}, {"id": 522, "seek": 377700, "start": 3791.0, "end": 3796.0, "text": " So IOTA four.", "tokens": [407, 286, 5068, 32, 1451, 13], "temperature": 0.0, "avg_logprob": -0.1195127931359696, "compression_ratio": 1.4589041095890412, "no_speech_prob": 7.295907380466815e-06}, {"id": 523, "seek": 377700, "start": 3796.0, "end": 3801.0, "text": " It's the same as range, except it starts at one rather than zero by default.", "tokens": [467, 311, 264, 912, 382, 3613, 11, 3993, 309, 3719, 412, 472, 2831, 813, 4018, 538, 7576, 13], "temperature": 0.0, "avg_logprob": -0.1195127931359696, "compression_ratio": 1.4589041095890412, "no_speech_prob": 7.295907380466815e-06}, {"id": 524, "seek": 377700, "start": 3801.0, "end": 3803.0, "text": " You can change that.", "tokens": [509, 393, 1319, 300, 13], "temperature": 0.0, "avg_logprob": -0.1195127931359696, "compression_ratio": 1.4589041095890412, "no_speech_prob": 7.295907380466815e-06}, {"id": 525, "seek": 380300, "start": 3803.0, "end": 3811.0, "text": " I believe you can say quad IOTA zero or something like that to change.", "tokens": [286, 1697, 291, 393, 584, 10787, 286, 5068, 32, 4018, 420, 746, 411, 300, 281, 1319, 13], "temperature": 0.0, "avg_logprob": -0.14957619784923082, "compression_ratio": 1.5380952380952382, "no_speech_prob": 2.5069661205634475e-05}, {"id": 526, "seek": 380300, "start": 3811.0, "end": 3816.0, "text": " Like so it starts at zero instead of one.", "tokens": [1743, 370, 309, 3719, 412, 4018, 2602, 295, 472, 13], "temperature": 0.0, "avg_logprob": -0.14957619784923082, "compression_ratio": 1.5380952380952382, "no_speech_prob": 2.5069661205634475e-05}, {"id": 527, "seek": 380300, "start": 3816.0, "end": 3818.0, "text": " I kind of like just going to leave it in the defaults.", "tokens": [286, 733, 295, 411, 445, 516, 281, 1856, 309, 294, 264, 7576, 82, 13], "temperature": 0.0, "avg_logprob": -0.14957619784923082, "compression_ratio": 1.5380952380952382, "no_speech_prob": 2.5069661205634475e-05}, {"id": 528, "seek": 380300, "start": 3818.0, "end": 3821.0, "text": " Otherwise, it's just going to get confusing.", "tokens": [10328, 11, 309, 311, 445, 516, 281, 483, 13181, 13], "temperature": 0.0, "avg_logprob": -0.14957619784923082, "compression_ratio": 1.5380952380952382, "no_speech_prob": 2.5069661205634475e-05}, {"id": 529, "seek": 380300, "start": 3821.0, "end": 3827.0, "text": " If you haven't found it yet, one of the really cool things about IOTA is you can range in multiple dimensions.", "tokens": [759, 291, 2378, 380, 1352, 309, 1939, 11, 472, 295, 264, 534, 1627, 721, 466, 286, 5068, 32, 307, 291, 393, 3613, 294, 3866, 12819, 13], "temperature": 0.0, "avg_logprob": -0.14957619784923082, "compression_ratio": 1.5380952380952382, "no_speech_prob": 2.5069661205634475e-05}, {"id": 530, "seek": 382700, "start": 3827.0, "end": 3839.0, "text": " So if you do IOTA two, two.", "tokens": [407, 498, 291, 360, 286, 5068, 32, 732, 11, 732, 13], "temperature": 0.0, "avg_logprob": -0.1512641772417955, "compression_ratio": 1.4451219512195121, "no_speech_prob": 2.6273342882632278e-05}, {"id": 531, "seek": 382700, "start": 3839.0, "end": 3847.0, "text": " Yeah, so it's creating basically all of the coordinates to kind of index into a multidimensional structure, I guess.", "tokens": [865, 11, 370, 309, 311, 4084, 1936, 439, 295, 264, 21056, 281, 733, 295, 8186, 666, 257, 2120, 327, 332, 11075, 3877, 11, 286, 2041, 13], "temperature": 0.0, "avg_logprob": -0.1512641772417955, "compression_ratio": 1.4451219512195121, "no_speech_prob": 2.6273342882632278e-05}, {"id": 532, "seek": 382700, "start": 3847.0, "end": 3856.0, "text": " So here's it's like the Cartesian product of the set of one, two with a set one, two, three.", "tokens": [407, 510, 311, 309, 311, 411, 264, 22478, 42434, 1674, 295, 264, 992, 295, 472, 11, 732, 365, 257, 992, 472, 11, 732, 11, 1045, 13], "temperature": 0.0, "avg_logprob": -0.1512641772417955, "compression_ratio": 1.4451219512195121, "no_speech_prob": 2.6273342882632278e-05}, {"id": 533, "seek": 385600, "start": 3856.0, "end": 3859.0, "text": " And so now we've got arrays and arrays.", "tokens": [400, 370, 586, 321, 600, 658, 41011, 293, 41011, 13], "temperature": 0.0, "avg_logprob": -0.12142926454544067, "compression_ratio": 1.4014084507042253, "no_speech_prob": 4.289289790904149e-06}, {"id": 534, "seek": 385600, "start": 3859.0, "end": 3867.0, "text": " And so you can change these symbols changed.", "tokens": [400, 370, 291, 393, 1319, 613, 16944, 3105, 13], "temperature": 0.0, "avg_logprob": -0.12142926454544067, "compression_ratio": 1.4014084507042253, "no_speech_prob": 4.289289790904149e-06}, {"id": 535, "seek": 385600, "start": 3867.0, "end": 3879.0, "text": " So to create our matrix, an easier way to create the matrix would have been to just go two, three row of IOTA six.", "tokens": [407, 281, 1884, 527, 8141, 11, 364, 3571, 636, 281, 1884, 264, 8141, 576, 362, 668, 281, 445, 352, 732, 11, 1045, 5386, 295, 286, 5068, 32, 2309, 13], "temperature": 0.0, "avg_logprob": -0.12142926454544067, "compression_ratio": 1.4014084507042253, "no_speech_prob": 4.289289790904149e-06}, {"id": 536, "seek": 387900, "start": 3879.0, "end": 3892.0, "text": " So IOTA six is one, two, three, four, five, six, and then two, three of that is the matrix.", "tokens": [407, 286, 5068, 32, 2309, 307, 472, 11, 732, 11, 1045, 11, 1451, 11, 1732, 11, 2309, 11, 293, 550, 732, 11, 1045, 295, 300, 307, 264, 8141, 13], "temperature": 0.0, "avg_logprob": -0.22008970672009037, "compression_ratio": 1.450777202072539, "no_speech_prob": 1.5935769624775276e-05}, {"id": 537, "seek": 387900, "start": 3892.0, "end": 3896.0, "text": " All right. So let's.", "tokens": [1057, 558, 13, 407, 718, 311, 13], "temperature": 0.0, "avg_logprob": -0.22008970672009037, "compression_ratio": 1.450777202072539, "no_speech_prob": 1.5935769624775276e-05}, {"id": 538, "seek": 387900, "start": 3896.0, "end": 3899.0, "text": " Oh, did I close that?", "tokens": [876, 11, 630, 286, 1998, 300, 30], "temperature": 0.0, "avg_logprob": -0.22008970672009037, "compression_ratio": 1.450777202072539, "no_speech_prob": 1.5935769624775276e-05}, {"id": 539, "seek": 387900, "start": 3899.0, "end": 3900.0, "text": " I had a question.", "tokens": [286, 632, 257, 1168, 13], "temperature": 0.0, "avg_logprob": -0.22008970672009037, "compression_ratio": 1.450777202072539, "no_speech_prob": 1.5935769624775276e-05}, {"id": 540, "seek": 387900, "start": 3900.0, "end": 3901.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.22008970672009037, "compression_ratio": 1.450777202072539, "no_speech_prob": 1.5935769624775276e-05}, {"id": 541, "seek": 387900, "start": 3901.0, "end": 3906.0, "text": " With IOTA, like, you know how like in PyPythid we have like a start, stop and step.", "tokens": [2022, 286, 5068, 32, 11, 411, 11, 291, 458, 577, 411, 294, 9953, 47, 88, 392, 327, 321, 362, 411, 257, 722, 11, 1590, 293, 1823, 13], "temperature": 0.0, "avg_logprob": -0.22008970672009037, "compression_ratio": 1.450777202072539, "no_speech_prob": 1.5935769624775276e-05}, {"id": 542, "seek": 387900, "start": 3906.0, "end": 3908.0, "text": " Is there something similar with IOTA?", "tokens": [1119, 456, 746, 2531, 365, 286, 5068, 32, 30], "temperature": 0.0, "avg_logprob": -0.22008970672009037, "compression_ratio": 1.450777202072539, "no_speech_prob": 1.5935769624775276e-05}, {"id": 543, "seek": 390800, "start": 3908.0, "end": 3911.0, "text": " No, it's not. But you don't really need it, right?", "tokens": [883, 11, 309, 311, 406, 13, 583, 291, 500, 380, 534, 643, 309, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.12249462744768928, "compression_ratio": 1.5075757575757576, "no_speech_prob": 5.507095920620486e-06}, {"id": 544, "seek": 390800, "start": 3911.0, "end": 3918.0, "text": " Because like, let's say I want to step by two.", "tokens": [1436, 411, 11, 718, 311, 584, 286, 528, 281, 1823, 538, 732, 13], "temperature": 0.0, "avg_logprob": -0.12249462744768928, "compression_ratio": 1.5075757575757576, "no_speech_prob": 5.507095920620486e-06}, {"id": 545, "seek": 390800, "start": 3918.0, "end": 3921.0, "text": " That's easy enough, you know.", "tokens": [663, 311, 1858, 1547, 11, 291, 458, 13], "temperature": 0.0, "avg_logprob": -0.12249462744768928, "compression_ratio": 1.5075757575757576, "no_speech_prob": 5.507095920620486e-06}, {"id": 546, "seek": 390800, "start": 3921.0, "end": 3925.0, "text": " Or if I want to start one more than that.", "tokens": [1610, 498, 286, 528, 281, 722, 472, 544, 813, 300, 13], "temperature": 0.0, "avg_logprob": -0.12249462744768928, "compression_ratio": 1.5075757575757576, "no_speech_prob": 5.507095920620486e-06}, {"id": 547, "seek": 390800, "start": 3925.0, "end": 3928.0, "text": " That's easy enough, you know.", "tokens": [663, 311, 1858, 1547, 11, 291, 458, 13], "temperature": 0.0, "avg_logprob": -0.12249462744768928, "compression_ratio": 1.5075757575757576, "no_speech_prob": 5.507095920620486e-06}, {"id": 548, "seek": 392800, "start": 3928.0, "end": 3938.0, "text": " So I think that's why we don't really need it.", "tokens": [407, 286, 519, 300, 311, 983, 321, 500, 380, 534, 643, 309, 13], "temperature": 0.0, "avg_logprob": -0.15444629423079953, "compression_ratio": 0.9871794871794872, "no_speech_prob": 6.642989319516346e-06}, {"id": 549, "seek": 392800, "start": 3938.0, "end": 3945.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.15444629423079953, "compression_ratio": 0.9871794871794872, "no_speech_prob": 6.642989319516346e-06}, {"id": 550, "seek": 392800, "start": 3945.0, "end": 3948.0, "text": " Where is it? Here it is.", "tokens": [2305, 307, 309, 30, 1692, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.15444629423079953, "compression_ratio": 0.9871794871794872, "no_speech_prob": 6.642989319516346e-06}, {"id": 551, "seek": 394800, "start": 3948.0, "end": 3965.0, "text": " Okay. Monadic IOTA means index generator. Okay. So that's why it's called index generator because these are the indices of all of the locations in a two by three array.", "tokens": [1033, 13, 4713, 43341, 286, 5068, 32, 1355, 8186, 19265, 13, 1033, 13, 407, 300, 311, 983, 309, 311, 1219, 8186, 19265, 570, 613, 366, 264, 43840, 295, 439, 295, 264, 9253, 294, 257, 732, 538, 1045, 10225, 13], "temperature": 0.0, "avg_logprob": -0.16793901975764786, "compression_ratio": 1.3658536585365855, "no_speech_prob": 2.7107149435323663e-05}, {"id": 552, "seek": 396500, "start": 3965.0, "end": 3983.0, "text": " Monadic index generator. Okay.", "tokens": [4713, 43341, 8186, 19265, 13, 1033, 13], "temperature": 0.0, "avg_logprob": -0.20693016052246094, "compression_ratio": 1.24, "no_speech_prob": 2.857289473467972e-06}, {"id": 553, "seek": 396500, "start": 3983.0, "end": 3988.0, "text": " And then dyadic.", "tokens": [400, 550, 14584, 43341, 13], "temperature": 0.0, "avg_logprob": -0.20693016052246094, "compression_ratio": 1.24, "no_speech_prob": 2.857289473467972e-06}, {"id": 554, "seek": 396500, "start": 3988.0, "end": 3992.0, "text": " Okay. Let's just check the help index generators, see if we missed anything.", "tokens": [1033, 13, 961, 311, 445, 1520, 264, 854, 8186, 38662, 11, 536, 498, 321, 6721, 1340, 13], "temperature": 0.0, "avg_logprob": -0.20693016052246094, "compression_ratio": 1.24, "no_speech_prob": 2.857289473467972e-06}, {"id": 555, "seek": 399200, "start": 3992.0, "end": 4017.0, "text": " Okay, so R equals IOTA Y, you pass it a scalar or a vector of non-negative numbers and you get back a numeric array, the set of all possible coordinates, which is exactly what we thought.", "tokens": [1033, 11, 370, 497, 6915, 286, 5068, 32, 398, 11, 291, 1320, 309, 257, 39684, 420, 257, 8062, 295, 2107, 12, 28561, 1166, 3547, 293, 291, 483, 646, 257, 7866, 299, 10225, 11, 264, 992, 295, 439, 1944, 21056, 11, 597, 307, 2293, 437, 321, 1194, 13], "temperature": 0.0, "avg_logprob": -0.14443550857843138, "compression_ratio": 1.289655172413793, "no_speech_prob": 8.012728358153254e-06}, {"id": 556, "seek": 401700, "start": 4017.0, "end": 4028.0, "text": " Okay. Oh, so that's interesting. So I think one special thing is IOTA zero, which is another way of getting that.", "tokens": [1033, 13, 876, 11, 370, 300, 311, 1880, 13, 407, 286, 519, 472, 2121, 551, 307, 286, 5068, 32, 4018, 11, 597, 307, 1071, 636, 295, 1242, 300, 13], "temperature": 0.0, "avg_logprob": -0.1596843121098537, "compression_ratio": 1.2845528455284554, "no_speech_prob": 5.954836069577141e-06}, {"id": 557, "seek": 401700, "start": 4028.0, "end": 4031.0, "text": " The order thing.", "tokens": [440, 1668, 551, 13], "temperature": 0.0, "avg_logprob": -0.1596843121098537, "compression_ratio": 1.2845528455284554, "no_speech_prob": 5.954836069577141e-06}, {"id": 558, "seek": 401700, "start": 4031.0, "end": 4035.0, "text": " That's the empty set.", "tokens": [663, 311, 264, 6707, 992, 13], "temperature": 0.0, "avg_logprob": -0.1596843121098537, "compression_ratio": 1.2845528455284554, "no_speech_prob": 5.954836069577141e-06}, {"id": 559, "seek": 401700, "start": 4035.0, "end": 4037.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.1596843121098537, "compression_ratio": 1.2845528455284554, "no_speech_prob": 5.954836069577141e-06}, {"id": 560, "seek": 403700, "start": 4037.0, "end": 4047.0, "text": " So the dyadic version is index of.", "tokens": [407, 264, 14584, 43341, 3037, 307, 8186, 295, 13], "temperature": 0.0, "avg_logprob": -0.14804114235772026, "compression_ratio": 1.2058823529411764, "no_speech_prob": 9.570758265908808e-07}, {"id": 561, "seek": 403700, "start": 4047.0, "end": 4066.0, "text": " And this won't make any sense really until we've got strings. So let's do strings first.", "tokens": [400, 341, 1582, 380, 652, 604, 2020, 534, 1826, 321, 600, 658, 13985, 13, 407, 718, 311, 360, 13985, 700, 13], "temperature": 0.0, "avg_logprob": -0.14804114235772026, "compression_ratio": 1.2058823529411764, "no_speech_prob": 9.570758265908808e-07}, {"id": 562, "seek": 406600, "start": 4066.0, "end": 4086.0, "text": " So strings are basically vector arrays, sorry, character, characters and character vectors.", "tokens": [407, 13985, 366, 1936, 8062, 41011, 11, 2597, 11, 2517, 11, 4342, 293, 2517, 18875, 13], "temperature": 0.0, "avg_logprob": -0.20622993918026195, "compression_ratio": 1.6179775280898876, "no_speech_prob": 2.0261215922801057e-06}, {"id": 563, "seek": 406600, "start": 4086.0, "end": 4092.0, "text": " So that's a character vector and that's a character.", "tokens": [407, 300, 311, 257, 2517, 8062, 293, 300, 311, 257, 2517, 13], "temperature": 0.0, "avg_logprob": -0.20622993918026195, "compression_ratio": 1.6179775280898876, "no_speech_prob": 2.0261215922801057e-06}, {"id": 564, "seek": 409200, "start": 4092.0, "end": 4100.0, "text": " And so now we should be able to understand their example.", "tokens": [400, 370, 586, 321, 820, 312, 1075, 281, 1223, 641, 1365, 13], "temperature": 0.0, "avg_logprob": -0.07467720667521159, "compression_ratio": 1.6077348066298343, "no_speech_prob": 1.1544585731826373e-06}, {"id": 565, "seek": 409200, "start": 4100.0, "end": 4112.0, "text": " So I've noticed the examples when I click on like the name of like the dyadic version, for example, the examples tend to be more complicated than the one in the overall summary.", "tokens": [407, 286, 600, 5694, 264, 5110, 562, 286, 2052, 322, 411, 264, 1315, 295, 411, 264, 14584, 43341, 3037, 11, 337, 1365, 11, 264, 5110, 3928, 281, 312, 544, 6179, 813, 264, 472, 294, 264, 4787, 12691, 13], "temperature": 0.0, "avg_logprob": -0.07467720667521159, "compression_ratio": 1.6077348066298343, "no_speech_prob": 1.1544585731826373e-06}, {"id": 566, "seek": 409200, "start": 4112.0, "end": 4117.0, "text": " Just to warn you.", "tokens": [1449, 281, 12286, 291, 13], "temperature": 0.0, "avg_logprob": -0.07467720667521159, "compression_ratio": 1.6077348066298343, "no_speech_prob": 1.1544585731826373e-06}, {"id": 567, "seek": 409200, "start": 4117.0, "end": 4120.0, "text": " So I'm going to use the simpler ones.", "tokens": [407, 286, 478, 516, 281, 764, 264, 18587, 2306, 13], "temperature": 0.0, "avg_logprob": -0.07467720667521159, "compression_ratio": 1.6077348066298343, "no_speech_prob": 1.1544585731826373e-06}, {"id": 568, "seek": 412000, "start": 4120.0, "end": 4130.0, "text": " Okay, so index of takes this list, this array and tells you the index of each of these things.", "tokens": [1033, 11, 370, 8186, 295, 2516, 341, 1329, 11, 341, 10225, 293, 5112, 291, 264, 8186, 295, 1184, 295, 613, 721, 13], "temperature": 0.0, "avg_logprob": -0.19471551194975648, "compression_ratio": 1.526946107784431, "no_speech_prob": 5.771837550128112e-06}, {"id": 569, "seek": 412000, "start": 4130.0, "end": 4136.0, "text": " And so remember, this is a list of three letters. I believe it's identical.", "tokens": [400, 370, 1604, 11, 341, 307, 257, 1329, 295, 1045, 7825, 13, 286, 1697, 309, 311, 14800, 13], "temperature": 0.0, "avg_logprob": -0.19471551194975648, "compression_ratio": 1.526946107784431, "no_speech_prob": 5.771837550128112e-06}, {"id": 570, "seek": 412000, "start": 4136.0, "end": 4139.0, "text": " Let's see. Actually, it's true.", "tokens": [961, 311, 536, 13, 5135, 11, 309, 311, 2074, 13], "temperature": 0.0, "avg_logprob": -0.19471551194975648, "compression_ratio": 1.526946107784431, "no_speech_prob": 5.771837550128112e-06}, {"id": 571, "seek": 412000, "start": 4139.0, "end": 4143.0, "text": " Here's ACF.", "tokens": [1692, 311, 8157, 37, 13], "temperature": 0.0, "avg_logprob": -0.19471551194975648, "compression_ratio": 1.526946107784431, "no_speech_prob": 5.771837550128112e-06}, {"id": 572, "seek": 412000, "start": 4143.0, "end": 4149.0, "text": " And here's a list containing A, C and F.", "tokens": [400, 510, 311, 257, 1329, 19273, 316, 11, 383, 293, 479, 13], "temperature": 0.0, "avg_logprob": -0.19471551194975648, "compression_ratio": 1.526946107784431, "no_speech_prob": 5.771837550128112e-06}, {"id": 573, "seek": 414900, "start": 4149.0, "end": 4151.0, "text": " They're the same thing.", "tokens": [814, 434, 264, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.09184662724884463, "compression_ratio": 1.7037037037037037, "no_speech_prob": 1.2804688594769686e-05}, {"id": 574, "seek": 414900, "start": 4151.0, "end": 4157.0, "text": " So that's interesting.", "tokens": [407, 300, 311, 1880, 13], "temperature": 0.0, "avg_logprob": -0.09184662724884463, "compression_ratio": 1.7037037037037037, "no_speech_prob": 1.2804688594769686e-05}, {"id": 575, "seek": 414900, "start": 4157.0, "end": 4162.0, "text": " Yeah, so.", "tokens": [865, 11, 370, 13], "temperature": 0.0, "avg_logprob": -0.09184662724884463, "compression_ratio": 1.7037037037037037, "no_speech_prob": 1.2804688594769686e-05}, {"id": 576, "seek": 414900, "start": 4162.0, "end": 4166.0, "text": " So that is a single character.", "tokens": [407, 300, 307, 257, 2167, 2517, 13], "temperature": 0.0, "avg_logprob": -0.09184662724884463, "compression_ratio": 1.7037037037037037, "no_speech_prob": 1.2804688594769686e-05}, {"id": 577, "seek": 414900, "start": 4166.0, "end": 4177.0, "text": " This is a list of characters, and this is just a little syntactic shortcut for creating a list of characters and lists of characters appear with no space between them when it outputs them.", "tokens": [639, 307, 257, 1329, 295, 4342, 11, 293, 341, 307, 445, 257, 707, 23980, 19892, 24822, 337, 4084, 257, 1329, 295, 4342, 293, 14511, 295, 4342, 4204, 365, 572, 1901, 1296, 552, 562, 309, 23930, 552, 13], "temperature": 0.0, "avg_logprob": -0.09184662724884463, "compression_ratio": 1.7037037037037037, "no_speech_prob": 1.2804688594769686e-05}, {"id": 578, "seek": 417700, "start": 4177.0, "end": 4180.0, "text": " But they are still just lists of characters.", "tokens": [583, 436, 366, 920, 445, 14511, 295, 4342, 13], "temperature": 0.0, "avg_logprob": -0.18266757105437803, "compression_ratio": 1.4970414201183433, "no_speech_prob": 6.24067388343974e-06}, {"id": 579, "seek": 417700, "start": 4180.0, "end": 4192.0, "text": " I believe if you put a character on the right hand side that's not in the left, like the, it will give you one more than the total length.", "tokens": [286, 1697, 498, 291, 829, 257, 2517, 322, 264, 558, 1011, 1252, 300, 311, 406, 294, 264, 1411, 11, 411, 264, 11, 309, 486, 976, 291, 472, 544, 813, 264, 3217, 4641, 13], "temperature": 0.0, "avg_logprob": -0.18266757105437803, "compression_ratio": 1.4970414201183433, "no_speech_prob": 6.24067388343974e-06}, {"id": 580, "seek": 417700, "start": 4192.0, "end": 4194.0, "text": " Oh, good.", "tokens": [876, 11, 665, 13], "temperature": 0.0, "avg_logprob": -0.18266757105437803, "compression_ratio": 1.4970414201183433, "no_speech_prob": 6.24067388343974e-06}, {"id": 581, "seek": 417700, "start": 4194.0, "end": 4202.0, "text": " That 11 is there but it's not actually in the list. Thanks.", "tokens": [663, 2975, 307, 456, 457, 309, 311, 406, 767, 294, 264, 1329, 13, 2561, 13], "temperature": 0.0, "avg_logprob": -0.18266757105437803, "compression_ratio": 1.4970414201183433, "no_speech_prob": 6.24067388343974e-06}, {"id": 582, "seek": 420200, "start": 4202.0, "end": 4211.0, "text": " So then an interesting example they have is if what what if you've got a higher ranked matrix.", "tokens": [407, 550, 364, 1880, 1365, 436, 362, 307, 498, 437, 437, 498, 291, 600, 658, 257, 2946, 20197, 8141, 13], "temperature": 0.0, "avg_logprob": -0.12939641533828364, "compression_ratio": 1.609375, "no_speech_prob": 5.594279627985088e-06}, {"id": 583, "seek": 420200, "start": 4211.0, "end": 4219.0, "text": " So here they're saying, oh, let's assume I've already got a matrix with this in it, because they're assuming we don't know how to create one, we might get confused.", "tokens": [407, 510, 436, 434, 1566, 11, 1954, 11, 718, 311, 6552, 286, 600, 1217, 658, 257, 8141, 365, 341, 294, 309, 11, 570, 436, 434, 11926, 321, 500, 380, 458, 577, 281, 1884, 472, 11, 321, 1062, 483, 9019, 13], "temperature": 0.0, "avg_logprob": -0.12939641533828364, "compression_ratio": 1.609375, "no_speech_prob": 5.594279627985088e-06}, {"id": 584, "seek": 420200, "start": 4219.0, "end": 4222.0, "text": " So now that we do, let's go ahead and create one.", "tokens": [407, 586, 300, 321, 360, 11, 718, 311, 352, 2286, 293, 1884, 472, 13], "temperature": 0.0, "avg_logprob": -0.12939641533828364, "compression_ratio": 1.609375, "no_speech_prob": 5.594279627985088e-06}, {"id": 585, "seek": 422200, "start": 4222.0, "end": 4241.0, "text": " So create a matrix, and they used three rows of two columns of iota six.", "tokens": [407, 1884, 257, 8141, 11, 293, 436, 1143, 1045, 13241, 295, 732, 13766, 295, 741, 5377, 2309, 13], "temperature": 0.0, "avg_logprob": -0.29701348451467663, "compression_ratio": 1.013157894736842, "no_speech_prob": 1.428463656338863e-05}, {"id": 586, "seek": 422200, "start": 4241.0, "end": 4243.0, "text": " Row.", "tokens": [20309, 13], "temperature": 0.0, "avg_logprob": -0.29701348451467663, "compression_ratio": 1.013157894736842, "no_speech_prob": 1.428463656338863e-05}, {"id": 587, "seek": 424300, "start": 4243.0, "end": 4260.0, "text": " Okay. And so then they said given that what if we do this.", "tokens": [1033, 13, 400, 370, 550, 436, 848, 2212, 300, 437, 498, 321, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.1830318524287297, "compression_ratio": 1.1159420289855073, "no_speech_prob": 5.093624622531934e-06}, {"id": 588, "seek": 424300, "start": 4260.0, "end": 4266.0, "text": " What's that doing.", "tokens": [708, 311, 300, 884, 13], "temperature": 0.0, "avg_logprob": -0.1830318524287297, "compression_ratio": 1.1159420289855073, "no_speech_prob": 5.093624622531934e-06}, {"id": 589, "seek": 426600, "start": 4266.0, "end": 4273.0, "text": " The first occurrence of sub arrays in y, which match major cells of x.", "tokens": [440, 700, 36122, 295, 1422, 41011, 294, 288, 11, 597, 2995, 2563, 5438, 295, 2031, 13], "temperature": 0.0, "avg_logprob": -0.15564890741144569, "compression_ratio": 1.6844660194174756, "no_speech_prob": 4.157341663812986e-06}, {"id": 590, "seek": 426600, "start": 4273.0, "end": 4276.0, "text": " Okay, so this is an important concept.", "tokens": [1033, 11, 370, 341, 307, 364, 1021, 3410, 13], "temperature": 0.0, "avg_logprob": -0.15564890741144569, "compression_ratio": 1.6844660194174756, "no_speech_prob": 4.157341663812986e-06}, {"id": 591, "seek": 426600, "start": 4276.0, "end": 4285.0, "text": " I don't know the difference between a sub array and a major cell yet, but the idea is, okay, so why is the thing on the right, x is the thing on the left.", "tokens": [286, 500, 380, 458, 264, 2649, 1296, 257, 1422, 10225, 293, 257, 2563, 2815, 1939, 11, 457, 264, 1558, 307, 11, 1392, 11, 370, 983, 307, 264, 551, 322, 264, 558, 11, 2031, 307, 264, 551, 322, 264, 1411, 13], "temperature": 0.0, "avg_logprob": -0.15564890741144569, "compression_ratio": 1.6844660194174756, "no_speech_prob": 4.157341663812986e-06}, {"id": 592, "seek": 426600, "start": 4285.0, "end": 4287.0, "text": " Okay, so here's why.", "tokens": [1033, 11, 370, 510, 311, 983, 13], "temperature": 0.0, "avg_logprob": -0.15564890741144569, "compression_ratio": 1.6844660194174756, "no_speech_prob": 4.157341663812986e-06}, {"id": 593, "seek": 426600, "start": 4287.0, "end": 4290.0, "text": " So it's going to try to find this.", "tokens": [407, 309, 311, 516, 281, 853, 281, 915, 341, 13], "temperature": 0.0, "avg_logprob": -0.15564890741144569, "compression_ratio": 1.6844660194174756, "no_speech_prob": 4.157341663812986e-06}, {"id": 594, "seek": 426600, "start": 4290.0, "end": 4292.0, "text": " What do they call it this.", "tokens": [708, 360, 436, 818, 309, 341, 13], "temperature": 0.0, "avg_logprob": -0.15564890741144569, "compression_ratio": 1.6844660194174756, "no_speech_prob": 4.157341663812986e-06}, {"id": 595, "seek": 429200, "start": 4292.0, "end": 4305.0, "text": " Sub array in the major cells of x. So this they're going to treat this as a row and try to find which row contains that in it.", "tokens": [8511, 10225, 294, 264, 2563, 5438, 295, 2031, 13, 407, 341, 436, 434, 516, 281, 2387, 341, 382, 257, 5386, 293, 853, 281, 915, 597, 5386, 8306, 300, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.1905042827129364, "compression_ratio": 1.3641975308641976, "no_speech_prob": 1.5534930071225972e-06}, {"id": 596, "seek": 429200, "start": 4305.0, "end": 4308.0, "text": " And the answer is row three.", "tokens": [400, 264, 1867, 307, 5386, 1045, 13], "temperature": 0.0, "avg_logprob": -0.1905042827129364, "compression_ratio": 1.3641975308641976, "no_speech_prob": 1.5534930071225972e-06}, {"id": 597, "seek": 429200, "start": 4308.0, "end": 4315.0, "text": " Does it work if you put 135 or something, we'll find it, I guess.", "tokens": [4402, 309, 589, 498, 291, 829, 42652, 420, 746, 11, 321, 603, 915, 309, 11, 286, 2041, 13], "temperature": 0.0, "avg_logprob": -0.1905042827129364, "compression_ratio": 1.3641975308641976, "no_speech_prob": 1.5534930071225972e-06}, {"id": 598, "seek": 431500, "start": 4315.0, "end": 4322.0, "text": " It doesn't work. I'm pretty sure it's not going to because that's not considered a major cell. Yeah.", "tokens": [467, 1177, 380, 589, 13, 286, 478, 1238, 988, 309, 311, 406, 516, 281, 570, 300, 311, 406, 4888, 257, 2563, 2815, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.14503009502704328, "compression_ratio": 1.5031446540880504, "no_speech_prob": 8.800965588307008e-06}, {"id": 599, "seek": 431500, "start": 4322.0, "end": 4333.0, "text": " So the major cells of this so it's rows. So if you wanted to do this, you'd have to transpose it first. And there is a transpose operator.", "tokens": [407, 264, 2563, 5438, 295, 341, 370, 309, 311, 13241, 13, 407, 498, 291, 1415, 281, 360, 341, 11, 291, 1116, 362, 281, 25167, 309, 700, 13, 400, 456, 307, 257, 25167, 12973, 13], "temperature": 0.0, "avg_logprob": -0.14503009502704328, "compression_ratio": 1.5031446540880504, "no_speech_prob": 8.800965588307008e-06}, {"id": 600, "seek": 433300, "start": 4333.0, "end": 4345.0, "text": " So we should probably do a like, I think something that's missing in the dialogue docs is the simplest possible versions of things. So let's just say let's find the number three in the list.", "tokens": [407, 321, 820, 1391, 360, 257, 411, 11, 286, 519, 746, 300, 311, 5361, 294, 264, 10221, 45623, 307, 264, 22811, 1944, 9606, 295, 721, 13, 407, 718, 311, 445, 584, 718, 311, 915, 264, 1230, 1045, 294, 264, 1329, 13], "temperature": 0.0, "avg_logprob": -0.19032868217019475, "compression_ratio": 1.456140350877193, "no_speech_prob": 8.397931196668651e-06}, {"id": 601, "seek": 433300, "start": 4345.0, "end": 4350.0, "text": " One, three, six, five, four.", "tokens": [1485, 11, 1045, 11, 2309, 11, 1732, 11, 1451, 13], "temperature": 0.0, "avg_logprob": -0.19032868217019475, "compression_ratio": 1.456140350877193, "no_speech_prob": 8.397931196668651e-06}, {"id": 602, "seek": 433300, "start": 4350.0, "end": 4357.0, "text": " Why is, oh, wrong way around.", "tokens": [1545, 307, 11, 1954, 11, 2085, 636, 926, 13], "temperature": 0.0, "avg_logprob": -0.19032868217019475, "compression_ratio": 1.456140350877193, "no_speech_prob": 8.397931196668651e-06}, {"id": 603, "seek": 435700, "start": 4357.0, "end": 4369.0, "text": " In the list of this, find the number three.", "tokens": [682, 264, 1329, 295, 341, 11, 915, 264, 1230, 1045, 13], "temperature": 0.0, "avg_logprob": -0.18779282569885253, "compression_ratio": 1.1789473684210525, "no_speech_prob": 6.643136202910682e-06}, {"id": 604, "seek": 435700, "start": 4369.0, "end": 4371.0, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.18779282569885253, "compression_ratio": 1.1789473684210525, "no_speech_prob": 6.643136202910682e-06}, {"id": 605, "seek": 435700, "start": 4371.0, "end": 4377.0, "text": " Are we done.", "tokens": [2014, 321, 1096, 13], "temperature": 0.0, "avg_logprob": -0.18779282569885253, "compression_ratio": 1.1789473684210525, "no_speech_prob": 6.643136202910682e-06}, {"id": 606, "seek": 435700, "start": 4377.0, "end": 4380.0, "text": " So I think we made good progress. I think so too.", "tokens": [407, 286, 519, 321, 1027, 665, 4205, 13, 286, 519, 370, 886, 13], "temperature": 0.0, "avg_logprob": -0.18779282569885253, "compression_ratio": 1.1789473684210525, "no_speech_prob": 6.643136202910682e-06}, {"id": 607, "seek": 438000, "start": 4380.0, "end": 4390.0, "text": " Thanks gang.", "tokens": [2561, 10145, 13], "temperature": 0.0, "avg_logprob": -0.18771649945166805, "compression_ratio": 1.5158730158730158, "no_speech_prob": 4.222720235702582e-06}, {"id": 608, "seek": 438000, "start": 4390.0, "end": 4397.0, "text": " So an array can be any shape. So a vector is a rank one array.", "tokens": [407, 364, 10225, 393, 312, 604, 3909, 13, 407, 257, 8062, 307, 257, 6181, 472, 10225, 13], "temperature": 0.0, "avg_logprob": -0.18771649945166805, "compression_ratio": 1.5158730158730158, "no_speech_prob": 4.222720235702582e-06}, {"id": 609, "seek": 438000, "start": 4397.0, "end": 4400.0, "text": " A matrix is a rank two array.", "tokens": [316, 8141, 307, 257, 6181, 732, 10225, 13], "temperature": 0.0, "avg_logprob": -0.18771649945166805, "compression_ratio": 1.5158730158730158, "no_speech_prob": 4.222720235702582e-06}, {"id": 610, "seek": 438000, "start": 4400.0, "end": 4403.0, "text": " A scalar is a rank zero array.", "tokens": [316, 39684, 307, 257, 6181, 4018, 10225, 13], "temperature": 0.0, "avg_logprob": -0.18771649945166805, "compression_ratio": 1.5158730158730158, "no_speech_prob": 4.222720235702582e-06}, {"id": 611, "seek": 438000, "start": 4403.0, "end": 4407.0, "text": " I don't know what we call rank three arrays, but yeah.", "tokens": [286, 500, 380, 458, 437, 321, 818, 6181, 1045, 41011, 11, 457, 1338, 13], "temperature": 0.0, "avg_logprob": -0.18771649945166805, "compression_ratio": 1.5158730158730158, "no_speech_prob": 4.222720235702582e-06}, {"id": 612, "seek": 440700, "start": 4407.0, "end": 4413.0, "text": " It's the same as what pytorch causes tensor.", "tokens": [467, 311, 264, 912, 382, 437, 25878, 284, 339, 7700, 40863, 13], "temperature": 0.0, "avg_logprob": -0.16854001558743992, "compression_ratio": 1.452054794520548, "no_speech_prob": 2.282541390741244e-05}, {"id": 613, "seek": 440700, "start": 4413.0, "end": 4415.0, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.16854001558743992, "compression_ratio": 1.452054794520548, "no_speech_prob": 2.282541390741244e-05}, {"id": 614, "seek": 440700, "start": 4415.0, "end": 4420.0, "text": " Although one difference is a pytorch tensor can't contain tensors.", "tokens": [5780, 472, 2649, 307, 257, 25878, 284, 339, 40863, 393, 380, 5304, 10688, 830, 13], "temperature": 0.0, "avg_logprob": -0.16854001558743992, "compression_ratio": 1.452054794520548, "no_speech_prob": 2.282541390741244e-05}, {"id": 615, "seek": 440700, "start": 4420.0, "end": 4430.0, "text": " But I think a NumPy array can contain arrays. It's probably more like NumPy than pytorch.", "tokens": [583, 286, 519, 257, 22592, 47, 88, 10225, 393, 5304, 41011, 13, 467, 311, 1391, 544, 411, 22592, 47, 88, 813, 25878, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.16854001558743992, "compression_ratio": 1.452054794520548, "no_speech_prob": 2.282541390741244e-05}, {"id": 616, "seek": 443000, "start": 4430.0, "end": 4437.0, "text": " All right. Thanks everyone. That was cool.", "tokens": [1057, 558, 13, 2561, 1518, 13, 663, 390, 1627, 13], "temperature": 0.0, "avg_logprob": -0.27363718257230873, "compression_ratio": 0.9038461538461539, "no_speech_prob": 0.00016036858141887933}, {"id": 617, "seek": 443700, "start": 4437.0, "end": 4462.0, "text": " Thanks everybody.", "tokens": [50364, 2561, 2201, 13, 51614], "temperature": 0.0, "avg_logprob": -0.7169678211212158, "compression_ratio": 0.68, "no_speech_prob": 0.00016053824219852686}], "language": "en"}