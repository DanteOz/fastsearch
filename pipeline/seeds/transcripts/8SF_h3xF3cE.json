{"text": " Welcome to Practical Deep Learning for Coders Lesson 1. This is version 5 of this course and it's the first new one we've done in two years. So we've got a lot of cool things to cover. It's amazing how much has changed. Here is an XKCD from the end of 2015. Who here has seen XKCD comics before? Pretty much everybody, not surprising. So the basic joke here is I'll let you read it and then I'll come back to it. So it can be hard to tell what's easy and what's nearly impossible. And in 2015 or at the end of 2015 the idea of checking whether something is a photo of a bird was considered nearly impossible. So impossible it was the basic idea of a joke because everybody knows that that's nearly impossible. We're now going to build exactly that system for free in about two minutes. So let's build an Is it a Bird system? So we're going to use Python and so I'm going to run through this really quickly. You're not expected to run through it with me because we're going to come back to it. But let's go ahead and run that cell. So what we're doing is we're searching DuckDuckGo for images of bird photos and we're just going to grab one. And so here is the URL of the bird that we grabbed. Okay we'll download it. So there it is. So we've grabbed a bird and so okay we've now got something that can download pictures of birds. Now we're going to need to build a system that can recognize things that are birds versus things that aren't birds from photos. Now of course computers need numbers to work with but luckily images are made of numbers. I actually found this really nice website called Picspy where I can grab a bird and if I wiggle over it, that's PIC, that's BIC, you'll see here that that part of the BIC was 251 brightness of red, 48 of green and 21 of blue. So that's RGB. And so you can see as I wave around those colours are changing, those numbers. And so this picture, the thing that we recognise as a picture is actually 256 by 171 by 3 numbers between 0 and 255 representing the amount of red, green and blue on each pixel. So that's going to be an input to our program that's going to try and figure out whether this is a picture of a bird or not. Okay, so let's go ahead and run this cell which is going to go through and I needed bird and non-bird but you can't really search Google images or dot dot go images for not a bird. This doesn't work that way. So I just decided to use forest. I thought okay pictures of forest versus pictures of bird sounds like a good starting point. So I go through each of forest and bird and I search for forest photo and bird photo, download images and then resize them to be no bigger than 400 pixels on a side just because we don't need particularly big ones. It takes a surprisingly large amount of time just for a computer to open an image. Okay, so we've now got 200 of each. I find when I download images I often get a few broken ones and if you try and train a model with broken images it will not work. So here's something which just verifies each image and unlinks so deletes the ones that don't work. Okay, so now we can create what's called a data block. So after I run this cell you'll see that I've basically I'll go through the details of this later but a data block gives fast AI the library all the information it needs to create a computer vision model and so in this case we're basically telling it get all the image files that we just downloaded and then we say show me a few up to six and let's see. So we've got some birds, forest, bird, bird, forest. So one of the nice things about doing computer vision models is it's really easy to check your data because you can just look at it which is not the case for a lot of kinds of models. Okay, so we've now downloaded 200 pictures of birds, 200 pictures of forests. So we'll now press run and this model is actually running on my laptop. So this is not using a vast data center, it's running on my presentation laptop and it's doing it at the same time as my laptop is streaming video which is possibly a bad idea. And so what it's going to do is it's going to run through every photo out of those 400 and for the ones that are forest it's going to learn a bit more about what forest looks like and for the ones that are bird it'll learn a bit more about what bird looks like. So overall it took under 30 seconds and believe it or not that's enough to finish doing the thing which was in that XKCD comic. Let's check. By passing in that bird that we downloaded at the start, this is a bird, probability it's a bird, one. Rounded to the nearest four decimal places. So something pretty extraordinary has happened since late 2015 which is literally something that has gone from so impossible, it's a joke, to so easy that I can run it on my laptop computer in I don't know how long it was, about two minutes. And so hopefully that gives you a sense that creating really interesting, real working programs with deep learning is something that it doesn't take a lot of code, didn't take any math, didn't take more than my laptop computer, it's pretty accessible in fact. So that's really what we're going to be learning about over the next seven weeks. So where have we got to now with deep learning? Well it moves so fast that even in the last few weeks we've taken it up another notch as a community. You might have seen that something called Dali 2 has been released which uses deep learning to generate new pictures and I thought this was an amazing thing that this guy Nick did where he took his friends Twitter bios and typed them into the Dali 2 input and it generated these pictures. So this guy's he typed in commitments, empathetic, psychedelic, philosophical and it generated these pictures. So I'll just show you a few of these, I'll let you read them. I love that. That one's pretty amazing I reckon actually. I love this, Happy Sisyphus has actually got a happy rock to move around. So this is like, yeah I don't know, when I look at these I still get pretty blown away that this is a computer algorithm using nothing but this text input to generate these arbitrary pictures in this case of fairly complex and creative things. So the guy who made those points out, this is like, he spends about two minutes or so creating each of these, like he tries a few different prompts and he tries a few different pictures and so he's given an example here of like when he types something into the system like here's an example of like 10 different things he gets back when he puts in expressive painting of a man shining rays of justice and transparency on a blue bird Twitter logo. So it's not just Dali 2 to be clear, there's a lot of different systems doing something like this now, there's something called Mid Journey, which this Twitter account posted a female scientist with a laptop writing code in a symbolic, meaningful and vibrant style. This one here is an HD photo of a rare psychedelic pink elephant and this one I think is the second one here. I never know how to actually pronounce this. This one's pretty cool, a blind bat with big sunglasses holding a walking stick in its hand. And so when actual artists, you know, so this for example, this guy said he knows nothing about art, you know, he's got no artistic talent, it's just something you know he threw together. This guy is an artist who actually writes his own software based on deep learning and spends you know, months on building stuff and as you can see, you can really take it to the next level. It's been really great actually to see how a lot of fast AI alumni with backgrounds as artists have gone on to bring deep learning and art together and it's a very exciting direction. And it's not just images to be clear, you know, another interesting thing that's popped up in the last couple of weeks is Google's Pathways Language Model, which can take any arbitrary English as text question and can create an answer which not only answers the question but also explains its thinking, whatever it means for a language model to be thinking. One of the ones I found pretty amazing was that it can explain a joke. I'll let you read this. So this is actually a joke that probably needs explanations for anybody who's not familiar with TPUs. So this model just took the text as input and created this text as output. And so you can see, you know, again, deep learning models doing things which I think very few, if any of us would have believed would be maybe possible to do by computers even in our lifetime. This means that there is a lot of practical and ethical considerations. We will touch on them during this course but can't possibly hope to do them justice. So I would certainly encourage you to check out ethics.fast.ai to see our whole data ethics course taught by my co-founder Dr. Rachel Thomas. Which goes into these issues in a lot more detail. All right. So as well as being an AI researcher at the University of Queensland and Fast.ai, I am also a homeschooling primary school teacher. And for that reason, I study education a lot. And one of the people who I love in education is a guy named Dylan Williams. And he has this great approach in his classrooms of figuring out how his students are getting along, which is to put a coloured cup on their desk. Green to mean that they're doing fine. Yellow cup to mean I'm not quite sure and a red cup to mean I have no idea what's going on. Now since most of you are watching this remotely, I can't look at your cups and I don't think anybody bought coloured cups with them today. So instead, we have an online version of this. So what I want you to do is go to cups.fast.ai slash fast. That's cups.fast.ai slash fast. And don't do this if you're like a fast AI expert who's done the course five times because if you're following along, that doesn't really mean much. Obviously, this is really for people who are, you know, not already fast AI experts. And so click one of these coloured buttons. And what I will do is I will go to the teacher version and see what buttons you're pressing. Alright, so so far people are feeling we're not going too fast on the whole. We've got one, one brief read. Okay. So, hey, Nick, this this URL is the same thing with teacher on the end. If you can you keep that open as well and let me know if it suddenly gets covered in red. If you are somebody who's read, I'm not going to come to you now because there's not enough of you to stop the class. So it's up to you to ask on the forum or on the YouTube live chat. And there's a lot of folks, luckily, who will be able to help you. All right. I wanted to do a big shout out to Radek. Radek created cups.fast.ai for me. I said to him last week, I need a way of seeing coloured cups on the internet. And he wrote it in one evening. And I also wanted to shout out that Radek just announced today that he got a job at Nvidia AI. And I wanted to say, you know, that fast AI alumni around the world very, very frequently, like every day or two, email me to say that they've got their dream job. And yeah, if you're looking for inspiration of how to get into the field, I couldn't recommend nothing. Nothing would be better than checking out Radek's work. And he's actually written a book about his journey. He's got a lot of tips in particular about how to take advantage of fast AI, make the most of these lessons. And so I would certainly say check that out as well. And if you're here live, he's one of our TAs as well. So you can say hello to him afterwards. He looks exactly like this picture here. So I mentioned I spent a lot of time studying education, both for my homeschooling duties and also for my courses. And you'll see that there's something a bit different, very different about this course, which is that we started by training a model. We didn't start by doing a in-depth review of linear algebra and calculus. That's because two of my favorite writers and researchers on education, Paul Lockhart and David Perkins, and many others talk about how much better people learn when they learn with a context in place. So the way we learn math at school where we do like counting and then adding and then fractions and then decimals and then blah, blah, blah. And 15 years later, we start doing the really interesting stuff at grad school. That is not the way most people learn effectively. The way most people learn effectively is from the way we teach sports, for example, where we show you a whole game of sports. We show you how much fun it is. You go and start playing sports, simple versions of them. You're not very good, right? And then you gradually put more and more pieces together. So that's how we do deep learning. You will go into as much depth as the most sophisticated, technically detailed classes you'll find later. Right? But first, you'll learn to be very, very good at actually building and deploying models. And you will learn why and how things work as you need to, to get to the next level. For those of you that have spent a lot of time in technical education, like if you've done a PhD or something, will find this deeply uncomfortable because you'll be wanting to understand why everything works from the start. Just do your best to go along with it. Those of you who haven't will find this very natural. Oh, and this is Dylan Williams, who I mentioned before, the guy who came up with the really cool cut scene. There'll be a lot of tricks that have come out of the educational research literature scattered through this course. On the whole, I won't call them out. They'll just be there. But maybe from time to time, we'll talk about them. All right. So before we start talking about how we actually built that model and how it works, I guess I should convince you that I'm worth listening to. I'll try to do that reasonably quickly because I don't like tooting my own horn, but I know it's important. So the first thing I mentioned about me is that me and my friend, Syong Vang, wrote this extremely popular book, Deep Learning for Coders, and that book is what this course is quite heavily based on. We're not going to be using any material from the book directly, and you might be surprised by that. But the reason actually is that the educational research literature shows that people learn things best when they hear the same thing in multiple different ways. So I want you to read the book, and you'll also see the same information presented in a different way in these videos. So one of the bits of homework after each lesson will be to read a chapter of the book. A lot of people like the book. Peter Norvig, director of research, loves the book. In fact, this one's here. One of the best sources for a program to become proficient in deep learning. Topol loves the book, Hal Varian, emeritus professor at Berkeley, chief economist at Google likes the book. Jerome Pesenti, who is the head of AI at Facebook, likes the book. A lot of people like the book. So hopefully you'll find that you like this material as well. I've spent about 30 years of my life working in and around machine learning, including building a number of companies that relied on it and became the highest ranked competitor in the world on Kaggle in machine learning competitions. My company in Lidic, which I founded, was the first company to specialize in deep learning for medicine. And MIT voted at one of the 50 smartest companies in 2016, just above Facebook and SpaceX. I started Fast AI with Rachel Thomas, and that was quite a few years ago now, but it's had a big impact on the world already. Including work we've done with our students has been globally recognized, such as our Wind in the Dawn Bench competition, which showed how we could train big neural networks faster than anybody in the world and cheaper than anybody in the world. And so that was a really big step in 2018, which actually made a big difference. Google started using our special approaches in their models. Nvidia started optimizing their stuff using our approaches, so it made quite a big difference there. I'm the inventor of the ULM fit algorithm, which according to the Transformers book was one of the two key foundations behind the modern NLP revolution. This is the paper here. And actually, interesting point about that, it was actually invented for a Fast AI course. So the first time it appeared was not actually in the journal, it was actually in lesson four of the course, I think the 2016 course, if I remember correctly. And most importantly, of course, I've been teaching this course since version one. And this is actually, I think this is the very first version of it, which even back then was getting HPR's attention. A lot of people have been watching the course and it's been really widely used. YouTube doesn't show likes anymore, so I have to show you our likes for you. It's been amazing to see how many alumni have gone from this to really doing amazing things. So for example, Andre Capati told me that Tesla, I think he said pretty much everybody who joins Tesla in AI is meant to do this course. I believe at OpenAI, they told me that all the residents joining there first do this course. So this course is really widely used in industry and research for people and they have a lot of success. Okay, so there's a bit of brief information about why you should hopefully keep going with this. All right, so let's get back to what's happened here. Why are we able to create a bird recognizer in a minute or two? And why couldn't we do it before? So I'm going to go back to 2012. And in 2012, this was how image recognition was done. This is the computational pathologist. It was a project done at Stanford. Very successful, very famous project that was looking at the five-year survival of breast cancer patients by looking at their histopathology images slides. So this is what I would call a classic machine learning approach. And I spoke to the senior author of this, Daphne Koller, and I asked her why they didn't use deep learning and she said, well, it just wasn't really on the radar at that point. So this is like a pre deep learning approach. And so the way they did this was they got a big team of mathematicians and computer scientists and pathologists and so forth to get together and build these ideas for features like relationships between epithelial nuclear neighbors. Thousands and thousands actually they created of features and each one required a lot of expertise from a cross-disciplinary group of experts at Stanford. So this project took years and a lot of people and a lot of code and a lot of math. And then once they had all these features, they then fed them into a machine learning model in this case, logistic regression to predict survival. As I say, it was very successful, right? But it's not something that I could create for you in a minute at the start of a course. The difference with neural networks is neural networks don't require us to build these features. They build them for us. And so what actually happened was in I think it was 2015, Matt Zyler and Rob Fergus took a trained neural network and they looked inside it to see what it had learned. So we don't give it features. We ask it to learn features. So when Zyler and Fergus looked inside a neural network, they looked at the actual the weights in the model and they drew a picture of them. And this was nine of the sets of weights they found. And this set of weights, for example, finds diagonal edges. This set of weights finds yellow to blue gradients. This set of weights finds red to green gradients and so forth, right? And then down here are examples of some bits of photos which closely matched, for example, this feature detector. And deep learning is deep because we can then take these features and combine them to create more advanced features. So these are some layer two features. So there's a feature, for example, that finds corners and a feature that finds curves and a feature that finds circles. And here are some examples of bits of pictures that the circle finder found. And so remember, with a neural net, which is the basic function used in deep learning, we don't have to hand code any of these or come up with any of these ideas. You just start with actually a random neural network and you feed it examples and you have it learn to recognize things. And it turns out that these are the things that it creates for itself. So you can then combine these features. And when you combine these features, it creates a feature detector, for example, that finds kind of repeating geometric shapes. And it creates a feature detector, for example, that finds kind of really little things which it looks like is finding the edges of flowers. And this feature detector here seems to be finding words. And so the deeper you get, the more sophisticated the features it can find are. And so you can imagine that trying to code these things by hand would be insanely difficult and you wouldn't know even what to encode by hand. So what we're going to learn is how neural networks do this automatically. But this is the key difference of why we can now do things that previously we just didn't even conceive of as possible, because now we don't have to hand code the features we look for. They can all be learned. Now it's important to recognize we're going to be spending some time learning about building image based algorithms. And image based algorithms are not just for images. And in fact, this is going to be a general theme. We're going to show you some foundational techniques. But with creativity, these foundational techniques can be used very widely. So for example, an image recognizer can also be used to classify sounds. So this was an example from one of our students who posted on the forum and said for their project they would try classifying sounds. And so they basically took sounds and created pictures from their waveforms and then they used an image recognizer on that. And they got a state of the art result, by the way. Another of our students on the forum said that they did something very similar to take time series and turn them into pictures and then use image classifiers. Another of our students created pictures from mouse movements from users of a computer system. So the clicks became dots and the movements became lines and the speed of the movement became colors and then use that to create an image classifier. So you can see with some creativity, there's a lot of things you can do with images. There's something else I wanted to point out, which is that as you saw, when we trained a real working bird-recognized image model, we didn't need lots of math. There wasn't any. We didn't need lots of data. We had 200 pictures. We didn't need lots of expensive computers. We just used my laptop. This is generally the case for the vast majority of deep learning that you'll need in real life. There will be some math that pops up during this course, but we will teach it to you as needed or we'll refer you to external resources as needed. But it will just be the little bits that you actually need. The myth that deep learning needs lots of data I think is mainly passed along by big companies that want to sell you computers to store lots of data and to process it. We find that most real world projects don't need extraordinary amounts of data at all. As you'll see, there's actually a lot of fantastic places you can do state of the art work for free nowadays, which is great news. One of the key reasons for this is because of something called transfer learning, which we'll be learning about a lot during this course. It's something which very few people are aware of. In this course, we'll be using PyTorch. For those of you who are not particularly close to the deep learning world, you might have heard of TensorFlow and not of PyTorch. You might be surprised to hear that TensorFlow has been dying in popularity in recent years and PyTorch is actually growing rapidly. Research repositories amongst the top papers, TensorFlow is a tiny minority now compared to PyTorch. This is also great research that's come out from Ryan O'Connor. He also discovered that the majority of people that were doing TensorFlow in 2018, researchers, the majority have now shifted to PyTorch. I mention this because what people use in research is a very strong leading indicator of what's going to happen in industry because this is where all the new algorithms are going to come out. This is where all the papers are going to be written about. It's going to be increasingly difficult to use TensorFlow. We've been using PyTorch since before it came out before the initial release because we knew just from technical fundamentals it was far better. This course has been using PyTorch for a long time. I will say, however, that PyTorch requires a lot of hairy code for relatively simple things. This is the code required to implement a particular optimizer called AdamW in plain PyTorch. I actually copied this code from the PyTorch repository. As you can see, there's a lot of it. This gray bit here is the code required to do the same thing with FastAI. FastAI is a library we built on top of PyTorch. This huge difference is not because PyTorch is bad. It's because PyTorch is designed to be a strong foundation to build things on top of like FastAI. When you use FastAI, the library, you get access to all the power of PyTorch as well. But you shouldn't be writing all this code if you only need to write this much code. The problem of writing lots of code is that that's lots of things to make mistakes with, lots of things to not have best practices in, lots of things to maintain. In general, we found, particularly with deep learning, less code is better. Particularly with FastAI, the code you don't write is code that we've basically found best practices for you. When you use the code that we've provided for you, you'll generally find you get better results. FastAI has been a really popular library and it's very widely used in industry, in academia, and in teaching. As we go through this course, we'll be seeing more and more pure PyTorch as we get deeper and deeper underneath to see exactly how things work. The FastAI library just won the 2020 Best Paper Award, or the paper about it, in information. So again, you can see it's a very well regarded library. Okay, so, okay, we're still green. That's good. So you may have noticed something interesting, which is that I'm actually running code in these slides. That's because these slides are not in PowerPoint. These slides are in Jupyter Notebook. Jupyter Notebook is the environment in which you will be doing most of your computing. It's a web-based application, which is extremely popular and widely used in industry and in academia and in teaching, and is a very, very, very powerful way to experiment and explore and build. Nowadays, I would say most people, at least most students, run Jupyter Notebooks not on their own computers, particularly for data science, but on a cloud server, of which there's quite a few. And as I mentioned earlier, if you go to course.fast.ai, you can see how to use various different cloud servers. One I'm going to show an example of is Kaggle. So Kaggle doesn't just have competitions, but it also has a cloud notebook server. And I've got quite a few examples there. So let me give you a quick example of how we use Jupyter Notebooks to build stuff, to experiment, to explore. So on Kaggle, if you start with somebody else's notebook, so why don't you start with this one, Jupyter Notebook 101. If it's your own notebook, you'll see a button called edit. If it's somebody else's, that button will say copy and edit. If you use somebody's notebook that you like, make sure you click the upvote button to encourage them and to help other people find it before you go ahead and copy and edit. And once we're in edit mode, we can now use this notebook. And to use it, we can type in any arbitrary expression in Python and click run. And the very first time we do that, it says session is starting. It's basically launching a virtual computer for us to run our code. This is all free. In a sense, it's like the world's most powerful calculator. It's a calculator where you have all of the capabilities of the world's, I think, most popular programming language, certainly it and JavaScript would be the top two, directly at your disposal. So Python does know how to do one plus one, and so you can see here it spits out the answer. I hate clicking. I always use keyboard shortcuts. So instead of clicking this little arrow, you just press shift enter to do the same thing. But as you can see, there's not just calculations here. There's also pros. And so Jupyter Notebooks are great for explaining to you the version of yourself in six months time what on earth you are doing or to your coworkers or to people in the open source community, what are people you're blogging for, etc. And so you just type pros. And as you can see, when we create a new cell, you can create a code cell, which is a cell that lets you type calculations or a markdown cell, which is a cell that lets you create pros. And the pros use this formatting in a little mini language called markdown. There's so many tutorials around, I won't explain it to you. But it lets you do things like links and so forth. So I'll let you follow through the tutorial in your own time because it really explains to you what to do. One thing to point out is that sometimes you'll see me use cells with an exclamation mark at the start. That's not Python. That's a bash shell command. Okay. So that's what the exclamation mark means. As you can see, you can put images into notebooks. And so the image I popped in here was the one showing that Jupiter won the 2017 software system award, which is pretty much the biggest award there is for this kind of software. Okay. So that's the basic idea of how we use notebooks. So let's have a look at how we do our bird or not bird model. One thing I always like to do when I'm using something like Colab or Kaggle cloud platforms that I'm not controlling is make sure that I'm using the most recent version of any software. So my first cell here is exclamation mark pip install minus U. That means upgrade. Q for quiet. Fast AI. So that makes sure that we have the latest version of fast AI. And if you always have that at the start of your notebooks, you're never going to have those awkward foreign threads where you say, why isn't this working? And somebody says to you, oh, you're using an old version of some software. So you'll see here this notebook is the exact thing that I was showing you at the start of this lesson. So if you haven't done much Python, you might be surprised about how little code there is here. And so Python is a concise but not too concise language. You'll see that there's less boilerplate than some other languages you might be familiar with. And I'm also taking advantage of a lot of libraries. So fast AI provides a lot of convenient things for you. So to use an external library, we use import. To import a symbol from a library. Fast AI has a lot of libraries we provide. They generally start with fast something. So for example, to make it easy to download a URL, fast download has download URL. To make it easy to create a thumbnail, we have image to thumb and so forth. So I always like to view as I'm building a model, my data at every step. So that's why I first of all grab one bird and then I grab one forest photo and I look at them to make sure they look reasonable. And once I think, okay, they look okay, then I go ahead and download. And so you can see fast AI has a download images where you just provide a list of URLs. So that's how easy it is. And it does that in parallel. So it does that surprisingly quickly. Another fast AI thing I'm using here is resize images. You generally will find that for computer vision algorithms, you don't need particularly big images. So I'm resizing these to a maximum size length of 400. Because it's actually much faster. Because GPUs are so quick, for big images, most of the time can be taken up just opening it. The neural net itself often takes less time. So that's another good reason to make them smaller. Okay. So the main thing I wanted to tell you about was this data block command. So the data block is the key thing that you're going to want to get familiar with as deep learning practitioners at the start of your journey. Because the main thing you're going to be trying to figure out is how do I get this data into my model. Now that might surprise you. You might be thinking we should be spending all of our time talking about neural network architectures and matrix multiplication and gradients and stuff like that. The truth is, very little of that comes up in practice. And the reason is that at this point, the deep learning community has found a reasonably small number of types of model that work for nearly all the main applications you'll need. And fast AI will create the right type of model for you the vast majority of the time. So all of that stuff about tweaking neural network architectures and stuff, I mean, we'll get to it eventually in this course. But you might be surprised to discover that it almost never comes up kind of like if you ever did like a computer science course or something and they spent all this time on the details of compilers and operating systems and then you get to the real world and you never use it again. So this course is called practical deep learning. And so we're going to focus on the stuff that is practically important. Okay. So our images are finished downloading. And two of them were broken. So we just deleted them. Another thing you'll note, by the way, if you're a keen software engineer is I tend to use a lot of functional style in my programs, I find for kind of the kind of work I do that a functional style works very well. If you're, you know, a lot of people in Python are less familiar with that it's more maybe comes more from other things. So yeah, that's why you'll see me using stuff like math and stuff quite a lot. Alright, so a data block is the key thing you need to know about if you're going to know how to use different kinds of data sets. And so these are all of the things basically that you'll be providing. And so what we did when we designed the data block was we actually looked and said, okay, over hundreds of projects, what are all the things that change from project to project to get the data into the right shape? And we realized we could basically split it down into these five things. So the first thing that we tell fast AI is what kind of input do we have? And so then so there are lots of blocks in fast AI for different kinds of inputs. So he said, Oh, the input is an image. What kind of output is there? What kind of label the outputs are category. That means it's one of a number of possibilities. So that's enough for fast AI to know what kind of model to build for you. So what are the items in this model? What am I actually going to be looking at to look to train from? This is a function. In fact, you might have noticed if you were looking carefully that we use this function here. It's a function which returns a list of all of the image files in a path based on extension. So every time it's going to try and find out what things to train from, it's going to use that function. In this case, we'll get a list of image files. Now something we'll talk about shortly is that it's critical that you put aside some data for testing the accuracy of your model. That's called a validation set. It's so critical that fast AI won't let you train a model without one. So you actually have to tell it how to create a validation set, how to set aside some data. And in this case, we say randomly set aside 20% of the data. Okay. Next question then you have to tell fast AI is how do we know the correct label of a photo? How do we know if it's a bird photo or a forest photo? And this is another function. And this function simply returns the parent folder of a path. And so in this case, we saved our images into either forest or bird. So that's where the labels are going to come from. And then finally, most computer vision architectures need all of your inputs as you train to be the same size. So item transforms are all of the bits of code that are going to run on every item, on every image in this case. And we're saying, okay, we want you to resize each of them to being 192 by 192 pixels. There's two ways you can resize. You can either crop out a piece in the middle, or you can squish it. And so we're saying squish it. So that's the data block. That's all that you need. And from there, we create an important class called data loaders. Data loaders are the things that actually PyTorch iterates through to grab a bunch of your data at a time. The way it can do it so fast is by using a GPU, which is something that can do thousands of things at the same time. And that means it needs thousands of things to do at the same time. So a data loader will feed the training algorithm with a bunch of your images at once. In fact, we don't call it a bunch. We call it a batch or a mini batch. And so when we say show batch, that's actually a very specific word in deep learning. It's saying show me an example of a batch of data that you would be passing into the model. And so you can see show batch gives you tells you two things, the input, which is the picture and the label. And remember the label came by calling that function. So when you come to building your own models, you'll be wanting to know what kind of splitters are there and what kinds of labeling functions are there and so forth. You'll be wanting to know what kind of labeling functions are there and what kind of splitters are there and so forth. And so docs.fast.ai is where you go to get that information. And the best place to go is the tutorials. So for example, here's a whole data block tutorial and there's lots and lots of examples. So hopefully you can start out by finding something that's similar to what you want to do and see how we did it. But then of course, there's also the underlying API information. So here's data blocks. So at the end of all this, we've got an object called DLs. It stands for data loaders. And that contains iterators that PyTorch can run through to grab batches of randomly split data, training images to train the model with and validation images to test the model with. So now we need a model. The critical concept here in fast.ai is called a learner. A learner is something which combines a model, which is that is the actual neural network function we'll be training and the data we use to train it with. And that's why you have to pass in two things. The data, which is the data loader's object, and a model. And so the model is going to be the actual neural network function that you want to pass in. And as I said, there's a relatively small number that basically work for the vast majority of things you do. If you pass in just a bare symbol like this, it's going to be one of fast.ai's built-in models. But what's particularly interesting is that we integrate a wonderful library by Ross Whiteman called TIM, the PyTorch image models, which is the largest collection of computer vision models in the world. And at this point, fast.ai is the first and only framework to integrate this. So you can use any one of the PyTorch image models. And one of our students, Amanda Mora, was kind enough to create this fantastic documentation where you can find out all about the different models. And if we click on here, you can get lots and lots of information about all the different models that Ross has provided. Having said that, the model family called ResNet are probably going to be fine for nearly all the things you want to do. But it is fun to try different models out, so you can type in any string here to use any one of those other models. Okay, so if we run that, let's see what happens. Okay, so this is interesting. So when I ran this, so remember on Kaggle, it's creating a new virtual computer for us. So it doesn't really have anything ready to go. So when I ran this, the first thing it did was it said downloading ResNet 18.pth. What's that? Well, the reason we can do this so fast is because somebody else has already trained this model to recognize over 1 million images of over 1000 different types, something called the ImageNet data set. And they then made those weights available, those parameters available on the internet for anybody to download. By default, on Fast.ai, when you asked for a model, we will download those weights for you so that you don't start with a random network that can't do anything. You actually start with a network that can do an awful lot. And so then something that Fast.ai has that's unique is this fine tune method, which what it does is it takes those pre-trained weights we downloaded for you and it adjusts them in a really carefully controlled way to just teach the model the differences between your data set and what it was originally trained for. That's called fine tuning, hence the name. So that's why you'll see this downloading happen first. And so as you can see at the end of it, this is the error rate here, after a few seconds, it's 100% accurate. So we now have a learner and this learner has been started with a pre-trained model that's been fine tuned for the purpose of recognizing bird pictures from forest pictures. So you can now call dot predict on it and dot predict you pass in an image. And so this is how you would then deploy your model. So in the code you have, whatever it needs to do, so in this particular case, this person had some reason that he needs the app to check whether they're in a national park and whether it's a photo of a bird. So at the bit where they need to know if it's a photo of a bird, it would just call this one line of code, learn dot predict. And so that's going to return whether it's a bird or not as a string, whether it's a bird or not as an integer, and the probability that it's a non-bird or a bird. And so that's why we can print these things out. Okay, so that's how we can create a computer vision model. What about other kinds of models? There's a lot more in the world than just computer vision, a lot more than just image recognition. Well, even within computer vision, there's a lot more than just image recognition. For example, there's segmentation. So segmentation, maybe the best way to explain segmentation is to show you the result of this model. Segmentation is where we take photos, in this case of road scenes, and we color in every pixel according to what is it. So in this case, we've got brown as cars, blue as fences, I guess, red as buildings, or brown. And so on the left here, some photos that somebody has already gone through and classified every pixel of every one of these images according to what that pixel is a pixel of. And then on the right is what our model is guessing. And as you can see, it's getting a lot of the pixels correct and some of them is getting wrong. It's actually amazing how many is getting correct because this particular model I trained in about 20 seconds using a tiny, tiny, tiny amount of data. So again, you would think this would be a particularly challenging problem to solve, but it took about 20 seconds of training to solve it. Not amazingly well, but pretty well. If I trained it for another two minutes, it'd probably be close to perfect. So this is called segmentation. Now you'll see that there's very, very little data required and sorry, very little code required and the steps are actually going to look quite familiar. In fact, in this case, we're using an even simpler approach. Earlier on, we used data blocks. Data blocks are a kind of intermediate level, very flexible approach that you can take to handling almost any kind of data. But for the kinds of data that occur a lot, you can use these special data loaders classes which kind of lets you use even less code. So in this case, to create data loaders for segmentation, you can just say, okay, I'm going to pass you in a function for labeling. And you can see here it's got pretty similar things that we pass in to what we passed in for data blocks before. So our file names is get image files again and then our label function is something that grabs this path and the codes. So the labels for the segmentation, sorry, the codes. So like what does each code mean is going to be this text file. But you can see the basic information we're providing is very, very similar regardless of whether we're doing segmentation or object recognition. And then the next steps are pretty much the same. We create a learner for segmentation. We've got a unit learner which we'll learn about later. And then again, we call fine tune. So that is it. And that's how we create a segmentation model. What about stepping away from computer vision? So perhaps the most widely used kind of model used in industry is tabular analysis. So taking things like spreadsheets and database tables and trying to predict columns of those. So in tabular analysis, it really looks very similar to what we've seen already. We grab some data and you'll see when I call this untar data, this is the thing in fast AI that downloads some data and decompresses it for you. And there's a whole lot of URLs provided by fast AI for all the kind of common data sets that you might want to use, all the ones that are in the book or lots of data sets that are kind of widely used in learning and research. So that makes life nice and easy for you. So again, we're going to create data loaders, but this time it's tabular data loaders. But we provide pretty similar kind of information to what we had before. A couple of new things. We have to tell it which of the columns are categorical. So they can only take one of a few values and which ones are continuous. So they can take basically any real number. And then again, we can use the exact same show batch that we've seen before to see the data. And so fast AI uses a lot of something called type dispatch, which is a system that's particularly popular in in a language called Julia to basically automatically do the right thing for your data regardless of what kind of data it is. So if you call show batch on something, you should get back something useful regardless of what kind of information you provided. So for a table, it shows you the information in that table. This particular data set is a data set of whether people have less than $50,000 or more than $50,000 in salary for different districts based on demographic information in each district. So to build a model for that data loaders, we do as always, something underscore learner. In this case, it's a tabular learner. Now this time we don't say fine tune, we say fit, specifically fit one cycle. That's because for tabular models, there's not generally going to be a pre trained model that already does something like what you want, because every table of data is very different. Whereas pictures often have a similar theme, you know, they're all pictures, they all have the same kind of general idea of what pictures are. So that's why it generally doesn't make too much sense to fine tune a tabular model. So instead you just fit. So there's one difference there. I'll show another example. Okay. So collaborative filtering. Collaborative filtering is the basis of most recommendation systems today. It's a system where we basically take data set that says which users liked which products or which users used which products. And then we use that to guess what other products those users might like based on finding similar users and what those similar users liked. The interesting thing about collaborative filtering is that when we say similar users, we're not referring to similar demographically, but similar in the sense of people who liked the same kinds of products. So for example, if you use any of the music systems like Spotify or Apple Music or whatever, it'll ask you first, like what's a few pieces of music you like, and you tell it and then it says, okay, well, maybe let's start playing this music for you. And that's how it works. It uses collaborative filtering. So we can create a collaborative filtering data loaders in exactly the same way that we're used to by downloading and decompressing some data, create our collab data loaders. In this case, we can just say from CSV and pass in a CSV. And this is what collaborative filtering data looks like. It's going to have, generally speaking, a user ID, some kind of product ID, in this case, a movie and a rating. So in this case, this user gave this movie a rating of 3.5 out of 5. And so again, you can see show batch, right? So use show batch, you should get back some useful visualization of your data regardless of what kind of data it is. And so again, we create a learner. This time it's a collaborative filtering learner, and you pass in your data. In this case, we give it one extra piece of information, which is because this is not predicting a category, but it's predicting a real number, we tell it what's the possible range. The actual range is one to five, but for reasons you'll learn about later, it's a good idea to actually go from a little bit lower than the possible minimum to a little bit higher. That's why I say 0.5 to 5.5. And then fine tune. Now again, you know, we don't really need to fine tune here because there's not really such a thing as a pre trained collaborative filtering model, we could just say fit or fit one cycle, but actually fine tune works fine as well. So after we train it for a while, this here is the mean squared error. So it's basically that on average, how far off are we for the validation set? And you can see as we train, and it's literally so fast, it's less than a second each epoch that error goes down and down. And for any kind of fast AI model, you can and for any kind of fast AI model, you can always call show results and get something sensible. So in this case, it's going to show a few examples of users and movies is the actual rating that user gave that movie. And here's the rating that the model predicted. Okay, so apparently a lot of people on the forum are asking how I'm turning this notebook into a presentation. So I'll be delighted to show you because I'm very pleased that these people made this thing for free for us to use. It's called rise. And all I do is it's a notebook extension. And in your notebook, it gives you an extra little thing on the side where you say which things are slides or which things are fragments and a fragment just been so this is a slide that's a fragment. So if I do that, you'll see it starts with a slide, and then the fragment gets added in. Yeah, that's about all there is to it. Actually, it's pretty great. And it's very well documented. You know, I'll just mention like, what do I make with Jupyter notebooks? This entire book was written entirely in Jupyter notebooks. Here are the notebooks. So if you go to the fasti fastbook repo, you can read the whole book. And because it's all in notebooks, every time we say here's how you create this plot or here's how you train this model, you can actually create the plot or you can actually train the model, because it's all notebooks. The entire fastai library is actually written in notebooks. So you might be surprised to discover that if you go to fastai slash fastai that the source code for the entire library is notebooks. And so the nice thing about this is that, you know, the source code for the fastai library has actual pictures of the actual things that we're building, for example. What else have we done with notebooks? Oh, blogging. I love blogging with notebooks, because when I want to explain something, I just write the code and you can just see the outputs and it all just works. Another thing you might be surprised by is all of our tests and continuous integration are also all in notebooks. So every time we change one of our notebooks, hundreds of tests get run automatically in parallel and if there's any issues, we will find out about it. So yeah, notebooks are great and rise is a really nice way to do slides in notebooks. All right. So what can deep learning do at present? We're still scratching the tip of the iceberg, even though it's a pretty well-hyped, heavily marketed technology at this point. When we started in 2014 or so, not many people were talking about deep learning and really there was no accessible way to get started with it. There were no pre-trained models you could download. There was just starting to appear some of the first open source software that would run on GPUs. But yeah, I mean, despite the fact that today there's a lot of people talking about deep learning, we're just scratching the surface. Every time pretty much somebody says to me, I work in domain X and I thought I might try deep learning out to see if it can help and I see them a few months later and I say, how did it go? They nearly always say, wow, we just broke the state of the art results in our field. So when I say these are things that it's currently state of the art for, these are kind of the ones that people have tried so far, but still most things haven't been tried. So in NLP, deep learning is a state of the art method in all these kinds of things and a lot more computer vision, medicine, biology, recommendation systems, playing games, robotics. I mean, it's just, I've tried elsewhere to make bigger lists and I just end up with pages and pages and pages. So generally speaking, if it's something that a human can do reasonably quickly, like look at a go board and decide if it looks like a good go board or not, even if it needs to be an expert human, then that's probably something that deep learning will be pretty good at. If it's something that takes a lot of logical thought processes over an extended period of time, particularly if it's not based on much data, maybe not, like who's going to win the next election or something like that. That'd be kind of broadly how I would try to decide is your thing useful for deep, good for deep learning or not. It's been a long time to get to this point. Yes, deep learning is incredibly powerful now, but it's taken decades of work. This was the first neural network. Remember neural networks are the basis of deep learning. So this was back in 1957. The basic ideas have not changed much at all, but we do have things like GPUs now and solid state drives and stuff like that. Of course, much more data just is available now. This has been decades of really hard work by a lot of people to get to this point. Let's take a step back and talk about what's going on in these models. I'm going to describe the basic idea of machine learning largely as it was described by Arthur Samuel in the late 50s when it was invented. I'm going to kind of do it with these graphs, which by the way, you might find fun. These graphs themselves created with Jupyter notebooks. These are graph Viz descriptions that are going to get turned into these. So this is a little sneak peek behind the scenes for you. Let's start with a graph of what does a normal program look like in the pre-deep learning machine learning days? You still have inputs and you still have results, right? And then you code a program in the middle, which is a bunch of conditionals and loops and setting variables and blah, blah, blah. A machine learning model doesn't look that different, but the program has been replaced with something called a model. We don't just have inputs now. We now also have weights, which are also called parameters. And the key thing is this, the model is not any more a bunch of conditionals and loops and things. It's a mathematical function. In the case of a neural network, it's a mathematical function that takes the inputs, multiplies them together by the weights, by one set of weights and adds them up. And then it does that again for a second set of weights and adds them up. It does it again for a third set of weights and adds them up and so forth. It then takes all the negative numbers and replaces them with zeros. And then it takes those as inputs to a next layer. It does the same thing. Multiplies them a bunch of times and adds them up. And it does that a few times. And that's called a neural network. Now the model therefore is not going to do anything useful and this leaves weights very carefully chosen. And so the way it works is that we actually start out with these weights as being random. So initially this thing doesn't do anything useful at all. So what we do, the way Arthur Samuel described it back in the late 50s, the inventor of machine learning, is he said, okay, let's take the inputs and the weights, put them through our model. And the thing particularly about neural networks is just like whatever model you like. Get the results and then let's decide how good they are. Right? So if for example, we're trying to decide, is this a picture of a bird? And the model said, which initially is random, says this isn't a bird and actually it is a bird. We would say, oh, you're wrong. So we then calculate the loss. So the loss is a number that says how good were the results. So that's all pretty straightforward. You know, we could, for example, say, oh, what's the accuracy? We could look at a hundred photos and say, which percentage of them did it get right? No worries. Now the critical step is this arrow. We need as a way of updating the weights, that is coming up with a new set of weights that are a bit better than the previous set. Okay. And by a bit better, we mean it should make the loss get a little bit better. So we've got this number that says how good is our model. And initially it's terrible, right? It's random. We need some mechanism of making a little bit better. If we can just do that one thing, then we just need to iterate this a few times because each time we put in some more inputs and, and put in our weights and get our loss and use it to make it a little bit better. Then if we make it a little bit better enough times, eventually it's going to get good. Assuming that our model is flexible enough to represent the thing we want to do. Now remember what I told you earlier about what a neural network is, which is basically multiplying things together and adding them up and replacing the negatives with zeros. And you do that a few times. That is provably an infinitely flexible function. So it actually turns out that that incredibly simple sequence of steps, if you repeat it a few times and you do enough of them, can solve any computable function and something like generate an artwork based off somebody's Twitter bio is an example of a computable function. Right. Or translate English to Chinese is an example of a computable function. So they're not the kinds of normal functions you do in year eight math, right? But they are computable functions. And so therefore, if we can just create this step, then, and use the neural network as a model, then we're good to go. In theory, we can solve anything given enough time and enough data. And so that's exactly what we do. And so once we finished that training procedure, we don't need the loss anymore. And even the weights themselves, we can integrate them kind of into the model, right? We finished changing them. So we can just say that's now fixed. And so once we've done that, we now have something which takes inputs, puts them through a model and gives us results. It looks exactly like our original idea of a program. And that's why we can do what I described earlier. That is, once we've got that learn dot predict for our bird recognizer, we can insert it into any piece of computer code, right? Once we've got a trained model, it's just another piece of code we can call with some inputs and get some outputs. Deploying machine learning models in practice can come with a lot of, you know, little tricky details, but the basic idea in your code is that you're just going to have a line of code that says learn dot predict. And then you just fit it in with all the rest of your code in the usual way. And this is why, because a trained model is just another thing that maps inputs to results. Okay. All right. So as we come to wrap up this first lesson, for those of you that are already familiar with notebooks and Python, there's, you know, this is going to be pretty easy for you. You're just going to be using some stuff that you're already familiar with and some slightly new libraries. But for those of you who are not familiar with Python, you know, you're biting into a big thing here. There's obviously a lot you're going to have to learn. And to be clear, I'm not going to be teaching Python in this course, but we do have links to great Python resources in the forum. So check out that thread. Regardless of where you're at, the most important thing is to experiment. And so experimenting could be as simple as just running those Kaggle notebooks that I've shown you just to see them run. You could try changing things a little bit. I'd really love you to try doing the bird or forest exercise, but come up with something else. Maybe try to use three or four categories rather than two. You know, have a think about something that you think would be fun to try. Depending on where you're at, you know, push yourself a little bit, but not too much. So make sure you get something finished before the next lesson. Most importantly, read chapter one of the book. It's got much the same stuff that we've seen today, but presented in a slightly different way. And then come back to the forums and present what you've done in the share your work here thread. After the first time we did this in year one of the course, we got over a thousand replies. And of those replies, it's amazing how many of them have ended up turning into new startups, scientific papers, job offers. It's been really cool to watch people's journeys. And some of them are just plain fun, you know, so this person classified different types of Trinidad and Tobago people. So, you know, people do stuff based on where they live and what their interests are. I don't know if this person is particularly interested in zucchini and cucumber, but they made a zucchini and cucumber classifier. I thought this was a really interesting one classifying satellite imagery into what city it's probably a picture of. Amazingly accurate actually, 85% with 110 classes. Panama City bus classifier, batik cloth classifier. This one, you know, very practically important, you know, recognizing the state of buildings. We've had quite a few students actually move into disaster resilience based on satellite imagery using exactly this kind of work. We've already actually seen this example, Ethan Sutton, the sound classifier. And I mentioned it was state of the art. He actually checked up the data sets website and found that he beat the state of the art for that. Elena Harley did human normal sequencing, so she was at Human Longagivity International. So she actually did three different really interesting pieces of cancer work during that first course, if I remember correctly. And I showed you this picture before. What I didn't mention is actually this student, Gleb, was a software developer at Splunk, big NASDAQ listed company. And this student project he did turned into a new patented product at Splunk and a big blog post and the whole thing turned out to be really cool. It's basically something to identify fraudsters using image recognition with these pictures we discussed. One of our students built this startup called Envision. Anyway, there's been lots and lots of examples. So all of this is to say, have a go at starting something, create something you think would be fun or interesting and share it in the forum. If you're a total beginner with Python, then start with something simple. But I think you'll find people very encouraging. And if you've done this a few times before, then try to push yourself a little bit further. And don't forget to look at the quiz questions at the end of the book and see if you can answer them all correctly. All right. Thanks everybody so much for coming. Okay. Thanks so much for coming everybody. Bye.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 6.6000000000000005, "text": " Welcome to Practical Deep Learning for Coders Lesson 1.", "tokens": [4027, 281, 19170, 804, 14895, 15205, 337, 383, 378, 433, 18649, 266, 502, 13], "temperature": 0.0, "avg_logprob": -0.18010085142111476, "compression_ratio": 1.381720430107527, "no_speech_prob": 0.016019776463508606}, {"id": 1, "seek": 0, "start": 6.6000000000000005, "end": 14.5, "text": " This is version 5 of this course and it's the first new one we've done in two years.", "tokens": [639, 307, 3037, 1025, 295, 341, 1164, 293, 309, 311, 264, 700, 777, 472, 321, 600, 1096, 294, 732, 924, 13], "temperature": 0.0, "avg_logprob": -0.18010085142111476, "compression_ratio": 1.381720430107527, "no_speech_prob": 0.016019776463508606}, {"id": 2, "seek": 0, "start": 14.5, "end": 17.96, "text": " So we've got a lot of cool things to cover.", "tokens": [407, 321, 600, 658, 257, 688, 295, 1627, 721, 281, 2060, 13], "temperature": 0.0, "avg_logprob": -0.18010085142111476, "compression_ratio": 1.381720430107527, "no_speech_prob": 0.016019776463508606}, {"id": 3, "seek": 0, "start": 17.96, "end": 22.22, "text": " It's amazing how much has changed.", "tokens": [467, 311, 2243, 577, 709, 575, 3105, 13], "temperature": 0.0, "avg_logprob": -0.18010085142111476, "compression_ratio": 1.381720430107527, "no_speech_prob": 0.016019776463508606}, {"id": 4, "seek": 0, "start": 22.22, "end": 26.96, "text": " Here is an XKCD from the end of 2015.", "tokens": [1692, 307, 364, 1783, 42, 16508, 490, 264, 917, 295, 7546, 13], "temperature": 0.0, "avg_logprob": -0.18010085142111476, "compression_ratio": 1.381720430107527, "no_speech_prob": 0.016019776463508606}, {"id": 5, "seek": 2696, "start": 26.96, "end": 31.64, "text": " Who here has seen XKCD comics before?", "tokens": [2102, 510, 575, 1612, 1783, 42, 16508, 18756, 949, 30], "temperature": 0.0, "avg_logprob": -0.13457340002059937, "compression_ratio": 1.3454545454545455, "no_speech_prob": 4.1305880586151034e-05}, {"id": 6, "seek": 2696, "start": 31.64, "end": 35.6, "text": " Pretty much everybody, not surprising.", "tokens": [10693, 709, 2201, 11, 406, 8830, 13], "temperature": 0.0, "avg_logprob": -0.13457340002059937, "compression_ratio": 1.3454545454545455, "no_speech_prob": 4.1305880586151034e-05}, {"id": 7, "seek": 2696, "start": 35.6, "end": 52.06, "text": " So the basic joke here is I'll let you read it and then I'll come back to it.", "tokens": [407, 264, 3875, 7647, 510, 307, 286, 603, 718, 291, 1401, 309, 293, 550, 286, 603, 808, 646, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.13457340002059937, "compression_ratio": 1.3454545454545455, "no_speech_prob": 4.1305880586151034e-05}, {"id": 8, "seek": 2696, "start": 52.06, "end": 56.16, "text": " So it can be hard to tell what's easy and what's nearly impossible.", "tokens": [407, 309, 393, 312, 1152, 281, 980, 437, 311, 1858, 293, 437, 311, 6217, 6243, 13], "temperature": 0.0, "avg_logprob": -0.13457340002059937, "compression_ratio": 1.3454545454545455, "no_speech_prob": 4.1305880586151034e-05}, {"id": 9, "seek": 5616, "start": 56.16, "end": 59.8, "text": " And in 2015 or at the end of 2015 the idea of checking whether something is a photo of", "tokens": [400, 294, 7546, 420, 412, 264, 917, 295, 7546, 264, 1558, 295, 8568, 1968, 746, 307, 257, 5052, 295], "temperature": 0.0, "avg_logprob": -0.14215775962187865, "compression_ratio": 1.6666666666666667, "no_speech_prob": 4.7551602619932964e-05}, {"id": 10, "seek": 5616, "start": 59.8, "end": 62.64, "text": " a bird was considered nearly impossible.", "tokens": [257, 5255, 390, 4888, 6217, 6243, 13], "temperature": 0.0, "avg_logprob": -0.14215775962187865, "compression_ratio": 1.6666666666666667, "no_speech_prob": 4.7551602619932964e-05}, {"id": 11, "seek": 5616, "start": 62.64, "end": 67.24, "text": " So impossible it was the basic idea of a joke because everybody knows that that's nearly", "tokens": [407, 6243, 309, 390, 264, 3875, 1558, 295, 257, 7647, 570, 2201, 3255, 300, 300, 311, 6217], "temperature": 0.0, "avg_logprob": -0.14215775962187865, "compression_ratio": 1.6666666666666667, "no_speech_prob": 4.7551602619932964e-05}, {"id": 12, "seek": 5616, "start": 67.24, "end": 68.24, "text": " impossible.", "tokens": [6243, 13], "temperature": 0.0, "avg_logprob": -0.14215775962187865, "compression_ratio": 1.6666666666666667, "no_speech_prob": 4.7551602619932964e-05}, {"id": 13, "seek": 5616, "start": 68.24, "end": 75.47999999999999, "text": " We're now going to build exactly that system for free in about two minutes.", "tokens": [492, 434, 586, 516, 281, 1322, 2293, 300, 1185, 337, 1737, 294, 466, 732, 2077, 13], "temperature": 0.0, "avg_logprob": -0.14215775962187865, "compression_ratio": 1.6666666666666667, "no_speech_prob": 4.7551602619932964e-05}, {"id": 14, "seek": 5616, "start": 75.47999999999999, "end": 79.72, "text": " So let's build an Is it a Bird system?", "tokens": [407, 718, 311, 1322, 364, 1119, 309, 257, 15931, 1185, 30], "temperature": 0.0, "avg_logprob": -0.14215775962187865, "compression_ratio": 1.6666666666666667, "no_speech_prob": 4.7551602619932964e-05}, {"id": 15, "seek": 5616, "start": 79.72, "end": 84.08, "text": " So we're going to use Python and so I'm going to run through this really quickly.", "tokens": [407, 321, 434, 516, 281, 764, 15329, 293, 370, 286, 478, 516, 281, 1190, 807, 341, 534, 2661, 13], "temperature": 0.0, "avg_logprob": -0.14215775962187865, "compression_ratio": 1.6666666666666667, "no_speech_prob": 4.7551602619932964e-05}, {"id": 16, "seek": 8408, "start": 84.08, "end": 88.12, "text": " You're not expected to run through it with me because we're going to come back to it.", "tokens": [509, 434, 406, 5176, 281, 1190, 807, 309, 365, 385, 570, 321, 434, 516, 281, 808, 646, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.1739841037326389, "compression_ratio": 1.522167487684729, "no_speech_prob": 4.636696303350618e-06}, {"id": 17, "seek": 8408, "start": 88.12, "end": 95.0, "text": " But let's go ahead and run that cell.", "tokens": [583, 718, 311, 352, 2286, 293, 1190, 300, 2815, 13], "temperature": 0.0, "avg_logprob": -0.1739841037326389, "compression_ratio": 1.522167487684729, "no_speech_prob": 4.636696303350618e-06}, {"id": 18, "seek": 8408, "start": 95.0, "end": 100.08, "text": " So what we're doing is we're searching DuckDuckGo for images of bird photos and we're just going", "tokens": [407, 437, 321, 434, 884, 307, 321, 434, 10808, 29266, 35, 1134, 12104, 337, 5267, 295, 5255, 5787, 293, 321, 434, 445, 516], "temperature": 0.0, "avg_logprob": -0.1739841037326389, "compression_ratio": 1.522167487684729, "no_speech_prob": 4.636696303350618e-06}, {"id": 19, "seek": 8408, "start": 100.08, "end": 103.36, "text": " to grab one.", "tokens": [281, 4444, 472, 13], "temperature": 0.0, "avg_logprob": -0.1739841037326389, "compression_ratio": 1.522167487684729, "no_speech_prob": 4.636696303350618e-06}, {"id": 20, "seek": 8408, "start": 103.36, "end": 109.4, "text": " And so here is the URL of the bird that we grabbed.", "tokens": [400, 370, 510, 307, 264, 12905, 295, 264, 5255, 300, 321, 18607, 13], "temperature": 0.0, "avg_logprob": -0.1739841037326389, "compression_ratio": 1.522167487684729, "no_speech_prob": 4.636696303350618e-06}, {"id": 21, "seek": 8408, "start": 109.4, "end": 113.6, "text": " Okay we'll download it.", "tokens": [1033, 321, 603, 5484, 309, 13], "temperature": 0.0, "avg_logprob": -0.1739841037326389, "compression_ratio": 1.522167487684729, "no_speech_prob": 4.636696303350618e-06}, {"id": 22, "seek": 11360, "start": 113.6, "end": 114.78, "text": " So there it is.", "tokens": [407, 456, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.14302127332572478, "compression_ratio": 1.6582914572864322, "no_speech_prob": 3.0414464617933845e-06}, {"id": 23, "seek": 11360, "start": 114.78, "end": 118.64, "text": " So we've grabbed a bird and so okay we've now got something that can download pictures", "tokens": [407, 321, 600, 18607, 257, 5255, 293, 370, 1392, 321, 600, 586, 658, 746, 300, 393, 5484, 5242], "temperature": 0.0, "avg_logprob": -0.14302127332572478, "compression_ratio": 1.6582914572864322, "no_speech_prob": 3.0414464617933845e-06}, {"id": 24, "seek": 11360, "start": 118.64, "end": 121.03999999999999, "text": " of birds.", "tokens": [295, 9009, 13], "temperature": 0.0, "avg_logprob": -0.14302127332572478, "compression_ratio": 1.6582914572864322, "no_speech_prob": 3.0414464617933845e-06}, {"id": 25, "seek": 11360, "start": 121.03999999999999, "end": 126.39999999999999, "text": " Now we're going to need to build a system that can recognize things that are birds versus", "tokens": [823, 321, 434, 516, 281, 643, 281, 1322, 257, 1185, 300, 393, 5521, 721, 300, 366, 9009, 5717], "temperature": 0.0, "avg_logprob": -0.14302127332572478, "compression_ratio": 1.6582914572864322, "no_speech_prob": 3.0414464617933845e-06}, {"id": 26, "seek": 11360, "start": 126.39999999999999, "end": 127.96, "text": " things that aren't birds from photos.", "tokens": [721, 300, 3212, 380, 9009, 490, 5787, 13], "temperature": 0.0, "avg_logprob": -0.14302127332572478, "compression_ratio": 1.6582914572864322, "no_speech_prob": 3.0414464617933845e-06}, {"id": 27, "seek": 11360, "start": 127.96, "end": 136.84, "text": " Now of course computers need numbers to work with but luckily images are made of numbers.", "tokens": [823, 295, 1164, 10807, 643, 3547, 281, 589, 365, 457, 22880, 5267, 366, 1027, 295, 3547, 13], "temperature": 0.0, "avg_logprob": -0.14302127332572478, "compression_ratio": 1.6582914572864322, "no_speech_prob": 3.0414464617933845e-06}, {"id": 28, "seek": 13684, "start": 136.84, "end": 148.56, "text": " I actually found this really nice website called Picspy where I can grab a bird and", "tokens": [286, 767, 1352, 341, 534, 1481, 3144, 1219, 430, 1167, 8200, 689, 286, 393, 4444, 257, 5255, 293], "temperature": 0.0, "avg_logprob": -0.2749554189046224, "compression_ratio": 1.4035087719298245, "no_speech_prob": 2.947820803456125e-06}, {"id": 29, "seek": 13684, "start": 148.56, "end": 155.44, "text": " if I wiggle over it, that's PIC, that's BIC, you'll see here that that part of the BIC", "tokens": [498, 286, 33377, 670, 309, 11, 300, 311, 430, 2532, 11, 300, 311, 363, 2532, 11, 291, 603, 536, 510, 300, 300, 644, 295, 264, 363, 2532], "temperature": 0.0, "avg_logprob": -0.2749554189046224, "compression_ratio": 1.4035087719298245, "no_speech_prob": 2.947820803456125e-06}, {"id": 30, "seek": 13684, "start": 155.44, "end": 162.8, "text": " was 251 brightness of red, 48 of green and 21 of blue.", "tokens": [390, 3552, 16, 21367, 295, 2182, 11, 11174, 295, 3092, 293, 5080, 295, 3344, 13], "temperature": 0.0, "avg_logprob": -0.2749554189046224, "compression_ratio": 1.4035087719298245, "no_speech_prob": 2.947820803456125e-06}, {"id": 31, "seek": 13684, "start": 162.8, "end": 163.8, "text": " So that's RGB.", "tokens": [407, 300, 311, 31231, 13], "temperature": 0.0, "avg_logprob": -0.2749554189046224, "compression_ratio": 1.4035087719298245, "no_speech_prob": 2.947820803456125e-06}, {"id": 32, "seek": 16380, "start": 163.8, "end": 172.4, "text": " And so you can see as I wave around those colours are changing, those numbers.", "tokens": [400, 370, 291, 393, 536, 382, 286, 5772, 926, 729, 16484, 366, 4473, 11, 729, 3547, 13], "temperature": 0.0, "avg_logprob": -0.12865465604341947, "compression_ratio": 1.4797687861271676, "no_speech_prob": 2.0260310975572793e-06}, {"id": 33, "seek": 16380, "start": 172.4, "end": 185.0, "text": " And so this picture, the thing that we recognise as a picture is actually 256 by 171 by 3 numbers", "tokens": [400, 370, 341, 3036, 11, 264, 551, 300, 321, 23991, 382, 257, 3036, 307, 767, 38882, 538, 3282, 16, 538, 805, 3547], "temperature": 0.0, "avg_logprob": -0.12865465604341947, "compression_ratio": 1.4797687861271676, "no_speech_prob": 2.0260310975572793e-06}, {"id": 34, "seek": 16380, "start": 185.0, "end": 191.16000000000003, "text": " between 0 and 255 representing the amount of red, green and blue on each pixel.", "tokens": [1296, 1958, 293, 3552, 20, 13460, 264, 2372, 295, 2182, 11, 3092, 293, 3344, 322, 1184, 19261, 13], "temperature": 0.0, "avg_logprob": -0.12865465604341947, "compression_ratio": 1.4797687861271676, "no_speech_prob": 2.0260310975572793e-06}, {"id": 35, "seek": 19116, "start": 191.16, "end": 195.92, "text": " So that's going to be an input to our program that's going to try and figure out whether", "tokens": [407, 300, 311, 516, 281, 312, 364, 4846, 281, 527, 1461, 300, 311, 516, 281, 853, 293, 2573, 484, 1968], "temperature": 0.0, "avg_logprob": -0.17642481510455793, "compression_ratio": 1.6561085972850678, "no_speech_prob": 1.209582819683419e-06}, {"id": 36, "seek": 19116, "start": 195.92, "end": 201.28, "text": " this is a picture of a bird or not.", "tokens": [341, 307, 257, 3036, 295, 257, 5255, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.17642481510455793, "compression_ratio": 1.6561085972850678, "no_speech_prob": 1.209582819683419e-06}, {"id": 37, "seek": 19116, "start": 201.28, "end": 210.56, "text": " Okay, so let's go ahead and run this cell which is going to go through and I needed", "tokens": [1033, 11, 370, 718, 311, 352, 2286, 293, 1190, 341, 2815, 597, 307, 516, 281, 352, 807, 293, 286, 2978], "temperature": 0.0, "avg_logprob": -0.17642481510455793, "compression_ratio": 1.6561085972850678, "no_speech_prob": 1.209582819683419e-06}, {"id": 38, "seek": 19116, "start": 210.56, "end": 216.32, "text": " bird and non-bird but you can't really search Google images or dot dot go images for not", "tokens": [5255, 293, 2107, 12, 18080, 457, 291, 393, 380, 534, 3164, 3329, 5267, 420, 5893, 5893, 352, 5267, 337, 406], "temperature": 0.0, "avg_logprob": -0.17642481510455793, "compression_ratio": 1.6561085972850678, "no_speech_prob": 1.209582819683419e-06}, {"id": 39, "seek": 19116, "start": 216.32, "end": 217.68, "text": " a bird.", "tokens": [257, 5255, 13], "temperature": 0.0, "avg_logprob": -0.17642481510455793, "compression_ratio": 1.6561085972850678, "no_speech_prob": 1.209582819683419e-06}, {"id": 40, "seek": 19116, "start": 217.68, "end": 219.28, "text": " This doesn't work that way.", "tokens": [639, 1177, 380, 589, 300, 636, 13], "temperature": 0.0, "avg_logprob": -0.17642481510455793, "compression_ratio": 1.6561085972850678, "no_speech_prob": 1.209582819683419e-06}, {"id": 41, "seek": 19116, "start": 219.28, "end": 220.6, "text": " So I just decided to use forest.", "tokens": [407, 286, 445, 3047, 281, 764, 6719, 13], "temperature": 0.0, "avg_logprob": -0.17642481510455793, "compression_ratio": 1.6561085972850678, "no_speech_prob": 1.209582819683419e-06}, {"id": 42, "seek": 22060, "start": 220.6, "end": 226.0, "text": " I thought okay pictures of forest versus pictures of bird sounds like a good starting point.", "tokens": [286, 1194, 1392, 5242, 295, 6719, 5717, 5242, 295, 5255, 3263, 411, 257, 665, 2891, 935, 13], "temperature": 0.0, "avg_logprob": -0.1854403359549386, "compression_ratio": 1.6317991631799162, "no_speech_prob": 7.0707869781472255e-06}, {"id": 43, "seek": 22060, "start": 226.0, "end": 234.2, "text": " So I go through each of forest and bird and I search for forest photo and bird photo,", "tokens": [407, 286, 352, 807, 1184, 295, 6719, 293, 5255, 293, 286, 3164, 337, 6719, 5052, 293, 5255, 5052, 11], "temperature": 0.0, "avg_logprob": -0.1854403359549386, "compression_ratio": 1.6317991631799162, "no_speech_prob": 7.0707869781472255e-06}, {"id": 44, "seek": 22060, "start": 234.2, "end": 240.79999999999998, "text": " download images and then resize them to be no bigger than 400 pixels on a side just because", "tokens": [5484, 5267, 293, 550, 50069, 552, 281, 312, 572, 3801, 813, 8423, 18668, 322, 257, 1252, 445, 570], "temperature": 0.0, "avg_logprob": -0.1854403359549386, "compression_ratio": 1.6317991631799162, "no_speech_prob": 7.0707869781472255e-06}, {"id": 45, "seek": 22060, "start": 240.79999999999998, "end": 242.44, "text": " we don't need particularly big ones.", "tokens": [321, 500, 380, 643, 4098, 955, 2306, 13], "temperature": 0.0, "avg_logprob": -0.1854403359549386, "compression_ratio": 1.6317991631799162, "no_speech_prob": 7.0707869781472255e-06}, {"id": 46, "seek": 22060, "start": 242.44, "end": 246.44, "text": " It takes a surprisingly large amount of time just for a computer to open an image.", "tokens": [467, 2516, 257, 17600, 2416, 2372, 295, 565, 445, 337, 257, 3820, 281, 1269, 364, 3256, 13], "temperature": 0.0, "avg_logprob": -0.1854403359549386, "compression_ratio": 1.6317991631799162, "no_speech_prob": 7.0707869781472255e-06}, {"id": 47, "seek": 24644, "start": 246.44, "end": 251.0, "text": " Okay, so we've now got 200 of each.", "tokens": [1033, 11, 370, 321, 600, 586, 658, 2331, 295, 1184, 13], "temperature": 0.0, "avg_logprob": -0.14150252549544626, "compression_ratio": 1.5311004784688995, "no_speech_prob": 4.0289919525093865e-06}, {"id": 48, "seek": 24644, "start": 251.0, "end": 255.2, "text": " I find when I download images I often get a few broken ones and if you try and train", "tokens": [286, 915, 562, 286, 5484, 5267, 286, 2049, 483, 257, 1326, 5463, 2306, 293, 498, 291, 853, 293, 3847], "temperature": 0.0, "avg_logprob": -0.14150252549544626, "compression_ratio": 1.5311004784688995, "no_speech_prob": 4.0289919525093865e-06}, {"id": 49, "seek": 24644, "start": 255.2, "end": 258.36, "text": " a model with broken images it will not work.", "tokens": [257, 2316, 365, 5463, 5267, 309, 486, 406, 589, 13], "temperature": 0.0, "avg_logprob": -0.14150252549544626, "compression_ratio": 1.5311004784688995, "no_speech_prob": 4.0289919525093865e-06}, {"id": 50, "seek": 24644, "start": 258.36, "end": 262.68, "text": " So here's something which just verifies each image and unlinks so deletes the ones that", "tokens": [407, 510, 311, 746, 597, 445, 1306, 11221, 1184, 3256, 293, 517, 75, 16431, 370, 1103, 37996, 264, 2306, 300], "temperature": 0.0, "avg_logprob": -0.14150252549544626, "compression_ratio": 1.5311004784688995, "no_speech_prob": 4.0289919525093865e-06}, {"id": 51, "seek": 24644, "start": 262.68, "end": 264.48, "text": " don't work.", "tokens": [500, 380, 589, 13], "temperature": 0.0, "avg_logprob": -0.14150252549544626, "compression_ratio": 1.5311004784688995, "no_speech_prob": 4.0289919525093865e-06}, {"id": 52, "seek": 24644, "start": 264.48, "end": 270.6, "text": " Okay, so now we can create what's called a data block.", "tokens": [1033, 11, 370, 586, 321, 393, 1884, 437, 311, 1219, 257, 1412, 3461, 13], "temperature": 0.0, "avg_logprob": -0.14150252549544626, "compression_ratio": 1.5311004784688995, "no_speech_prob": 4.0289919525093865e-06}, {"id": 53, "seek": 27060, "start": 270.6, "end": 282.0, "text": " So after I run this cell you'll see that I've basically I'll go through the details of this", "tokens": [407, 934, 286, 1190, 341, 2815, 291, 603, 536, 300, 286, 600, 1936, 286, 603, 352, 807, 264, 4365, 295, 341], "temperature": 0.0, "avg_logprob": -0.16025015951573163, "compression_ratio": 1.5972850678733033, "no_speech_prob": 3.0414146294788225e-06}, {"id": 54, "seek": 27060, "start": 282.0, "end": 288.32000000000005, "text": " later but a data block gives fast AI the library all the information it needs to create a computer", "tokens": [1780, 457, 257, 1412, 3461, 2709, 2370, 7318, 264, 6405, 439, 264, 1589, 309, 2203, 281, 1884, 257, 3820], "temperature": 0.0, "avg_logprob": -0.16025015951573163, "compression_ratio": 1.5972850678733033, "no_speech_prob": 3.0414146294788225e-06}, {"id": 55, "seek": 27060, "start": 288.32000000000005, "end": 292.20000000000005, "text": " vision model and so in this case we're basically telling it get all the image files that we", "tokens": [5201, 2316, 293, 370, 294, 341, 1389, 321, 434, 1936, 3585, 309, 483, 439, 264, 3256, 7098, 300, 321], "temperature": 0.0, "avg_logprob": -0.16025015951573163, "compression_ratio": 1.5972850678733033, "no_speech_prob": 3.0414146294788225e-06}, {"id": 56, "seek": 27060, "start": 292.20000000000005, "end": 297.04, "text": " just downloaded and then we say show me a few up to six and let's see.", "tokens": [445, 21748, 293, 550, 321, 584, 855, 385, 257, 1326, 493, 281, 2309, 293, 718, 311, 536, 13], "temperature": 0.0, "avg_logprob": -0.16025015951573163, "compression_ratio": 1.5972850678733033, "no_speech_prob": 3.0414146294788225e-06}, {"id": 57, "seek": 29704, "start": 297.04, "end": 300.8, "text": " So we've got some birds, forest, bird, bird, forest.", "tokens": [407, 321, 600, 658, 512, 9009, 11, 6719, 11, 5255, 11, 5255, 11, 6719, 13], "temperature": 0.0, "avg_logprob": -0.157743210886039, "compression_ratio": 1.6425531914893616, "no_speech_prob": 5.954986136202933e-06}, {"id": 58, "seek": 29704, "start": 300.8, "end": 304.12, "text": " So one of the nice things about doing computer vision models is it's really easy to check", "tokens": [407, 472, 295, 264, 1481, 721, 466, 884, 3820, 5201, 5245, 307, 309, 311, 534, 1858, 281, 1520], "temperature": 0.0, "avg_logprob": -0.157743210886039, "compression_ratio": 1.6425531914893616, "no_speech_prob": 5.954986136202933e-06}, {"id": 59, "seek": 29704, "start": 304.12, "end": 308.56, "text": " your data because you can just look at it which is not the case for a lot of kinds of", "tokens": [428, 1412, 570, 291, 393, 445, 574, 412, 309, 597, 307, 406, 264, 1389, 337, 257, 688, 295, 3685, 295], "temperature": 0.0, "avg_logprob": -0.157743210886039, "compression_ratio": 1.6425531914893616, "no_speech_prob": 5.954986136202933e-06}, {"id": 60, "seek": 29704, "start": 308.56, "end": 310.04, "text": " models.", "tokens": [5245, 13], "temperature": 0.0, "avg_logprob": -0.157743210886039, "compression_ratio": 1.6425531914893616, "no_speech_prob": 5.954986136202933e-06}, {"id": 61, "seek": 29704, "start": 310.04, "end": 317.84000000000003, "text": " Okay, so we've now downloaded 200 pictures of birds, 200 pictures of forests.", "tokens": [1033, 11, 370, 321, 600, 586, 21748, 2331, 5242, 295, 9009, 11, 2331, 5242, 295, 21700, 13], "temperature": 0.0, "avg_logprob": -0.157743210886039, "compression_ratio": 1.6425531914893616, "no_speech_prob": 5.954986136202933e-06}, {"id": 62, "seek": 29704, "start": 317.84000000000003, "end": 324.52000000000004, "text": " So we'll now press run and this model is actually running on my laptop.", "tokens": [407, 321, 603, 586, 1886, 1190, 293, 341, 2316, 307, 767, 2614, 322, 452, 10732, 13], "temperature": 0.0, "avg_logprob": -0.157743210886039, "compression_ratio": 1.6425531914893616, "no_speech_prob": 5.954986136202933e-06}, {"id": 63, "seek": 32452, "start": 324.52, "end": 329.64, "text": " So this is not using a vast data center, it's running on my presentation laptop and it's", "tokens": [407, 341, 307, 406, 1228, 257, 8369, 1412, 3056, 11, 309, 311, 2614, 322, 452, 5860, 10732, 293, 309, 311], "temperature": 0.0, "avg_logprob": -0.07584904335640572, "compression_ratio": 1.9043478260869566, "no_speech_prob": 8.93745800567558e-06}, {"id": 64, "seek": 32452, "start": 329.64, "end": 337.88, "text": " doing it at the same time as my laptop is streaming video which is possibly a bad idea.", "tokens": [884, 309, 412, 264, 912, 565, 382, 452, 10732, 307, 11791, 960, 597, 307, 6264, 257, 1578, 1558, 13], "temperature": 0.0, "avg_logprob": -0.07584904335640572, "compression_ratio": 1.9043478260869566, "no_speech_prob": 8.93745800567558e-06}, {"id": 65, "seek": 32452, "start": 337.88, "end": 344.96, "text": " And so what it's going to do is it's going to run through every photo out of those 400", "tokens": [400, 370, 437, 309, 311, 516, 281, 360, 307, 309, 311, 516, 281, 1190, 807, 633, 5052, 484, 295, 729, 8423], "temperature": 0.0, "avg_logprob": -0.07584904335640572, "compression_ratio": 1.9043478260869566, "no_speech_prob": 8.93745800567558e-06}, {"id": 66, "seek": 32452, "start": 344.96, "end": 349.4, "text": " and for the ones that are forest it's going to learn a bit more about what forest looks", "tokens": [293, 337, 264, 2306, 300, 366, 6719, 309, 311, 516, 281, 1466, 257, 857, 544, 466, 437, 6719, 1542], "temperature": 0.0, "avg_logprob": -0.07584904335640572, "compression_ratio": 1.9043478260869566, "no_speech_prob": 8.93745800567558e-06}, {"id": 67, "seek": 32452, "start": 349.4, "end": 353.56, "text": " like and for the ones that are bird it'll learn a bit more about what bird looks like.", "tokens": [411, 293, 337, 264, 2306, 300, 366, 5255, 309, 603, 1466, 257, 857, 544, 466, 437, 5255, 1542, 411, 13], "temperature": 0.0, "avg_logprob": -0.07584904335640572, "compression_ratio": 1.9043478260869566, "no_speech_prob": 8.93745800567558e-06}, {"id": 68, "seek": 35356, "start": 353.56, "end": 362.88, "text": " So overall it took under 30 seconds and believe it or not that's enough to finish doing the", "tokens": [407, 4787, 309, 1890, 833, 2217, 3949, 293, 1697, 309, 420, 406, 300, 311, 1547, 281, 2413, 884, 264], "temperature": 0.0, "avg_logprob": -0.1524579672165859, "compression_ratio": 1.4642857142857142, "no_speech_prob": 3.1379213396576233e-06}, {"id": 69, "seek": 35356, "start": 362.88, "end": 367.08, "text": " thing which was in that XKCD comic.", "tokens": [551, 597, 390, 294, 300, 1783, 42, 16508, 13900, 13], "temperature": 0.0, "avg_logprob": -0.1524579672165859, "compression_ratio": 1.4642857142857142, "no_speech_prob": 3.1379213396576233e-06}, {"id": 70, "seek": 35356, "start": 367.08, "end": 369.0, "text": " Let's check.", "tokens": [961, 311, 1520, 13], "temperature": 0.0, "avg_logprob": -0.1524579672165859, "compression_ratio": 1.4642857142857142, "no_speech_prob": 3.1379213396576233e-06}, {"id": 71, "seek": 35356, "start": 369.0, "end": 374.84000000000003, "text": " By passing in that bird that we downloaded at the start, this is a bird, probability", "tokens": [3146, 8437, 294, 300, 5255, 300, 321, 21748, 412, 264, 722, 11, 341, 307, 257, 5255, 11, 8482], "temperature": 0.0, "avg_logprob": -0.1524579672165859, "compression_ratio": 1.4642857142857142, "no_speech_prob": 3.1379213396576233e-06}, {"id": 72, "seek": 35356, "start": 374.84000000000003, "end": 378.24, "text": " it's a bird, one.", "tokens": [309, 311, 257, 5255, 11, 472, 13], "temperature": 0.0, "avg_logprob": -0.1524579672165859, "compression_ratio": 1.4642857142857142, "no_speech_prob": 3.1379213396576233e-06}, {"id": 73, "seek": 35356, "start": 378.24, "end": 381.24, "text": " Rounded to the nearest four decimal places.", "tokens": [18525, 292, 281, 264, 23831, 1451, 26601, 3190, 13], "temperature": 0.0, "avg_logprob": -0.1524579672165859, "compression_ratio": 1.4642857142857142, "no_speech_prob": 3.1379213396576233e-06}, {"id": 74, "seek": 38124, "start": 381.24, "end": 389.2, "text": " So something pretty extraordinary has happened since late 2015 which is literally something", "tokens": [407, 746, 1238, 10581, 575, 2011, 1670, 3469, 7546, 597, 307, 3736, 746], "temperature": 0.0, "avg_logprob": -0.09213917134171826, "compression_ratio": 1.4011627906976745, "no_speech_prob": 1.9636966044345172e-06}, {"id": 75, "seek": 38124, "start": 389.2, "end": 395.72, "text": " that has gone from so impossible, it's a joke, to so easy that I can run it on my laptop", "tokens": [300, 575, 2780, 490, 370, 6243, 11, 309, 311, 257, 7647, 11, 281, 370, 1858, 300, 286, 393, 1190, 309, 322, 452, 10732], "temperature": 0.0, "avg_logprob": -0.09213917134171826, "compression_ratio": 1.4011627906976745, "no_speech_prob": 1.9636966044345172e-06}, {"id": 76, "seek": 38124, "start": 395.72, "end": 401.72, "text": " computer in I don't know how long it was, about two minutes.", "tokens": [3820, 294, 286, 500, 380, 458, 577, 938, 309, 390, 11, 466, 732, 2077, 13], "temperature": 0.0, "avg_logprob": -0.09213917134171826, "compression_ratio": 1.4011627906976745, "no_speech_prob": 1.9636966044345172e-06}, {"id": 77, "seek": 40172, "start": 401.72, "end": 411.52000000000004, "text": " And so hopefully that gives you a sense that creating really interesting, real working", "tokens": [400, 370, 4696, 300, 2709, 291, 257, 2020, 300, 4084, 534, 1880, 11, 957, 1364], "temperature": 0.0, "avg_logprob": -0.08750412199232313, "compression_ratio": 1.6084905660377358, "no_speech_prob": 2.9942743822175544e-06}, {"id": 78, "seek": 40172, "start": 411.52000000000004, "end": 415.88000000000005, "text": " programs with deep learning is something that it doesn't take a lot of code, didn't take", "tokens": [4268, 365, 2452, 2539, 307, 746, 300, 309, 1177, 380, 747, 257, 688, 295, 3089, 11, 994, 380, 747], "temperature": 0.0, "avg_logprob": -0.08750412199232313, "compression_ratio": 1.6084905660377358, "no_speech_prob": 2.9942743822175544e-06}, {"id": 79, "seek": 40172, "start": 415.88000000000005, "end": 423.78000000000003, "text": " any math, didn't take more than my laptop computer, it's pretty accessible in fact.", "tokens": [604, 5221, 11, 994, 380, 747, 544, 813, 452, 10732, 3820, 11, 309, 311, 1238, 9515, 294, 1186, 13], "temperature": 0.0, "avg_logprob": -0.08750412199232313, "compression_ratio": 1.6084905660377358, "no_speech_prob": 2.9942743822175544e-06}, {"id": 80, "seek": 40172, "start": 423.78000000000003, "end": 429.3, "text": " So that's really what we're going to be learning about over the next seven weeks.", "tokens": [407, 300, 311, 534, 437, 321, 434, 516, 281, 312, 2539, 466, 670, 264, 958, 3407, 3259, 13], "temperature": 0.0, "avg_logprob": -0.08750412199232313, "compression_ratio": 1.6084905660377358, "no_speech_prob": 2.9942743822175544e-06}, {"id": 81, "seek": 42930, "start": 429.3, "end": 432.36, "text": " So where have we got to now with deep learning?", "tokens": [407, 689, 362, 321, 658, 281, 586, 365, 2452, 2539, 30], "temperature": 0.0, "avg_logprob": -0.15305384397506713, "compression_ratio": 1.5231481481481481, "no_speech_prob": 3.1376689548778813e-06}, {"id": 82, "seek": 42930, "start": 432.36, "end": 441.18, "text": " Well it moves so fast that even in the last few weeks we've taken it up another notch", "tokens": [1042, 309, 6067, 370, 2370, 300, 754, 294, 264, 1036, 1326, 3259, 321, 600, 2726, 309, 493, 1071, 26109], "temperature": 0.0, "avg_logprob": -0.15305384397506713, "compression_ratio": 1.5231481481481481, "no_speech_prob": 3.1376689548778813e-06}, {"id": 83, "seek": 42930, "start": 441.18, "end": 442.44, "text": " as a community.", "tokens": [382, 257, 1768, 13], "temperature": 0.0, "avg_logprob": -0.15305384397506713, "compression_ratio": 1.5231481481481481, "no_speech_prob": 3.1376689548778813e-06}, {"id": 84, "seek": 42930, "start": 442.44, "end": 447.56, "text": " You might have seen that something called Dali 2 has been released which uses deep learning", "tokens": [509, 1062, 362, 1612, 300, 746, 1219, 413, 5103, 568, 575, 668, 4736, 597, 4960, 2452, 2539], "temperature": 0.0, "avg_logprob": -0.15305384397506713, "compression_ratio": 1.5231481481481481, "no_speech_prob": 3.1376689548778813e-06}, {"id": 85, "seek": 42930, "start": 447.56, "end": 453.7, "text": " to generate new pictures and I thought this was an amazing thing that this guy Nick did", "tokens": [281, 8460, 777, 5242, 293, 286, 1194, 341, 390, 364, 2243, 551, 300, 341, 2146, 9449, 630], "temperature": 0.0, "avg_logprob": -0.15305384397506713, "compression_ratio": 1.5231481481481481, "no_speech_prob": 3.1376689548778813e-06}, {"id": 86, "seek": 45370, "start": 453.7, "end": 461.08, "text": " where he took his friends Twitter bios and typed them into the Dali 2 input and it generated", "tokens": [689, 415, 1890, 702, 1855, 5794, 36997, 293, 33941, 552, 666, 264, 413, 5103, 568, 4846, 293, 309, 10833], "temperature": 0.0, "avg_logprob": -0.20693676471710204, "compression_ratio": 1.6424581005586592, "no_speech_prob": 1.6024738442865782e-06}, {"id": 87, "seek": 45370, "start": 461.08, "end": 462.47999999999996, "text": " these pictures.", "tokens": [613, 5242, 13], "temperature": 0.0, "avg_logprob": -0.20693676471710204, "compression_ratio": 1.6424581005586592, "no_speech_prob": 1.6024738442865782e-06}, {"id": 88, "seek": 45370, "start": 462.47999999999996, "end": 468.08, "text": " So this guy's he typed in commitments, empathetic, psychedelic, philosophical and it generated", "tokens": [407, 341, 2146, 311, 415, 33941, 294, 26230, 11, 27155, 3532, 11, 47732, 299, 11, 25066, 293, 309, 10833], "temperature": 0.0, "avg_logprob": -0.20693676471710204, "compression_ratio": 1.6424581005586592, "no_speech_prob": 1.6024738442865782e-06}, {"id": 89, "seek": 45370, "start": 468.08, "end": 469.08, "text": " these pictures.", "tokens": [613, 5242, 13], "temperature": 0.0, "avg_logprob": -0.20693676471710204, "compression_ratio": 1.6424581005586592, "no_speech_prob": 1.6024738442865782e-06}, {"id": 90, "seek": 45370, "start": 469.08, "end": 474.48, "text": " So I'll just show you a few of these, I'll let you read them.", "tokens": [407, 286, 603, 445, 855, 291, 257, 1326, 295, 613, 11, 286, 603, 718, 291, 1401, 552, 13], "temperature": 0.0, "avg_logprob": -0.20693676471710204, "compression_ratio": 1.6424581005586592, "no_speech_prob": 1.6024738442865782e-06}, {"id": 91, "seek": 45370, "start": 474.48, "end": 481.48, "text": " I love that.", "tokens": [286, 959, 300, 13], "temperature": 0.0, "avg_logprob": -0.20693676471710204, "compression_ratio": 1.6424581005586592, "no_speech_prob": 1.6024738442865782e-06}, {"id": 92, "seek": 48148, "start": 481.48, "end": 496.16, "text": " That one's pretty amazing I reckon actually.", "tokens": [663, 472, 311, 1238, 2243, 286, 29548, 767, 13], "temperature": 0.0, "avg_logprob": -0.171526366266711, "compression_ratio": 1.3666666666666667, "no_speech_prob": 6.239702543098247e-06}, {"id": 93, "seek": 48148, "start": 496.16, "end": 502.84000000000003, "text": " I love this, Happy Sisyphus has actually got a happy rock to move around.", "tokens": [286, 959, 341, 11, 8277, 318, 14169, 950, 301, 575, 767, 658, 257, 2055, 3727, 281, 1286, 926, 13], "temperature": 0.0, "avg_logprob": -0.171526366266711, "compression_ratio": 1.3666666666666667, "no_speech_prob": 6.239702543098247e-06}, {"id": 94, "seek": 48148, "start": 502.84000000000003, "end": 508.66, "text": " So this is like, yeah I don't know, when I look at these I still get pretty blown away", "tokens": [407, 341, 307, 411, 11, 1338, 286, 500, 380, 458, 11, 562, 286, 574, 412, 613, 286, 920, 483, 1238, 16479, 1314], "temperature": 0.0, "avg_logprob": -0.171526366266711, "compression_ratio": 1.3666666666666667, "no_speech_prob": 6.239702543098247e-06}, {"id": 95, "seek": 50866, "start": 508.66, "end": 516.84, "text": " that this is a computer algorithm using nothing but this text input to generate these arbitrary", "tokens": [300, 341, 307, 257, 3820, 9284, 1228, 1825, 457, 341, 2487, 4846, 281, 8460, 613, 23211], "temperature": 0.0, "avg_logprob": -0.17815314845034952, "compression_ratio": 1.7666666666666666, "no_speech_prob": 2.601392452561413e-06}, {"id": 96, "seek": 50866, "start": 516.84, "end": 522.4, "text": " pictures in this case of fairly complex and creative things.", "tokens": [5242, 294, 341, 1389, 295, 6457, 3997, 293, 5880, 721, 13], "temperature": 0.0, "avg_logprob": -0.17815314845034952, "compression_ratio": 1.7666666666666666, "no_speech_prob": 2.601392452561413e-06}, {"id": 97, "seek": 50866, "start": 522.4, "end": 528.52, "text": " So the guy who made those points out, this is like, he spends about two minutes or so", "tokens": [407, 264, 2146, 567, 1027, 729, 2793, 484, 11, 341, 307, 411, 11, 415, 25620, 466, 732, 2077, 420, 370], "temperature": 0.0, "avg_logprob": -0.17815314845034952, "compression_ratio": 1.7666666666666666, "no_speech_prob": 2.601392452561413e-06}, {"id": 98, "seek": 50866, "start": 528.52, "end": 531.52, "text": " creating each of these, like he tries a few different prompts and he tries a few different", "tokens": [4084, 1184, 295, 613, 11, 411, 415, 9898, 257, 1326, 819, 41095, 293, 415, 9898, 257, 1326, 819], "temperature": 0.0, "avg_logprob": -0.17815314845034952, "compression_ratio": 1.7666666666666666, "no_speech_prob": 2.601392452561413e-06}, {"id": 99, "seek": 50866, "start": 531.52, "end": 535.5600000000001, "text": " pictures and so he's given an example here of like when he types something into the system", "tokens": [5242, 293, 370, 415, 311, 2212, 364, 1365, 510, 295, 411, 562, 415, 3467, 746, 666, 264, 1185], "temperature": 0.0, "avg_logprob": -0.17815314845034952, "compression_ratio": 1.7666666666666666, "no_speech_prob": 2.601392452561413e-06}, {"id": 100, "seek": 53556, "start": 535.56, "end": 541.4399999999999, "text": " like here's an example of like 10 different things he gets back when he puts in expressive", "tokens": [411, 510, 311, 364, 1365, 295, 411, 1266, 819, 721, 415, 2170, 646, 562, 415, 8137, 294, 40189], "temperature": 0.0, "avg_logprob": -0.1260409587767066, "compression_ratio": 1.5972850678733033, "no_speech_prob": 6.338681941997493e-06}, {"id": 101, "seek": 53556, "start": 541.4399999999999, "end": 549.4599999999999, "text": " painting of a man shining rays of justice and transparency on a blue bird Twitter logo.", "tokens": [5370, 295, 257, 587, 18269, 24417, 295, 6118, 293, 17131, 322, 257, 3344, 5255, 5794, 9699, 13], "temperature": 0.0, "avg_logprob": -0.1260409587767066, "compression_ratio": 1.5972850678733033, "no_speech_prob": 6.338681941997493e-06}, {"id": 102, "seek": 53556, "start": 549.4599999999999, "end": 554.8, "text": " So it's not just Dali 2 to be clear, there's a lot of different systems doing something", "tokens": [407, 309, 311, 406, 445, 413, 5103, 568, 281, 312, 1850, 11, 456, 311, 257, 688, 295, 819, 3652, 884, 746], "temperature": 0.0, "avg_logprob": -0.1260409587767066, "compression_ratio": 1.5972850678733033, "no_speech_prob": 6.338681941997493e-06}, {"id": 103, "seek": 53556, "start": 554.8, "end": 560.0, "text": " like this now, there's something called Mid Journey, which this Twitter account posted", "tokens": [411, 341, 586, 11, 456, 311, 746, 1219, 7033, 37724, 11, 597, 341, 5794, 2696, 9437], "temperature": 0.0, "avg_logprob": -0.1260409587767066, "compression_ratio": 1.5972850678733033, "no_speech_prob": 6.338681941997493e-06}, {"id": 104, "seek": 56000, "start": 560.0, "end": 566.24, "text": " a female scientist with a laptop writing code in a symbolic, meaningful and vibrant style.", "tokens": [257, 6556, 12662, 365, 257, 10732, 3579, 3089, 294, 257, 25755, 11, 10995, 293, 21571, 3758, 13], "temperature": 0.0, "avg_logprob": -0.1569546755622415, "compression_ratio": 1.5504587155963303, "no_speech_prob": 8.529011211066972e-06}, {"id": 105, "seek": 56000, "start": 566.24, "end": 572.36, "text": " This one here is an HD photo of a rare psychedelic pink elephant and this one I think is the", "tokens": [639, 472, 510, 307, 364, 12149, 5052, 295, 257, 5892, 47732, 299, 7022, 19791, 293, 341, 472, 286, 519, 307, 264], "temperature": 0.0, "avg_logprob": -0.1569546755622415, "compression_ratio": 1.5504587155963303, "no_speech_prob": 8.529011211066972e-06}, {"id": 106, "seek": 56000, "start": 572.36, "end": 573.36, "text": " second one here.", "tokens": [1150, 472, 510, 13], "temperature": 0.0, "avg_logprob": -0.1569546755622415, "compression_ratio": 1.5504587155963303, "no_speech_prob": 8.529011211066972e-06}, {"id": 107, "seek": 56000, "start": 573.36, "end": 578.92, "text": " I never know how to actually pronounce this.", "tokens": [286, 1128, 458, 577, 281, 767, 19567, 341, 13], "temperature": 0.0, "avg_logprob": -0.1569546755622415, "compression_ratio": 1.5504587155963303, "no_speech_prob": 8.529011211066972e-06}, {"id": 108, "seek": 56000, "start": 578.92, "end": 583.96, "text": " This one's pretty cool, a blind bat with big sunglasses holding a walking stick in its", "tokens": [639, 472, 311, 1238, 1627, 11, 257, 6865, 7362, 365, 955, 28675, 5061, 257, 4494, 2897, 294, 1080], "temperature": 0.0, "avg_logprob": -0.1569546755622415, "compression_ratio": 1.5504587155963303, "no_speech_prob": 8.529011211066972e-06}, {"id": 109, "seek": 56000, "start": 583.96, "end": 584.96, "text": " hand.", "tokens": [1011, 13], "temperature": 0.0, "avg_logprob": -0.1569546755622415, "compression_ratio": 1.5504587155963303, "no_speech_prob": 8.529011211066972e-06}, {"id": 110, "seek": 58496, "start": 584.96, "end": 593.12, "text": " And so when actual artists, you know, so this for example, this guy said he knows nothing", "tokens": [400, 370, 562, 3539, 6910, 11, 291, 458, 11, 370, 341, 337, 1365, 11, 341, 2146, 848, 415, 3255, 1825], "temperature": 0.0, "avg_logprob": -0.1583693592818742, "compression_ratio": 1.7136363636363636, "no_speech_prob": 6.5393733166274615e-06}, {"id": 111, "seek": 58496, "start": 593.12, "end": 596.5600000000001, "text": " about art, you know, he's got no artistic talent, it's just something you know he threw", "tokens": [466, 1523, 11, 291, 458, 11, 415, 311, 658, 572, 17090, 8301, 11, 309, 311, 445, 746, 291, 458, 415, 11918], "temperature": 0.0, "avg_logprob": -0.1583693592818742, "compression_ratio": 1.7136363636363636, "no_speech_prob": 6.5393733166274615e-06}, {"id": 112, "seek": 58496, "start": 596.5600000000001, "end": 597.72, "text": " together.", "tokens": [1214, 13], "temperature": 0.0, "avg_logprob": -0.1583693592818742, "compression_ratio": 1.7136363636363636, "no_speech_prob": 6.5393733166274615e-06}, {"id": 113, "seek": 58496, "start": 597.72, "end": 602.2, "text": " This guy is an artist who actually writes his own software based on deep learning and", "tokens": [639, 2146, 307, 364, 5748, 567, 767, 13657, 702, 1065, 4722, 2361, 322, 2452, 2539, 293], "temperature": 0.0, "avg_logprob": -0.1583693592818742, "compression_ratio": 1.7136363636363636, "no_speech_prob": 6.5393733166274615e-06}, {"id": 114, "seek": 58496, "start": 602.2, "end": 607.0, "text": " spends you know, months on building stuff and as you can see, you can really take it", "tokens": [25620, 291, 458, 11, 2493, 322, 2390, 1507, 293, 382, 291, 393, 536, 11, 291, 393, 534, 747, 309], "temperature": 0.0, "avg_logprob": -0.1583693592818742, "compression_ratio": 1.7136363636363636, "no_speech_prob": 6.5393733166274615e-06}, {"id": 115, "seek": 58496, "start": 607.0, "end": 609.2, "text": " to the next level.", "tokens": [281, 264, 958, 1496, 13], "temperature": 0.0, "avg_logprob": -0.1583693592818742, "compression_ratio": 1.7136363636363636, "no_speech_prob": 6.5393733166274615e-06}, {"id": 116, "seek": 60920, "start": 609.2, "end": 615.08, "text": " It's been really great actually to see how a lot of fast AI alumni with backgrounds as", "tokens": [467, 311, 668, 534, 869, 767, 281, 536, 577, 257, 688, 295, 2370, 7318, 16347, 365, 17336, 382], "temperature": 0.0, "avg_logprob": -0.1229774126639733, "compression_ratio": 1.5949820788530467, "no_speech_prob": 1.6692043573129922e-05}, {"id": 117, "seek": 60920, "start": 615.08, "end": 619.32, "text": " artists have gone on to bring deep learning and art together and it's a very exciting", "tokens": [6910, 362, 2780, 322, 281, 1565, 2452, 2539, 293, 1523, 1214, 293, 309, 311, 257, 588, 4670], "temperature": 0.0, "avg_logprob": -0.1229774126639733, "compression_ratio": 1.5949820788530467, "no_speech_prob": 1.6692043573129922e-05}, {"id": 118, "seek": 60920, "start": 619.32, "end": 620.32, "text": " direction.", "tokens": [3513, 13], "temperature": 0.0, "avg_logprob": -0.1229774126639733, "compression_ratio": 1.5949820788530467, "no_speech_prob": 1.6692043573129922e-05}, {"id": 119, "seek": 60920, "start": 620.32, "end": 625.84, "text": " And it's not just images to be clear, you know, another interesting thing that's popped", "tokens": [400, 309, 311, 406, 445, 5267, 281, 312, 1850, 11, 291, 458, 11, 1071, 1880, 551, 300, 311, 21545], "temperature": 0.0, "avg_logprob": -0.1229774126639733, "compression_ratio": 1.5949820788530467, "no_speech_prob": 1.6692043573129922e-05}, {"id": 120, "seek": 60920, "start": 625.84, "end": 632.1600000000001, "text": " up in the last couple of weeks is Google's Pathways Language Model, which can take any", "tokens": [493, 294, 264, 1036, 1916, 295, 3259, 307, 3329, 311, 21914, 942, 24445, 17105, 11, 597, 393, 747, 604], "temperature": 0.0, "avg_logprob": -0.1229774126639733, "compression_ratio": 1.5949820788530467, "no_speech_prob": 1.6692043573129922e-05}, {"id": 121, "seek": 60920, "start": 632.1600000000001, "end": 638.48, "text": " arbitrary English as text question and can create an answer which not only answers the", "tokens": [23211, 3669, 382, 2487, 1168, 293, 393, 1884, 364, 1867, 597, 406, 787, 6338, 264], "temperature": 0.0, "avg_logprob": -0.1229774126639733, "compression_ratio": 1.5949820788530467, "no_speech_prob": 1.6692043573129922e-05}, {"id": 122, "seek": 63848, "start": 638.48, "end": 647.84, "text": " question but also explains its thinking, whatever it means for a language model to be thinking.", "tokens": [1168, 457, 611, 13948, 1080, 1953, 11, 2035, 309, 1355, 337, 257, 2856, 2316, 281, 312, 1953, 13], "temperature": 0.0, "avg_logprob": -0.17374281980553452, "compression_ratio": 1.3868613138686132, "no_speech_prob": 6.232156465557637e-06}, {"id": 123, "seek": 63848, "start": 647.84, "end": 651.08, "text": " One of the ones I found pretty amazing was that it can explain a joke.", "tokens": [1485, 295, 264, 2306, 286, 1352, 1238, 2243, 390, 300, 309, 393, 2903, 257, 7647, 13], "temperature": 0.0, "avg_logprob": -0.17374281980553452, "compression_ratio": 1.3868613138686132, "no_speech_prob": 6.232156465557637e-06}, {"id": 124, "seek": 63848, "start": 651.08, "end": 667.6, "text": " I'll let you read this.", "tokens": [286, 603, 718, 291, 1401, 341, 13], "temperature": 0.0, "avg_logprob": -0.17374281980553452, "compression_ratio": 1.3868613138686132, "no_speech_prob": 6.232156465557637e-06}, {"id": 125, "seek": 66760, "start": 667.6, "end": 673.5600000000001, "text": " So this is actually a joke that probably needs explanations for anybody who's not familiar", "tokens": [407, 341, 307, 767, 257, 7647, 300, 1391, 2203, 28708, 337, 4472, 567, 311, 406, 4963], "temperature": 0.0, "avg_logprob": -0.1378514711246934, "compression_ratio": 1.508695652173913, "no_speech_prob": 7.293439921340905e-06}, {"id": 126, "seek": 66760, "start": 673.5600000000001, "end": 674.5600000000001, "text": " with TPUs.", "tokens": [365, 314, 8115, 82, 13], "temperature": 0.0, "avg_logprob": -0.1378514711246934, "compression_ratio": 1.508695652173913, "no_speech_prob": 7.293439921340905e-06}, {"id": 127, "seek": 66760, "start": 674.5600000000001, "end": 681.64, "text": " So this model just took the text as input and created this text as output.", "tokens": [407, 341, 2316, 445, 1890, 264, 2487, 382, 4846, 293, 2942, 341, 2487, 382, 5598, 13], "temperature": 0.0, "avg_logprob": -0.1378514711246934, "compression_ratio": 1.508695652173913, "no_speech_prob": 7.293439921340905e-06}, {"id": 128, "seek": 66760, "start": 681.64, "end": 687.72, "text": " And so you can see, you know, again, deep learning models doing things which I think", "tokens": [400, 370, 291, 393, 536, 11, 291, 458, 11, 797, 11, 2452, 2539, 5245, 884, 721, 597, 286, 519], "temperature": 0.0, "avg_logprob": -0.1378514711246934, "compression_ratio": 1.508695652173913, "no_speech_prob": 7.293439921340905e-06}, {"id": 129, "seek": 66760, "start": 687.72, "end": 692.52, "text": " very few, if any of us would have believed would be maybe possible to do by computers", "tokens": [588, 1326, 11, 498, 604, 295, 505, 576, 362, 7847, 576, 312, 1310, 1944, 281, 360, 538, 10807], "temperature": 0.0, "avg_logprob": -0.1378514711246934, "compression_ratio": 1.508695652173913, "no_speech_prob": 7.293439921340905e-06}, {"id": 130, "seek": 69252, "start": 692.52, "end": 697.8199999999999, "text": " even in our lifetime.", "tokens": [754, 294, 527, 11364, 13], "temperature": 0.0, "avg_logprob": -0.09561240077018737, "compression_ratio": 1.509433962264151, "no_speech_prob": 1.543750477139838e-05}, {"id": 131, "seek": 69252, "start": 697.8199999999999, "end": 705.0, "text": " This means that there is a lot of practical and ethical considerations.", "tokens": [639, 1355, 300, 456, 307, 257, 688, 295, 8496, 293, 18890, 24070, 13], "temperature": 0.0, "avg_logprob": -0.09561240077018737, "compression_ratio": 1.509433962264151, "no_speech_prob": 1.543750477139838e-05}, {"id": 132, "seek": 69252, "start": 705.0, "end": 710.24, "text": " We will touch on them during this course but can't possibly hope to do them justice.", "tokens": [492, 486, 2557, 322, 552, 1830, 341, 1164, 457, 393, 380, 6264, 1454, 281, 360, 552, 6118, 13], "temperature": 0.0, "avg_logprob": -0.09561240077018737, "compression_ratio": 1.509433962264151, "no_speech_prob": 1.543750477139838e-05}, {"id": 133, "seek": 69252, "start": 710.24, "end": 716.48, "text": " So I would certainly encourage you to check out ethics.fast.ai to see our whole data ethics", "tokens": [407, 286, 576, 3297, 5373, 291, 281, 1520, 484, 19769, 13, 7011, 13, 1301, 281, 536, 527, 1379, 1412, 19769], "temperature": 0.0, "avg_logprob": -0.09561240077018737, "compression_ratio": 1.509433962264151, "no_speech_prob": 1.543750477139838e-05}, {"id": 134, "seek": 69252, "start": 716.48, "end": 722.48, "text": " course taught by my co-founder Dr. Rachel Thomas.", "tokens": [1164, 5928, 538, 452, 598, 12, 33348, 2491, 13, 14246, 8500, 13], "temperature": 0.0, "avg_logprob": -0.09561240077018737, "compression_ratio": 1.509433962264151, "no_speech_prob": 1.543750477139838e-05}, {"id": 135, "seek": 72248, "start": 722.48, "end": 726.4, "text": " Which goes into these issues in a lot more detail.", "tokens": [3013, 1709, 666, 613, 2663, 294, 257, 688, 544, 2607, 13], "temperature": 0.0, "avg_logprob": -0.1641487345975988, "compression_ratio": 1.5119617224880382, "no_speech_prob": 4.467516191652976e-05}, {"id": 136, "seek": 72248, "start": 726.4, "end": 729.16, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.1641487345975988, "compression_ratio": 1.5119617224880382, "no_speech_prob": 4.467516191652976e-05}, {"id": 137, "seek": 72248, "start": 729.16, "end": 735.5600000000001, "text": " So as well as being an AI researcher at the University of Queensland and Fast.ai, I am", "tokens": [407, 382, 731, 382, 885, 364, 7318, 21751, 412, 264, 3535, 295, 36913, 293, 15968, 13, 1301, 11, 286, 669], "temperature": 0.0, "avg_logprob": -0.1641487345975988, "compression_ratio": 1.5119617224880382, "no_speech_prob": 4.467516191652976e-05}, {"id": 138, "seek": 72248, "start": 735.5600000000001, "end": 739.6800000000001, "text": " also a homeschooling primary school teacher.", "tokens": [611, 257, 7388, 21856, 278, 6194, 1395, 5027, 13], "temperature": 0.0, "avg_logprob": -0.1641487345975988, "compression_ratio": 1.5119617224880382, "no_speech_prob": 4.467516191652976e-05}, {"id": 139, "seek": 72248, "start": 739.6800000000001, "end": 743.44, "text": " And for that reason, I study education a lot.", "tokens": [400, 337, 300, 1778, 11, 286, 2979, 3309, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.1641487345975988, "compression_ratio": 1.5119617224880382, "no_speech_prob": 4.467516191652976e-05}, {"id": 140, "seek": 72248, "start": 743.44, "end": 748.72, "text": " And one of the people who I love in education is a guy named Dylan Williams.", "tokens": [400, 472, 295, 264, 561, 567, 286, 959, 294, 3309, 307, 257, 2146, 4926, 28160, 12929, 13], "temperature": 0.0, "avg_logprob": -0.1641487345975988, "compression_ratio": 1.5119617224880382, "no_speech_prob": 4.467516191652976e-05}, {"id": 141, "seek": 74872, "start": 748.72, "end": 753.0, "text": " And he has this great approach in his classrooms of figuring out how his students are getting", "tokens": [400, 415, 575, 341, 869, 3109, 294, 702, 22890, 295, 15213, 484, 577, 702, 1731, 366, 1242], "temperature": 0.0, "avg_logprob": -0.1104465274635805, "compression_ratio": 1.62890625, "no_speech_prob": 1.776321732904762e-05}, {"id": 142, "seek": 74872, "start": 753.0, "end": 757.5600000000001, "text": " along, which is to put a coloured cup on their desk.", "tokens": [2051, 11, 597, 307, 281, 829, 257, 42042, 4414, 322, 641, 10026, 13], "temperature": 0.0, "avg_logprob": -0.1104465274635805, "compression_ratio": 1.62890625, "no_speech_prob": 1.776321732904762e-05}, {"id": 143, "seek": 74872, "start": 757.5600000000001, "end": 760.4, "text": " Green to mean that they're doing fine.", "tokens": [6969, 281, 914, 300, 436, 434, 884, 2489, 13], "temperature": 0.0, "avg_logprob": -0.1104465274635805, "compression_ratio": 1.62890625, "no_speech_prob": 1.776321732904762e-05}, {"id": 144, "seek": 74872, "start": 760.4, "end": 766.32, "text": " Yellow cup to mean I'm not quite sure and a red cup to mean I have no idea what's going", "tokens": [17550, 4414, 281, 914, 286, 478, 406, 1596, 988, 293, 257, 2182, 4414, 281, 914, 286, 362, 572, 1558, 437, 311, 516], "temperature": 0.0, "avg_logprob": -0.1104465274635805, "compression_ratio": 1.62890625, "no_speech_prob": 1.776321732904762e-05}, {"id": 145, "seek": 74872, "start": 766.32, "end": 767.32, "text": " on.", "tokens": [322, 13], "temperature": 0.0, "avg_logprob": -0.1104465274635805, "compression_ratio": 1.62890625, "no_speech_prob": 1.776321732904762e-05}, {"id": 146, "seek": 74872, "start": 767.32, "end": 771.88, "text": " Now since most of you are watching this remotely, I can't look at your cups and I don't think", "tokens": [823, 1670, 881, 295, 291, 366, 1976, 341, 20824, 11, 286, 393, 380, 574, 412, 428, 13381, 293, 286, 500, 380, 519], "temperature": 0.0, "avg_logprob": -0.1104465274635805, "compression_ratio": 1.62890625, "no_speech_prob": 1.776321732904762e-05}, {"id": 147, "seek": 74872, "start": 771.88, "end": 774.12, "text": " anybody bought coloured cups with them today.", "tokens": [4472, 4243, 42042, 13381, 365, 552, 965, 13], "temperature": 0.0, "avg_logprob": -0.1104465274635805, "compression_ratio": 1.62890625, "no_speech_prob": 1.776321732904762e-05}, {"id": 148, "seek": 77412, "start": 774.12, "end": 779.36, "text": " So instead, we have an online version of this.", "tokens": [407, 2602, 11, 321, 362, 364, 2950, 3037, 295, 341, 13], "temperature": 0.0, "avg_logprob": -0.12049092685475069, "compression_ratio": 1.5543478260869565, "no_speech_prob": 6.943012522242498e-06}, {"id": 149, "seek": 77412, "start": 779.36, "end": 788.52, "text": " So what I want you to do is go to cups.fast.ai slash fast.", "tokens": [407, 437, 286, 528, 291, 281, 360, 307, 352, 281, 13381, 13, 7011, 13, 1301, 17330, 2370, 13], "temperature": 0.0, "avg_logprob": -0.12049092685475069, "compression_ratio": 1.5543478260869565, "no_speech_prob": 6.943012522242498e-06}, {"id": 150, "seek": 77412, "start": 788.52, "end": 793.12, "text": " That's cups.fast.ai slash fast.", "tokens": [663, 311, 13381, 13, 7011, 13, 1301, 17330, 2370, 13], "temperature": 0.0, "avg_logprob": -0.12049092685475069, "compression_ratio": 1.5543478260869565, "no_speech_prob": 6.943012522242498e-06}, {"id": 151, "seek": 77412, "start": 793.12, "end": 798.36, "text": " And don't do this if you're like a fast AI expert who's done the course five times because", "tokens": [400, 500, 380, 360, 341, 498, 291, 434, 411, 257, 2370, 7318, 5844, 567, 311, 1096, 264, 1164, 1732, 1413, 570], "temperature": 0.0, "avg_logprob": -0.12049092685475069, "compression_ratio": 1.5543478260869565, "no_speech_prob": 6.943012522242498e-06}, {"id": 152, "seek": 77412, "start": 798.36, "end": 800.64, "text": " if you're following along, that doesn't really mean much.", "tokens": [498, 291, 434, 3480, 2051, 11, 300, 1177, 380, 534, 914, 709, 13], "temperature": 0.0, "avg_logprob": -0.12049092685475069, "compression_ratio": 1.5543478260869565, "no_speech_prob": 6.943012522242498e-06}, {"id": 153, "seek": 80064, "start": 800.64, "end": 805.56, "text": " Obviously, this is really for people who are, you know, not already fast AI experts.", "tokens": [7580, 11, 341, 307, 534, 337, 561, 567, 366, 11, 291, 458, 11, 406, 1217, 2370, 7318, 8572, 13], "temperature": 0.0, "avg_logprob": -0.23102020180743674, "compression_ratio": 1.580188679245283, "no_speech_prob": 1.3389015293796547e-05}, {"id": 154, "seek": 80064, "start": 805.56, "end": 810.84, "text": " And so click one of these coloured buttons.", "tokens": [400, 370, 2052, 472, 295, 613, 42042, 9905, 13], "temperature": 0.0, "avg_logprob": -0.23102020180743674, "compression_ratio": 1.580188679245283, "no_speech_prob": 1.3389015293796547e-05}, {"id": 155, "seek": 80064, "start": 810.84, "end": 818.36, "text": " And what I will do is I will go to the teacher version and see what buttons you're pressing.", "tokens": [400, 437, 286, 486, 360, 307, 286, 486, 352, 281, 264, 5027, 3037, 293, 536, 437, 9905, 291, 434, 12417, 13], "temperature": 0.0, "avg_logprob": -0.23102020180743674, "compression_ratio": 1.580188679245283, "no_speech_prob": 1.3389015293796547e-05}, {"id": 156, "seek": 80064, "start": 818.36, "end": 822.56, "text": " Alright, so so far people are feeling we're not going too fast on the whole.", "tokens": [2798, 11, 370, 370, 1400, 561, 366, 2633, 321, 434, 406, 516, 886, 2370, 322, 264, 1379, 13], "temperature": 0.0, "avg_logprob": -0.23102020180743674, "compression_ratio": 1.580188679245283, "no_speech_prob": 1.3389015293796547e-05}, {"id": 157, "seek": 80064, "start": 822.56, "end": 825.52, "text": " We've got one, one brief read.", "tokens": [492, 600, 658, 472, 11, 472, 5353, 1401, 13], "temperature": 0.0, "avg_logprob": -0.23102020180743674, "compression_ratio": 1.580188679245283, "no_speech_prob": 1.3389015293796547e-05}, {"id": 158, "seek": 80064, "start": 825.52, "end": 826.52, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.23102020180743674, "compression_ratio": 1.580188679245283, "no_speech_prob": 1.3389015293796547e-05}, {"id": 159, "seek": 82652, "start": 826.52, "end": 832.76, "text": " So, hey, Nick, this this URL is the same thing with teacher on the end.", "tokens": [407, 11, 4177, 11, 9449, 11, 341, 341, 12905, 307, 264, 912, 551, 365, 5027, 322, 264, 917, 13], "temperature": 0.0, "avg_logprob": -0.1329589314980082, "compression_ratio": 1.5656108597285068, "no_speech_prob": 1.0103938620886765e-05}, {"id": 160, "seek": 82652, "start": 832.76, "end": 837.56, "text": " If you can you keep that open as well and let me know if it suddenly gets covered in", "tokens": [759, 291, 393, 291, 1066, 300, 1269, 382, 731, 293, 718, 385, 458, 498, 309, 5800, 2170, 5343, 294], "temperature": 0.0, "avg_logprob": -0.1329589314980082, "compression_ratio": 1.5656108597285068, "no_speech_prob": 1.0103938620886765e-05}, {"id": 161, "seek": 82652, "start": 837.56, "end": 840.1999999999999, "text": " red.", "tokens": [2182, 13], "temperature": 0.0, "avg_logprob": -0.1329589314980082, "compression_ratio": 1.5656108597285068, "no_speech_prob": 1.0103938620886765e-05}, {"id": 162, "seek": 82652, "start": 840.1999999999999, "end": 847.72, "text": " If you are somebody who's read, I'm not going to come to you now because there's not enough", "tokens": [759, 291, 366, 2618, 567, 311, 1401, 11, 286, 478, 406, 516, 281, 808, 281, 291, 586, 570, 456, 311, 406, 1547], "temperature": 0.0, "avg_logprob": -0.1329589314980082, "compression_ratio": 1.5656108597285068, "no_speech_prob": 1.0103938620886765e-05}, {"id": 163, "seek": 82652, "start": 847.72, "end": 848.8, "text": " of you to stop the class.", "tokens": [295, 291, 281, 1590, 264, 1508, 13], "temperature": 0.0, "avg_logprob": -0.1329589314980082, "compression_ratio": 1.5656108597285068, "no_speech_prob": 1.0103938620886765e-05}, {"id": 164, "seek": 82652, "start": 848.8, "end": 854.4399999999999, "text": " So it's up to you to ask on the forum or on the YouTube live chat.", "tokens": [407, 309, 311, 493, 281, 291, 281, 1029, 322, 264, 17542, 420, 322, 264, 3088, 1621, 5081, 13], "temperature": 0.0, "avg_logprob": -0.1329589314980082, "compression_ratio": 1.5656108597285068, "no_speech_prob": 1.0103938620886765e-05}, {"id": 165, "seek": 85444, "start": 854.44, "end": 859.2800000000001, "text": " And there's a lot of folks, luckily, who will be able to help you.", "tokens": [400, 456, 311, 257, 688, 295, 4024, 11, 22880, 11, 567, 486, 312, 1075, 281, 854, 291, 13], "temperature": 0.0, "avg_logprob": -0.18855632117035193, "compression_ratio": 1.5890410958904109, "no_speech_prob": 1.3193913218856324e-05}, {"id": 166, "seek": 85444, "start": 859.2800000000001, "end": 863.6, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.18855632117035193, "compression_ratio": 1.5890410958904109, "no_speech_prob": 1.3193913218856324e-05}, {"id": 167, "seek": 85444, "start": 863.6, "end": 866.32, "text": " I wanted to do a big shout out to Radek.", "tokens": [286, 1415, 281, 360, 257, 955, 8043, 484, 281, 497, 762, 74, 13], "temperature": 0.0, "avg_logprob": -0.18855632117035193, "compression_ratio": 1.5890410958904109, "no_speech_prob": 1.3193913218856324e-05}, {"id": 168, "seek": 85444, "start": 866.32, "end": 869.6400000000001, "text": " Radek created cups.fast.ai for me.", "tokens": [497, 762, 74, 2942, 13381, 13, 7011, 13, 1301, 337, 385, 13], "temperature": 0.0, "avg_logprob": -0.18855632117035193, "compression_ratio": 1.5890410958904109, "no_speech_prob": 1.3193913218856324e-05}, {"id": 169, "seek": 85444, "start": 869.6400000000001, "end": 873.7, "text": " I said to him last week, I need a way of seeing coloured cups on the internet.", "tokens": [286, 848, 281, 796, 1036, 1243, 11, 286, 643, 257, 636, 295, 2577, 42042, 13381, 322, 264, 4705, 13], "temperature": 0.0, "avg_logprob": -0.18855632117035193, "compression_ratio": 1.5890410958904109, "no_speech_prob": 1.3193913218856324e-05}, {"id": 170, "seek": 85444, "start": 873.7, "end": 879.22, "text": " And he wrote it in one evening.", "tokens": [400, 415, 4114, 309, 294, 472, 5634, 13], "temperature": 0.0, "avg_logprob": -0.18855632117035193, "compression_ratio": 1.5890410958904109, "no_speech_prob": 1.3193913218856324e-05}, {"id": 171, "seek": 85444, "start": 879.22, "end": 883.5200000000001, "text": " And I also wanted to shout out that Radek just announced today that he got a job at", "tokens": [400, 286, 611, 1415, 281, 8043, 484, 300, 497, 762, 74, 445, 7548, 965, 300, 415, 658, 257, 1691, 412], "temperature": 0.0, "avg_logprob": -0.18855632117035193, "compression_ratio": 1.5890410958904109, "no_speech_prob": 1.3193913218856324e-05}, {"id": 172, "seek": 88352, "start": 883.52, "end": 884.8, "text": " Nvidia AI.", "tokens": [46284, 7318, 13], "temperature": 0.0, "avg_logprob": -0.13459161122639973, "compression_ratio": 1.5564516129032258, "no_speech_prob": 1.3621634025184903e-05}, {"id": 173, "seek": 88352, "start": 884.8, "end": 891.24, "text": " And I wanted to say, you know, that fast AI alumni around the world very, very frequently,", "tokens": [400, 286, 1415, 281, 584, 11, 291, 458, 11, 300, 2370, 7318, 16347, 926, 264, 1002, 588, 11, 588, 10374, 11], "temperature": 0.0, "avg_logprob": -0.13459161122639973, "compression_ratio": 1.5564516129032258, "no_speech_prob": 1.3621634025184903e-05}, {"id": 174, "seek": 88352, "start": 891.24, "end": 897.16, "text": " like every day or two, email me to say that they've got their dream job.", "tokens": [411, 633, 786, 420, 732, 11, 3796, 385, 281, 584, 300, 436, 600, 658, 641, 3055, 1691, 13], "temperature": 0.0, "avg_logprob": -0.13459161122639973, "compression_ratio": 1.5564516129032258, "no_speech_prob": 1.3621634025184903e-05}, {"id": 175, "seek": 88352, "start": 897.16, "end": 903.8, "text": " And yeah, if you're looking for inspiration of how to get into the field, I couldn't recommend", "tokens": [400, 1338, 11, 498, 291, 434, 1237, 337, 10249, 295, 577, 281, 483, 666, 264, 2519, 11, 286, 2809, 380, 2748], "temperature": 0.0, "avg_logprob": -0.13459161122639973, "compression_ratio": 1.5564516129032258, "no_speech_prob": 1.3621634025184903e-05}, {"id": 176, "seek": 88352, "start": 903.8, "end": 905.56, "text": " nothing.", "tokens": [1825, 13], "temperature": 0.0, "avg_logprob": -0.13459161122639973, "compression_ratio": 1.5564516129032258, "no_speech_prob": 1.3621634025184903e-05}, {"id": 177, "seek": 88352, "start": 905.56, "end": 907.9399999999999, "text": " Nothing would be better than checking out Radek's work.", "tokens": [6693, 576, 312, 1101, 813, 8568, 484, 497, 762, 74, 311, 589, 13], "temperature": 0.0, "avg_logprob": -0.13459161122639973, "compression_ratio": 1.5564516129032258, "no_speech_prob": 1.3621634025184903e-05}, {"id": 178, "seek": 88352, "start": 907.9399999999999, "end": 910.52, "text": " And he's actually written a book about his journey.", "tokens": [400, 415, 311, 767, 3720, 257, 1446, 466, 702, 4671, 13], "temperature": 0.0, "avg_logprob": -0.13459161122639973, "compression_ratio": 1.5564516129032258, "no_speech_prob": 1.3621634025184903e-05}, {"id": 179, "seek": 91052, "start": 910.52, "end": 914.64, "text": " He's got a lot of tips in particular about how to take advantage of fast AI, make the", "tokens": [634, 311, 658, 257, 688, 295, 6082, 294, 1729, 466, 577, 281, 747, 5002, 295, 2370, 7318, 11, 652, 264], "temperature": 0.0, "avg_logprob": -0.1134535555253949, "compression_ratio": 1.60546875, "no_speech_prob": 2.3518296075053513e-05}, {"id": 180, "seek": 91052, "start": 914.64, "end": 916.24, "text": " most of these lessons.", "tokens": [881, 295, 613, 8820, 13], "temperature": 0.0, "avg_logprob": -0.1134535555253949, "compression_ratio": 1.60546875, "no_speech_prob": 2.3518296075053513e-05}, {"id": 181, "seek": 91052, "start": 916.24, "end": 919.04, "text": " And so I would certainly say check that out as well.", "tokens": [400, 370, 286, 576, 3297, 584, 1520, 300, 484, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.1134535555253949, "compression_ratio": 1.60546875, "no_speech_prob": 2.3518296075053513e-05}, {"id": 182, "seek": 91052, "start": 919.04, "end": 921.12, "text": " And if you're here live, he's one of our TAs as well.", "tokens": [400, 498, 291, 434, 510, 1621, 11, 415, 311, 472, 295, 527, 314, 10884, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.1134535555253949, "compression_ratio": 1.60546875, "no_speech_prob": 2.3518296075053513e-05}, {"id": 183, "seek": 91052, "start": 921.12, "end": 922.48, "text": " So you can say hello to him afterwards.", "tokens": [407, 291, 393, 584, 7751, 281, 796, 10543, 13], "temperature": 0.0, "avg_logprob": -0.1134535555253949, "compression_ratio": 1.60546875, "no_speech_prob": 2.3518296075053513e-05}, {"id": 184, "seek": 91052, "start": 922.48, "end": 928.4, "text": " He looks exactly like this picture here.", "tokens": [634, 1542, 2293, 411, 341, 3036, 510, 13], "temperature": 0.0, "avg_logprob": -0.1134535555253949, "compression_ratio": 1.60546875, "no_speech_prob": 2.3518296075053513e-05}, {"id": 185, "seek": 91052, "start": 928.4, "end": 934.1, "text": " So I mentioned I spent a lot of time studying education, both for my homeschooling duties", "tokens": [407, 286, 2835, 286, 4418, 257, 688, 295, 565, 7601, 3309, 11, 1293, 337, 452, 7388, 21856, 278, 20910], "temperature": 0.0, "avg_logprob": -0.1134535555253949, "compression_ratio": 1.60546875, "no_speech_prob": 2.3518296075053513e-05}, {"id": 186, "seek": 91052, "start": 934.1, "end": 936.86, "text": " and also for my courses.", "tokens": [293, 611, 337, 452, 7712, 13], "temperature": 0.0, "avg_logprob": -0.1134535555253949, "compression_ratio": 1.60546875, "no_speech_prob": 2.3518296075053513e-05}, {"id": 187, "seek": 93686, "start": 936.86, "end": 942.04, "text": " And you'll see that there's something a bit different, very different about this course,", "tokens": [400, 291, 603, 536, 300, 456, 311, 746, 257, 857, 819, 11, 588, 819, 466, 341, 1164, 11], "temperature": 0.0, "avg_logprob": -0.08253642766162603, "compression_ratio": 1.5627376425855513, "no_speech_prob": 9.365123332827352e-06}, {"id": 188, "seek": 93686, "start": 942.04, "end": 944.52, "text": " which is that we started by training a model.", "tokens": [597, 307, 300, 321, 1409, 538, 3097, 257, 2316, 13], "temperature": 0.0, "avg_logprob": -0.08253642766162603, "compression_ratio": 1.5627376425855513, "no_speech_prob": 9.365123332827352e-06}, {"id": 189, "seek": 93686, "start": 944.52, "end": 950.36, "text": " We didn't start by doing a in-depth review of linear algebra and calculus.", "tokens": [492, 994, 380, 722, 538, 884, 257, 294, 12, 25478, 3131, 295, 8213, 21989, 293, 33400, 13], "temperature": 0.0, "avg_logprob": -0.08253642766162603, "compression_ratio": 1.5627376425855513, "no_speech_prob": 9.365123332827352e-06}, {"id": 190, "seek": 93686, "start": 950.36, "end": 956.0, "text": " That's because two of my favorite writers and researchers on education, Paul Lockhart", "tokens": [663, 311, 570, 732, 295, 452, 2954, 13491, 293, 10309, 322, 3309, 11, 4552, 16736, 42535], "temperature": 0.0, "avg_logprob": -0.08253642766162603, "compression_ratio": 1.5627376425855513, "no_speech_prob": 9.365123332827352e-06}, {"id": 191, "seek": 93686, "start": 956.0, "end": 962.48, "text": " and David Perkins, and many others talk about how much better people learn when they learn", "tokens": [293, 4389, 3026, 10277, 11, 293, 867, 2357, 751, 466, 577, 709, 1101, 561, 1466, 562, 436, 1466], "temperature": 0.0, "avg_logprob": -0.08253642766162603, "compression_ratio": 1.5627376425855513, "no_speech_prob": 9.365123332827352e-06}, {"id": 192, "seek": 93686, "start": 962.48, "end": 965.6, "text": " with a context in place.", "tokens": [365, 257, 4319, 294, 1081, 13], "temperature": 0.0, "avg_logprob": -0.08253642766162603, "compression_ratio": 1.5627376425855513, "no_speech_prob": 9.365123332827352e-06}, {"id": 193, "seek": 96560, "start": 965.6, "end": 970.96, "text": " So the way we learn math at school where we do like counting and then adding and then", "tokens": [407, 264, 636, 321, 1466, 5221, 412, 1395, 689, 321, 360, 411, 13251, 293, 550, 5127, 293, 550], "temperature": 0.0, "avg_logprob": -0.14406429637562146, "compression_ratio": 1.8898678414096917, "no_speech_prob": 3.5555758586269803e-06}, {"id": 194, "seek": 96560, "start": 970.96, "end": 974.16, "text": " fractions and then decimals and then blah, blah, blah.", "tokens": [36058, 293, 550, 979, 332, 1124, 293, 550, 12288, 11, 12288, 11, 12288, 13], "temperature": 0.0, "avg_logprob": -0.14406429637562146, "compression_ratio": 1.8898678414096917, "no_speech_prob": 3.5555758586269803e-06}, {"id": 195, "seek": 96560, "start": 974.16, "end": 980.36, "text": " And 15 years later, we start doing the really interesting stuff at grad school.", "tokens": [400, 2119, 924, 1780, 11, 321, 722, 884, 264, 534, 1880, 1507, 412, 2771, 1395, 13], "temperature": 0.0, "avg_logprob": -0.14406429637562146, "compression_ratio": 1.8898678414096917, "no_speech_prob": 3.5555758586269803e-06}, {"id": 196, "seek": 96560, "start": 980.36, "end": 984.08, "text": " That is not the way most people learn effectively.", "tokens": [663, 307, 406, 264, 636, 881, 561, 1466, 8659, 13], "temperature": 0.0, "avg_logprob": -0.14406429637562146, "compression_ratio": 1.8898678414096917, "no_speech_prob": 3.5555758586269803e-06}, {"id": 197, "seek": 96560, "start": 984.08, "end": 990.3000000000001, "text": " The way most people learn effectively is from the way we teach sports, for example, where", "tokens": [440, 636, 881, 561, 1466, 8659, 307, 490, 264, 636, 321, 2924, 6573, 11, 337, 1365, 11, 689], "temperature": 0.0, "avg_logprob": -0.14406429637562146, "compression_ratio": 1.8898678414096917, "no_speech_prob": 3.5555758586269803e-06}, {"id": 198, "seek": 96560, "start": 990.3000000000001, "end": 992.84, "text": " we show you a whole game of sports.", "tokens": [321, 855, 291, 257, 1379, 1216, 295, 6573, 13], "temperature": 0.0, "avg_logprob": -0.14406429637562146, "compression_ratio": 1.8898678414096917, "no_speech_prob": 3.5555758586269803e-06}, {"id": 199, "seek": 96560, "start": 992.84, "end": 994.52, "text": " We show you how much fun it is.", "tokens": [492, 855, 291, 577, 709, 1019, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.14406429637562146, "compression_ratio": 1.8898678414096917, "no_speech_prob": 3.5555758586269803e-06}, {"id": 200, "seek": 99452, "start": 994.52, "end": 997.4, "text": " You go and start playing sports, simple versions of them.", "tokens": [509, 352, 293, 722, 2433, 6573, 11, 2199, 9606, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.1812352267178622, "compression_ratio": 1.5679012345679013, "no_speech_prob": 1.6536320117666037e-06}, {"id": 201, "seek": 99452, "start": 997.4, "end": 999.16, "text": " You're not very good, right?", "tokens": [509, 434, 406, 588, 665, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1812352267178622, "compression_ratio": 1.5679012345679013, "no_speech_prob": 1.6536320117666037e-06}, {"id": 202, "seek": 99452, "start": 999.16, "end": 1001.88, "text": " And then you gradually put more and more pieces together.", "tokens": [400, 550, 291, 13145, 829, 544, 293, 544, 3755, 1214, 13], "temperature": 0.0, "avg_logprob": -0.1812352267178622, "compression_ratio": 1.5679012345679013, "no_speech_prob": 1.6536320117666037e-06}, {"id": 203, "seek": 99452, "start": 1001.88, "end": 1004.52, "text": " So that's how we do deep learning.", "tokens": [407, 300, 311, 577, 321, 360, 2452, 2539, 13], "temperature": 0.0, "avg_logprob": -0.1812352267178622, "compression_ratio": 1.5679012345679013, "no_speech_prob": 1.6536320117666037e-06}, {"id": 204, "seek": 99452, "start": 1004.52, "end": 1013.64, "text": " You will go into as much depth as the most sophisticated, technically detailed classes", "tokens": [509, 486, 352, 666, 382, 709, 7161, 382, 264, 881, 16950, 11, 12120, 9942, 5359], "temperature": 0.0, "avg_logprob": -0.1812352267178622, "compression_ratio": 1.5679012345679013, "no_speech_prob": 1.6536320117666037e-06}, {"id": 205, "seek": 99452, "start": 1013.64, "end": 1016.48, "text": " you'll find later.", "tokens": [291, 603, 915, 1780, 13], "temperature": 0.0, "avg_logprob": -0.1812352267178622, "compression_ratio": 1.5679012345679013, "no_speech_prob": 1.6536320117666037e-06}, {"id": 206, "seek": 99452, "start": 1016.48, "end": 1018.0, "text": " Right?", "tokens": [1779, 30], "temperature": 0.0, "avg_logprob": -0.1812352267178622, "compression_ratio": 1.5679012345679013, "no_speech_prob": 1.6536320117666037e-06}, {"id": 207, "seek": 99452, "start": 1018.0, "end": 1024.12, "text": " But first, you'll learn to be very, very good at actually building and deploying models.", "tokens": [583, 700, 11, 291, 603, 1466, 281, 312, 588, 11, 588, 665, 412, 767, 2390, 293, 34198, 5245, 13], "temperature": 0.0, "avg_logprob": -0.1812352267178622, "compression_ratio": 1.5679012345679013, "no_speech_prob": 1.6536320117666037e-06}, {"id": 208, "seek": 102412, "start": 1024.12, "end": 1032.7199999999998, "text": " And you will learn why and how things work as you need to, to get to the next level.", "tokens": [400, 291, 486, 1466, 983, 293, 577, 721, 589, 382, 291, 643, 281, 11, 281, 483, 281, 264, 958, 1496, 13], "temperature": 0.0, "avg_logprob": -0.13612025783907983, "compression_ratio": 1.6655405405405406, "no_speech_prob": 7.295414434338454e-06}, {"id": 209, "seek": 102412, "start": 1032.7199999999998, "end": 1035.6, "text": " For those of you that have spent a lot of time in technical education, like if you've", "tokens": [1171, 729, 295, 291, 300, 362, 4418, 257, 688, 295, 565, 294, 6191, 3309, 11, 411, 498, 291, 600], "temperature": 0.0, "avg_logprob": -0.13612025783907983, "compression_ratio": 1.6655405405405406, "no_speech_prob": 7.295414434338454e-06}, {"id": 210, "seek": 102412, "start": 1035.6, "end": 1040.08, "text": " done a PhD or something, will find this deeply uncomfortable because you'll be wanting to", "tokens": [1096, 257, 14476, 420, 746, 11, 486, 915, 341, 8760, 10532, 570, 291, 603, 312, 7935, 281], "temperature": 0.0, "avg_logprob": -0.13612025783907983, "compression_ratio": 1.6655405405405406, "no_speech_prob": 7.295414434338454e-06}, {"id": 211, "seek": 102412, "start": 1040.08, "end": 1043.4799999999998, "text": " understand why everything works from the start.", "tokens": [1223, 983, 1203, 1985, 490, 264, 722, 13], "temperature": 0.0, "avg_logprob": -0.13612025783907983, "compression_ratio": 1.6655405405405406, "no_speech_prob": 7.295414434338454e-06}, {"id": 212, "seek": 102412, "start": 1043.4799999999998, "end": 1045.12, "text": " Just do your best to go along with it.", "tokens": [1449, 360, 428, 1151, 281, 352, 2051, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.13612025783907983, "compression_ratio": 1.6655405405405406, "no_speech_prob": 7.295414434338454e-06}, {"id": 213, "seek": 102412, "start": 1045.12, "end": 1047.8, "text": " Those of you who haven't will find this very natural.", "tokens": [3950, 295, 291, 567, 2378, 380, 486, 915, 341, 588, 3303, 13], "temperature": 0.0, "avg_logprob": -0.13612025783907983, "compression_ratio": 1.6655405405405406, "no_speech_prob": 7.295414434338454e-06}, {"id": 214, "seek": 102412, "start": 1047.8, "end": 1052.32, "text": " Oh, and this is Dylan Williams, who I mentioned before, the guy who came up with the really", "tokens": [876, 11, 293, 341, 307, 28160, 12929, 11, 567, 286, 2835, 949, 11, 264, 2146, 567, 1361, 493, 365, 264, 534], "temperature": 0.0, "avg_logprob": -0.13612025783907983, "compression_ratio": 1.6655405405405406, "no_speech_prob": 7.295414434338454e-06}, {"id": 215, "seek": 105232, "start": 1052.32, "end": 1054.72, "text": " cool cut scene.", "tokens": [1627, 1723, 4145, 13], "temperature": 0.0, "avg_logprob": -0.16372684998945755, "compression_ratio": 1.6333333333333333, "no_speech_prob": 1.0950157047773246e-05}, {"id": 216, "seek": 105232, "start": 1054.72, "end": 1061.28, "text": " There'll be a lot of tricks that have come out of the educational research literature", "tokens": [821, 603, 312, 257, 688, 295, 11733, 300, 362, 808, 484, 295, 264, 10189, 2132, 10394], "temperature": 0.0, "avg_logprob": -0.16372684998945755, "compression_ratio": 1.6333333333333333, "no_speech_prob": 1.0950157047773246e-05}, {"id": 217, "seek": 105232, "start": 1061.28, "end": 1062.6399999999999, "text": " scattered through this course.", "tokens": [21986, 807, 341, 1164, 13], "temperature": 0.0, "avg_logprob": -0.16372684998945755, "compression_ratio": 1.6333333333333333, "no_speech_prob": 1.0950157047773246e-05}, {"id": 218, "seek": 105232, "start": 1062.6399999999999, "end": 1063.84, "text": " On the whole, I won't call them out.", "tokens": [1282, 264, 1379, 11, 286, 1582, 380, 818, 552, 484, 13], "temperature": 0.0, "avg_logprob": -0.16372684998945755, "compression_ratio": 1.6333333333333333, "no_speech_prob": 1.0950157047773246e-05}, {"id": 219, "seek": 105232, "start": 1063.84, "end": 1064.84, "text": " They'll just be there.", "tokens": [814, 603, 445, 312, 456, 13], "temperature": 0.0, "avg_logprob": -0.16372684998945755, "compression_ratio": 1.6333333333333333, "no_speech_prob": 1.0950157047773246e-05}, {"id": 220, "seek": 105232, "start": 1064.84, "end": 1067.28, "text": " But maybe from time to time, we'll talk about them.", "tokens": [583, 1310, 490, 565, 281, 565, 11, 321, 603, 751, 466, 552, 13], "temperature": 0.0, "avg_logprob": -0.16372684998945755, "compression_ratio": 1.6333333333333333, "no_speech_prob": 1.0950157047773246e-05}, {"id": 221, "seek": 105232, "start": 1067.28, "end": 1068.4399999999998, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.16372684998945755, "compression_ratio": 1.6333333333333333, "no_speech_prob": 1.0950157047773246e-05}, {"id": 222, "seek": 105232, "start": 1068.4399999999998, "end": 1072.28, "text": " So before we start talking about how we actually built that model and how it works, I guess", "tokens": [407, 949, 321, 722, 1417, 466, 577, 321, 767, 3094, 300, 2316, 293, 577, 309, 1985, 11, 286, 2041], "temperature": 0.0, "avg_logprob": -0.16372684998945755, "compression_ratio": 1.6333333333333333, "no_speech_prob": 1.0950157047773246e-05}, {"id": 223, "seek": 105232, "start": 1072.28, "end": 1075.9199999999998, "text": " I should convince you that I'm worth listening to.", "tokens": [286, 820, 13447, 291, 300, 286, 478, 3163, 4764, 281, 13], "temperature": 0.0, "avg_logprob": -0.16372684998945755, "compression_ratio": 1.6333333333333333, "no_speech_prob": 1.0950157047773246e-05}, {"id": 224, "seek": 105232, "start": 1075.9199999999998, "end": 1081.24, "text": " I'll try to do that reasonably quickly because I don't like tooting my own horn, but I know", "tokens": [286, 603, 853, 281, 360, 300, 23551, 2661, 570, 286, 500, 380, 411, 281, 17001, 452, 1065, 13482, 11, 457, 286, 458], "temperature": 0.0, "avg_logprob": -0.16372684998945755, "compression_ratio": 1.6333333333333333, "no_speech_prob": 1.0950157047773246e-05}, {"id": 225, "seek": 108124, "start": 1081.24, "end": 1083.28, "text": " it's important.", "tokens": [309, 311, 1021, 13], "temperature": 0.0, "avg_logprob": -0.14396502829005575, "compression_ratio": 1.6313993174061434, "no_speech_prob": 6.7470650719769765e-06}, {"id": 226, "seek": 108124, "start": 1083.28, "end": 1087.1, "text": " So the first thing I mentioned about me is that me and my friend, Syong Vang, wrote this", "tokens": [407, 264, 700, 551, 286, 2835, 466, 385, 307, 300, 385, 293, 452, 1277, 11, 3902, 556, 691, 656, 11, 4114, 341], "temperature": 0.0, "avg_logprob": -0.14396502829005575, "compression_ratio": 1.6313993174061434, "no_speech_prob": 6.7470650719769765e-06}, {"id": 227, "seek": 108124, "start": 1087.1, "end": 1091.8, "text": " extremely popular book, Deep Learning for Coders, and that book is what this course", "tokens": [4664, 3743, 1446, 11, 14895, 15205, 337, 383, 378, 433, 11, 293, 300, 1446, 307, 437, 341, 1164], "temperature": 0.0, "avg_logprob": -0.14396502829005575, "compression_ratio": 1.6313993174061434, "no_speech_prob": 6.7470650719769765e-06}, {"id": 228, "seek": 108124, "start": 1091.8, "end": 1093.48, "text": " is quite heavily based on.", "tokens": [307, 1596, 10950, 2361, 322, 13], "temperature": 0.0, "avg_logprob": -0.14396502829005575, "compression_ratio": 1.6313993174061434, "no_speech_prob": 6.7470650719769765e-06}, {"id": 229, "seek": 108124, "start": 1093.48, "end": 1098.92, "text": " We're not going to be using any material from the book directly, and you might be surprised", "tokens": [492, 434, 406, 516, 281, 312, 1228, 604, 2527, 490, 264, 1446, 3838, 11, 293, 291, 1062, 312, 6100], "temperature": 0.0, "avg_logprob": -0.14396502829005575, "compression_ratio": 1.6313993174061434, "no_speech_prob": 6.7470650719769765e-06}, {"id": 230, "seek": 108124, "start": 1098.92, "end": 1099.92, "text": " by that.", "tokens": [538, 300, 13], "temperature": 0.0, "avg_logprob": -0.14396502829005575, "compression_ratio": 1.6313993174061434, "no_speech_prob": 6.7470650719769765e-06}, {"id": 231, "seek": 108124, "start": 1099.92, "end": 1104.44, "text": " But the reason actually is that the educational research literature shows that people learn", "tokens": [583, 264, 1778, 767, 307, 300, 264, 10189, 2132, 10394, 3110, 300, 561, 1466], "temperature": 0.0, "avg_logprob": -0.14396502829005575, "compression_ratio": 1.6313993174061434, "no_speech_prob": 6.7470650719769765e-06}, {"id": 232, "seek": 108124, "start": 1104.44, "end": 1108.52, "text": " things best when they hear the same thing in multiple different ways.", "tokens": [721, 1151, 562, 436, 1568, 264, 912, 551, 294, 3866, 819, 2098, 13], "temperature": 0.0, "avg_logprob": -0.14396502829005575, "compression_ratio": 1.6313993174061434, "no_speech_prob": 6.7470650719769765e-06}, {"id": 233, "seek": 110852, "start": 1108.52, "end": 1113.8799999999999, "text": " So I want you to read the book, and you'll also see the same information presented in", "tokens": [407, 286, 528, 291, 281, 1401, 264, 1446, 11, 293, 291, 603, 611, 536, 264, 912, 1589, 8212, 294], "temperature": 0.0, "avg_logprob": -0.18456375264675817, "compression_ratio": 1.6265560165975104, "no_speech_prob": 6.437070169340586e-06}, {"id": 234, "seek": 110852, "start": 1113.8799999999999, "end": 1116.96, "text": " a different way in these videos.", "tokens": [257, 819, 636, 294, 613, 2145, 13], "temperature": 0.0, "avg_logprob": -0.18456375264675817, "compression_ratio": 1.6265560165975104, "no_speech_prob": 6.437070169340586e-06}, {"id": 235, "seek": 110852, "start": 1116.96, "end": 1123.24, "text": " So one of the bits of homework after each lesson will be to read a chapter of the book.", "tokens": [407, 472, 295, 264, 9239, 295, 14578, 934, 1184, 6898, 486, 312, 281, 1401, 257, 7187, 295, 264, 1446, 13], "temperature": 0.0, "avg_logprob": -0.18456375264675817, "compression_ratio": 1.6265560165975104, "no_speech_prob": 6.437070169340586e-06}, {"id": 236, "seek": 110852, "start": 1123.24, "end": 1126.0, "text": " A lot of people like the book.", "tokens": [316, 688, 295, 561, 411, 264, 1446, 13], "temperature": 0.0, "avg_logprob": -0.18456375264675817, "compression_ratio": 1.6265560165975104, "no_speech_prob": 6.437070169340586e-06}, {"id": 237, "seek": 110852, "start": 1126.0, "end": 1127.92, "text": " Peter Norvig, director of research, loves the book.", "tokens": [6508, 6966, 85, 328, 11, 5391, 295, 2132, 11, 6752, 264, 1446, 13], "temperature": 0.0, "avg_logprob": -0.18456375264675817, "compression_ratio": 1.6265560165975104, "no_speech_prob": 6.437070169340586e-06}, {"id": 238, "seek": 110852, "start": 1127.92, "end": 1129.82, "text": " In fact, this one's here.", "tokens": [682, 1186, 11, 341, 472, 311, 510, 13], "temperature": 0.0, "avg_logprob": -0.18456375264675817, "compression_ratio": 1.6265560165975104, "no_speech_prob": 6.437070169340586e-06}, {"id": 239, "seek": 110852, "start": 1129.82, "end": 1135.72, "text": " One of the best sources for a program to become proficient in deep learning.", "tokens": [1485, 295, 264, 1151, 7139, 337, 257, 1461, 281, 1813, 1740, 24549, 294, 2452, 2539, 13], "temperature": 0.0, "avg_logprob": -0.18456375264675817, "compression_ratio": 1.6265560165975104, "no_speech_prob": 6.437070169340586e-06}, {"id": 240, "seek": 113572, "start": 1135.72, "end": 1139.4, "text": " Topol loves the book, Hal Varian, emeritus professor at Berkeley, chief economist at", "tokens": [8840, 401, 6752, 264, 1446, 11, 13896, 691, 10652, 11, 4345, 30973, 8304, 412, 23684, 11, 9588, 36696, 412], "temperature": 0.0, "avg_logprob": -0.21559883667542054, "compression_ratio": 1.608695652173913, "no_speech_prob": 1.3003818821744062e-05}, {"id": 241, "seek": 113572, "start": 1139.4, "end": 1140.8, "text": " Google likes the book.", "tokens": [3329, 5902, 264, 1446, 13], "temperature": 0.0, "avg_logprob": -0.21559883667542054, "compression_ratio": 1.608695652173913, "no_speech_prob": 1.3003818821744062e-05}, {"id": 242, "seek": 113572, "start": 1140.8, "end": 1145.56, "text": " Jerome Pesenti, who is the head of AI at Facebook, likes the book.", "tokens": [44965, 430, 279, 23012, 11, 567, 307, 264, 1378, 295, 7318, 412, 4384, 11, 5902, 264, 1446, 13], "temperature": 0.0, "avg_logprob": -0.21559883667542054, "compression_ratio": 1.608695652173913, "no_speech_prob": 1.3003818821744062e-05}, {"id": 243, "seek": 113572, "start": 1145.56, "end": 1146.8, "text": " A lot of people like the book.", "tokens": [316, 688, 295, 561, 411, 264, 1446, 13], "temperature": 0.0, "avg_logprob": -0.21559883667542054, "compression_ratio": 1.608695652173913, "no_speech_prob": 1.3003818821744062e-05}, {"id": 244, "seek": 113572, "start": 1146.8, "end": 1153.24, "text": " So hopefully you'll find that you like this material as well.", "tokens": [407, 4696, 291, 603, 915, 300, 291, 411, 341, 2527, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.21559883667542054, "compression_ratio": 1.608695652173913, "no_speech_prob": 1.3003818821744062e-05}, {"id": 245, "seek": 113572, "start": 1153.24, "end": 1158.24, "text": " I've spent about 30 years of my life working in and around machine learning, including", "tokens": [286, 600, 4418, 466, 2217, 924, 295, 452, 993, 1364, 294, 293, 926, 3479, 2539, 11, 3009], "temperature": 0.0, "avg_logprob": -0.21559883667542054, "compression_ratio": 1.608695652173913, "no_speech_prob": 1.3003818821744062e-05}, {"id": 246, "seek": 113572, "start": 1158.24, "end": 1164.56, "text": " building a number of companies that relied on it and became the highest ranked competitor", "tokens": [2390, 257, 1230, 295, 3431, 300, 35463, 322, 309, 293, 3062, 264, 6343, 20197, 27266], "temperature": 0.0, "avg_logprob": -0.21559883667542054, "compression_ratio": 1.608695652173913, "no_speech_prob": 1.3003818821744062e-05}, {"id": 247, "seek": 116456, "start": 1164.56, "end": 1169.6, "text": " in the world on Kaggle in machine learning competitions.", "tokens": [294, 264, 1002, 322, 48751, 22631, 294, 3479, 2539, 26185, 13], "temperature": 0.0, "avg_logprob": -0.14584723184275072, "compression_ratio": 1.4612068965517242, "no_speech_prob": 4.466611426323652e-05}, {"id": 248, "seek": 116456, "start": 1169.6, "end": 1174.1599999999999, "text": " My company in Lidic, which I founded, was the first company to specialize in deep learning", "tokens": [1222, 2237, 294, 441, 327, 299, 11, 597, 286, 13234, 11, 390, 264, 700, 2237, 281, 37938, 294, 2452, 2539], "temperature": 0.0, "avg_logprob": -0.14584723184275072, "compression_ratio": 1.4612068965517242, "no_speech_prob": 4.466611426323652e-05}, {"id": 249, "seek": 116456, "start": 1174.1599999999999, "end": 1175.72, "text": " for medicine.", "tokens": [337, 7195, 13], "temperature": 0.0, "avg_logprob": -0.14584723184275072, "compression_ratio": 1.4612068965517242, "no_speech_prob": 4.466611426323652e-05}, {"id": 250, "seek": 116456, "start": 1175.72, "end": 1184.32, "text": " And MIT voted at one of the 50 smartest companies in 2016, just above Facebook and SpaceX.", "tokens": [400, 13100, 13415, 412, 472, 295, 264, 2625, 41491, 3431, 294, 6549, 11, 445, 3673, 4384, 293, 30585, 13], "temperature": 0.0, "avg_logprob": -0.14584723184275072, "compression_ratio": 1.4612068965517242, "no_speech_prob": 4.466611426323652e-05}, {"id": 251, "seek": 116456, "start": 1184.32, "end": 1190.6799999999998, "text": " I started Fast AI with Rachel Thomas, and that was quite a few years ago now, but it's", "tokens": [286, 1409, 15968, 7318, 365, 14246, 8500, 11, 293, 300, 390, 1596, 257, 1326, 924, 2057, 586, 11, 457, 309, 311], "temperature": 0.0, "avg_logprob": -0.14584723184275072, "compression_ratio": 1.4612068965517242, "no_speech_prob": 4.466611426323652e-05}, {"id": 252, "seek": 119068, "start": 1190.68, "end": 1195.8400000000001, "text": " had a big impact on the world already.", "tokens": [632, 257, 955, 2712, 322, 264, 1002, 1217, 13], "temperature": 0.0, "avg_logprob": -0.14978111151492957, "compression_ratio": 1.5519125683060109, "no_speech_prob": 2.177578971895855e-05}, {"id": 253, "seek": 119068, "start": 1195.8400000000001, "end": 1201.2, "text": " Including work we've done with our students has been globally recognized, such as our", "tokens": [27137, 589, 321, 600, 1096, 365, 527, 1731, 575, 668, 18958, 9823, 11, 1270, 382, 527], "temperature": 0.0, "avg_logprob": -0.14978111151492957, "compression_ratio": 1.5519125683060109, "no_speech_prob": 2.177578971895855e-05}, {"id": 254, "seek": 119068, "start": 1201.2, "end": 1208.3200000000002, "text": " Wind in the Dawn Bench competition, which showed how we could train big neural networks", "tokens": [6320, 294, 264, 26001, 3964, 339, 6211, 11, 597, 4712, 577, 321, 727, 3847, 955, 18161, 9590], "temperature": 0.0, "avg_logprob": -0.14978111151492957, "compression_ratio": 1.5519125683060109, "no_speech_prob": 2.177578971895855e-05}, {"id": 255, "seek": 119068, "start": 1208.3200000000002, "end": 1213.92, "text": " faster than anybody in the world and cheaper than anybody in the world.", "tokens": [4663, 813, 4472, 294, 264, 1002, 293, 12284, 813, 4472, 294, 264, 1002, 13], "temperature": 0.0, "avg_logprob": -0.14978111151492957, "compression_ratio": 1.5519125683060109, "no_speech_prob": 2.177578971895855e-05}, {"id": 256, "seek": 121392, "start": 1213.92, "end": 1220.64, "text": " And so that was a really big step in 2018, which actually made a big difference.", "tokens": [400, 370, 300, 390, 257, 534, 955, 1823, 294, 6096, 11, 597, 767, 1027, 257, 955, 2649, 13], "temperature": 0.0, "avg_logprob": -0.15312570180648413, "compression_ratio": 1.5714285714285714, "no_speech_prob": 8.265130418294575e-06}, {"id": 257, "seek": 121392, "start": 1220.64, "end": 1225.96, "text": " Google started using our special approaches in their models.", "tokens": [3329, 1409, 1228, 527, 2121, 11587, 294, 641, 5245, 13], "temperature": 0.0, "avg_logprob": -0.15312570180648413, "compression_ratio": 1.5714285714285714, "no_speech_prob": 8.265130418294575e-06}, {"id": 258, "seek": 121392, "start": 1225.96, "end": 1232.4, "text": " Nvidia started optimizing their stuff using our approaches, so it made quite a big difference", "tokens": [46284, 1409, 40425, 641, 1507, 1228, 527, 11587, 11, 370, 309, 1027, 1596, 257, 955, 2649], "temperature": 0.0, "avg_logprob": -0.15312570180648413, "compression_ratio": 1.5714285714285714, "no_speech_prob": 8.265130418294575e-06}, {"id": 259, "seek": 121392, "start": 1232.4, "end": 1234.4, "text": " there.", "tokens": [456, 13], "temperature": 0.0, "avg_logprob": -0.15312570180648413, "compression_ratio": 1.5714285714285714, "no_speech_prob": 8.265130418294575e-06}, {"id": 260, "seek": 121392, "start": 1234.4, "end": 1238.8400000000001, "text": " I'm the inventor of the ULM fit algorithm, which according to the Transformers book was", "tokens": [286, 478, 264, 41593, 295, 264, 624, 43, 44, 3318, 9284, 11, 597, 4650, 281, 264, 27938, 433, 1446, 390], "temperature": 0.0, "avg_logprob": -0.15312570180648413, "compression_ratio": 1.5714285714285714, "no_speech_prob": 8.265130418294575e-06}, {"id": 261, "seek": 123884, "start": 1238.84, "end": 1246.84, "text": " one of the two key foundations behind the modern NLP revolution.", "tokens": [472, 295, 264, 732, 2141, 22467, 2261, 264, 4363, 426, 45196, 8894, 13], "temperature": 0.0, "avg_logprob": -0.13714693509615383, "compression_ratio": 1.5402298850574712, "no_speech_prob": 8.138899829646107e-06}, {"id": 262, "seek": 123884, "start": 1246.84, "end": 1251.04, "text": " This is the paper here.", "tokens": [639, 307, 264, 3035, 510, 13], "temperature": 0.0, "avg_logprob": -0.13714693509615383, "compression_ratio": 1.5402298850574712, "no_speech_prob": 8.138899829646107e-06}, {"id": 263, "seek": 123884, "start": 1251.04, "end": 1258.52, "text": " And actually, interesting point about that, it was actually invented for a Fast AI course.", "tokens": [400, 767, 11, 1880, 935, 466, 300, 11, 309, 390, 767, 14479, 337, 257, 15968, 7318, 1164, 13], "temperature": 0.0, "avg_logprob": -0.13714693509615383, "compression_ratio": 1.5402298850574712, "no_speech_prob": 8.138899829646107e-06}, {"id": 264, "seek": 123884, "start": 1258.52, "end": 1266.8, "text": " So the first time it appeared was not actually in the journal, it was actually in lesson", "tokens": [407, 264, 700, 565, 309, 8516, 390, 406, 767, 294, 264, 6708, 11, 309, 390, 767, 294, 6898], "temperature": 0.0, "avg_logprob": -0.13714693509615383, "compression_ratio": 1.5402298850574712, "no_speech_prob": 8.138899829646107e-06}, {"id": 265, "seek": 126680, "start": 1266.8, "end": 1275.68, "text": " four of the course, I think the 2016 course, if I remember correctly.", "tokens": [1451, 295, 264, 1164, 11, 286, 519, 264, 6549, 1164, 11, 498, 286, 1604, 8944, 13], "temperature": 0.0, "avg_logprob": -0.22354816709245953, "compression_ratio": 1.542857142857143, "no_speech_prob": 3.5904700780520216e-05}, {"id": 266, "seek": 126680, "start": 1275.68, "end": 1281.8799999999999, "text": " And most importantly, of course, I've been teaching this course since version one.", "tokens": [400, 881, 8906, 11, 295, 1164, 11, 286, 600, 668, 4571, 341, 1164, 1670, 3037, 472, 13], "temperature": 0.0, "avg_logprob": -0.22354816709245953, "compression_ratio": 1.542857142857143, "no_speech_prob": 3.5904700780520216e-05}, {"id": 267, "seek": 126680, "start": 1281.8799999999999, "end": 1286.04, "text": " And this is actually, I think this is the very first version of it, which even back", "tokens": [400, 341, 307, 767, 11, 286, 519, 341, 307, 264, 588, 700, 3037, 295, 309, 11, 597, 754, 646], "temperature": 0.0, "avg_logprob": -0.22354816709245953, "compression_ratio": 1.542857142857143, "no_speech_prob": 3.5904700780520216e-05}, {"id": 268, "seek": 126680, "start": 1286.04, "end": 1288.72, "text": " then was getting HPR's attention.", "tokens": [550, 390, 1242, 12557, 49, 311, 3202, 13], "temperature": 0.0, "avg_logprob": -0.22354816709245953, "compression_ratio": 1.542857142857143, "no_speech_prob": 3.5904700780520216e-05}, {"id": 269, "seek": 128872, "start": 1288.72, "end": 1297.2, "text": " A lot of people have been watching the course and it's been really widely used.", "tokens": [316, 688, 295, 561, 362, 668, 1976, 264, 1164, 293, 309, 311, 668, 534, 13371, 1143, 13], "temperature": 0.0, "avg_logprob": -0.12812941305098996, "compression_ratio": 1.5182926829268293, "no_speech_prob": 1.473511292715557e-05}, {"id": 270, "seek": 128872, "start": 1297.2, "end": 1302.8, "text": " YouTube doesn't show likes anymore, so I have to show you our likes for you.", "tokens": [3088, 1177, 380, 855, 5902, 3602, 11, 370, 286, 362, 281, 855, 291, 527, 5902, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.12812941305098996, "compression_ratio": 1.5182926829268293, "no_speech_prob": 1.473511292715557e-05}, {"id": 271, "seek": 128872, "start": 1302.8, "end": 1318.04, "text": " It's been amazing to see how many alumni have gone from this to really doing amazing things.", "tokens": [467, 311, 668, 2243, 281, 536, 577, 867, 16347, 362, 2780, 490, 341, 281, 534, 884, 2243, 721, 13], "temperature": 0.0, "avg_logprob": -0.12812941305098996, "compression_ratio": 1.5182926829268293, "no_speech_prob": 1.473511292715557e-05}, {"id": 272, "seek": 131804, "start": 1318.04, "end": 1321.94, "text": " So for example, Andre Capati told me that Tesla, I think he said pretty much everybody", "tokens": [407, 337, 1365, 11, 20667, 8363, 6908, 1907, 385, 300, 13666, 11, 286, 519, 415, 848, 1238, 709, 2201], "temperature": 0.0, "avg_logprob": -0.17619289051402698, "compression_ratio": 1.6450381679389312, "no_speech_prob": 1.7771290004020557e-05}, {"id": 273, "seek": 131804, "start": 1321.94, "end": 1325.32, "text": " who joins Tesla in AI is meant to do this course.", "tokens": [567, 24397, 13666, 294, 7318, 307, 4140, 281, 360, 341, 1164, 13], "temperature": 0.0, "avg_logprob": -0.17619289051402698, "compression_ratio": 1.6450381679389312, "no_speech_prob": 1.7771290004020557e-05}, {"id": 274, "seek": 131804, "start": 1325.32, "end": 1329.8799999999999, "text": " I believe at OpenAI, they told me that all the residents joining there first do this", "tokens": [286, 1697, 412, 7238, 48698, 11, 436, 1907, 385, 300, 439, 264, 9630, 5549, 456, 700, 360, 341], "temperature": 0.0, "avg_logprob": -0.17619289051402698, "compression_ratio": 1.6450381679389312, "no_speech_prob": 1.7771290004020557e-05}, {"id": 275, "seek": 131804, "start": 1329.8799999999999, "end": 1330.8799999999999, "text": " course.", "tokens": [1164, 13], "temperature": 0.0, "avg_logprob": -0.17619289051402698, "compression_ratio": 1.6450381679389312, "no_speech_prob": 1.7771290004020557e-05}, {"id": 276, "seek": 131804, "start": 1330.8799999999999, "end": 1337.36, "text": " So this course is really widely used in industry and research for people and they have a lot", "tokens": [407, 341, 1164, 307, 534, 13371, 1143, 294, 3518, 293, 2132, 337, 561, 293, 436, 362, 257, 688], "temperature": 0.0, "avg_logprob": -0.17619289051402698, "compression_ratio": 1.6450381679389312, "no_speech_prob": 1.7771290004020557e-05}, {"id": 277, "seek": 131804, "start": 1337.36, "end": 1338.36, "text": " of success.", "tokens": [295, 2245, 13], "temperature": 0.0, "avg_logprob": -0.17619289051402698, "compression_ratio": 1.6450381679389312, "no_speech_prob": 1.7771290004020557e-05}, {"id": 278, "seek": 131804, "start": 1338.36, "end": 1344.32, "text": " Okay, so there's a bit of brief information about why you should hopefully keep going", "tokens": [1033, 11, 370, 456, 311, 257, 857, 295, 5353, 1589, 466, 983, 291, 820, 4696, 1066, 516], "temperature": 0.0, "avg_logprob": -0.17619289051402698, "compression_ratio": 1.6450381679389312, "no_speech_prob": 1.7771290004020557e-05}, {"id": 279, "seek": 131804, "start": 1344.32, "end": 1345.32, "text": " with this.", "tokens": [365, 341, 13], "temperature": 0.0, "avg_logprob": -0.17619289051402698, "compression_ratio": 1.6450381679389312, "no_speech_prob": 1.7771290004020557e-05}, {"id": 280, "seek": 134532, "start": 1345.32, "end": 1348.96, "text": " All right, so let's get back to what's happened here.", "tokens": [1057, 558, 11, 370, 718, 311, 483, 646, 281, 437, 311, 2011, 510, 13], "temperature": 0.0, "avg_logprob": -0.11825913968293564, "compression_ratio": 1.471698113207547, "no_speech_prob": 1.7774296793504618e-05}, {"id": 281, "seek": 134532, "start": 1348.96, "end": 1356.52, "text": " Why are we able to create a bird recognizer in a minute or two?", "tokens": [1545, 366, 321, 1075, 281, 1884, 257, 5255, 3068, 6545, 294, 257, 3456, 420, 732, 30], "temperature": 0.0, "avg_logprob": -0.11825913968293564, "compression_ratio": 1.471698113207547, "no_speech_prob": 1.7774296793504618e-05}, {"id": 282, "seek": 134532, "start": 1356.52, "end": 1359.1, "text": " And why couldn't we do it before?", "tokens": [400, 983, 2809, 380, 321, 360, 309, 949, 30], "temperature": 0.0, "avg_logprob": -0.11825913968293564, "compression_ratio": 1.471698113207547, "no_speech_prob": 1.7774296793504618e-05}, {"id": 283, "seek": 134532, "start": 1359.1, "end": 1361.6799999999998, "text": " So I'm going to go back to 2012.", "tokens": [407, 286, 478, 516, 281, 352, 646, 281, 9125, 13], "temperature": 0.0, "avg_logprob": -0.11825913968293564, "compression_ratio": 1.471698113207547, "no_speech_prob": 1.7774296793504618e-05}, {"id": 284, "seek": 134532, "start": 1361.6799999999998, "end": 1366.3999999999999, "text": " And in 2012, this was how image recognition was done.", "tokens": [400, 294, 9125, 11, 341, 390, 577, 3256, 11150, 390, 1096, 13], "temperature": 0.0, "avg_logprob": -0.11825913968293564, "compression_ratio": 1.471698113207547, "no_speech_prob": 1.7774296793504618e-05}, {"id": 285, "seek": 134532, "start": 1366.3999999999999, "end": 1369.6399999999999, "text": " This is the computational pathologist.", "tokens": [639, 307, 264, 28270, 3100, 9201, 13], "temperature": 0.0, "avg_logprob": -0.11825913968293564, "compression_ratio": 1.471698113207547, "no_speech_prob": 1.7774296793504618e-05}, {"id": 286, "seek": 134532, "start": 1369.6399999999999, "end": 1373.28, "text": " It was a project done at Stanford.", "tokens": [467, 390, 257, 1716, 1096, 412, 20374, 13], "temperature": 0.0, "avg_logprob": -0.11825913968293564, "compression_ratio": 1.471698113207547, "no_speech_prob": 1.7774296793504618e-05}, {"id": 287, "seek": 137328, "start": 1373.28, "end": 1379.52, "text": " Very successful, very famous project that was looking at the five-year survival of breast", "tokens": [4372, 4406, 11, 588, 4618, 1716, 300, 390, 1237, 412, 264, 1732, 12, 5294, 12559, 295, 9934], "temperature": 0.0, "avg_logprob": -0.17115934904631194, "compression_ratio": 1.669172932330827, "no_speech_prob": 2.1109561203047633e-05}, {"id": 288, "seek": 137328, "start": 1379.52, "end": 1385.52, "text": " cancer patients by looking at their histopathology images slides.", "tokens": [5592, 4209, 538, 1237, 412, 641, 1758, 27212, 1793, 5267, 9788, 13], "temperature": 0.0, "avg_logprob": -0.17115934904631194, "compression_ratio": 1.669172932330827, "no_speech_prob": 2.1109561203047633e-05}, {"id": 289, "seek": 137328, "start": 1385.52, "end": 1389.76, "text": " So this is what I would call a classic machine learning approach.", "tokens": [407, 341, 307, 437, 286, 576, 818, 257, 7230, 3479, 2539, 3109, 13], "temperature": 0.0, "avg_logprob": -0.17115934904631194, "compression_ratio": 1.669172932330827, "no_speech_prob": 2.1109561203047633e-05}, {"id": 290, "seek": 137328, "start": 1389.76, "end": 1394.3, "text": " And I spoke to the senior author of this, Daphne Koller, and I asked her why they didn't", "tokens": [400, 286, 7179, 281, 264, 7965, 3793, 295, 341, 11, 413, 13957, 716, 11621, 260, 11, 293, 286, 2351, 720, 983, 436, 994, 380], "temperature": 0.0, "avg_logprob": -0.17115934904631194, "compression_ratio": 1.669172932330827, "no_speech_prob": 2.1109561203047633e-05}, {"id": 291, "seek": 137328, "start": 1394.3, "end": 1399.08, "text": " use deep learning and she said, well, it just wasn't really on the radar at that point.", "tokens": [764, 2452, 2539, 293, 750, 848, 11, 731, 11, 309, 445, 2067, 380, 534, 322, 264, 16544, 412, 300, 935, 13], "temperature": 0.0, "avg_logprob": -0.17115934904631194, "compression_ratio": 1.669172932330827, "no_speech_prob": 2.1109561203047633e-05}, {"id": 292, "seek": 137328, "start": 1399.08, "end": 1403.06, "text": " So this is like a pre deep learning approach.", "tokens": [407, 341, 307, 411, 257, 659, 2452, 2539, 3109, 13], "temperature": 0.0, "avg_logprob": -0.17115934904631194, "compression_ratio": 1.669172932330827, "no_speech_prob": 2.1109561203047633e-05}, {"id": 293, "seek": 140306, "start": 1403.06, "end": 1407.1599999999999, "text": " And so the way they did this was they got a big team of mathematicians and computer", "tokens": [400, 370, 264, 636, 436, 630, 341, 390, 436, 658, 257, 955, 1469, 295, 32811, 2567, 293, 3820], "temperature": 0.0, "avg_logprob": -0.1009958195236494, "compression_ratio": 1.7773584905660378, "no_speech_prob": 4.092748895345721e-06}, {"id": 294, "seek": 140306, "start": 1407.1599999999999, "end": 1412.0, "text": " scientists and pathologists and so forth to get together and build these ideas for features", "tokens": [7708, 293, 3100, 12256, 293, 370, 5220, 281, 483, 1214, 293, 1322, 613, 3487, 337, 4122], "temperature": 0.0, "avg_logprob": -0.1009958195236494, "compression_ratio": 1.7773584905660378, "no_speech_prob": 4.092748895345721e-06}, {"id": 295, "seek": 140306, "start": 1412.0, "end": 1416.6799999999998, "text": " like relationships between epithelial nuclear neighbors.", "tokens": [411, 6159, 1296, 2388, 355, 338, 831, 8179, 12512, 13], "temperature": 0.0, "avg_logprob": -0.1009958195236494, "compression_ratio": 1.7773584905660378, "no_speech_prob": 4.092748895345721e-06}, {"id": 296, "seek": 140306, "start": 1416.6799999999998, "end": 1420.24, "text": " Thousands and thousands actually they created of features and each one required a lot of", "tokens": [40535, 293, 5383, 767, 436, 2942, 295, 4122, 293, 1184, 472, 4739, 257, 688, 295], "temperature": 0.0, "avg_logprob": -0.1009958195236494, "compression_ratio": 1.7773584905660378, "no_speech_prob": 4.092748895345721e-06}, {"id": 297, "seek": 140306, "start": 1420.24, "end": 1424.52, "text": " expertise from a cross-disciplinary group of experts at Stanford.", "tokens": [11769, 490, 257, 3278, 12, 30520, 1594, 295, 8572, 412, 20374, 13], "temperature": 0.0, "avg_logprob": -0.1009958195236494, "compression_ratio": 1.7773584905660378, "no_speech_prob": 4.092748895345721e-06}, {"id": 298, "seek": 140306, "start": 1424.52, "end": 1429.8799999999999, "text": " So this project took years and a lot of people and a lot of code and a lot of math.", "tokens": [407, 341, 1716, 1890, 924, 293, 257, 688, 295, 561, 293, 257, 688, 295, 3089, 293, 257, 688, 295, 5221, 13], "temperature": 0.0, "avg_logprob": -0.1009958195236494, "compression_ratio": 1.7773584905660378, "no_speech_prob": 4.092748895345721e-06}, {"id": 299, "seek": 142988, "start": 1429.88, "end": 1433.8000000000002, "text": " And then once they had all these features, they then fed them into a machine learning", "tokens": [400, 550, 1564, 436, 632, 439, 613, 4122, 11, 436, 550, 4636, 552, 666, 257, 3479, 2539], "temperature": 0.0, "avg_logprob": -0.12861137000881895, "compression_ratio": 1.6337448559670782, "no_speech_prob": 2.482433046679944e-06}, {"id": 300, "seek": 142988, "start": 1433.8000000000002, "end": 1437.24, "text": " model in this case, logistic regression to predict survival.", "tokens": [2316, 294, 341, 1389, 11, 3565, 3142, 24590, 281, 6069, 12559, 13], "temperature": 0.0, "avg_logprob": -0.12861137000881895, "compression_ratio": 1.6337448559670782, "no_speech_prob": 2.482433046679944e-06}, {"id": 301, "seek": 142988, "start": 1437.24, "end": 1440.48, "text": " As I say, it was very successful, right?", "tokens": [1018, 286, 584, 11, 309, 390, 588, 4406, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.12861137000881895, "compression_ratio": 1.6337448559670782, "no_speech_prob": 2.482433046679944e-06}, {"id": 302, "seek": 142988, "start": 1440.48, "end": 1447.2, "text": " But it's not something that I could create for you in a minute at the start of a course.", "tokens": [583, 309, 311, 406, 746, 300, 286, 727, 1884, 337, 291, 294, 257, 3456, 412, 264, 722, 295, 257, 1164, 13], "temperature": 0.0, "avg_logprob": -0.12861137000881895, "compression_ratio": 1.6337448559670782, "no_speech_prob": 2.482433046679944e-06}, {"id": 303, "seek": 142988, "start": 1447.2, "end": 1451.7800000000002, "text": " The difference with neural networks is neural networks don't require us to build these features.", "tokens": [440, 2649, 365, 18161, 9590, 307, 18161, 9590, 500, 380, 3651, 505, 281, 1322, 613, 4122, 13], "temperature": 0.0, "avg_logprob": -0.12861137000881895, "compression_ratio": 1.6337448559670782, "no_speech_prob": 2.482433046679944e-06}, {"id": 304, "seek": 142988, "start": 1451.7800000000002, "end": 1454.48, "text": " They build them for us.", "tokens": [814, 1322, 552, 337, 505, 13], "temperature": 0.0, "avg_logprob": -0.12861137000881895, "compression_ratio": 1.6337448559670782, "no_speech_prob": 2.482433046679944e-06}, {"id": 305, "seek": 145448, "start": 1454.48, "end": 1462.96, "text": " And so what actually happened was in I think it was 2015, Matt Zyler and Rob Fergus took", "tokens": [400, 370, 437, 767, 2011, 390, 294, 286, 519, 309, 390, 7546, 11, 7397, 1176, 88, 1918, 293, 5424, 36790, 1890], "temperature": 0.0, "avg_logprob": -0.13620069838061774, "compression_ratio": 1.6912442396313363, "no_speech_prob": 2.521310079828254e-06}, {"id": 306, "seek": 145448, "start": 1462.96, "end": 1468.04, "text": " a trained neural network and they looked inside it to see what it had learned.", "tokens": [257, 8895, 18161, 3209, 293, 436, 2956, 1854, 309, 281, 536, 437, 309, 632, 3264, 13], "temperature": 0.0, "avg_logprob": -0.13620069838061774, "compression_ratio": 1.6912442396313363, "no_speech_prob": 2.521310079828254e-06}, {"id": 307, "seek": 145448, "start": 1468.04, "end": 1471.2, "text": " So we don't give it features.", "tokens": [407, 321, 500, 380, 976, 309, 4122, 13], "temperature": 0.0, "avg_logprob": -0.13620069838061774, "compression_ratio": 1.6912442396313363, "no_speech_prob": 2.521310079828254e-06}, {"id": 308, "seek": 145448, "start": 1471.2, "end": 1473.52, "text": " We ask it to learn features.", "tokens": [492, 1029, 309, 281, 1466, 4122, 13], "temperature": 0.0, "avg_logprob": -0.13620069838061774, "compression_ratio": 1.6912442396313363, "no_speech_prob": 2.521310079828254e-06}, {"id": 309, "seek": 145448, "start": 1473.52, "end": 1481.68, "text": " So when Zyler and Fergus looked inside a neural network, they looked at the actual the weights", "tokens": [407, 562, 1176, 88, 1918, 293, 36790, 2956, 1854, 257, 18161, 3209, 11, 436, 2956, 412, 264, 3539, 264, 17443], "temperature": 0.0, "avg_logprob": -0.13620069838061774, "compression_ratio": 1.6912442396313363, "no_speech_prob": 2.521310079828254e-06}, {"id": 310, "seek": 145448, "start": 1481.68, "end": 1483.8, "text": " in the model and they drew a picture of them.", "tokens": [294, 264, 2316, 293, 436, 12804, 257, 3036, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.13620069838061774, "compression_ratio": 1.6912442396313363, "no_speech_prob": 2.521310079828254e-06}, {"id": 311, "seek": 148380, "start": 1483.8, "end": 1487.44, "text": " And this was nine of the sets of weights they found.", "tokens": [400, 341, 390, 4949, 295, 264, 6352, 295, 17443, 436, 1352, 13], "temperature": 0.0, "avg_logprob": -0.14049601554870605, "compression_ratio": 1.8219895287958114, "no_speech_prob": 2.123276999554946e-06}, {"id": 312, "seek": 148380, "start": 1487.44, "end": 1490.82, "text": " And this set of weights, for example, finds diagonal edges.", "tokens": [400, 341, 992, 295, 17443, 11, 337, 1365, 11, 10704, 21539, 8819, 13], "temperature": 0.0, "avg_logprob": -0.14049601554870605, "compression_ratio": 1.8219895287958114, "no_speech_prob": 2.123276999554946e-06}, {"id": 313, "seek": 148380, "start": 1490.82, "end": 1493.76, "text": " This set of weights finds yellow to blue gradients.", "tokens": [639, 992, 295, 17443, 10704, 5566, 281, 3344, 2771, 2448, 13], "temperature": 0.0, "avg_logprob": -0.14049601554870605, "compression_ratio": 1.8219895287958114, "no_speech_prob": 2.123276999554946e-06}, {"id": 314, "seek": 148380, "start": 1493.76, "end": 1499.0, "text": " This set of weights finds red to green gradients and so forth, right?", "tokens": [639, 992, 295, 17443, 10704, 2182, 281, 3092, 2771, 2448, 293, 370, 5220, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.14049601554870605, "compression_ratio": 1.8219895287958114, "no_speech_prob": 2.123276999554946e-06}, {"id": 315, "seek": 148380, "start": 1499.0, "end": 1505.1599999999999, "text": " And then down here are examples of some bits of photos which closely matched, for example,", "tokens": [400, 550, 760, 510, 366, 5110, 295, 512, 9239, 295, 5787, 597, 8185, 21447, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.14049601554870605, "compression_ratio": 1.8219895287958114, "no_speech_prob": 2.123276999554946e-06}, {"id": 316, "seek": 148380, "start": 1505.1599999999999, "end": 1508.04, "text": " this feature detector.", "tokens": [341, 4111, 25712, 13], "temperature": 0.0, "avg_logprob": -0.14049601554870605, "compression_ratio": 1.8219895287958114, "no_speech_prob": 2.123276999554946e-06}, {"id": 317, "seek": 150804, "start": 1508.04, "end": 1516.24, "text": " And deep learning is deep because we can then take these features and combine them to create", "tokens": [400, 2452, 2539, 307, 2452, 570, 321, 393, 550, 747, 613, 4122, 293, 10432, 552, 281, 1884], "temperature": 0.0, "avg_logprob": -0.1016695499420166, "compression_ratio": 1.8870967741935485, "no_speech_prob": 2.2957460714678746e-06}, {"id": 318, "seek": 150804, "start": 1516.24, "end": 1518.92, "text": " more advanced features.", "tokens": [544, 7339, 4122, 13], "temperature": 0.0, "avg_logprob": -0.1016695499420166, "compression_ratio": 1.8870967741935485, "no_speech_prob": 2.2957460714678746e-06}, {"id": 319, "seek": 150804, "start": 1518.92, "end": 1520.96, "text": " So these are some layer two features.", "tokens": [407, 613, 366, 512, 4583, 732, 4122, 13], "temperature": 0.0, "avg_logprob": -0.1016695499420166, "compression_ratio": 1.8870967741935485, "no_speech_prob": 2.2957460714678746e-06}, {"id": 320, "seek": 150804, "start": 1520.96, "end": 1525.6399999999999, "text": " So there's a feature, for example, that finds corners and a feature that finds curves and", "tokens": [407, 456, 311, 257, 4111, 11, 337, 1365, 11, 300, 10704, 12413, 293, 257, 4111, 300, 10704, 19490, 293], "temperature": 0.0, "avg_logprob": -0.1016695499420166, "compression_ratio": 1.8870967741935485, "no_speech_prob": 2.2957460714678746e-06}, {"id": 321, "seek": 150804, "start": 1525.6399999999999, "end": 1527.6399999999999, "text": " a feature that finds circles.", "tokens": [257, 4111, 300, 10704, 13040, 13], "temperature": 0.0, "avg_logprob": -0.1016695499420166, "compression_ratio": 1.8870967741935485, "no_speech_prob": 2.2957460714678746e-06}, {"id": 322, "seek": 150804, "start": 1527.6399999999999, "end": 1532.74, "text": " And here are some examples of bits of pictures that the circle finder found.", "tokens": [400, 510, 366, 512, 5110, 295, 9239, 295, 5242, 300, 264, 6329, 915, 260, 1352, 13], "temperature": 0.0, "avg_logprob": -0.1016695499420166, "compression_ratio": 1.8870967741935485, "no_speech_prob": 2.2957460714678746e-06}, {"id": 323, "seek": 153274, "start": 1532.74, "end": 1538.5, "text": " And so remember, with a neural net, which is the basic function used in deep learning,", "tokens": [400, 370, 1604, 11, 365, 257, 18161, 2533, 11, 597, 307, 264, 3875, 2445, 1143, 294, 2452, 2539, 11], "temperature": 0.0, "avg_logprob": -0.0666125091639432, "compression_ratio": 1.6465116279069767, "no_speech_prob": 1.7880125824376591e-06}, {"id": 324, "seek": 153274, "start": 1538.5, "end": 1543.72, "text": " we don't have to hand code any of these or come up with any of these ideas.", "tokens": [321, 500, 380, 362, 281, 1011, 3089, 604, 295, 613, 420, 808, 493, 365, 604, 295, 613, 3487, 13], "temperature": 0.0, "avg_logprob": -0.0666125091639432, "compression_ratio": 1.6465116279069767, "no_speech_prob": 1.7880125824376591e-06}, {"id": 325, "seek": 153274, "start": 1543.72, "end": 1549.52, "text": " You just start with actually a random neural network and you feed it examples and you have", "tokens": [509, 445, 722, 365, 767, 257, 4974, 18161, 3209, 293, 291, 3154, 309, 5110, 293, 291, 362], "temperature": 0.0, "avg_logprob": -0.0666125091639432, "compression_ratio": 1.6465116279069767, "no_speech_prob": 1.7880125824376591e-06}, {"id": 326, "seek": 153274, "start": 1549.52, "end": 1553.32, "text": " it learn to recognize things.", "tokens": [309, 1466, 281, 5521, 721, 13], "temperature": 0.0, "avg_logprob": -0.0666125091639432, "compression_ratio": 1.6465116279069767, "no_speech_prob": 1.7880125824376591e-06}, {"id": 327, "seek": 153274, "start": 1553.32, "end": 1558.64, "text": " And it turns out that these are the things that it creates for itself.", "tokens": [400, 309, 4523, 484, 300, 613, 366, 264, 721, 300, 309, 7829, 337, 2564, 13], "temperature": 0.0, "avg_logprob": -0.0666125091639432, "compression_ratio": 1.6465116279069767, "no_speech_prob": 1.7880125824376591e-06}, {"id": 328, "seek": 155864, "start": 1558.64, "end": 1563.5600000000002, "text": " So you can then combine these features.", "tokens": [407, 291, 393, 550, 10432, 613, 4122, 13], "temperature": 0.0, "avg_logprob": -0.08754704419304343, "compression_ratio": 2.022099447513812, "no_speech_prob": 1.844700477704464e-06}, {"id": 329, "seek": 155864, "start": 1563.5600000000002, "end": 1567.88, "text": " And when you combine these features, it creates a feature detector, for example, that finds", "tokens": [400, 562, 291, 10432, 613, 4122, 11, 309, 7829, 257, 4111, 25712, 11, 337, 1365, 11, 300, 10704], "temperature": 0.0, "avg_logprob": -0.08754704419304343, "compression_ratio": 2.022099447513812, "no_speech_prob": 1.844700477704464e-06}, {"id": 330, "seek": 155864, "start": 1567.88, "end": 1572.0400000000002, "text": " kind of repeating geometric shapes.", "tokens": [733, 295, 18617, 33246, 10854, 13], "temperature": 0.0, "avg_logprob": -0.08754704419304343, "compression_ratio": 2.022099447513812, "no_speech_prob": 1.844700477704464e-06}, {"id": 331, "seek": 155864, "start": 1572.0400000000002, "end": 1576.3200000000002, "text": " And it creates a feature detector, for example, that finds kind of really little things which", "tokens": [400, 309, 7829, 257, 4111, 25712, 11, 337, 1365, 11, 300, 10704, 733, 295, 534, 707, 721, 597], "temperature": 0.0, "avg_logprob": -0.08754704419304343, "compression_ratio": 2.022099447513812, "no_speech_prob": 1.844700477704464e-06}, {"id": 332, "seek": 155864, "start": 1576.3200000000002, "end": 1580.7, "text": " it looks like is finding the edges of flowers.", "tokens": [309, 1542, 411, 307, 5006, 264, 8819, 295, 8085, 13], "temperature": 0.0, "avg_logprob": -0.08754704419304343, "compression_ratio": 2.022099447513812, "no_speech_prob": 1.844700477704464e-06}, {"id": 333, "seek": 155864, "start": 1580.7, "end": 1586.2, "text": " And this feature detector here seems to be finding words.", "tokens": [400, 341, 4111, 25712, 510, 2544, 281, 312, 5006, 2283, 13], "temperature": 0.0, "avg_logprob": -0.08754704419304343, "compression_ratio": 2.022099447513812, "no_speech_prob": 1.844700477704464e-06}, {"id": 334, "seek": 158620, "start": 1586.2, "end": 1591.0800000000002, "text": " And so the deeper you get, the more sophisticated the features it can find are.", "tokens": [400, 370, 264, 7731, 291, 483, 11, 264, 544, 16950, 264, 4122, 309, 393, 915, 366, 13], "temperature": 0.0, "avg_logprob": -0.0761147468320785, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.3287516367199714e-06}, {"id": 335, "seek": 158620, "start": 1591.0800000000002, "end": 1596.96, "text": " And so you can imagine that trying to code these things by hand would be insanely difficult", "tokens": [400, 370, 291, 393, 3811, 300, 1382, 281, 3089, 613, 721, 538, 1011, 576, 312, 40965, 2252], "temperature": 0.0, "avg_logprob": -0.0761147468320785, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.3287516367199714e-06}, {"id": 336, "seek": 158620, "start": 1596.96, "end": 1600.32, "text": " and you wouldn't know even what to encode by hand.", "tokens": [293, 291, 2759, 380, 458, 754, 437, 281, 2058, 1429, 538, 1011, 13], "temperature": 0.0, "avg_logprob": -0.0761147468320785, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.3287516367199714e-06}, {"id": 337, "seek": 158620, "start": 1600.32, "end": 1605.52, "text": " So what we're going to learn is how neural networks do this automatically.", "tokens": [407, 437, 321, 434, 516, 281, 1466, 307, 577, 18161, 9590, 360, 341, 6772, 13], "temperature": 0.0, "avg_logprob": -0.0761147468320785, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.3287516367199714e-06}, {"id": 338, "seek": 158620, "start": 1605.52, "end": 1611.04, "text": " But this is the key difference of why we can now do things that previously we just didn't", "tokens": [583, 341, 307, 264, 2141, 2649, 295, 983, 321, 393, 586, 360, 721, 300, 8046, 321, 445, 994, 380], "temperature": 0.0, "avg_logprob": -0.0761147468320785, "compression_ratio": 1.6538461538461537, "no_speech_prob": 1.3287516367199714e-06}, {"id": 339, "seek": 161104, "start": 1611.04, "end": 1616.8799999999999, "text": " even conceive of as possible, because now we don't have to hand code the features we", "tokens": [754, 48605, 295, 382, 1944, 11, 570, 586, 321, 500, 380, 362, 281, 1011, 3089, 264, 4122, 321], "temperature": 0.0, "avg_logprob": -0.12732598973416734, "compression_ratio": 1.6018957345971565, "no_speech_prob": 6.64300159769482e-06}, {"id": 340, "seek": 161104, "start": 1616.8799999999999, "end": 1617.8799999999999, "text": " look for.", "tokens": [574, 337, 13], "temperature": 0.0, "avg_logprob": -0.12732598973416734, "compression_ratio": 1.6018957345971565, "no_speech_prob": 6.64300159769482e-06}, {"id": 341, "seek": 161104, "start": 1617.8799999999999, "end": 1621.72, "text": " They can all be learned.", "tokens": [814, 393, 439, 312, 3264, 13], "temperature": 0.0, "avg_logprob": -0.12732598973416734, "compression_ratio": 1.6018957345971565, "no_speech_prob": 6.64300159769482e-06}, {"id": 342, "seek": 161104, "start": 1621.72, "end": 1629.6399999999999, "text": " Now it's important to recognize we're going to be spending some time learning about building", "tokens": [823, 309, 311, 1021, 281, 5521, 321, 434, 516, 281, 312, 6434, 512, 565, 2539, 466, 2390], "temperature": 0.0, "avg_logprob": -0.12732598973416734, "compression_ratio": 1.6018957345971565, "no_speech_prob": 6.64300159769482e-06}, {"id": 343, "seek": 161104, "start": 1629.6399999999999, "end": 1632.24, "text": " image based algorithms.", "tokens": [3256, 2361, 14642, 13], "temperature": 0.0, "avg_logprob": -0.12732598973416734, "compression_ratio": 1.6018957345971565, "no_speech_prob": 6.64300159769482e-06}, {"id": 344, "seek": 161104, "start": 1632.24, "end": 1635.68, "text": " And image based algorithms are not just for images.", "tokens": [400, 3256, 2361, 14642, 366, 406, 445, 337, 5267, 13], "temperature": 0.0, "avg_logprob": -0.12732598973416734, "compression_ratio": 1.6018957345971565, "no_speech_prob": 6.64300159769482e-06}, {"id": 345, "seek": 161104, "start": 1635.68, "end": 1637.56, "text": " And in fact, this is going to be a general theme.", "tokens": [400, 294, 1186, 11, 341, 307, 516, 281, 312, 257, 2674, 6314, 13], "temperature": 0.0, "avg_logprob": -0.12732598973416734, "compression_ratio": 1.6018957345971565, "no_speech_prob": 6.64300159769482e-06}, {"id": 346, "seek": 163756, "start": 1637.56, "end": 1641.48, "text": " We're going to show you some foundational techniques.", "tokens": [492, 434, 516, 281, 855, 291, 512, 32195, 7512, 13], "temperature": 0.0, "avg_logprob": -0.1219180180476262, "compression_ratio": 1.6310679611650485, "no_speech_prob": 2.9020484362263232e-06}, {"id": 347, "seek": 163756, "start": 1641.48, "end": 1645.3999999999999, "text": " But with creativity, these foundational techniques can be used very widely.", "tokens": [583, 365, 12915, 11, 613, 32195, 7512, 393, 312, 1143, 588, 13371, 13], "temperature": 0.0, "avg_logprob": -0.1219180180476262, "compression_ratio": 1.6310679611650485, "no_speech_prob": 2.9020484362263232e-06}, {"id": 348, "seek": 163756, "start": 1645.3999999999999, "end": 1656.1599999999999, "text": " So for example, an image recognizer can also be used to classify sounds.", "tokens": [407, 337, 1365, 11, 364, 3256, 3068, 6545, 393, 611, 312, 1143, 281, 33872, 3263, 13], "temperature": 0.0, "avg_logprob": -0.1219180180476262, "compression_ratio": 1.6310679611650485, "no_speech_prob": 2.9020484362263232e-06}, {"id": 349, "seek": 163756, "start": 1656.1599999999999, "end": 1662.2, "text": " So this was an example from one of our students who posted on the forum and said for their", "tokens": [407, 341, 390, 364, 1365, 490, 472, 295, 527, 1731, 567, 9437, 322, 264, 17542, 293, 848, 337, 641], "temperature": 0.0, "avg_logprob": -0.1219180180476262, "compression_ratio": 1.6310679611650485, "no_speech_prob": 2.9020484362263232e-06}, {"id": 350, "seek": 163756, "start": 1662.2, "end": 1665.22, "text": " project they would try classifying sounds.", "tokens": [1716, 436, 576, 853, 1508, 5489, 3263, 13], "temperature": 0.0, "avg_logprob": -0.1219180180476262, "compression_ratio": 1.6310679611650485, "no_speech_prob": 2.9020484362263232e-06}, {"id": 351, "seek": 166522, "start": 1665.22, "end": 1670.92, "text": " And so they basically took sounds and created pictures from their waveforms and then they", "tokens": [400, 370, 436, 1936, 1890, 3263, 293, 2942, 5242, 490, 641, 36512, 82, 293, 550, 436], "temperature": 0.0, "avg_logprob": -0.11308623333366549, "compression_ratio": 1.8652173913043477, "no_speech_prob": 1.4592740171792684e-06}, {"id": 352, "seek": 166522, "start": 1670.92, "end": 1672.56, "text": " used an image recognizer on that.", "tokens": [1143, 364, 3256, 3068, 6545, 322, 300, 13], "temperature": 0.0, "avg_logprob": -0.11308623333366549, "compression_ratio": 1.8652173913043477, "no_speech_prob": 1.4592740171792684e-06}, {"id": 353, "seek": 166522, "start": 1672.56, "end": 1676.4, "text": " And they got a state of the art result, by the way.", "tokens": [400, 436, 658, 257, 1785, 295, 264, 1523, 1874, 11, 538, 264, 636, 13], "temperature": 0.0, "avg_logprob": -0.11308623333366549, "compression_ratio": 1.8652173913043477, "no_speech_prob": 1.4592740171792684e-06}, {"id": 354, "seek": 166522, "start": 1676.4, "end": 1679.84, "text": " Another of our students on the forum said that they did something very similar to take", "tokens": [3996, 295, 527, 1731, 322, 264, 17542, 848, 300, 436, 630, 746, 588, 2531, 281, 747], "temperature": 0.0, "avg_logprob": -0.11308623333366549, "compression_ratio": 1.8652173913043477, "no_speech_prob": 1.4592740171792684e-06}, {"id": 355, "seek": 166522, "start": 1679.84, "end": 1686.6000000000001, "text": " time series and turn them into pictures and then use image classifiers.", "tokens": [565, 2638, 293, 1261, 552, 666, 5242, 293, 550, 764, 3256, 1508, 23463, 13], "temperature": 0.0, "avg_logprob": -0.11308623333366549, "compression_ratio": 1.8652173913043477, "no_speech_prob": 1.4592740171792684e-06}, {"id": 356, "seek": 166522, "start": 1686.6000000000001, "end": 1694.34, "text": " Another of our students created pictures from mouse movements from users of a computer system.", "tokens": [3996, 295, 527, 1731, 2942, 5242, 490, 9719, 9981, 490, 5022, 295, 257, 3820, 1185, 13], "temperature": 0.0, "avg_logprob": -0.11308623333366549, "compression_ratio": 1.8652173913043477, "no_speech_prob": 1.4592740171792684e-06}, {"id": 357, "seek": 169434, "start": 1694.34, "end": 1699.12, "text": " So the clicks became dots and the movements became lines and the speed of the movement", "tokens": [407, 264, 18521, 3062, 15026, 293, 264, 9981, 3062, 3876, 293, 264, 3073, 295, 264, 3963], "temperature": 0.0, "avg_logprob": -0.1293985994556282, "compression_ratio": 1.7219251336898396, "no_speech_prob": 1.602700194780482e-06}, {"id": 358, "seek": 169434, "start": 1699.12, "end": 1703.6799999999998, "text": " became colors and then use that to create an image classifier.", "tokens": [3062, 4577, 293, 550, 764, 300, 281, 1884, 364, 3256, 1508, 9902, 13], "temperature": 0.0, "avg_logprob": -0.1293985994556282, "compression_ratio": 1.7219251336898396, "no_speech_prob": 1.602700194780482e-06}, {"id": 359, "seek": 169434, "start": 1703.6799999999998, "end": 1713.8, "text": " So you can see with some creativity, there's a lot of things you can do with images.", "tokens": [407, 291, 393, 536, 365, 512, 12915, 11, 456, 311, 257, 688, 295, 721, 291, 393, 360, 365, 5267, 13], "temperature": 0.0, "avg_logprob": -0.1293985994556282, "compression_ratio": 1.7219251336898396, "no_speech_prob": 1.602700194780482e-06}, {"id": 360, "seek": 169434, "start": 1713.8, "end": 1720.24, "text": " There's something else I wanted to point out, which is that as you saw, when we trained", "tokens": [821, 311, 746, 1646, 286, 1415, 281, 935, 484, 11, 597, 307, 300, 382, 291, 1866, 11, 562, 321, 8895], "temperature": 0.0, "avg_logprob": -0.1293985994556282, "compression_ratio": 1.7219251336898396, "no_speech_prob": 1.602700194780482e-06}, {"id": 361, "seek": 172024, "start": 1720.24, "end": 1726.36, "text": " a real working bird-recognized image model, we didn't need lots of math.", "tokens": [257, 957, 1364, 5255, 12, 13867, 2912, 1602, 3256, 2316, 11, 321, 994, 380, 643, 3195, 295, 5221, 13], "temperature": 0.0, "avg_logprob": -0.14872248967488608, "compression_ratio": 1.622340425531915, "no_speech_prob": 1.0781785022118129e-05}, {"id": 362, "seek": 172024, "start": 1726.36, "end": 1728.0, "text": " There wasn't any.", "tokens": [821, 2067, 380, 604, 13], "temperature": 0.0, "avg_logprob": -0.14872248967488608, "compression_ratio": 1.622340425531915, "no_speech_prob": 1.0781785022118129e-05}, {"id": 363, "seek": 172024, "start": 1728.0, "end": 1729.24, "text": " We didn't need lots of data.", "tokens": [492, 994, 380, 643, 3195, 295, 1412, 13], "temperature": 0.0, "avg_logprob": -0.14872248967488608, "compression_ratio": 1.622340425531915, "no_speech_prob": 1.0781785022118129e-05}, {"id": 364, "seek": 172024, "start": 1729.24, "end": 1730.24, "text": " We had 200 pictures.", "tokens": [492, 632, 2331, 5242, 13], "temperature": 0.0, "avg_logprob": -0.14872248967488608, "compression_ratio": 1.622340425531915, "no_speech_prob": 1.0781785022118129e-05}, {"id": 365, "seek": 172024, "start": 1730.24, "end": 1732.72, "text": " We didn't need lots of expensive computers.", "tokens": [492, 994, 380, 643, 3195, 295, 5124, 10807, 13], "temperature": 0.0, "avg_logprob": -0.14872248967488608, "compression_ratio": 1.622340425531915, "no_speech_prob": 1.0781785022118129e-05}, {"id": 366, "seek": 172024, "start": 1732.72, "end": 1735.26, "text": " We just used my laptop.", "tokens": [492, 445, 1143, 452, 10732, 13], "temperature": 0.0, "avg_logprob": -0.14872248967488608, "compression_ratio": 1.622340425531915, "no_speech_prob": 1.0781785022118129e-05}, {"id": 367, "seek": 172024, "start": 1735.26, "end": 1742.84, "text": " This is generally the case for the vast majority of deep learning that you'll need in real", "tokens": [639, 307, 5101, 264, 1389, 337, 264, 8369, 6286, 295, 2452, 2539, 300, 291, 603, 643, 294, 957], "temperature": 0.0, "avg_logprob": -0.14872248967488608, "compression_ratio": 1.622340425531915, "no_speech_prob": 1.0781785022118129e-05}, {"id": 368, "seek": 172024, "start": 1742.84, "end": 1746.08, "text": " life.", "tokens": [993, 13], "temperature": 0.0, "avg_logprob": -0.14872248967488608, "compression_ratio": 1.622340425531915, "no_speech_prob": 1.0781785022118129e-05}, {"id": 369, "seek": 174608, "start": 1746.08, "end": 1750.8, "text": " There will be some math that pops up during this course, but we will teach it to you as", "tokens": [821, 486, 312, 512, 5221, 300, 16795, 493, 1830, 341, 1164, 11, 457, 321, 486, 2924, 309, 281, 291, 382], "temperature": 0.0, "avg_logprob": -0.12202591948456816, "compression_ratio": 1.6771300448430493, "no_speech_prob": 8.138961675285827e-06}, {"id": 370, "seek": 174608, "start": 1750.8, "end": 1754.8799999999999, "text": " needed or we'll refer you to external resources as needed.", "tokens": [2978, 420, 321, 603, 2864, 291, 281, 8320, 3593, 382, 2978, 13], "temperature": 0.0, "avg_logprob": -0.12202591948456816, "compression_ratio": 1.6771300448430493, "no_speech_prob": 8.138961675285827e-06}, {"id": 371, "seek": 174608, "start": 1754.8799999999999, "end": 1759.6399999999999, "text": " But it will just be the little bits that you actually need.", "tokens": [583, 309, 486, 445, 312, 264, 707, 9239, 300, 291, 767, 643, 13], "temperature": 0.0, "avg_logprob": -0.12202591948456816, "compression_ratio": 1.6771300448430493, "no_speech_prob": 8.138961675285827e-06}, {"id": 372, "seek": 174608, "start": 1759.6399999999999, "end": 1764.76, "text": " The myth that deep learning needs lots of data I think is mainly passed along by big", "tokens": [440, 9474, 300, 2452, 2539, 2203, 3195, 295, 1412, 286, 519, 307, 8704, 4678, 2051, 538, 955], "temperature": 0.0, "avg_logprob": -0.12202591948456816, "compression_ratio": 1.6771300448430493, "no_speech_prob": 8.138961675285827e-06}, {"id": 373, "seek": 174608, "start": 1764.76, "end": 1770.84, "text": " companies that want to sell you computers to store lots of data and to process it.", "tokens": [3431, 300, 528, 281, 3607, 291, 10807, 281, 3531, 3195, 295, 1412, 293, 281, 1399, 309, 13], "temperature": 0.0, "avg_logprob": -0.12202591948456816, "compression_ratio": 1.6771300448430493, "no_speech_prob": 8.138961675285827e-06}, {"id": 374, "seek": 177084, "start": 1770.84, "end": 1779.1999999999998, "text": " We find that most real world projects don't need extraordinary amounts of data at all.", "tokens": [492, 915, 300, 881, 957, 1002, 4455, 500, 380, 643, 10581, 11663, 295, 1412, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.1239579999169638, "compression_ratio": 1.5990990990990992, "no_speech_prob": 2.8129561542300507e-06}, {"id": 375, "seek": 177084, "start": 1779.1999999999998, "end": 1784.48, "text": " As you'll see, there's actually a lot of fantastic places you can do state of the art work for", "tokens": [1018, 291, 603, 536, 11, 456, 311, 767, 257, 688, 295, 5456, 3190, 291, 393, 360, 1785, 295, 264, 1523, 589, 337], "temperature": 0.0, "avg_logprob": -0.1239579999169638, "compression_ratio": 1.5990990990990992, "no_speech_prob": 2.8129561542300507e-06}, {"id": 376, "seek": 177084, "start": 1784.48, "end": 1791.08, "text": " free nowadays, which is great news.", "tokens": [1737, 13434, 11, 597, 307, 869, 2583, 13], "temperature": 0.0, "avg_logprob": -0.1239579999169638, "compression_ratio": 1.5990990990990992, "no_speech_prob": 2.8129561542300507e-06}, {"id": 377, "seek": 177084, "start": 1791.08, "end": 1795.08, "text": " One of the key reasons for this is because of something called transfer learning, which", "tokens": [1485, 295, 264, 2141, 4112, 337, 341, 307, 570, 295, 746, 1219, 5003, 2539, 11, 597], "temperature": 0.0, "avg_logprob": -0.1239579999169638, "compression_ratio": 1.5990990990990992, "no_speech_prob": 2.8129561542300507e-06}, {"id": 378, "seek": 177084, "start": 1795.08, "end": 1798.1599999999999, "text": " we'll be learning about a lot during this course.", "tokens": [321, 603, 312, 2539, 466, 257, 688, 1830, 341, 1164, 13], "temperature": 0.0, "avg_logprob": -0.1239579999169638, "compression_ratio": 1.5990990990990992, "no_speech_prob": 2.8129561542300507e-06}, {"id": 379, "seek": 179816, "start": 1798.16, "end": 1804.2, "text": " It's something which very few people are aware of.", "tokens": [467, 311, 746, 597, 588, 1326, 561, 366, 3650, 295, 13], "temperature": 0.0, "avg_logprob": -0.12038449887876157, "compression_ratio": 1.565, "no_speech_prob": 4.784660632140003e-06}, {"id": 380, "seek": 179816, "start": 1804.2, "end": 1808.52, "text": " In this course, we'll be using PyTorch.", "tokens": [682, 341, 1164, 11, 321, 603, 312, 1228, 9953, 51, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.12038449887876157, "compression_ratio": 1.565, "no_speech_prob": 4.784660632140003e-06}, {"id": 381, "seek": 179816, "start": 1808.52, "end": 1814.42, "text": " For those of you who are not particularly close to the deep learning world, you might", "tokens": [1171, 729, 295, 291, 567, 366, 406, 4098, 1998, 281, 264, 2452, 2539, 1002, 11, 291, 1062], "temperature": 0.0, "avg_logprob": -0.12038449887876157, "compression_ratio": 1.565, "no_speech_prob": 4.784660632140003e-06}, {"id": 382, "seek": 179816, "start": 1814.42, "end": 1818.0, "text": " have heard of TensorFlow and not of PyTorch.", "tokens": [362, 2198, 295, 37624, 293, 406, 295, 9953, 51, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.12038449887876157, "compression_ratio": 1.565, "no_speech_prob": 4.784660632140003e-06}, {"id": 383, "seek": 179816, "start": 1818.0, "end": 1827.0400000000002, "text": " You might be surprised to hear that TensorFlow has been dying in popularity in recent years", "tokens": [509, 1062, 312, 6100, 281, 1568, 300, 37624, 575, 668, 8639, 294, 19301, 294, 5162, 924], "temperature": 0.0, "avg_logprob": -0.12038449887876157, "compression_ratio": 1.565, "no_speech_prob": 4.784660632140003e-06}, {"id": 384, "seek": 182704, "start": 1827.04, "end": 1834.52, "text": " and PyTorch is actually growing rapidly.", "tokens": [293, 9953, 51, 284, 339, 307, 767, 4194, 12910, 13], "temperature": 0.0, "avg_logprob": -0.1278550248397024, "compression_ratio": 1.3576158940397351, "no_speech_prob": 6.2400599745160434e-06}, {"id": 385, "seek": 182704, "start": 1834.52, "end": 1842.76, "text": " Research repositories amongst the top papers, TensorFlow is a tiny minority now compared", "tokens": [10303, 22283, 2083, 12918, 264, 1192, 10577, 11, 37624, 307, 257, 5870, 16166, 586, 5347], "temperature": 0.0, "avg_logprob": -0.1278550248397024, "compression_ratio": 1.3576158940397351, "no_speech_prob": 6.2400599745160434e-06}, {"id": 386, "seek": 182704, "start": 1842.76, "end": 1844.76, "text": " to PyTorch.", "tokens": [281, 9953, 51, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.1278550248397024, "compression_ratio": 1.3576158940397351, "no_speech_prob": 6.2400599745160434e-06}, {"id": 387, "seek": 182704, "start": 1844.76, "end": 1848.44, "text": " This is also great research that's come out from Ryan O'Connor.", "tokens": [639, 307, 611, 869, 2132, 300, 311, 808, 484, 490, 9116, 422, 6, 9838, 19048, 13], "temperature": 0.0, "avg_logprob": -0.1278550248397024, "compression_ratio": 1.3576158940397351, "no_speech_prob": 6.2400599745160434e-06}, {"id": 388, "seek": 184844, "start": 1848.44, "end": 1858.16, "text": " He also discovered that the majority of people that were doing TensorFlow in 2018, researchers,", "tokens": [634, 611, 6941, 300, 264, 6286, 295, 561, 300, 645, 884, 37624, 294, 6096, 11, 10309, 11], "temperature": 0.0, "avg_logprob": -0.11169655426688817, "compression_ratio": 1.691304347826087, "no_speech_prob": 1.1544278777364525e-06}, {"id": 389, "seek": 184844, "start": 1858.16, "end": 1860.96, "text": " the majority have now shifted to PyTorch.", "tokens": [264, 6286, 362, 586, 18892, 281, 9953, 51, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.11169655426688817, "compression_ratio": 1.691304347826087, "no_speech_prob": 1.1544278777364525e-06}, {"id": 390, "seek": 184844, "start": 1860.96, "end": 1866.6000000000001, "text": " I mention this because what people use in research is a very strong leading indicator", "tokens": [286, 2152, 341, 570, 437, 561, 764, 294, 2132, 307, 257, 588, 2068, 5775, 16961], "temperature": 0.0, "avg_logprob": -0.11169655426688817, "compression_ratio": 1.691304347826087, "no_speech_prob": 1.1544278777364525e-06}, {"id": 391, "seek": 184844, "start": 1866.6000000000001, "end": 1870.72, "text": " of what's going to happen in industry because this is where all the new algorithms are going", "tokens": [295, 437, 311, 516, 281, 1051, 294, 3518, 570, 341, 307, 689, 439, 264, 777, 14642, 366, 516], "temperature": 0.0, "avg_logprob": -0.11169655426688817, "compression_ratio": 1.691304347826087, "no_speech_prob": 1.1544278777364525e-06}, {"id": 392, "seek": 184844, "start": 1870.72, "end": 1871.72, "text": " to come out.", "tokens": [281, 808, 484, 13], "temperature": 0.0, "avg_logprob": -0.11169655426688817, "compression_ratio": 1.691304347826087, "no_speech_prob": 1.1544278777364525e-06}, {"id": 393, "seek": 184844, "start": 1871.72, "end": 1874.4, "text": " This is where all the papers are going to be written about.", "tokens": [639, 307, 689, 439, 264, 10577, 366, 516, 281, 312, 3720, 466, 13], "temperature": 0.0, "avg_logprob": -0.11169655426688817, "compression_ratio": 1.691304347826087, "no_speech_prob": 1.1544278777364525e-06}, {"id": 394, "seek": 187440, "start": 1874.4, "end": 1878.88, "text": " It's going to be increasingly difficult to use TensorFlow.", "tokens": [467, 311, 516, 281, 312, 12980, 2252, 281, 764, 37624, 13], "temperature": 0.0, "avg_logprob": -0.14054284897525754, "compression_ratio": 1.6394052044609666, "no_speech_prob": 1.9831235476885922e-05}, {"id": 395, "seek": 187440, "start": 1878.88, "end": 1882.96, "text": " We've been using PyTorch since before it came out before the initial release because we", "tokens": [492, 600, 668, 1228, 9953, 51, 284, 339, 1670, 949, 309, 1361, 484, 949, 264, 5883, 4374, 570, 321], "temperature": 0.0, "avg_logprob": -0.14054284897525754, "compression_ratio": 1.6394052044609666, "no_speech_prob": 1.9831235476885922e-05}, {"id": 396, "seek": 187440, "start": 1882.96, "end": 1887.64, "text": " knew just from technical fundamentals it was far better.", "tokens": [2586, 445, 490, 6191, 29505, 309, 390, 1400, 1101, 13], "temperature": 0.0, "avg_logprob": -0.14054284897525754, "compression_ratio": 1.6394052044609666, "no_speech_prob": 1.9831235476885922e-05}, {"id": 397, "seek": 187440, "start": 1887.64, "end": 1890.64, "text": " This course has been using PyTorch for a long time.", "tokens": [639, 1164, 575, 668, 1228, 9953, 51, 284, 339, 337, 257, 938, 565, 13], "temperature": 0.0, "avg_logprob": -0.14054284897525754, "compression_ratio": 1.6394052044609666, "no_speech_prob": 1.9831235476885922e-05}, {"id": 398, "seek": 187440, "start": 1890.64, "end": 1895.88, "text": " I will say, however, that PyTorch requires a lot of hairy code for relatively simple", "tokens": [286, 486, 584, 11, 4461, 11, 300, 9953, 51, 284, 339, 7029, 257, 688, 295, 42346, 3089, 337, 7226, 2199], "temperature": 0.0, "avg_logprob": -0.14054284897525754, "compression_ratio": 1.6394052044609666, "no_speech_prob": 1.9831235476885922e-05}, {"id": 399, "seek": 187440, "start": 1895.88, "end": 1896.88, "text": " things.", "tokens": [721, 13], "temperature": 0.0, "avg_logprob": -0.14054284897525754, "compression_ratio": 1.6394052044609666, "no_speech_prob": 1.9831235476885922e-05}, {"id": 400, "seek": 187440, "start": 1896.88, "end": 1903.16, "text": " This is the code required to implement a particular optimizer called AdamW in plain PyTorch.", "tokens": [639, 307, 264, 3089, 4739, 281, 4445, 257, 1729, 5028, 6545, 1219, 7938, 54, 294, 11121, 9953, 51, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.14054284897525754, "compression_ratio": 1.6394052044609666, "no_speech_prob": 1.9831235476885922e-05}, {"id": 401, "seek": 190316, "start": 1903.16, "end": 1907.6000000000001, "text": " I actually copied this code from the PyTorch repository.", "tokens": [286, 767, 25365, 341, 3089, 490, 264, 9953, 51, 284, 339, 25841, 13], "temperature": 0.0, "avg_logprob": -0.13427259354364304, "compression_ratio": 1.6527777777777777, "no_speech_prob": 1.4283300515671726e-05}, {"id": 402, "seek": 190316, "start": 1907.6000000000001, "end": 1911.4, "text": " As you can see, there's a lot of it.", "tokens": [1018, 291, 393, 536, 11, 456, 311, 257, 688, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.13427259354364304, "compression_ratio": 1.6527777777777777, "no_speech_prob": 1.4283300515671726e-05}, {"id": 403, "seek": 190316, "start": 1911.4, "end": 1918.2, "text": " This gray bit here is the code required to do the same thing with FastAI.", "tokens": [639, 10855, 857, 510, 307, 264, 3089, 4739, 281, 360, 264, 912, 551, 365, 15968, 48698, 13], "temperature": 0.0, "avg_logprob": -0.13427259354364304, "compression_ratio": 1.6527777777777777, "no_speech_prob": 1.4283300515671726e-05}, {"id": 404, "seek": 190316, "start": 1918.2, "end": 1922.48, "text": " FastAI is a library we built on top of PyTorch.", "tokens": [15968, 48698, 307, 257, 6405, 321, 3094, 322, 1192, 295, 9953, 51, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.13427259354364304, "compression_ratio": 1.6527777777777777, "no_speech_prob": 1.4283300515671726e-05}, {"id": 405, "seek": 190316, "start": 1922.48, "end": 1926.24, "text": " This huge difference is not because PyTorch is bad.", "tokens": [639, 2603, 2649, 307, 406, 570, 9953, 51, 284, 339, 307, 1578, 13], "temperature": 0.0, "avg_logprob": -0.13427259354364304, "compression_ratio": 1.6527777777777777, "no_speech_prob": 1.4283300515671726e-05}, {"id": 406, "seek": 190316, "start": 1926.24, "end": 1932.2, "text": " It's because PyTorch is designed to be a strong foundation to build things on top of like", "tokens": [467, 311, 570, 9953, 51, 284, 339, 307, 4761, 281, 312, 257, 2068, 7030, 281, 1322, 721, 322, 1192, 295, 411], "temperature": 0.0, "avg_logprob": -0.13427259354364304, "compression_ratio": 1.6527777777777777, "no_speech_prob": 1.4283300515671726e-05}, {"id": 407, "seek": 193220, "start": 1932.2, "end": 1936.2, "text": " FastAI.", "tokens": [15968, 48698, 13], "temperature": 0.0, "avg_logprob": -0.09799641434864331, "compression_ratio": 1.6715686274509804, "no_speech_prob": 4.565777089737821e-06}, {"id": 408, "seek": 193220, "start": 1936.2, "end": 1943.2, "text": " When you use FastAI, the library, you get access to all the power of PyTorch as well.", "tokens": [1133, 291, 764, 15968, 48698, 11, 264, 6405, 11, 291, 483, 2105, 281, 439, 264, 1347, 295, 9953, 51, 284, 339, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.09799641434864331, "compression_ratio": 1.6715686274509804, "no_speech_prob": 4.565777089737821e-06}, {"id": 409, "seek": 193220, "start": 1943.2, "end": 1948.64, "text": " But you shouldn't be writing all this code if you only need to write this much code.", "tokens": [583, 291, 4659, 380, 312, 3579, 439, 341, 3089, 498, 291, 787, 643, 281, 2464, 341, 709, 3089, 13], "temperature": 0.0, "avg_logprob": -0.09799641434864331, "compression_ratio": 1.6715686274509804, "no_speech_prob": 4.565777089737821e-06}, {"id": 410, "seek": 193220, "start": 1948.64, "end": 1952.88, "text": " The problem of writing lots of code is that that's lots of things to make mistakes with,", "tokens": [440, 1154, 295, 3579, 3195, 295, 3089, 307, 300, 300, 311, 3195, 295, 721, 281, 652, 8038, 365, 11], "temperature": 0.0, "avg_logprob": -0.09799641434864331, "compression_ratio": 1.6715686274509804, "no_speech_prob": 4.565777089737821e-06}, {"id": 411, "seek": 193220, "start": 1952.88, "end": 1958.16, "text": " lots of things to not have best practices in, lots of things to maintain.", "tokens": [3195, 295, 721, 281, 406, 362, 1151, 7525, 294, 11, 3195, 295, 721, 281, 6909, 13], "temperature": 0.0, "avg_logprob": -0.09799641434864331, "compression_ratio": 1.6715686274509804, "no_speech_prob": 4.565777089737821e-06}, {"id": 412, "seek": 195816, "start": 1958.16, "end": 1963.3200000000002, "text": " In general, we found, particularly with deep learning, less code is better.", "tokens": [682, 2674, 11, 321, 1352, 11, 4098, 365, 2452, 2539, 11, 1570, 3089, 307, 1101, 13], "temperature": 0.0, "avg_logprob": -0.192839953634474, "compression_ratio": 1.5932203389830508, "no_speech_prob": 5.1737320063693915e-06}, {"id": 413, "seek": 195816, "start": 1963.3200000000002, "end": 1970.52, "text": " Particularly with FastAI, the code you don't write is code that we've basically found best", "tokens": [32281, 365, 15968, 48698, 11, 264, 3089, 291, 500, 380, 2464, 307, 3089, 300, 321, 600, 1936, 1352, 1151], "temperature": 0.0, "avg_logprob": -0.192839953634474, "compression_ratio": 1.5932203389830508, "no_speech_prob": 5.1737320063693915e-06}, {"id": 414, "seek": 195816, "start": 1970.52, "end": 1972.8400000000001, "text": " practices for you.", "tokens": [7525, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.192839953634474, "compression_ratio": 1.5932203389830508, "no_speech_prob": 5.1737320063693915e-06}, {"id": 415, "seek": 195816, "start": 1972.8400000000001, "end": 1978.1200000000001, "text": " When you use the code that we've provided for you, you'll generally find you get better", "tokens": [1133, 291, 764, 264, 3089, 300, 321, 600, 5649, 337, 291, 11, 291, 603, 5101, 915, 291, 483, 1101], "temperature": 0.0, "avg_logprob": -0.192839953634474, "compression_ratio": 1.5932203389830508, "no_speech_prob": 5.1737320063693915e-06}, {"id": 416, "seek": 195816, "start": 1978.1200000000001, "end": 1979.1200000000001, "text": " results.", "tokens": [3542, 13], "temperature": 0.0, "avg_logprob": -0.192839953634474, "compression_ratio": 1.5932203389830508, "no_speech_prob": 5.1737320063693915e-06}, {"id": 417, "seek": 197912, "start": 1979.12, "end": 1988.4799999999998, "text": " FastAI has been a really popular library and it's very widely used in industry, in academia,", "tokens": [15968, 48698, 575, 668, 257, 534, 3743, 6405, 293, 309, 311, 588, 13371, 1143, 294, 3518, 11, 294, 28937, 11], "temperature": 0.0, "avg_logprob": -0.13079187605116102, "compression_ratio": 1.508695652173913, "no_speech_prob": 6.04830756856245e-06}, {"id": 418, "seek": 197912, "start": 1988.4799999999998, "end": 1991.08, "text": " and in teaching.", "tokens": [293, 294, 4571, 13], "temperature": 0.0, "avg_logprob": -0.13079187605116102, "compression_ratio": 1.508695652173913, "no_speech_prob": 6.04830756856245e-06}, {"id": 419, "seek": 197912, "start": 1991.08, "end": 1996.6399999999999, "text": " As we go through this course, we'll be seeing more and more pure PyTorch as we get deeper", "tokens": [1018, 321, 352, 807, 341, 1164, 11, 321, 603, 312, 2577, 544, 293, 544, 6075, 9953, 51, 284, 339, 382, 321, 483, 7731], "temperature": 0.0, "avg_logprob": -0.13079187605116102, "compression_ratio": 1.508695652173913, "no_speech_prob": 6.04830756856245e-06}, {"id": 420, "seek": 197912, "start": 1996.6399999999999, "end": 2002.3999999999999, "text": " and deeper underneath to see exactly how things work.", "tokens": [293, 7731, 7223, 281, 536, 2293, 577, 721, 589, 13], "temperature": 0.0, "avg_logprob": -0.13079187605116102, "compression_ratio": 1.508695652173913, "no_speech_prob": 6.04830756856245e-06}, {"id": 421, "seek": 197912, "start": 2002.3999999999999, "end": 2007.76, "text": " The FastAI library just won the 2020 Best Paper Award, or the paper about it, in information.", "tokens": [440, 15968, 48698, 6405, 445, 1582, 264, 4808, 9752, 24990, 13894, 11, 420, 264, 3035, 466, 309, 11, 294, 1589, 13], "temperature": 0.0, "avg_logprob": -0.13079187605116102, "compression_ratio": 1.508695652173913, "no_speech_prob": 6.04830756856245e-06}, {"id": 422, "seek": 200776, "start": 2007.76, "end": 2013.72, "text": " So again, you can see it's a very well regarded library.", "tokens": [407, 797, 11, 291, 393, 536, 309, 311, 257, 588, 731, 26047, 6405, 13], "temperature": 0.0, "avg_logprob": -0.23123425000334438, "compression_ratio": 1.463276836158192, "no_speech_prob": 7.764760084683076e-06}, {"id": 423, "seek": 200776, "start": 2013.72, "end": 2019.56, "text": " Okay, so, okay, we're still green.", "tokens": [1033, 11, 370, 11, 1392, 11, 321, 434, 920, 3092, 13], "temperature": 0.0, "avg_logprob": -0.23123425000334438, "compression_ratio": 1.463276836158192, "no_speech_prob": 7.764760084683076e-06}, {"id": 424, "seek": 200776, "start": 2019.56, "end": 2021.64, "text": " That's good.", "tokens": [663, 311, 665, 13], "temperature": 0.0, "avg_logprob": -0.23123425000334438, "compression_ratio": 1.463276836158192, "no_speech_prob": 7.764760084683076e-06}, {"id": 425, "seek": 200776, "start": 2021.64, "end": 2028.64, "text": " So you may have noticed something interesting, which is that I'm actually running code in", "tokens": [407, 291, 815, 362, 5694, 746, 1880, 11, 597, 307, 300, 286, 478, 767, 2614, 3089, 294], "temperature": 0.0, "avg_logprob": -0.23123425000334438, "compression_ratio": 1.463276836158192, "no_speech_prob": 7.764760084683076e-06}, {"id": 426, "seek": 200776, "start": 2028.64, "end": 2030.44, "text": " these slides.", "tokens": [613, 9788, 13], "temperature": 0.0, "avg_logprob": -0.23123425000334438, "compression_ratio": 1.463276836158192, "no_speech_prob": 7.764760084683076e-06}, {"id": 427, "seek": 200776, "start": 2030.44, "end": 2033.16, "text": " That's because these slides are not in PowerPoint.", "tokens": [663, 311, 570, 613, 9788, 366, 406, 294, 25584, 13], "temperature": 0.0, "avg_logprob": -0.23123425000334438, "compression_ratio": 1.463276836158192, "no_speech_prob": 7.764760084683076e-06}, {"id": 428, "seek": 203316, "start": 2033.16, "end": 2039.5600000000002, "text": " These slides are in Jupyter Notebook.", "tokens": [1981, 9788, 366, 294, 22125, 88, 391, 11633, 2939, 13], "temperature": 0.0, "avg_logprob": -0.11900437729699272, "compression_ratio": 1.44, "no_speech_prob": 5.421409241535002e-06}, {"id": 429, "seek": 203316, "start": 2039.5600000000002, "end": 2049.12, "text": " Jupyter Notebook is the environment in which you will be doing most of your computing.", "tokens": [22125, 88, 391, 11633, 2939, 307, 264, 2823, 294, 597, 291, 486, 312, 884, 881, 295, 428, 15866, 13], "temperature": 0.0, "avg_logprob": -0.11900437729699272, "compression_ratio": 1.44, "no_speech_prob": 5.421409241535002e-06}, {"id": 430, "seek": 203316, "start": 2049.12, "end": 2059.2400000000002, "text": " It's a web-based application, which is extremely popular and widely used in industry and in", "tokens": [467, 311, 257, 3670, 12, 6032, 3861, 11, 597, 307, 4664, 3743, 293, 13371, 1143, 294, 3518, 293, 294], "temperature": 0.0, "avg_logprob": -0.11900437729699272, "compression_ratio": 1.44, "no_speech_prob": 5.421409241535002e-06}, {"id": 431, "seek": 205924, "start": 2059.24, "end": 2066.3999999999996, "text": " academia and in teaching, and is a very, very, very powerful way to experiment and explore", "tokens": [28937, 293, 294, 4571, 11, 293, 307, 257, 588, 11, 588, 11, 588, 4005, 636, 281, 5120, 293, 6839], "temperature": 0.0, "avg_logprob": -0.16554856911683694, "compression_ratio": 1.4923857868020305, "no_speech_prob": 7.525648470618762e-06}, {"id": 432, "seek": 205924, "start": 2066.3999999999996, "end": 2069.16, "text": " and build.", "tokens": [293, 1322, 13], "temperature": 0.0, "avg_logprob": -0.16554856911683694, "compression_ratio": 1.4923857868020305, "no_speech_prob": 7.525648470618762e-06}, {"id": 433, "seek": 205924, "start": 2069.16, "end": 2078.12, "text": " Nowadays, I would say most people, at least most students, run Jupyter Notebooks not on", "tokens": [28908, 11, 286, 576, 584, 881, 561, 11, 412, 1935, 881, 1731, 11, 1190, 22125, 88, 391, 11633, 15170, 406, 322], "temperature": 0.0, "avg_logprob": -0.16554856911683694, "compression_ratio": 1.4923857868020305, "no_speech_prob": 7.525648470618762e-06}, {"id": 434, "seek": 205924, "start": 2078.12, "end": 2085.02, "text": " their own computers, particularly for data science, but on a cloud server, of which there's", "tokens": [641, 1065, 10807, 11, 4098, 337, 1412, 3497, 11, 457, 322, 257, 4588, 7154, 11, 295, 597, 456, 311], "temperature": 0.0, "avg_logprob": -0.16554856911683694, "compression_ratio": 1.4923857868020305, "no_speech_prob": 7.525648470618762e-06}, {"id": 435, "seek": 205924, "start": 2085.02, "end": 2086.02, "text": " quite a few.", "tokens": [1596, 257, 1326, 13], "temperature": 0.0, "avg_logprob": -0.16554856911683694, "compression_ratio": 1.4923857868020305, "no_speech_prob": 7.525648470618762e-06}, {"id": 436, "seek": 208602, "start": 2086.02, "end": 2096.0, "text": " And as I mentioned earlier, if you go to course.fast.ai, you can see how to use various different cloud", "tokens": [400, 382, 286, 2835, 3071, 11, 498, 291, 352, 281, 1164, 13, 7011, 13, 1301, 11, 291, 393, 536, 577, 281, 764, 3683, 819, 4588], "temperature": 0.0, "avg_logprob": -0.1620952101314769, "compression_ratio": 1.4069767441860466, "no_speech_prob": 8.798877388471738e-06}, {"id": 437, "seek": 208602, "start": 2096.0, "end": 2099.7, "text": " servers.", "tokens": [15909, 13], "temperature": 0.0, "avg_logprob": -0.1620952101314769, "compression_ratio": 1.4069767441860466, "no_speech_prob": 8.798877388471738e-06}, {"id": 438, "seek": 208602, "start": 2099.7, "end": 2105.44, "text": " One I'm going to show an example of is Kaggle.", "tokens": [1485, 286, 478, 516, 281, 855, 364, 1365, 295, 307, 48751, 22631, 13], "temperature": 0.0, "avg_logprob": -0.1620952101314769, "compression_ratio": 1.4069767441860466, "no_speech_prob": 8.798877388471738e-06}, {"id": 439, "seek": 208602, "start": 2105.44, "end": 2110.4, "text": " So Kaggle doesn't just have competitions, but it also has a cloud notebook server.", "tokens": [407, 48751, 22631, 1177, 380, 445, 362, 26185, 11, 457, 309, 611, 575, 257, 4588, 21060, 7154, 13], "temperature": 0.0, "avg_logprob": -0.1620952101314769, "compression_ratio": 1.4069767441860466, "no_speech_prob": 8.798877388471738e-06}, {"id": 440, "seek": 211040, "start": 2110.4, "end": 2119.12, "text": " And I've got quite a few examples there.", "tokens": [400, 286, 600, 658, 1596, 257, 1326, 5110, 456, 13], "temperature": 0.0, "avg_logprob": -0.10479575088343669, "compression_ratio": 1.5922330097087378, "no_speech_prob": 2.482044237694936e-06}, {"id": 441, "seek": 211040, "start": 2119.12, "end": 2126.56, "text": " So let me give you a quick example of how we use Jupyter Notebooks to build stuff, to", "tokens": [407, 718, 385, 976, 291, 257, 1702, 1365, 295, 577, 321, 764, 22125, 88, 391, 11633, 15170, 281, 1322, 1507, 11, 281], "temperature": 0.0, "avg_logprob": -0.10479575088343669, "compression_ratio": 1.5922330097087378, "no_speech_prob": 2.482044237694936e-06}, {"id": 442, "seek": 211040, "start": 2126.56, "end": 2128.8, "text": " experiment, to explore.", "tokens": [5120, 11, 281, 6839, 13], "temperature": 0.0, "avg_logprob": -0.10479575088343669, "compression_ratio": 1.5922330097087378, "no_speech_prob": 2.482044237694936e-06}, {"id": 443, "seek": 211040, "start": 2128.8, "end": 2132.88, "text": " So on Kaggle, if you start with somebody else's notebook, so why don't you start with this", "tokens": [407, 322, 48751, 22631, 11, 498, 291, 722, 365, 2618, 1646, 311, 21060, 11, 370, 983, 500, 380, 291, 722, 365, 341], "temperature": 0.0, "avg_logprob": -0.10479575088343669, "compression_ratio": 1.5922330097087378, "no_speech_prob": 2.482044237694936e-06}, {"id": 444, "seek": 211040, "start": 2132.88, "end": 2135.7200000000003, "text": " one, Jupyter Notebook 101.", "tokens": [472, 11, 22125, 88, 391, 11633, 2939, 21055, 13], "temperature": 0.0, "avg_logprob": -0.10479575088343669, "compression_ratio": 1.5922330097087378, "no_speech_prob": 2.482044237694936e-06}, {"id": 445, "seek": 211040, "start": 2135.7200000000003, "end": 2138.08, "text": " If it's your own notebook, you'll see a button called edit.", "tokens": [759, 309, 311, 428, 1065, 21060, 11, 291, 603, 536, 257, 2960, 1219, 8129, 13], "temperature": 0.0, "avg_logprob": -0.10479575088343669, "compression_ratio": 1.5922330097087378, "no_speech_prob": 2.482044237694936e-06}, {"id": 446, "seek": 213808, "start": 2138.08, "end": 2142.56, "text": " If it's somebody else's, that button will say copy and edit.", "tokens": [759, 309, 311, 2618, 1646, 311, 11, 300, 2960, 486, 584, 5055, 293, 8129, 13], "temperature": 0.0, "avg_logprob": -0.07450084297024474, "compression_ratio": 1.6954545454545455, "no_speech_prob": 2.1565917904808884e-06}, {"id": 447, "seek": 213808, "start": 2142.56, "end": 2147.1, "text": " If you use somebody's notebook that you like, make sure you click the upvote button to encourage", "tokens": [759, 291, 764, 2618, 311, 21060, 300, 291, 411, 11, 652, 988, 291, 2052, 264, 493, 85, 1370, 2960, 281, 5373], "temperature": 0.0, "avg_logprob": -0.07450084297024474, "compression_ratio": 1.6954545454545455, "no_speech_prob": 2.1565917904808884e-06}, {"id": 448, "seek": 213808, "start": 2147.1, "end": 2152.2799999999997, "text": " them and to help other people find it before you go ahead and copy and edit.", "tokens": [552, 293, 281, 854, 661, 561, 915, 309, 949, 291, 352, 2286, 293, 5055, 293, 8129, 13], "temperature": 0.0, "avg_logprob": -0.07450084297024474, "compression_ratio": 1.6954545454545455, "no_speech_prob": 2.1565917904808884e-06}, {"id": 449, "seek": 213808, "start": 2152.2799999999997, "end": 2159.3199999999997, "text": " And once we're in edit mode, we can now use this notebook.", "tokens": [400, 1564, 321, 434, 294, 8129, 4391, 11, 321, 393, 586, 764, 341, 21060, 13], "temperature": 0.0, "avg_logprob": -0.07450084297024474, "compression_ratio": 1.6954545454545455, "no_speech_prob": 2.1565917904808884e-06}, {"id": 450, "seek": 213808, "start": 2159.3199999999997, "end": 2166.2, "text": " And to use it, we can type in any arbitrary expression in Python and click run.", "tokens": [400, 281, 764, 309, 11, 321, 393, 2010, 294, 604, 23211, 6114, 294, 15329, 293, 2052, 1190, 13], "temperature": 0.0, "avg_logprob": -0.07450084297024474, "compression_ratio": 1.6954545454545455, "no_speech_prob": 2.1565917904808884e-06}, {"id": 451, "seek": 216620, "start": 2166.2, "end": 2168.64, "text": " And the very first time we do that, it says session is starting.", "tokens": [400, 264, 588, 700, 565, 321, 360, 300, 11, 309, 1619, 5481, 307, 2891, 13], "temperature": 0.0, "avg_logprob": -0.09503119200178721, "compression_ratio": 1.584313725490196, "no_speech_prob": 2.81282495961932e-06}, {"id": 452, "seek": 216620, "start": 2168.64, "end": 2173.0, "text": " It's basically launching a virtual computer for us to run our code.", "tokens": [467, 311, 1936, 18354, 257, 6374, 3820, 337, 505, 281, 1190, 527, 3089, 13], "temperature": 0.0, "avg_logprob": -0.09503119200178721, "compression_ratio": 1.584313725490196, "no_speech_prob": 2.81282495961932e-06}, {"id": 453, "seek": 216620, "start": 2173.0, "end": 2176.0, "text": " This is all free.", "tokens": [639, 307, 439, 1737, 13], "temperature": 0.0, "avg_logprob": -0.09503119200178721, "compression_ratio": 1.584313725490196, "no_speech_prob": 2.81282495961932e-06}, {"id": 454, "seek": 216620, "start": 2176.0, "end": 2180.46, "text": " In a sense, it's like the world's most powerful calculator.", "tokens": [682, 257, 2020, 11, 309, 311, 411, 264, 1002, 311, 881, 4005, 24993, 13], "temperature": 0.0, "avg_logprob": -0.09503119200178721, "compression_ratio": 1.584313725490196, "no_speech_prob": 2.81282495961932e-06}, {"id": 455, "seek": 216620, "start": 2180.46, "end": 2186.0, "text": " It's a calculator where you have all of the capabilities of the world's, I think, most", "tokens": [467, 311, 257, 24993, 689, 291, 362, 439, 295, 264, 10862, 295, 264, 1002, 311, 11, 286, 519, 11, 881], "temperature": 0.0, "avg_logprob": -0.09503119200178721, "compression_ratio": 1.584313725490196, "no_speech_prob": 2.81282495961932e-06}, {"id": 456, "seek": 216620, "start": 2186.0, "end": 2191.48, "text": " popular programming language, certainly it and JavaScript would be the top two, directly", "tokens": [3743, 9410, 2856, 11, 3297, 309, 293, 15778, 576, 312, 264, 1192, 732, 11, 3838], "temperature": 0.0, "avg_logprob": -0.09503119200178721, "compression_ratio": 1.584313725490196, "no_speech_prob": 2.81282495961932e-06}, {"id": 457, "seek": 216620, "start": 2191.48, "end": 2192.72, "text": " at your disposal.", "tokens": [412, 428, 26400, 13], "temperature": 0.0, "avg_logprob": -0.09503119200178721, "compression_ratio": 1.584313725490196, "no_speech_prob": 2.81282495961932e-06}, {"id": 458, "seek": 219272, "start": 2192.72, "end": 2198.08, "text": " So Python does know how to do one plus one, and so you can see here it spits out the answer.", "tokens": [407, 15329, 775, 458, 577, 281, 360, 472, 1804, 472, 11, 293, 370, 291, 393, 536, 510, 309, 637, 1208, 484, 264, 1867, 13], "temperature": 0.0, "avg_logprob": -0.16908142917840055, "compression_ratio": 1.663265306122449, "no_speech_prob": 9.515324563835748e-06}, {"id": 459, "seek": 219272, "start": 2198.08, "end": 2199.08, "text": " I hate clicking.", "tokens": [286, 4700, 9697, 13], "temperature": 0.0, "avg_logprob": -0.16908142917840055, "compression_ratio": 1.663265306122449, "no_speech_prob": 9.515324563835748e-06}, {"id": 460, "seek": 219272, "start": 2199.08, "end": 2200.56, "text": " I always use keyboard shortcuts.", "tokens": [286, 1009, 764, 10186, 34620, 13], "temperature": 0.0, "avg_logprob": -0.16908142917840055, "compression_ratio": 1.663265306122449, "no_speech_prob": 9.515324563835748e-06}, {"id": 461, "seek": 219272, "start": 2200.56, "end": 2204.7599999999998, "text": " So instead of clicking this little arrow, you just press shift enter to do the same", "tokens": [407, 2602, 295, 9697, 341, 707, 11610, 11, 291, 445, 1886, 5513, 3242, 281, 360, 264, 912], "temperature": 0.0, "avg_logprob": -0.16908142917840055, "compression_ratio": 1.663265306122449, "no_speech_prob": 9.515324563835748e-06}, {"id": 462, "seek": 219272, "start": 2204.7599999999998, "end": 2206.7999999999997, "text": " thing.", "tokens": [551, 13], "temperature": 0.0, "avg_logprob": -0.16908142917840055, "compression_ratio": 1.663265306122449, "no_speech_prob": 9.515324563835748e-06}, {"id": 463, "seek": 219272, "start": 2206.7999999999997, "end": 2209.48, "text": " But as you can see, there's not just calculations here.", "tokens": [583, 382, 291, 393, 536, 11, 456, 311, 406, 445, 20448, 510, 13], "temperature": 0.0, "avg_logprob": -0.16908142917840055, "compression_ratio": 1.663265306122449, "no_speech_prob": 9.515324563835748e-06}, {"id": 464, "seek": 219272, "start": 2209.48, "end": 2212.4399999999996, "text": " There's also pros.", "tokens": [821, 311, 611, 6267, 13], "temperature": 0.0, "avg_logprob": -0.16908142917840055, "compression_ratio": 1.663265306122449, "no_speech_prob": 9.515324563835748e-06}, {"id": 465, "seek": 219272, "start": 2212.4399999999996, "end": 2218.2799999999997, "text": " And so Jupyter Notebooks are great for explaining to you the version of yourself in six months", "tokens": [400, 370, 22125, 88, 391, 11633, 15170, 366, 869, 337, 13468, 281, 291, 264, 3037, 295, 1803, 294, 2309, 2493], "temperature": 0.0, "avg_logprob": -0.16908142917840055, "compression_ratio": 1.663265306122449, "no_speech_prob": 9.515324563835748e-06}, {"id": 466, "seek": 219272, "start": 2218.2799999999997, "end": 2222.24, "text": " time what on earth you are doing or to your coworkers or to people in the open source", "tokens": [565, 437, 322, 4120, 291, 366, 884, 420, 281, 428, 43465, 420, 281, 561, 294, 264, 1269, 4009], "temperature": 0.0, "avg_logprob": -0.16908142917840055, "compression_ratio": 1.663265306122449, "no_speech_prob": 9.515324563835748e-06}, {"id": 467, "seek": 222224, "start": 2222.24, "end": 2225.68, "text": " community, what are people you're blogging for, etc.", "tokens": [1768, 11, 437, 366, 561, 291, 434, 6968, 3249, 337, 11, 5183, 13], "temperature": 0.0, "avg_logprob": -0.16898610570409275, "compression_ratio": 1.7946428571428572, "no_speech_prob": 1.1646439816104248e-05}, {"id": 468, "seek": 222224, "start": 2225.68, "end": 2228.9599999999996, "text": " And so you just type pros.", "tokens": [400, 370, 291, 445, 2010, 6267, 13], "temperature": 0.0, "avg_logprob": -0.16898610570409275, "compression_ratio": 1.7946428571428572, "no_speech_prob": 1.1646439816104248e-05}, {"id": 469, "seek": 222224, "start": 2228.9599999999996, "end": 2233.12, "text": " And as you can see, when we create a new cell, you can create a code cell, which is a cell", "tokens": [400, 382, 291, 393, 536, 11, 562, 321, 1884, 257, 777, 2815, 11, 291, 393, 1884, 257, 3089, 2815, 11, 597, 307, 257, 2815], "temperature": 0.0, "avg_logprob": -0.16898610570409275, "compression_ratio": 1.7946428571428572, "no_speech_prob": 1.1646439816104248e-05}, {"id": 470, "seek": 222224, "start": 2233.12, "end": 2241.3199999999997, "text": " that lets you type calculations or a markdown cell, which is a cell that lets you create", "tokens": [300, 6653, 291, 2010, 20448, 420, 257, 1491, 5093, 2815, 11, 597, 307, 257, 2815, 300, 6653, 291, 1884], "temperature": 0.0, "avg_logprob": -0.16898610570409275, "compression_ratio": 1.7946428571428572, "no_speech_prob": 1.1646439816104248e-05}, {"id": 471, "seek": 222224, "start": 2241.3199999999997, "end": 2244.8399999999997, "text": " pros.", "tokens": [6267, 13], "temperature": 0.0, "avg_logprob": -0.16898610570409275, "compression_ratio": 1.7946428571428572, "no_speech_prob": 1.1646439816104248e-05}, {"id": 472, "seek": 222224, "start": 2244.8399999999997, "end": 2249.0, "text": " And the pros use this formatting in a little mini language called markdown.", "tokens": [400, 264, 6267, 764, 341, 39366, 294, 257, 707, 8382, 2856, 1219, 1491, 5093, 13], "temperature": 0.0, "avg_logprob": -0.16898610570409275, "compression_ratio": 1.7946428571428572, "no_speech_prob": 1.1646439816104248e-05}, {"id": 473, "seek": 222224, "start": 2249.0, "end": 2251.52, "text": " There's so many tutorials around, I won't explain it to you.", "tokens": [821, 311, 370, 867, 17616, 926, 11, 286, 1582, 380, 2903, 309, 281, 291, 13], "temperature": 0.0, "avg_logprob": -0.16898610570409275, "compression_ratio": 1.7946428571428572, "no_speech_prob": 1.1646439816104248e-05}, {"id": 474, "seek": 225152, "start": 2251.52, "end": 2260.36, "text": " But it lets you do things like links and so forth.", "tokens": [583, 309, 6653, 291, 360, 721, 411, 6123, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.12431473202175564, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.6026731373131042e-06}, {"id": 475, "seek": 225152, "start": 2260.36, "end": 2265.16, "text": " So I'll let you follow through the tutorial in your own time because it really explains", "tokens": [407, 286, 603, 718, 291, 1524, 807, 264, 7073, 294, 428, 1065, 565, 570, 309, 534, 13948], "temperature": 0.0, "avg_logprob": -0.12431473202175564, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.6026731373131042e-06}, {"id": 476, "seek": 225152, "start": 2265.16, "end": 2268.22, "text": " to you what to do.", "tokens": [281, 291, 437, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.12431473202175564, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.6026731373131042e-06}, {"id": 477, "seek": 225152, "start": 2268.22, "end": 2272.04, "text": " One thing to point out is that sometimes you'll see me use cells with an exclamation mark", "tokens": [1485, 551, 281, 935, 484, 307, 300, 2171, 291, 603, 536, 385, 764, 5438, 365, 364, 1624, 43233, 1491], "temperature": 0.0, "avg_logprob": -0.12431473202175564, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.6026731373131042e-06}, {"id": 478, "seek": 225152, "start": 2272.04, "end": 2273.52, "text": " at the start.", "tokens": [412, 264, 722, 13], "temperature": 0.0, "avg_logprob": -0.12431473202175564, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.6026731373131042e-06}, {"id": 479, "seek": 225152, "start": 2273.52, "end": 2275.02, "text": " That's not Python.", "tokens": [663, 311, 406, 15329, 13], "temperature": 0.0, "avg_logprob": -0.12431473202175564, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.6026731373131042e-06}, {"id": 480, "seek": 225152, "start": 2275.02, "end": 2277.04, "text": " That's a bash shell command.", "tokens": [663, 311, 257, 46183, 8720, 5622, 13], "temperature": 0.0, "avg_logprob": -0.12431473202175564, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.6026731373131042e-06}, {"id": 481, "seek": 225152, "start": 2277.04, "end": 2278.04, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.12431473202175564, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.6026731373131042e-06}, {"id": 482, "seek": 227804, "start": 2278.04, "end": 2282.96, "text": " So that's what the exclamation mark means.", "tokens": [407, 300, 311, 437, 264, 1624, 43233, 1491, 1355, 13], "temperature": 0.0, "avg_logprob": -0.1206395237944847, "compression_ratio": 1.5645933014354068, "no_speech_prob": 3.18669981425046e-06}, {"id": 483, "seek": 227804, "start": 2282.96, "end": 2285.88, "text": " As you can see, you can put images into notebooks.", "tokens": [1018, 291, 393, 536, 11, 291, 393, 829, 5267, 666, 43782, 13], "temperature": 0.0, "avg_logprob": -0.1206395237944847, "compression_ratio": 1.5645933014354068, "no_speech_prob": 3.18669981425046e-06}, {"id": 484, "seek": 227804, "start": 2285.88, "end": 2290.8, "text": " And so the image I popped in here was the one showing that Jupiter won the 2017 software", "tokens": [400, 370, 264, 3256, 286, 21545, 294, 510, 390, 264, 472, 4099, 300, 24567, 1582, 264, 6591, 4722], "temperature": 0.0, "avg_logprob": -0.1206395237944847, "compression_ratio": 1.5645933014354068, "no_speech_prob": 3.18669981425046e-06}, {"id": 485, "seek": 227804, "start": 2290.8, "end": 2296.52, "text": " system award, which is pretty much the biggest award there is for this kind of software.", "tokens": [1185, 7130, 11, 597, 307, 1238, 709, 264, 3880, 7130, 456, 307, 337, 341, 733, 295, 4722, 13], "temperature": 0.0, "avg_logprob": -0.1206395237944847, "compression_ratio": 1.5645933014354068, "no_speech_prob": 3.18669981425046e-06}, {"id": 486, "seek": 227804, "start": 2296.52, "end": 2297.52, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.1206395237944847, "compression_ratio": 1.5645933014354068, "no_speech_prob": 3.18669981425046e-06}, {"id": 487, "seek": 227804, "start": 2297.52, "end": 2306.16, "text": " So that's the basic idea of how we use notebooks.", "tokens": [407, 300, 311, 264, 3875, 1558, 295, 577, 321, 764, 43782, 13], "temperature": 0.0, "avg_logprob": -0.1206395237944847, "compression_ratio": 1.5645933014354068, "no_speech_prob": 3.18669981425046e-06}, {"id": 488, "seek": 230616, "start": 2306.16, "end": 2316.3799999999997, "text": " So let's have a look at how we do our bird or not bird model.", "tokens": [407, 718, 311, 362, 257, 574, 412, 577, 321, 360, 527, 5255, 420, 406, 5255, 2316, 13], "temperature": 0.0, "avg_logprob": -0.1337949207850865, "compression_ratio": 1.5042735042735043, "no_speech_prob": 5.25454242961132e-06}, {"id": 489, "seek": 230616, "start": 2316.3799999999997, "end": 2321.6, "text": " One thing I always like to do when I'm using something like Colab or Kaggle cloud platforms", "tokens": [1485, 551, 286, 1009, 411, 281, 360, 562, 286, 478, 1228, 746, 411, 4004, 455, 420, 48751, 22631, 4588, 9473], "temperature": 0.0, "avg_logprob": -0.1337949207850865, "compression_ratio": 1.5042735042735043, "no_speech_prob": 5.25454242961132e-06}, {"id": 490, "seek": 230616, "start": 2321.6, "end": 2326.68, "text": " that I'm not controlling is make sure that I'm using the most recent version of any software.", "tokens": [300, 286, 478, 406, 14905, 307, 652, 988, 300, 286, 478, 1228, 264, 881, 5162, 3037, 295, 604, 4722, 13], "temperature": 0.0, "avg_logprob": -0.1337949207850865, "compression_ratio": 1.5042735042735043, "no_speech_prob": 5.25454242961132e-06}, {"id": 491, "seek": 230616, "start": 2326.68, "end": 2331.42, "text": " So my first cell here is exclamation mark pip install minus U.", "tokens": [407, 452, 700, 2815, 510, 307, 1624, 43233, 1491, 8489, 3625, 3175, 624, 13], "temperature": 0.0, "avg_logprob": -0.1337949207850865, "compression_ratio": 1.5042735042735043, "no_speech_prob": 5.25454242961132e-06}, {"id": 492, "seek": 230616, "start": 2331.42, "end": 2332.42, "text": " That means upgrade.", "tokens": [663, 1355, 11484, 13], "temperature": 0.0, "avg_logprob": -0.1337949207850865, "compression_ratio": 1.5042735042735043, "no_speech_prob": 5.25454242961132e-06}, {"id": 493, "seek": 230616, "start": 2332.42, "end": 2333.42, "text": " Q for quiet.", "tokens": [1249, 337, 5677, 13], "temperature": 0.0, "avg_logprob": -0.1337949207850865, "compression_ratio": 1.5042735042735043, "no_speech_prob": 5.25454242961132e-06}, {"id": 494, "seek": 230616, "start": 2333.42, "end": 2334.42, "text": " Fast AI.", "tokens": [15968, 7318, 13], "temperature": 0.0, "avg_logprob": -0.1337949207850865, "compression_ratio": 1.5042735042735043, "no_speech_prob": 5.25454242961132e-06}, {"id": 495, "seek": 233442, "start": 2334.42, "end": 2337.64, "text": " So that makes sure that we have the latest version of fast AI.", "tokens": [407, 300, 1669, 988, 300, 321, 362, 264, 6792, 3037, 295, 2370, 7318, 13], "temperature": 0.0, "avg_logprob": -0.09909815881766525, "compression_ratio": 1.722943722943723, "no_speech_prob": 4.157045168540208e-06}, {"id": 496, "seek": 233442, "start": 2337.64, "end": 2340.32, "text": " And if you always have that at the start of your notebooks, you're never going to have", "tokens": [400, 498, 291, 1009, 362, 300, 412, 264, 722, 295, 428, 43782, 11, 291, 434, 1128, 516, 281, 362], "temperature": 0.0, "avg_logprob": -0.09909815881766525, "compression_ratio": 1.722943722943723, "no_speech_prob": 4.157045168540208e-06}, {"id": 497, "seek": 233442, "start": 2340.32, "end": 2343.84, "text": " those awkward foreign threads where you say, why isn't this working?", "tokens": [729, 11411, 5329, 19314, 689, 291, 584, 11, 983, 1943, 380, 341, 1364, 30], "temperature": 0.0, "avg_logprob": -0.09909815881766525, "compression_ratio": 1.722943722943723, "no_speech_prob": 4.157045168540208e-06}, {"id": 498, "seek": 233442, "start": 2343.84, "end": 2349.88, "text": " And somebody says to you, oh, you're using an old version of some software.", "tokens": [400, 2618, 1619, 281, 291, 11, 1954, 11, 291, 434, 1228, 364, 1331, 3037, 295, 512, 4722, 13], "temperature": 0.0, "avg_logprob": -0.09909815881766525, "compression_ratio": 1.722943722943723, "no_speech_prob": 4.157045168540208e-06}, {"id": 499, "seek": 233442, "start": 2349.88, "end": 2356.7200000000003, "text": " So you'll see here this notebook is the exact thing that I was showing you at the start", "tokens": [407, 291, 603, 536, 510, 341, 21060, 307, 264, 1900, 551, 300, 286, 390, 4099, 291, 412, 264, 722], "temperature": 0.0, "avg_logprob": -0.09909815881766525, "compression_ratio": 1.722943722943723, "no_speech_prob": 4.157045168540208e-06}, {"id": 500, "seek": 233442, "start": 2356.7200000000003, "end": 2362.04, "text": " of this lesson.", "tokens": [295, 341, 6898, 13], "temperature": 0.0, "avg_logprob": -0.09909815881766525, "compression_ratio": 1.722943722943723, "no_speech_prob": 4.157045168540208e-06}, {"id": 501, "seek": 236204, "start": 2362.04, "end": 2373.4, "text": " So if you haven't done much Python, you might be surprised about how little code there is", "tokens": [407, 498, 291, 2378, 380, 1096, 709, 15329, 11, 291, 1062, 312, 6100, 466, 577, 707, 3089, 456, 307], "temperature": 0.0, "avg_logprob": -0.13495990557548326, "compression_ratio": 1.5544041450777202, "no_speech_prob": 5.092188075650483e-06}, {"id": 502, "seek": 236204, "start": 2373.4, "end": 2374.7599999999998, "text": " here.", "tokens": [510, 13], "temperature": 0.0, "avg_logprob": -0.13495990557548326, "compression_ratio": 1.5544041450777202, "no_speech_prob": 5.092188075650483e-06}, {"id": 503, "seek": 236204, "start": 2374.7599999999998, "end": 2381.64, "text": " And so Python is a concise but not too concise language.", "tokens": [400, 370, 15329, 307, 257, 44882, 457, 406, 886, 44882, 2856, 13], "temperature": 0.0, "avg_logprob": -0.13495990557548326, "compression_ratio": 1.5544041450777202, "no_speech_prob": 5.092188075650483e-06}, {"id": 504, "seek": 236204, "start": 2381.64, "end": 2384.7599999999998, "text": " You'll see that there's less boilerplate than some other languages you might be familiar", "tokens": [509, 603, 536, 300, 456, 311, 1570, 39228, 37008, 813, 512, 661, 8650, 291, 1062, 312, 4963], "temperature": 0.0, "avg_logprob": -0.13495990557548326, "compression_ratio": 1.5544041450777202, "no_speech_prob": 5.092188075650483e-06}, {"id": 505, "seek": 236204, "start": 2384.7599999999998, "end": 2386.8, "text": " with.", "tokens": [365, 13], "temperature": 0.0, "avg_logprob": -0.13495990557548326, "compression_ratio": 1.5544041450777202, "no_speech_prob": 5.092188075650483e-06}, {"id": 506, "seek": 236204, "start": 2386.8, "end": 2389.6, "text": " And I'm also taking advantage of a lot of libraries.", "tokens": [400, 286, 478, 611, 1940, 5002, 295, 257, 688, 295, 15148, 13], "temperature": 0.0, "avg_logprob": -0.13495990557548326, "compression_ratio": 1.5544041450777202, "no_speech_prob": 5.092188075650483e-06}, {"id": 507, "seek": 238960, "start": 2389.6, "end": 2394.92, "text": " So fast AI provides a lot of convenient things for you.", "tokens": [407, 2370, 7318, 6417, 257, 688, 295, 10851, 721, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.16402835845947267, "compression_ratio": 1.4635761589403973, "no_speech_prob": 5.9527783378143795e-06}, {"id": 508, "seek": 238960, "start": 2394.92, "end": 2407.66, "text": " So to use an external library, we use import.", "tokens": [407, 281, 764, 364, 8320, 6405, 11, 321, 764, 974, 13], "temperature": 0.0, "avg_logprob": -0.16402835845947267, "compression_ratio": 1.4635761589403973, "no_speech_prob": 5.9527783378143795e-06}, {"id": 509, "seek": 238960, "start": 2407.66, "end": 2411.52, "text": " To import a symbol from a library.", "tokens": [1407, 974, 257, 5986, 490, 257, 6405, 13], "temperature": 0.0, "avg_logprob": -0.16402835845947267, "compression_ratio": 1.4635761589403973, "no_speech_prob": 5.9527783378143795e-06}, {"id": 510, "seek": 238960, "start": 2411.52, "end": 2413.7999999999997, "text": " Fast AI has a lot of libraries we provide.", "tokens": [15968, 7318, 575, 257, 688, 295, 15148, 321, 2893, 13], "temperature": 0.0, "avg_logprob": -0.16402835845947267, "compression_ratio": 1.4635761589403973, "no_speech_prob": 5.9527783378143795e-06}, {"id": 511, "seek": 238960, "start": 2413.7999999999997, "end": 2415.6, "text": " They generally start with fast something.", "tokens": [814, 5101, 722, 365, 2370, 746, 13], "temperature": 0.0, "avg_logprob": -0.16402835845947267, "compression_ratio": 1.4635761589403973, "no_speech_prob": 5.9527783378143795e-06}, {"id": 512, "seek": 241560, "start": 2415.6, "end": 2422.04, "text": " So for example, to make it easy to download a URL, fast download has download URL.", "tokens": [407, 337, 1365, 11, 281, 652, 309, 1858, 281, 5484, 257, 12905, 11, 2370, 5484, 575, 5484, 12905, 13], "temperature": 0.0, "avg_logprob": -0.11039597960724228, "compression_ratio": 1.59, "no_speech_prob": 5.421215064416174e-06}, {"id": 513, "seek": 241560, "start": 2422.04, "end": 2430.42, "text": " To make it easy to create a thumbnail, we have image to thumb and so forth.", "tokens": [1407, 652, 309, 1858, 281, 1884, 257, 26746, 11, 321, 362, 3256, 281, 9298, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.11039597960724228, "compression_ratio": 1.59, "no_speech_prob": 5.421215064416174e-06}, {"id": 514, "seek": 241560, "start": 2430.42, "end": 2437.7, "text": " So I always like to view as I'm building a model, my data at every step.", "tokens": [407, 286, 1009, 411, 281, 1910, 382, 286, 478, 2390, 257, 2316, 11, 452, 1412, 412, 633, 1823, 13], "temperature": 0.0, "avg_logprob": -0.11039597960724228, "compression_ratio": 1.59, "no_speech_prob": 5.421215064416174e-06}, {"id": 515, "seek": 241560, "start": 2437.7, "end": 2444.44, "text": " So that's why I first of all grab one bird and then I grab one forest photo and I look", "tokens": [407, 300, 311, 983, 286, 700, 295, 439, 4444, 472, 5255, 293, 550, 286, 4444, 472, 6719, 5052, 293, 286, 574], "temperature": 0.0, "avg_logprob": -0.11039597960724228, "compression_ratio": 1.59, "no_speech_prob": 5.421215064416174e-06}, {"id": 516, "seek": 244444, "start": 2444.44, "end": 2449.52, "text": " at them to make sure they look reasonable.", "tokens": [412, 552, 281, 652, 988, 436, 574, 10585, 13], "temperature": 0.0, "avg_logprob": -0.1443488569144743, "compression_ratio": 1.53125, "no_speech_prob": 5.421671630756464e-06}, {"id": 517, "seek": 244444, "start": 2449.52, "end": 2458.62, "text": " And once I think, okay, they look okay, then I go ahead and download.", "tokens": [400, 1564, 286, 519, 11, 1392, 11, 436, 574, 1392, 11, 550, 286, 352, 2286, 293, 5484, 13], "temperature": 0.0, "avg_logprob": -0.1443488569144743, "compression_ratio": 1.53125, "no_speech_prob": 5.421671630756464e-06}, {"id": 518, "seek": 244444, "start": 2458.62, "end": 2464.7200000000003, "text": " And so you can see fast AI has a download images where you just provide a list of URLs.", "tokens": [400, 370, 291, 393, 536, 2370, 7318, 575, 257, 5484, 5267, 689, 291, 445, 2893, 257, 1329, 295, 43267, 13], "temperature": 0.0, "avg_logprob": -0.1443488569144743, "compression_ratio": 1.53125, "no_speech_prob": 5.421671630756464e-06}, {"id": 519, "seek": 244444, "start": 2464.7200000000003, "end": 2466.1, "text": " So that's how easy it is.", "tokens": [407, 300, 311, 577, 1858, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.1443488569144743, "compression_ratio": 1.53125, "no_speech_prob": 5.421671630756464e-06}, {"id": 520, "seek": 244444, "start": 2466.1, "end": 2468.0, "text": " And it does that in parallel.", "tokens": [400, 309, 775, 300, 294, 8952, 13], "temperature": 0.0, "avg_logprob": -0.1443488569144743, "compression_ratio": 1.53125, "no_speech_prob": 5.421671630756464e-06}, {"id": 521, "seek": 244444, "start": 2468.0, "end": 2473.04, "text": " So it does that surprisingly quickly.", "tokens": [407, 309, 775, 300, 17600, 2661, 13], "temperature": 0.0, "avg_logprob": -0.1443488569144743, "compression_ratio": 1.53125, "no_speech_prob": 5.421671630756464e-06}, {"id": 522, "seek": 247304, "start": 2473.04, "end": 2477.72, "text": " Another fast AI thing I'm using here is resize images.", "tokens": [3996, 2370, 7318, 551, 286, 478, 1228, 510, 307, 50069, 5267, 13], "temperature": 0.0, "avg_logprob": -0.1631757339628616, "compression_ratio": 1.5258964143426295, "no_speech_prob": 7.5275652307027485e-06}, {"id": 523, "seek": 247304, "start": 2477.72, "end": 2481.56, "text": " You generally will find that for computer vision algorithms, you don't need particularly", "tokens": [509, 5101, 486, 915, 300, 337, 3820, 5201, 14642, 11, 291, 500, 380, 643, 4098], "temperature": 0.0, "avg_logprob": -0.1631757339628616, "compression_ratio": 1.5258964143426295, "no_speech_prob": 7.5275652307027485e-06}, {"id": 524, "seek": 247304, "start": 2481.56, "end": 2483.38, "text": " big images.", "tokens": [955, 5267, 13], "temperature": 0.0, "avg_logprob": -0.1631757339628616, "compression_ratio": 1.5258964143426295, "no_speech_prob": 7.5275652307027485e-06}, {"id": 525, "seek": 247304, "start": 2483.38, "end": 2486.64, "text": " So I'm resizing these to a maximum size length of 400.", "tokens": [407, 286, 478, 725, 3319, 613, 281, 257, 6674, 2744, 4641, 295, 8423, 13], "temperature": 0.0, "avg_logprob": -0.1631757339628616, "compression_ratio": 1.5258964143426295, "no_speech_prob": 7.5275652307027485e-06}, {"id": 526, "seek": 247304, "start": 2486.64, "end": 2490.82, "text": " Because it's actually much faster.", "tokens": [1436, 309, 311, 767, 709, 4663, 13], "temperature": 0.0, "avg_logprob": -0.1631757339628616, "compression_ratio": 1.5258964143426295, "no_speech_prob": 7.5275652307027485e-06}, {"id": 527, "seek": 247304, "start": 2490.82, "end": 2496.64, "text": " Because GPUs are so quick, for big images, most of the time can be taken up just opening", "tokens": [1436, 18407, 82, 366, 370, 1702, 11, 337, 955, 5267, 11, 881, 295, 264, 565, 393, 312, 2726, 493, 445, 5193], "temperature": 0.0, "avg_logprob": -0.1631757339628616, "compression_ratio": 1.5258964143426295, "no_speech_prob": 7.5275652307027485e-06}, {"id": 528, "seek": 247304, "start": 2496.64, "end": 2497.64, "text": " it.", "tokens": [309, 13], "temperature": 0.0, "avg_logprob": -0.1631757339628616, "compression_ratio": 1.5258964143426295, "no_speech_prob": 7.5275652307027485e-06}, {"id": 529, "seek": 247304, "start": 2497.64, "end": 2500.7599999999998, "text": " The neural net itself often takes less time.", "tokens": [440, 18161, 2533, 2564, 2049, 2516, 1570, 565, 13], "temperature": 0.0, "avg_logprob": -0.1631757339628616, "compression_ratio": 1.5258964143426295, "no_speech_prob": 7.5275652307027485e-06}, {"id": 530, "seek": 250076, "start": 2500.76, "end": 2505.6000000000004, "text": " So that's another good reason to make them smaller.", "tokens": [407, 300, 311, 1071, 665, 1778, 281, 652, 552, 4356, 13], "temperature": 0.0, "avg_logprob": -0.12782184132989846, "compression_ratio": 1.7245762711864407, "no_speech_prob": 3.8446751204901375e-06}, {"id": 531, "seek": 250076, "start": 2505.6000000000004, "end": 2507.0800000000004, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.12782184132989846, "compression_ratio": 1.7245762711864407, "no_speech_prob": 3.8446751204901375e-06}, {"id": 532, "seek": 250076, "start": 2507.0800000000004, "end": 2511.46, "text": " So the main thing I wanted to tell you about was this data block command.", "tokens": [407, 264, 2135, 551, 286, 1415, 281, 980, 291, 466, 390, 341, 1412, 3461, 5622, 13], "temperature": 0.0, "avg_logprob": -0.12782184132989846, "compression_ratio": 1.7245762711864407, "no_speech_prob": 3.8446751204901375e-06}, {"id": 533, "seek": 250076, "start": 2511.46, "end": 2516.6800000000003, "text": " So the data block is the key thing that you're going to want to get familiar with as deep", "tokens": [407, 264, 1412, 3461, 307, 264, 2141, 551, 300, 291, 434, 516, 281, 528, 281, 483, 4963, 365, 382, 2452], "temperature": 0.0, "avg_logprob": -0.12782184132989846, "compression_ratio": 1.7245762711864407, "no_speech_prob": 3.8446751204901375e-06}, {"id": 534, "seek": 250076, "start": 2516.6800000000003, "end": 2519.94, "text": " learning practitioners at the start of your journey.", "tokens": [2539, 25742, 412, 264, 722, 295, 428, 4671, 13], "temperature": 0.0, "avg_logprob": -0.12782184132989846, "compression_ratio": 1.7245762711864407, "no_speech_prob": 3.8446751204901375e-06}, {"id": 535, "seek": 250076, "start": 2519.94, "end": 2525.6800000000003, "text": " Because the main thing you're going to be trying to figure out is how do I get this", "tokens": [1436, 264, 2135, 551, 291, 434, 516, 281, 312, 1382, 281, 2573, 484, 307, 577, 360, 286, 483, 341], "temperature": 0.0, "avg_logprob": -0.12782184132989846, "compression_ratio": 1.7245762711864407, "no_speech_prob": 3.8446751204901375e-06}, {"id": 536, "seek": 250076, "start": 2525.6800000000003, "end": 2528.5200000000004, "text": " data into my model.", "tokens": [1412, 666, 452, 2316, 13], "temperature": 0.0, "avg_logprob": -0.12782184132989846, "compression_ratio": 1.7245762711864407, "no_speech_prob": 3.8446751204901375e-06}, {"id": 537, "seek": 250076, "start": 2528.5200000000004, "end": 2529.88, "text": " Now that might surprise you.", "tokens": [823, 300, 1062, 6365, 291, 13], "temperature": 0.0, "avg_logprob": -0.12782184132989846, "compression_ratio": 1.7245762711864407, "no_speech_prob": 3.8446751204901375e-06}, {"id": 538, "seek": 252988, "start": 2529.88, "end": 2533.32, "text": " You might be thinking we should be spending all of our time talking about neural network", "tokens": [509, 1062, 312, 1953, 321, 820, 312, 6434, 439, 295, 527, 565, 1417, 466, 18161, 3209], "temperature": 0.0, "avg_logprob": -0.09883162680636631, "compression_ratio": 1.6024096385542168, "no_speech_prob": 7.2958978307724465e-06}, {"id": 539, "seek": 252988, "start": 2533.32, "end": 2538.7200000000003, "text": " architectures and matrix multiplication and gradients and stuff like that.", "tokens": [6331, 1303, 293, 8141, 27290, 293, 2771, 2448, 293, 1507, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.09883162680636631, "compression_ratio": 1.6024096385542168, "no_speech_prob": 7.2958978307724465e-06}, {"id": 540, "seek": 252988, "start": 2538.7200000000003, "end": 2544.92, "text": " The truth is, very little of that comes up in practice.", "tokens": [440, 3494, 307, 11, 588, 707, 295, 300, 1487, 493, 294, 3124, 13], "temperature": 0.0, "avg_logprob": -0.09883162680636631, "compression_ratio": 1.6024096385542168, "no_speech_prob": 7.2958978307724465e-06}, {"id": 541, "seek": 252988, "start": 2544.92, "end": 2550.88, "text": " And the reason is that at this point, the deep learning community has found a reasonably", "tokens": [400, 264, 1778, 307, 300, 412, 341, 935, 11, 264, 2452, 2539, 1768, 575, 1352, 257, 23551], "temperature": 0.0, "avg_logprob": -0.09883162680636631, "compression_ratio": 1.6024096385542168, "no_speech_prob": 7.2958978307724465e-06}, {"id": 542, "seek": 252988, "start": 2550.88, "end": 2559.8, "text": " small number of types of model that work for nearly all the main applications you'll need.", "tokens": [1359, 1230, 295, 3467, 295, 2316, 300, 589, 337, 6217, 439, 264, 2135, 5821, 291, 603, 643, 13], "temperature": 0.0, "avg_logprob": -0.09883162680636631, "compression_ratio": 1.6024096385542168, "no_speech_prob": 7.2958978307724465e-06}, {"id": 543, "seek": 255980, "start": 2559.8, "end": 2567.2400000000002, "text": " And fast AI will create the right type of model for you the vast majority of the time.", "tokens": [400, 2370, 7318, 486, 1884, 264, 558, 2010, 295, 2316, 337, 291, 264, 8369, 6286, 295, 264, 565, 13], "temperature": 0.0, "avg_logprob": -0.1324408438897902, "compression_ratio": 1.5860655737704918, "no_speech_prob": 6.961804956517881e-06}, {"id": 544, "seek": 255980, "start": 2567.2400000000002, "end": 2573.8, "text": " So all of that stuff about tweaking neural network architectures and stuff, I mean, we'll", "tokens": [407, 439, 295, 300, 1507, 466, 6986, 2456, 18161, 3209, 6331, 1303, 293, 1507, 11, 286, 914, 11, 321, 603], "temperature": 0.0, "avg_logprob": -0.1324408438897902, "compression_ratio": 1.5860655737704918, "no_speech_prob": 6.961804956517881e-06}, {"id": 545, "seek": 255980, "start": 2573.8, "end": 2576.4, "text": " get to it eventually in this course.", "tokens": [483, 281, 309, 4728, 294, 341, 1164, 13], "temperature": 0.0, "avg_logprob": -0.1324408438897902, "compression_ratio": 1.5860655737704918, "no_speech_prob": 6.961804956517881e-06}, {"id": 546, "seek": 255980, "start": 2576.4, "end": 2582.04, "text": " But you might be surprised to discover that it almost never comes up kind of like if you", "tokens": [583, 291, 1062, 312, 6100, 281, 4411, 300, 309, 1920, 1128, 1487, 493, 733, 295, 411, 498, 291], "temperature": 0.0, "avg_logprob": -0.1324408438897902, "compression_ratio": 1.5860655737704918, "no_speech_prob": 6.961804956517881e-06}, {"id": 547, "seek": 255980, "start": 2582.04, "end": 2585.2000000000003, "text": " ever did like a computer science course or something and they spent all this time on", "tokens": [1562, 630, 411, 257, 3820, 3497, 1164, 420, 746, 293, 436, 4418, 439, 341, 565, 322], "temperature": 0.0, "avg_logprob": -0.1324408438897902, "compression_ratio": 1.5860655737704918, "no_speech_prob": 6.961804956517881e-06}, {"id": 548, "seek": 258520, "start": 2585.2, "end": 2590.2799999999997, "text": " the details of compilers and operating systems and then you get to the real world and you", "tokens": [264, 4365, 295, 715, 388, 433, 293, 7447, 3652, 293, 550, 291, 483, 281, 264, 957, 1002, 293, 291], "temperature": 0.0, "avg_logprob": -0.1590909787586757, "compression_ratio": 1.623076923076923, "no_speech_prob": 1.9522105503710918e-05}, {"id": 549, "seek": 258520, "start": 2590.2799999999997, "end": 2592.16, "text": " never use it again.", "tokens": [1128, 764, 309, 797, 13], "temperature": 0.0, "avg_logprob": -0.1590909787586757, "compression_ratio": 1.623076923076923, "no_speech_prob": 1.9522105503710918e-05}, {"id": 550, "seek": 258520, "start": 2592.16, "end": 2594.52, "text": " So this course is called practical deep learning.", "tokens": [407, 341, 1164, 307, 1219, 8496, 2452, 2539, 13], "temperature": 0.0, "avg_logprob": -0.1590909787586757, "compression_ratio": 1.623076923076923, "no_speech_prob": 1.9522105503710918e-05}, {"id": 551, "seek": 258520, "start": 2594.52, "end": 2598.08, "text": " And so we're going to focus on the stuff that is practically important.", "tokens": [400, 370, 321, 434, 516, 281, 1879, 322, 264, 1507, 300, 307, 15667, 1021, 13], "temperature": 0.0, "avg_logprob": -0.1590909787586757, "compression_ratio": 1.623076923076923, "no_speech_prob": 1.9522105503710918e-05}, {"id": 552, "seek": 258520, "start": 2598.08, "end": 2599.08, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.1590909787586757, "compression_ratio": 1.623076923076923, "no_speech_prob": 1.9522105503710918e-05}, {"id": 553, "seek": 258520, "start": 2599.08, "end": 2602.7599999999998, "text": " So our images are finished downloading.", "tokens": [407, 527, 5267, 366, 4335, 32529, 13], "temperature": 0.0, "avg_logprob": -0.1590909787586757, "compression_ratio": 1.623076923076923, "no_speech_prob": 1.9522105503710918e-05}, {"id": 554, "seek": 258520, "start": 2602.7599999999998, "end": 2606.3199999999997, "text": " And two of them were broken.", "tokens": [400, 732, 295, 552, 645, 5463, 13], "temperature": 0.0, "avg_logprob": -0.1590909787586757, "compression_ratio": 1.623076923076923, "no_speech_prob": 1.9522105503710918e-05}, {"id": 555, "seek": 258520, "start": 2606.3199999999997, "end": 2610.24, "text": " So we just deleted them.", "tokens": [407, 321, 445, 22981, 552, 13], "temperature": 0.0, "avg_logprob": -0.1590909787586757, "compression_ratio": 1.623076923076923, "no_speech_prob": 1.9522105503710918e-05}, {"id": 556, "seek": 258520, "start": 2610.24, "end": 2614.8399999999997, "text": " Another thing you'll note, by the way, if you're a keen software engineer is I tend to use", "tokens": [3996, 551, 291, 603, 3637, 11, 538, 264, 636, 11, 498, 291, 434, 257, 20297, 4722, 11403, 307, 286, 3928, 281, 764], "temperature": 0.0, "avg_logprob": -0.1590909787586757, "compression_ratio": 1.623076923076923, "no_speech_prob": 1.9522105503710918e-05}, {"id": 557, "seek": 261484, "start": 2614.84, "end": 2623.6000000000004, "text": " a lot of functional style in my programs, I find for kind of the kind of work I do that", "tokens": [257, 688, 295, 11745, 3758, 294, 452, 4268, 11, 286, 915, 337, 733, 295, 264, 733, 295, 589, 286, 360, 300], "temperature": 0.0, "avg_logprob": -0.1327537630425125, "compression_ratio": 1.709433962264151, "no_speech_prob": 2.9305487259989604e-05}, {"id": 558, "seek": 261484, "start": 2623.6000000000004, "end": 2625.92, "text": " a functional style works very well.", "tokens": [257, 11745, 3758, 1985, 588, 731, 13], "temperature": 0.0, "avg_logprob": -0.1327537630425125, "compression_ratio": 1.709433962264151, "no_speech_prob": 2.9305487259989604e-05}, {"id": 559, "seek": 261484, "start": 2625.92, "end": 2629.6800000000003, "text": " If you're, you know, a lot of people in Python are less familiar with that it's more maybe", "tokens": [759, 291, 434, 11, 291, 458, 11, 257, 688, 295, 561, 294, 15329, 366, 1570, 4963, 365, 300, 309, 311, 544, 1310], "temperature": 0.0, "avg_logprob": -0.1327537630425125, "compression_ratio": 1.709433962264151, "no_speech_prob": 2.9305487259989604e-05}, {"id": 560, "seek": 261484, "start": 2629.6800000000003, "end": 2631.76, "text": " comes more from other things.", "tokens": [1487, 544, 490, 661, 721, 13], "temperature": 0.0, "avg_logprob": -0.1327537630425125, "compression_ratio": 1.709433962264151, "no_speech_prob": 2.9305487259989604e-05}, {"id": 561, "seek": 261484, "start": 2631.76, "end": 2635.8, "text": " So yeah, that's why you'll see me using stuff like math and stuff quite a lot.", "tokens": [407, 1338, 11, 300, 311, 983, 291, 603, 536, 385, 1228, 1507, 411, 5221, 293, 1507, 1596, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.1327537630425125, "compression_ratio": 1.709433962264151, "no_speech_prob": 2.9305487259989604e-05}, {"id": 562, "seek": 261484, "start": 2635.8, "end": 2641.52, "text": " Alright, so a data block is the key thing you need to know about if you're going to", "tokens": [2798, 11, 370, 257, 1412, 3461, 307, 264, 2141, 551, 291, 643, 281, 458, 466, 498, 291, 434, 516, 281], "temperature": 0.0, "avg_logprob": -0.1327537630425125, "compression_ratio": 1.709433962264151, "no_speech_prob": 2.9305487259989604e-05}, {"id": 563, "seek": 261484, "start": 2641.52, "end": 2644.6800000000003, "text": " know how to use different kinds of data sets.", "tokens": [458, 577, 281, 764, 819, 3685, 295, 1412, 6352, 13], "temperature": 0.0, "avg_logprob": -0.1327537630425125, "compression_ratio": 1.709433962264151, "no_speech_prob": 2.9305487259989604e-05}, {"id": 564, "seek": 264468, "start": 2644.68, "end": 2648.68, "text": " And so these are all of the things basically that you'll be providing.", "tokens": [400, 370, 613, 366, 439, 295, 264, 721, 1936, 300, 291, 603, 312, 6530, 13], "temperature": 0.0, "avg_logprob": -0.08266024319630749, "compression_ratio": 1.7704918032786885, "no_speech_prob": 6.24017093286966e-06}, {"id": 565, "seek": 264468, "start": 2648.68, "end": 2654.3999999999996, "text": " And so what we did when we designed the data block was we actually looked and said, okay,", "tokens": [400, 370, 437, 321, 630, 562, 321, 4761, 264, 1412, 3461, 390, 321, 767, 2956, 293, 848, 11, 1392, 11], "temperature": 0.0, "avg_logprob": -0.08266024319630749, "compression_ratio": 1.7704918032786885, "no_speech_prob": 6.24017093286966e-06}, {"id": 566, "seek": 264468, "start": 2654.3999999999996, "end": 2661.64, "text": " over hundreds of projects, what are all the things that change from project to project", "tokens": [670, 6779, 295, 4455, 11, 437, 366, 439, 264, 721, 300, 1319, 490, 1716, 281, 1716], "temperature": 0.0, "avg_logprob": -0.08266024319630749, "compression_ratio": 1.7704918032786885, "no_speech_prob": 6.24017093286966e-06}, {"id": 567, "seek": 264468, "start": 2661.64, "end": 2663.8399999999997, "text": " to get the data into the right shape?", "tokens": [281, 483, 264, 1412, 666, 264, 558, 3909, 30], "temperature": 0.0, "avg_logprob": -0.08266024319630749, "compression_ratio": 1.7704918032786885, "no_speech_prob": 6.24017093286966e-06}, {"id": 568, "seek": 264468, "start": 2663.8399999999997, "end": 2668.7, "text": " And we realized we could basically split it down into these five things.", "tokens": [400, 321, 5334, 321, 727, 1936, 7472, 309, 760, 666, 613, 1732, 721, 13], "temperature": 0.0, "avg_logprob": -0.08266024319630749, "compression_ratio": 1.7704918032786885, "no_speech_prob": 6.24017093286966e-06}, {"id": 569, "seek": 264468, "start": 2668.7, "end": 2674.24, "text": " So the first thing that we tell fast AI is what kind of input do we have?", "tokens": [407, 264, 700, 551, 300, 321, 980, 2370, 7318, 307, 437, 733, 295, 4846, 360, 321, 362, 30], "temperature": 0.0, "avg_logprob": -0.08266024319630749, "compression_ratio": 1.7704918032786885, "no_speech_prob": 6.24017093286966e-06}, {"id": 570, "seek": 267424, "start": 2674.24, "end": 2678.16, "text": " And so then so there are lots of blocks in fast AI for different kinds of inputs.", "tokens": [400, 370, 550, 370, 456, 366, 3195, 295, 8474, 294, 2370, 7318, 337, 819, 3685, 295, 15743, 13], "temperature": 0.0, "avg_logprob": -0.16190870346561556, "compression_ratio": 1.736220472440945, "no_speech_prob": 7.071526397339767e-06}, {"id": 571, "seek": 267424, "start": 2678.16, "end": 2681.16, "text": " So he said, Oh, the input is an image.", "tokens": [407, 415, 848, 11, 876, 11, 264, 4846, 307, 364, 3256, 13], "temperature": 0.0, "avg_logprob": -0.16190870346561556, "compression_ratio": 1.736220472440945, "no_speech_prob": 7.071526397339767e-06}, {"id": 572, "seek": 267424, "start": 2681.16, "end": 2682.4399999999996, "text": " What kind of output is there?", "tokens": [708, 733, 295, 5598, 307, 456, 30], "temperature": 0.0, "avg_logprob": -0.16190870346561556, "compression_ratio": 1.736220472440945, "no_speech_prob": 7.071526397339767e-06}, {"id": 573, "seek": 267424, "start": 2682.4399999999996, "end": 2684.7599999999998, "text": " What kind of label the outputs are category.", "tokens": [708, 733, 295, 7645, 264, 23930, 366, 7719, 13], "temperature": 0.0, "avg_logprob": -0.16190870346561556, "compression_ratio": 1.736220472440945, "no_speech_prob": 7.071526397339767e-06}, {"id": 574, "seek": 267424, "start": 2684.7599999999998, "end": 2689.8799999999997, "text": " That means it's one of a number of possibilities.", "tokens": [663, 1355, 309, 311, 472, 295, 257, 1230, 295, 12178, 13], "temperature": 0.0, "avg_logprob": -0.16190870346561556, "compression_ratio": 1.736220472440945, "no_speech_prob": 7.071526397339767e-06}, {"id": 575, "seek": 267424, "start": 2689.8799999999997, "end": 2695.8199999999997, "text": " So that's enough for fast AI to know what kind of model to build for you.", "tokens": [407, 300, 311, 1547, 337, 2370, 7318, 281, 458, 437, 733, 295, 2316, 281, 1322, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.16190870346561556, "compression_ratio": 1.736220472440945, "no_speech_prob": 7.071526397339767e-06}, {"id": 576, "seek": 267424, "start": 2695.8199999999997, "end": 2697.24, "text": " So what are the items in this model?", "tokens": [407, 437, 366, 264, 4754, 294, 341, 2316, 30], "temperature": 0.0, "avg_logprob": -0.16190870346561556, "compression_ratio": 1.736220472440945, "no_speech_prob": 7.071526397339767e-06}, {"id": 577, "seek": 267424, "start": 2697.24, "end": 2700.8799999999997, "text": " What am I actually going to be looking at to look to train from?", "tokens": [708, 669, 286, 767, 516, 281, 312, 1237, 412, 281, 574, 281, 3847, 490, 30], "temperature": 0.0, "avg_logprob": -0.16190870346561556, "compression_ratio": 1.736220472440945, "no_speech_prob": 7.071526397339767e-06}, {"id": 578, "seek": 267424, "start": 2700.8799999999997, "end": 2701.8799999999997, "text": " This is a function.", "tokens": [639, 307, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.16190870346561556, "compression_ratio": 1.736220472440945, "no_speech_prob": 7.071526397339767e-06}, {"id": 579, "seek": 270188, "start": 2701.88, "end": 2706.44, "text": " In fact, you might have noticed if you were looking carefully that we use this function", "tokens": [682, 1186, 11, 291, 1062, 362, 5694, 498, 291, 645, 1237, 7500, 300, 321, 764, 341, 2445], "temperature": 0.0, "avg_logprob": -0.1039367624231287, "compression_ratio": 1.7125506072874495, "no_speech_prob": 7.527750312874559e-06}, {"id": 580, "seek": 270188, "start": 2706.44, "end": 2708.4, "text": " here.", "tokens": [510, 13], "temperature": 0.0, "avg_logprob": -0.1039367624231287, "compression_ratio": 1.7125506072874495, "no_speech_prob": 7.527750312874559e-06}, {"id": 581, "seek": 270188, "start": 2708.4, "end": 2716.6800000000003, "text": " It's a function which returns a list of all of the image files in a path based on extension.", "tokens": [467, 311, 257, 2445, 597, 11247, 257, 1329, 295, 439, 295, 264, 3256, 7098, 294, 257, 3100, 2361, 322, 10320, 13], "temperature": 0.0, "avg_logprob": -0.1039367624231287, "compression_ratio": 1.7125506072874495, "no_speech_prob": 7.527750312874559e-06}, {"id": 582, "seek": 270188, "start": 2716.6800000000003, "end": 2720.08, "text": " So every time it's going to try and find out what things to train from, it's going to use", "tokens": [407, 633, 565, 309, 311, 516, 281, 853, 293, 915, 484, 437, 721, 281, 3847, 490, 11, 309, 311, 516, 281, 764], "temperature": 0.0, "avg_logprob": -0.1039367624231287, "compression_ratio": 1.7125506072874495, "no_speech_prob": 7.527750312874559e-06}, {"id": 583, "seek": 270188, "start": 2720.08, "end": 2721.08, "text": " that function.", "tokens": [300, 2445, 13], "temperature": 0.0, "avg_logprob": -0.1039367624231287, "compression_ratio": 1.7125506072874495, "no_speech_prob": 7.527750312874559e-06}, {"id": 584, "seek": 270188, "start": 2721.08, "end": 2724.56, "text": " In this case, we'll get a list of image files.", "tokens": [682, 341, 1389, 11, 321, 603, 483, 257, 1329, 295, 3256, 7098, 13], "temperature": 0.0, "avg_logprob": -0.1039367624231287, "compression_ratio": 1.7125506072874495, "no_speech_prob": 7.527750312874559e-06}, {"id": 585, "seek": 270188, "start": 2724.56, "end": 2729.56, "text": " Now something we'll talk about shortly is that it's critical that you put aside some", "tokens": [823, 746, 321, 603, 751, 466, 13392, 307, 300, 309, 311, 4924, 300, 291, 829, 7359, 512], "temperature": 0.0, "avg_logprob": -0.1039367624231287, "compression_ratio": 1.7125506072874495, "no_speech_prob": 7.527750312874559e-06}, {"id": 586, "seek": 272956, "start": 2729.56, "end": 2732.64, "text": " data for testing the accuracy of your model.", "tokens": [1412, 337, 4997, 264, 14170, 295, 428, 2316, 13], "temperature": 0.0, "avg_logprob": -0.2094895562460256, "compression_ratio": 1.53, "no_speech_prob": 1.816163603507448e-06}, {"id": 587, "seek": 272956, "start": 2732.64, "end": 2735.52, "text": " That's called a validation set.", "tokens": [663, 311, 1219, 257, 24071, 992, 13], "temperature": 0.0, "avg_logprob": -0.2094895562460256, "compression_ratio": 1.53, "no_speech_prob": 1.816163603507448e-06}, {"id": 588, "seek": 272956, "start": 2735.52, "end": 2739.96, "text": " It's so critical that fast AI won't let you train a model without one.", "tokens": [467, 311, 370, 4924, 300, 2370, 7318, 1582, 380, 718, 291, 3847, 257, 2316, 1553, 472, 13], "temperature": 0.0, "avg_logprob": -0.2094895562460256, "compression_ratio": 1.53, "no_speech_prob": 1.816163603507448e-06}, {"id": 589, "seek": 272956, "start": 2739.96, "end": 2745.0, "text": " So you actually have to tell it how to create a validation set, how to set aside some data.", "tokens": [407, 291, 767, 362, 281, 980, 309, 577, 281, 1884, 257, 24071, 992, 11, 577, 281, 992, 7359, 512, 1412, 13], "temperature": 0.0, "avg_logprob": -0.2094895562460256, "compression_ratio": 1.53, "no_speech_prob": 1.816163603507448e-06}, {"id": 590, "seek": 272956, "start": 2745.0, "end": 2752.68, "text": " And in this case, we say randomly set aside 20% of the data.", "tokens": [400, 294, 341, 1389, 11, 321, 584, 16979, 992, 7359, 945, 4, 295, 264, 1412, 13], "temperature": 0.0, "avg_logprob": -0.2094895562460256, "compression_ratio": 1.53, "no_speech_prob": 1.816163603507448e-06}, {"id": 591, "seek": 272956, "start": 2752.68, "end": 2755.08, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.2094895562460256, "compression_ratio": 1.53, "no_speech_prob": 1.816163603507448e-06}, {"id": 592, "seek": 275508, "start": 2755.08, "end": 2761.92, "text": " Next question then you have to tell fast AI is how do we know the correct label of a photo?", "tokens": [3087, 1168, 550, 291, 362, 281, 980, 2370, 7318, 307, 577, 360, 321, 458, 264, 3006, 7645, 295, 257, 5052, 30], "temperature": 0.0, "avg_logprob": -0.07978857435831209, "compression_ratio": 1.6073298429319371, "no_speech_prob": 1.2878692814410897e-06}, {"id": 593, "seek": 275508, "start": 2761.92, "end": 2765.92, "text": " How do we know if it's a bird photo or a forest photo?", "tokens": [1012, 360, 321, 458, 498, 309, 311, 257, 5255, 5052, 420, 257, 6719, 5052, 30], "temperature": 0.0, "avg_logprob": -0.07978857435831209, "compression_ratio": 1.6073298429319371, "no_speech_prob": 1.2878692814410897e-06}, {"id": 594, "seek": 275508, "start": 2765.92, "end": 2768.94, "text": " And this is another function.", "tokens": [400, 341, 307, 1071, 2445, 13], "temperature": 0.0, "avg_logprob": -0.07978857435831209, "compression_ratio": 1.6073298429319371, "no_speech_prob": 1.2878692814410897e-06}, {"id": 595, "seek": 275508, "start": 2768.94, "end": 2776.52, "text": " And this function simply returns the parent folder of a path.", "tokens": [400, 341, 2445, 2935, 11247, 264, 2596, 10820, 295, 257, 3100, 13], "temperature": 0.0, "avg_logprob": -0.07978857435831209, "compression_ratio": 1.6073298429319371, "no_speech_prob": 1.2878692814410897e-06}, {"id": 596, "seek": 275508, "start": 2776.52, "end": 2783.08, "text": " And so in this case, we saved our images into either forest or bird.", "tokens": [400, 370, 294, 341, 1389, 11, 321, 6624, 527, 5267, 666, 2139, 6719, 420, 5255, 13], "temperature": 0.0, "avg_logprob": -0.07978857435831209, "compression_ratio": 1.6073298429319371, "no_speech_prob": 1.2878692814410897e-06}, {"id": 597, "seek": 278308, "start": 2783.08, "end": 2787.02, "text": " So that's where the labels are going to come from.", "tokens": [407, 300, 311, 689, 264, 16949, 366, 516, 281, 808, 490, 13], "temperature": 0.0, "avg_logprob": -0.13192063161771592, "compression_ratio": 1.5747126436781609, "no_speech_prob": 2.2251663267525146e-06}, {"id": 598, "seek": 278308, "start": 2787.02, "end": 2795.36, "text": " And then finally, most computer vision architectures need all of your inputs as you train to be", "tokens": [400, 550, 2721, 11, 881, 3820, 5201, 6331, 1303, 643, 439, 295, 428, 15743, 382, 291, 3847, 281, 312], "temperature": 0.0, "avg_logprob": -0.13192063161771592, "compression_ratio": 1.5747126436781609, "no_speech_prob": 2.2251663267525146e-06}, {"id": 599, "seek": 278308, "start": 2795.36, "end": 2797.5, "text": " the same size.", "tokens": [264, 912, 2744, 13], "temperature": 0.0, "avg_logprob": -0.13192063161771592, "compression_ratio": 1.5747126436781609, "no_speech_prob": 2.2251663267525146e-06}, {"id": 600, "seek": 278308, "start": 2797.5, "end": 2804.92, "text": " So item transforms are all of the bits of code that are going to run on every item,", "tokens": [407, 3174, 35592, 366, 439, 295, 264, 9239, 295, 3089, 300, 366, 516, 281, 1190, 322, 633, 3174, 11], "temperature": 0.0, "avg_logprob": -0.13192063161771592, "compression_ratio": 1.5747126436781609, "no_speech_prob": 2.2251663267525146e-06}, {"id": 601, "seek": 278308, "start": 2804.92, "end": 2806.8199999999997, "text": " on every image in this case.", "tokens": [322, 633, 3256, 294, 341, 1389, 13], "temperature": 0.0, "avg_logprob": -0.13192063161771592, "compression_ratio": 1.5747126436781609, "no_speech_prob": 2.2251663267525146e-06}, {"id": 602, "seek": 280682, "start": 2806.82, "end": 2814.76, "text": " And we're saying, okay, we want you to resize each of them to being 192 by 192 pixels.", "tokens": [400, 321, 434, 1566, 11, 1392, 11, 321, 528, 291, 281, 50069, 1184, 295, 552, 281, 885, 1294, 17, 538, 1294, 17, 18668, 13], "temperature": 0.0, "avg_logprob": -0.10230257015417119, "compression_ratio": 1.5971563981042654, "no_speech_prob": 1.7879665392683819e-06}, {"id": 603, "seek": 280682, "start": 2814.76, "end": 2815.76, "text": " There's two ways you can resize.", "tokens": [821, 311, 732, 2098, 291, 393, 50069, 13], "temperature": 0.0, "avg_logprob": -0.10230257015417119, "compression_ratio": 1.5971563981042654, "no_speech_prob": 1.7879665392683819e-06}, {"id": 604, "seek": 280682, "start": 2815.76, "end": 2821.6400000000003, "text": " You can either crop out a piece in the middle, or you can squish it.", "tokens": [509, 393, 2139, 9086, 484, 257, 2522, 294, 264, 2808, 11, 420, 291, 393, 31379, 309, 13], "temperature": 0.0, "avg_logprob": -0.10230257015417119, "compression_ratio": 1.5971563981042654, "no_speech_prob": 1.7879665392683819e-06}, {"id": 605, "seek": 280682, "start": 2821.6400000000003, "end": 2825.88, "text": " And so we're saying squish it.", "tokens": [400, 370, 321, 434, 1566, 31379, 309, 13], "temperature": 0.0, "avg_logprob": -0.10230257015417119, "compression_ratio": 1.5971563981042654, "no_speech_prob": 1.7879665392683819e-06}, {"id": 606, "seek": 280682, "start": 2825.88, "end": 2826.88, "text": " So that's the data block.", "tokens": [407, 300, 311, 264, 1412, 3461, 13], "temperature": 0.0, "avg_logprob": -0.10230257015417119, "compression_ratio": 1.5971563981042654, "no_speech_prob": 1.7879665392683819e-06}, {"id": 607, "seek": 280682, "start": 2826.88, "end": 2828.4, "text": " That's all that you need.", "tokens": [663, 311, 439, 300, 291, 643, 13], "temperature": 0.0, "avg_logprob": -0.10230257015417119, "compression_ratio": 1.5971563981042654, "no_speech_prob": 1.7879665392683819e-06}, {"id": 608, "seek": 280682, "start": 2828.4, "end": 2833.28, "text": " And from there, we create an important class called data loaders.", "tokens": [400, 490, 456, 11, 321, 1884, 364, 1021, 1508, 1219, 1412, 3677, 433, 13], "temperature": 0.0, "avg_logprob": -0.10230257015417119, "compression_ratio": 1.5971563981042654, "no_speech_prob": 1.7879665392683819e-06}, {"id": 609, "seek": 283328, "start": 2833.28, "end": 2839.0800000000004, "text": " Data loaders are the things that actually PyTorch iterates through to grab a bunch of", "tokens": [11888, 3677, 433, 366, 264, 721, 300, 767, 9953, 51, 284, 339, 17138, 1024, 807, 281, 4444, 257, 3840, 295], "temperature": 0.0, "avg_logprob": -0.07429744057033373, "compression_ratio": 1.7725321888412018, "no_speech_prob": 4.222610641591018e-06}, {"id": 610, "seek": 283328, "start": 2839.0800000000004, "end": 2841.0400000000004, "text": " your data at a time.", "tokens": [428, 1412, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.07429744057033373, "compression_ratio": 1.7725321888412018, "no_speech_prob": 4.222610641591018e-06}, {"id": 611, "seek": 283328, "start": 2841.0400000000004, "end": 2845.88, "text": " The way it can do it so fast is by using a GPU, which is something that can do thousands", "tokens": [440, 636, 309, 393, 360, 309, 370, 2370, 307, 538, 1228, 257, 18407, 11, 597, 307, 746, 300, 393, 360, 5383], "temperature": 0.0, "avg_logprob": -0.07429744057033373, "compression_ratio": 1.7725321888412018, "no_speech_prob": 4.222610641591018e-06}, {"id": 612, "seek": 283328, "start": 2845.88, "end": 2848.1200000000003, "text": " of things at the same time.", "tokens": [295, 721, 412, 264, 912, 565, 13], "temperature": 0.0, "avg_logprob": -0.07429744057033373, "compression_ratio": 1.7725321888412018, "no_speech_prob": 4.222610641591018e-06}, {"id": 613, "seek": 283328, "start": 2848.1200000000003, "end": 2851.92, "text": " And that means it needs thousands of things to do at the same time.", "tokens": [400, 300, 1355, 309, 2203, 5383, 295, 721, 281, 360, 412, 264, 912, 565, 13], "temperature": 0.0, "avg_logprob": -0.07429744057033373, "compression_ratio": 1.7725321888412018, "no_speech_prob": 4.222610641591018e-06}, {"id": 614, "seek": 283328, "start": 2851.92, "end": 2860.1200000000003, "text": " So a data loader will feed the training algorithm with a bunch of your images at once.", "tokens": [407, 257, 1412, 3677, 260, 486, 3154, 264, 3097, 9284, 365, 257, 3840, 295, 428, 5267, 412, 1564, 13], "temperature": 0.0, "avg_logprob": -0.07429744057033373, "compression_ratio": 1.7725321888412018, "no_speech_prob": 4.222610641591018e-06}, {"id": 615, "seek": 283328, "start": 2860.1200000000003, "end": 2862.0400000000004, "text": " In fact, we don't call it a bunch.", "tokens": [682, 1186, 11, 321, 500, 380, 818, 309, 257, 3840, 13], "temperature": 0.0, "avg_logprob": -0.07429744057033373, "compression_ratio": 1.7725321888412018, "no_speech_prob": 4.222610641591018e-06}, {"id": 616, "seek": 286204, "start": 2862.04, "end": 2866.88, "text": " We call it a batch or a mini batch.", "tokens": [492, 818, 309, 257, 15245, 420, 257, 8382, 15245, 13], "temperature": 0.0, "avg_logprob": -0.14377654000614468, "compression_ratio": 1.6262626262626263, "no_speech_prob": 3.4463571410014993e-06}, {"id": 617, "seek": 286204, "start": 2866.88, "end": 2874.6, "text": " And so when we say show batch, that's actually a very specific word in deep learning.", "tokens": [400, 370, 562, 321, 584, 855, 15245, 11, 300, 311, 767, 257, 588, 2685, 1349, 294, 2452, 2539, 13], "temperature": 0.0, "avg_logprob": -0.14377654000614468, "compression_ratio": 1.6262626262626263, "no_speech_prob": 3.4463571410014993e-06}, {"id": 618, "seek": 286204, "start": 2874.6, "end": 2879.6, "text": " It's saying show me an example of a batch of data that you would be passing into the", "tokens": [467, 311, 1566, 855, 385, 364, 1365, 295, 257, 15245, 295, 1412, 300, 291, 576, 312, 8437, 666, 264], "temperature": 0.0, "avg_logprob": -0.14377654000614468, "compression_ratio": 1.6262626262626263, "no_speech_prob": 3.4463571410014993e-06}, {"id": 619, "seek": 286204, "start": 2879.6, "end": 2880.6, "text": " model.", "tokens": [2316, 13], "temperature": 0.0, "avg_logprob": -0.14377654000614468, "compression_ratio": 1.6262626262626263, "no_speech_prob": 3.4463571410014993e-06}, {"id": 620, "seek": 286204, "start": 2880.6, "end": 2886.88, "text": " And so you can see show batch gives you tells you two things, the input, which is the picture", "tokens": [400, 370, 291, 393, 536, 855, 15245, 2709, 291, 5112, 291, 732, 721, 11, 264, 4846, 11, 597, 307, 264, 3036], "temperature": 0.0, "avg_logprob": -0.14377654000614468, "compression_ratio": 1.6262626262626263, "no_speech_prob": 3.4463571410014993e-06}, {"id": 621, "seek": 286204, "start": 2886.88, "end": 2888.7599999999998, "text": " and the label.", "tokens": [293, 264, 7645, 13], "temperature": 0.0, "avg_logprob": -0.14377654000614468, "compression_ratio": 1.6262626262626263, "no_speech_prob": 3.4463571410014993e-06}, {"id": 622, "seek": 288876, "start": 2888.76, "end": 2894.36, "text": " And remember the label came by calling that function.", "tokens": [400, 1604, 264, 7645, 1361, 538, 5141, 300, 2445, 13], "temperature": 0.0, "avg_logprob": -0.11073244094848633, "compression_ratio": 2.078125, "no_speech_prob": 4.710520443040878e-06}, {"id": 623, "seek": 288876, "start": 2894.36, "end": 2901.6000000000004, "text": " So when you come to building your own models, you'll be wanting to know what kind of splitters", "tokens": [407, 562, 291, 808, 281, 2390, 428, 1065, 5245, 11, 291, 603, 312, 7935, 281, 458, 437, 733, 295, 7472, 1559], "temperature": 0.0, "avg_logprob": -0.11073244094848633, "compression_ratio": 2.078125, "no_speech_prob": 4.710520443040878e-06}, {"id": 624, "seek": 288876, "start": 2901.6000000000004, "end": 2904.76, "text": " are there and what kinds of labeling functions are there and so forth.", "tokens": [366, 456, 293, 437, 3685, 295, 40244, 6828, 366, 456, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.11073244094848633, "compression_ratio": 2.078125, "no_speech_prob": 4.710520443040878e-06}, {"id": 625, "seek": 288876, "start": 2904.76, "end": 2911.2400000000002, "text": " You'll be wanting to know what kind of labeling functions are there and what kind of splitters", "tokens": [509, 603, 312, 7935, 281, 458, 437, 733, 295, 40244, 6828, 366, 456, 293, 437, 733, 295, 7472, 1559], "temperature": 0.0, "avg_logprob": -0.11073244094848633, "compression_ratio": 2.078125, "no_speech_prob": 4.710520443040878e-06}, {"id": 626, "seek": 288876, "start": 2911.2400000000002, "end": 2912.7200000000003, "text": " are there and so forth.", "tokens": [366, 456, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.11073244094848633, "compression_ratio": 2.078125, "no_speech_prob": 4.710520443040878e-06}, {"id": 627, "seek": 288876, "start": 2912.7200000000003, "end": 2917.7200000000003, "text": " And so docs.fast.ai is where you go to get that information.", "tokens": [400, 370, 45623, 13, 7011, 13, 1301, 307, 689, 291, 352, 281, 483, 300, 1589, 13], "temperature": 0.0, "avg_logprob": -0.11073244094848633, "compression_ratio": 2.078125, "no_speech_prob": 4.710520443040878e-06}, {"id": 628, "seek": 291772, "start": 2917.72, "end": 2922.3199999999997, "text": " And the best place to go is the tutorials.", "tokens": [400, 264, 1151, 1081, 281, 352, 307, 264, 17616, 13], "temperature": 0.0, "avg_logprob": -0.140087890625, "compression_ratio": 1.5577889447236182, "no_speech_prob": 3.6687304145743838e-06}, {"id": 629, "seek": 291772, "start": 2922.3199999999997, "end": 2928.3399999999997, "text": " So for example, here's a whole data block tutorial and there's lots and lots of examples.", "tokens": [407, 337, 1365, 11, 510, 311, 257, 1379, 1412, 3461, 7073, 293, 456, 311, 3195, 293, 3195, 295, 5110, 13], "temperature": 0.0, "avg_logprob": -0.140087890625, "compression_ratio": 1.5577889447236182, "no_speech_prob": 3.6687304145743838e-06}, {"id": 630, "seek": 291772, "start": 2928.3399999999997, "end": 2932.52, "text": " So hopefully you can start out by finding something that's similar to what you want", "tokens": [407, 4696, 291, 393, 722, 484, 538, 5006, 746, 300, 311, 2531, 281, 437, 291, 528], "temperature": 0.0, "avg_logprob": -0.140087890625, "compression_ratio": 1.5577889447236182, "no_speech_prob": 3.6687304145743838e-06}, {"id": 631, "seek": 291772, "start": 2932.52, "end": 2936.56, "text": " to do and see how we did it.", "tokens": [281, 360, 293, 536, 577, 321, 630, 309, 13], "temperature": 0.0, "avg_logprob": -0.140087890625, "compression_ratio": 1.5577889447236182, "no_speech_prob": 3.6687304145743838e-06}, {"id": 632, "seek": 291772, "start": 2936.56, "end": 2943.24, "text": " But then of course, there's also the underlying API information.", "tokens": [583, 550, 295, 1164, 11, 456, 311, 611, 264, 14217, 9362, 1589, 13], "temperature": 0.0, "avg_logprob": -0.140087890625, "compression_ratio": 1.5577889447236182, "no_speech_prob": 3.6687304145743838e-06}, {"id": 633, "seek": 294324, "start": 2943.24, "end": 2957.68, "text": " So here's data blocks.", "tokens": [407, 510, 311, 1412, 8474, 13], "temperature": 0.0, "avg_logprob": -0.1968017327980917, "compression_ratio": 1.3245033112582782, "no_speech_prob": 2.4059465886239195e-06}, {"id": 634, "seek": 294324, "start": 2957.68, "end": 2960.2799999999997, "text": " So at the end of all this, we've got an object called DLs.", "tokens": [407, 412, 264, 917, 295, 439, 341, 11, 321, 600, 658, 364, 2657, 1219, 413, 43, 82, 13], "temperature": 0.0, "avg_logprob": -0.1968017327980917, "compression_ratio": 1.3245033112582782, "no_speech_prob": 2.4059465886239195e-06}, {"id": 635, "seek": 294324, "start": 2960.2799999999997, "end": 2962.16, "text": " It stands for data loaders.", "tokens": [467, 7382, 337, 1412, 3677, 433, 13], "temperature": 0.0, "avg_logprob": -0.1968017327980917, "compression_ratio": 1.3245033112582782, "no_speech_prob": 2.4059465886239195e-06}, {"id": 636, "seek": 294324, "start": 2962.16, "end": 2971.3199999999997, "text": " And that contains iterators that PyTorch can run through to grab batches of randomly split", "tokens": [400, 300, 8306, 17138, 3391, 300, 9953, 51, 284, 339, 393, 1190, 807, 281, 4444, 15245, 279, 295, 16979, 7472], "temperature": 0.0, "avg_logprob": -0.1968017327980917, "compression_ratio": 1.3245033112582782, "no_speech_prob": 2.4059465886239195e-06}, {"id": 637, "seek": 297132, "start": 2971.32, "end": 2979.76, "text": " data, training images to train the model with and validation images to test the model with.", "tokens": [1412, 11, 3097, 5267, 281, 3847, 264, 2316, 365, 293, 24071, 5267, 281, 1500, 264, 2316, 365, 13], "temperature": 0.0, "avg_logprob": -0.19106346368789673, "compression_ratio": 1.7523364485981308, "no_speech_prob": 2.2958779481996316e-06}, {"id": 638, "seek": 297132, "start": 2979.76, "end": 2982.8, "text": " So now we need a model.", "tokens": [407, 586, 321, 643, 257, 2316, 13], "temperature": 0.0, "avg_logprob": -0.19106346368789673, "compression_ratio": 1.7523364485981308, "no_speech_prob": 2.2958779481996316e-06}, {"id": 639, "seek": 297132, "start": 2982.8, "end": 2986.36, "text": " The critical concept here in fast.ai is called a learner.", "tokens": [440, 4924, 3410, 510, 294, 2370, 13, 1301, 307, 1219, 257, 33347, 13], "temperature": 0.0, "avg_logprob": -0.19106346368789673, "compression_ratio": 1.7523364485981308, "no_speech_prob": 2.2958779481996316e-06}, {"id": 640, "seek": 297132, "start": 2986.36, "end": 2991.88, "text": " A learner is something which combines a model, which is that is the actual neural network", "tokens": [316, 33347, 307, 746, 597, 29520, 257, 2316, 11, 597, 307, 300, 307, 264, 3539, 18161, 3209], "temperature": 0.0, "avg_logprob": -0.19106346368789673, "compression_ratio": 1.7523364485981308, "no_speech_prob": 2.2958779481996316e-06}, {"id": 641, "seek": 297132, "start": 2991.88, "end": 2996.44, "text": " function we'll be training and the data we use to train it with.", "tokens": [2445, 321, 603, 312, 3097, 293, 264, 1412, 321, 764, 281, 3847, 309, 365, 13], "temperature": 0.0, "avg_logprob": -0.19106346368789673, "compression_ratio": 1.7523364485981308, "no_speech_prob": 2.2958779481996316e-06}, {"id": 642, "seek": 297132, "start": 2996.44, "end": 2999.1600000000003, "text": " And that's why you have to pass in two things.", "tokens": [400, 300, 311, 983, 291, 362, 281, 1320, 294, 732, 721, 13], "temperature": 0.0, "avg_logprob": -0.19106346368789673, "compression_ratio": 1.7523364485981308, "no_speech_prob": 2.2958779481996316e-06}, {"id": 643, "seek": 299916, "start": 2999.16, "end": 3005.5, "text": " The data, which is the data loader's object, and a model.", "tokens": [440, 1412, 11, 597, 307, 264, 1412, 3677, 260, 311, 2657, 11, 293, 257, 2316, 13], "temperature": 0.0, "avg_logprob": -0.10679733051973231, "compression_ratio": 1.6136363636363635, "no_speech_prob": 3.0413859803957166e-06}, {"id": 644, "seek": 299916, "start": 3005.5, "end": 3011.98, "text": " And so the model is going to be the actual neural network function that you want to pass", "tokens": [400, 370, 264, 2316, 307, 516, 281, 312, 264, 3539, 18161, 3209, 2445, 300, 291, 528, 281, 1320], "temperature": 0.0, "avg_logprob": -0.10679733051973231, "compression_ratio": 1.6136363636363635, "no_speech_prob": 3.0413859803957166e-06}, {"id": 645, "seek": 299916, "start": 3011.98, "end": 3012.98, "text": " in.", "tokens": [294, 13], "temperature": 0.0, "avg_logprob": -0.10679733051973231, "compression_ratio": 1.6136363636363635, "no_speech_prob": 3.0413859803957166e-06}, {"id": 646, "seek": 299916, "start": 3012.98, "end": 3018.5, "text": " And as I said, there's a relatively small number that basically work for the vast majority", "tokens": [400, 382, 286, 848, 11, 456, 311, 257, 7226, 1359, 1230, 300, 1936, 589, 337, 264, 8369, 6286], "temperature": 0.0, "avg_logprob": -0.10679733051973231, "compression_ratio": 1.6136363636363635, "no_speech_prob": 3.0413859803957166e-06}, {"id": 647, "seek": 299916, "start": 3018.5, "end": 3021.7, "text": " of things you do.", "tokens": [295, 721, 291, 360, 13], "temperature": 0.0, "avg_logprob": -0.10679733051973231, "compression_ratio": 1.6136363636363635, "no_speech_prob": 3.0413859803957166e-06}, {"id": 648, "seek": 299916, "start": 3021.7, "end": 3026.16, "text": " If you pass in just a bare symbol like this, it's going to be one of fast.ai's built-in", "tokens": [759, 291, 1320, 294, 445, 257, 6949, 5986, 411, 341, 11, 309, 311, 516, 281, 312, 472, 295, 2370, 13, 1301, 311, 3094, 12, 259], "temperature": 0.0, "avg_logprob": -0.10679733051973231, "compression_ratio": 1.6136363636363635, "no_speech_prob": 3.0413859803957166e-06}, {"id": 649, "seek": 299916, "start": 3026.16, "end": 3027.3599999999997, "text": " models.", "tokens": [5245, 13], "temperature": 0.0, "avg_logprob": -0.10679733051973231, "compression_ratio": 1.6136363636363635, "no_speech_prob": 3.0413859803957166e-06}, {"id": 650, "seek": 302736, "start": 3027.36, "end": 3034.08, "text": " But what's particularly interesting is that we integrate a wonderful library by Ross Whiteman", "tokens": [583, 437, 311, 4098, 1880, 307, 300, 321, 13365, 257, 3715, 6405, 538, 16140, 21693, 15023], "temperature": 0.0, "avg_logprob": -0.12621637071881975, "compression_ratio": 1.632183908045977, "no_speech_prob": 2.2602810076932656e-06}, {"id": 651, "seek": 302736, "start": 3034.08, "end": 3038.76, "text": " called TIM, the PyTorch image models, which is the largest collection of computer vision", "tokens": [1219, 20187, 11, 264, 9953, 51, 284, 339, 3256, 5245, 11, 597, 307, 264, 6443, 5765, 295, 3820, 5201], "temperature": 0.0, "avg_logprob": -0.12621637071881975, "compression_ratio": 1.632183908045977, "no_speech_prob": 2.2602810076932656e-06}, {"id": 652, "seek": 302736, "start": 3038.76, "end": 3040.48, "text": " models in the world.", "tokens": [5245, 294, 264, 1002, 13], "temperature": 0.0, "avg_logprob": -0.12621637071881975, "compression_ratio": 1.632183908045977, "no_speech_prob": 2.2602810076932656e-06}, {"id": 653, "seek": 302736, "start": 3040.48, "end": 3045.08, "text": " And at this point, fast.ai is the first and only framework to integrate this.", "tokens": [400, 412, 341, 935, 11, 2370, 13, 1301, 307, 264, 700, 293, 787, 8388, 281, 13365, 341, 13], "temperature": 0.0, "avg_logprob": -0.12621637071881975, "compression_ratio": 1.632183908045977, "no_speech_prob": 2.2602810076932656e-06}, {"id": 654, "seek": 302736, "start": 3045.08, "end": 3049.52, "text": " So you can use any one of the PyTorch image models.", "tokens": [407, 291, 393, 764, 604, 472, 295, 264, 9953, 51, 284, 339, 3256, 5245, 13], "temperature": 0.0, "avg_logprob": -0.12621637071881975, "compression_ratio": 1.632183908045977, "no_speech_prob": 2.2602810076932656e-06}, {"id": 655, "seek": 302736, "start": 3049.52, "end": 3056.2400000000002, "text": " And one of our students, Amanda Mora, was kind enough to create this fantastic documentation", "tokens": [400, 472, 295, 527, 1731, 11, 20431, 376, 3252, 11, 390, 733, 1547, 281, 1884, 341, 5456, 14333], "temperature": 0.0, "avg_logprob": -0.12621637071881975, "compression_ratio": 1.632183908045977, "no_speech_prob": 2.2602810076932656e-06}, {"id": 656, "seek": 305624, "start": 3056.24, "end": 3063.12, "text": " where you can find out all about the different models.", "tokens": [689, 291, 393, 915, 484, 439, 466, 264, 819, 5245, 13], "temperature": 0.0, "avg_logprob": -0.09427947611422152, "compression_ratio": 1.6, "no_speech_prob": 6.540118647535564e-06}, {"id": 657, "seek": 305624, "start": 3063.12, "end": 3068.3999999999996, "text": " And if we click on here, you can get lots and lots of information about all the different", "tokens": [400, 498, 321, 2052, 322, 510, 11, 291, 393, 483, 3195, 293, 3195, 295, 1589, 466, 439, 264, 819], "temperature": 0.0, "avg_logprob": -0.09427947611422152, "compression_ratio": 1.6, "no_speech_prob": 6.540118647535564e-06}, {"id": 658, "seek": 305624, "start": 3068.3999999999996, "end": 3073.12, "text": " models that Ross has provided.", "tokens": [5245, 300, 16140, 575, 5649, 13], "temperature": 0.0, "avg_logprob": -0.09427947611422152, "compression_ratio": 1.6, "no_speech_prob": 6.540118647535564e-06}, {"id": 659, "seek": 305624, "start": 3073.12, "end": 3081.0, "text": " Having said that, the model family called ResNet are probably going to be fine for nearly", "tokens": [10222, 848, 300, 11, 264, 2316, 1605, 1219, 5015, 31890, 366, 1391, 516, 281, 312, 2489, 337, 6217], "temperature": 0.0, "avg_logprob": -0.09427947611422152, "compression_ratio": 1.6, "no_speech_prob": 6.540118647535564e-06}, {"id": 660, "seek": 305624, "start": 3081.0, "end": 3082.3199999999997, "text": " all the things you want to do.", "tokens": [439, 264, 721, 291, 528, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.09427947611422152, "compression_ratio": 1.6, "no_speech_prob": 6.540118647535564e-06}, {"id": 661, "seek": 308232, "start": 3082.32, "end": 3090.7200000000003, "text": " But it is fun to try different models out, so you can type in any string here to use", "tokens": [583, 309, 307, 1019, 281, 853, 819, 5245, 484, 11, 370, 291, 393, 2010, 294, 604, 6798, 510, 281, 764], "temperature": 0.0, "avg_logprob": -0.16671045202957957, "compression_ratio": 1.5420560747663552, "no_speech_prob": 3.611759893829003e-06}, {"id": 662, "seek": 308232, "start": 3090.7200000000003, "end": 3094.2000000000003, "text": " any one of those other models.", "tokens": [604, 472, 295, 729, 661, 5245, 13], "temperature": 0.0, "avg_logprob": -0.16671045202957957, "compression_ratio": 1.5420560747663552, "no_speech_prob": 3.611759893829003e-06}, {"id": 663, "seek": 308232, "start": 3094.2000000000003, "end": 3100.04, "text": " Okay, so if we run that, let's see what happens.", "tokens": [1033, 11, 370, 498, 321, 1190, 300, 11, 718, 311, 536, 437, 2314, 13], "temperature": 0.0, "avg_logprob": -0.16671045202957957, "compression_ratio": 1.5420560747663552, "no_speech_prob": 3.611759893829003e-06}, {"id": 664, "seek": 308232, "start": 3100.04, "end": 3101.1600000000003, "text": " Okay, so this is interesting.", "tokens": [1033, 11, 370, 341, 307, 1880, 13], "temperature": 0.0, "avg_logprob": -0.16671045202957957, "compression_ratio": 1.5420560747663552, "no_speech_prob": 3.611759893829003e-06}, {"id": 665, "seek": 308232, "start": 3101.1600000000003, "end": 3107.7000000000003, "text": " So when I ran this, so remember on Kaggle, it's creating a new virtual computer for us.", "tokens": [407, 562, 286, 5872, 341, 11, 370, 1604, 322, 48751, 22631, 11, 309, 311, 4084, 257, 777, 6374, 3820, 337, 505, 13], "temperature": 0.0, "avg_logprob": -0.16671045202957957, "compression_ratio": 1.5420560747663552, "no_speech_prob": 3.611759893829003e-06}, {"id": 666, "seek": 308232, "start": 3107.7000000000003, "end": 3109.7000000000003, "text": " So it doesn't really have anything ready to go.", "tokens": [407, 309, 1177, 380, 534, 362, 1340, 1919, 281, 352, 13], "temperature": 0.0, "avg_logprob": -0.16671045202957957, "compression_ratio": 1.5420560747663552, "no_speech_prob": 3.611759893829003e-06}, {"id": 667, "seek": 310970, "start": 3109.7, "end": 3116.48, "text": " So when I ran this, the first thing it did was it said downloading ResNet 18.pth.", "tokens": [407, 562, 286, 5872, 341, 11, 264, 700, 551, 309, 630, 390, 309, 848, 32529, 5015, 31890, 2443, 13, 79, 392, 13], "temperature": 0.0, "avg_logprob": -0.1372706549508231, "compression_ratio": 1.4603960396039604, "no_speech_prob": 1.1365426644260879e-06}, {"id": 668, "seek": 310970, "start": 3116.48, "end": 3117.48, "text": " What's that?", "tokens": [708, 311, 300, 30], "temperature": 0.0, "avg_logprob": -0.1372706549508231, "compression_ratio": 1.4603960396039604, "no_speech_prob": 1.1365426644260879e-06}, {"id": 669, "seek": 310970, "start": 3117.48, "end": 3124.8399999999997, "text": " Well, the reason we can do this so fast is because somebody else has already trained", "tokens": [1042, 11, 264, 1778, 321, 393, 360, 341, 370, 2370, 307, 570, 2618, 1646, 575, 1217, 8895], "temperature": 0.0, "avg_logprob": -0.1372706549508231, "compression_ratio": 1.4603960396039604, "no_speech_prob": 1.1365426644260879e-06}, {"id": 670, "seek": 310970, "start": 3124.8399999999997, "end": 3132.04, "text": " this model to recognize over 1 million images of over 1000 different types, something called", "tokens": [341, 2316, 281, 5521, 670, 502, 2459, 5267, 295, 670, 9714, 819, 3467, 11, 746, 1219], "temperature": 0.0, "avg_logprob": -0.1372706549508231, "compression_ratio": 1.4603960396039604, "no_speech_prob": 1.1365426644260879e-06}, {"id": 671, "seek": 310970, "start": 3132.04, "end": 3134.48, "text": " the ImageNet data set.", "tokens": [264, 29903, 31890, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.1372706549508231, "compression_ratio": 1.4603960396039604, "no_speech_prob": 1.1365426644260879e-06}, {"id": 672, "seek": 313448, "start": 3134.48, "end": 3140.64, "text": " And they then made those weights available, those parameters available on the internet", "tokens": [400, 436, 550, 1027, 729, 17443, 2435, 11, 729, 9834, 2435, 322, 264, 4705], "temperature": 0.0, "avg_logprob": -0.12567752141218919, "compression_ratio": 1.7881355932203389, "no_speech_prob": 1.392458102600358e-06}, {"id": 673, "seek": 313448, "start": 3140.64, "end": 3142.84, "text": " for anybody to download.", "tokens": [337, 4472, 281, 5484, 13], "temperature": 0.0, "avg_logprob": -0.12567752141218919, "compression_ratio": 1.7881355932203389, "no_speech_prob": 1.392458102600358e-06}, {"id": 674, "seek": 313448, "start": 3142.84, "end": 3149.4, "text": " By default, on Fast.ai, when you asked for a model, we will download those weights for", "tokens": [3146, 7576, 11, 322, 15968, 13, 1301, 11, 562, 291, 2351, 337, 257, 2316, 11, 321, 486, 5484, 729, 17443, 337], "temperature": 0.0, "avg_logprob": -0.12567752141218919, "compression_ratio": 1.7881355932203389, "no_speech_prob": 1.392458102600358e-06}, {"id": 675, "seek": 313448, "start": 3149.4, "end": 3154.6, "text": " you so that you don't start with a random network that can't do anything.", "tokens": [291, 370, 300, 291, 500, 380, 722, 365, 257, 4974, 3209, 300, 393, 380, 360, 1340, 13], "temperature": 0.0, "avg_logprob": -0.12567752141218919, "compression_ratio": 1.7881355932203389, "no_speech_prob": 1.392458102600358e-06}, {"id": 676, "seek": 313448, "start": 3154.6, "end": 3158.34, "text": " You actually start with a network that can do an awful lot.", "tokens": [509, 767, 722, 365, 257, 3209, 300, 393, 360, 364, 11232, 688, 13], "temperature": 0.0, "avg_logprob": -0.12567752141218919, "compression_ratio": 1.7881355932203389, "no_speech_prob": 1.392458102600358e-06}, {"id": 677, "seek": 313448, "start": 3158.34, "end": 3163.76, "text": " And so then something that Fast.ai has that's unique is this fine tune method, which what", "tokens": [400, 370, 550, 746, 300, 15968, 13, 1301, 575, 300, 311, 3845, 307, 341, 2489, 10864, 3170, 11, 597, 437], "temperature": 0.0, "avg_logprob": -0.12567752141218919, "compression_ratio": 1.7881355932203389, "no_speech_prob": 1.392458102600358e-06}, {"id": 678, "seek": 316376, "start": 3163.76, "end": 3170.0800000000004, "text": " it does is it takes those pre-trained weights we downloaded for you and it adjusts them", "tokens": [309, 775, 307, 309, 2516, 729, 659, 12, 17227, 2001, 17443, 321, 21748, 337, 291, 293, 309, 4369, 82, 552], "temperature": 0.0, "avg_logprob": -0.10971534101268914, "compression_ratio": 1.6009852216748768, "no_speech_prob": 1.1188402595507796e-06}, {"id": 679, "seek": 316376, "start": 3170.0800000000004, "end": 3177.88, "text": " in a really carefully controlled way to just teach the model the differences between your", "tokens": [294, 257, 534, 7500, 10164, 636, 281, 445, 2924, 264, 2316, 264, 7300, 1296, 428], "temperature": 0.0, "avg_logprob": -0.10971534101268914, "compression_ratio": 1.6009852216748768, "no_speech_prob": 1.1188402595507796e-06}, {"id": 680, "seek": 316376, "start": 3177.88, "end": 3181.1200000000003, "text": " data set and what it was originally trained for.", "tokens": [1412, 992, 293, 437, 309, 390, 7993, 8895, 337, 13], "temperature": 0.0, "avg_logprob": -0.10971534101268914, "compression_ratio": 1.6009852216748768, "no_speech_prob": 1.1188402595507796e-06}, {"id": 681, "seek": 316376, "start": 3181.1200000000003, "end": 3185.32, "text": " That's called fine tuning, hence the name.", "tokens": [663, 311, 1219, 2489, 15164, 11, 16678, 264, 1315, 13], "temperature": 0.0, "avg_logprob": -0.10971534101268914, "compression_ratio": 1.6009852216748768, "no_speech_prob": 1.1188402595507796e-06}, {"id": 682, "seek": 316376, "start": 3185.32, "end": 3189.92, "text": " So that's why you'll see this downloading happen first.", "tokens": [407, 300, 311, 983, 291, 603, 536, 341, 32529, 1051, 700, 13], "temperature": 0.0, "avg_logprob": -0.10971534101268914, "compression_ratio": 1.6009852216748768, "no_speech_prob": 1.1188402595507796e-06}, {"id": 683, "seek": 318992, "start": 3189.92, "end": 3195.0, "text": " And so as you can see at the end of it, this is the error rate here, after a few seconds,", "tokens": [400, 370, 382, 291, 393, 536, 412, 264, 917, 295, 309, 11, 341, 307, 264, 6713, 3314, 510, 11, 934, 257, 1326, 3949, 11], "temperature": 0.0, "avg_logprob": -0.0982676887512207, "compression_ratio": 1.5053191489361701, "no_speech_prob": 2.4823596049827756e-06}, {"id": 684, "seek": 318992, "start": 3195.0, "end": 3201.6800000000003, "text": " it's 100% accurate.", "tokens": [309, 311, 2319, 4, 8559, 13], "temperature": 0.0, "avg_logprob": -0.0982676887512207, "compression_ratio": 1.5053191489361701, "no_speech_prob": 2.4823596049827756e-06}, {"id": 685, "seek": 318992, "start": 3201.6800000000003, "end": 3207.7200000000003, "text": " So we now have a learner and this learner has been started with a pre-trained model", "tokens": [407, 321, 586, 362, 257, 33347, 293, 341, 33347, 575, 668, 1409, 365, 257, 659, 12, 17227, 2001, 2316], "temperature": 0.0, "avg_logprob": -0.0982676887512207, "compression_ratio": 1.5053191489361701, "no_speech_prob": 2.4823596049827756e-06}, {"id": 686, "seek": 318992, "start": 3207.7200000000003, "end": 3215.7200000000003, "text": " that's been fine tuned for the purpose of recognizing bird pictures from forest pictures.", "tokens": [300, 311, 668, 2489, 10870, 337, 264, 4334, 295, 18538, 5255, 5242, 490, 6719, 5242, 13], "temperature": 0.0, "avg_logprob": -0.0982676887512207, "compression_ratio": 1.5053191489361701, "no_speech_prob": 2.4823596049827756e-06}, {"id": 687, "seek": 321572, "start": 3215.72, "end": 3224.6, "text": " So you can now call dot predict on it and dot predict you pass in an image.", "tokens": [407, 291, 393, 586, 818, 5893, 6069, 322, 309, 293, 5893, 6069, 291, 1320, 294, 364, 3256, 13], "temperature": 0.0, "avg_logprob": -0.10041188134087456, "compression_ratio": 1.6390243902439023, "no_speech_prob": 2.8128240501246182e-06}, {"id": 688, "seek": 321572, "start": 3224.6, "end": 3229.4199999999996, "text": " And so this is how you would then deploy your model.", "tokens": [400, 370, 341, 307, 577, 291, 576, 550, 7274, 428, 2316, 13], "temperature": 0.0, "avg_logprob": -0.10041188134087456, "compression_ratio": 1.6390243902439023, "no_speech_prob": 2.8128240501246182e-06}, {"id": 689, "seek": 321572, "start": 3229.4199999999996, "end": 3237.48, "text": " So in the code you have, whatever it needs to do, so in this particular case, this person", "tokens": [407, 294, 264, 3089, 291, 362, 11, 2035, 309, 2203, 281, 360, 11, 370, 294, 341, 1729, 1389, 11, 341, 954], "temperature": 0.0, "avg_logprob": -0.10041188134087456, "compression_ratio": 1.6390243902439023, "no_speech_prob": 2.8128240501246182e-06}, {"id": 690, "seek": 321572, "start": 3237.48, "end": 3242.72, "text": " had some reason that he needs the app to check whether they're in a national park and whether", "tokens": [632, 512, 1778, 300, 415, 2203, 264, 724, 281, 1520, 1968, 436, 434, 294, 257, 4048, 3884, 293, 1968], "temperature": 0.0, "avg_logprob": -0.10041188134087456, "compression_ratio": 1.6390243902439023, "no_speech_prob": 2.8128240501246182e-06}, {"id": 691, "seek": 321572, "start": 3242.72, "end": 3243.9599999999996, "text": " it's a photo of a bird.", "tokens": [309, 311, 257, 5052, 295, 257, 5255, 13], "temperature": 0.0, "avg_logprob": -0.10041188134087456, "compression_ratio": 1.6390243902439023, "no_speech_prob": 2.8128240501246182e-06}, {"id": 692, "seek": 324396, "start": 3243.96, "end": 3248.4, "text": " So at the bit where they need to know if it's a photo of a bird, it would just call this", "tokens": [407, 412, 264, 857, 689, 436, 643, 281, 458, 498, 309, 311, 257, 5052, 295, 257, 5255, 11, 309, 576, 445, 818, 341], "temperature": 0.0, "avg_logprob": -0.12971831813003076, "compression_ratio": 1.7604166666666667, "no_speech_prob": 2.443918901917641e-06}, {"id": 693, "seek": 324396, "start": 3248.4, "end": 3252.16, "text": " one line of code, learn dot predict.", "tokens": [472, 1622, 295, 3089, 11, 1466, 5893, 6069, 13], "temperature": 0.0, "avg_logprob": -0.12971831813003076, "compression_ratio": 1.7604166666666667, "no_speech_prob": 2.443918901917641e-06}, {"id": 694, "seek": 324396, "start": 3252.16, "end": 3258.0, "text": " And so that's going to return whether it's a bird or not as a string, whether it's a", "tokens": [400, 370, 300, 311, 516, 281, 2736, 1968, 309, 311, 257, 5255, 420, 406, 382, 257, 6798, 11, 1968, 309, 311, 257], "temperature": 0.0, "avg_logprob": -0.12971831813003076, "compression_ratio": 1.7604166666666667, "no_speech_prob": 2.443918901917641e-06}, {"id": 695, "seek": 324396, "start": 3258.0, "end": 3263.64, "text": " bird or not as an integer, and the probability that it's a non-bird or a bird.", "tokens": [5255, 420, 406, 382, 364, 24922, 11, 293, 264, 8482, 300, 309, 311, 257, 2107, 12, 18080, 420, 257, 5255, 13], "temperature": 0.0, "avg_logprob": -0.12971831813003076, "compression_ratio": 1.7604166666666667, "no_speech_prob": 2.443918901917641e-06}, {"id": 696, "seek": 324396, "start": 3263.64, "end": 3267.8, "text": " And so that's why we can print these things out.", "tokens": [400, 370, 300, 311, 983, 321, 393, 4482, 613, 721, 484, 13], "temperature": 0.0, "avg_logprob": -0.12971831813003076, "compression_ratio": 1.7604166666666667, "no_speech_prob": 2.443918901917641e-06}, {"id": 697, "seek": 326780, "start": 3267.8, "end": 3278.04, "text": " Okay, so that's how we can create a computer vision model.", "tokens": [1033, 11, 370, 300, 311, 577, 321, 393, 1884, 257, 3820, 5201, 2316, 13], "temperature": 0.0, "avg_logprob": -0.14021811686771016, "compression_ratio": 1.814569536423841, "no_speech_prob": 3.5559226034820313e-06}, {"id": 698, "seek": 326780, "start": 3278.04, "end": 3279.32, "text": " What about other kinds of models?", "tokens": [708, 466, 661, 3685, 295, 5245, 30], "temperature": 0.0, "avg_logprob": -0.14021811686771016, "compression_ratio": 1.814569536423841, "no_speech_prob": 3.5559226034820313e-06}, {"id": 699, "seek": 326780, "start": 3279.32, "end": 3284.0800000000004, "text": " There's a lot more in the world than just computer vision, a lot more than just image", "tokens": [821, 311, 257, 688, 544, 294, 264, 1002, 813, 445, 3820, 5201, 11, 257, 688, 544, 813, 445, 3256], "temperature": 0.0, "avg_logprob": -0.14021811686771016, "compression_ratio": 1.814569536423841, "no_speech_prob": 3.5559226034820313e-06}, {"id": 700, "seek": 326780, "start": 3284.0800000000004, "end": 3285.0800000000004, "text": " recognition.", "tokens": [11150, 13], "temperature": 0.0, "avg_logprob": -0.14021811686771016, "compression_ratio": 1.814569536423841, "no_speech_prob": 3.5559226034820313e-06}, {"id": 701, "seek": 326780, "start": 3285.0800000000004, "end": 3291.1200000000003, "text": " Well, even within computer vision, there's a lot more than just image recognition.", "tokens": [1042, 11, 754, 1951, 3820, 5201, 11, 456, 311, 257, 688, 544, 813, 445, 3256, 11150, 13], "temperature": 0.0, "avg_logprob": -0.14021811686771016, "compression_ratio": 1.814569536423841, "no_speech_prob": 3.5559226034820313e-06}, {"id": 702, "seek": 329112, "start": 3291.12, "end": 3303.72, "text": " For example, there's segmentation.", "tokens": [1171, 1365, 11, 456, 311, 9469, 399, 13], "temperature": 0.0, "avg_logprob": -0.12354523236634302, "compression_ratio": 1.5664335664335665, "no_speech_prob": 1.2288252264625044e-06}, {"id": 703, "seek": 329112, "start": 3303.72, "end": 3306.96, "text": " So segmentation, maybe the best way to explain segmentation is to show you the result of", "tokens": [407, 9469, 399, 11, 1310, 264, 1151, 636, 281, 2903, 9469, 399, 307, 281, 855, 291, 264, 1874, 295], "temperature": 0.0, "avg_logprob": -0.12354523236634302, "compression_ratio": 1.5664335664335665, "no_speech_prob": 1.2288252264625044e-06}, {"id": 704, "seek": 329112, "start": 3306.96, "end": 3309.8399999999997, "text": " this model.", "tokens": [341, 2316, 13], "temperature": 0.0, "avg_logprob": -0.12354523236634302, "compression_ratio": 1.5664335664335665, "no_speech_prob": 1.2288252264625044e-06}, {"id": 705, "seek": 329112, "start": 3309.8399999999997, "end": 3317.88, "text": " Segmentation is where we take photos, in this case of road scenes, and we color in every", "tokens": [1100, 10433, 399, 307, 689, 321, 747, 5787, 11, 294, 341, 1389, 295, 3060, 8026, 11, 293, 321, 2017, 294, 633], "temperature": 0.0, "avg_logprob": -0.12354523236634302, "compression_ratio": 1.5664335664335665, "no_speech_prob": 1.2288252264625044e-06}, {"id": 706, "seek": 331788, "start": 3317.88, "end": 3321.56, "text": " pixel according to what is it.", "tokens": [19261, 4650, 281, 437, 307, 309, 13], "temperature": 0.0, "avg_logprob": -0.1375596046447754, "compression_ratio": 1.601063829787234, "no_speech_prob": 4.710670054919319e-06}, {"id": 707, "seek": 331788, "start": 3321.56, "end": 3328.56, "text": " So in this case, we've got brown as cars, blue as fences, I guess, red as buildings,", "tokens": [407, 294, 341, 1389, 11, 321, 600, 658, 6292, 382, 5163, 11, 3344, 382, 45796, 11, 286, 2041, 11, 2182, 382, 7446, 11], "temperature": 0.0, "avg_logprob": -0.1375596046447754, "compression_ratio": 1.601063829787234, "no_speech_prob": 4.710670054919319e-06}, {"id": 708, "seek": 331788, "start": 3328.56, "end": 3330.6800000000003, "text": " or brown.", "tokens": [420, 6292, 13], "temperature": 0.0, "avg_logprob": -0.1375596046447754, "compression_ratio": 1.601063829787234, "no_speech_prob": 4.710670054919319e-06}, {"id": 709, "seek": 331788, "start": 3330.6800000000003, "end": 3336.88, "text": " And so on the left here, some photos that somebody has already gone through and classified", "tokens": [400, 370, 322, 264, 1411, 510, 11, 512, 5787, 300, 2618, 575, 1217, 2780, 807, 293, 20627], "temperature": 0.0, "avg_logprob": -0.1375596046447754, "compression_ratio": 1.601063829787234, "no_speech_prob": 4.710670054919319e-06}, {"id": 710, "seek": 331788, "start": 3336.88, "end": 3343.2400000000002, "text": " every pixel of every one of these images according to what that pixel is a pixel of.", "tokens": [633, 19261, 295, 633, 472, 295, 613, 5267, 4650, 281, 437, 300, 19261, 307, 257, 19261, 295, 13], "temperature": 0.0, "avg_logprob": -0.1375596046447754, "compression_ratio": 1.601063829787234, "no_speech_prob": 4.710670054919319e-06}, {"id": 711, "seek": 334324, "start": 3343.24, "end": 3349.64, "text": " And then on the right is what our model is guessing.", "tokens": [400, 550, 322, 264, 558, 307, 437, 527, 2316, 307, 17939, 13], "temperature": 0.0, "avg_logprob": -0.15006098747253419, "compression_ratio": 1.5354838709677419, "no_speech_prob": 2.1567764179053484e-06}, {"id": 712, "seek": 334324, "start": 3349.64, "end": 3355.52, "text": " And as you can see, it's getting a lot of the pixels correct and some of them is getting", "tokens": [400, 382, 291, 393, 536, 11, 309, 311, 1242, 257, 688, 295, 264, 18668, 3006, 293, 512, 295, 552, 307, 1242], "temperature": 0.0, "avg_logprob": -0.15006098747253419, "compression_ratio": 1.5354838709677419, "no_speech_prob": 2.1567764179053484e-06}, {"id": 713, "seek": 334324, "start": 3355.52, "end": 3357.9199999999996, "text": " wrong.", "tokens": [2085, 13], "temperature": 0.0, "avg_logprob": -0.15006098747253419, "compression_ratio": 1.5354838709677419, "no_speech_prob": 2.1567764179053484e-06}, {"id": 714, "seek": 334324, "start": 3357.9199999999996, "end": 3368.6, "text": " It's actually amazing how many is getting correct because this particular model I trained", "tokens": [467, 311, 767, 2243, 577, 867, 307, 1242, 3006, 570, 341, 1729, 2316, 286, 8895], "temperature": 0.0, "avg_logprob": -0.15006098747253419, "compression_ratio": 1.5354838709677419, "no_speech_prob": 2.1567764179053484e-06}, {"id": 715, "seek": 336860, "start": 3368.6, "end": 3376.52, "text": " in about 20 seconds using a tiny, tiny, tiny amount of data.", "tokens": [294, 466, 945, 3949, 1228, 257, 5870, 11, 5870, 11, 5870, 2372, 295, 1412, 13], "temperature": 0.0, "avg_logprob": -0.17183578148316803, "compression_ratio": 1.5925925925925926, "no_speech_prob": 2.9477841962943785e-06}, {"id": 716, "seek": 336860, "start": 3376.52, "end": 3383.6, "text": " So again, you would think this would be a particularly challenging problem to solve,", "tokens": [407, 797, 11, 291, 576, 519, 341, 576, 312, 257, 4098, 7595, 1154, 281, 5039, 11], "temperature": 0.0, "avg_logprob": -0.17183578148316803, "compression_ratio": 1.5925925925925926, "no_speech_prob": 2.9477841962943785e-06}, {"id": 717, "seek": 336860, "start": 3383.6, "end": 3388.24, "text": " but it took about 20 seconds of training to solve it.", "tokens": [457, 309, 1890, 466, 945, 3949, 295, 3097, 281, 5039, 309, 13], "temperature": 0.0, "avg_logprob": -0.17183578148316803, "compression_ratio": 1.5925925925925926, "no_speech_prob": 2.9477841962943785e-06}, {"id": 718, "seek": 336860, "start": 3388.24, "end": 3390.2, "text": " Not amazingly well, but pretty well.", "tokens": [1726, 31762, 731, 11, 457, 1238, 731, 13], "temperature": 0.0, "avg_logprob": -0.17183578148316803, "compression_ratio": 1.5925925925925926, "no_speech_prob": 2.9477841962943785e-06}, {"id": 719, "seek": 336860, "start": 3390.2, "end": 3395.7599999999998, "text": " If I trained it for another two minutes, it'd probably be close to perfect.", "tokens": [759, 286, 8895, 309, 337, 1071, 732, 2077, 11, 309, 1116, 1391, 312, 1998, 281, 2176, 13], "temperature": 0.0, "avg_logprob": -0.17183578148316803, "compression_ratio": 1.5925925925925926, "no_speech_prob": 2.9477841962943785e-06}, {"id": 720, "seek": 336860, "start": 3395.7599999999998, "end": 3397.36, "text": " So this is called segmentation.", "tokens": [407, 341, 307, 1219, 9469, 399, 13], "temperature": 0.0, "avg_logprob": -0.17183578148316803, "compression_ratio": 1.5925925925925926, "no_speech_prob": 2.9477841962943785e-06}, {"id": 721, "seek": 339736, "start": 3397.36, "end": 3404.08, "text": " Now you'll see that there's very, very little data required and sorry, very little code", "tokens": [823, 291, 603, 536, 300, 456, 311, 588, 11, 588, 707, 1412, 4739, 293, 2597, 11, 588, 707, 3089], "temperature": 0.0, "avg_logprob": -0.15835885379625403, "compression_ratio": 1.65625, "no_speech_prob": 2.3319876163441222e-06}, {"id": 722, "seek": 339736, "start": 3404.08, "end": 3409.32, "text": " required and the steps are actually going to look quite familiar.", "tokens": [4739, 293, 264, 4439, 366, 767, 516, 281, 574, 1596, 4963, 13], "temperature": 0.0, "avg_logprob": -0.15835885379625403, "compression_ratio": 1.65625, "no_speech_prob": 2.3319876163441222e-06}, {"id": 723, "seek": 339736, "start": 3409.32, "end": 3412.6, "text": " In fact, in this case, we're using an even simpler approach.", "tokens": [682, 1186, 11, 294, 341, 1389, 11, 321, 434, 1228, 364, 754, 18587, 3109, 13], "temperature": 0.0, "avg_logprob": -0.15835885379625403, "compression_ratio": 1.65625, "no_speech_prob": 2.3319876163441222e-06}, {"id": 724, "seek": 339736, "start": 3412.6, "end": 3414.34, "text": " Earlier on, we used data blocks.", "tokens": [24552, 322, 11, 321, 1143, 1412, 8474, 13], "temperature": 0.0, "avg_logprob": -0.15835885379625403, "compression_ratio": 1.65625, "no_speech_prob": 2.3319876163441222e-06}, {"id": 725, "seek": 339736, "start": 3414.34, "end": 3424.8, "text": " Data blocks are a kind of intermediate level, very flexible approach that you can take to", "tokens": [11888, 8474, 366, 257, 733, 295, 19376, 1496, 11, 588, 11358, 3109, 300, 291, 393, 747, 281], "temperature": 0.0, "avg_logprob": -0.15835885379625403, "compression_ratio": 1.65625, "no_speech_prob": 2.3319876163441222e-06}, {"id": 726, "seek": 339736, "start": 3424.8, "end": 3426.6400000000003, "text": " handling almost any kind of data.", "tokens": [13175, 1920, 604, 733, 295, 1412, 13], "temperature": 0.0, "avg_logprob": -0.15835885379625403, "compression_ratio": 1.65625, "no_speech_prob": 2.3319876163441222e-06}, {"id": 727, "seek": 342664, "start": 3426.64, "end": 3433.3599999999997, "text": " But for the kinds of data that occur a lot, you can use these special data loaders classes", "tokens": [583, 337, 264, 3685, 295, 1412, 300, 5160, 257, 688, 11, 291, 393, 764, 613, 2121, 1412, 3677, 433, 5359], "temperature": 0.0, "avg_logprob": -0.11281279956593233, "compression_ratio": 1.68, "no_speech_prob": 3.137956127829966e-06}, {"id": 728, "seek": 342664, "start": 3433.3599999999997, "end": 3435.7999999999997, "text": " which kind of lets you use even less code.", "tokens": [597, 733, 295, 6653, 291, 764, 754, 1570, 3089, 13], "temperature": 0.0, "avg_logprob": -0.11281279956593233, "compression_ratio": 1.68, "no_speech_prob": 3.137956127829966e-06}, {"id": 729, "seek": 342664, "start": 3435.7999999999997, "end": 3441.0, "text": " So in this case, to create data loaders for segmentation, you can just say, okay, I'm", "tokens": [407, 294, 341, 1389, 11, 281, 1884, 1412, 3677, 433, 337, 9469, 399, 11, 291, 393, 445, 584, 11, 1392, 11, 286, 478], "temperature": 0.0, "avg_logprob": -0.11281279956593233, "compression_ratio": 1.68, "no_speech_prob": 3.137956127829966e-06}, {"id": 730, "seek": 342664, "start": 3441.0, "end": 3444.24, "text": " going to pass you in a function for labeling.", "tokens": [516, 281, 1320, 291, 294, 257, 2445, 337, 40244, 13], "temperature": 0.0, "avg_logprob": -0.11281279956593233, "compression_ratio": 1.68, "no_speech_prob": 3.137956127829966e-06}, {"id": 731, "seek": 342664, "start": 3444.24, "end": 3449.4, "text": " And you can see here it's got pretty similar things that we pass in to what we passed in", "tokens": [400, 291, 393, 536, 510, 309, 311, 658, 1238, 2531, 721, 300, 321, 1320, 294, 281, 437, 321, 4678, 294], "temperature": 0.0, "avg_logprob": -0.11281279956593233, "compression_ratio": 1.68, "no_speech_prob": 3.137956127829966e-06}, {"id": 732, "seek": 342664, "start": 3449.4, "end": 3451.4, "text": " for data blocks before.", "tokens": [337, 1412, 8474, 949, 13], "temperature": 0.0, "avg_logprob": -0.11281279956593233, "compression_ratio": 1.68, "no_speech_prob": 3.137956127829966e-06}, {"id": 733, "seek": 345140, "start": 3451.4, "end": 3458.8, "text": " So our file names is get image files again and then our label function is something that", "tokens": [407, 527, 3991, 5288, 307, 483, 3256, 7098, 797, 293, 550, 527, 7645, 2445, 307, 746, 300], "temperature": 0.0, "avg_logprob": -0.1788162112236023, "compression_ratio": 1.62, "no_speech_prob": 5.337947186490055e-06}, {"id": 734, "seek": 345140, "start": 3458.8, "end": 3463.0, "text": " grabs this path and the codes.", "tokens": [30028, 341, 3100, 293, 264, 14211, 13], "temperature": 0.0, "avg_logprob": -0.1788162112236023, "compression_ratio": 1.62, "no_speech_prob": 5.337947186490055e-06}, {"id": 735, "seek": 345140, "start": 3463.0, "end": 3468.2000000000003, "text": " So the labels for the segmentation, sorry, the codes.", "tokens": [407, 264, 16949, 337, 264, 9469, 399, 11, 2597, 11, 264, 14211, 13], "temperature": 0.0, "avg_logprob": -0.1788162112236023, "compression_ratio": 1.62, "no_speech_prob": 5.337947186490055e-06}, {"id": 736, "seek": 345140, "start": 3468.2000000000003, "end": 3472.08, "text": " So like what does each code mean is going to be this text file.", "tokens": [407, 411, 437, 775, 1184, 3089, 914, 307, 516, 281, 312, 341, 2487, 3991, 13], "temperature": 0.0, "avg_logprob": -0.1788162112236023, "compression_ratio": 1.62, "no_speech_prob": 5.337947186490055e-06}, {"id": 737, "seek": 345140, "start": 3472.08, "end": 3478.1600000000003, "text": " But you can see the basic information we're providing is very, very similar regardless", "tokens": [583, 291, 393, 536, 264, 3875, 1589, 321, 434, 6530, 307, 588, 11, 588, 2531, 10060], "temperature": 0.0, "avg_logprob": -0.1788162112236023, "compression_ratio": 1.62, "no_speech_prob": 5.337947186490055e-06}, {"id": 738, "seek": 347816, "start": 3478.16, "end": 3482.68, "text": " of whether we're doing segmentation or object recognition.", "tokens": [295, 1968, 321, 434, 884, 9469, 399, 420, 2657, 11150, 13], "temperature": 0.0, "avg_logprob": -0.15230962027490666, "compression_ratio": 1.699604743083004, "no_speech_prob": 8.267565135611221e-06}, {"id": 739, "seek": 347816, "start": 3482.68, "end": 3484.16, "text": " And then the next steps are pretty much the same.", "tokens": [400, 550, 264, 958, 4439, 366, 1238, 709, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.15230962027490666, "compression_ratio": 1.699604743083004, "no_speech_prob": 8.267565135611221e-06}, {"id": 740, "seek": 347816, "start": 3484.16, "end": 3486.48, "text": " We create a learner for segmentation.", "tokens": [492, 1884, 257, 33347, 337, 9469, 399, 13], "temperature": 0.0, "avg_logprob": -0.15230962027490666, "compression_ratio": 1.699604743083004, "no_speech_prob": 8.267565135611221e-06}, {"id": 741, "seek": 347816, "start": 3486.48, "end": 3489.7999999999997, "text": " We've got a unit learner which we'll learn about later.", "tokens": [492, 600, 658, 257, 4985, 33347, 597, 321, 603, 1466, 466, 1780, 13], "temperature": 0.0, "avg_logprob": -0.15230962027490666, "compression_ratio": 1.699604743083004, "no_speech_prob": 8.267565135611221e-06}, {"id": 742, "seek": 347816, "start": 3489.7999999999997, "end": 3492.94, "text": " And then again, we call fine tune.", "tokens": [400, 550, 797, 11, 321, 818, 2489, 10864, 13], "temperature": 0.0, "avg_logprob": -0.15230962027490666, "compression_ratio": 1.699604743083004, "no_speech_prob": 8.267565135611221e-06}, {"id": 743, "seek": 347816, "start": 3492.94, "end": 3495.16, "text": " So that is it.", "tokens": [407, 300, 307, 309, 13], "temperature": 0.0, "avg_logprob": -0.15230962027490666, "compression_ratio": 1.699604743083004, "no_speech_prob": 8.267565135611221e-06}, {"id": 744, "seek": 347816, "start": 3495.16, "end": 3499.44, "text": " And that's how we create a segmentation model.", "tokens": [400, 300, 311, 577, 321, 1884, 257, 9469, 399, 2316, 13], "temperature": 0.0, "avg_logprob": -0.15230962027490666, "compression_ratio": 1.699604743083004, "no_speech_prob": 8.267565135611221e-06}, {"id": 745, "seek": 347816, "start": 3499.44, "end": 3501.7999999999997, "text": " What about stepping away from computer vision?", "tokens": [708, 466, 16821, 1314, 490, 3820, 5201, 30], "temperature": 0.0, "avg_logprob": -0.15230962027490666, "compression_ratio": 1.699604743083004, "no_speech_prob": 8.267565135611221e-06}, {"id": 746, "seek": 347816, "start": 3501.7999999999997, "end": 3507.8399999999997, "text": " So perhaps the most widely used kind of model used in industry is tabular analysis.", "tokens": [407, 4317, 264, 881, 13371, 1143, 733, 295, 2316, 1143, 294, 3518, 307, 4421, 1040, 5215, 13], "temperature": 0.0, "avg_logprob": -0.15230962027490666, "compression_ratio": 1.699604743083004, "no_speech_prob": 8.267565135611221e-06}, {"id": 747, "seek": 350784, "start": 3507.84, "end": 3517.8, "text": " So taking things like spreadsheets and database tables and trying to predict columns of those.", "tokens": [407, 1940, 721, 411, 23651, 1385, 293, 8149, 8020, 293, 1382, 281, 6069, 13766, 295, 729, 13], "temperature": 0.0, "avg_logprob": -0.12208135822151281, "compression_ratio": 1.5609756097560976, "no_speech_prob": 3.3929979963431833e-06}, {"id": 748, "seek": 350784, "start": 3517.8, "end": 3525.08, "text": " So in tabular analysis, it really looks very similar to what we've seen already.", "tokens": [407, 294, 4421, 1040, 5215, 11, 309, 534, 1542, 588, 2531, 281, 437, 321, 600, 1612, 1217, 13], "temperature": 0.0, "avg_logprob": -0.12208135822151281, "compression_ratio": 1.5609756097560976, "no_speech_prob": 3.3929979963431833e-06}, {"id": 749, "seek": 350784, "start": 3525.08, "end": 3530.0, "text": " We grab some data and you'll see when I call this untar data, this is the thing in fast", "tokens": [492, 4444, 512, 1412, 293, 291, 603, 536, 562, 286, 818, 341, 1701, 289, 1412, 11, 341, 307, 264, 551, 294, 2370], "temperature": 0.0, "avg_logprob": -0.12208135822151281, "compression_ratio": 1.5609756097560976, "no_speech_prob": 3.3929979963431833e-06}, {"id": 750, "seek": 350784, "start": 3530.0, "end": 3533.1600000000003, "text": " AI that downloads some data and decompresses it for you.", "tokens": [7318, 300, 36553, 512, 1412, 293, 22867, 40352, 309, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.12208135822151281, "compression_ratio": 1.5609756097560976, "no_speech_prob": 3.3929979963431833e-06}, {"id": 751, "seek": 353316, "start": 3533.16, "end": 3539.04, "text": " And there's a whole lot of URLs provided by fast AI for all the kind of common data sets", "tokens": [400, 456, 311, 257, 1379, 688, 295, 43267, 5649, 538, 2370, 7318, 337, 439, 264, 733, 295, 2689, 1412, 6352], "temperature": 0.0, "avg_logprob": -0.13921388696741174, "compression_ratio": 1.6966666666666668, "no_speech_prob": 6.7476175900083035e-06}, {"id": 752, "seek": 353316, "start": 3539.04, "end": 3543.3599999999997, "text": " that you might want to use, all the ones that are in the book or lots of data sets that", "tokens": [300, 291, 1062, 528, 281, 764, 11, 439, 264, 2306, 300, 366, 294, 264, 1446, 420, 3195, 295, 1412, 6352, 300], "temperature": 0.0, "avg_logprob": -0.13921388696741174, "compression_ratio": 1.6966666666666668, "no_speech_prob": 6.7476175900083035e-06}, {"id": 753, "seek": 353316, "start": 3543.3599999999997, "end": 3545.7999999999997, "text": " are kind of widely used in learning and research.", "tokens": [366, 733, 295, 13371, 1143, 294, 2539, 293, 2132, 13], "temperature": 0.0, "avg_logprob": -0.13921388696741174, "compression_ratio": 1.6966666666666668, "no_speech_prob": 6.7476175900083035e-06}, {"id": 754, "seek": 353316, "start": 3545.7999999999997, "end": 3548.92, "text": " So that makes life nice and easy for you.", "tokens": [407, 300, 1669, 993, 1481, 293, 1858, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.13921388696741174, "compression_ratio": 1.6966666666666668, "no_speech_prob": 6.7476175900083035e-06}, {"id": 755, "seek": 353316, "start": 3548.92, "end": 3552.56, "text": " So again, we're going to create data loaders, but this time it's tabular data loaders.", "tokens": [407, 797, 11, 321, 434, 516, 281, 1884, 1412, 3677, 433, 11, 457, 341, 565, 309, 311, 4421, 1040, 1412, 3677, 433, 13], "temperature": 0.0, "avg_logprob": -0.13921388696741174, "compression_ratio": 1.6966666666666668, "no_speech_prob": 6.7476175900083035e-06}, {"id": 756, "seek": 353316, "start": 3552.56, "end": 3556.24, "text": " But we provide pretty similar kind of information to what we had before.", "tokens": [583, 321, 2893, 1238, 2531, 733, 295, 1589, 281, 437, 321, 632, 949, 13], "temperature": 0.0, "avg_logprob": -0.13921388696741174, "compression_ratio": 1.6966666666666668, "no_speech_prob": 6.7476175900083035e-06}, {"id": 757, "seek": 353316, "start": 3556.24, "end": 3557.8799999999997, "text": " A couple of new things.", "tokens": [316, 1916, 295, 777, 721, 13], "temperature": 0.0, "avg_logprob": -0.13921388696741174, "compression_ratio": 1.6966666666666668, "no_speech_prob": 6.7476175900083035e-06}, {"id": 758, "seek": 353316, "start": 3557.8799999999997, "end": 3561.2, "text": " We have to tell it which of the columns are categorical.", "tokens": [492, 362, 281, 980, 309, 597, 295, 264, 13766, 366, 19250, 804, 13], "temperature": 0.0, "avg_logprob": -0.13921388696741174, "compression_ratio": 1.6966666666666668, "no_speech_prob": 6.7476175900083035e-06}, {"id": 759, "seek": 356120, "start": 3561.2, "end": 3565.7999999999997, "text": " So they can only take one of a few values and which ones are continuous.", "tokens": [407, 436, 393, 787, 747, 472, 295, 257, 1326, 4190, 293, 597, 2306, 366, 10957, 13], "temperature": 0.0, "avg_logprob": -0.10757098247095481, "compression_ratio": 1.6502057613168724, "no_speech_prob": 6.047695023880806e-06}, {"id": 760, "seek": 356120, "start": 3565.7999999999997, "end": 3570.04, "text": " So they can take basically any real number.", "tokens": [407, 436, 393, 747, 1936, 604, 957, 1230, 13], "temperature": 0.0, "avg_logprob": -0.10757098247095481, "compression_ratio": 1.6502057613168724, "no_speech_prob": 6.047695023880806e-06}, {"id": 761, "seek": 356120, "start": 3570.04, "end": 3576.0, "text": " And then again, we can use the exact same show batch that we've seen before to see the", "tokens": [400, 550, 797, 11, 321, 393, 764, 264, 1900, 912, 855, 15245, 300, 321, 600, 1612, 949, 281, 536, 264], "temperature": 0.0, "avg_logprob": -0.10757098247095481, "compression_ratio": 1.6502057613168724, "no_speech_prob": 6.047695023880806e-06}, {"id": 762, "seek": 356120, "start": 3576.0, "end": 3577.0, "text": " data.", "tokens": [1412, 13], "temperature": 0.0, "avg_logprob": -0.10757098247095481, "compression_ratio": 1.6502057613168724, "no_speech_prob": 6.047695023880806e-06}, {"id": 763, "seek": 356120, "start": 3577.0, "end": 3584.3199999999997, "text": " And so fast AI uses a lot of something called type dispatch, which is a system that's particularly", "tokens": [400, 370, 2370, 7318, 4960, 257, 688, 295, 746, 1219, 2010, 36729, 11, 597, 307, 257, 1185, 300, 311, 4098], "temperature": 0.0, "avg_logprob": -0.10757098247095481, "compression_ratio": 1.6502057613168724, "no_speech_prob": 6.047695023880806e-06}, {"id": 764, "seek": 356120, "start": 3584.3199999999997, "end": 3590.8799999999997, "text": " popular in in a language called Julia to basically automatically do the right thing for your", "tokens": [3743, 294, 294, 257, 2856, 1219, 18551, 281, 1936, 6772, 360, 264, 558, 551, 337, 428], "temperature": 0.0, "avg_logprob": -0.10757098247095481, "compression_ratio": 1.6502057613168724, "no_speech_prob": 6.047695023880806e-06}, {"id": 765, "seek": 359088, "start": 3590.88, "end": 3593.48, "text": " data regardless of what kind of data it is.", "tokens": [1412, 10060, 295, 437, 733, 295, 1412, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.12311833381652831, "compression_ratio": 1.8060344827586208, "no_speech_prob": 7.182244189607445e-06}, {"id": 766, "seek": 359088, "start": 3593.48, "end": 3597.6600000000003, "text": " So if you call show batch on something, you should get back something useful regardless", "tokens": [407, 498, 291, 818, 855, 15245, 322, 746, 11, 291, 820, 483, 646, 746, 4420, 10060], "temperature": 0.0, "avg_logprob": -0.12311833381652831, "compression_ratio": 1.8060344827586208, "no_speech_prob": 7.182244189607445e-06}, {"id": 767, "seek": 359088, "start": 3597.6600000000003, "end": 3599.88, "text": " of what kind of information you provided.", "tokens": [295, 437, 733, 295, 1589, 291, 5649, 13], "temperature": 0.0, "avg_logprob": -0.12311833381652831, "compression_ratio": 1.8060344827586208, "no_speech_prob": 7.182244189607445e-06}, {"id": 768, "seek": 359088, "start": 3599.88, "end": 3605.56, "text": " So for a table, it shows you the information in that table.", "tokens": [407, 337, 257, 3199, 11, 309, 3110, 291, 264, 1589, 294, 300, 3199, 13], "temperature": 0.0, "avg_logprob": -0.12311833381652831, "compression_ratio": 1.8060344827586208, "no_speech_prob": 7.182244189607445e-06}, {"id": 769, "seek": 359088, "start": 3605.56, "end": 3613.2000000000003, "text": " This particular data set is a data set of whether people have less than $50,000 or more", "tokens": [639, 1729, 1412, 992, 307, 257, 1412, 992, 295, 1968, 561, 362, 1570, 813, 1848, 2803, 11, 1360, 420, 544], "temperature": 0.0, "avg_logprob": -0.12311833381652831, "compression_ratio": 1.8060344827586208, "no_speech_prob": 7.182244189607445e-06}, {"id": 770, "seek": 359088, "start": 3613.2000000000003, "end": 3620.8, "text": " than $50,000 in salary for different districts based on demographic information in each district.", "tokens": [813, 1848, 2803, 11, 1360, 294, 15360, 337, 819, 16815, 2361, 322, 26331, 1589, 294, 1184, 6566, 13], "temperature": 0.0, "avg_logprob": -0.12311833381652831, "compression_ratio": 1.8060344827586208, "no_speech_prob": 7.182244189607445e-06}, {"id": 771, "seek": 362080, "start": 3620.8, "end": 3631.6800000000003, "text": " So to build a model for that data loaders, we do as always, something underscore learner.", "tokens": [407, 281, 1322, 257, 2316, 337, 300, 1412, 3677, 433, 11, 321, 360, 382, 1009, 11, 746, 37556, 33347, 13], "temperature": 0.0, "avg_logprob": -0.15824325797484093, "compression_ratio": 1.6725663716814159, "no_speech_prob": 5.954465905233519e-06}, {"id": 772, "seek": 362080, "start": 3631.6800000000003, "end": 3635.36, "text": " In this case, it's a tabular learner.", "tokens": [682, 341, 1389, 11, 309, 311, 257, 4421, 1040, 33347, 13], "temperature": 0.0, "avg_logprob": -0.15824325797484093, "compression_ratio": 1.6725663716814159, "no_speech_prob": 5.954465905233519e-06}, {"id": 773, "seek": 362080, "start": 3635.36, "end": 3640.92, "text": " Now this time we don't say fine tune, we say fit, specifically fit one cycle.", "tokens": [823, 341, 565, 321, 500, 380, 584, 2489, 10864, 11, 321, 584, 3318, 11, 4682, 3318, 472, 6586, 13], "temperature": 0.0, "avg_logprob": -0.15824325797484093, "compression_ratio": 1.6725663716814159, "no_speech_prob": 5.954465905233519e-06}, {"id": 774, "seek": 362080, "start": 3640.92, "end": 3644.88, "text": " That's because for tabular models, there's not generally going to be a pre trained model", "tokens": [663, 311, 570, 337, 4421, 1040, 5245, 11, 456, 311, 406, 5101, 516, 281, 312, 257, 659, 8895, 2316], "temperature": 0.0, "avg_logprob": -0.15824325797484093, "compression_ratio": 1.6725663716814159, "no_speech_prob": 5.954465905233519e-06}, {"id": 775, "seek": 362080, "start": 3644.88, "end": 3649.1600000000003, "text": " that already does something like what you want, because every table of data is very", "tokens": [300, 1217, 775, 746, 411, 437, 291, 528, 11, 570, 633, 3199, 295, 1412, 307, 588], "temperature": 0.0, "avg_logprob": -0.15824325797484093, "compression_ratio": 1.6725663716814159, "no_speech_prob": 5.954465905233519e-06}, {"id": 776, "seek": 364916, "start": 3649.16, "end": 3651.08, "text": " different.", "tokens": [819, 13], "temperature": 0.0, "avg_logprob": -0.22954188336382855, "compression_ratio": 1.5970873786407767, "no_speech_prob": 2.1233279312582454e-06}, {"id": 777, "seek": 364916, "start": 3651.08, "end": 3655.3199999999997, "text": " Whereas pictures often have a similar theme, you know, they're all pictures, they all have", "tokens": [13813, 5242, 2049, 362, 257, 2531, 6314, 11, 291, 458, 11, 436, 434, 439, 5242, 11, 436, 439, 362], "temperature": 0.0, "avg_logprob": -0.22954188336382855, "compression_ratio": 1.5970873786407767, "no_speech_prob": 2.1233279312582454e-06}, {"id": 778, "seek": 364916, "start": 3655.3199999999997, "end": 3658.96, "text": " the same kind of general idea of what pictures are.", "tokens": [264, 912, 733, 295, 2674, 1558, 295, 437, 5242, 366, 13], "temperature": 0.0, "avg_logprob": -0.22954188336382855, "compression_ratio": 1.5970873786407767, "no_speech_prob": 2.1233279312582454e-06}, {"id": 779, "seek": 364916, "start": 3658.96, "end": 3664.0, "text": " So that's why it generally doesn't make too much sense to fine tune a tabular model.", "tokens": [407, 300, 311, 983, 309, 5101, 1177, 380, 652, 886, 709, 2020, 281, 2489, 10864, 257, 4421, 1040, 2316, 13], "temperature": 0.0, "avg_logprob": -0.22954188336382855, "compression_ratio": 1.5970873786407767, "no_speech_prob": 2.1233279312582454e-06}, {"id": 780, "seek": 364916, "start": 3664.0, "end": 3666.68, "text": " So instead you just fit.", "tokens": [407, 2602, 291, 445, 3318, 13], "temperature": 0.0, "avg_logprob": -0.22954188336382855, "compression_ratio": 1.5970873786407767, "no_speech_prob": 2.1233279312582454e-06}, {"id": 781, "seek": 364916, "start": 3666.68, "end": 3668.2, "text": " So there's one difference there.", "tokens": [407, 456, 311, 472, 2649, 456, 13], "temperature": 0.0, "avg_logprob": -0.22954188336382855, "compression_ratio": 1.5970873786407767, "no_speech_prob": 2.1233279312582454e-06}, {"id": 782, "seek": 364916, "start": 3668.2, "end": 3671.7999999999997, "text": " I'll show another example.", "tokens": [286, 603, 855, 1071, 1365, 13], "temperature": 0.0, "avg_logprob": -0.22954188336382855, "compression_ratio": 1.5970873786407767, "no_speech_prob": 2.1233279312582454e-06}, {"id": 783, "seek": 364916, "start": 3671.7999999999997, "end": 3674.06, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.22954188336382855, "compression_ratio": 1.5970873786407767, "no_speech_prob": 2.1233279312582454e-06}, {"id": 784, "seek": 367406, "start": 3674.06, "end": 3680.6, "text": " So collaborative filtering.", "tokens": [407, 16555, 30822, 13], "temperature": 0.0, "avg_logprob": -0.10558560235159738, "compression_ratio": 1.7248677248677249, "no_speech_prob": 5.5939735830179416e-06}, {"id": 785, "seek": 367406, "start": 3680.6, "end": 3684.72, "text": " Collaborative filtering is the basis of most recommendation systems today.", "tokens": [44483, 1166, 30822, 307, 264, 5143, 295, 881, 11879, 3652, 965, 13], "temperature": 0.0, "avg_logprob": -0.10558560235159738, "compression_ratio": 1.7248677248677249, "no_speech_prob": 5.5939735830179416e-06}, {"id": 786, "seek": 367406, "start": 3684.72, "end": 3692.88, "text": " It's a system where we basically take data set that says which users liked which products", "tokens": [467, 311, 257, 1185, 689, 321, 1936, 747, 1412, 992, 300, 1619, 597, 5022, 4501, 597, 3383], "temperature": 0.0, "avg_logprob": -0.10558560235159738, "compression_ratio": 1.7248677248677249, "no_speech_prob": 5.5939735830179416e-06}, {"id": 787, "seek": 367406, "start": 3692.88, "end": 3695.92, "text": " or which users used which products.", "tokens": [420, 597, 5022, 1143, 597, 3383, 13], "temperature": 0.0, "avg_logprob": -0.10558560235159738, "compression_ratio": 1.7248677248677249, "no_speech_prob": 5.5939735830179416e-06}, {"id": 788, "seek": 367406, "start": 3695.92, "end": 3702.04, "text": " And then we use that to guess what other products those users might like based on finding similar", "tokens": [400, 550, 321, 764, 300, 281, 2041, 437, 661, 3383, 729, 5022, 1062, 411, 2361, 322, 5006, 2531], "temperature": 0.0, "avg_logprob": -0.10558560235159738, "compression_ratio": 1.7248677248677249, "no_speech_prob": 5.5939735830179416e-06}, {"id": 789, "seek": 370204, "start": 3702.04, "end": 3705.04, "text": " users and what those similar users liked.", "tokens": [5022, 293, 437, 729, 2531, 5022, 4501, 13], "temperature": 0.0, "avg_logprob": -0.10087735139870946, "compression_ratio": 1.5833333333333333, "no_speech_prob": 8.66374193719821e-06}, {"id": 790, "seek": 370204, "start": 3705.04, "end": 3708.44, "text": " The interesting thing about collaborative filtering is that when we say similar users,", "tokens": [440, 1880, 551, 466, 16555, 30822, 307, 300, 562, 321, 584, 2531, 5022, 11], "temperature": 0.0, "avg_logprob": -0.10087735139870946, "compression_ratio": 1.5833333333333333, "no_speech_prob": 8.66374193719821e-06}, {"id": 791, "seek": 370204, "start": 3708.44, "end": 3716.92, "text": " we're not referring to similar demographically, but similar in the sense of people who liked", "tokens": [321, 434, 406, 13761, 281, 2531, 1371, 3108, 984, 11, 457, 2531, 294, 264, 2020, 295, 561, 567, 4501], "temperature": 0.0, "avg_logprob": -0.10087735139870946, "compression_ratio": 1.5833333333333333, "no_speech_prob": 8.66374193719821e-06}, {"id": 792, "seek": 370204, "start": 3716.92, "end": 3720.48, "text": " the same kinds of products.", "tokens": [264, 912, 3685, 295, 3383, 13], "temperature": 0.0, "avg_logprob": -0.10087735139870946, "compression_ratio": 1.5833333333333333, "no_speech_prob": 8.66374193719821e-06}, {"id": 793, "seek": 370204, "start": 3720.48, "end": 3726.52, "text": " So for example, if you use any of the music systems like Spotify or Apple Music or whatever,", "tokens": [407, 337, 1365, 11, 498, 291, 764, 604, 295, 264, 1318, 3652, 411, 29036, 420, 6373, 7609, 420, 2035, 11], "temperature": 0.0, "avg_logprob": -0.10087735139870946, "compression_ratio": 1.5833333333333333, "no_speech_prob": 8.66374193719821e-06}, {"id": 794, "seek": 372652, "start": 3726.52, "end": 3734.2, "text": " it'll ask you first, like what's a few pieces of music you like, and you tell it and then", "tokens": [309, 603, 1029, 291, 700, 11, 411, 437, 311, 257, 1326, 3755, 295, 1318, 291, 411, 11, 293, 291, 980, 309, 293, 550], "temperature": 0.0, "avg_logprob": -0.13146177612908996, "compression_ratio": 1.6986899563318778, "no_speech_prob": 1.8446824014972663e-06}, {"id": 795, "seek": 372652, "start": 3734.2, "end": 3738.74, "text": " it says, okay, well, maybe let's start playing this music for you.", "tokens": [309, 1619, 11, 1392, 11, 731, 11, 1310, 718, 311, 722, 2433, 341, 1318, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.13146177612908996, "compression_ratio": 1.6986899563318778, "no_speech_prob": 1.8446824014972663e-06}, {"id": 796, "seek": 372652, "start": 3738.74, "end": 3739.74, "text": " And that's how it works.", "tokens": [400, 300, 311, 577, 309, 1985, 13], "temperature": 0.0, "avg_logprob": -0.13146177612908996, "compression_ratio": 1.6986899563318778, "no_speech_prob": 1.8446824014972663e-06}, {"id": 797, "seek": 372652, "start": 3739.74, "end": 3741.64, "text": " It uses collaborative filtering.", "tokens": [467, 4960, 16555, 30822, 13], "temperature": 0.0, "avg_logprob": -0.13146177612908996, "compression_ratio": 1.6986899563318778, "no_speech_prob": 1.8446824014972663e-06}, {"id": 798, "seek": 372652, "start": 3741.64, "end": 3749.0, "text": " So we can create a collaborative filtering data loaders in exactly the same way that", "tokens": [407, 321, 393, 1884, 257, 16555, 30822, 1412, 3677, 433, 294, 2293, 264, 912, 636, 300], "temperature": 0.0, "avg_logprob": -0.13146177612908996, "compression_ratio": 1.6986899563318778, "no_speech_prob": 1.8446824014972663e-06}, {"id": 799, "seek": 372652, "start": 3749.0, "end": 3755.64, "text": " we're used to by downloading and decompressing some data, create our collab data loaders.", "tokens": [321, 434, 1143, 281, 538, 32529, 293, 22867, 18605, 512, 1412, 11, 1884, 527, 44228, 1412, 3677, 433, 13], "temperature": 0.0, "avg_logprob": -0.13146177612908996, "compression_ratio": 1.6986899563318778, "no_speech_prob": 1.8446824014972663e-06}, {"id": 800, "seek": 375564, "start": 3755.64, "end": 3759.2799999999997, "text": " In this case, we can just say from CSV and pass in a CSV.", "tokens": [682, 341, 1389, 11, 321, 393, 445, 584, 490, 48814, 293, 1320, 294, 257, 48814, 13], "temperature": 0.0, "avg_logprob": -0.15153934574928604, "compression_ratio": 1.6666666666666667, "no_speech_prob": 5.4217157412495e-06}, {"id": 801, "seek": 375564, "start": 3759.2799999999997, "end": 3761.56, "text": " And this is what collaborative filtering data looks like.", "tokens": [400, 341, 307, 437, 16555, 30822, 1412, 1542, 411, 13], "temperature": 0.0, "avg_logprob": -0.15153934574928604, "compression_ratio": 1.6666666666666667, "no_speech_prob": 5.4217157412495e-06}, {"id": 802, "seek": 375564, "start": 3761.56, "end": 3766.8399999999997, "text": " It's going to have, generally speaking, a user ID, some kind of product ID, in this", "tokens": [467, 311, 516, 281, 362, 11, 5101, 4124, 11, 257, 4195, 7348, 11, 512, 733, 295, 1674, 7348, 11, 294, 341], "temperature": 0.0, "avg_logprob": -0.15153934574928604, "compression_ratio": 1.6666666666666667, "no_speech_prob": 5.4217157412495e-06}, {"id": 803, "seek": 375564, "start": 3766.8399999999997, "end": 3771.72, "text": " case, a movie and a rating.", "tokens": [1389, 11, 257, 3169, 293, 257, 10990, 13], "temperature": 0.0, "avg_logprob": -0.15153934574928604, "compression_ratio": 1.6666666666666667, "no_speech_prob": 5.4217157412495e-06}, {"id": 804, "seek": 375564, "start": 3771.72, "end": 3778.7599999999998, "text": " So in this case, this user gave this movie a rating of 3.5 out of 5.", "tokens": [407, 294, 341, 1389, 11, 341, 4195, 2729, 341, 3169, 257, 10990, 295, 805, 13, 20, 484, 295, 1025, 13], "temperature": 0.0, "avg_logprob": -0.15153934574928604, "compression_ratio": 1.6666666666666667, "no_speech_prob": 5.4217157412495e-06}, {"id": 805, "seek": 375564, "start": 3778.7599999999998, "end": 3780.44, "text": " And so again, you can see show batch, right?", "tokens": [400, 370, 797, 11, 291, 393, 536, 855, 15245, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.15153934574928604, "compression_ratio": 1.6666666666666667, "no_speech_prob": 5.4217157412495e-06}, {"id": 806, "seek": 375564, "start": 3780.44, "end": 3785.46, "text": " So use show batch, you should get back some useful visualization of your data regardless", "tokens": [407, 764, 855, 15245, 11, 291, 820, 483, 646, 512, 4420, 25801, 295, 428, 1412, 10060], "temperature": 0.0, "avg_logprob": -0.15153934574928604, "compression_ratio": 1.6666666666666667, "no_speech_prob": 5.4217157412495e-06}, {"id": 807, "seek": 378546, "start": 3785.46, "end": 3790.66, "text": " of what kind of data it is.", "tokens": [295, 437, 733, 295, 1412, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.16344517674939385, "compression_ratio": 1.5432692307692308, "no_speech_prob": 1.8161094885726925e-06}, {"id": 808, "seek": 378546, "start": 3790.66, "end": 3794.56, "text": " And so again, we create a learner.", "tokens": [400, 370, 797, 11, 321, 1884, 257, 33347, 13], "temperature": 0.0, "avg_logprob": -0.16344517674939385, "compression_ratio": 1.5432692307692308, "no_speech_prob": 1.8161094885726925e-06}, {"id": 809, "seek": 378546, "start": 3794.56, "end": 3799.6, "text": " This time it's a collaborative filtering learner, and you pass in your data.", "tokens": [639, 565, 309, 311, 257, 16555, 30822, 33347, 11, 293, 291, 1320, 294, 428, 1412, 13], "temperature": 0.0, "avg_logprob": -0.16344517674939385, "compression_ratio": 1.5432692307692308, "no_speech_prob": 1.8161094885726925e-06}, {"id": 810, "seek": 378546, "start": 3799.6, "end": 3804.84, "text": " In this case, we give it one extra piece of information, which is because this is not", "tokens": [682, 341, 1389, 11, 321, 976, 309, 472, 2857, 2522, 295, 1589, 11, 597, 307, 570, 341, 307, 406], "temperature": 0.0, "avg_logprob": -0.16344517674939385, "compression_ratio": 1.5432692307692308, "no_speech_prob": 1.8161094885726925e-06}, {"id": 811, "seek": 378546, "start": 3804.84, "end": 3810.36, "text": " predicting a category, but it's predicting a real number, we tell it what's the possible", "tokens": [32884, 257, 7719, 11, 457, 309, 311, 32884, 257, 957, 1230, 11, 321, 980, 309, 437, 311, 264, 1944], "temperature": 0.0, "avg_logprob": -0.16344517674939385, "compression_ratio": 1.5432692307692308, "no_speech_prob": 1.8161094885726925e-06}, {"id": 812, "seek": 378546, "start": 3810.36, "end": 3811.36, "text": " range.", "tokens": [3613, 13], "temperature": 0.0, "avg_logprob": -0.16344517674939385, "compression_ratio": 1.5432692307692308, "no_speech_prob": 1.8161094885726925e-06}, {"id": 813, "seek": 381136, "start": 3811.36, "end": 3816.88, "text": " The actual range is one to five, but for reasons you'll learn about later, it's a good idea", "tokens": [440, 3539, 3613, 307, 472, 281, 1732, 11, 457, 337, 4112, 291, 603, 1466, 466, 1780, 11, 309, 311, 257, 665, 1558], "temperature": 0.0, "avg_logprob": -0.10350594212931971, "compression_ratio": 1.6546762589928057, "no_speech_prob": 4.0291438381245825e-06}, {"id": 814, "seek": 381136, "start": 3816.88, "end": 3821.52, "text": " to actually go from a little bit lower than the possible minimum to a little bit higher.", "tokens": [281, 767, 352, 490, 257, 707, 857, 3126, 813, 264, 1944, 7285, 281, 257, 707, 857, 2946, 13], "temperature": 0.0, "avg_logprob": -0.10350594212931971, "compression_ratio": 1.6546762589928057, "no_speech_prob": 4.0291438381245825e-06}, {"id": 815, "seek": 381136, "start": 3821.52, "end": 3825.1600000000003, "text": " That's why I say 0.5 to 5.5.", "tokens": [663, 311, 983, 286, 584, 1958, 13, 20, 281, 1025, 13, 20, 13], "temperature": 0.0, "avg_logprob": -0.10350594212931971, "compression_ratio": 1.6546762589928057, "no_speech_prob": 4.0291438381245825e-06}, {"id": 816, "seek": 381136, "start": 3825.1600000000003, "end": 3826.1600000000003, "text": " And then fine tune.", "tokens": [400, 550, 2489, 10864, 13], "temperature": 0.0, "avg_logprob": -0.10350594212931971, "compression_ratio": 1.6546762589928057, "no_speech_prob": 4.0291438381245825e-06}, {"id": 817, "seek": 381136, "start": 3826.1600000000003, "end": 3829.1200000000003, "text": " Now again, you know, we don't really need to fine tune here because there's not really", "tokens": [823, 797, 11, 291, 458, 11, 321, 500, 380, 534, 643, 281, 2489, 10864, 510, 570, 456, 311, 406, 534], "temperature": 0.0, "avg_logprob": -0.10350594212931971, "compression_ratio": 1.6546762589928057, "no_speech_prob": 4.0291438381245825e-06}, {"id": 818, "seek": 381136, "start": 3829.1200000000003, "end": 3833.1600000000003, "text": " such a thing as a pre trained collaborative filtering model, we could just say fit or", "tokens": [1270, 257, 551, 382, 257, 659, 8895, 16555, 30822, 2316, 11, 321, 727, 445, 584, 3318, 420], "temperature": 0.0, "avg_logprob": -0.10350594212931971, "compression_ratio": 1.6546762589928057, "no_speech_prob": 4.0291438381245825e-06}, {"id": 819, "seek": 381136, "start": 3833.1600000000003, "end": 3837.6800000000003, "text": " fit one cycle, but actually fine tune works fine as well.", "tokens": [3318, 472, 6586, 11, 457, 767, 2489, 10864, 1985, 2489, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.10350594212931971, "compression_ratio": 1.6546762589928057, "no_speech_prob": 4.0291438381245825e-06}, {"id": 820, "seek": 383768, "start": 3837.68, "end": 3844.6, "text": " So after we train it for a while, this here is the mean squared error.", "tokens": [407, 934, 321, 3847, 309, 337, 257, 1339, 11, 341, 510, 307, 264, 914, 8889, 6713, 13], "temperature": 0.0, "avg_logprob": -0.10409731613962274, "compression_ratio": 1.5224719101123596, "no_speech_prob": 3.6113945043325657e-06}, {"id": 821, "seek": 383768, "start": 3844.6, "end": 3849.96, "text": " So it's basically that on average, how far off are we for the validation set?", "tokens": [407, 309, 311, 1936, 300, 322, 4274, 11, 577, 1400, 766, 366, 321, 337, 264, 24071, 992, 30], "temperature": 0.0, "avg_logprob": -0.10409731613962274, "compression_ratio": 1.5224719101123596, "no_speech_prob": 3.6113945043325657e-06}, {"id": 822, "seek": 383768, "start": 3849.96, "end": 3856.16, "text": " And you can see as we train, and it's literally so fast, it's less than a second each epoch", "tokens": [400, 291, 393, 536, 382, 321, 3847, 11, 293, 309, 311, 3736, 370, 2370, 11, 309, 311, 1570, 813, 257, 1150, 1184, 30992, 339], "temperature": 0.0, "avg_logprob": -0.10409731613962274, "compression_ratio": 1.5224719101123596, "no_speech_prob": 3.6113945043325657e-06}, {"id": 823, "seek": 383768, "start": 3856.16, "end": 3858.8399999999997, "text": " that error goes down and down.", "tokens": [300, 6713, 1709, 760, 293, 760, 13], "temperature": 0.0, "avg_logprob": -0.10409731613962274, "compression_ratio": 1.5224719101123596, "no_speech_prob": 3.6113945043325657e-06}, {"id": 824, "seek": 385884, "start": 3858.84, "end": 3867.96, "text": " And for any kind of fast AI model, you can and for any kind of fast AI model, you can", "tokens": [400, 337, 604, 733, 295, 2370, 7318, 2316, 11, 291, 393, 293, 337, 604, 733, 295, 2370, 7318, 2316, 11, 291, 393], "temperature": 0.0, "avg_logprob": -0.1395582633443398, "compression_ratio": 1.7555555555555555, "no_speech_prob": 3.0414721550187096e-06}, {"id": 825, "seek": 385884, "start": 3867.96, "end": 3870.7200000000003, "text": " always call show results and get something sensible.", "tokens": [1009, 818, 855, 3542, 293, 483, 746, 25380, 13], "temperature": 0.0, "avg_logprob": -0.1395582633443398, "compression_ratio": 1.7555555555555555, "no_speech_prob": 3.0414721550187096e-06}, {"id": 826, "seek": 385884, "start": 3870.7200000000003, "end": 3875.1800000000003, "text": " So in this case, it's going to show a few examples of users and movies is the actual", "tokens": [407, 294, 341, 1389, 11, 309, 311, 516, 281, 855, 257, 1326, 5110, 295, 5022, 293, 6233, 307, 264, 3539], "temperature": 0.0, "avg_logprob": -0.1395582633443398, "compression_ratio": 1.7555555555555555, "no_speech_prob": 3.0414721550187096e-06}, {"id": 827, "seek": 385884, "start": 3875.1800000000003, "end": 3877.76, "text": " rating that user gave that movie.", "tokens": [10990, 300, 4195, 2729, 300, 3169, 13], "temperature": 0.0, "avg_logprob": -0.1395582633443398, "compression_ratio": 1.7555555555555555, "no_speech_prob": 3.0414721550187096e-06}, {"id": 828, "seek": 385884, "start": 3877.76, "end": 3881.1600000000003, "text": " And here's the rating that the model predicted.", "tokens": [400, 510, 311, 264, 10990, 300, 264, 2316, 19147, 13], "temperature": 0.0, "avg_logprob": -0.1395582633443398, "compression_ratio": 1.7555555555555555, "no_speech_prob": 3.0414721550187096e-06}, {"id": 829, "seek": 385884, "start": 3881.1600000000003, "end": 3887.6000000000004, "text": " Okay, so apparently a lot of people on the forum are asking how I'm turning this notebook", "tokens": [1033, 11, 370, 7970, 257, 688, 295, 561, 322, 264, 17542, 366, 3365, 577, 286, 478, 6246, 341, 21060], "temperature": 0.0, "avg_logprob": -0.1395582633443398, "compression_ratio": 1.7555555555555555, "no_speech_prob": 3.0414721550187096e-06}, {"id": 830, "seek": 388760, "start": 3887.6, "end": 3891.2799999999997, "text": " into a presentation.", "tokens": [666, 257, 5860, 13], "temperature": 0.0, "avg_logprob": -0.09799450748371628, "compression_ratio": 1.7260869565217392, "no_speech_prob": 1.9508623154251836e-05}, {"id": 831, "seek": 388760, "start": 3891.2799999999997, "end": 3894.8399999999997, "text": " So I'll be delighted to show you because I'm very pleased that these people made this thing", "tokens": [407, 286, 603, 312, 18783, 281, 855, 291, 570, 286, 478, 588, 10587, 300, 613, 561, 1027, 341, 551], "temperature": 0.0, "avg_logprob": -0.09799450748371628, "compression_ratio": 1.7260869565217392, "no_speech_prob": 1.9508623154251836e-05}, {"id": 832, "seek": 388760, "start": 3894.8399999999997, "end": 3896.6, "text": " for free for us to use.", "tokens": [337, 1737, 337, 505, 281, 764, 13], "temperature": 0.0, "avg_logprob": -0.09799450748371628, "compression_ratio": 1.7260869565217392, "no_speech_prob": 1.9508623154251836e-05}, {"id": 833, "seek": 388760, "start": 3896.6, "end": 3899.7999999999997, "text": " It's called rise.", "tokens": [467, 311, 1219, 6272, 13], "temperature": 0.0, "avg_logprob": -0.09799450748371628, "compression_ratio": 1.7260869565217392, "no_speech_prob": 1.9508623154251836e-05}, {"id": 834, "seek": 388760, "start": 3899.7999999999997, "end": 3904.96, "text": " And all I do is it's a notebook extension.", "tokens": [400, 439, 286, 360, 307, 309, 311, 257, 21060, 10320, 13], "temperature": 0.0, "avg_logprob": -0.09799450748371628, "compression_ratio": 1.7260869565217392, "no_speech_prob": 1.9508623154251836e-05}, {"id": 835, "seek": 388760, "start": 3904.96, "end": 3909.7599999999998, "text": " And in your notebook, it gives you an extra little thing on the side where you say which", "tokens": [400, 294, 428, 21060, 11, 309, 2709, 291, 364, 2857, 707, 551, 322, 264, 1252, 689, 291, 584, 597], "temperature": 0.0, "avg_logprob": -0.09799450748371628, "compression_ratio": 1.7260869565217392, "no_speech_prob": 1.9508623154251836e-05}, {"id": 836, "seek": 388760, "start": 3909.7599999999998, "end": 3914.2799999999997, "text": " things are slides or which things are fragments and a fragment just been so this is a slide", "tokens": [721, 366, 9788, 420, 597, 721, 366, 29197, 293, 257, 26424, 445, 668, 370, 341, 307, 257, 4137], "temperature": 0.0, "avg_logprob": -0.09799450748371628, "compression_ratio": 1.7260869565217392, "no_speech_prob": 1.9508623154251836e-05}, {"id": 837, "seek": 388760, "start": 3914.2799999999997, "end": 3915.2799999999997, "text": " that's a fragment.", "tokens": [300, 311, 257, 26424, 13], "temperature": 0.0, "avg_logprob": -0.09799450748371628, "compression_ratio": 1.7260869565217392, "no_speech_prob": 1.9508623154251836e-05}, {"id": 838, "seek": 391528, "start": 3915.28, "end": 3921.4, "text": " So if I do that, you'll see it starts with a slide, and then the fragment gets added", "tokens": [407, 498, 286, 360, 300, 11, 291, 603, 536, 309, 3719, 365, 257, 4137, 11, 293, 550, 264, 26424, 2170, 3869], "temperature": 0.0, "avg_logprob": -0.16397185384491345, "compression_ratio": 1.4207650273224044, "no_speech_prob": 5.173377758183051e-06}, {"id": 839, "seek": 391528, "start": 3921.4, "end": 3922.4, "text": " in.", "tokens": [294, 13], "temperature": 0.0, "avg_logprob": -0.16397185384491345, "compression_ratio": 1.4207650273224044, "no_speech_prob": 5.173377758183051e-06}, {"id": 840, "seek": 391528, "start": 3922.4, "end": 3926.92, "text": " Yeah, that's about all there is to it.", "tokens": [865, 11, 300, 311, 466, 439, 456, 307, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.16397185384491345, "compression_ratio": 1.4207650273224044, "no_speech_prob": 5.173377758183051e-06}, {"id": 841, "seek": 391528, "start": 3926.92, "end": 3927.92, "text": " Actually, it's pretty great.", "tokens": [5135, 11, 309, 311, 1238, 869, 13], "temperature": 0.0, "avg_logprob": -0.16397185384491345, "compression_ratio": 1.4207650273224044, "no_speech_prob": 5.173377758183051e-06}, {"id": 842, "seek": 391528, "start": 3927.92, "end": 3928.92, "text": " And it's very well documented.", "tokens": [400, 309, 311, 588, 731, 23007, 13], "temperature": 0.0, "avg_logprob": -0.16397185384491345, "compression_ratio": 1.4207650273224044, "no_speech_prob": 5.173377758183051e-06}, {"id": 843, "seek": 391528, "start": 3928.92, "end": 3940.2000000000003, "text": " You know, I'll just mention like, what do I make with Jupyter notebooks?", "tokens": [509, 458, 11, 286, 603, 445, 2152, 411, 11, 437, 360, 286, 652, 365, 22125, 88, 391, 43782, 30], "temperature": 0.0, "avg_logprob": -0.16397185384491345, "compression_ratio": 1.4207650273224044, "no_speech_prob": 5.173377758183051e-06}, {"id": 844, "seek": 394020, "start": 3940.2, "end": 3947.4399999999996, "text": " This entire book was written entirely in Jupyter notebooks.", "tokens": [639, 2302, 1446, 390, 3720, 7696, 294, 22125, 88, 391, 43782, 13], "temperature": 0.0, "avg_logprob": -0.14411336526103402, "compression_ratio": 1.8, "no_speech_prob": 5.852254162164172e-06}, {"id": 845, "seek": 394020, "start": 3947.4399999999996, "end": 3949.48, "text": " Here are the notebooks.", "tokens": [1692, 366, 264, 43782, 13], "temperature": 0.0, "avg_logprob": -0.14411336526103402, "compression_ratio": 1.8, "no_speech_prob": 5.852254162164172e-06}, {"id": 846, "seek": 394020, "start": 3949.48, "end": 3956.2, "text": " So if you go to the fasti fastbook repo, you can read the whole book.", "tokens": [407, 498, 291, 352, 281, 264, 2370, 72, 2370, 2939, 49040, 11, 291, 393, 1401, 264, 1379, 1446, 13], "temperature": 0.0, "avg_logprob": -0.14411336526103402, "compression_ratio": 1.8, "no_speech_prob": 5.852254162164172e-06}, {"id": 847, "seek": 394020, "start": 3956.2, "end": 3961.74, "text": " And because it's all in notebooks, every time we say here's how you create this plot or", "tokens": [400, 570, 309, 311, 439, 294, 43782, 11, 633, 565, 321, 584, 510, 311, 577, 291, 1884, 341, 7542, 420], "temperature": 0.0, "avg_logprob": -0.14411336526103402, "compression_ratio": 1.8, "no_speech_prob": 5.852254162164172e-06}, {"id": 848, "seek": 394020, "start": 3961.74, "end": 3965.3599999999997, "text": " here's how you train this model, you can actually create the plot or you can actually train", "tokens": [510, 311, 577, 291, 3847, 341, 2316, 11, 291, 393, 767, 1884, 264, 7542, 420, 291, 393, 767, 3847], "temperature": 0.0, "avg_logprob": -0.14411336526103402, "compression_ratio": 1.8, "no_speech_prob": 5.852254162164172e-06}, {"id": 849, "seek": 396536, "start": 3965.36, "end": 3974.96, "text": " the model, because it's all notebooks.", "tokens": [264, 2316, 11, 570, 309, 311, 439, 43782, 13], "temperature": 0.0, "avg_logprob": -0.19924211502075195, "compression_ratio": 1.4285714285714286, "no_speech_prob": 4.494119821174536e-06}, {"id": 850, "seek": 396536, "start": 3974.96, "end": 3979.32, "text": " The entire fastai library is actually written in notebooks.", "tokens": [440, 2302, 2370, 1301, 6405, 307, 767, 3720, 294, 43782, 13], "temperature": 0.0, "avg_logprob": -0.19924211502075195, "compression_ratio": 1.4285714285714286, "no_speech_prob": 4.494119821174536e-06}, {"id": 851, "seek": 396536, "start": 3979.32, "end": 3987.52, "text": " So you might be surprised to discover that if you go to fastai slash fastai that the source", "tokens": [407, 291, 1062, 312, 6100, 281, 4411, 300, 498, 291, 352, 281, 2370, 1301, 17330, 2370, 1301, 300, 264, 4009], "temperature": 0.0, "avg_logprob": -0.19924211502075195, "compression_ratio": 1.4285714285714286, "no_speech_prob": 4.494119821174536e-06}, {"id": 852, "seek": 398752, "start": 3987.52, "end": 3998.88, "text": " code for the entire library is notebooks.", "tokens": [3089, 337, 264, 2302, 6405, 307, 43782, 13], "temperature": 0.0, "avg_logprob": -0.2063570160796677, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.014371708966792e-06}, {"id": 853, "seek": 398752, "start": 3998.88, "end": 4004.04, "text": " And so the nice thing about this is that, you know, the source code for the fastai library", "tokens": [400, 370, 264, 1481, 551, 466, 341, 307, 300, 11, 291, 458, 11, 264, 4009, 3089, 337, 264, 2370, 1301, 6405], "temperature": 0.0, "avg_logprob": -0.2063570160796677, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.014371708966792e-06}, {"id": 854, "seek": 398752, "start": 4004.04, "end": 4011.44, "text": " has actual pictures of the actual things that we're building, for example.", "tokens": [575, 3539, 5242, 295, 264, 3539, 721, 300, 321, 434, 2390, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.2063570160796677, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.014371708966792e-06}, {"id": 855, "seek": 398752, "start": 4011.44, "end": 4014.0, "text": " What else have we done with notebooks?", "tokens": [708, 1646, 362, 321, 1096, 365, 43782, 30], "temperature": 0.0, "avg_logprob": -0.2063570160796677, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.014371708966792e-06}, {"id": 856, "seek": 398752, "start": 4014.0, "end": 4017.0, "text": " Oh, blogging.", "tokens": [876, 11, 6968, 3249, 13], "temperature": 0.0, "avg_logprob": -0.2063570160796677, "compression_ratio": 1.5294117647058822, "no_speech_prob": 5.014371708966792e-06}, {"id": 857, "seek": 401700, "start": 4017.0, "end": 4024.36, "text": " I love blogging with notebooks, because when I want to explain something, I just write", "tokens": [286, 959, 6968, 3249, 365, 43782, 11, 570, 562, 286, 528, 281, 2903, 746, 11, 286, 445, 2464], "temperature": 0.0, "avg_logprob": -0.09769269078969955, "compression_ratio": 1.5588235294117647, "no_speech_prob": 5.254724783299025e-06}, {"id": 858, "seek": 401700, "start": 4024.36, "end": 4033.2, "text": " the code and you can just see the outputs and it all just works.", "tokens": [264, 3089, 293, 291, 393, 445, 536, 264, 23930, 293, 309, 439, 445, 1985, 13], "temperature": 0.0, "avg_logprob": -0.09769269078969955, "compression_ratio": 1.5588235294117647, "no_speech_prob": 5.254724783299025e-06}, {"id": 859, "seek": 401700, "start": 4033.2, "end": 4037.88, "text": " Another thing you might be surprised by is all of our tests and continuous integration", "tokens": [3996, 551, 291, 1062, 312, 6100, 538, 307, 439, 295, 527, 6921, 293, 10957, 10980], "temperature": 0.0, "avg_logprob": -0.09769269078969955, "compression_ratio": 1.5588235294117647, "no_speech_prob": 5.254724783299025e-06}, {"id": 860, "seek": 401700, "start": 4037.88, "end": 4040.28, "text": " are also all in notebooks.", "tokens": [366, 611, 439, 294, 43782, 13], "temperature": 0.0, "avg_logprob": -0.09769269078969955, "compression_ratio": 1.5588235294117647, "no_speech_prob": 5.254724783299025e-06}, {"id": 861, "seek": 404028, "start": 4040.28, "end": 4055.92, "text": " So every time we change one of our notebooks, hundreds of tests get run automatically in", "tokens": [407, 633, 565, 321, 1319, 472, 295, 527, 43782, 11, 6779, 295, 6921, 483, 1190, 6772, 294], "temperature": 0.0, "avg_logprob": -0.21607108035330044, "compression_ratio": 1.490566037735849, "no_speech_prob": 3.0410647013923153e-06}, {"id": 862, "seek": 404028, "start": 4055.92, "end": 4060.88, "text": " parallel and if there's any issues, we will find out about it.", "tokens": [8952, 293, 498, 456, 311, 604, 2663, 11, 321, 486, 915, 484, 466, 309, 13], "temperature": 0.0, "avg_logprob": -0.21607108035330044, "compression_ratio": 1.490566037735849, "no_speech_prob": 3.0410647013923153e-06}, {"id": 863, "seek": 404028, "start": 4060.88, "end": 4068.84, "text": " So yeah, notebooks are great and rise is a really nice way to do slides in notebooks.", "tokens": [407, 1338, 11, 43782, 366, 869, 293, 6272, 307, 257, 534, 1481, 636, 281, 360, 9788, 294, 43782, 13], "temperature": 0.0, "avg_logprob": -0.21607108035330044, "compression_ratio": 1.490566037735849, "no_speech_prob": 3.0410647013923153e-06}, {"id": 864, "seek": 406884, "start": 4068.84, "end": 4075.2000000000003, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.1486786297389439, "compression_ratio": 1.4285714285714286, "no_speech_prob": 1.3385028069023974e-05}, {"id": 865, "seek": 406884, "start": 4075.2000000000003, "end": 4080.76, "text": " So what can deep learning do at present?", "tokens": [407, 437, 393, 2452, 2539, 360, 412, 1974, 30], "temperature": 0.0, "avg_logprob": -0.1486786297389439, "compression_ratio": 1.4285714285714286, "no_speech_prob": 1.3385028069023974e-05}, {"id": 866, "seek": 406884, "start": 4080.76, "end": 4086.2400000000002, "text": " We're still scratching the tip of the iceberg, even though it's a pretty well-hyped, heavily", "tokens": [492, 434, 920, 29699, 264, 4125, 295, 264, 38880, 11, 754, 1673, 309, 311, 257, 1238, 731, 12, 3495, 3452, 11, 10950], "temperature": 0.0, "avg_logprob": -0.1486786297389439, "compression_ratio": 1.4285714285714286, "no_speech_prob": 1.3385028069023974e-05}, {"id": 867, "seek": 406884, "start": 4086.2400000000002, "end": 4088.2000000000003, "text": " marketed technology at this point.", "tokens": [49089, 2899, 412, 341, 935, 13], "temperature": 0.0, "avg_logprob": -0.1486786297389439, "compression_ratio": 1.4285714285714286, "no_speech_prob": 1.3385028069023974e-05}, {"id": 868, "seek": 406884, "start": 4088.2000000000003, "end": 4098.68, "text": " When we started in 2014 or so, not many people were talking about deep learning and really", "tokens": [1133, 321, 1409, 294, 8227, 420, 370, 11, 406, 867, 561, 645, 1417, 466, 2452, 2539, 293, 534], "temperature": 0.0, "avg_logprob": -0.1486786297389439, "compression_ratio": 1.4285714285714286, "no_speech_prob": 1.3385028069023974e-05}, {"id": 869, "seek": 409868, "start": 4098.68, "end": 4101.240000000001, "text": " there was no accessible way to get started with it.", "tokens": [456, 390, 572, 9515, 636, 281, 483, 1409, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.1592113176981608, "compression_ratio": 1.5762081784386617, "no_speech_prob": 1.202650491904933e-05}, {"id": 870, "seek": 409868, "start": 4101.240000000001, "end": 4106.4800000000005, "text": " There were no pre-trained models you could download.", "tokens": [821, 645, 572, 659, 12, 17227, 2001, 5245, 291, 727, 5484, 13], "temperature": 0.0, "avg_logprob": -0.1592113176981608, "compression_ratio": 1.5762081784386617, "no_speech_prob": 1.202650491904933e-05}, {"id": 871, "seek": 409868, "start": 4106.4800000000005, "end": 4111.08, "text": " There was just starting to appear some of the first open source software that would", "tokens": [821, 390, 445, 2891, 281, 4204, 512, 295, 264, 700, 1269, 4009, 4722, 300, 576], "temperature": 0.0, "avg_logprob": -0.1592113176981608, "compression_ratio": 1.5762081784386617, "no_speech_prob": 1.202650491904933e-05}, {"id": 872, "seek": 409868, "start": 4111.08, "end": 4112.08, "text": " run on GPUs.", "tokens": [1190, 322, 18407, 82, 13], "temperature": 0.0, "avg_logprob": -0.1592113176981608, "compression_ratio": 1.5762081784386617, "no_speech_prob": 1.202650491904933e-05}, {"id": 873, "seek": 409868, "start": 4112.08, "end": 4117.12, "text": " But yeah, I mean, despite the fact that today there's a lot of people talking about deep", "tokens": [583, 1338, 11, 286, 914, 11, 7228, 264, 1186, 300, 965, 456, 311, 257, 688, 295, 561, 1417, 466, 2452], "temperature": 0.0, "avg_logprob": -0.1592113176981608, "compression_ratio": 1.5762081784386617, "no_speech_prob": 1.202650491904933e-05}, {"id": 874, "seek": 409868, "start": 4117.12, "end": 4119.740000000001, "text": " learning, we're just scratching the surface.", "tokens": [2539, 11, 321, 434, 445, 29699, 264, 3753, 13], "temperature": 0.0, "avg_logprob": -0.1592113176981608, "compression_ratio": 1.5762081784386617, "no_speech_prob": 1.202650491904933e-05}, {"id": 875, "seek": 409868, "start": 4119.740000000001, "end": 4124.42, "text": " Every time pretty much somebody says to me, I work in domain X and I thought I might try", "tokens": [2048, 565, 1238, 709, 2618, 1619, 281, 385, 11, 286, 589, 294, 9274, 1783, 293, 286, 1194, 286, 1062, 853], "temperature": 0.0, "avg_logprob": -0.1592113176981608, "compression_ratio": 1.5762081784386617, "no_speech_prob": 1.202650491904933e-05}, {"id": 876, "seek": 412442, "start": 4124.42, "end": 4129.28, "text": " deep learning out to see if it can help and I see them a few months later and I say, how", "tokens": [2452, 2539, 484, 281, 536, 498, 309, 393, 854, 293, 286, 536, 552, 257, 1326, 2493, 1780, 293, 286, 584, 11, 577], "temperature": 0.0, "avg_logprob": -0.1251197338104248, "compression_ratio": 1.78714859437751, "no_speech_prob": 3.1372082958114333e-06}, {"id": 877, "seek": 412442, "start": 4129.28, "end": 4130.28, "text": " did it go?", "tokens": [630, 309, 352, 30], "temperature": 0.0, "avg_logprob": -0.1251197338104248, "compression_ratio": 1.78714859437751, "no_speech_prob": 3.1372082958114333e-06}, {"id": 878, "seek": 412442, "start": 4130.28, "end": 4134.4, "text": " They nearly always say, wow, we just broke the state of the art results in our field.", "tokens": [814, 6217, 1009, 584, 11, 6076, 11, 321, 445, 6902, 264, 1785, 295, 264, 1523, 3542, 294, 527, 2519, 13], "temperature": 0.0, "avg_logprob": -0.1251197338104248, "compression_ratio": 1.78714859437751, "no_speech_prob": 3.1372082958114333e-06}, {"id": 879, "seek": 412442, "start": 4134.4, "end": 4138.68, "text": " So when I say these are things that it's currently state of the art for, these are kind of the", "tokens": [407, 562, 286, 584, 613, 366, 721, 300, 309, 311, 4362, 1785, 295, 264, 1523, 337, 11, 613, 366, 733, 295, 264], "temperature": 0.0, "avg_logprob": -0.1251197338104248, "compression_ratio": 1.78714859437751, "no_speech_prob": 3.1372082958114333e-06}, {"id": 880, "seek": 412442, "start": 4138.68, "end": 4142.68, "text": " ones that people have tried so far, but still most things haven't been tried.", "tokens": [2306, 300, 561, 362, 3031, 370, 1400, 11, 457, 920, 881, 721, 2378, 380, 668, 3031, 13], "temperature": 0.0, "avg_logprob": -0.1251197338104248, "compression_ratio": 1.78714859437751, "no_speech_prob": 3.1372082958114333e-06}, {"id": 881, "seek": 412442, "start": 4142.68, "end": 4149.76, "text": " So in NLP, deep learning is a state of the art method in all these kinds of things and", "tokens": [407, 294, 426, 45196, 11, 2452, 2539, 307, 257, 1785, 295, 264, 1523, 3170, 294, 439, 613, 3685, 295, 721, 293], "temperature": 0.0, "avg_logprob": -0.1251197338104248, "compression_ratio": 1.78714859437751, "no_speech_prob": 3.1372082958114333e-06}, {"id": 882, "seek": 414976, "start": 4149.76, "end": 4165.16, "text": " a lot more computer vision, medicine, biology, recommendation systems, playing games, robotics.", "tokens": [257, 688, 544, 3820, 5201, 11, 7195, 11, 14956, 11, 11879, 3652, 11, 2433, 2813, 11, 34145, 13], "temperature": 0.0, "avg_logprob": -0.17222060797349462, "compression_ratio": 1.4206896551724137, "no_speech_prob": 1.1299745892756619e-05}, {"id": 883, "seek": 414976, "start": 4165.16, "end": 4170.56, "text": " I mean, it's just, I've tried elsewhere to make bigger lists and I just end up with pages", "tokens": [286, 914, 11, 309, 311, 445, 11, 286, 600, 3031, 14517, 281, 652, 3801, 14511, 293, 286, 445, 917, 493, 365, 7183], "temperature": 0.0, "avg_logprob": -0.17222060797349462, "compression_ratio": 1.4206896551724137, "no_speech_prob": 1.1299745892756619e-05}, {"id": 884, "seek": 414976, "start": 4170.56, "end": 4171.96, "text": " and pages and pages.", "tokens": [293, 7183, 293, 7183, 13], "temperature": 0.0, "avg_logprob": -0.17222060797349462, "compression_ratio": 1.4206896551724137, "no_speech_prob": 1.1299745892756619e-05}, {"id": 885, "seek": 417196, "start": 4171.96, "end": 4186.32, "text": " So generally speaking, if it's something that a human can do reasonably quickly, like look", "tokens": [407, 5101, 4124, 11, 498, 309, 311, 746, 300, 257, 1952, 393, 360, 23551, 2661, 11, 411, 574], "temperature": 0.0, "avg_logprob": -0.12594981691730556, "compression_ratio": 1.6071428571428572, "no_speech_prob": 4.288812306185719e-06}, {"id": 886, "seek": 417196, "start": 4186.32, "end": 4191.6, "text": " at a go board and decide if it looks like a good go board or not, even if it needs to", "tokens": [412, 257, 352, 3150, 293, 4536, 498, 309, 1542, 411, 257, 665, 352, 3150, 420, 406, 11, 754, 498, 309, 2203, 281], "temperature": 0.0, "avg_logprob": -0.12594981691730556, "compression_ratio": 1.6071428571428572, "no_speech_prob": 4.288812306185719e-06}, {"id": 887, "seek": 417196, "start": 4191.6, "end": 4198.52, "text": " be an expert human, then that's probably something that deep learning will be pretty good at.", "tokens": [312, 364, 5844, 1952, 11, 550, 300, 311, 1391, 746, 300, 2452, 2539, 486, 312, 1238, 665, 412, 13], "temperature": 0.0, "avg_logprob": -0.12594981691730556, "compression_ratio": 1.6071428571428572, "no_speech_prob": 4.288812306185719e-06}, {"id": 888, "seek": 419852, "start": 4198.52, "end": 4203.76, "text": " If it's something that takes a lot of logical thought processes over an extended period", "tokens": [759, 309, 311, 746, 300, 2516, 257, 688, 295, 14978, 1194, 7555, 670, 364, 10913, 2896], "temperature": 0.0, "avg_logprob": -0.14347704089417748, "compression_ratio": 1.5932203389830508, "no_speech_prob": 1.4062066838960163e-05}, {"id": 889, "seek": 419852, "start": 4203.76, "end": 4211.8, "text": " of time, particularly if it's not based on much data, maybe not, like who's going to", "tokens": [295, 565, 11, 4098, 498, 309, 311, 406, 2361, 322, 709, 1412, 11, 1310, 406, 11, 411, 567, 311, 516, 281], "temperature": 0.0, "avg_logprob": -0.14347704089417748, "compression_ratio": 1.5932203389830508, "no_speech_prob": 1.4062066838960163e-05}, {"id": 890, "seek": 419852, "start": 4211.8, "end": 4214.4400000000005, "text": " win the next election or something like that.", "tokens": [1942, 264, 958, 6618, 420, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.14347704089417748, "compression_ratio": 1.5932203389830508, "no_speech_prob": 1.4062066838960163e-05}, {"id": 891, "seek": 419852, "start": 4214.4400000000005, "end": 4218.56, "text": " That'd be kind of broadly how I would try to decide is your thing useful for deep, good", "tokens": [663, 1116, 312, 733, 295, 19511, 577, 286, 576, 853, 281, 4536, 307, 428, 551, 4420, 337, 2452, 11, 665], "temperature": 0.0, "avg_logprob": -0.14347704089417748, "compression_ratio": 1.5932203389830508, "no_speech_prob": 1.4062066838960163e-05}, {"id": 892, "seek": 419852, "start": 4218.56, "end": 4222.0, "text": " for deep learning or not.", "tokens": [337, 2452, 2539, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.14347704089417748, "compression_ratio": 1.5932203389830508, "no_speech_prob": 1.4062066838960163e-05}, {"id": 893, "seek": 419852, "start": 4222.0, "end": 4225.120000000001, "text": " It's been a long time to get to this point.", "tokens": [467, 311, 668, 257, 938, 565, 281, 483, 281, 341, 935, 13], "temperature": 0.0, "avg_logprob": -0.14347704089417748, "compression_ratio": 1.5932203389830508, "no_speech_prob": 1.4062066838960163e-05}, {"id": 894, "seek": 422512, "start": 4225.12, "end": 4232.08, "text": " Yes, deep learning is incredibly powerful now, but it's taken decades of work.", "tokens": [1079, 11, 2452, 2539, 307, 6252, 4005, 586, 11, 457, 309, 311, 2726, 7878, 295, 589, 13], "temperature": 0.0, "avg_logprob": -0.1287271783158586, "compression_ratio": 1.5078534031413613, "no_speech_prob": 1.1124071534140967e-05}, {"id": 895, "seek": 422512, "start": 4232.08, "end": 4233.4, "text": " This was the first neural network.", "tokens": [639, 390, 264, 700, 18161, 3209, 13], "temperature": 0.0, "avg_logprob": -0.1287271783158586, "compression_ratio": 1.5078534031413613, "no_speech_prob": 1.1124071534140967e-05}, {"id": 896, "seek": 422512, "start": 4233.4, "end": 4236.5599999999995, "text": " Remember neural networks are the basis of deep learning.", "tokens": [5459, 18161, 9590, 366, 264, 5143, 295, 2452, 2539, 13], "temperature": 0.0, "avg_logprob": -0.1287271783158586, "compression_ratio": 1.5078534031413613, "no_speech_prob": 1.1124071534140967e-05}, {"id": 897, "seek": 422512, "start": 4236.5599999999995, "end": 4241.4, "text": " So this was back in 1957.", "tokens": [407, 341, 390, 646, 294, 46256, 13], "temperature": 0.0, "avg_logprob": -0.1287271783158586, "compression_ratio": 1.5078534031413613, "no_speech_prob": 1.1124071534140967e-05}, {"id": 898, "seek": 422512, "start": 4241.4, "end": 4251.96, "text": " The basic ideas have not changed much at all, but we do have things like GPUs now and solid", "tokens": [440, 3875, 3487, 362, 406, 3105, 709, 412, 439, 11, 457, 321, 360, 362, 721, 411, 18407, 82, 586, 293, 5100], "temperature": 0.0, "avg_logprob": -0.1287271783158586, "compression_ratio": 1.5078534031413613, "no_speech_prob": 1.1124071534140967e-05}, {"id": 899, "seek": 425196, "start": 4251.96, "end": 4255.2, "text": " state drives and stuff like that.", "tokens": [1785, 11754, 293, 1507, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.19255541265010834, "compression_ratio": 1.4047619047619047, "no_speech_prob": 1.1188742519152584e-06}, {"id": 900, "seek": 425196, "start": 4255.2, "end": 4260.16, "text": " Of course, much more data just is available now.", "tokens": [2720, 1164, 11, 709, 544, 1412, 445, 307, 2435, 586, 13], "temperature": 0.0, "avg_logprob": -0.19255541265010834, "compression_ratio": 1.4047619047619047, "no_speech_prob": 1.1188742519152584e-06}, {"id": 901, "seek": 425196, "start": 4260.16, "end": 4271.4800000000005, "text": " This has been decades of really hard work by a lot of people to get to this point.", "tokens": [639, 575, 668, 7878, 295, 534, 1152, 589, 538, 257, 688, 295, 561, 281, 483, 281, 341, 935, 13], "temperature": 0.0, "avg_logprob": -0.19255541265010834, "compression_ratio": 1.4047619047619047, "no_speech_prob": 1.1188742519152584e-06}, {"id": 902, "seek": 425196, "start": 4271.4800000000005, "end": 4281.76, "text": " Let's take a step back and talk about what's going on in these models.", "tokens": [961, 311, 747, 257, 1823, 646, 293, 751, 466, 437, 311, 516, 322, 294, 613, 5245, 13], "temperature": 0.0, "avg_logprob": -0.19255541265010834, "compression_ratio": 1.4047619047619047, "no_speech_prob": 1.1188742519152584e-06}, {"id": 903, "seek": 428176, "start": 4281.76, "end": 4289.08, "text": " I'm going to describe the basic idea of machine learning largely as it was described by Arthur", "tokens": [286, 478, 516, 281, 6786, 264, 3875, 1558, 295, 3479, 2539, 11611, 382, 309, 390, 7619, 538, 19624], "temperature": 0.0, "avg_logprob": -0.12359797752509682, "compression_ratio": 1.4294871794871795, "no_speech_prob": 9.817847058002371e-06}, {"id": 904, "seek": 428176, "start": 4289.08, "end": 4294.68, "text": " Samuel in the late 50s when it was invented.", "tokens": [23036, 294, 264, 3469, 2625, 82, 562, 309, 390, 14479, 13], "temperature": 0.0, "avg_logprob": -0.12359797752509682, "compression_ratio": 1.4294871794871795, "no_speech_prob": 9.817847058002371e-06}, {"id": 905, "seek": 428176, "start": 4294.68, "end": 4302.24, "text": " I'm going to kind of do it with these graphs, which by the way, you might find fun.", "tokens": [286, 478, 516, 281, 733, 295, 360, 309, 365, 613, 24877, 11, 597, 538, 264, 636, 11, 291, 1062, 915, 1019, 13], "temperature": 0.0, "avg_logprob": -0.12359797752509682, "compression_ratio": 1.4294871794871795, "no_speech_prob": 9.817847058002371e-06}, {"id": 906, "seek": 430224, "start": 4302.24, "end": 4314.24, "text": " These graphs themselves created with Jupyter notebooks.", "tokens": [1981, 24877, 2969, 2942, 365, 22125, 88, 391, 43782, 13], "temperature": 0.0, "avg_logprob": -0.3203430691280881, "compression_ratio": 1.5075376884422111, "no_speech_prob": 3.137902240268886e-06}, {"id": 907, "seek": 430224, "start": 4314.24, "end": 4317.679999999999, "text": " These are graph Viz descriptions that are going to get turned into these.", "tokens": [1981, 366, 4295, 691, 590, 24406, 300, 366, 516, 281, 483, 3574, 666, 613, 13], "temperature": 0.0, "avg_logprob": -0.3203430691280881, "compression_ratio": 1.5075376884422111, "no_speech_prob": 3.137902240268886e-06}, {"id": 908, "seek": 430224, "start": 4317.679999999999, "end": 4324.16, "text": " So this is a little sneak peek behind the scenes for you.", "tokens": [407, 341, 307, 257, 707, 13164, 19604, 2261, 264, 8026, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.3203430691280881, "compression_ratio": 1.5075376884422111, "no_speech_prob": 3.137902240268886e-06}, {"id": 909, "seek": 430224, "start": 4324.16, "end": 4329.96, "text": " Let's start with a graph of what does a normal program look like in the pre-deep learning", "tokens": [961, 311, 722, 365, 257, 4295, 295, 437, 775, 257, 2710, 1461, 574, 411, 294, 264, 659, 12, 38422, 2539], "temperature": 0.0, "avg_logprob": -0.3203430691280881, "compression_ratio": 1.5075376884422111, "no_speech_prob": 3.137902240268886e-06}, {"id": 910, "seek": 430224, "start": 4329.96, "end": 4331.4, "text": " machine learning days?", "tokens": [3479, 2539, 1708, 30], "temperature": 0.0, "avg_logprob": -0.3203430691280881, "compression_ratio": 1.5075376884422111, "no_speech_prob": 3.137902240268886e-06}, {"id": 911, "seek": 433140, "start": 4331.4, "end": 4335.12, "text": " You still have inputs and you still have results, right?", "tokens": [509, 920, 362, 15743, 293, 291, 920, 362, 3542, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.15760144626393038, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.8628259567776695e-05}, {"id": 912, "seek": 433140, "start": 4335.12, "end": 4339.4, "text": " And then you code a program in the middle, which is a bunch of conditionals and loops", "tokens": [400, 550, 291, 3089, 257, 1461, 294, 264, 2808, 11, 597, 307, 257, 3840, 295, 4188, 1124, 293, 16121], "temperature": 0.0, "avg_logprob": -0.15760144626393038, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.8628259567776695e-05}, {"id": 913, "seek": 433140, "start": 4339.4, "end": 4344.32, "text": " and setting variables and blah, blah, blah.", "tokens": [293, 3287, 9102, 293, 12288, 11, 12288, 11, 12288, 13], "temperature": 0.0, "avg_logprob": -0.15760144626393038, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.8628259567776695e-05}, {"id": 914, "seek": 433140, "start": 4344.32, "end": 4355.5599999999995, "text": " A machine learning model doesn't look that different, but the program has been replaced", "tokens": [316, 3479, 2539, 2316, 1177, 380, 574, 300, 819, 11, 457, 264, 1461, 575, 668, 10772], "temperature": 0.0, "avg_logprob": -0.15760144626393038, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.8628259567776695e-05}, {"id": 915, "seek": 433140, "start": 4355.5599999999995, "end": 4357.719999999999, "text": " with something called a model.", "tokens": [365, 746, 1219, 257, 2316, 13], "temperature": 0.0, "avg_logprob": -0.15760144626393038, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.8628259567776695e-05}, {"id": 916, "seek": 433140, "start": 4357.719999999999, "end": 4359.639999999999, "text": " We don't just have inputs now.", "tokens": [492, 500, 380, 445, 362, 15743, 586, 13], "temperature": 0.0, "avg_logprob": -0.15760144626393038, "compression_ratio": 1.6153846153846154, "no_speech_prob": 1.8628259567776695e-05}, {"id": 917, "seek": 435964, "start": 4359.64, "end": 4363.76, "text": " We now also have weights, which are also called parameters.", "tokens": [492, 586, 611, 362, 17443, 11, 597, 366, 611, 1219, 9834, 13], "temperature": 0.0, "avg_logprob": -0.11915977651422674, "compression_ratio": 1.8854625550660793, "no_speech_prob": 9.36803098738892e-06}, {"id": 918, "seek": 435964, "start": 4363.76, "end": 4369.68, "text": " And the key thing is this, the model is not any more a bunch of conditionals and loops", "tokens": [400, 264, 2141, 551, 307, 341, 11, 264, 2316, 307, 406, 604, 544, 257, 3840, 295, 4188, 1124, 293, 16121], "temperature": 0.0, "avg_logprob": -0.11915977651422674, "compression_ratio": 1.8854625550660793, "no_speech_prob": 9.36803098738892e-06}, {"id": 919, "seek": 435964, "start": 4369.68, "end": 4371.08, "text": " and things.", "tokens": [293, 721, 13], "temperature": 0.0, "avg_logprob": -0.11915977651422674, "compression_ratio": 1.8854625550660793, "no_speech_prob": 9.36803098738892e-06}, {"id": 920, "seek": 435964, "start": 4371.08, "end": 4372.8, "text": " It's a mathematical function.", "tokens": [467, 311, 257, 18894, 2445, 13], "temperature": 0.0, "avg_logprob": -0.11915977651422674, "compression_ratio": 1.8854625550660793, "no_speech_prob": 9.36803098738892e-06}, {"id": 921, "seek": 435964, "start": 4372.8, "end": 4378.76, "text": " In the case of a neural network, it's a mathematical function that takes the inputs, multiplies", "tokens": [682, 264, 1389, 295, 257, 18161, 3209, 11, 309, 311, 257, 18894, 2445, 300, 2516, 264, 15743, 11, 12788, 530], "temperature": 0.0, "avg_logprob": -0.11915977651422674, "compression_ratio": 1.8854625550660793, "no_speech_prob": 9.36803098738892e-06}, {"id": 922, "seek": 435964, "start": 4378.76, "end": 4383.280000000001, "text": " them together by the weights, by one set of weights and adds them up.", "tokens": [552, 1214, 538, 264, 17443, 11, 538, 472, 992, 295, 17443, 293, 10860, 552, 493, 13], "temperature": 0.0, "avg_logprob": -0.11915977651422674, "compression_ratio": 1.8854625550660793, "no_speech_prob": 9.36803098738892e-06}, {"id": 923, "seek": 435964, "start": 4383.280000000001, "end": 4386.04, "text": " And then it does that again for a second set of weights and adds them up.", "tokens": [400, 550, 309, 775, 300, 797, 337, 257, 1150, 992, 295, 17443, 293, 10860, 552, 493, 13], "temperature": 0.0, "avg_logprob": -0.11915977651422674, "compression_ratio": 1.8854625550660793, "no_speech_prob": 9.36803098738892e-06}, {"id": 924, "seek": 438604, "start": 4386.04, "end": 4389.76, "text": " It does it again for a third set of weights and adds them up and so forth.", "tokens": [467, 775, 309, 797, 337, 257, 2636, 992, 295, 17443, 293, 10860, 552, 493, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.201934814453125, "compression_ratio": 1.736220472440945, "no_speech_prob": 2.190613031416433e-06}, {"id": 925, "seek": 438604, "start": 4389.76, "end": 4394.92, "text": " It then takes all the negative numbers and replaces them with zeros.", "tokens": [467, 550, 2516, 439, 264, 3671, 3547, 293, 46734, 552, 365, 35193, 13], "temperature": 0.0, "avg_logprob": -0.201934814453125, "compression_ratio": 1.736220472440945, "no_speech_prob": 2.190613031416433e-06}, {"id": 926, "seek": 438604, "start": 4394.92, "end": 4397.72, "text": " And then it takes those as inputs to a next layer.", "tokens": [400, 550, 309, 2516, 729, 382, 15743, 281, 257, 958, 4583, 13], "temperature": 0.0, "avg_logprob": -0.201934814453125, "compression_ratio": 1.736220472440945, "no_speech_prob": 2.190613031416433e-06}, {"id": 927, "seek": 438604, "start": 4397.72, "end": 4399.72, "text": " It does the same thing.", "tokens": [467, 775, 264, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.201934814453125, "compression_ratio": 1.736220472440945, "no_speech_prob": 2.190613031416433e-06}, {"id": 928, "seek": 438604, "start": 4399.72, "end": 4402.08, "text": " Multiplies them a bunch of times and adds them up.", "tokens": [29238, 564, 530, 552, 257, 3840, 295, 1413, 293, 10860, 552, 493, 13], "temperature": 0.0, "avg_logprob": -0.201934814453125, "compression_ratio": 1.736220472440945, "no_speech_prob": 2.190613031416433e-06}, {"id": 929, "seek": 438604, "start": 4402.08, "end": 4404.12, "text": " And it does that a few times.", "tokens": [400, 309, 775, 300, 257, 1326, 1413, 13], "temperature": 0.0, "avg_logprob": -0.201934814453125, "compression_ratio": 1.736220472440945, "no_speech_prob": 2.190613031416433e-06}, {"id": 930, "seek": 438604, "start": 4404.12, "end": 4407.04, "text": " And that's called a neural network.", "tokens": [400, 300, 311, 1219, 257, 18161, 3209, 13], "temperature": 0.0, "avg_logprob": -0.201934814453125, "compression_ratio": 1.736220472440945, "no_speech_prob": 2.190613031416433e-06}, {"id": 931, "seek": 438604, "start": 4407.04, "end": 4413.8, "text": " Now the model therefore is not going to do anything useful and this leaves weights very", "tokens": [823, 264, 2316, 4412, 307, 406, 516, 281, 360, 1340, 4420, 293, 341, 5510, 17443, 588], "temperature": 0.0, "avg_logprob": -0.201934814453125, "compression_ratio": 1.736220472440945, "no_speech_prob": 2.190613031416433e-06}, {"id": 932, "seek": 438604, "start": 4413.8, "end": 4414.8, "text": " carefully chosen.", "tokens": [7500, 8614, 13], "temperature": 0.0, "avg_logprob": -0.201934814453125, "compression_ratio": 1.736220472440945, "no_speech_prob": 2.190613031416433e-06}, {"id": 933, "seek": 441480, "start": 4414.8, "end": 4422.56, "text": " And so the way it works is that we actually start out with these weights as being random.", "tokens": [400, 370, 264, 636, 309, 1985, 307, 300, 321, 767, 722, 484, 365, 613, 17443, 382, 885, 4974, 13], "temperature": 0.0, "avg_logprob": -0.10225714336742055, "compression_ratio": 1.5767441860465117, "no_speech_prob": 5.593999048869591e-06}, {"id": 934, "seek": 441480, "start": 4422.56, "end": 4432.4800000000005, "text": " So initially this thing doesn't do anything useful at all.", "tokens": [407, 9105, 341, 551, 1177, 380, 360, 1340, 4420, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.10225714336742055, "compression_ratio": 1.5767441860465117, "no_speech_prob": 5.593999048869591e-06}, {"id": 935, "seek": 441480, "start": 4432.4800000000005, "end": 4438.12, "text": " So what we do, the way Arthur Samuel described it back in the late 50s, the inventor of machine", "tokens": [407, 437, 321, 360, 11, 264, 636, 19624, 23036, 7619, 309, 646, 294, 264, 3469, 2625, 82, 11, 264, 41593, 295, 3479], "temperature": 0.0, "avg_logprob": -0.10225714336742055, "compression_ratio": 1.5767441860465117, "no_speech_prob": 5.593999048869591e-06}, {"id": 936, "seek": 441480, "start": 4438.12, "end": 4442.88, "text": " learning, is he said, okay, let's take the inputs and the weights, put them through our", "tokens": [2539, 11, 307, 415, 848, 11, 1392, 11, 718, 311, 747, 264, 15743, 293, 264, 17443, 11, 829, 552, 807, 527], "temperature": 0.0, "avg_logprob": -0.10225714336742055, "compression_ratio": 1.5767441860465117, "no_speech_prob": 5.593999048869591e-06}, {"id": 937, "seek": 441480, "start": 4442.88, "end": 4443.88, "text": " model.", "tokens": [2316, 13], "temperature": 0.0, "avg_logprob": -0.10225714336742055, "compression_ratio": 1.5767441860465117, "no_speech_prob": 5.593999048869591e-06}, {"id": 938, "seek": 444388, "start": 4443.88, "end": 4449.64, "text": " And the thing particularly about neural networks is just like whatever model you like.", "tokens": [400, 264, 551, 4098, 466, 18161, 9590, 307, 445, 411, 2035, 2316, 291, 411, 13], "temperature": 0.0, "avg_logprob": -0.19041615780268875, "compression_ratio": 1.5850622406639003, "no_speech_prob": 3.0894289011484943e-06}, {"id": 939, "seek": 444388, "start": 4449.64, "end": 4454.36, "text": " Get the results and then let's decide how good they are.", "tokens": [3240, 264, 3542, 293, 550, 718, 311, 4536, 577, 665, 436, 366, 13], "temperature": 0.0, "avg_logprob": -0.19041615780268875, "compression_ratio": 1.5850622406639003, "no_speech_prob": 3.0894289011484943e-06}, {"id": 940, "seek": 444388, "start": 4454.36, "end": 4455.36, "text": " Right?", "tokens": [1779, 30], "temperature": 0.0, "avg_logprob": -0.19041615780268875, "compression_ratio": 1.5850622406639003, "no_speech_prob": 3.0894289011484943e-06}, {"id": 941, "seek": 444388, "start": 4455.36, "end": 4460.32, "text": " So if for example, we're trying to decide, is this a picture of a bird?", "tokens": [407, 498, 337, 1365, 11, 321, 434, 1382, 281, 4536, 11, 307, 341, 257, 3036, 295, 257, 5255, 30], "temperature": 0.0, "avg_logprob": -0.19041615780268875, "compression_ratio": 1.5850622406639003, "no_speech_prob": 3.0894289011484943e-06}, {"id": 942, "seek": 444388, "start": 4460.32, "end": 4464.88, "text": " And the model said, which initially is random, says this isn't a bird and actually it is", "tokens": [400, 264, 2316, 848, 11, 597, 9105, 307, 4974, 11, 1619, 341, 1943, 380, 257, 5255, 293, 767, 309, 307], "temperature": 0.0, "avg_logprob": -0.19041615780268875, "compression_ratio": 1.5850622406639003, "no_speech_prob": 3.0894289011484943e-06}, {"id": 943, "seek": 444388, "start": 4464.88, "end": 4465.88, "text": " a bird.", "tokens": [257, 5255, 13], "temperature": 0.0, "avg_logprob": -0.19041615780268875, "compression_ratio": 1.5850622406639003, "no_speech_prob": 3.0894289011484943e-06}, {"id": 944, "seek": 444388, "start": 4465.88, "end": 4467.84, "text": " We would say, oh, you're wrong.", "tokens": [492, 576, 584, 11, 1954, 11, 291, 434, 2085, 13], "temperature": 0.0, "avg_logprob": -0.19041615780268875, "compression_ratio": 1.5850622406639003, "no_speech_prob": 3.0894289011484943e-06}, {"id": 945, "seek": 444388, "start": 4467.84, "end": 4469.92, "text": " So we then calculate the loss.", "tokens": [407, 321, 550, 8873, 264, 4470, 13], "temperature": 0.0, "avg_logprob": -0.19041615780268875, "compression_ratio": 1.5850622406639003, "no_speech_prob": 3.0894289011484943e-06}, {"id": 946, "seek": 446992, "start": 4469.92, "end": 4475.6, "text": " So the loss is a number that says how good were the results.", "tokens": [407, 264, 4470, 307, 257, 1230, 300, 1619, 577, 665, 645, 264, 3542, 13], "temperature": 0.0, "avg_logprob": -0.17441230963084323, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.1544426570253563e-06}, {"id": 947, "seek": 446992, "start": 4475.6, "end": 4476.6, "text": " So that's all pretty straightforward.", "tokens": [407, 300, 311, 439, 1238, 15325, 13], "temperature": 0.0, "avg_logprob": -0.17441230963084323, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.1544426570253563e-06}, {"id": 948, "seek": 446992, "start": 4476.6, "end": 4478.88, "text": " You know, we could, for example, say, oh, what's the accuracy?", "tokens": [509, 458, 11, 321, 727, 11, 337, 1365, 11, 584, 11, 1954, 11, 437, 311, 264, 14170, 30], "temperature": 0.0, "avg_logprob": -0.17441230963084323, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.1544426570253563e-06}, {"id": 949, "seek": 446992, "start": 4478.88, "end": 4483.8, "text": " We could look at a hundred photos and say, which percentage of them did it get right?", "tokens": [492, 727, 574, 412, 257, 3262, 5787, 293, 584, 11, 597, 9668, 295, 552, 630, 309, 483, 558, 30], "temperature": 0.0, "avg_logprob": -0.17441230963084323, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.1544426570253563e-06}, {"id": 950, "seek": 446992, "start": 4483.8, "end": 4485.8, "text": " No worries.", "tokens": [883, 16340, 13], "temperature": 0.0, "avg_logprob": -0.17441230963084323, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.1544426570253563e-06}, {"id": 951, "seek": 446992, "start": 4485.8, "end": 4489.34, "text": " Now the critical step is this arrow.", "tokens": [823, 264, 4924, 1823, 307, 341, 11610, 13], "temperature": 0.0, "avg_logprob": -0.17441230963084323, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.1544426570253563e-06}, {"id": 952, "seek": 446992, "start": 4489.34, "end": 4494.84, "text": " We need as a way of updating the weights, that is coming up with a new set of weights", "tokens": [492, 643, 382, 257, 636, 295, 25113, 264, 17443, 11, 300, 307, 1348, 493, 365, 257, 777, 992, 295, 17443], "temperature": 0.0, "avg_logprob": -0.17441230963084323, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.1544426570253563e-06}, {"id": 953, "seek": 446992, "start": 4494.84, "end": 4497.76, "text": " that are a bit better than the previous set.", "tokens": [300, 366, 257, 857, 1101, 813, 264, 3894, 992, 13], "temperature": 0.0, "avg_logprob": -0.17441230963084323, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.1544426570253563e-06}, {"id": 954, "seek": 446992, "start": 4497.76, "end": 4498.76, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.17441230963084323, "compression_ratio": 1.6096654275092936, "no_speech_prob": 1.1544426570253563e-06}, {"id": 955, "seek": 449876, "start": 4498.76, "end": 4505.0, "text": " And by a bit better, we mean it should make the loss get a little bit better.", "tokens": [400, 538, 257, 857, 1101, 11, 321, 914, 309, 820, 652, 264, 4470, 483, 257, 707, 857, 1101, 13], "temperature": 0.0, "avg_logprob": -0.10434531314032418, "compression_ratio": 1.6816326530612244, "no_speech_prob": 2.9022430680925027e-06}, {"id": 956, "seek": 449876, "start": 4505.0, "end": 4509.4400000000005, "text": " So we've got this number that says how good is our model.", "tokens": [407, 321, 600, 658, 341, 1230, 300, 1619, 577, 665, 307, 527, 2316, 13], "temperature": 0.0, "avg_logprob": -0.10434531314032418, "compression_ratio": 1.6816326530612244, "no_speech_prob": 2.9022430680925027e-06}, {"id": 957, "seek": 449876, "start": 4509.4400000000005, "end": 4511.08, "text": " And initially it's terrible, right?", "tokens": [400, 9105, 309, 311, 6237, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.10434531314032418, "compression_ratio": 1.6816326530612244, "no_speech_prob": 2.9022430680925027e-06}, {"id": 958, "seek": 449876, "start": 4511.08, "end": 4512.4800000000005, "text": " It's random.", "tokens": [467, 311, 4974, 13], "temperature": 0.0, "avg_logprob": -0.10434531314032418, "compression_ratio": 1.6816326530612244, "no_speech_prob": 2.9022430680925027e-06}, {"id": 959, "seek": 449876, "start": 4512.4800000000005, "end": 4516.08, "text": " We need some mechanism of making a little bit better.", "tokens": [492, 643, 512, 7513, 295, 1455, 257, 707, 857, 1101, 13], "temperature": 0.0, "avg_logprob": -0.10434531314032418, "compression_ratio": 1.6816326530612244, "no_speech_prob": 2.9022430680925027e-06}, {"id": 960, "seek": 449876, "start": 4516.08, "end": 4521.68, "text": " If we can just do that one thing, then we just need to iterate this a few times because", "tokens": [759, 321, 393, 445, 360, 300, 472, 551, 11, 550, 321, 445, 643, 281, 44497, 341, 257, 1326, 1413, 570], "temperature": 0.0, "avg_logprob": -0.10434531314032418, "compression_ratio": 1.6816326530612244, "no_speech_prob": 2.9022430680925027e-06}, {"id": 961, "seek": 449876, "start": 4521.68, "end": 4527.08, "text": " each time we put in some more inputs and, and put in our weights and get our loss and", "tokens": [1184, 565, 321, 829, 294, 512, 544, 15743, 293, 11, 293, 829, 294, 527, 17443, 293, 483, 527, 4470, 293], "temperature": 0.0, "avg_logprob": -0.10434531314032418, "compression_ratio": 1.6816326530612244, "no_speech_prob": 2.9022430680925027e-06}, {"id": 962, "seek": 452708, "start": 4527.08, "end": 4529.36, "text": " use it to make it a little bit better.", "tokens": [764, 309, 281, 652, 309, 257, 707, 857, 1101, 13], "temperature": 0.0, "avg_logprob": -0.1424161721994211, "compression_ratio": 1.7074074074074075, "no_speech_prob": 1.5534785688942065e-06}, {"id": 963, "seek": 452708, "start": 4529.36, "end": 4534.48, "text": " Then if we make it a little bit better enough times, eventually it's going to get good.", "tokens": [1396, 498, 321, 652, 309, 257, 707, 857, 1101, 1547, 1413, 11, 4728, 309, 311, 516, 281, 483, 665, 13], "temperature": 0.0, "avg_logprob": -0.1424161721994211, "compression_ratio": 1.7074074074074075, "no_speech_prob": 1.5534785688942065e-06}, {"id": 964, "seek": 452708, "start": 4534.48, "end": 4541.04, "text": " Assuming that our model is flexible enough to represent the thing we want to do.", "tokens": [6281, 24919, 300, 527, 2316, 307, 11358, 1547, 281, 2906, 264, 551, 321, 528, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.1424161721994211, "compression_ratio": 1.7074074074074075, "no_speech_prob": 1.5534785688942065e-06}, {"id": 965, "seek": 452708, "start": 4541.04, "end": 4544.72, "text": " Now remember what I told you earlier about what a neural network is, which is basically", "tokens": [823, 1604, 437, 286, 1907, 291, 3071, 466, 437, 257, 18161, 3209, 307, 11, 597, 307, 1936], "temperature": 0.0, "avg_logprob": -0.1424161721994211, "compression_ratio": 1.7074074074074075, "no_speech_prob": 1.5534785688942065e-06}, {"id": 966, "seek": 452708, "start": 4544.72, "end": 4549.48, "text": " multiplying things together and adding them up and replacing the negatives with zeros.", "tokens": [30955, 721, 1214, 293, 5127, 552, 493, 293, 19139, 264, 40019, 365, 35193, 13], "temperature": 0.0, "avg_logprob": -0.1424161721994211, "compression_ratio": 1.7074074074074075, "no_speech_prob": 1.5534785688942065e-06}, {"id": 967, "seek": 452708, "start": 4549.48, "end": 4551.5199999999995, "text": " And you do that a few times.", "tokens": [400, 291, 360, 300, 257, 1326, 1413, 13], "temperature": 0.0, "avg_logprob": -0.1424161721994211, "compression_ratio": 1.7074074074074075, "no_speech_prob": 1.5534785688942065e-06}, {"id": 968, "seek": 452708, "start": 4551.5199999999995, "end": 4556.0199999999995, "text": " That is provably an infinitely flexible function.", "tokens": [663, 307, 1439, 1188, 364, 36227, 11358, 2445, 13], "temperature": 0.0, "avg_logprob": -0.1424161721994211, "compression_ratio": 1.7074074074074075, "no_speech_prob": 1.5534785688942065e-06}, {"id": 969, "seek": 455602, "start": 4556.02, "end": 4562.8, "text": " So it actually turns out that that incredibly simple sequence of steps, if you repeat it", "tokens": [407, 309, 767, 4523, 484, 300, 300, 6252, 2199, 8310, 295, 4439, 11, 498, 291, 7149, 309], "temperature": 0.0, "avg_logprob": -0.19286566622116985, "compression_ratio": 1.530054644808743, "no_speech_prob": 2.19069102058711e-06}, {"id": 970, "seek": 455602, "start": 4562.8, "end": 4569.860000000001, "text": " a few times and you do enough of them, can solve any computable function and something", "tokens": [257, 1326, 1413, 293, 291, 360, 1547, 295, 552, 11, 393, 5039, 604, 2807, 712, 2445, 293, 746], "temperature": 0.0, "avg_logprob": -0.19286566622116985, "compression_ratio": 1.530054644808743, "no_speech_prob": 2.19069102058711e-06}, {"id": 971, "seek": 455602, "start": 4569.860000000001, "end": 4579.240000000001, "text": " like generate an artwork based off somebody's Twitter bio is an example of a computable", "tokens": [411, 8460, 364, 15829, 2361, 766, 2618, 311, 5794, 12198, 307, 364, 1365, 295, 257, 2807, 712], "temperature": 0.0, "avg_logprob": -0.19286566622116985, "compression_ratio": 1.530054644808743, "no_speech_prob": 2.19069102058711e-06}, {"id": 972, "seek": 455602, "start": 4579.240000000001, "end": 4580.240000000001, "text": " function.", "tokens": [2445, 13], "temperature": 0.0, "avg_logprob": -0.19286566622116985, "compression_ratio": 1.530054644808743, "no_speech_prob": 2.19069102058711e-06}, {"id": 973, "seek": 455602, "start": 4580.240000000001, "end": 4581.240000000001, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.19286566622116985, "compression_ratio": 1.530054644808743, "no_speech_prob": 2.19069102058711e-06}, {"id": 974, "seek": 458124, "start": 4581.24, "end": 4587.92, "text": " Or translate English to Chinese is an example of a computable function.", "tokens": [1610, 13799, 3669, 281, 4649, 307, 364, 1365, 295, 257, 2807, 712, 2445, 13], "temperature": 0.0, "avg_logprob": -0.16918877024709442, "compression_ratio": 1.52, "no_speech_prob": 3.2374896363762673e-06}, {"id": 975, "seek": 458124, "start": 4587.92, "end": 4593.4, "text": " So they're not the kinds of normal functions you do in year eight math, right?", "tokens": [407, 436, 434, 406, 264, 3685, 295, 2710, 6828, 291, 360, 294, 1064, 3180, 5221, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.16918877024709442, "compression_ratio": 1.52, "no_speech_prob": 3.2374896363762673e-06}, {"id": 976, "seek": 458124, "start": 4593.4, "end": 4595.88, "text": " But they are computable functions.", "tokens": [583, 436, 366, 2807, 712, 6828, 13], "temperature": 0.0, "avg_logprob": -0.16918877024709442, "compression_ratio": 1.52, "no_speech_prob": 3.2374896363762673e-06}, {"id": 977, "seek": 458124, "start": 4595.88, "end": 4603.24, "text": " And so therefore, if we can just create this step, then, and use the neural network as", "tokens": [400, 370, 4412, 11, 498, 321, 393, 445, 1884, 341, 1823, 11, 550, 11, 293, 764, 264, 18161, 3209, 382], "temperature": 0.0, "avg_logprob": -0.16918877024709442, "compression_ratio": 1.52, "no_speech_prob": 3.2374896363762673e-06}, {"id": 978, "seek": 458124, "start": 4603.24, "end": 4607.16, "text": " a model, then we're good to go.", "tokens": [257, 2316, 11, 550, 321, 434, 665, 281, 352, 13], "temperature": 0.0, "avg_logprob": -0.16918877024709442, "compression_ratio": 1.52, "no_speech_prob": 3.2374896363762673e-06}, {"id": 979, "seek": 460716, "start": 4607.16, "end": 4614.04, "text": " In theory, we can solve anything given enough time and enough data.", "tokens": [682, 5261, 11, 321, 393, 5039, 1340, 2212, 1547, 565, 293, 1547, 1412, 13], "temperature": 0.0, "avg_logprob": -0.09227755974079001, "compression_ratio": 1.6435643564356435, "no_speech_prob": 2.9021646241744747e-06}, {"id": 980, "seek": 460716, "start": 4614.04, "end": 4618.92, "text": " And so that's exactly what we do.", "tokens": [400, 370, 300, 311, 2293, 437, 321, 360, 13], "temperature": 0.0, "avg_logprob": -0.09227755974079001, "compression_ratio": 1.6435643564356435, "no_speech_prob": 2.9021646241744747e-06}, {"id": 981, "seek": 460716, "start": 4618.92, "end": 4627.12, "text": " And so once we finished that training procedure, we don't need the loss anymore.", "tokens": [400, 370, 1564, 321, 4335, 300, 3097, 10747, 11, 321, 500, 380, 643, 264, 4470, 3602, 13], "temperature": 0.0, "avg_logprob": -0.09227755974079001, "compression_ratio": 1.6435643564356435, "no_speech_prob": 2.9021646241744747e-06}, {"id": 982, "seek": 460716, "start": 4627.12, "end": 4630.96, "text": " And even the weights themselves, we can integrate them kind of into the model, right?", "tokens": [400, 754, 264, 17443, 2969, 11, 321, 393, 13365, 552, 733, 295, 666, 264, 2316, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.09227755974079001, "compression_ratio": 1.6435643564356435, "no_speech_prob": 2.9021646241744747e-06}, {"id": 983, "seek": 460716, "start": 4630.96, "end": 4631.96, "text": " We finished changing them.", "tokens": [492, 4335, 4473, 552, 13], "temperature": 0.0, "avg_logprob": -0.09227755974079001, "compression_ratio": 1.6435643564356435, "no_speech_prob": 2.9021646241744747e-06}, {"id": 984, "seek": 460716, "start": 4631.96, "end": 4634.0, "text": " So we can just say that's now fixed.", "tokens": [407, 321, 393, 445, 584, 300, 311, 586, 6806, 13], "temperature": 0.0, "avg_logprob": -0.09227755974079001, "compression_ratio": 1.6435643564356435, "no_speech_prob": 2.9021646241744747e-06}, {"id": 985, "seek": 463400, "start": 4634.0, "end": 4639.2, "text": " And so once we've done that, we now have something which takes inputs, puts them through a model", "tokens": [400, 370, 1564, 321, 600, 1096, 300, 11, 321, 586, 362, 746, 597, 2516, 15743, 11, 8137, 552, 807, 257, 2316], "temperature": 0.0, "avg_logprob": -0.09555824943210768, "compression_ratio": 1.6162361623616237, "no_speech_prob": 4.2890733311651275e-06}, {"id": 986, "seek": 463400, "start": 4639.2, "end": 4641.8, "text": " and gives us results.", "tokens": [293, 2709, 505, 3542, 13], "temperature": 0.0, "avg_logprob": -0.09555824943210768, "compression_ratio": 1.6162361623616237, "no_speech_prob": 4.2890733311651275e-06}, {"id": 987, "seek": 463400, "start": 4641.8, "end": 4647.24, "text": " It looks exactly like our original idea of a program.", "tokens": [467, 1542, 2293, 411, 527, 3380, 1558, 295, 257, 1461, 13], "temperature": 0.0, "avg_logprob": -0.09555824943210768, "compression_ratio": 1.6162361623616237, "no_speech_prob": 4.2890733311651275e-06}, {"id": 988, "seek": 463400, "start": 4647.24, "end": 4650.56, "text": " And that's why we can do what I described earlier.", "tokens": [400, 300, 311, 983, 321, 393, 360, 437, 286, 7619, 3071, 13], "temperature": 0.0, "avg_logprob": -0.09555824943210768, "compression_ratio": 1.6162361623616237, "no_speech_prob": 4.2890733311651275e-06}, {"id": 989, "seek": 463400, "start": 4650.56, "end": 4654.9, "text": " That is, once we've got that learn dot predict for our bird recognizer, we can insert it", "tokens": [663, 307, 11, 1564, 321, 600, 658, 300, 1466, 5893, 6069, 337, 527, 5255, 3068, 6545, 11, 321, 393, 8969, 309], "temperature": 0.0, "avg_logprob": -0.09555824943210768, "compression_ratio": 1.6162361623616237, "no_speech_prob": 4.2890733311651275e-06}, {"id": 990, "seek": 463400, "start": 4654.9, "end": 4658.12, "text": " into any piece of computer code, right?", "tokens": [666, 604, 2522, 295, 3820, 3089, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.09555824943210768, "compression_ratio": 1.6162361623616237, "no_speech_prob": 4.2890733311651275e-06}, {"id": 991, "seek": 463400, "start": 4658.12, "end": 4663.28, "text": " Once we've got a trained model, it's just another piece of code we can call with some", "tokens": [3443, 321, 600, 658, 257, 8895, 2316, 11, 309, 311, 445, 1071, 2522, 295, 3089, 321, 393, 818, 365, 512], "temperature": 0.0, "avg_logprob": -0.09555824943210768, "compression_ratio": 1.6162361623616237, "no_speech_prob": 4.2890733311651275e-06}, {"id": 992, "seek": 466328, "start": 4663.28, "end": 4668.04, "text": " inputs and get some outputs.", "tokens": [15743, 293, 483, 512, 23930, 13], "temperature": 0.0, "avg_logprob": -0.14958170936221168, "compression_ratio": 1.6872427983539096, "no_speech_prob": 8.938593964558095e-06}, {"id": 993, "seek": 466328, "start": 4668.04, "end": 4676.4, "text": " Deploying machine learning models in practice can come with a lot of, you know, little tricky", "tokens": [1346, 2384, 278, 3479, 2539, 5245, 294, 3124, 393, 808, 365, 257, 688, 295, 11, 291, 458, 11, 707, 12414], "temperature": 0.0, "avg_logprob": -0.14958170936221168, "compression_ratio": 1.6872427983539096, "no_speech_prob": 8.938593964558095e-06}, {"id": 994, "seek": 466328, "start": 4676.4, "end": 4680.32, "text": " details, but the basic idea in your code is that you're just going to have a line of code", "tokens": [4365, 11, 457, 264, 3875, 1558, 294, 428, 3089, 307, 300, 291, 434, 445, 516, 281, 362, 257, 1622, 295, 3089], "temperature": 0.0, "avg_logprob": -0.14958170936221168, "compression_ratio": 1.6872427983539096, "no_speech_prob": 8.938593964558095e-06}, {"id": 995, "seek": 466328, "start": 4680.32, "end": 4682.759999999999, "text": " that says learn dot predict.", "tokens": [300, 1619, 1466, 5893, 6069, 13], "temperature": 0.0, "avg_logprob": -0.14958170936221168, "compression_ratio": 1.6872427983539096, "no_speech_prob": 8.938593964558095e-06}, {"id": 996, "seek": 466328, "start": 4682.759999999999, "end": 4685.679999999999, "text": " And then you just fit it in with all the rest of your code in the usual way.", "tokens": [400, 550, 291, 445, 3318, 309, 294, 365, 439, 264, 1472, 295, 428, 3089, 294, 264, 7713, 636, 13], "temperature": 0.0, "avg_logprob": -0.14958170936221168, "compression_ratio": 1.6872427983539096, "no_speech_prob": 8.938593964558095e-06}, {"id": 997, "seek": 466328, "start": 4685.679999999999, "end": 4692.4, "text": " And this is why, because a trained model is just another thing that maps inputs to results.", "tokens": [400, 341, 307, 983, 11, 570, 257, 8895, 2316, 307, 445, 1071, 551, 300, 11317, 15743, 281, 3542, 13], "temperature": 0.0, "avg_logprob": -0.14958170936221168, "compression_ratio": 1.6872427983539096, "no_speech_prob": 8.938593964558095e-06}, {"id": 998, "seek": 469240, "start": 4692.4, "end": 4693.4, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.1930306077003479, "compression_ratio": 1.5602094240837696, "no_speech_prob": 1.5442694348166697e-05}, {"id": 999, "seek": 469240, "start": 4693.4, "end": 4694.4, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.1930306077003479, "compression_ratio": 1.5602094240837696, "no_speech_prob": 1.5442694348166697e-05}, {"id": 1000, "seek": 469240, "start": 4694.4, "end": 4707.4, "text": " So as we come to wrap up this first lesson, for those of you that are already familiar", "tokens": [407, 382, 321, 808, 281, 7019, 493, 341, 700, 6898, 11, 337, 729, 295, 291, 300, 366, 1217, 4963], "temperature": 0.0, "avg_logprob": -0.1930306077003479, "compression_ratio": 1.5602094240837696, "no_speech_prob": 1.5442694348166697e-05}, {"id": 1001, "seek": 469240, "start": 4707.4, "end": 4714.28, "text": " with notebooks and Python, there's, you know, this is going to be pretty easy for you.", "tokens": [365, 43782, 293, 15329, 11, 456, 311, 11, 291, 458, 11, 341, 307, 516, 281, 312, 1238, 1858, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.1930306077003479, "compression_ratio": 1.5602094240837696, "no_speech_prob": 1.5442694348166697e-05}, {"id": 1002, "seek": 469240, "start": 4714.28, "end": 4719.08, "text": " You're just going to be using some stuff that you're already familiar with and some slightly", "tokens": [509, 434, 445, 516, 281, 312, 1228, 512, 1507, 300, 291, 434, 1217, 4963, 365, 293, 512, 4748], "temperature": 0.0, "avg_logprob": -0.1930306077003479, "compression_ratio": 1.5602094240837696, "no_speech_prob": 1.5442694348166697e-05}, {"id": 1003, "seek": 469240, "start": 4719.08, "end": 4720.08, "text": " new libraries.", "tokens": [777, 15148, 13], "temperature": 0.0, "avg_logprob": -0.1930306077003479, "compression_ratio": 1.5602094240837696, "no_speech_prob": 1.5442694348166697e-05}, {"id": 1004, "seek": 472008, "start": 4720.08, "end": 4725.6, "text": " But for those of you who are not familiar with Python, you know, you're biting into", "tokens": [583, 337, 729, 295, 291, 567, 366, 406, 4963, 365, 15329, 11, 291, 458, 11, 291, 434, 32912, 666], "temperature": 0.0, "avg_logprob": -0.12339275616865891, "compression_ratio": 1.628691983122363, "no_speech_prob": 7.410715625155717e-06}, {"id": 1005, "seek": 472008, "start": 4725.6, "end": 4726.6, "text": " a big thing here.", "tokens": [257, 955, 551, 510, 13], "temperature": 0.0, "avg_logprob": -0.12339275616865891, "compression_ratio": 1.628691983122363, "no_speech_prob": 7.410715625155717e-06}, {"id": 1006, "seek": 472008, "start": 4726.6, "end": 4729.36, "text": " There's obviously a lot you're going to have to learn.", "tokens": [821, 311, 2745, 257, 688, 291, 434, 516, 281, 362, 281, 1466, 13], "temperature": 0.0, "avg_logprob": -0.12339275616865891, "compression_ratio": 1.628691983122363, "no_speech_prob": 7.410715625155717e-06}, {"id": 1007, "seek": 472008, "start": 4729.36, "end": 4735.88, "text": " And to be clear, I'm not going to be teaching Python in this course, but we do have links", "tokens": [400, 281, 312, 1850, 11, 286, 478, 406, 516, 281, 312, 4571, 15329, 294, 341, 1164, 11, 457, 321, 360, 362, 6123], "temperature": 0.0, "avg_logprob": -0.12339275616865891, "compression_ratio": 1.628691983122363, "no_speech_prob": 7.410715625155717e-06}, {"id": 1008, "seek": 472008, "start": 4735.88, "end": 4739.5199999999995, "text": " to great Python resources in the forum.", "tokens": [281, 869, 15329, 3593, 294, 264, 17542, 13], "temperature": 0.0, "avg_logprob": -0.12339275616865891, "compression_ratio": 1.628691983122363, "no_speech_prob": 7.410715625155717e-06}, {"id": 1009, "seek": 472008, "start": 4739.5199999999995, "end": 4742.24, "text": " So check out that thread.", "tokens": [407, 1520, 484, 300, 7207, 13], "temperature": 0.0, "avg_logprob": -0.12339275616865891, "compression_ratio": 1.628691983122363, "no_speech_prob": 7.410715625155717e-06}, {"id": 1010, "seek": 472008, "start": 4742.24, "end": 4749.82, "text": " Regardless of where you're at, the most important thing is to experiment.", "tokens": [25148, 295, 689, 291, 434, 412, 11, 264, 881, 1021, 551, 307, 281, 5120, 13], "temperature": 0.0, "avg_logprob": -0.12339275616865891, "compression_ratio": 1.628691983122363, "no_speech_prob": 7.410715625155717e-06}, {"id": 1011, "seek": 474982, "start": 4749.82, "end": 4757.42, "text": " And so experimenting could be as simple as just running those Kaggle notebooks that I've", "tokens": [400, 370, 29070, 727, 312, 382, 2199, 382, 445, 2614, 729, 48751, 22631, 43782, 300, 286, 600], "temperature": 0.0, "avg_logprob": -0.13599902153015136, "compression_ratio": 1.6307053941908713, "no_speech_prob": 4.565326435113093e-06}, {"id": 1012, "seek": 474982, "start": 4757.42, "end": 4761.66, "text": " shown you just to see them run.", "tokens": [4898, 291, 445, 281, 536, 552, 1190, 13], "temperature": 0.0, "avg_logprob": -0.13599902153015136, "compression_ratio": 1.6307053941908713, "no_speech_prob": 4.565326435113093e-06}, {"id": 1013, "seek": 474982, "start": 4761.66, "end": 4763.5199999999995, "text": " You could try changing things a little bit.", "tokens": [509, 727, 853, 4473, 721, 257, 707, 857, 13], "temperature": 0.0, "avg_logprob": -0.13599902153015136, "compression_ratio": 1.6307053941908713, "no_speech_prob": 4.565326435113093e-06}, {"id": 1014, "seek": 474982, "start": 4763.5199999999995, "end": 4768.32, "text": " I'd really love you to try doing the bird or forest exercise, but come up with something", "tokens": [286, 1116, 534, 959, 291, 281, 853, 884, 264, 5255, 420, 6719, 5380, 11, 457, 808, 493, 365, 746], "temperature": 0.0, "avg_logprob": -0.13599902153015136, "compression_ratio": 1.6307053941908713, "no_speech_prob": 4.565326435113093e-06}, {"id": 1015, "seek": 474982, "start": 4768.32, "end": 4769.62, "text": " else.", "tokens": [1646, 13], "temperature": 0.0, "avg_logprob": -0.13599902153015136, "compression_ratio": 1.6307053941908713, "no_speech_prob": 4.565326435113093e-06}, {"id": 1016, "seek": 474982, "start": 4769.62, "end": 4772.599999999999, "text": " Maybe try to use three or four categories rather than two.", "tokens": [2704, 853, 281, 764, 1045, 420, 1451, 10479, 2831, 813, 732, 13], "temperature": 0.0, "avg_logprob": -0.13599902153015136, "compression_ratio": 1.6307053941908713, "no_speech_prob": 4.565326435113093e-06}, {"id": 1017, "seek": 474982, "start": 4772.599999999999, "end": 4779.08, "text": " You know, have a think about something that you think would be fun to try.", "tokens": [509, 458, 11, 362, 257, 519, 466, 746, 300, 291, 519, 576, 312, 1019, 281, 853, 13], "temperature": 0.0, "avg_logprob": -0.13599902153015136, "compression_ratio": 1.6307053941908713, "no_speech_prob": 4.565326435113093e-06}, {"id": 1018, "seek": 477908, "start": 4779.08, "end": 4783.64, "text": " Depending on where you're at, you know, push yourself a little bit, but not too much.", "tokens": [22539, 322, 689, 291, 434, 412, 11, 291, 458, 11, 2944, 1803, 257, 707, 857, 11, 457, 406, 886, 709, 13], "temperature": 0.0, "avg_logprob": -0.14499407475537593, "compression_ratio": 1.5537848605577689, "no_speech_prob": 5.593874902842799e-06}, {"id": 1019, "seek": 477908, "start": 4783.64, "end": 4787.92, "text": " So make sure you get something finished before the next lesson.", "tokens": [407, 652, 988, 291, 483, 746, 4335, 949, 264, 958, 6898, 13], "temperature": 0.0, "avg_logprob": -0.14499407475537593, "compression_ratio": 1.5537848605577689, "no_speech_prob": 5.593874902842799e-06}, {"id": 1020, "seek": 477908, "start": 4787.92, "end": 4790.88, "text": " Most importantly, read chapter one of the book.", "tokens": [4534, 8906, 11, 1401, 7187, 472, 295, 264, 1446, 13], "temperature": 0.0, "avg_logprob": -0.14499407475537593, "compression_ratio": 1.5537848605577689, "no_speech_prob": 5.593874902842799e-06}, {"id": 1021, "seek": 477908, "start": 4790.88, "end": 4795.2, "text": " It's got much the same stuff that we've seen today, but presented in a slightly different", "tokens": [467, 311, 658, 709, 264, 912, 1507, 300, 321, 600, 1612, 965, 11, 457, 8212, 294, 257, 4748, 819], "temperature": 0.0, "avg_logprob": -0.14499407475537593, "compression_ratio": 1.5537848605577689, "no_speech_prob": 5.593874902842799e-06}, {"id": 1022, "seek": 477908, "start": 4795.2, "end": 4797.4, "text": " way.", "tokens": [636, 13], "temperature": 0.0, "avg_logprob": -0.14499407475537593, "compression_ratio": 1.5537848605577689, "no_speech_prob": 5.593874902842799e-06}, {"id": 1023, "seek": 477908, "start": 4797.4, "end": 4803.16, "text": " And then come back to the forums and present what you've done in the share your work here", "tokens": [400, 550, 808, 646, 281, 264, 26998, 293, 1974, 437, 291, 600, 1096, 294, 264, 2073, 428, 589, 510], "temperature": 0.0, "avg_logprob": -0.14499407475537593, "compression_ratio": 1.5537848605577689, "no_speech_prob": 5.593874902842799e-06}, {"id": 1024, "seek": 477908, "start": 4803.16, "end": 4805.5199999999995, "text": " thread.", "tokens": [7207, 13], "temperature": 0.0, "avg_logprob": -0.14499407475537593, "compression_ratio": 1.5537848605577689, "no_speech_prob": 5.593874902842799e-06}, {"id": 1025, "seek": 480552, "start": 4805.52, "end": 4813.160000000001, "text": " After the first time we did this in year one of the course, we got over a thousand replies.", "tokens": [2381, 264, 700, 565, 321, 630, 341, 294, 1064, 472, 295, 264, 1164, 11, 321, 658, 670, 257, 4714, 42289, 13], "temperature": 0.0, "avg_logprob": -0.15755989575626875, "compression_ratio": 1.5778688524590163, "no_speech_prob": 3.5550833672459703e-06}, {"id": 1026, "seek": 480552, "start": 4813.160000000001, "end": 4820.120000000001, "text": " And of those replies, it's amazing how many of them have ended up turning into new startups,", "tokens": [400, 295, 729, 42289, 11, 309, 311, 2243, 577, 867, 295, 552, 362, 4590, 493, 6246, 666, 777, 28041, 11], "temperature": 0.0, "avg_logprob": -0.15755989575626875, "compression_ratio": 1.5778688524590163, "no_speech_prob": 3.5550833672459703e-06}, {"id": 1027, "seek": 480552, "start": 4820.120000000001, "end": 4823.64, "text": " scientific papers, job offers.", "tokens": [8134, 10577, 11, 1691, 7736, 13], "temperature": 0.0, "avg_logprob": -0.15755989575626875, "compression_ratio": 1.5778688524590163, "no_speech_prob": 3.5550833672459703e-06}, {"id": 1028, "seek": 480552, "start": 4823.64, "end": 4825.860000000001, "text": " It's been really cool to watch people's journeys.", "tokens": [467, 311, 668, 534, 1627, 281, 1159, 561, 311, 36736, 13], "temperature": 0.0, "avg_logprob": -0.15755989575626875, "compression_ratio": 1.5778688524590163, "no_speech_prob": 3.5550833672459703e-06}, {"id": 1029, "seek": 480552, "start": 4825.860000000001, "end": 4830.280000000001, "text": " And some of them are just plain fun, you know, so this person classified different types", "tokens": [400, 512, 295, 552, 366, 445, 11121, 1019, 11, 291, 458, 11, 370, 341, 954, 20627, 819, 3467], "temperature": 0.0, "avg_logprob": -0.15755989575626875, "compression_ratio": 1.5778688524590163, "no_speech_prob": 3.5550833672459703e-06}, {"id": 1030, "seek": 480552, "start": 4830.280000000001, "end": 4832.120000000001, "text": " of Trinidad and Tobago people.", "tokens": [295, 1765, 259, 4580, 293, 26350, 6442, 561, 13], "temperature": 0.0, "avg_logprob": -0.15755989575626875, "compression_ratio": 1.5778688524590163, "no_speech_prob": 3.5550833672459703e-06}, {"id": 1031, "seek": 483212, "start": 4832.12, "end": 4835.76, "text": " So, you know, people do stuff based on where they live and what their interests are.", "tokens": [407, 11, 291, 458, 11, 561, 360, 1507, 2361, 322, 689, 436, 1621, 293, 437, 641, 8847, 366, 13], "temperature": 0.0, "avg_logprob": -0.23302721296037945, "compression_ratio": 1.6730769230769231, "no_speech_prob": 2.5610056582081597e-06}, {"id": 1032, "seek": 483212, "start": 4835.76, "end": 4839.44, "text": " I don't know if this person is particularly interested in zucchini and cucumber, but they", "tokens": [286, 500, 380, 458, 498, 341, 954, 307, 4098, 3102, 294, 44781, 293, 28725, 11, 457, 436], "temperature": 0.0, "avg_logprob": -0.23302721296037945, "compression_ratio": 1.6730769230769231, "no_speech_prob": 2.5610056582081597e-06}, {"id": 1033, "seek": 483212, "start": 4839.44, "end": 4841.24, "text": " made a zucchini and cucumber classifier.", "tokens": [1027, 257, 44781, 293, 28725, 1508, 9902, 13], "temperature": 0.0, "avg_logprob": -0.23302721296037945, "compression_ratio": 1.6730769230769231, "no_speech_prob": 2.5610056582081597e-06}, {"id": 1034, "seek": 483212, "start": 4841.24, "end": 4846.36, "text": " I thought this was a really interesting one classifying satellite imagery into what city", "tokens": [286, 1194, 341, 390, 257, 534, 1880, 472, 1508, 5489, 16016, 24340, 666, 437, 2307], "temperature": 0.0, "avg_logprob": -0.23302721296037945, "compression_ratio": 1.6730769230769231, "no_speech_prob": 2.5610056582081597e-06}, {"id": 1035, "seek": 483212, "start": 4846.36, "end": 4848.64, "text": " it's probably a picture of.", "tokens": [309, 311, 1391, 257, 3036, 295, 13], "temperature": 0.0, "avg_logprob": -0.23302721296037945, "compression_ratio": 1.6730769230769231, "no_speech_prob": 2.5610056582081597e-06}, {"id": 1036, "seek": 483212, "start": 4848.64, "end": 4852.64, "text": " Amazingly accurate actually, 85% with 110 classes.", "tokens": [14165, 356, 8559, 767, 11, 14695, 4, 365, 20154, 5359, 13], "temperature": 0.0, "avg_logprob": -0.23302721296037945, "compression_ratio": 1.6730769230769231, "no_speech_prob": 2.5610056582081597e-06}, {"id": 1037, "seek": 483212, "start": 4852.64, "end": 4858.599999999999, "text": " Panama City bus classifier, batik cloth classifier.", "tokens": [41202, 4392, 1255, 1508, 9902, 11, 7362, 1035, 13619, 1508, 9902, 13], "temperature": 0.0, "avg_logprob": -0.23302721296037945, "compression_ratio": 1.6730769230769231, "no_speech_prob": 2.5610056582081597e-06}, {"id": 1038, "seek": 485860, "start": 4858.6, "end": 4863.68, "text": " This one, you know, very practically important, you know, recognizing the state of buildings.", "tokens": [639, 472, 11, 291, 458, 11, 588, 15667, 1021, 11, 291, 458, 11, 18538, 264, 1785, 295, 7446, 13], "temperature": 0.0, "avg_logprob": -0.20134540773787588, "compression_ratio": 1.6704545454545454, "no_speech_prob": 6.3376974139828235e-06}, {"id": 1039, "seek": 485860, "start": 4863.68, "end": 4868.08, "text": " We've had quite a few students actually move into disaster resilience based on satellite", "tokens": [492, 600, 632, 1596, 257, 1326, 1731, 767, 1286, 666, 11293, 19980, 2361, 322, 16016], "temperature": 0.0, "avg_logprob": -0.20134540773787588, "compression_ratio": 1.6704545454545454, "no_speech_prob": 6.3376974139828235e-06}, {"id": 1040, "seek": 485860, "start": 4868.08, "end": 4871.96, "text": " imagery using exactly this kind of work.", "tokens": [24340, 1228, 2293, 341, 733, 295, 589, 13], "temperature": 0.0, "avg_logprob": -0.20134540773787588, "compression_ratio": 1.6704545454545454, "no_speech_prob": 6.3376974139828235e-06}, {"id": 1041, "seek": 485860, "start": 4871.96, "end": 4876.72, "text": " We've already actually seen this example, Ethan Sutton, the sound classifier.", "tokens": [492, 600, 1217, 767, 1612, 341, 1365, 11, 23984, 40492, 1756, 11, 264, 1626, 1508, 9902, 13], "temperature": 0.0, "avg_logprob": -0.20134540773787588, "compression_ratio": 1.6704545454545454, "no_speech_prob": 6.3376974139828235e-06}, {"id": 1042, "seek": 485860, "start": 4876.72, "end": 4879.240000000001, "text": " And I mentioned it was state of the art.", "tokens": [400, 286, 2835, 309, 390, 1785, 295, 264, 1523, 13], "temperature": 0.0, "avg_logprob": -0.20134540773787588, "compression_ratio": 1.6704545454545454, "no_speech_prob": 6.3376974139828235e-06}, {"id": 1043, "seek": 485860, "start": 4879.240000000001, "end": 4882.88, "text": " He actually checked up the data sets website and found that he beat the state of the art", "tokens": [634, 767, 10033, 493, 264, 1412, 6352, 3144, 293, 1352, 300, 415, 4224, 264, 1785, 295, 264, 1523], "temperature": 0.0, "avg_logprob": -0.20134540773787588, "compression_ratio": 1.6704545454545454, "no_speech_prob": 6.3376974139828235e-06}, {"id": 1044, "seek": 485860, "start": 4882.88, "end": 4885.280000000001, "text": " for that.", "tokens": [337, 300, 13], "temperature": 0.0, "avg_logprob": -0.20134540773787588, "compression_ratio": 1.6704545454545454, "no_speech_prob": 6.3376974139828235e-06}, {"id": 1045, "seek": 488528, "start": 4885.28, "end": 4891.08, "text": " Elena Harley did human normal sequencing, so she was at Human Longagivity International.", "tokens": [39603, 34921, 630, 1952, 2710, 32693, 11, 370, 750, 390, 412, 10294, 8282, 559, 4253, 9157, 13], "temperature": 0.0, "avg_logprob": -0.21330621269311797, "compression_ratio": 1.4722222222222223, "no_speech_prob": 5.681681614078116e-06}, {"id": 1046, "seek": 488528, "start": 4891.08, "end": 4895.28, "text": " So she actually did three different really interesting pieces of cancer work during that", "tokens": [407, 750, 767, 630, 1045, 819, 534, 1880, 3755, 295, 5592, 589, 1830, 300], "temperature": 0.0, "avg_logprob": -0.21330621269311797, "compression_ratio": 1.4722222222222223, "no_speech_prob": 5.681681614078116e-06}, {"id": 1047, "seek": 488528, "start": 4895.28, "end": 4899.16, "text": " first course, if I remember correctly.", "tokens": [700, 1164, 11, 498, 286, 1604, 8944, 13], "temperature": 0.0, "avg_logprob": -0.21330621269311797, "compression_ratio": 1.4722222222222223, "no_speech_prob": 5.681681614078116e-06}, {"id": 1048, "seek": 488528, "start": 4899.16, "end": 4900.5199999999995, "text": " And I showed you this picture before.", "tokens": [400, 286, 4712, 291, 341, 3036, 949, 13], "temperature": 0.0, "avg_logprob": -0.21330621269311797, "compression_ratio": 1.4722222222222223, "no_speech_prob": 5.681681614078116e-06}, {"id": 1049, "seek": 488528, "start": 4900.5199999999995, "end": 4907.28, "text": " What I didn't mention is actually this student, Gleb, was a software developer at Splunk,", "tokens": [708, 286, 994, 380, 2152, 307, 767, 341, 3107, 11, 460, 28512, 11, 390, 257, 4722, 10754, 412, 19788, 3197, 11], "temperature": 0.0, "avg_logprob": -0.21330621269311797, "compression_ratio": 1.4722222222222223, "no_speech_prob": 5.681681614078116e-06}, {"id": 1050, "seek": 488528, "start": 4907.28, "end": 4909.5199999999995, "text": " big NASDAQ listed company.", "tokens": [955, 10182, 7509, 48, 10052, 2237, 13], "temperature": 0.0, "avg_logprob": -0.21330621269311797, "compression_ratio": 1.4722222222222223, "no_speech_prob": 5.681681614078116e-06}, {"id": 1051, "seek": 490952, "start": 4909.52, "end": 4915.400000000001, "text": " And this student project he did turned into a new patented product at Splunk and a big", "tokens": [400, 341, 3107, 1716, 415, 630, 3574, 666, 257, 777, 1947, 6003, 1674, 412, 19788, 3197, 293, 257, 955], "temperature": 0.0, "avg_logprob": -0.1793601765352137, "compression_ratio": 1.5614035087719298, "no_speech_prob": 2.9940727017674362e-06}, {"id": 1052, "seek": 490952, "start": 4915.400000000001, "end": 4918.040000000001, "text": " blog post and the whole thing turned out to be really cool.", "tokens": [6968, 2183, 293, 264, 1379, 551, 3574, 484, 281, 312, 534, 1627, 13], "temperature": 0.0, "avg_logprob": -0.1793601765352137, "compression_ratio": 1.5614035087719298, "no_speech_prob": 2.9940727017674362e-06}, {"id": 1053, "seek": 490952, "start": 4918.040000000001, "end": 4924.4800000000005, "text": " It's basically something to identify fraudsters using image recognition with these pictures", "tokens": [467, 311, 1936, 746, 281, 5876, 14560, 10130, 1228, 3256, 11150, 365, 613, 5242], "temperature": 0.0, "avg_logprob": -0.1793601765352137, "compression_ratio": 1.5614035087719298, "no_speech_prob": 2.9940727017674362e-06}, {"id": 1054, "seek": 490952, "start": 4924.4800000000005, "end": 4925.4800000000005, "text": " we discussed.", "tokens": [321, 7152, 13], "temperature": 0.0, "avg_logprob": -0.1793601765352137, "compression_ratio": 1.5614035087719298, "no_speech_prob": 2.9940727017674362e-06}, {"id": 1055, "seek": 490952, "start": 4925.4800000000005, "end": 4929.4400000000005, "text": " One of our students built this startup called Envision.", "tokens": [1485, 295, 527, 1731, 3094, 341, 18578, 1219, 2193, 6763, 13], "temperature": 0.0, "avg_logprob": -0.1793601765352137, "compression_ratio": 1.5614035087719298, "no_speech_prob": 2.9940727017674362e-06}, {"id": 1056, "seek": 490952, "start": 4929.4400000000005, "end": 4934.56, "text": " Anyway, there's been lots and lots of examples.", "tokens": [5684, 11, 456, 311, 668, 3195, 293, 3195, 295, 5110, 13], "temperature": 0.0, "avg_logprob": -0.1793601765352137, "compression_ratio": 1.5614035087719298, "no_speech_prob": 2.9940727017674362e-06}, {"id": 1057, "seek": 493456, "start": 4934.56, "end": 4942.88, "text": " So all of this is to say, have a go at starting something, create something you think would", "tokens": [407, 439, 295, 341, 307, 281, 584, 11, 362, 257, 352, 412, 2891, 746, 11, 1884, 746, 291, 519, 576], "temperature": 0.0, "avg_logprob": -0.10344045502798897, "compression_ratio": 1.6818181818181819, "no_speech_prob": 6.745752671122318e-06}, {"id": 1058, "seek": 493456, "start": 4942.88, "end": 4946.320000000001, "text": " be fun or interesting and share it in the forum.", "tokens": [312, 1019, 420, 1880, 293, 2073, 309, 294, 264, 17542, 13], "temperature": 0.0, "avg_logprob": -0.10344045502798897, "compression_ratio": 1.6818181818181819, "no_speech_prob": 6.745752671122318e-06}, {"id": 1059, "seek": 493456, "start": 4946.320000000001, "end": 4951.04, "text": " If you're a total beginner with Python, then start with something simple.", "tokens": [759, 291, 434, 257, 3217, 22080, 365, 15329, 11, 550, 722, 365, 746, 2199, 13], "temperature": 0.0, "avg_logprob": -0.10344045502798897, "compression_ratio": 1.6818181818181819, "no_speech_prob": 6.745752671122318e-06}, {"id": 1060, "seek": 493456, "start": 4951.04, "end": 4953.400000000001, "text": " But I think you'll find people very encouraging.", "tokens": [583, 286, 519, 291, 603, 915, 561, 588, 14580, 13], "temperature": 0.0, "avg_logprob": -0.10344045502798897, "compression_ratio": 1.6818181818181819, "no_speech_prob": 6.745752671122318e-06}, {"id": 1061, "seek": 493456, "start": 4953.400000000001, "end": 4958.080000000001, "text": " And if you've done this a few times before, then try to push yourself a little bit further.", "tokens": [400, 498, 291, 600, 1096, 341, 257, 1326, 1413, 949, 11, 550, 853, 281, 2944, 1803, 257, 707, 857, 3052, 13], "temperature": 0.0, "avg_logprob": -0.10344045502798897, "compression_ratio": 1.6818181818181819, "no_speech_prob": 6.745752671122318e-06}, {"id": 1062, "seek": 493456, "start": 4958.080000000001, "end": 4962.200000000001, "text": " And don't forget to look at the quiz questions at the end of the book and see if you can", "tokens": [400, 500, 380, 2870, 281, 574, 412, 264, 15450, 1651, 412, 264, 917, 295, 264, 1446, 293, 536, 498, 291, 393], "temperature": 0.0, "avg_logprob": -0.10344045502798897, "compression_ratio": 1.6818181818181819, "no_speech_prob": 6.745752671122318e-06}, {"id": 1063, "seek": 496220, "start": 4962.2, "end": 4964.96, "text": " answer them all correctly.", "tokens": [1867, 552, 439, 8944, 13], "temperature": 0.0, "avg_logprob": -0.3519933651655148, "compression_ratio": 1.326086956521739, "no_speech_prob": 2.7951627998845652e-05}, {"id": 1064, "seek": 496220, "start": 4964.96, "end": 4968.5199999999995, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.3519933651655148, "compression_ratio": 1.326086956521739, "no_speech_prob": 2.7951627998845652e-05}, {"id": 1065, "seek": 496220, "start": 4968.5199999999995, "end": 4969.96, "text": " Thanks everybody so much for coming.", "tokens": [2561, 2201, 370, 709, 337, 1348, 13], "temperature": 0.0, "avg_logprob": -0.3519933651655148, "compression_ratio": 1.326086956521739, "no_speech_prob": 2.7951627998845652e-05}, {"id": 1066, "seek": 496220, "start": 4969.96, "end": 4970.96, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.3519933651655148, "compression_ratio": 1.326086956521739, "no_speech_prob": 2.7951627998845652e-05}, {"id": 1067, "seek": 496220, "start": 4970.96, "end": 4971.96, "text": " Thanks so much for coming everybody.", "tokens": [2561, 370, 709, 337, 1348, 2201, 13], "temperature": 0.0, "avg_logprob": -0.3519933651655148, "compression_ratio": 1.326086956521739, "no_speech_prob": 2.7951627998845652e-05}, {"id": 1068, "seek": 497196, "start": 4971.96, "end": 4992.96, "text": " Bye.", "tokens": [50364, 4621, 13, 51414], "temperature": 0.0, "avg_logprob": -0.7235438346862793, "compression_ratio": 0.3333333333333333, "no_speech_prob": 4.44473625975661e-05}], "language": "en"}