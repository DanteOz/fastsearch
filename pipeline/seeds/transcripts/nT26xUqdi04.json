{"text": " All right. So yes, Serada, you're going to talk about the APL competition. I will share my screen because you've put lots of cool stuff there. Share. I think that is a really fast way to learn and try to find a problem while learning it. Okay, so there's a whole thread here. Aetanlis had some very nice solutions, I thought. Yeah. Yeah, tell us about your experience of, look at you, all gold cups. I love the way we've gone from like, that's set up a study session to try and learn all the glyphs. And Serada's like, no, let's get 10 trophies in the Cropem solving competition. Good on you. Yeah, I think really stretched myself, but I think I learned a lot during the process as well. So I asked a lot of questions, tried to read a lot of documentation, but I still found the documentation quite technical. I really learned from the example. And again, really helpful, point me to some direction, but some of them I still can't get past my head. But his video actually really good in the past competition example. Oh, Adam's videos? Yes. Yeah. Yeah, and now someone starts sharing, mine is not the fastest one. Definitely I want to learn from other people, but it's really good to force me to think different to using APL to solve the problem. Even this is very short and small problem, but it's really good exercise. And yeah, I learned a lot. This is a great thread because it kind of, this, I mean, this particular post here actually goes through each of his solutions and he seemed to have quite, especially this one really elegant solution. Yeah, I actually put, we put together so people can go into the lookbook and breaking down the solution as well. And other person, our AK1567 here. I'll tell you what, let me make this a wiki. Yeah. There you go. So maybe you can put a link to it there. Yeah. So I, at the moment, I put all people's solution in one place and then I profile them to see who is the fastest solution so people can learn from the best. Awesome. I love it. Did anybody else try more of the competition questions? No. Me neither. I did give it a try, but I got stuck on the second or third question and it was just about comparing arrays. And then I looked at the solutions and people are using the built-in glyphs, not equals, where I tried to go via each entry. So I think that this is super helpful that people are sharing so freely their solutions. I looked at the website and it seems that the competition for this year is not available right now. Like you cannot go onto the website and submit your results yet, but there are competitions for the previous years that are available. So hopefully this year's will be available soon as well. Okay. That feedback loop where you can try to solve a problem yourself first and then you can look for help on the forums. I think that's... And my recommendation for these would be spend at least a couple of hours on a problem yourself before looking up the solution and also try doing all the solutions, like all the questions. So if you get stuck on one, kind of like if you're doing a math test at school, you're just like, okay, let's move on to the next one. And then yeah, you'll learn more by seeing the dumb things it turns out you did or vice versa, than just reading about it. Jeremy, I have a suggestion or question maybe. I'm curious to know how you were planning to use APL in your workflow. I asked a question on the forum and somebody suggested pineapple, which I find very useful for APL to be used in Python and vice versa. And just to clarify, you're talking about PYNAPL, right? Yes, PYNAPL. Yeah. Right. I got stuck installing it on Mac, but that's another separate issue. If this is the way that you envision using it in your workflow, meaning that a little bit of a clever code to clean up data and do pre-post-processing in the entire workflow, inside Python, I thought it might be useful to experience that with you as a part of the walkthrough. Sure. Before I do, let me just say hello, because I think you're a new face. How do we pronounce your name? Is it Ramin? Ramin. Yes. And where are you joining us from today? San Diego. San Diego. Oh, that's a lovely town. That's great. I've been watching your videos carefully and pausing them and doing stuff in the background. Well, thanks for joining us. So I think of this in a similar way. I don't know if any of you have read Richard Feynman's autobiography. He described how he liked following problems that he found interesting. And so he got interested in watching people spinning plates on their fingers at the university cafeteria, and he decided to take some time to study the motion of those plates, because that was the thing that seemed most interesting to him at the time. Later on, it turned out that the math and physics he developed in thinking about that problem turned out to be exactly what was needed to solve some critical foundational problems in quantum mechanics. I have a similar thing about APL. Things interesting and fun. My interest is in it mainly as a notation. I have always been kind of interested in mathematics, but the notation has always gotten my way. I think I must be particularly anal or something, because I just find it so imprecise, or the meaning of it varies from paper to paper or area to area, and I don't know how to look things up and find out exactly what it means. And then when I try to find out exactly what this thing means, it's hard to pin down. And so I ended up at university studying metamathematics and formal logic, and that helped me a little bit, because I kind of went back to, well, what is mathematics? And building it up from scratch. But I keep getting stuck on notation. And also I'm somebody who's highly intuitive, so I really like to experiment with things. I like to know if my experiments are right. So I'm really envious of how, I don't know if you've seen Adam on the forum, is able to take an APL expression and treat it like an algebra. He'll go through symbol replacement exercises, and at each point he'll say, here's the symbol replacement rule I'm doing, and manipulate an APL expression into a new APL expression that clarifies them situation. I want to, yeah, so he's my hero. I want to be like that. I want to be able to treat it as an algebra, you know, and use it to deepen my understanding of things. I mean, I use it a lot right now to teach my daughter math. And so she's six and her friend is eight. And so I tutor them in math. And we have been doing a series of books called Beast Academy, which were kind of great cartoons, super fun, very compelling for kids. And they kind of as their math developed, we ran out of those and we needed new things to cover. You know, so like most of the math stuff they're doing is around like grade 11, grade 12 now. And the problem is that materials are boring, dry presentation. And even the like the Beast Academy books, it's by a group called Art of Problem Solving. And they have fantastic materials, but their highest, their high school level stuff is called Art of Problem Solving, and it removes all the comics and all the cool characters. And so it's not fun anymore. So, you know, a couple, you know, a few days ago, we were trying to cover a topic. And after 40 minutes, my daughter's just like, I'm so bored. You know, can't we do some APL? And I was like, oh, of course we can. We can do this exact topic with APL. So we just we stopped the video, opened up APL, and I said, okay, solve this math problem with APL. And then they're engaged again, and it's fun. And they're trying things out. And they're both sharing their screens so I can see them trying things. And then, you know, then we can think about, well, why did that work? And so, yeah, for me, it's kind of intellectual interest. And I feel like there's a. I can see it starting a revolution in education. Well, that's what Iverson thought, you know, and he, you know, he wrote this, these books with high school teachers and somewhere here, you know, here's a, okay. So here's a calculus book. All right. Let me turn my virtual background off. Okay. So here's a calculus book and it's a calculus book in APL. So, you know, it has exercises and derivations and whatnot, but rather than using normal math notation, it's all an APL, you know, and so it covers. Let's see. You know, it's got all kinds of interesting math problems and Taylor's series and. I'm surprised that students make it more compelling. APL is intimidating. Can be. Well, not when you're six, because, you know, when you're six, you're at the end of the year, you know, and everything's new and everything looks weird. You know, so the biggest problem in our math was when we hit sigma notation and I just couldn't get anywhere with it. Yeah. Because there's a lot of assumptions going on. Like I just thought it was such an easy thing. I thought, how could anybody ever find it difficult? But then when we got there with the kids, we were like, oh, I'm going to do this. But then when we got there with the kids, it's like, okay, well, there's this like implied loop where this index is like looping through the thing. And then the thing inside the index is like getting each value of that. And then there's this kind of like inserted sum. And it's just like, that's just a lot of abstractions going on. So when we did it in NumPy, that helped a lot, you know, but then when we did it in APL, we actually learned plus slash means insert plus between each pair of things in a sequence. You know, okay. So sigma's last step is it insert does plus slash and like you can try it and you can see it. And then we're like, okay. And then the thing that happens inside is an expression that gets evaluated. So yeah, it was much less intimidating to people who haven't yet learned normal math notation because this is a math notation that they could execute experiment with, has extremely well-defined rules. If they're not sure what something is, they can look it up and they help, you know. Okay. That was interesting. Thanks for explaining. Yeah, no worries. Okay. I am on... I just wanted to second like Adam's explanations are awesome. His rank operator, I use that all the time now. But yeah, he showed it on that one video. Yes. Yeah. Listening to the Arraycast podcast. Yes. Yeah, I have too. It's great. I don't know if you've got to it yet, but there's two somewhat recent episodes called Leading Axis Theory and Transpose. And they spent about three hours covering what Adam did, you know, in 45 minutes when he was here. It's so much better when you've got it visually. And I kind of listened to the episode and I was like, yeah, yeah, yeah, I know all that now. But it was interesting hearing him talk about Transpose as well as being as important as the rank stuff. So it might be a valuable thing to check out if you haven't seen it. Yeah. Okay, so I'll share my screen. This time we didn't forget. That's right. Can you believe that? Oh, also the concept of trains, I found them useful and non-intuitive. Yeah, we haven't got to that yet because we're trying to do all the glyphs first. But yes. Does anybody kind of remember, I guess, did we leave off in the middle of something? The last one was mostly Adam, so. Yeah. Okay, I guess we're kind of up to here. Okay. Actually, I wouldn't mind moving these from stuff we haven't done yet to stuff we are doing. Because it really belongs right at the top. Basic math operators. Oops. So what I might do is add this pipe operator or vertical bar operator. It's actually a pretty straightforward one. On the whole. Okay, so we're going to do vertical bar. And we type help. Oh, it's working. Never quite sure what's going to work on a new machine. Ah, so they call it style or vertical bar. Okay, I believe it's called magnitude. Yes, it is. All right, so. Unfortunately, because I'm using a Mac today, I do not have a screen I can draw on, which is a bummer. So hopefully we can find a picture. Of what magnitude is. Okay, so the magnitude of a complex number is how far away that complex number is from the origin. If you represent it as Cartesian coordinates. So if you've got a number a plus bi. So to remind you, I mean something like this. So if you've got a number a plus bi, so to remind you, I means the square root of minus one. And you can represent any. Any of these complex numbers using a single real a and a single real B. Even if you've got squares or square roots or multipliers or whatever, because you can always simplify it down to a real number part plus a real number times the square root of minus one. So this is basically any complex number you can represent in this form. And then you could draw it. And you can draw it by putting it on a Cartesian coordinate plane by going right by a units and then up by b units to the coordinate a comma b. Does that make sense so far? Anybody who's not, I think Radik, you're not said you're not so comfortable with complex stuff. Is this makes sense to you so far? Makes a lot of sense. Okay, so this is a triangle. It's a right angle triangle. And so how far away is this dot from the origin? Well, the answer is it's going to be the square root of a squared plus b squared because it's a right angle triangle and Pythagoras told us so. And so if you think about it, then let's what about this number here? This number here is one plus zero i, also known as one. So how far away is that from the origin? One, which is equal to the square root of one squared plus zero squared. What about this number here i? Okay, how far away is this? Well, square root of zero squared plus one squared also one. Okay, so the magnitude of a real number is the number itself. The magnitude of a real number is the number itself. The magnitude of a complex number is the size of the complex. Of the only imaginary part is the size of the imaginary component. It's a real number and a complex number more generally is root a squared plus b squared. So that's what this means. And to remind you, 3j4 is how you write three plus four i. So we could also do... Oh, and you know, in fact, let's do them all together now that we're getting fancy. Wait, what happened to my APL bar? So negatives, the distance that negative three is from the origin is three. And again, negative three squared is nine plus zero squared is nine. Square root of that is three. Okay, so dyadic, I think they call residual, yeah, residual modulus. I'll move that one down later. Okay, so modulus, so if we did... Oh, they've probably got some examples, we could still... So this tells you the residual you're left over with if you do two divided into seven. So in other words, seven divided by two is three, remainder one. 13 divided by 10 is one, but it's negative. So if you've got a negative right-hand side, then what they actually do is they go further. They treat that as being, they say that's two, remainder seven. Or else if you have a positive right-hand side, eight divided by two and a half is... How do we get negative two here? Is two... Is four remainder minus two. So like it with... I haven't really seen this idea before, but normally in school, remainders are done always positive. And they have a very clear answer, right? Which is 10 goes into 13 one time with three remainder, two goes into eight four times with zero remainder. But for negatives, you can kind of like overshoot it on the positive side or the negative side. And so in APL, if you have a negative right-hand side, if you have a negative left-hand side, you'll get a negative remainder. And if you have a positive left-hand side, you'll get a positive remainder. The reason this is also called modulus is because if you're like... If you're measuring the number of minutes past the hour, for example, then after... Let's go back a little bit so it doesn't go off the screen. Yeah, a bit messy, huh? Then after one second, the minute hand will be at one, after four seconds, minute hand will be at four, et cetera. After 59 minutes, the minute hand will be at 59. After 60 minutes, the minute hand will be at zero. So clocks count modulo 60. So modulo is the same as what's the remainder if you divide by this. And modular arithmetic is used in cryptography a lot and it kind of comes up all over the place. If you're measuring the angle, you know, that's made as you turn around a circle, if you go more than 360 degrees, you come back where you come from. So it's kind of like those measurements will be modulo 360. Does that make sense? Okay, so then times... Monadic times tells you the direction. And if you look here, the number one, there's a real number, is to the right. And so you could say its direction is one. The number negative five is to the left. You could say its direction is minus one. The number five i, its direction is straight up. You could say its direction is i. So the direction of a number is if you draw a vector from the origin out to that number on this plane, whereabouts would it cross the unit circle? And so in most languages that don't deal particularly with complex numbers, we have a function called sine, S-I-G-N, that returns the sine of a number. And it normally returns one if it's positive and minus one if it's negative. For real numbers, monadic times is exactly that. Look at this, monadic times 3.1, in other words, sine 3.1 is one. Monadic times of negative two, in other words, sine of negative two is negative one. And then normally in most languages, sine of zero is called zero. So so far this is all exactly the same as sine. It's called that in Python, isn't it? Oh, I guess it doesn't. NumPy has sine. So why doesn't Python have a sine function? Yeah, I don't remember. Nobody could agree on it. Just Python. Huh? Was that? Yeah, I don't remember using sine without NumPy in Python. Yeah, it says there was a patch, but it wasn't accepted because they couldn't agree on what it should return. So they didn't do it at all. That's funny. So in NumPy, I wonder if it's true that Python has a sine function. Yeah, I think it does. It does. It does. It does. It does. It does. So in NumPy, I wonder if NumPy's sine handles complex numbers. That looks like something slightly different. That's interesting. All right. So I kind of like this about APL. I find really consistently it tends to extend basic ideas from other languages and from math to cover more things in a more general way. Which I think is really cool. Okay. I guess I should mention complex numbers here. Okay. So here we can see. So what is the magnitude of 3 plus 4i? So the magnitude of 3 plus 4i, well, we would start with the number 3 plus 4i, and then we would divide it by its length, which we know is magnitude of 3 plus 4i. And that gives us 0.6 plus 0.8i. So that's going to be the, you know, so 0.6 comma 0.8 would be its coordinates on the unit circle down, you know, somewhere around here in this case. I'm not going to include it here, but I think, you know, as Adam said, I'm just trying to think of a way to do this as a train. And I think that's a good way to do this. So I'm going to start with the number 3 plus 4i. So that's going to be the number 3 plus 4i. I'm trying to think of a way to do this as a train. I think this should already work, right? So when you have two of these next to each other, it first of all applies this. Is that right? I can't remember which border it's in. Yeah. First of all, applies that. I think it just, right. So you actually- You can just delete the left-hand side maybe? You can't just delete the left. Oh, well, you could delete the left-hand side if you're in j, but APL doesn't work that way. APL would treat this as being the reciprocal of the magnitude. If you put parentheses on it? Still no. That's the way j works. It's not the way APL works. Okay. You're thinking of a type of train called a hook. But in APL, you would need to use the self-operator. So you would do that with the self-operator, which I can't remember how to write it. So I'm going to have to find it. It's the tilde, dioresis. Capital P, I think. Capital P? Capital T. Does anybody know how to make that work? Working on it. Oh, did I get it wrong? Yeah, I got it right. F tilde, dioresis y equals y F tilde, F y. F tilde, dioresis y equals y F tilde, F y. F tilde, dioresis y equals y F tilde, F y. I could answer you last week. Divide by zero. All right. Well, that's an interesting puzzle for somebody to figure out. Is the binding for the complex number less high than? No, this binds as tightly as upper bar or full stop would as a decimal or yeah, or whatever. I'm 99.99% sure. Yeah.Ne\u89e3 for F. Oh, that's interesting. So, oh, oh, I see the issue. The issue is that there's an implied parentheses here. Because we go right to left. Actually, if I did this, that would break. And so I have a feeling what I actually need and I what I should do really is look it up properly. Yeah, but what we actually need is beside. Because beside. Yes, beside is the thing which behaves exactly the way we want. And it's the same as putting two things next to each other. As long as you don't mess with the kind of execution order. So here's beside it applies the monadic G first and then applies the dyadic to the result, which is what we want here. So, I think that means all right now, what do we expect this to work? So it's going to go. I don't know if it's going to work. So then given it's found an operator, it then needs to find a function and it's found a function here, but I guess it's not a complete function because it's got an operator to its left. And so it keeps looking until it's got a complete function. Something like that. I'd love to see like a really clear documentation of this parsing rule, like how is this passed? Yeah, I think you're right. And then there's a way to do it with train and without the last symbol. I forget what it's called. Without this symbol. Right, without the tilde. I'm pretty sure you're thinking of J. It's got a hook in J. I'm pretty sure APL does not have such a thing. See the response from the Adam gave to my computing the mean of a vector. One of them was equivalent to this and one of them the last. No, no, that was different. He had a fork. A fork is a list of three verbs in a row. So you're thinking of something else, which is the definition of mean, which is very interesting, but we are kind of skipping ahead, which is equal to the sum divided by the count, which is tally, which I can't remember how to type. Double quote. Okay, that's the mean. Okay. And this is different because we here we've got one, two, three verbs. And the definition of this three verbs in a row. It's called a fork. And what it does is it applies this to omega. And this to omega, and this to the two results. So, some of omega divided by count of omega. But as I said, we're skipping ahead. Jeremy, there's an option you can turn on with the box option to show trains and functions is like parse trees. I posted it in the chat. Okay, great. And presumably that would just be if we remove this. Why wouldn't you always want that? It's beautiful, isn't it? Yeah. Still a little bit of a pain kind of deciphering where all of the arguments are supposed to end up, but yeah, well, not too bad, right? Because you've got to, this is obviously going to apply to the right hand side. So I guess that's okay. So, and yeah, but I mean, you can always and you have, I think that those pictures they have is nice if like what the site does. Right. Well, let's put that at the top maybe. I've actually got a complex section there. So I should move the complex description. Or just maybe I'll copy it. Okay. Maybe it would even be useful to see for J0. So I think we can now get back to our stuff for 2022 APL competition. So that was our kind of group by thing. Okay. So that, and did we have monadic and dyadic? This is dyadic. And this is, oh, right, right, right. We've got the monadic and dyadic versions of the function created by the operator. Cool. All right. So the next in our list of these two, let's do this one then, shall we? Oops, something funny happened there. So this is called key. Okay. Okay. This is called left shoe. I like it. Cool name. I changed the wrong name. Okay. Monadic is enclosed and dyadic has a couple of meanings. So this enclosed thing happens, it gets used all the time. And it seems to be something like what J calls boxing or kind of creating like references or something. Okay. So we're basically, that's a list. And this is row of that list. Row of the list. Okay. And then, so this is a list with three things in it. This is a list with two things in it. And the second of the things in the list is the list two, three. Does that make sense? And then this is going to be a list with one thing in it. So, this is a list. Oh, this is a scale. Is it subtle. It's a, Oh, this is a scalar. That's interesting. Yes. Okay. Of course. This is a scalar. So it's empty. It's got an empty rank. And empty shape. Sorry. I think that's interesting. Right. And close. How do I type in close? See. Right. Right. Right. Okay. So that's what it does. Is it creates a scalar or an atom. And then it's going to be a list containing a list. And you've got to do that because arrays kind of like conceptually only contain atoms. So when you. Strand it like this, it's actually creating. A scalar. Which I think. Is the same as concatenating. It is say, okay. So if I can catinate. The scale of one. With the atom. And close to three. And then I can add a vector. That's what this is. Does that make sense? It's like a void pointer or. A loop pointer. Has anybody used this? It seems to come up quite a bit. Did you use it in any of your solutions? Or anybody else used it? Yeah. Especially for grouping. Partition thinking. Yeah. Tell us more. I think that is your example. Sorry. I think that is your example. Sorry. It's just a simple. But once you put the element is a one chunk, and then you can operate individually. I just got somebody at the door. Just a moment. Sorry about that. I guess we see it in the docs quite a bit. So. Yeah. Sorry. Sorry. I was going to say. Using it on a single. What is it? A single scalar. Does not enclose anything. So that might be a case to look at. Great. So it does nothing. Yeah. Okay. Why is a scalar? It's a scalar. Otherwise, it has a depth. It's one greater than the magnitude of the depth of Y. And you can add axes. And you can add axes. And we're definitely not old fashioned. So that's fine. So dyadic. Oh, God, I don't know. What's our quad ML equal to? Let's just focus on the default. Shall we? Okay. Okay. Partitioned in close. APL Wiki has better examples. Okay. Okay. Okay. Where's the good examples? Is the first one, the other, do you consider that the other core? Well, it's got a plus before it, which is. Or is that what it is? Is it a operator? Oh, there's an optional K. Oh, that's the axis. I'm confused about this. They're. They're doing plus. No, this is, this is, this is monadic. Because when you have two functions in a row, it applies this monadically and then dyadically to the result with the left-hand side. And this is a good example for monadic because it's not intuitive. So I'm not sure if it's going to be a monadically. I didn't think it's going to do that. Oh. Maybe. Let's consider that. Okay. So. All right. So that's. I'm going to turn the right into a scalar. And so then it's going to be. Yeah. Okay. So if you did one, two, three plus one, it would add one to each of these three things. So if you do one, two, three, plus an enclosed array, it adds this to each of these three things. Which is actually very, yes, that's very instructive. And helpful. Hmm. Oh, we could have used this with a tally operator. For that DNA competition question. So I think that would be a good idea. For five, six would be a CGT and the left-hand side would have been the DNA sequence. Sounds interesting. Great. Okay. Well, we're kind of out of time. So. What do the dyadic version next time? Thanks everybody. Bye. Bye. Thanks everybody.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 14.8, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.3507698546064661, "compression_ratio": 1.2016129032258065, "no_speech_prob": 0.07107696682214737}, {"id": 1, "seek": 0, "start": 14.8, "end": 19.92, "text": " So yes, Serada, you're going to talk about the APL competition.", "tokens": [407, 2086, 11, 4210, 1538, 11, 291, 434, 516, 281, 751, 466, 264, 5372, 43, 6211, 13], "temperature": 0.0, "avg_logprob": -0.3507698546064661, "compression_ratio": 1.2016129032258065, "no_speech_prob": 0.07107696682214737}, {"id": 2, "seek": 0, "start": 19.92, "end": 23.92, "text": " I will share my screen because you've put lots of cool stuff there.", "tokens": [286, 486, 2073, 452, 2568, 570, 291, 600, 829, 3195, 295, 1627, 1507, 456, 13], "temperature": 0.0, "avg_logprob": -0.3507698546064661, "compression_ratio": 1.2016129032258065, "no_speech_prob": 0.07107696682214737}, {"id": 3, "seek": 0, "start": 23.92, "end": 25.240000000000002, "text": " Share.", "tokens": [14945, 13], "temperature": 0.0, "avg_logprob": -0.3507698546064661, "compression_ratio": 1.2016129032258065, "no_speech_prob": 0.07107696682214737}, {"id": 4, "seek": 2524, "start": 25.24, "end": 34.12, "text": " I think that is a really fast way to learn and try to find a problem while learning it.", "tokens": [286, 519, 300, 307, 257, 534, 2370, 636, 281, 1466, 293, 853, 281, 915, 257, 1154, 1339, 2539, 309, 13], "temperature": 0.0, "avg_logprob": -0.31738451548985075, "compression_ratio": 1.3211678832116789, "no_speech_prob": 0.00048654116108082235}, {"id": 5, "seek": 2524, "start": 37.32, "end": 42.2, "text": " Okay, so there's a whole thread here.", "tokens": [1033, 11, 370, 456, 311, 257, 1379, 7207, 510, 13], "temperature": 0.0, "avg_logprob": -0.31738451548985075, "compression_ratio": 1.3211678832116789, "no_speech_prob": 0.00048654116108082235}, {"id": 6, "seek": 2524, "start": 45.239999999999995, "end": 48.04, "text": " Aetanlis had some very nice solutions, I thought.", "tokens": [316, 302, 282, 75, 271, 632, 512, 588, 1481, 6547, 11, 286, 1194, 13], "temperature": 0.0, "avg_logprob": -0.31738451548985075, "compression_ratio": 1.3211678832116789, "no_speech_prob": 0.00048654116108082235}, {"id": 7, "seek": 2524, "start": 48.92, "end": 49.16, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.31738451548985075, "compression_ratio": 1.3211678832116789, "no_speech_prob": 0.00048654116108082235}, {"id": 8, "seek": 4916, "start": 49.16, "end": 56.519999999999996, "text": " Yeah, tell us about your experience of, look at you, all gold cups.", "tokens": [865, 11, 980, 505, 466, 428, 1752, 295, 11, 574, 412, 291, 11, 439, 3821, 13381, 13], "temperature": 0.0, "avg_logprob": -0.2061896089647637, "compression_ratio": 1.5851851851851853, "no_speech_prob": 0.00014415461919270456}, {"id": 9, "seek": 4916, "start": 56.519999999999996, "end": 61.64, "text": " I love the way we've gone from like, that's set up a study session to try and learn all the glyphs.", "tokens": [286, 959, 264, 636, 321, 600, 2780, 490, 411, 11, 300, 311, 992, 493, 257, 2979, 5481, 281, 853, 293, 1466, 439, 264, 22633, 950, 82, 13], "temperature": 0.0, "avg_logprob": -0.2061896089647637, "compression_ratio": 1.5851851851851853, "no_speech_prob": 0.00014415461919270456}, {"id": 10, "seek": 4916, "start": 61.64, "end": 66.52, "text": " And Serada's like, no, let's get 10 trophies in the Cropem solving competition.", "tokens": [400, 4210, 1538, 311, 411, 11, 572, 11, 718, 311, 483, 1266, 45583, 530, 294, 264, 383, 1513, 443, 12606, 6211, 13], "temperature": 0.0, "avg_logprob": -0.2061896089647637, "compression_ratio": 1.5851851851851853, "no_speech_prob": 0.00014415461919270456}, {"id": 11, "seek": 4916, "start": 66.52, "end": 67.08, "text": " Good on you.", "tokens": [2205, 322, 291, 13], "temperature": 0.0, "avg_logprob": -0.2061896089647637, "compression_ratio": 1.5851851851851853, "no_speech_prob": 0.00014415461919270456}, {"id": 12, "seek": 4916, "start": 68.19999999999999, "end": 74.03999999999999, "text": " Yeah, I think really stretched myself, but I think I learned a lot during the process as well.", "tokens": [865, 11, 286, 519, 534, 23563, 2059, 11, 457, 286, 519, 286, 3264, 257, 688, 1830, 264, 1399, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.2061896089647637, "compression_ratio": 1.5851851851851853, "no_speech_prob": 0.00014415461919270456}, {"id": 13, "seek": 4916, "start": 74.03999999999999, "end": 77.56, "text": " So I asked a lot of questions, tried to read a lot of documentation, but", "tokens": [407, 286, 2351, 257, 688, 295, 1651, 11, 3031, 281, 1401, 257, 688, 295, 14333, 11, 457], "temperature": 0.0, "avg_logprob": -0.2061896089647637, "compression_ratio": 1.5851851851851853, "no_speech_prob": 0.00014415461919270456}, {"id": 14, "seek": 7756, "start": 77.56, "end": 80.92, "text": " I still found the documentation quite technical.", "tokens": [286, 920, 1352, 264, 14333, 1596, 6191, 13], "temperature": 0.0, "avg_logprob": -0.38254170540051585, "compression_ratio": 1.507936507936508, "no_speech_prob": 0.00018216774333268404}, {"id": 15, "seek": 7756, "start": 80.92, "end": 82.92, "text": " I really learned from the example.", "tokens": [286, 534, 3264, 490, 264, 1365, 13], "temperature": 0.0, "avg_logprob": -0.38254170540051585, "compression_ratio": 1.507936507936508, "no_speech_prob": 0.00018216774333268404}, {"id": 16, "seek": 7756, "start": 82.92, "end": 89.72, "text": " And again, really helpful, point me to some direction, but some of them I still can't get past my head.", "tokens": [400, 797, 11, 534, 4961, 11, 935, 385, 281, 512, 3513, 11, 457, 512, 295, 552, 286, 920, 393, 380, 483, 1791, 452, 1378, 13], "temperature": 0.0, "avg_logprob": -0.38254170540051585, "compression_ratio": 1.507936507936508, "no_speech_prob": 0.00018216774333268404}, {"id": 17, "seek": 7756, "start": 89.72, "end": 97.4, "text": " But his video actually really good in the past competition example.", "tokens": [583, 702, 960, 767, 534, 665, 294, 264, 1791, 6211, 1365, 13], "temperature": 0.0, "avg_logprob": -0.38254170540051585, "compression_ratio": 1.507936507936508, "no_speech_prob": 0.00018216774333268404}, {"id": 18, "seek": 7756, "start": 97.4, "end": 99.4, "text": " Oh, Adam's videos?", "tokens": [876, 11, 7938, 311, 2145, 30], "temperature": 0.0, "avg_logprob": -0.38254170540051585, "compression_ratio": 1.507936507936508, "no_speech_prob": 0.00018216774333268404}, {"id": 19, "seek": 7756, "start": 99.4, "end": 101.4, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.38254170540051585, "compression_ratio": 1.507936507936508, "no_speech_prob": 0.00018216774333268404}, {"id": 20, "seek": 7756, "start": 101.4, "end": 101.4, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.38254170540051585, "compression_ratio": 1.507936507936508, "no_speech_prob": 0.00018216774333268404}, {"id": 21, "seek": 10140, "start": 101.4, "end": 108.60000000000001, "text": " Yeah, and now someone starts sharing, mine is not the fastest one.", "tokens": [865, 11, 293, 586, 1580, 3719, 5414, 11, 3892, 307, 406, 264, 14573, 472, 13], "temperature": 0.0, "avg_logprob": -0.16379848961691254, "compression_ratio": 1.6072874493927125, "no_speech_prob": 0.00013540906365960836}, {"id": 22, "seek": 10140, "start": 108.60000000000001, "end": 115.08000000000001, "text": " Definitely I want to learn from other people, but it's really good to force me to think different", "tokens": [12151, 286, 528, 281, 1466, 490, 661, 561, 11, 457, 309, 311, 534, 665, 281, 3464, 385, 281, 519, 819], "temperature": 0.0, "avg_logprob": -0.16379848961691254, "compression_ratio": 1.6072874493927125, "no_speech_prob": 0.00013540906365960836}, {"id": 23, "seek": 10140, "start": 116.68, "end": 119.48, "text": " to using APL to solve the problem.", "tokens": [281, 1228, 5372, 43, 281, 5039, 264, 1154, 13], "temperature": 0.0, "avg_logprob": -0.16379848961691254, "compression_ratio": 1.6072874493927125, "no_speech_prob": 0.00013540906365960836}, {"id": 24, "seek": 10140, "start": 119.48, "end": 123.24000000000001, "text": " Even this is very short and small problem, but it's really good exercise.", "tokens": [2754, 341, 307, 588, 2099, 293, 1359, 1154, 11, 457, 309, 311, 534, 665, 5380, 13], "temperature": 0.0, "avg_logprob": -0.16379848961691254, "compression_ratio": 1.6072874493927125, "no_speech_prob": 0.00013540906365960836}, {"id": 25, "seek": 10140, "start": 123.24000000000001, "end": 124.76, "text": " And yeah, I learned a lot.", "tokens": [400, 1338, 11, 286, 3264, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.16379848961691254, "compression_ratio": 1.6072874493927125, "no_speech_prob": 0.00013540906365960836}, {"id": 26, "seek": 10140, "start": 124.76, "end": 129.32, "text": " This is a great thread because it kind of, this, I mean, this particular post here actually goes", "tokens": [639, 307, 257, 869, 7207, 570, 309, 733, 295, 11, 341, 11, 286, 914, 11, 341, 1729, 2183, 510, 767, 1709], "temperature": 0.0, "avg_logprob": -0.16379848961691254, "compression_ratio": 1.6072874493927125, "no_speech_prob": 0.00013540906365960836}, {"id": 27, "seek": 12932, "start": 129.32, "end": 136.6, "text": " through each of his solutions and he seemed to have quite, especially this one really elegant solution.", "tokens": [807, 1184, 295, 702, 6547, 293, 415, 6576, 281, 362, 1596, 11, 2318, 341, 472, 534, 21117, 3827, 13], "temperature": 0.0, "avg_logprob": -0.233140233051346, "compression_ratio": 1.4876847290640394, "no_speech_prob": 0.0001333506515948102}, {"id": 28, "seek": 12932, "start": 137.95999999999998, "end": 144.51999999999998, "text": " Yeah, I actually put, we put together so people can go into the lookbook and breaking down", "tokens": [865, 11, 286, 767, 829, 11, 321, 829, 1214, 370, 561, 393, 352, 666, 264, 574, 2939, 293, 7697, 760], "temperature": 0.0, "avg_logprob": -0.233140233051346, "compression_ratio": 1.4876847290640394, "no_speech_prob": 0.0001333506515948102}, {"id": 29, "seek": 12932, "start": 145.16, "end": 146.76, "text": " the solution as well.", "tokens": [264, 3827, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.233140233051346, "compression_ratio": 1.4876847290640394, "no_speech_prob": 0.0001333506515948102}, {"id": 30, "seek": 12932, "start": 146.76, "end": 152.68, "text": " And other person, our AK1567 here.", "tokens": [400, 661, 954, 11, 527, 24789, 5211, 22452, 510, 13], "temperature": 0.0, "avg_logprob": -0.233140233051346, "compression_ratio": 1.4876847290640394, "no_speech_prob": 0.0001333506515948102}, {"id": 31, "seek": 12932, "start": 152.68, "end": 154.76, "text": " I'll tell you what, let me make this a wiki.", "tokens": [286, 603, 980, 291, 437, 11, 718, 385, 652, 341, 257, 261, 9850, 13], "temperature": 0.0, "avg_logprob": -0.233140233051346, "compression_ratio": 1.4876847290640394, "no_speech_prob": 0.0001333506515948102}, {"id": 32, "seek": 15476, "start": 154.76, "end": 164.76, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.7775816122690836, "compression_ratio": 0.7037037037037037, "no_speech_prob": 0.00038505453267134726}, {"id": 33, "seek": 15476, "start": 179.79999999999998, "end": 180.28, "text": " There you go.", "tokens": [821, 291, 352, 13], "temperature": 0.0, "avg_logprob": -0.7775816122690836, "compression_ratio": 0.7037037037037037, "no_speech_prob": 0.00038505453267134726}, {"id": 34, "seek": 18028, "start": 180.28, "end": 182.12, "text": " So maybe you can put a link to it there.", "tokens": [407, 1310, 291, 393, 829, 257, 2113, 281, 309, 456, 13], "temperature": 0.0, "avg_logprob": -0.36334134270163143, "compression_ratio": 1.4764397905759161, "no_speech_prob": 0.00021628671674989164}, {"id": 35, "seek": 18028, "start": 182.12, "end": 182.62, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.36334134270163143, "compression_ratio": 1.4764397905759161, "no_speech_prob": 0.00021628671674989164}, {"id": 36, "seek": 18028, "start": 183.96, "end": 190.52, "text": " So I, at the moment, I put all people's solution in one place and then I profile them to see who", "tokens": [407, 286, 11, 412, 264, 1623, 11, 286, 829, 439, 561, 311, 3827, 294, 472, 1081, 293, 550, 286, 7964, 552, 281, 536, 567], "temperature": 0.0, "avg_logprob": -0.36334134270163143, "compression_ratio": 1.4764397905759161, "no_speech_prob": 0.00021628671674989164}, {"id": 37, "seek": 18028, "start": 190.52, "end": 193.4, "text": " is the fastest solution so people can learn from the best.", "tokens": [307, 264, 14573, 3827, 370, 561, 393, 1466, 490, 264, 1151, 13], "temperature": 0.0, "avg_logprob": -0.36334134270163143, "compression_ratio": 1.4764397905759161, "no_speech_prob": 0.00021628671674989164}, {"id": 38, "seek": 18028, "start": 194.2, "end": 194.68, "text": " Awesome.", "tokens": [10391, 13], "temperature": 0.0, "avg_logprob": -0.36334134270163143, "compression_ratio": 1.4764397905759161, "no_speech_prob": 0.00021628671674989164}, {"id": 39, "seek": 18028, "start": 195.24, "end": 195.72, "text": " I love it.", "tokens": [286, 959, 309, 13], "temperature": 0.0, "avg_logprob": -0.36334134270163143, "compression_ratio": 1.4764397905759161, "no_speech_prob": 0.00021628671674989164}, {"id": 40, "seek": 18028, "start": 196.6, "end": 200.92000000000002, "text": " Did anybody else try more of the competition questions?", "tokens": [2589, 4472, 1646, 853, 544, 295, 264, 6211, 1651, 30], "temperature": 0.0, "avg_logprob": -0.36334134270163143, "compression_ratio": 1.4764397905759161, "no_speech_prob": 0.00021628671674989164}, {"id": 41, "seek": 18028, "start": 205.88, "end": 206.52, "text": " No.", "tokens": [883, 13], "temperature": 0.0, "avg_logprob": -0.36334134270163143, "compression_ratio": 1.4764397905759161, "no_speech_prob": 0.00021628671674989164}, {"id": 42, "seek": 20652, "start": 206.52, "end": 211.08, "text": " Me neither.", "tokens": [1923, 9662, 13], "temperature": 0.0, "avg_logprob": -0.16084734151061153, "compression_ratio": 1.4244186046511629, "no_speech_prob": 6.914749974384904e-05}, {"id": 43, "seek": 20652, "start": 211.08, "end": 220.36, "text": " I did give it a try, but I got stuck on the second or third question and it was just about", "tokens": [286, 630, 976, 309, 257, 853, 11, 457, 286, 658, 5541, 322, 264, 1150, 420, 2636, 1168, 293, 309, 390, 445, 466], "temperature": 0.0, "avg_logprob": -0.16084734151061153, "compression_ratio": 1.4244186046511629, "no_speech_prob": 6.914749974384904e-05}, {"id": 44, "seek": 20652, "start": 221.0, "end": 221.96, "text": " comparing arrays.", "tokens": [15763, 41011, 13], "temperature": 0.0, "avg_logprob": -0.16084734151061153, "compression_ratio": 1.4244186046511629, "no_speech_prob": 6.914749974384904e-05}, {"id": 45, "seek": 20652, "start": 222.60000000000002, "end": 228.36, "text": " And then I looked at the solutions and people are using the built-in glyphs, not equals,", "tokens": [400, 550, 286, 2956, 412, 264, 6547, 293, 561, 366, 1228, 264, 3094, 12, 259, 22633, 950, 82, 11, 406, 6915, 11], "temperature": 0.0, "avg_logprob": -0.16084734151061153, "compression_ratio": 1.4244186046511629, "no_speech_prob": 6.914749974384904e-05}, {"id": 46, "seek": 20652, "start": 229.96, "end": 232.92000000000002, "text": " where I tried to go via each entry.", "tokens": [689, 286, 3031, 281, 352, 5766, 1184, 8729, 13], "temperature": 0.0, "avg_logprob": -0.16084734151061153, "compression_ratio": 1.4244186046511629, "no_speech_prob": 6.914749974384904e-05}, {"id": 47, "seek": 23292, "start": 232.92, "end": 239.16, "text": " So I think that this is super helpful that people are sharing so freely their solutions.", "tokens": [407, 286, 519, 300, 341, 307, 1687, 4961, 300, 561, 366, 5414, 370, 16433, 641, 6547, 13], "temperature": 0.0, "avg_logprob": -0.261716365814209, "compression_ratio": 1.7079646017699115, "no_speech_prob": 0.00011051820183638483}, {"id": 48, "seek": 23292, "start": 239.16, "end": 245.64, "text": " I looked at the website and it seems that the competition for this year is not available", "tokens": [286, 2956, 412, 264, 3144, 293, 309, 2544, 300, 264, 6211, 337, 341, 1064, 307, 406, 2435], "temperature": 0.0, "avg_logprob": -0.261716365814209, "compression_ratio": 1.7079646017699115, "no_speech_prob": 0.00011051820183638483}, {"id": 49, "seek": 23292, "start": 245.64, "end": 246.35999999999999, "text": " right now.", "tokens": [558, 586, 13], "temperature": 0.0, "avg_logprob": -0.261716365814209, "compression_ratio": 1.7079646017699115, "no_speech_prob": 0.00011051820183638483}, {"id": 50, "seek": 23292, "start": 246.35999999999999, "end": 252.92, "text": " Like you cannot go onto the website and submit your results yet, but there are competitions", "tokens": [1743, 291, 2644, 352, 3911, 264, 3144, 293, 10315, 428, 3542, 1939, 11, 457, 456, 366, 26185], "temperature": 0.0, "avg_logprob": -0.261716365814209, "compression_ratio": 1.7079646017699115, "no_speech_prob": 0.00011051820183638483}, {"id": 51, "seek": 23292, "start": 252.92, "end": 255.48, "text": " for the previous years that are available.", "tokens": [337, 264, 3894, 924, 300, 366, 2435, 13], "temperature": 0.0, "avg_logprob": -0.261716365814209, "compression_ratio": 1.7079646017699115, "no_speech_prob": 0.00011051820183638483}, {"id": 52, "seek": 23292, "start": 255.48, "end": 258.44, "text": " So hopefully this year's will be available soon as well.", "tokens": [407, 4696, 341, 1064, 311, 486, 312, 2435, 2321, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.261716365814209, "compression_ratio": 1.7079646017699115, "no_speech_prob": 0.00011051820183638483}, {"id": 53, "seek": 23292, "start": 258.44, "end": 258.91999999999996, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.261716365814209, "compression_ratio": 1.7079646017699115, "no_speech_prob": 0.00011051820183638483}, {"id": 54, "seek": 25892, "start": 258.92, "end": 264.44, "text": " That feedback loop where you can try to solve a problem yourself first and then you can", "tokens": [663, 5824, 6367, 689, 291, 393, 853, 281, 5039, 257, 1154, 1803, 700, 293, 550, 291, 393], "temperature": 0.0, "avg_logprob": -0.22785364412793926, "compression_ratio": 1.715481171548117, "no_speech_prob": 6.105960346758366e-05}, {"id": 55, "seek": 25892, "start": 264.44, "end": 265.72, "text": " look for help on the forums.", "tokens": [574, 337, 854, 322, 264, 26998, 13], "temperature": 0.0, "avg_logprob": -0.22785364412793926, "compression_ratio": 1.715481171548117, "no_speech_prob": 6.105960346758366e-05}, {"id": 56, "seek": 25892, "start": 265.72, "end": 266.52000000000004, "text": " I think that's...", "tokens": [286, 519, 300, 311, 485], "temperature": 0.0, "avg_logprob": -0.22785364412793926, "compression_ratio": 1.715481171548117, "no_speech_prob": 6.105960346758366e-05}, {"id": 57, "seek": 25892, "start": 266.52000000000004, "end": 274.52000000000004, "text": " And my recommendation for these would be spend at least a couple of hours on a problem yourself", "tokens": [400, 452, 11879, 337, 613, 576, 312, 3496, 412, 1935, 257, 1916, 295, 2496, 322, 257, 1154, 1803], "temperature": 0.0, "avg_logprob": -0.22785364412793926, "compression_ratio": 1.715481171548117, "no_speech_prob": 6.105960346758366e-05}, {"id": 58, "seek": 25892, "start": 274.52000000000004, "end": 283.08000000000004, "text": " before looking up the solution and also try doing all the solutions, like all the questions.", "tokens": [949, 1237, 493, 264, 3827, 293, 611, 853, 884, 439, 264, 6547, 11, 411, 439, 264, 1651, 13], "temperature": 0.0, "avg_logprob": -0.22785364412793926, "compression_ratio": 1.715481171548117, "no_speech_prob": 6.105960346758366e-05}, {"id": 59, "seek": 25892, "start": 283.72, "end": 287.24, "text": " So if you get stuck on one, kind of like if you're doing a math test at school, you're", "tokens": [407, 498, 291, 483, 5541, 322, 472, 11, 733, 295, 411, 498, 291, 434, 884, 257, 5221, 1500, 412, 1395, 11, 291, 434], "temperature": 0.0, "avg_logprob": -0.22785364412793926, "compression_ratio": 1.715481171548117, "no_speech_prob": 6.105960346758366e-05}, {"id": 60, "seek": 28724, "start": 287.24, "end": 289.56, "text": " just like, okay, let's move on to the next one.", "tokens": [445, 411, 11, 1392, 11, 718, 311, 1286, 322, 281, 264, 958, 472, 13], "temperature": 0.0, "avg_logprob": -0.2597987747192383, "compression_ratio": 1.534412955465587, "no_speech_prob": 2.0452427634154446e-05}, {"id": 61, "seek": 28724, "start": 289.56, "end": 297.16, "text": " And then yeah, you'll learn more by seeing the dumb things it turns out you did or vice", "tokens": [400, 550, 1338, 11, 291, 603, 1466, 544, 538, 2577, 264, 10316, 721, 309, 4523, 484, 291, 630, 420, 11964], "temperature": 0.0, "avg_logprob": -0.2597987747192383, "compression_ratio": 1.534412955465587, "no_speech_prob": 2.0452427634154446e-05}, {"id": 62, "seek": 28724, "start": 297.16, "end": 300.12, "text": " versa, than just reading about it.", "tokens": [25650, 11, 813, 445, 3760, 466, 309, 13], "temperature": 0.0, "avg_logprob": -0.2597987747192383, "compression_ratio": 1.534412955465587, "no_speech_prob": 2.0452427634154446e-05}, {"id": 63, "seek": 28724, "start": 300.12, "end": 303.96000000000004, "text": " Jeremy, I have a suggestion or question maybe.", "tokens": [17809, 11, 286, 362, 257, 16541, 420, 1168, 1310, 13], "temperature": 0.0, "avg_logprob": -0.2597987747192383, "compression_ratio": 1.534412955465587, "no_speech_prob": 2.0452427634154446e-05}, {"id": 64, "seek": 28724, "start": 303.96000000000004, "end": 308.68, "text": " I'm curious to know how you were planning to use APL in your workflow.", "tokens": [286, 478, 6369, 281, 458, 577, 291, 645, 5038, 281, 764, 5372, 43, 294, 428, 20993, 13], "temperature": 0.0, "avg_logprob": -0.2597987747192383, "compression_ratio": 1.534412955465587, "no_speech_prob": 2.0452427634154446e-05}, {"id": 65, "seek": 28724, "start": 308.68, "end": 314.36, "text": " I asked a question on the forum and somebody suggested pineapple, which I find very useful", "tokens": [286, 2351, 257, 1168, 322, 264, 17542, 293, 2618, 10945, 25740, 11, 597, 286, 915, 588, 4420], "temperature": 0.0, "avg_logprob": -0.2597987747192383, "compression_ratio": 1.534412955465587, "no_speech_prob": 2.0452427634154446e-05}, {"id": 66, "seek": 31436, "start": 314.36, "end": 317.72, "text": " for APL to be used in Python and vice versa.", "tokens": [337, 5372, 43, 281, 312, 1143, 294, 15329, 293, 11964, 25650, 13], "temperature": 0.0, "avg_logprob": -0.2782881941114153, "compression_ratio": 1.5204918032786885, "no_speech_prob": 1.0450093213876244e-05}, {"id": 67, "seek": 31436, "start": 317.72, "end": 321.16, "text": " And just to clarify, you're talking about PYNAPL, right?", "tokens": [400, 445, 281, 17594, 11, 291, 434, 1417, 466, 430, 22315, 4715, 43, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2782881941114153, "compression_ratio": 1.5204918032786885, "no_speech_prob": 1.0450093213876244e-05}, {"id": 68, "seek": 31436, "start": 321.16, "end": 323.16, "text": " Yes, PYNAPL.", "tokens": [1079, 11, 430, 22315, 4715, 43, 13], "temperature": 0.0, "avg_logprob": -0.2782881941114153, "compression_ratio": 1.5204918032786885, "no_speech_prob": 1.0450093213876244e-05}, {"id": 69, "seek": 31436, "start": 323.16, "end": 323.96000000000004, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2782881941114153, "compression_ratio": 1.5204918032786885, "no_speech_prob": 1.0450093213876244e-05}, {"id": 70, "seek": 31436, "start": 323.96000000000004, "end": 324.52000000000004, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.2782881941114153, "compression_ratio": 1.5204918032786885, "no_speech_prob": 1.0450093213876244e-05}, {"id": 71, "seek": 31436, "start": 324.52000000000004, "end": 328.36, "text": " I got stuck installing it on Mac, but that's another separate issue.", "tokens": [286, 658, 5541, 20762, 309, 322, 5707, 11, 457, 300, 311, 1071, 4994, 2734, 13], "temperature": 0.0, "avg_logprob": -0.2782881941114153, "compression_ratio": 1.5204918032786885, "no_speech_prob": 1.0450093213876244e-05}, {"id": 72, "seek": 31436, "start": 328.36, "end": 335.32, "text": " If this is the way that you envision using it in your workflow, meaning that a little", "tokens": [759, 341, 307, 264, 636, 300, 291, 24739, 1228, 309, 294, 428, 20993, 11, 3620, 300, 257, 707], "temperature": 0.0, "avg_logprob": -0.2782881941114153, "compression_ratio": 1.5204918032786885, "no_speech_prob": 1.0450093213876244e-05}, {"id": 73, "seek": 31436, "start": 335.32, "end": 342.68, "text": " bit of a clever code to clean up data and do pre-post-processing in the entire workflow,", "tokens": [857, 295, 257, 13494, 3089, 281, 2541, 493, 1412, 293, 360, 659, 12, 23744, 12, 41075, 278, 294, 264, 2302, 20993, 11], "temperature": 0.0, "avg_logprob": -0.2782881941114153, "compression_ratio": 1.5204918032786885, "no_speech_prob": 1.0450093213876244e-05}, {"id": 74, "seek": 34268, "start": 342.68, "end": 350.28000000000003, "text": " inside Python, I thought it might be useful to experience that with you as a part of the", "tokens": [1854, 15329, 11, 286, 1194, 309, 1062, 312, 4420, 281, 1752, 300, 365, 291, 382, 257, 644, 295, 264], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 75, "seek": 34268, "start": 350.28000000000003, "end": 351.32, "text": " walkthrough.", "tokens": [1792, 11529, 13], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 76, "seek": 34268, "start": 351.32, "end": 351.88, "text": " Sure.", "tokens": [4894, 13], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 77, "seek": 34268, "start": 351.88, "end": 354.92, "text": " Before I do, let me just say hello, because I think you're a new face.", "tokens": [4546, 286, 360, 11, 718, 385, 445, 584, 7751, 11, 570, 286, 519, 291, 434, 257, 777, 1851, 13], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 78, "seek": 34268, "start": 354.92, "end": 356.04, "text": " How do we pronounce your name?", "tokens": [1012, 360, 321, 19567, 428, 1315, 30], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 79, "seek": 34268, "start": 356.04, "end": 357.08, "text": " Is it Ramin?", "tokens": [1119, 309, 497, 7428, 30], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 80, "seek": 34268, "start": 357.08, "end": 357.88, "text": " Ramin.", "tokens": [497, 7428, 13], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 81, "seek": 34268, "start": 357.88, "end": 358.68, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 82, "seek": 34268, "start": 358.68, "end": 361.24, "text": " And where are you joining us from today?", "tokens": [400, 689, 366, 291, 5549, 505, 490, 965, 30], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 83, "seek": 34268, "start": 361.24, "end": 362.36, "text": " San Diego.", "tokens": [5271, 16377, 13], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 84, "seek": 34268, "start": 362.36, "end": 363.16, "text": " San Diego.", "tokens": [5271, 16377, 13], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 85, "seek": 34268, "start": 363.16, "end": 364.6, "text": " Oh, that's a lovely town.", "tokens": [876, 11, 300, 311, 257, 7496, 3954, 13], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 86, "seek": 34268, "start": 364.6, "end": 365.24, "text": " That's great.", "tokens": [663, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 87, "seek": 34268, "start": 365.24, "end": 370.2, "text": " I've been watching your videos carefully and pausing them and doing stuff in the background.", "tokens": [286, 600, 668, 1976, 428, 2145, 7500, 293, 2502, 7981, 552, 293, 884, 1507, 294, 264, 3678, 13], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 88, "seek": 34268, "start": 370.2, "end": 371.4, "text": " Well, thanks for joining us.", "tokens": [1042, 11, 3231, 337, 5549, 505, 13], "temperature": 0.0, "avg_logprob": -0.30095847447713214, "compression_ratio": 1.571917808219178, "no_speech_prob": 1.2803401659766678e-05}, {"id": 89, "seek": 37140, "start": 371.4, "end": 379.0, "text": " So I think of this in a similar way.", "tokens": [407, 286, 519, 295, 341, 294, 257, 2531, 636, 13], "temperature": 0.0, "avg_logprob": -0.11952783844687721, "compression_ratio": 1.4598930481283423, "no_speech_prob": 3.4241889807162806e-05}, {"id": 90, "seek": 37140, "start": 379.0, "end": 382.52, "text": " I don't know if any of you have read Richard Feynman's autobiography.", "tokens": [286, 500, 380, 458, 498, 604, 295, 291, 362, 1401, 9809, 46530, 77, 1601, 311, 45747, 5820, 13], "temperature": 0.0, "avg_logprob": -0.11952783844687721, "compression_ratio": 1.4598930481283423, "no_speech_prob": 3.4241889807162806e-05}, {"id": 91, "seek": 37140, "start": 383.56, "end": 391.47999999999996, "text": " He described how he liked following problems that he found interesting.", "tokens": [634, 7619, 577, 415, 4501, 3480, 2740, 300, 415, 1352, 1880, 13], "temperature": 0.0, "avg_logprob": -0.11952783844687721, "compression_ratio": 1.4598930481283423, "no_speech_prob": 3.4241889807162806e-05}, {"id": 92, "seek": 37140, "start": 391.47999999999996, "end": 398.52, "text": " And so he got interested in watching people spinning plates on their fingers at the university", "tokens": [400, 370, 415, 658, 3102, 294, 1976, 561, 15640, 14231, 322, 641, 7350, 412, 264, 5454], "temperature": 0.0, "avg_logprob": -0.11952783844687721, "compression_ratio": 1.4598930481283423, "no_speech_prob": 3.4241889807162806e-05}, {"id": 93, "seek": 39852, "start": 398.52, "end": 405.15999999999997, "text": " cafeteria, and he decided to take some time to study the motion of those plates, because", "tokens": [42230, 11, 293, 415, 3047, 281, 747, 512, 565, 281, 2979, 264, 5394, 295, 729, 14231, 11, 570], "temperature": 0.0, "avg_logprob": -0.08364347311166617, "compression_ratio": 1.6752136752136753, "no_speech_prob": 6.916478014318272e-05}, {"id": 94, "seek": 39852, "start": 405.15999999999997, "end": 408.12, "text": " that was the thing that seemed most interesting to him at the time.", "tokens": [300, 390, 264, 551, 300, 6576, 881, 1880, 281, 796, 412, 264, 565, 13], "temperature": 0.0, "avg_logprob": -0.08364347311166617, "compression_ratio": 1.6752136752136753, "no_speech_prob": 6.916478014318272e-05}, {"id": 95, "seek": 39852, "start": 409.32, "end": 414.03999999999996, "text": " Later on, it turned out that the math and physics he developed in thinking about that", "tokens": [11965, 322, 11, 309, 3574, 484, 300, 264, 5221, 293, 10649, 415, 4743, 294, 1953, 466, 300], "temperature": 0.0, "avg_logprob": -0.08364347311166617, "compression_ratio": 1.6752136752136753, "no_speech_prob": 6.916478014318272e-05}, {"id": 96, "seek": 39852, "start": 414.03999999999996, "end": 419.56, "text": " problem turned out to be exactly what was needed to solve some critical foundational", "tokens": [1154, 3574, 484, 281, 312, 2293, 437, 390, 2978, 281, 5039, 512, 4924, 32195], "temperature": 0.0, "avg_logprob": -0.08364347311166617, "compression_ratio": 1.6752136752136753, "no_speech_prob": 6.916478014318272e-05}, {"id": 97, "seek": 39852, "start": 419.56, "end": 421.15999999999997, "text": " problems in quantum mechanics.", "tokens": [2740, 294, 13018, 12939, 13], "temperature": 0.0, "avg_logprob": -0.08364347311166617, "compression_ratio": 1.6752136752136753, "no_speech_prob": 6.916478014318272e-05}, {"id": 98, "seek": 39852, "start": 424.2, "end": 426.91999999999996, "text": " I have a similar thing about APL.", "tokens": [286, 362, 257, 2531, 551, 466, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.08364347311166617, "compression_ratio": 1.6752136752136753, "no_speech_prob": 6.916478014318272e-05}, {"id": 99, "seek": 42692, "start": 426.92, "end": 428.44, "text": " Things interesting and fun.", "tokens": [9514, 1880, 293, 1019, 13], "temperature": 0.0, "avg_logprob": -0.1178230470226657, "compression_ratio": 1.5477707006369428, "no_speech_prob": 0.00015348190208896995}, {"id": 100, "seek": 42692, "start": 433.08000000000004, "end": 436.12, "text": " My interest is in it mainly as a notation.", "tokens": [1222, 1179, 307, 294, 309, 8704, 382, 257, 24657, 13], "temperature": 0.0, "avg_logprob": -0.1178230470226657, "compression_ratio": 1.5477707006369428, "no_speech_prob": 0.00015348190208896995}, {"id": 101, "seek": 42692, "start": 436.92, "end": 445.24, "text": " I have always been kind of interested in mathematics, but the notation has always", "tokens": [286, 362, 1009, 668, 733, 295, 3102, 294, 18666, 11, 457, 264, 24657, 575, 1009], "temperature": 0.0, "avg_logprob": -0.1178230470226657, "compression_ratio": 1.5477707006369428, "no_speech_prob": 0.00015348190208896995}, {"id": 102, "seek": 42692, "start": 446.12, "end": 446.92, "text": " gotten my way.", "tokens": [5768, 452, 636, 13], "temperature": 0.0, "avg_logprob": -0.1178230470226657, "compression_ratio": 1.5477707006369428, "no_speech_prob": 0.00015348190208896995}, {"id": 103, "seek": 42692, "start": 447.72, "end": 453.64, "text": " I think I must be particularly anal or something, because I just find it so", "tokens": [286, 519, 286, 1633, 312, 4098, 2624, 420, 746, 11, 570, 286, 445, 915, 309, 370], "temperature": 0.0, "avg_logprob": -0.1178230470226657, "compression_ratio": 1.5477707006369428, "no_speech_prob": 0.00015348190208896995}, {"id": 104, "seek": 45364, "start": 453.64, "end": 461.4, "text": " imprecise, or the meaning of it varies from paper to paper or area to area, and I don't", "tokens": [704, 13867, 908, 11, 420, 264, 3620, 295, 309, 21716, 490, 3035, 281, 3035, 420, 1859, 281, 1859, 11, 293, 286, 500, 380], "temperature": 0.0, "avg_logprob": -0.23309143588074252, "compression_ratio": 1.7165354330708662, "no_speech_prob": 8.610099030192941e-05}, {"id": 105, "seek": 45364, "start": 461.4, "end": 464.2, "text": " know how to look things up and find out exactly what it means.", "tokens": [458, 577, 281, 574, 721, 493, 293, 915, 484, 2293, 437, 309, 1355, 13], "temperature": 0.0, "avg_logprob": -0.23309143588074252, "compression_ratio": 1.7165354330708662, "no_speech_prob": 8.610099030192941e-05}, {"id": 106, "seek": 45364, "start": 464.2, "end": 468.52, "text": " And then when I try to find out exactly what this thing means, it's hard to pin down.", "tokens": [400, 550, 562, 286, 853, 281, 915, 484, 2293, 437, 341, 551, 1355, 11, 309, 311, 1152, 281, 5447, 760, 13], "temperature": 0.0, "avg_logprob": -0.23309143588074252, "compression_ratio": 1.7165354330708662, "no_speech_prob": 8.610099030192941e-05}, {"id": 107, "seek": 45364, "start": 468.52, "end": 473.4, "text": " And so I ended up at university studying metamathematics and formal logic, and that", "tokens": [400, 370, 286, 4590, 493, 412, 5454, 7601, 1131, 335, 998, 37541, 293, 9860, 9952, 11, 293, 300], "temperature": 0.0, "avg_logprob": -0.23309143588074252, "compression_ratio": 1.7165354330708662, "no_speech_prob": 8.610099030192941e-05}, {"id": 108, "seek": 45364, "start": 473.4, "end": 477.88, "text": " helped me a little bit, because I kind of went back to, well, what is mathematics?", "tokens": [4254, 385, 257, 707, 857, 11, 570, 286, 733, 295, 1437, 646, 281, 11, 731, 11, 437, 307, 18666, 30], "temperature": 0.0, "avg_logprob": -0.23309143588074252, "compression_ratio": 1.7165354330708662, "no_speech_prob": 8.610099030192941e-05}, {"id": 109, "seek": 45364, "start": 477.88, "end": 479.0, "text": " And building it up from scratch.", "tokens": [400, 2390, 309, 493, 490, 8459, 13], "temperature": 0.0, "avg_logprob": -0.23309143588074252, "compression_ratio": 1.7165354330708662, "no_speech_prob": 8.610099030192941e-05}, {"id": 110, "seek": 47900, "start": 479.0, "end": 483.8, "text": " But I keep getting stuck on notation.", "tokens": [583, 286, 1066, 1242, 5541, 322, 24657, 13], "temperature": 0.0, "avg_logprob": -0.26693599023551584, "compression_ratio": 1.5525291828793775, "no_speech_prob": 4.005591836175881e-05}, {"id": 111, "seek": 47900, "start": 483.8, "end": 489.8, "text": " And also I'm somebody who's highly intuitive, so I really like to experiment with things.", "tokens": [400, 611, 286, 478, 2618, 567, 311, 5405, 21769, 11, 370, 286, 534, 411, 281, 5120, 365, 721, 13], "temperature": 0.0, "avg_logprob": -0.26693599023551584, "compression_ratio": 1.5525291828793775, "no_speech_prob": 4.005591836175881e-05}, {"id": 112, "seek": 47900, "start": 489.8, "end": 491.8, "text": " I like to know if my experiments are right.", "tokens": [286, 411, 281, 458, 498, 452, 12050, 366, 558, 13], "temperature": 0.0, "avg_logprob": -0.26693599023551584, "compression_ratio": 1.5525291828793775, "no_speech_prob": 4.005591836175881e-05}, {"id": 113, "seek": 47900, "start": 492.6, "end": 497.8, "text": " So I'm really envious of how, I don't know if you've seen Adam on the forum, is able", "tokens": [407, 286, 478, 534, 465, 1502, 295, 577, 11, 286, 500, 380, 458, 498, 291, 600, 1612, 7938, 322, 264, 17542, 11, 307, 1075], "temperature": 0.0, "avg_logprob": -0.26693599023551584, "compression_ratio": 1.5525291828793775, "no_speech_prob": 4.005591836175881e-05}, {"id": 114, "seek": 47900, "start": 497.8, "end": 502.44, "text": " to take an APL expression and treat it like an algebra.", "tokens": [281, 747, 364, 5372, 43, 6114, 293, 2387, 309, 411, 364, 21989, 13], "temperature": 0.0, "avg_logprob": -0.26693599023551584, "compression_ratio": 1.5525291828793775, "no_speech_prob": 4.005591836175881e-05}, {"id": 115, "seek": 47900, "start": 502.44, "end": 507.4, "text": " He'll go through symbol replacement exercises, and at each point he'll say, here's the", "tokens": [634, 603, 352, 807, 5986, 14419, 11900, 11, 293, 412, 1184, 935, 415, 603, 584, 11, 510, 311, 264], "temperature": 0.0, "avg_logprob": -0.26693599023551584, "compression_ratio": 1.5525291828793775, "no_speech_prob": 4.005591836175881e-05}, {"id": 116, "seek": 50740, "start": 507.4, "end": 514.1999999999999, "text": " symbol replacement rule I'm doing, and manipulate an APL expression into a new APL expression", "tokens": [5986, 14419, 4978, 286, 478, 884, 11, 293, 20459, 364, 5372, 43, 6114, 666, 257, 777, 5372, 43, 6114], "temperature": 0.0, "avg_logprob": -0.2380077637821795, "compression_ratio": 1.5714285714285714, "no_speech_prob": 1.8629003534442745e-05}, {"id": 117, "seek": 50740, "start": 514.1999999999999, "end": 517.0, "text": " that clarifies them situation.", "tokens": [300, 6093, 11221, 552, 2590, 13], "temperature": 0.0, "avg_logprob": -0.2380077637821795, "compression_ratio": 1.5714285714285714, "no_speech_prob": 1.8629003534442745e-05}, {"id": 118, "seek": 50740, "start": 517.0, "end": 519.9599999999999, "text": " I want to, yeah, so he's my hero.", "tokens": [286, 528, 281, 11, 1338, 11, 370, 415, 311, 452, 5316, 13], "temperature": 0.0, "avg_logprob": -0.2380077637821795, "compression_ratio": 1.5714285714285714, "no_speech_prob": 1.8629003534442745e-05}, {"id": 119, "seek": 50740, "start": 519.9599999999999, "end": 520.76, "text": " I want to be like that.", "tokens": [286, 528, 281, 312, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.2380077637821795, "compression_ratio": 1.5714285714285714, "no_speech_prob": 1.8629003534442745e-05}, {"id": 120, "seek": 50740, "start": 520.76, "end": 528.04, "text": " I want to be able to treat it as an algebra, you know, and use it to deepen my understanding", "tokens": [286, 528, 281, 312, 1075, 281, 2387, 309, 382, 364, 21989, 11, 291, 458, 11, 293, 764, 309, 281, 45806, 452, 3701], "temperature": 0.0, "avg_logprob": -0.2380077637821795, "compression_ratio": 1.5714285714285714, "no_speech_prob": 1.8629003534442745e-05}, {"id": 121, "seek": 50740, "start": 528.04, "end": 528.84, "text": " of things.", "tokens": [295, 721, 13], "temperature": 0.0, "avg_logprob": -0.2380077637821795, "compression_ratio": 1.5714285714285714, "no_speech_prob": 1.8629003534442745e-05}, {"id": 122, "seek": 52884, "start": 528.84, "end": 538.6, "text": " I mean, I use it a lot right now to teach my daughter math.", "tokens": [286, 914, 11, 286, 764, 309, 257, 688, 558, 586, 281, 2924, 452, 4653, 5221, 13], "temperature": 0.0, "avg_logprob": -0.14094647907075428, "compression_ratio": 1.4342105263157894, "no_speech_prob": 2.2119356799521483e-05}, {"id": 123, "seek": 52884, "start": 541.5600000000001, "end": 545.4, "text": " And so she's six and her friend is eight.", "tokens": [400, 370, 750, 311, 2309, 293, 720, 1277, 307, 3180, 13], "temperature": 0.0, "avg_logprob": -0.14094647907075428, "compression_ratio": 1.4342105263157894, "no_speech_prob": 2.2119356799521483e-05}, {"id": 124, "seek": 52884, "start": 546.2, "end": 547.88, "text": " And so I tutor them in math.", "tokens": [400, 370, 286, 35613, 552, 294, 5221, 13], "temperature": 0.0, "avg_logprob": -0.14094647907075428, "compression_ratio": 1.4342105263157894, "no_speech_prob": 2.2119356799521483e-05}, {"id": 125, "seek": 52884, "start": 547.88, "end": 556.0400000000001, "text": " And we have been doing a series of books called Beast Academy, which were kind of great", "tokens": [400, 321, 362, 668, 884, 257, 2638, 295, 3642, 1219, 24100, 11735, 11, 597, 645, 733, 295, 869], "temperature": 0.0, "avg_logprob": -0.14094647907075428, "compression_ratio": 1.4342105263157894, "no_speech_prob": 2.2119356799521483e-05}, {"id": 126, "seek": 55604, "start": 556.04, "end": 561.9599999999999, "text": " cartoons, super fun, very compelling for kids.", "tokens": [34855, 11, 1687, 1019, 11, 588, 20050, 337, 2301, 13], "temperature": 0.0, "avg_logprob": -0.14651762140859473, "compression_ratio": 1.5766129032258065, "no_speech_prob": 2.6266656277584843e-05}, {"id": 127, "seek": 55604, "start": 562.8399999999999, "end": 568.8399999999999, "text": " And they kind of as their math developed, we ran out of those and we needed new things", "tokens": [400, 436, 733, 295, 382, 641, 5221, 4743, 11, 321, 5872, 484, 295, 729, 293, 321, 2978, 777, 721], "temperature": 0.0, "avg_logprob": -0.14651762140859473, "compression_ratio": 1.5766129032258065, "no_speech_prob": 2.6266656277584843e-05}, {"id": 128, "seek": 55604, "start": 568.8399999999999, "end": 569.3199999999999, "text": " to cover.", "tokens": [281, 2060, 13], "temperature": 0.0, "avg_logprob": -0.14651762140859473, "compression_ratio": 1.5766129032258065, "no_speech_prob": 2.6266656277584843e-05}, {"id": 129, "seek": 55604, "start": 569.3199999999999, "end": 576.04, "text": " You know, so like most of the math stuff they're doing is around like grade 11, grade 12 now.", "tokens": [509, 458, 11, 370, 411, 881, 295, 264, 5221, 1507, 436, 434, 884, 307, 926, 411, 7204, 2975, 11, 7204, 2272, 586, 13], "temperature": 0.0, "avg_logprob": -0.14651762140859473, "compression_ratio": 1.5766129032258065, "no_speech_prob": 2.6266656277584843e-05}, {"id": 130, "seek": 55604, "start": 576.04, "end": 579.9599999999999, "text": " And the problem is that materials are boring, dry presentation.", "tokens": [400, 264, 1154, 307, 300, 5319, 366, 9989, 11, 4016, 5860, 13], "temperature": 0.0, "avg_logprob": -0.14651762140859473, "compression_ratio": 1.5766129032258065, "no_speech_prob": 2.6266656277584843e-05}, {"id": 131, "seek": 57996, "start": 579.96, "end": 585.4000000000001, "text": " And even the like the Beast Academy books, it's by a group called Art of Problem Solving.", "tokens": [400, 754, 264, 411, 264, 24100, 11735, 3642, 11, 309, 311, 538, 257, 1594, 1219, 5735, 295, 11676, 7026, 798, 13], "temperature": 0.0, "avg_logprob": -0.13715931520623675, "compression_ratio": 1.650375939849624, "no_speech_prob": 8.137929398799315e-06}, {"id": 132, "seek": 57996, "start": 586.0400000000001, "end": 591.64, "text": " And they have fantastic materials, but their highest, their high school level stuff is", "tokens": [400, 436, 362, 5456, 5319, 11, 457, 641, 6343, 11, 641, 1090, 1395, 1496, 1507, 307], "temperature": 0.0, "avg_logprob": -0.13715931520623675, "compression_ratio": 1.650375939849624, "no_speech_prob": 8.137929398799315e-06}, {"id": 133, "seek": 57996, "start": 591.64, "end": 595.88, "text": " called Art of Problem Solving, and it removes all the comics and all the cool characters.", "tokens": [1219, 5735, 295, 11676, 7026, 798, 11, 293, 309, 30445, 439, 264, 18756, 293, 439, 264, 1627, 4342, 13], "temperature": 0.0, "avg_logprob": -0.13715931520623675, "compression_ratio": 1.650375939849624, "no_speech_prob": 8.137929398799315e-06}, {"id": 134, "seek": 57996, "start": 595.88, "end": 597.08, "text": " And so it's not fun anymore.", "tokens": [400, 370, 309, 311, 406, 1019, 3602, 13], "temperature": 0.0, "avg_logprob": -0.13715931520623675, "compression_ratio": 1.650375939849624, "no_speech_prob": 8.137929398799315e-06}, {"id": 135, "seek": 57996, "start": 597.88, "end": 604.12, "text": " So, you know, a couple, you know, a few days ago, we were trying to cover a topic.", "tokens": [407, 11, 291, 458, 11, 257, 1916, 11, 291, 458, 11, 257, 1326, 1708, 2057, 11, 321, 645, 1382, 281, 2060, 257, 4829, 13], "temperature": 0.0, "avg_logprob": -0.13715931520623675, "compression_ratio": 1.650375939849624, "no_speech_prob": 8.137929398799315e-06}, {"id": 136, "seek": 57996, "start": 605.1600000000001, "end": 608.9200000000001, "text": " And after 40 minutes, my daughter's just like, I'm so bored.", "tokens": [400, 934, 3356, 2077, 11, 452, 4653, 311, 445, 411, 11, 286, 478, 370, 13521, 13], "temperature": 0.0, "avg_logprob": -0.13715931520623675, "compression_ratio": 1.650375939849624, "no_speech_prob": 8.137929398799315e-06}, {"id": 137, "seek": 60892, "start": 608.92, "end": 610.8399999999999, "text": " You know, can't we do some APL?", "tokens": [509, 458, 11, 393, 380, 321, 360, 512, 5372, 43, 30], "temperature": 0.0, "avg_logprob": -0.12749283295825012, "compression_ratio": 1.6865079365079365, "no_speech_prob": 2.4290326109621674e-05}, {"id": 138, "seek": 60892, "start": 611.4799999999999, "end": 613.3199999999999, "text": " And I was like, oh, of course we can.", "tokens": [400, 286, 390, 411, 11, 1954, 11, 295, 1164, 321, 393, 13], "temperature": 0.0, "avg_logprob": -0.12749283295825012, "compression_ratio": 1.6865079365079365, "no_speech_prob": 2.4290326109621674e-05}, {"id": 139, "seek": 60892, "start": 613.3199999999999, "end": 615.3199999999999, "text": " We can do this exact topic with APL.", "tokens": [492, 393, 360, 341, 1900, 4829, 365, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.12749283295825012, "compression_ratio": 1.6865079365079365, "no_speech_prob": 2.4290326109621674e-05}, {"id": 140, "seek": 60892, "start": 615.88, "end": 621.8, "text": " So we just we stopped the video, opened up APL, and I said, okay, solve this math problem", "tokens": [407, 321, 445, 321, 5936, 264, 960, 11, 5625, 493, 5372, 43, 11, 293, 286, 848, 11, 1392, 11, 5039, 341, 5221, 1154], "temperature": 0.0, "avg_logprob": -0.12749283295825012, "compression_ratio": 1.6865079365079365, "no_speech_prob": 2.4290326109621674e-05}, {"id": 141, "seek": 60892, "start": 621.8, "end": 622.36, "text": " with APL.", "tokens": [365, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.12749283295825012, "compression_ratio": 1.6865079365079365, "no_speech_prob": 2.4290326109621674e-05}, {"id": 142, "seek": 60892, "start": 623.0, "end": 625.0799999999999, "text": " And then they're engaged again, and it's fun.", "tokens": [400, 550, 436, 434, 8237, 797, 11, 293, 309, 311, 1019, 13], "temperature": 0.0, "avg_logprob": -0.12749283295825012, "compression_ratio": 1.6865079365079365, "no_speech_prob": 2.4290326109621674e-05}, {"id": 143, "seek": 60892, "start": 625.0799999999999, "end": 626.1999999999999, "text": " And they're trying things out.", "tokens": [400, 436, 434, 1382, 721, 484, 13], "temperature": 0.0, "avg_logprob": -0.12749283295825012, "compression_ratio": 1.6865079365079365, "no_speech_prob": 2.4290326109621674e-05}, {"id": 144, "seek": 60892, "start": 626.1999999999999, "end": 630.36, "text": " And they're both sharing their screens so I can see them trying things.", "tokens": [400, 436, 434, 1293, 5414, 641, 11171, 370, 286, 393, 536, 552, 1382, 721, 13], "temperature": 0.0, "avg_logprob": -0.12749283295825012, "compression_ratio": 1.6865079365079365, "no_speech_prob": 2.4290326109621674e-05}, {"id": 145, "seek": 60892, "start": 630.36, "end": 634.04, "text": " And then, you know, then we can think about, well, why did that work?", "tokens": [400, 550, 11, 291, 458, 11, 550, 321, 393, 519, 466, 11, 731, 11, 983, 630, 300, 589, 30], "temperature": 0.0, "avg_logprob": -0.12749283295825012, "compression_ratio": 1.6865079365079365, "no_speech_prob": 2.4290326109621674e-05}, {"id": 146, "seek": 63404, "start": 634.04, "end": 641.0799999999999, "text": " And so, yeah, for me, it's kind of intellectual interest.", "tokens": [400, 370, 11, 1338, 11, 337, 385, 11, 309, 311, 733, 295, 12576, 1179, 13], "temperature": 0.0, "avg_logprob": -0.19948722576272898, "compression_ratio": 1.5526315789473684, "no_speech_prob": 2.3545597287011333e-05}, {"id": 147, "seek": 63404, "start": 641.0799999999999, "end": 642.4399999999999, "text": " And I feel like there's a.", "tokens": [400, 286, 841, 411, 456, 311, 257, 13], "temperature": 0.0, "avg_logprob": -0.19948722576272898, "compression_ratio": 1.5526315789473684, "no_speech_prob": 2.3545597287011333e-05}, {"id": 148, "seek": 63404, "start": 644.5999999999999, "end": 648.1999999999999, "text": " I can see it starting a revolution in education.", "tokens": [286, 393, 536, 309, 2891, 257, 8894, 294, 3309, 13], "temperature": 0.0, "avg_logprob": -0.19948722576272898, "compression_ratio": 1.5526315789473684, "no_speech_prob": 2.3545597287011333e-05}, {"id": 149, "seek": 63404, "start": 649.56, "end": 655.8, "text": " Well, that's what Iverson thought, you know, and he, you know, he wrote this,", "tokens": [1042, 11, 300, 311, 437, 286, 840, 266, 1194, 11, 291, 458, 11, 293, 415, 11, 291, 458, 11, 415, 4114, 341, 11], "temperature": 0.0, "avg_logprob": -0.19948722576272898, "compression_ratio": 1.5526315789473684, "no_speech_prob": 2.3545597287011333e-05}, {"id": 150, "seek": 63404, "start": 656.52, "end": 662.68, "text": " these books with high school teachers and somewhere here, you know, here's a, okay.", "tokens": [613, 3642, 365, 1090, 1395, 6023, 293, 4079, 510, 11, 291, 458, 11, 510, 311, 257, 11, 1392, 13], "temperature": 0.0, "avg_logprob": -0.19948722576272898, "compression_ratio": 1.5526315789473684, "no_speech_prob": 2.3545597287011333e-05}, {"id": 151, "seek": 66268, "start": 662.68, "end": 663.88, "text": " So here's a calculus book.", "tokens": [407, 510, 311, 257, 33400, 1446, 13], "temperature": 0.0, "avg_logprob": -0.3305028011924342, "compression_ratio": 1.644808743169399, "no_speech_prob": 9.969969141820911e-06}, {"id": 152, "seek": 66268, "start": 665.0799999999999, "end": 665.64, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.3305028011924342, "compression_ratio": 1.644808743169399, "no_speech_prob": 9.969969141820911e-06}, {"id": 153, "seek": 66268, "start": 665.64, "end": 667.16, "text": " Let me turn my virtual background off.", "tokens": [961, 385, 1261, 452, 6374, 3678, 766, 13], "temperature": 0.0, "avg_logprob": -0.3305028011924342, "compression_ratio": 1.644808743169399, "no_speech_prob": 9.969969141820911e-06}, {"id": 154, "seek": 66268, "start": 669.4, "end": 669.9599999999999, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.3305028011924342, "compression_ratio": 1.644808743169399, "no_speech_prob": 9.969969141820911e-06}, {"id": 155, "seek": 66268, "start": 669.9599999999999, "end": 674.12, "text": " So here's a calculus book and it's a calculus book in APL.", "tokens": [407, 510, 311, 257, 33400, 1446, 293, 309, 311, 257, 33400, 1446, 294, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.3305028011924342, "compression_ratio": 1.644808743169399, "no_speech_prob": 9.969969141820911e-06}, {"id": 156, "seek": 66268, "start": 675.0799999999999, "end": 683.9599999999999, "text": " So, you know, it has exercises and derivations and whatnot, but rather than using normal", "tokens": [407, 11, 291, 458, 11, 309, 575, 11900, 293, 10151, 763, 293, 25882, 11, 457, 2831, 813, 1228, 2710], "temperature": 0.0, "avg_logprob": -0.3305028011924342, "compression_ratio": 1.644808743169399, "no_speech_prob": 9.969969141820911e-06}, {"id": 157, "seek": 66268, "start": 683.9599999999999, "end": 689.0799999999999, "text": " math notation, it's all an APL, you know, and so it covers.", "tokens": [5221, 24657, 11, 309, 311, 439, 364, 5372, 43, 11, 291, 458, 11, 293, 370, 309, 10538, 13], "temperature": 0.0, "avg_logprob": -0.3305028011924342, "compression_ratio": 1.644808743169399, "no_speech_prob": 9.969969141820911e-06}, {"id": 158, "seek": 66268, "start": 689.9599999999999, "end": 690.5999999999999, "text": " Let's see.", "tokens": [961, 311, 536, 13], "temperature": 0.0, "avg_logprob": -0.3305028011924342, "compression_ratio": 1.644808743169399, "no_speech_prob": 9.969969141820911e-06}, {"id": 159, "seek": 69060, "start": 690.6, "end": 699.88, "text": " You know, it's got all kinds of interesting math problems and Taylor's series and.", "tokens": [509, 458, 11, 309, 311, 658, 439, 3685, 295, 1880, 5221, 2740, 293, 12060, 311, 2638, 293, 13], "temperature": 0.0, "avg_logprob": -0.4513487097335188, "compression_ratio": 1.4566473988439306, "no_speech_prob": 7.408917554130312e-06}, {"id": 160, "seek": 69060, "start": 701.08, "end": 704.2, "text": " I'm surprised that students make it more compelling.", "tokens": [286, 478, 6100, 300, 1731, 652, 309, 544, 20050, 13], "temperature": 0.0, "avg_logprob": -0.4513487097335188, "compression_ratio": 1.4566473988439306, "no_speech_prob": 7.408917554130312e-06}, {"id": 161, "seek": 69060, "start": 704.9200000000001, "end": 706.52, "text": " APL is intimidating.", "tokens": [5372, 43, 307, 29714, 13], "temperature": 0.0, "avg_logprob": -0.4513487097335188, "compression_ratio": 1.4566473988439306, "no_speech_prob": 7.408917554130312e-06}, {"id": 162, "seek": 69060, "start": 706.52, "end": 707.48, "text": " Can be.", "tokens": [1664, 312, 13], "temperature": 0.0, "avg_logprob": -0.4513487097335188, "compression_ratio": 1.4566473988439306, "no_speech_prob": 7.408917554130312e-06}, {"id": 163, "seek": 69060, "start": 707.48, "end": 716.12, "text": " Well, not when you're six, because, you know, when you're six, you're at the end of the", "tokens": [1042, 11, 406, 562, 291, 434, 2309, 11, 570, 11, 291, 458, 11, 562, 291, 434, 2309, 11, 291, 434, 412, 264, 917, 295, 264], "temperature": 0.0, "avg_logprob": -0.4513487097335188, "compression_ratio": 1.4566473988439306, "no_speech_prob": 7.408917554130312e-06}, {"id": 164, "seek": 71612, "start": 716.12, "end": 720.84, "text": " year, you know, and everything's new and everything looks weird.", "tokens": [1064, 11, 291, 458, 11, 293, 1203, 311, 777, 293, 1203, 1542, 3657, 13], "temperature": 0.0, "avg_logprob": -0.49246166063391644, "compression_ratio": 1.641732283464567, "no_speech_prob": 2.2471636839327402e-05}, {"id": 165, "seek": 71612, "start": 720.84, "end": 729.24, "text": " You know, so the biggest problem in our math was when we hit sigma notation and I just", "tokens": [509, 458, 11, 370, 264, 3880, 1154, 294, 527, 5221, 390, 562, 321, 2045, 12771, 24657, 293, 286, 445], "temperature": 0.0, "avg_logprob": -0.49246166063391644, "compression_ratio": 1.641732283464567, "no_speech_prob": 2.2471636839327402e-05}, {"id": 166, "seek": 71612, "start": 729.24, "end": 730.36, "text": " couldn't get anywhere with it.", "tokens": [2809, 380, 483, 4992, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.49246166063391644, "compression_ratio": 1.641732283464567, "no_speech_prob": 2.2471636839327402e-05}, {"id": 167, "seek": 71612, "start": 730.36, "end": 732.36, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.49246166063391644, "compression_ratio": 1.641732283464567, "no_speech_prob": 2.2471636839327402e-05}, {"id": 168, "seek": 71612, "start": 732.36, "end": 737.5600000000001, "text": " Because there's a lot of assumptions going on.", "tokens": [1436, 456, 311, 257, 688, 295, 17695, 516, 322, 13], "temperature": 0.0, "avg_logprob": -0.49246166063391644, "compression_ratio": 1.641732283464567, "no_speech_prob": 2.2471636839327402e-05}, {"id": 169, "seek": 71612, "start": 737.5600000000001, "end": 739.8, "text": " Like I just thought it was such an easy thing.", "tokens": [1743, 286, 445, 1194, 309, 390, 1270, 364, 1858, 551, 13], "temperature": 0.0, "avg_logprob": -0.49246166063391644, "compression_ratio": 1.641732283464567, "no_speech_prob": 2.2471636839327402e-05}, {"id": 170, "seek": 71612, "start": 739.8, "end": 741.64, "text": " I thought, how could anybody ever find it difficult?", "tokens": [286, 1194, 11, 577, 727, 4472, 1562, 915, 309, 2252, 30], "temperature": 0.0, "avg_logprob": -0.49246166063391644, "compression_ratio": 1.641732283464567, "no_speech_prob": 2.2471636839327402e-05}, {"id": 171, "seek": 71612, "start": 741.64, "end": 744.6800000000001, "text": " But then when we got there with the kids, we were like, oh, I'm going to do this.", "tokens": [583, 550, 562, 321, 658, 456, 365, 264, 2301, 11, 321, 645, 411, 11, 1954, 11, 286, 478, 516, 281, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.49246166063391644, "compression_ratio": 1.641732283464567, "no_speech_prob": 2.2471636839327402e-05}, {"id": 172, "seek": 74468, "start": 744.68, "end": 747.8, "text": " But then when we got there with the kids, it's like, okay, well, there's this like", "tokens": [583, 550, 562, 321, 658, 456, 365, 264, 2301, 11, 309, 311, 411, 11, 1392, 11, 731, 11, 456, 311, 341, 411], "temperature": 0.0, "avg_logprob": -0.0805462405212924, "compression_ratio": 1.8654708520179373, "no_speech_prob": 1.3844569366483483e-05}, {"id": 173, "seek": 74468, "start": 748.4399999999999, "end": 751.7199999999999, "text": " implied loop where this index is like looping through the thing.", "tokens": [32614, 6367, 689, 341, 8186, 307, 411, 6367, 278, 807, 264, 551, 13], "temperature": 0.0, "avg_logprob": -0.0805462405212924, "compression_ratio": 1.8654708520179373, "no_speech_prob": 1.3844569366483483e-05}, {"id": 174, "seek": 74468, "start": 751.7199999999999, "end": 755.4, "text": " And then the thing inside the index is like getting each value of that.", "tokens": [400, 550, 264, 551, 1854, 264, 8186, 307, 411, 1242, 1184, 2158, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.0805462405212924, "compression_ratio": 1.8654708520179373, "no_speech_prob": 1.3844569366483483e-05}, {"id": 175, "seek": 74468, "start": 755.4, "end": 757.56, "text": " And then there's this kind of like inserted sum.", "tokens": [400, 550, 456, 311, 341, 733, 295, 411, 27992, 2408, 13], "temperature": 0.0, "avg_logprob": -0.0805462405212924, "compression_ratio": 1.8654708520179373, "no_speech_prob": 1.3844569366483483e-05}, {"id": 176, "seek": 74468, "start": 758.3599999999999, "end": 762.1999999999999, "text": " And it's just like, that's just a lot of abstractions going on.", "tokens": [400, 309, 311, 445, 411, 11, 300, 311, 445, 257, 688, 295, 12649, 626, 516, 322, 13], "temperature": 0.0, "avg_logprob": -0.0805462405212924, "compression_ratio": 1.8654708520179373, "no_speech_prob": 1.3844569366483483e-05}, {"id": 177, "seek": 74468, "start": 762.1999999999999, "end": 768.3599999999999, "text": " So when we did it in NumPy, that helped a lot, you know, but then when we did it in", "tokens": [407, 562, 321, 630, 309, 294, 22592, 47, 88, 11, 300, 4254, 257, 688, 11, 291, 458, 11, 457, 550, 562, 321, 630, 309, 294], "temperature": 0.0, "avg_logprob": -0.0805462405212924, "compression_ratio": 1.8654708520179373, "no_speech_prob": 1.3844569366483483e-05}, {"id": 178, "seek": 76836, "start": 768.36, "end": 774.84, "text": " APL, we actually learned plus slash means insert plus between each pair of things in a sequence.", "tokens": [5372, 43, 11, 321, 767, 3264, 1804, 17330, 1355, 8969, 1804, 1296, 1184, 6119, 295, 721, 294, 257, 8310, 13], "temperature": 0.0, "avg_logprob": -0.1083834311541389, "compression_ratio": 1.6595744680851063, "no_speech_prob": 1.4062795344216283e-05}, {"id": 179, "seek": 76836, "start": 775.4, "end": 776.52, "text": " You know, okay.", "tokens": [509, 458, 11, 1392, 13], "temperature": 0.0, "avg_logprob": -0.1083834311541389, "compression_ratio": 1.6595744680851063, "no_speech_prob": 1.4062795344216283e-05}, {"id": 180, "seek": 76836, "start": 776.52, "end": 781.96, "text": " So sigma's last step is it insert does plus slash and like you can try it and you can", "tokens": [407, 12771, 311, 1036, 1823, 307, 309, 8969, 775, 1804, 17330, 293, 411, 291, 393, 853, 309, 293, 291, 393], "temperature": 0.0, "avg_logprob": -0.1083834311541389, "compression_ratio": 1.6595744680851063, "no_speech_prob": 1.4062795344216283e-05}, {"id": 181, "seek": 76836, "start": 781.96, "end": 782.52, "text": " see it.", "tokens": [536, 309, 13], "temperature": 0.0, "avg_logprob": -0.1083834311541389, "compression_ratio": 1.6595744680851063, "no_speech_prob": 1.4062795344216283e-05}, {"id": 182, "seek": 76836, "start": 782.52, "end": 783.64, "text": " And then we're like, okay.", "tokens": [400, 550, 321, 434, 411, 11, 1392, 13], "temperature": 0.0, "avg_logprob": -0.1083834311541389, "compression_ratio": 1.6595744680851063, "no_speech_prob": 1.4062795344216283e-05}, {"id": 183, "seek": 76836, "start": 783.64, "end": 788.84, "text": " And then the thing that happens inside is an expression that gets evaluated.", "tokens": [400, 550, 264, 551, 300, 2314, 1854, 307, 364, 6114, 300, 2170, 25509, 13], "temperature": 0.0, "avg_logprob": -0.1083834311541389, "compression_ratio": 1.6595744680851063, "no_speech_prob": 1.4062795344216283e-05}, {"id": 184, "seek": 76836, "start": 788.84, "end": 798.28, "text": " So yeah, it was much less intimidating to people who haven't yet learned normal", "tokens": [407, 1338, 11, 309, 390, 709, 1570, 29714, 281, 561, 567, 2378, 380, 1939, 3264, 2710], "temperature": 0.0, "avg_logprob": -0.1083834311541389, "compression_ratio": 1.6595744680851063, "no_speech_prob": 1.4062795344216283e-05}, {"id": 185, "seek": 79828, "start": 798.28, "end": 802.6, "text": " math notation because this is a math notation that they could execute experiment with,", "tokens": [5221, 24657, 570, 341, 307, 257, 5221, 24657, 300, 436, 727, 14483, 5120, 365, 11], "temperature": 0.0, "avg_logprob": -0.21131461007254465, "compression_ratio": 1.5873015873015872, "no_speech_prob": 4.610911855706945e-05}, {"id": 186, "seek": 79828, "start": 803.4, "end": 805.16, "text": " has extremely well-defined rules.", "tokens": [575, 4664, 731, 12, 37716, 4474, 13], "temperature": 0.0, "avg_logprob": -0.21131461007254465, "compression_ratio": 1.5873015873015872, "no_speech_prob": 4.610911855706945e-05}, {"id": 187, "seek": 79828, "start": 805.16, "end": 808.04, "text": " If they're not sure what something is, they can look it up and they help, you know.", "tokens": [759, 436, 434, 406, 988, 437, 746, 307, 11, 436, 393, 574, 309, 493, 293, 436, 854, 11, 291, 458, 13], "temperature": 0.0, "avg_logprob": -0.21131461007254465, "compression_ratio": 1.5873015873015872, "no_speech_prob": 4.610911855706945e-05}, {"id": 188, "seek": 79828, "start": 809.64, "end": 809.88, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.21131461007254465, "compression_ratio": 1.5873015873015872, "no_speech_prob": 4.610911855706945e-05}, {"id": 189, "seek": 79828, "start": 809.88, "end": 810.68, "text": " That was interesting.", "tokens": [663, 390, 1880, 13], "temperature": 0.0, "avg_logprob": -0.21131461007254465, "compression_ratio": 1.5873015873015872, "no_speech_prob": 4.610911855706945e-05}, {"id": 190, "seek": 79828, "start": 811.8, "end": 813.0, "text": " Thanks for explaining.", "tokens": [2561, 337, 13468, 13], "temperature": 0.0, "avg_logprob": -0.21131461007254465, "compression_ratio": 1.5873015873015872, "no_speech_prob": 4.610911855706945e-05}, {"id": 191, "seek": 79828, "start": 813.0, "end": 813.72, "text": " Yeah, no worries.", "tokens": [865, 11, 572, 16340, 13], "temperature": 0.0, "avg_logprob": -0.21131461007254465, "compression_ratio": 1.5873015873015872, "no_speech_prob": 4.610911855706945e-05}, {"id": 192, "seek": 79828, "start": 816.4399999999999, "end": 816.9399999999999, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.21131461007254465, "compression_ratio": 1.5873015873015872, "no_speech_prob": 4.610911855706945e-05}, {"id": 193, "seek": 79828, "start": 817.56, "end": 818.92, "text": " I am on...", "tokens": [286, 669, 322, 485], "temperature": 0.0, "avg_logprob": -0.21131461007254465, "compression_ratio": 1.5873015873015872, "no_speech_prob": 4.610911855706945e-05}, {"id": 194, "seek": 79828, "start": 819.9599999999999, "end": 823.56, "text": " I just wanted to second like Adam's explanations are awesome.", "tokens": [286, 445, 1415, 281, 1150, 411, 7938, 311, 28708, 366, 3476, 13], "temperature": 0.0, "avg_logprob": -0.21131461007254465, "compression_ratio": 1.5873015873015872, "no_speech_prob": 4.610911855706945e-05}, {"id": 195, "seek": 79828, "start": 823.56, "end": 826.4399999999999, "text": " His rank operator, I use that all the time now.", "tokens": [2812, 6181, 12973, 11, 286, 764, 300, 439, 264, 565, 586, 13], "temperature": 0.0, "avg_logprob": -0.21131461007254465, "compression_ratio": 1.5873015873015872, "no_speech_prob": 4.610911855706945e-05}, {"id": 196, "seek": 82644, "start": 826.44, "end": 831.48, "text": " But yeah, he showed it on that one video.", "tokens": [583, 1338, 11, 415, 4712, 309, 322, 300, 472, 960, 13], "temperature": 0.0, "avg_logprob": -0.3343809445699056, "compression_ratio": 1.3841059602649006, "no_speech_prob": 3.0712373700225726e-05}, {"id": 197, "seek": 82644, "start": 832.2, "end": 832.7, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.3343809445699056, "compression_ratio": 1.3841059602649006, "no_speech_prob": 3.0712373700225726e-05}, {"id": 198, "seek": 82644, "start": 837.24, "end": 837.74, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.3343809445699056, "compression_ratio": 1.3841059602649006, "no_speech_prob": 3.0712373700225726e-05}, {"id": 199, "seek": 82644, "start": 839.32, "end": 845.08, "text": " Listening to the Arraycast podcast.", "tokens": [49321, 281, 264, 1587, 3458, 3734, 7367, 13], "temperature": 0.0, "avg_logprob": -0.3343809445699056, "compression_ratio": 1.3841059602649006, "no_speech_prob": 3.0712373700225726e-05}, {"id": 200, "seek": 82644, "start": 846.2800000000001, "end": 846.7800000000001, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.3343809445699056, "compression_ratio": 1.3841059602649006, "no_speech_prob": 3.0712373700225726e-05}, {"id": 201, "seek": 82644, "start": 847.72, "end": 849.0, "text": " Yeah, I have too.", "tokens": [865, 11, 286, 362, 886, 13], "temperature": 0.0, "avg_logprob": -0.3343809445699056, "compression_ratio": 1.3841059602649006, "no_speech_prob": 3.0712373700225726e-05}, {"id": 202, "seek": 82644, "start": 849.0, "end": 849.5, "text": " It's great.", "tokens": [467, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.3343809445699056, "compression_ratio": 1.3841059602649006, "no_speech_prob": 3.0712373700225726e-05}, {"id": 203, "seek": 84950, "start": 849.5, "end": 857.1, "text": " I don't know if you've got to it yet, but there's two somewhat recent episodes called Leading", "tokens": [286, 500, 380, 458, 498, 291, 600, 658, 281, 309, 1939, 11, 457, 456, 311, 732, 8344, 5162, 9313, 1219, 1456, 8166], "temperature": 0.0, "avg_logprob": -0.15330657005310058, "compression_ratio": 1.5695652173913044, "no_speech_prob": 5.593891273747431e-06}, {"id": 204, "seek": 84950, "start": 857.1, "end": 859.98, "text": " Axis Theory and Transpose.", "tokens": [20118, 271, 29009, 293, 6531, 43501, 13], "temperature": 0.0, "avg_logprob": -0.15330657005310058, "compression_ratio": 1.5695652173913044, "no_speech_prob": 5.593891273747431e-06}, {"id": 205, "seek": 84950, "start": 861.18, "end": 870.54, "text": " And they spent about three hours covering what Adam did, you know, in 45 minutes when he was here.", "tokens": [400, 436, 4418, 466, 1045, 2496, 10322, 437, 7938, 630, 11, 291, 458, 11, 294, 6905, 2077, 562, 415, 390, 510, 13], "temperature": 0.0, "avg_logprob": -0.15330657005310058, "compression_ratio": 1.5695652173913044, "no_speech_prob": 5.593891273747431e-06}, {"id": 206, "seek": 84950, "start": 871.34, "end": 873.34, "text": " It's so much better when you've got it visually.", "tokens": [467, 311, 370, 709, 1101, 562, 291, 600, 658, 309, 19622, 13], "temperature": 0.0, "avg_logprob": -0.15330657005310058, "compression_ratio": 1.5695652173913044, "no_speech_prob": 5.593891273747431e-06}, {"id": 207, "seek": 84950, "start": 873.34, "end": 876.22, "text": " And I kind of listened to the episode and I was like, yeah, yeah, yeah, I know all that now.", "tokens": [400, 286, 733, 295, 13207, 281, 264, 3500, 293, 286, 390, 411, 11, 1338, 11, 1338, 11, 1338, 11, 286, 458, 439, 300, 586, 13], "temperature": 0.0, "avg_logprob": -0.15330657005310058, "compression_ratio": 1.5695652173913044, "no_speech_prob": 5.593891273747431e-06}, {"id": 208, "seek": 87622, "start": 876.22, "end": 889.34, "text": " But it was interesting hearing him talk about Transpose as well as being as important as the", "tokens": [583, 309, 390, 1880, 4763, 796, 751, 466, 6531, 43501, 382, 731, 382, 885, 382, 1021, 382, 264], "temperature": 0.0, "avg_logprob": -0.2146404515142026, "compression_ratio": 1.3515625, "no_speech_prob": 2.5063767679966986e-05}, {"id": 209, "seek": 87622, "start": 889.34, "end": 889.98, "text": " rank stuff.", "tokens": [6181, 1507, 13], "temperature": 0.0, "avg_logprob": -0.2146404515142026, "compression_ratio": 1.3515625, "no_speech_prob": 2.5063767679966986e-05}, {"id": 210, "seek": 87622, "start": 890.78, "end": 895.82, "text": " So it might be a valuable thing to check out if you haven't seen it.", "tokens": [407, 309, 1062, 312, 257, 8263, 551, 281, 1520, 484, 498, 291, 2378, 380, 1612, 309, 13], "temperature": 0.0, "avg_logprob": -0.2146404515142026, "compression_ratio": 1.3515625, "no_speech_prob": 2.5063767679966986e-05}, {"id": 211, "seek": 89582, "start": 895.82, "end": 903.82, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.34820687143426193, "compression_ratio": 1.0309278350515463, "no_speech_prob": 5.294618313200772e-05}, {"id": 212, "seek": 89582, "start": 903.82, "end": 906.7, "text": " Okay, so I'll share my screen.", "tokens": [1033, 11, 370, 286, 603, 2073, 452, 2568, 13], "temperature": 0.0, "avg_logprob": -0.34820687143426193, "compression_ratio": 1.0309278350515463, "no_speech_prob": 5.294618313200772e-05}, {"id": 213, "seek": 89582, "start": 910.1400000000001, "end": 911.1800000000001, "text": " This time we didn't forget.", "tokens": [639, 565, 321, 994, 380, 2870, 13], "temperature": 0.0, "avg_logprob": -0.34820687143426193, "compression_ratio": 1.0309278350515463, "no_speech_prob": 5.294618313200772e-05}, {"id": 214, "seek": 89582, "start": 912.7, "end": 913.58, "text": " That's right.", "tokens": [663, 311, 558, 13], "temperature": 0.0, "avg_logprob": -0.34820687143426193, "compression_ratio": 1.0309278350515463, "no_speech_prob": 5.294618313200772e-05}, {"id": 215, "seek": 91358, "start": 913.58, "end": 926.0600000000001, "text": " Can you believe that?", "tokens": [1664, 291, 1697, 300, 30], "temperature": 0.0, "avg_logprob": -0.23289175033569337, "compression_ratio": 1.1559633027522935, "no_speech_prob": 1.950515252246987e-05}, {"id": 216, "seek": 91358, "start": 933.6600000000001, "end": 937.34, "text": " Oh, also the concept of trains, I found them useful and non-intuitive.", "tokens": [876, 11, 611, 264, 3410, 295, 16329, 11, 286, 1352, 552, 4420, 293, 2107, 12, 686, 48314, 13], "temperature": 0.0, "avg_logprob": -0.23289175033569337, "compression_ratio": 1.1559633027522935, "no_speech_prob": 1.950515252246987e-05}, {"id": 217, "seek": 93734, "start": 937.34, "end": 946.5400000000001, "text": " Yeah, we haven't got to that yet because we're trying to do all the glyphs first.", "tokens": [865, 11, 321, 2378, 380, 658, 281, 300, 1939, 570, 321, 434, 1382, 281, 360, 439, 264, 22633, 950, 82, 700, 13], "temperature": 0.0, "avg_logprob": -0.3308085472353043, "compression_ratio": 1.0843373493975903, "no_speech_prob": 0.000112133588118013}, {"id": 218, "seek": 93734, "start": 946.5400000000001, "end": 955.82, "text": " But yes.", "tokens": [583, 2086, 13], "temperature": 0.0, "avg_logprob": -0.3308085472353043, "compression_ratio": 1.0843373493975903, "no_speech_prob": 0.000112133588118013}, {"id": 219, "seek": 95582, "start": 955.82, "end": 972.3000000000001, "text": " Does anybody kind of remember, I guess, did we leave off in the middle of something?", "tokens": [4402, 4472, 733, 295, 1604, 11, 286, 2041, 11, 630, 321, 1856, 766, 294, 264, 2808, 295, 746, 30], "temperature": 0.0, "avg_logprob": -0.20518985449099073, "compression_ratio": 1.2615384615384615, "no_speech_prob": 5.135745959705673e-05}, {"id": 220, "seek": 95582, "start": 978.62, "end": 980.7800000000001, "text": " The last one was mostly Adam, so.", "tokens": [440, 1036, 472, 390, 5240, 7938, 11, 370, 13], "temperature": 0.0, "avg_logprob": -0.20518985449099073, "compression_ratio": 1.2615384615384615, "no_speech_prob": 5.135745959705673e-05}, {"id": 221, "seek": 95582, "start": 980.7800000000001, "end": 981.0200000000001, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.20518985449099073, "compression_ratio": 1.2615384615384615, "no_speech_prob": 5.135745959705673e-05}, {"id": 222, "seek": 98102, "start": 981.02, "end": 986.6999999999999, "text": " Okay, I guess we're kind of up to here.", "tokens": [1033, 11, 286, 2041, 321, 434, 733, 295, 493, 281, 510, 13], "temperature": 0.0, "avg_logprob": -0.25934538730355194, "compression_ratio": 1.2321428571428572, "no_speech_prob": 3.5883200325770304e-05}, {"id": 223, "seek": 98102, "start": 992.6999999999999, "end": 992.9399999999999, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.25934538730355194, "compression_ratio": 1.2321428571428572, "no_speech_prob": 3.5883200325770304e-05}, {"id": 224, "seek": 98102, "start": 1001.02, "end": 1007.26, "text": " Actually, I wouldn't mind moving these from stuff we haven't done yet to stuff we are doing.", "tokens": [5135, 11, 286, 2759, 380, 1575, 2684, 613, 490, 1507, 321, 2378, 380, 1096, 1939, 281, 1507, 321, 366, 884, 13], "temperature": 0.0, "avg_logprob": -0.25934538730355194, "compression_ratio": 1.2321428571428572, "no_speech_prob": 3.5883200325770304e-05}, {"id": 225, "seek": 100726, "start": 1007.26, "end": 1012.54, "text": " Because it really belongs right at the top.", "tokens": [1436, 309, 534, 12953, 558, 412, 264, 1192, 13], "temperature": 0.0, "avg_logprob": -0.5187518492988918, "compression_ratio": 1.0, "no_speech_prob": 3.5900236980523914e-05}, {"id": 226, "seek": 100726, "start": 1013.9, "end": 1015.1, "text": " Basic math operators.", "tokens": [31598, 5221, 19077, 13], "temperature": 0.0, "avg_logprob": -0.5187518492988918, "compression_ratio": 1.0, "no_speech_prob": 3.5900236980523914e-05}, {"id": 227, "seek": 100726, "start": 1024.62, "end": 1024.94, "text": " Oops.", "tokens": [21726, 13], "temperature": 0.0, "avg_logprob": -0.5187518492988918, "compression_ratio": 1.0, "no_speech_prob": 3.5900236980523914e-05}, {"id": 228, "seek": 102494, "start": 1024.94, "end": 1049.1000000000001, "text": " So what I might do is add this pipe operator or vertical bar operator.", "tokens": [50364, 407, 437, 286, 1062, 360, 307, 909, 341, 11240, 12973, 420, 9429, 2159, 12973, 13, 51572], "temperature": 0.0, "avg_logprob": -0.2716754012637668, "compression_ratio": 1.0294117647058822, "no_speech_prob": 5.42171073902864e-06}, {"id": 229, "seek": 105494, "start": 1055.18, "end": 1057.5800000000002, "text": " It's actually a pretty straightforward one.", "tokens": [467, 311, 767, 257, 1238, 15325, 472, 13], "temperature": 0.0, "avg_logprob": -0.33965695531744705, "compression_ratio": 1.1372549019607843, "no_speech_prob": 0.0013249042676761746}, {"id": 230, "seek": 105494, "start": 1066.22, "end": 1066.78, "text": " On the whole.", "tokens": [1282, 264, 1379, 13], "temperature": 0.0, "avg_logprob": -0.33965695531744705, "compression_ratio": 1.1372549019607843, "no_speech_prob": 0.0013249042676761746}, {"id": 231, "seek": 105494, "start": 1073.5800000000002, "end": 1075.3400000000001, "text": " Okay, so we're going to do vertical bar.", "tokens": [1033, 11, 370, 321, 434, 516, 281, 360, 9429, 2159, 13], "temperature": 0.0, "avg_logprob": -0.33965695531744705, "compression_ratio": 1.1372549019607843, "no_speech_prob": 0.0013249042676761746}, {"id": 232, "seek": 105494, "start": 1078.38, "end": 1080.38, "text": " And we type help.", "tokens": [400, 321, 2010, 854, 13], "temperature": 0.0, "avg_logprob": -0.33965695531744705, "compression_ratio": 1.1372549019607843, "no_speech_prob": 0.0013249042676761746}, {"id": 233, "seek": 108038, "start": 1080.38, "end": 1084.0600000000002, "text": " Oh, it's working.", "tokens": [876, 11, 309, 311, 1364, 13], "temperature": 0.0, "avg_logprob": -0.2234083978753341, "compression_ratio": 1.1485148514851484, "no_speech_prob": 2.7966198103968054e-05}, {"id": 234, "seek": 108038, "start": 1084.0600000000002, "end": 1086.0600000000002, "text": " Never quite sure what's going to work on a new machine.", "tokens": [7344, 1596, 988, 437, 311, 516, 281, 589, 322, 257, 777, 3479, 13], "temperature": 0.0, "avg_logprob": -0.2234083978753341, "compression_ratio": 1.1485148514851484, "no_speech_prob": 2.7966198103968054e-05}, {"id": 235, "seek": 108038, "start": 1087.1000000000001, "end": 1090.5400000000002, "text": " Ah, so they call it style or vertical bar.", "tokens": [2438, 11, 370, 436, 818, 309, 3758, 420, 9429, 2159, 13], "temperature": 0.0, "avg_logprob": -0.2234083978753341, "compression_ratio": 1.1485148514851484, "no_speech_prob": 2.7966198103968054e-05}, {"id": 236, "seek": 109054, "start": 1090.54, "end": 1110.1399999999999, "text": " Okay, I believe it's called magnitude.", "tokens": [1033, 11, 286, 1697, 309, 311, 1219, 15668, 13], "temperature": 0.0, "avg_logprob": -0.48535922857431263, "compression_ratio": 0.8260869565217391, "no_speech_prob": 1.9219423847971484e-05}, {"id": 237, "seek": 111014, "start": 1110.14, "end": 1111.42, "text": " Yes, it is.", "tokens": [1079, 11, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.19932964391875685, "compression_ratio": 1.2222222222222223, "no_speech_prob": 4.067967165610753e-05}, {"id": 238, "seek": 111014, "start": 1119.5800000000002, "end": 1120.3000000000002, "text": " All right, so.", "tokens": [1057, 558, 11, 370, 13], "temperature": 0.0, "avg_logprob": -0.19932964391875685, "compression_ratio": 1.2222222222222223, "no_speech_prob": 4.067967165610753e-05}, {"id": 239, "seek": 111014, "start": 1123.74, "end": 1129.1000000000001, "text": " Unfortunately, because I'm using a Mac today, I do not have a screen I can draw on,", "tokens": [8590, 11, 570, 286, 478, 1228, 257, 5707, 965, 11, 286, 360, 406, 362, 257, 2568, 286, 393, 2642, 322, 11], "temperature": 0.0, "avg_logprob": -0.19932964391875685, "compression_ratio": 1.2222222222222223, "no_speech_prob": 4.067967165610753e-05}, {"id": 240, "seek": 111014, "start": 1129.1000000000001, "end": 1130.6200000000001, "text": " which is a bummer.", "tokens": [597, 307, 257, 13309, 936, 13], "temperature": 0.0, "avg_logprob": -0.19932964391875685, "compression_ratio": 1.2222222222222223, "no_speech_prob": 4.067967165610753e-05}, {"id": 241, "seek": 111014, "start": 1130.6200000000001, "end": 1132.22, "text": " So hopefully we can find a picture.", "tokens": [407, 4696, 321, 393, 915, 257, 3036, 13], "temperature": 0.0, "avg_logprob": -0.19932964391875685, "compression_ratio": 1.2222222222222223, "no_speech_prob": 4.067967165610753e-05}, {"id": 242, "seek": 113222, "start": 1132.22, "end": 1134.22, "text": " Of what magnitude is.", "tokens": [2720, 437, 15668, 307, 13], "temperature": 0.0, "avg_logprob": -0.49680411297342053, "compression_ratio": 1.5, "no_speech_prob": 8.800383511697873e-06}, {"id": 243, "seek": 113222, "start": 1135.5, "end": 1147.58, "text": " Okay, so the magnitude of a complex number is how far away that complex number is from the origin.", "tokens": [1033, 11, 370, 264, 15668, 295, 257, 3997, 1230, 307, 577, 1400, 1314, 300, 3997, 1230, 307, 490, 264, 4957, 13], "temperature": 0.0, "avg_logprob": -0.49680411297342053, "compression_ratio": 1.5, "no_speech_prob": 8.800383511697873e-06}, {"id": 244, "seek": 113222, "start": 1147.58, "end": 1150.14, "text": " If you represent it as Cartesian coordinates.", "tokens": [759, 291, 2906, 309, 382, 22478, 42434, 21056, 13], "temperature": 0.0, "avg_logprob": -0.49680411297342053, "compression_ratio": 1.5, "no_speech_prob": 8.800383511697873e-06}, {"id": 245, "seek": 113222, "start": 1151.02, "end": 1153.82, "text": " So if you've got a number a plus bi.", "tokens": [407, 498, 291, 600, 658, 257, 1230, 257, 1804, 3228, 13], "temperature": 0.0, "avg_logprob": -0.49680411297342053, "compression_ratio": 1.5, "no_speech_prob": 8.800383511697873e-06}, {"id": 246, "seek": 113222, "start": 1154.8600000000001, "end": 1157.82, "text": " So to remind you, I mean something like this.", "tokens": [407, 281, 4160, 291, 11, 286, 914, 746, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.49680411297342053, "compression_ratio": 1.5, "no_speech_prob": 8.800383511697873e-06}, {"id": 247, "seek": 115782, "start": 1157.82, "end": 1163.34, "text": " So if you've got a number a plus bi, so to remind you, I means the square root of minus one.", "tokens": [407, 498, 291, 600, 658, 257, 1230, 257, 1804, 3228, 11, 370, 281, 4160, 291, 11, 286, 1355, 264, 3732, 5593, 295, 3175, 472, 13], "temperature": 0.0, "avg_logprob": -0.2145390378104316, "compression_ratio": 1.587878787878788, "no_speech_prob": 1.696376784821041e-05}, {"id": 248, "seek": 115782, "start": 1164.46, "end": 1167.6599999999999, "text": " And you can represent any.", "tokens": [400, 291, 393, 2906, 604, 13], "temperature": 0.0, "avg_logprob": -0.2145390378104316, "compression_ratio": 1.587878787878788, "no_speech_prob": 1.696376784821041e-05}, {"id": 249, "seek": 115782, "start": 1170.78, "end": 1178.62, "text": " Any of these complex numbers using a single real a and a single real B.", "tokens": [2639, 295, 613, 3997, 3547, 1228, 257, 2167, 957, 257, 293, 257, 2167, 957, 363, 13], "temperature": 0.0, "avg_logprob": -0.2145390378104316, "compression_ratio": 1.587878787878788, "no_speech_prob": 1.696376784821041e-05}, {"id": 250, "seek": 115782, "start": 1180.46, "end": 1185.26, "text": " Even if you've got squares or square roots or multipliers or whatever,", "tokens": [2754, 498, 291, 600, 658, 19368, 420, 3732, 10669, 420, 12788, 4890, 420, 2035, 11], "temperature": 0.0, "avg_logprob": -0.2145390378104316, "compression_ratio": 1.587878787878788, "no_speech_prob": 1.696376784821041e-05}, {"id": 251, "seek": 118526, "start": 1185.26, "end": 1190.62, "text": " because you can always simplify it down to a real number part plus a real number times", "tokens": [570, 291, 393, 1009, 20460, 309, 760, 281, 257, 957, 1230, 644, 1804, 257, 957, 1230, 1413], "temperature": 0.0, "avg_logprob": -0.09922277809369683, "compression_ratio": 1.7136563876651982, "no_speech_prob": 1.618651549506467e-05}, {"id": 252, "seek": 118526, "start": 1191.26, "end": 1192.78, "text": " the square root of minus one.", "tokens": [264, 3732, 5593, 295, 3175, 472, 13], "temperature": 0.0, "avg_logprob": -0.09922277809369683, "compression_ratio": 1.7136563876651982, "no_speech_prob": 1.618651549506467e-05}, {"id": 253, "seek": 118526, "start": 1192.78, "end": 1196.86, "text": " So this is basically any complex number you can represent in this form.", "tokens": [407, 341, 307, 1936, 604, 3997, 1230, 291, 393, 2906, 294, 341, 1254, 13], "temperature": 0.0, "avg_logprob": -0.09922277809369683, "compression_ratio": 1.7136563876651982, "no_speech_prob": 1.618651549506467e-05}, {"id": 254, "seek": 118526, "start": 1198.94, "end": 1200.46, "text": " And then you could draw it.", "tokens": [400, 550, 291, 727, 2642, 309, 13], "temperature": 0.0, "avg_logprob": -0.09922277809369683, "compression_ratio": 1.7136563876651982, "no_speech_prob": 1.618651549506467e-05}, {"id": 255, "seek": 118526, "start": 1200.46, "end": 1204.3799999999999, "text": " And you can draw it by putting it on a Cartesian coordinate plane", "tokens": [400, 291, 393, 2642, 309, 538, 3372, 309, 322, 257, 22478, 42434, 15670, 5720], "temperature": 0.0, "avg_logprob": -0.09922277809369683, "compression_ratio": 1.7136563876651982, "no_speech_prob": 1.618651549506467e-05}, {"id": 256, "seek": 118526, "start": 1205.02, "end": 1210.06, "text": " by going right by a units and then up by b units to the coordinate a comma b.", "tokens": [538, 516, 558, 538, 257, 6815, 293, 550, 493, 538, 272, 6815, 281, 264, 15670, 257, 22117, 272, 13], "temperature": 0.0, "avg_logprob": -0.09922277809369683, "compression_ratio": 1.7136563876651982, "no_speech_prob": 1.618651549506467e-05}, {"id": 257, "seek": 118526, "start": 1211.98, "end": 1213.58, "text": " Does that make sense so far?", "tokens": [4402, 300, 652, 2020, 370, 1400, 30], "temperature": 0.0, "avg_logprob": -0.09922277809369683, "compression_ratio": 1.7136563876651982, "no_speech_prob": 1.618651549506467e-05}, {"id": 258, "seek": 121358, "start": 1213.58, "end": 1218.62, "text": " Anybody who's not, I think Radik, you're not said you're not so comfortable with complex stuff.", "tokens": [19082, 567, 311, 406, 11, 286, 519, 9654, 1035, 11, 291, 434, 406, 848, 291, 434, 406, 370, 4619, 365, 3997, 1507, 13], "temperature": 0.0, "avg_logprob": -0.1877962532690016, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.603962826076895e-05}, {"id": 259, "seek": 121358, "start": 1218.62, "end": 1221.02, "text": " Is this makes sense to you so far?", "tokens": [1119, 341, 1669, 2020, 281, 291, 370, 1400, 30], "temperature": 0.0, "avg_logprob": -0.1877962532690016, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.603962826076895e-05}, {"id": 260, "seek": 121358, "start": 1223.4199999999998, "end": 1224.62, "text": " Makes a lot of sense.", "tokens": [25245, 257, 688, 295, 2020, 13], "temperature": 0.0, "avg_logprob": -0.1877962532690016, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.603962826076895e-05}, {"id": 261, "seek": 121358, "start": 1224.62, "end": 1226.78, "text": " Okay, so this is a triangle.", "tokens": [1033, 11, 370, 341, 307, 257, 13369, 13], "temperature": 0.0, "avg_logprob": -0.1877962532690016, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.603962826076895e-05}, {"id": 262, "seek": 121358, "start": 1226.78, "end": 1227.98, "text": " It's a right angle triangle.", "tokens": [467, 311, 257, 558, 5802, 13369, 13], "temperature": 0.0, "avg_logprob": -0.1877962532690016, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.603962826076895e-05}, {"id": 263, "seek": 121358, "start": 1228.62, "end": 1231.82, "text": " And so how far away is this dot from the origin?", "tokens": [400, 370, 577, 1400, 1314, 307, 341, 5893, 490, 264, 4957, 30], "temperature": 0.0, "avg_logprob": -0.1877962532690016, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.603962826076895e-05}, {"id": 264, "seek": 121358, "start": 1232.46, "end": 1235.6599999999999, "text": " Well, the answer is it's going to be the square root of a squared plus b squared", "tokens": [1042, 11, 264, 1867, 307, 309, 311, 516, 281, 312, 264, 3732, 5593, 295, 257, 8889, 1804, 272, 8889], "temperature": 0.0, "avg_logprob": -0.1877962532690016, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.603962826076895e-05}, {"id": 265, "seek": 121358, "start": 1235.6599999999999, "end": 1238.22, "text": " because it's a right angle triangle and Pythagoras told us so.", "tokens": [570, 309, 311, 257, 558, 5802, 13369, 293, 9953, 392, 559, 40928, 1907, 505, 370, 13], "temperature": 0.0, "avg_logprob": -0.1877962532690016, "compression_ratio": 1.7222222222222223, "no_speech_prob": 9.603962826076895e-05}, {"id": 266, "seek": 123822, "start": 1238.22, "end": 1241.58, "text": " And so if you think about it, then let's what about this number here?", "tokens": [400, 370, 498, 291, 519, 466, 309, 11, 550, 718, 311, 437, 466, 341, 1230, 510, 30], "temperature": 0.0, "avg_logprob": -0.26967717684232273, "compression_ratio": 2.1545454545454548, "no_speech_prob": 2.1443984223878942e-05}, {"id": 267, "seek": 123822, "start": 1242.22, "end": 1245.82, "text": " This number here is one plus zero i, also known as one.", "tokens": [639, 1230, 510, 307, 472, 1804, 4018, 741, 11, 611, 2570, 382, 472, 13], "temperature": 0.0, "avg_logprob": -0.26967717684232273, "compression_ratio": 2.1545454545454548, "no_speech_prob": 2.1443984223878942e-05}, {"id": 268, "seek": 123822, "start": 1246.3, "end": 1247.9, "text": " So how far away is that from the origin?", "tokens": [407, 577, 1400, 1314, 307, 300, 490, 264, 4957, 30], "temperature": 0.0, "avg_logprob": -0.26967717684232273, "compression_ratio": 2.1545454545454548, "no_speech_prob": 2.1443984223878942e-05}, {"id": 269, "seek": 123822, "start": 1248.94, "end": 1252.6200000000001, "text": " One, which is equal to the square root of one squared plus zero squared.", "tokens": [1485, 11, 597, 307, 2681, 281, 264, 3732, 5593, 295, 472, 8889, 1804, 4018, 8889, 13], "temperature": 0.0, "avg_logprob": -0.26967717684232273, "compression_ratio": 2.1545454545454548, "no_speech_prob": 2.1443984223878942e-05}, {"id": 270, "seek": 123822, "start": 1254.06, "end": 1255.74, "text": " What about this number here i?", "tokens": [708, 466, 341, 1230, 510, 741, 30], "temperature": 0.0, "avg_logprob": -0.26967717684232273, "compression_ratio": 2.1545454545454548, "no_speech_prob": 2.1443984223878942e-05}, {"id": 271, "seek": 123822, "start": 1256.78, "end": 1258.3, "text": " Okay, how far away is this?", "tokens": [1033, 11, 577, 1400, 1314, 307, 341, 30], "temperature": 0.0, "avg_logprob": -0.26967717684232273, "compression_ratio": 2.1545454545454548, "no_speech_prob": 2.1443984223878942e-05}, {"id": 272, "seek": 123822, "start": 1258.3, "end": 1261.26, "text": " Well, square root of zero squared plus one squared also one.", "tokens": [1042, 11, 3732, 5593, 295, 4018, 8889, 1804, 472, 8889, 611, 472, 13], "temperature": 0.0, "avg_logprob": -0.26967717684232273, "compression_ratio": 2.1545454545454548, "no_speech_prob": 2.1443984223878942e-05}, {"id": 273, "seek": 123822, "start": 1262.3, "end": 1265.18, "text": " Okay, so the magnitude of a real number is the number itself.", "tokens": [1033, 11, 370, 264, 15668, 295, 257, 957, 1230, 307, 264, 1230, 2564, 13], "temperature": 0.0, "avg_logprob": -0.26967717684232273, "compression_ratio": 2.1545454545454548, "no_speech_prob": 2.1443984223878942e-05}, {"id": 274, "seek": 123822, "start": 1265.18, "end": 1268.14, "text": " The magnitude of a real number is the number itself.", "tokens": [440, 15668, 295, 257, 957, 1230, 307, 264, 1230, 2564, 13], "temperature": 0.0, "avg_logprob": -0.26967717684232273, "compression_ratio": 2.1545454545454548, "no_speech_prob": 2.1443984223878942e-05}, {"id": 275, "seek": 126814, "start": 1268.14, "end": 1272.14, "text": " The magnitude of a complex number is the size of the complex.", "tokens": [440, 15668, 295, 257, 3997, 1230, 307, 264, 2744, 295, 264, 3997, 13], "temperature": 0.0, "avg_logprob": -0.20721237747757523, "compression_ratio": 1.6467391304347827, "no_speech_prob": 1.5205810996121727e-05}, {"id": 276, "seek": 126814, "start": 1273.0200000000002, "end": 1276.0600000000002, "text": " Of the only imaginary part is the size of the imaginary component.", "tokens": [2720, 264, 787, 26164, 644, 307, 264, 2744, 295, 264, 26164, 6542, 13], "temperature": 0.0, "avg_logprob": -0.20721237747757523, "compression_ratio": 1.6467391304347827, "no_speech_prob": 1.5205810996121727e-05}, {"id": 277, "seek": 126814, "start": 1276.0600000000002, "end": 1280.94, "text": " It's a real number and a complex number more generally is root a squared plus b squared.", "tokens": [467, 311, 257, 957, 1230, 293, 257, 3997, 1230, 544, 5101, 307, 5593, 257, 8889, 1804, 272, 8889, 13], "temperature": 0.0, "avg_logprob": -0.20721237747757523, "compression_ratio": 1.6467391304347827, "no_speech_prob": 1.5205810996121727e-05}, {"id": 278, "seek": 126814, "start": 1282.38, "end": 1287.5, "text": " So that's what this means.", "tokens": [407, 300, 311, 437, 341, 1355, 13], "temperature": 0.0, "avg_logprob": -0.20721237747757523, "compression_ratio": 1.6467391304347827, "no_speech_prob": 1.5205810996121727e-05}, {"id": 279, "seek": 126814, "start": 1288.22, "end": 1292.46, "text": " And to remind you, 3j4 is how you write three plus four i.", "tokens": [400, 281, 4160, 291, 11, 805, 73, 19, 307, 577, 291, 2464, 1045, 1804, 1451, 741, 13], "temperature": 0.0, "avg_logprob": -0.20721237747757523, "compression_ratio": 1.6467391304347827, "no_speech_prob": 1.5205810996121727e-05}, {"id": 280, "seek": 129246, "start": 1292.46, "end": 1297.02, "text": " So we could also do...", "tokens": [407, 321, 727, 611, 360, 485], "temperature": 0.0, "avg_logprob": -0.29364762098892877, "compression_ratio": 1.2066115702479339, "no_speech_prob": 5.223201878834516e-05}, {"id": 281, "seek": 129246, "start": 1302.7, "end": 1307.02, "text": " Oh, and you know, in fact, let's do them all together now that we're getting fancy.", "tokens": [876, 11, 293, 291, 458, 11, 294, 1186, 11, 718, 311, 360, 552, 439, 1214, 586, 300, 321, 434, 1242, 10247, 13], "temperature": 0.0, "avg_logprob": -0.29364762098892877, "compression_ratio": 1.2066115702479339, "no_speech_prob": 5.223201878834516e-05}, {"id": 282, "seek": 130702, "start": 1307.02, "end": 1318.3, "text": " Wait, what happened to my APL bar?", "tokens": [3802, 11, 437, 2011, 281, 452, 5372, 43, 2159, 30], "temperature": 0.0, "avg_logprob": -0.21811351776123047, "compression_ratio": 1.4962406015037595, "no_speech_prob": 1.3006399967707694e-05}, {"id": 283, "seek": 130702, "start": 1325.82, "end": 1330.78, "text": " So negatives, the distance that negative three is from the origin is three.", "tokens": [407, 40019, 11, 264, 4560, 300, 3671, 1045, 307, 490, 264, 4957, 307, 1045, 13], "temperature": 0.0, "avg_logprob": -0.21811351776123047, "compression_ratio": 1.4962406015037595, "no_speech_prob": 1.3006399967707694e-05}, {"id": 284, "seek": 133078, "start": 1330.78, "end": 1336.62, "text": " And again, negative three squared is nine plus zero squared is nine.", "tokens": [400, 797, 11, 3671, 1045, 8889, 307, 4949, 1804, 4018, 8889, 307, 4949, 13], "temperature": 0.0, "avg_logprob": -0.3965095022450323, "compression_ratio": 1.346774193548387, "no_speech_prob": 2.0462393877096474e-05}, {"id": 285, "seek": 133078, "start": 1336.62, "end": 1338.62, "text": " Square root of that is three.", "tokens": [16463, 5593, 295, 300, 307, 1045, 13], "temperature": 0.0, "avg_logprob": -0.3965095022450323, "compression_ratio": 1.346774193548387, "no_speech_prob": 2.0462393877096474e-05}, {"id": 286, "seek": 133078, "start": 1338.62, "end": 1348.62, "text": " Okay, so dyadic, I think they call residual, yeah, residual modulus.", "tokens": [1033, 11, 370, 14584, 43341, 11, 286, 519, 436, 818, 27980, 11, 1338, 11, 27980, 42287, 13], "temperature": 0.0, "avg_logprob": -0.3965095022450323, "compression_ratio": 1.346774193548387, "no_speech_prob": 2.0462393877096474e-05}, {"id": 287, "seek": 134862, "start": 1348.62, "end": 1360.9399999999998, "text": " I'll move that one down later.", "tokens": [286, 603, 1286, 300, 472, 760, 1780, 13], "temperature": 0.0, "avg_logprob": -0.3642526575036951, "compression_ratio": 1.1666666666666667, "no_speech_prob": 8.603392780059949e-05}, {"id": 288, "seek": 134862, "start": 1368.3799999999999, "end": 1371.26, "text": " Okay, so modulus, so if we did...", "tokens": [1033, 11, 370, 42287, 11, 370, 498, 321, 630, 485], "temperature": 0.0, "avg_logprob": -0.3642526575036951, "compression_ratio": 1.1666666666666667, "no_speech_prob": 8.603392780059949e-05}, {"id": 289, "seek": 137126, "start": 1371.26, "end": 1377.1, "text": " Oh, they've probably got some examples, we could still...", "tokens": [876, 11, 436, 600, 1391, 658, 512, 5110, 11, 321, 727, 920, 485], "temperature": 0.0, "avg_logprob": -0.19437569704922764, "compression_ratio": 1.4315068493150684, "no_speech_prob": 1.451004936825484e-05}, {"id": 290, "seek": 137126, "start": 1382.7, "end": 1391.1, "text": " So this tells you the residual you're left over with if you do two divided into seven.", "tokens": [407, 341, 5112, 291, 264, 27980, 291, 434, 1411, 670, 365, 498, 291, 360, 732, 6666, 666, 3407, 13], "temperature": 0.0, "avg_logprob": -0.19437569704922764, "compression_ratio": 1.4315068493150684, "no_speech_prob": 1.451004936825484e-05}, {"id": 291, "seek": 137126, "start": 1391.98, "end": 1397.02, "text": " So in other words, seven divided by two is three, remainder one.", "tokens": [407, 294, 661, 2283, 11, 3407, 6666, 538, 732, 307, 1045, 11, 29837, 472, 13], "temperature": 0.0, "avg_logprob": -0.19437569704922764, "compression_ratio": 1.4315068493150684, "no_speech_prob": 1.451004936825484e-05}, {"id": 292, "seek": 139702, "start": 1397.02, "end": 1404.7, "text": " 13 divided by 10 is one, but it's negative.", "tokens": [3705, 6666, 538, 1266, 307, 472, 11, 457, 309, 311, 3671, 13], "temperature": 0.0, "avg_logprob": -0.26814573583468587, "compression_ratio": 1.5153374233128833, "no_speech_prob": 2.0462362954276614e-05}, {"id": 293, "seek": 139702, "start": 1404.7, "end": 1409.74, "text": " So if you've got a negative right-hand side, then what they actually do is they go further.", "tokens": [407, 498, 291, 600, 658, 257, 3671, 558, 12, 5543, 1252, 11, 550, 437, 436, 767, 360, 307, 436, 352, 3052, 13], "temperature": 0.0, "avg_logprob": -0.26814573583468587, "compression_ratio": 1.5153374233128833, "no_speech_prob": 2.0462362954276614e-05}, {"id": 294, "seek": 139702, "start": 1409.74, "end": 1413.34, "text": " They treat that as being, they say that's two, remainder seven.", "tokens": [814, 2387, 300, 382, 885, 11, 436, 584, 300, 311, 732, 11, 29837, 3407, 13], "temperature": 0.0, "avg_logprob": -0.26814573583468587, "compression_ratio": 1.5153374233128833, "no_speech_prob": 2.0462362954276614e-05}, {"id": 295, "seek": 139702, "start": 1413.82, "end": 1416.46, "text": " Or else if you have a positive right-hand side,", "tokens": [1610, 1646, 498, 291, 362, 257, 3353, 558, 12, 5543, 1252, 11], "temperature": 0.0, "avg_logprob": -0.26814573583468587, "compression_ratio": 1.5153374233128833, "no_speech_prob": 2.0462362954276614e-05}, {"id": 296, "seek": 141646, "start": 1416.46, "end": 1427.02, "text": " eight divided by two and a half is...", "tokens": [3180, 6666, 538, 732, 293, 257, 1922, 307, 485], "temperature": 0.0, "avg_logprob": -0.44886783191135954, "compression_ratio": 1.0526315789473684, "no_speech_prob": 9.422430480299226e-07}, {"id": 297, "seek": 141646, "start": 1432.54, "end": 1434.06, "text": " How do we get negative two here?", "tokens": [1012, 360, 321, 483, 3671, 732, 510, 30], "temperature": 0.0, "avg_logprob": -0.44886783191135954, "compression_ratio": 1.0526315789473684, "no_speech_prob": 9.422430480299226e-07}, {"id": 298, "seek": 141646, "start": 1434.06, "end": 1434.7, "text": " Is two...", "tokens": [1119, 732, 485], "temperature": 0.0, "avg_logprob": -0.44886783191135954, "compression_ratio": 1.0526315789473684, "no_speech_prob": 9.422430480299226e-07}, {"id": 299, "seek": 143470, "start": 1434.7, "end": 1446.6200000000001, "text": " Is four remainder minus two.", "tokens": [1119, 1451, 29837, 3175, 732, 13], "temperature": 0.0, "avg_logprob": -0.23337788330881218, "compression_ratio": 1.2242990654205608, "no_speech_prob": 2.753460648818873e-05}, {"id": 300, "seek": 143470, "start": 1446.6200000000001, "end": 1448.22, "text": " So like it with...", "tokens": [407, 411, 309, 365, 485], "temperature": 0.0, "avg_logprob": -0.23337788330881218, "compression_ratio": 1.2242990654205608, "no_speech_prob": 2.753460648818873e-05}, {"id": 301, "seek": 143470, "start": 1448.22, "end": 1455.9, "text": " I haven't really seen this idea before, but normally in school, remainders are done", "tokens": [286, 2378, 380, 534, 1612, 341, 1558, 949, 11, 457, 5646, 294, 1395, 11, 28986, 471, 433, 366, 1096], "temperature": 0.0, "avg_logprob": -0.23337788330881218, "compression_ratio": 1.2242990654205608, "no_speech_prob": 2.753460648818873e-05}, {"id": 302, "seek": 145590, "start": 1455.9, "end": 1461.1000000000001, "text": " always positive. And they have a very clear answer, right?", "tokens": [1009, 3353, 13, 400, 436, 362, 257, 588, 1850, 1867, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2619897524515788, "compression_ratio": 1.6091370558375635, "no_speech_prob": 9.516040336166043e-06}, {"id": 303, "seek": 145590, "start": 1461.1000000000001, "end": 1464.7800000000002, "text": " Which is 10 goes into 13 one time with three remainder,", "tokens": [3013, 307, 1266, 1709, 666, 3705, 472, 565, 365, 1045, 29837, 11], "temperature": 0.0, "avg_logprob": -0.2619897524515788, "compression_ratio": 1.6091370558375635, "no_speech_prob": 9.516040336166043e-06}, {"id": 304, "seek": 145590, "start": 1464.7800000000002, "end": 1467.3400000000001, "text": " two goes into eight four times with zero remainder.", "tokens": [732, 1709, 666, 3180, 1451, 1413, 365, 4018, 29837, 13], "temperature": 0.0, "avg_logprob": -0.2619897524515788, "compression_ratio": 1.6091370558375635, "no_speech_prob": 9.516040336166043e-06}, {"id": 305, "seek": 145590, "start": 1468.22, "end": 1474.14, "text": " But for negatives, you can kind of like overshoot it on the positive side or the negative side.", "tokens": [583, 337, 40019, 11, 291, 393, 733, 295, 411, 15488, 24467, 309, 322, 264, 3353, 1252, 420, 264, 3671, 1252, 13], "temperature": 0.0, "avg_logprob": -0.2619897524515788, "compression_ratio": 1.6091370558375635, "no_speech_prob": 9.516040336166043e-06}, {"id": 306, "seek": 145590, "start": 1474.14, "end": 1481.18, "text": " And so in APL, if you have a negative right-hand side,", "tokens": [400, 370, 294, 5372, 43, 11, 498, 291, 362, 257, 3671, 558, 12, 5543, 1252, 11], "temperature": 0.0, "avg_logprob": -0.2619897524515788, "compression_ratio": 1.6091370558375635, "no_speech_prob": 9.516040336166043e-06}, {"id": 307, "seek": 148118, "start": 1481.18, "end": 1492.46, "text": " if you have a negative left-hand side, you'll get a negative remainder.", "tokens": [498, 291, 362, 257, 3671, 1411, 12, 5543, 1252, 11, 291, 603, 483, 257, 3671, 29837, 13], "temperature": 0.0, "avg_logprob": -0.08763606888907297, "compression_ratio": 1.7548387096774194, "no_speech_prob": 1.4284771168604493e-05}, {"id": 308, "seek": 148118, "start": 1492.46, "end": 1495.18, "text": " And if you have a positive left-hand side, you'll get a positive remainder.", "tokens": [400, 498, 291, 362, 257, 3353, 1411, 12, 5543, 1252, 11, 291, 603, 483, 257, 3353, 29837, 13], "temperature": 0.0, "avg_logprob": -0.08763606888907297, "compression_ratio": 1.7548387096774194, "no_speech_prob": 1.4284771168604493e-05}, {"id": 309, "seek": 148118, "start": 1498.3, "end": 1501.5, "text": " The reason this is also called modulus is because if you're like...", "tokens": [440, 1778, 341, 307, 611, 1219, 42287, 307, 570, 498, 291, 434, 411, 485], "temperature": 0.0, "avg_logprob": -0.08763606888907297, "compression_ratio": 1.7548387096774194, "no_speech_prob": 1.4284771168604493e-05}, {"id": 310, "seek": 150150, "start": 1501.5, "end": 1519.82, "text": " If you're measuring the number of minutes past the hour, for example, then after...", "tokens": [759, 291, 434, 13389, 264, 1230, 295, 2077, 1791, 264, 1773, 11, 337, 1365, 11, 550, 934, 485], "temperature": 0.0, "avg_logprob": -0.2379209041595459, "compression_ratio": 1.2434782608695651, "no_speech_prob": 4.494796485232655e-06}, {"id": 311, "seek": 150150, "start": 1522.94, "end": 1526.06, "text": " Let's go back a little bit so it doesn't go off the screen.", "tokens": [961, 311, 352, 646, 257, 707, 857, 370, 309, 1177, 380, 352, 766, 264, 2568, 13], "temperature": 0.0, "avg_logprob": -0.2379209041595459, "compression_ratio": 1.2434782608695651, "no_speech_prob": 4.494796485232655e-06}, {"id": 312, "seek": 152606, "start": 1526.06, "end": 1531.6599999999999, "text": " Yeah, a bit messy, huh?", "tokens": [865, 11, 257, 857, 16191, 11, 7020, 30], "temperature": 0.0, "avg_logprob": -0.19848994932312897, "compression_ratio": 1.9508196721311475, "no_speech_prob": 4.9853410018840805e-05}, {"id": 313, "seek": 152606, "start": 1537.02, "end": 1540.3, "text": " Then after one second, the minute hand will be at one, after four seconds,", "tokens": [1396, 934, 472, 1150, 11, 264, 3456, 1011, 486, 312, 412, 472, 11, 934, 1451, 3949, 11], "temperature": 0.0, "avg_logprob": -0.19848994932312897, "compression_ratio": 1.9508196721311475, "no_speech_prob": 4.9853410018840805e-05}, {"id": 314, "seek": 152606, "start": 1540.3, "end": 1546.7, "text": " minute hand will be at four, et cetera. After 59 minutes, the minute hand will be at 59.", "tokens": [3456, 1011, 486, 312, 412, 1451, 11, 1030, 11458, 13, 2381, 24624, 2077, 11, 264, 3456, 1011, 486, 312, 412, 24624, 13], "temperature": 0.0, "avg_logprob": -0.19848994932312897, "compression_ratio": 1.9508196721311475, "no_speech_prob": 4.9853410018840805e-05}, {"id": 315, "seek": 152606, "start": 1546.7, "end": 1548.78, "text": " After 60 minutes, the minute hand will be at zero.", "tokens": [2381, 4060, 2077, 11, 264, 3456, 1011, 486, 312, 412, 4018, 13], "temperature": 0.0, "avg_logprob": -0.19848994932312897, "compression_ratio": 1.9508196721311475, "no_speech_prob": 4.9853410018840805e-05}, {"id": 316, "seek": 154878, "start": 1548.78, "end": 1561.74, "text": " So clocks count modulo 60. So modulo is the same as what's the remainder if you divide by this.", "tokens": [407, 41528, 1207, 1072, 13455, 4060, 13, 407, 1072, 13455, 307, 264, 912, 382, 437, 311, 264, 29837, 498, 291, 9845, 538, 341, 13], "temperature": 0.0, "avg_logprob": -0.1299161163030886, "compression_ratio": 1.352112676056338, "no_speech_prob": 8.139274541463237e-06}, {"id": 317, "seek": 154878, "start": 1563.98, "end": 1571.66, "text": " And modular arithmetic is used in cryptography a lot and it kind of comes up all over the place.", "tokens": [400, 31111, 42973, 307, 1143, 294, 9844, 5820, 257, 688, 293, 309, 733, 295, 1487, 493, 439, 670, 264, 1081, 13], "temperature": 0.0, "avg_logprob": -0.1299161163030886, "compression_ratio": 1.352112676056338, "no_speech_prob": 8.139274541463237e-06}, {"id": 318, "seek": 157166, "start": 1571.66, "end": 1578.0600000000002, "text": " If you're measuring the angle, you know, that's made as you turn around a circle,", "tokens": [759, 291, 434, 13389, 264, 5802, 11, 291, 458, 11, 300, 311, 1027, 382, 291, 1261, 926, 257, 6329, 11], "temperature": 0.0, "avg_logprob": -0.24561578996719852, "compression_ratio": 1.434782608695652, "no_speech_prob": 1.0782037861645222e-05}, {"id": 319, "seek": 157166, "start": 1578.0600000000002, "end": 1581.02, "text": " if you go more than 360 degrees, you come back where you come from.", "tokens": [498, 291, 352, 544, 813, 13898, 5310, 11, 291, 808, 646, 689, 291, 808, 490, 13], "temperature": 0.0, "avg_logprob": -0.24561578996719852, "compression_ratio": 1.434782608695652, "no_speech_prob": 1.0782037861645222e-05}, {"id": 320, "seek": 158102, "start": 1581.02, "end": 1602.22, "text": " So it's kind of like those measurements will be modulo 360. Does that make sense?", "tokens": [407, 309, 311, 733, 295, 411, 729, 15383, 486, 312, 1072, 13455, 13898, 13, 4402, 300, 652, 2020, 30], "temperature": 0.0, "avg_logprob": -0.2580125850179921, "compression_ratio": 0.9878048780487805, "no_speech_prob": 1.3208656127972063e-05}, {"id": 321, "seek": 160222, "start": 1602.22, "end": 1611.42, "text": " Okay, so then times...", "tokens": [1033, 11, 370, 550, 1413, 485], "temperature": 0.0, "avg_logprob": -0.5314549446105957, "compression_ratio": 0.7333333333333333, "no_speech_prob": 2.7961936211795546e-05}, {"id": 322, "seek": 161142, "start": 1611.42, "end": 1635.26, "text": " Monadic times tells you the direction. And if you look here, the number one,", "tokens": [4713, 43341, 1413, 5112, 291, 264, 3513, 13, 400, 498, 291, 574, 510, 11, 264, 1230, 472, 11], "temperature": 0.0, "avg_logprob": -0.1735663955861872, "compression_ratio": 1.027027027027027, "no_speech_prob": 2.3917153157526627e-05}, {"id": 323, "seek": 163526, "start": 1635.26, "end": 1640.46, "text": " there's a real number, is to the right. And so you could say its direction is one.", "tokens": [456, 311, 257, 957, 1230, 11, 307, 281, 264, 558, 13, 400, 370, 291, 727, 584, 1080, 3513, 307, 472, 13], "temperature": 0.0, "avg_logprob": -0.18955342153484903, "compression_ratio": 2.023529411764706, "no_speech_prob": 5.4742791689932346e-05}, {"id": 324, "seek": 163526, "start": 1641.18, "end": 1646.86, "text": " The number negative five is to the left. You could say its direction is minus one.", "tokens": [440, 1230, 3671, 1732, 307, 281, 264, 1411, 13, 509, 727, 584, 1080, 3513, 307, 3175, 472, 13], "temperature": 0.0, "avg_logprob": -0.18955342153484903, "compression_ratio": 2.023529411764706, "no_speech_prob": 5.4742791689932346e-05}, {"id": 325, "seek": 163526, "start": 1647.66, "end": 1653.18, "text": " The number five i, its direction is straight up. You could say its direction is i.", "tokens": [440, 1230, 1732, 741, 11, 1080, 3513, 307, 2997, 493, 13, 509, 727, 584, 1080, 3513, 307, 741, 13], "temperature": 0.0, "avg_logprob": -0.18955342153484903, "compression_ratio": 2.023529411764706, "no_speech_prob": 5.4742791689932346e-05}, {"id": 326, "seek": 163526, "start": 1653.18, "end": 1661.9, "text": " So the direction of a number is if you draw a vector from the origin out to that number on this", "tokens": [407, 264, 3513, 295, 257, 1230, 307, 498, 291, 2642, 257, 8062, 490, 264, 4957, 484, 281, 300, 1230, 322, 341], "temperature": 0.0, "avg_logprob": -0.18955342153484903, "compression_ratio": 2.023529411764706, "no_speech_prob": 5.4742791689932346e-05}, {"id": 327, "seek": 166190, "start": 1661.9, "end": 1672.7, "text": " plane, whereabouts would it cross the unit circle? And so in most languages that don't deal particularly", "tokens": [5720, 11, 689, 41620, 576, 309, 3278, 264, 4985, 6329, 30, 400, 370, 294, 881, 8650, 300, 500, 380, 2028, 4098], "temperature": 0.0, "avg_logprob": -0.2003065004740676, "compression_ratio": 1.4761904761904763, "no_speech_prob": 1.863081706687808e-05}, {"id": 328, "seek": 166190, "start": 1672.7, "end": 1685.66, "text": " with complex numbers, we have a function called sine, S-I-G-N, that returns the sine of a number.", "tokens": [365, 3997, 3547, 11, 321, 362, 257, 2445, 1219, 18609, 11, 318, 12, 40, 12, 38, 12, 45, 11, 300, 11247, 264, 18609, 295, 257, 1230, 13], "temperature": 0.0, "avg_logprob": -0.2003065004740676, "compression_ratio": 1.4761904761904763, "no_speech_prob": 1.863081706687808e-05}, {"id": 329, "seek": 166190, "start": 1685.66, "end": 1689.42, "text": " And it normally returns one if it's positive and minus one if it's negative.", "tokens": [400, 309, 5646, 11247, 472, 498, 309, 311, 3353, 293, 3175, 472, 498, 309, 311, 3671, 13], "temperature": 0.0, "avg_logprob": -0.2003065004740676, "compression_ratio": 1.4761904761904763, "no_speech_prob": 1.863081706687808e-05}, {"id": 330, "seek": 168942, "start": 1689.42, "end": 1699.8200000000002, "text": " For real numbers, monadic times is exactly that. Look at this, monadic times 3.1,", "tokens": [1171, 957, 3547, 11, 1108, 43341, 1413, 307, 2293, 300, 13, 2053, 412, 341, 11, 1108, 43341, 1413, 805, 13, 16, 11], "temperature": 0.0, "avg_logprob": -0.20745881828101906, "compression_ratio": 1.743421052631579, "no_speech_prob": 5.862728812644491e-06}, {"id": 331, "seek": 168942, "start": 1699.8200000000002, "end": 1707.18, "text": " in other words, sine 3.1 is one. Monadic times of negative two, in other words, sine of negative", "tokens": [294, 661, 2283, 11, 18609, 805, 13, 16, 307, 472, 13, 4713, 43341, 1413, 295, 3671, 732, 11, 294, 661, 2283, 11, 18609, 295, 3671], "temperature": 0.0, "avg_logprob": -0.20745881828101906, "compression_ratio": 1.743421052631579, "no_speech_prob": 5.862728812644491e-06}, {"id": 332, "seek": 168942, "start": 1707.18, "end": 1712.8600000000001, "text": " two is negative one. And then normally in most languages, sine of zero is called zero.", "tokens": [732, 307, 3671, 472, 13, 400, 550, 5646, 294, 881, 8650, 11, 18609, 295, 4018, 307, 1219, 4018, 13], "temperature": 0.0, "avg_logprob": -0.20745881828101906, "compression_ratio": 1.743421052631579, "no_speech_prob": 5.862728812644491e-06}, {"id": 333, "seek": 171286, "start": 1712.86, "end": 1718.62, "text": " So so far this is all exactly the same as sine. It's called that in Python, isn't it?", "tokens": [407, 370, 1400, 341, 307, 439, 2293, 264, 912, 382, 18609, 13, 467, 311, 1219, 300, 294, 15329, 11, 1943, 380, 309, 30], "temperature": 0.0, "avg_logprob": -0.43549575805664065, "compression_ratio": 1.330708661417323, "no_speech_prob": 9.080244126380421e-06}, {"id": 334, "seek": 171286, "start": 1722.1399999999999, "end": 1727.4199999999998, "text": " Oh, I guess it doesn't. NumPy has sine.", "tokens": [876, 11, 286, 2041, 309, 1177, 380, 13, 22592, 47, 88, 575, 18609, 13], "temperature": 0.0, "avg_logprob": -0.43549575805664065, "compression_ratio": 1.330708661417323, "no_speech_prob": 9.080244126380421e-06}, {"id": 335, "seek": 171286, "start": 1730.54, "end": 1736.6999999999998, "text": " So why doesn't Python have a sine function?", "tokens": [407, 983, 1177, 380, 15329, 362, 257, 18609, 2445, 30], "temperature": 0.0, "avg_logprob": -0.43549575805664065, "compression_ratio": 1.330708661417323, "no_speech_prob": 9.080244126380421e-06}, {"id": 336, "seek": 173670, "start": 1736.7, "end": 1742.46, "text": " Yeah, I don't remember. Nobody could agree on it. Just Python.", "tokens": [865, 11, 286, 500, 380, 1604, 13, 9297, 727, 3986, 322, 309, 13, 1449, 15329, 13], "temperature": 0.0, "avg_logprob": -0.3389855339413598, "compression_ratio": 1.5621621621621622, "no_speech_prob": 9.515107194602024e-06}, {"id": 337, "seek": 173670, "start": 1742.46, "end": 1746.46, "text": " Huh? Was that? Yeah, I don't remember using sine without NumPy in Python.", "tokens": [8063, 30, 3027, 300, 30, 865, 11, 286, 500, 380, 1604, 1228, 18609, 1553, 22592, 47, 88, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.3389855339413598, "compression_ratio": 1.5621621621621622, "no_speech_prob": 9.515107194602024e-06}, {"id": 338, "seek": 173670, "start": 1746.46, "end": 1750.22, "text": " Yeah, it says there was a patch, but it wasn't accepted because they couldn't agree on what it", "tokens": [865, 11, 309, 1619, 456, 390, 257, 9972, 11, 457, 309, 2067, 380, 9035, 570, 436, 2809, 380, 3986, 322, 437, 309], "temperature": 0.0, "avg_logprob": -0.3389855339413598, "compression_ratio": 1.5621621621621622, "no_speech_prob": 9.515107194602024e-06}, {"id": 339, "seek": 173670, "start": 1750.22, "end": 1755.26, "text": " should return. So they didn't do it at all. That's funny.", "tokens": [820, 2736, 13, 407, 436, 994, 380, 360, 309, 412, 439, 13, 663, 311, 4074, 13], "temperature": 0.0, "avg_logprob": -0.3389855339413598, "compression_ratio": 1.5621621621621622, "no_speech_prob": 9.515107194602024e-06}, {"id": 340, "seek": 175526, "start": 1755.26, "end": 1765.18, "text": " So in NumPy, I wonder if it's true that Python has a sine function.", "tokens": [407, 294, 22592, 47, 88, 11, 286, 2441, 498, 309, 311, 2074, 300, 15329, 575, 257, 18609, 2445, 13], "temperature": 0.2, "avg_logprob": -0.8876135805819897, "compression_ratio": 1.4835164835164836, "no_speech_prob": 1.9518696717568673e-05}, {"id": 341, "seek": 175526, "start": 1765.18, "end": 1773.18, "text": " Yeah, I think it does. It does. It does. It does. It does. It does.", "tokens": [865, 11, 286, 519, 309, 775, 13, 467, 775, 13, 467, 775, 13, 467, 775, 13, 467, 775, 13, 467, 775, 13], "temperature": 0.2, "avg_logprob": -0.8876135805819897, "compression_ratio": 1.4835164835164836, "no_speech_prob": 1.9518696717568673e-05}, {"id": 342, "seek": 177318, "start": 1773.18, "end": 1791.1000000000001, "text": " So in NumPy, I wonder if NumPy's sine handles complex numbers.", "tokens": [50364, 407, 294, 22592, 47, 88, 11, 286, 2441, 498, 22592, 47, 88, 311, 18609, 18722, 3997, 3547, 13, 51260], "temperature": 0.0, "avg_logprob": -0.2660320372808547, "compression_ratio": 0.9393939393939394, "no_speech_prob": 1.4967047718528192e-05}, {"id": 343, "seek": 180318, "start": 1803.18, "end": 1812.94, "text": " That looks like something slightly different. That's interesting.", "tokens": [663, 1542, 411, 746, 4748, 819, 13, 663, 311, 1880, 13], "temperature": 0.0, "avg_logprob": -0.25391079829289365, "compression_ratio": 1.2521008403361344, "no_speech_prob": 0.0022511924616992474}, {"id": 344, "seek": 180318, "start": 1818.22, "end": 1821.42, "text": " All right. So I kind of like this about", "tokens": [1057, 558, 13, 407, 286, 733, 295, 411, 341, 466], "temperature": 0.0, "avg_logprob": -0.25391079829289365, "compression_ratio": 1.2521008403361344, "no_speech_prob": 0.0022511924616992474}, {"id": 345, "seek": 180318, "start": 1823.98, "end": 1827.3400000000001, "text": " APL. I find really consistently it tends to", "tokens": [5372, 43, 13, 286, 915, 534, 14961, 309, 12258, 281], "temperature": 0.0, "avg_logprob": -0.25391079829289365, "compression_ratio": 1.2521008403361344, "no_speech_prob": 0.0022511924616992474}, {"id": 346, "seek": 182734, "start": 1827.34, "end": 1836.62, "text": " extend basic ideas from other languages and from math to cover more things in a more general way.", "tokens": [10101, 3875, 3487, 490, 661, 8650, 293, 490, 5221, 281, 2060, 544, 721, 294, 257, 544, 2674, 636, 13], "temperature": 0.0, "avg_logprob": -0.45793384975857204, "compression_ratio": 1.3333333333333333, "no_speech_prob": 4.0053026168607175e-05}, {"id": 347, "seek": 182734, "start": 1839.34, "end": 1841.34, "text": " Which I think is really cool.", "tokens": [3013, 286, 519, 307, 534, 1627, 13], "temperature": 0.0, "avg_logprob": -0.45793384975857204, "compression_ratio": 1.3333333333333333, "no_speech_prob": 4.0053026168607175e-05}, {"id": 348, "seek": 182734, "start": 1844.62, "end": 1851.58, "text": " Okay. I guess I should mention complex numbers here.", "tokens": [1033, 13, 286, 2041, 286, 820, 2152, 3997, 3547, 510, 13], "temperature": 0.0, "avg_logprob": -0.45793384975857204, "compression_ratio": 1.3333333333333333, "no_speech_prob": 4.0053026168607175e-05}, {"id": 349, "seek": 185158, "start": 1851.58, "end": 1874.54, "text": " Okay. So here we can see. So what is the magnitude of 3 plus 4i?", "tokens": [1033, 13, 407, 510, 321, 393, 536, 13, 407, 437, 307, 264, 15668, 295, 805, 1804, 1017, 72, 30], "temperature": 0.0, "avg_logprob": -0.4986395213914954, "compression_ratio": 0.927536231884058, "no_speech_prob": 4.1324179619550705e-05}, {"id": 350, "seek": 187454, "start": 1874.54, "end": 1885.26, "text": " So the magnitude of 3 plus 4i, well, we would start with the number 3 plus 4i,", "tokens": [407, 264, 15668, 295, 805, 1804, 1017, 72, 11, 731, 11, 321, 576, 722, 365, 264, 1230, 805, 1804, 1017, 72, 11], "temperature": 0.0, "avg_logprob": -0.2839611403796138, "compression_ratio": 1.4594594594594594, "no_speech_prob": 6.048684554116335e-06}, {"id": 351, "seek": 187454, "start": 1886.1399999999999, "end": 1895.18, "text": " and then we would divide it by its length, which we know is magnitude of 3 plus 4i.", "tokens": [293, 550, 321, 576, 9845, 309, 538, 1080, 4641, 11, 597, 321, 458, 307, 15668, 295, 805, 1804, 1017, 72, 13], "temperature": 0.0, "avg_logprob": -0.2839611403796138, "compression_ratio": 1.4594594594594594, "no_speech_prob": 6.048684554116335e-06}, {"id": 352, "seek": 189518, "start": 1895.18, "end": 1904.46, "text": " And that gives us 0.6 plus 0.8i. So that's going to be the, you know, so 0.6 comma 0.8", "tokens": [400, 300, 2709, 505, 1958, 13, 21, 1804, 1958, 13, 23, 72, 13, 407, 300, 311, 516, 281, 312, 264, 11, 291, 458, 11, 370, 1958, 13, 21, 22117, 1958, 13, 23], "temperature": 0.0, "avg_logprob": -0.24829270921904464, "compression_ratio": 1.378787878787879, "no_speech_prob": 1.2289057167436113e-06}, {"id": 353, "seek": 189518, "start": 1904.46, "end": 1913.5800000000002, "text": " would be its coordinates on the unit circle down, you know, somewhere around here in this case.", "tokens": [576, 312, 1080, 21056, 322, 264, 4985, 6329, 760, 11, 291, 458, 11, 4079, 926, 510, 294, 341, 1389, 13], "temperature": 0.0, "avg_logprob": -0.24829270921904464, "compression_ratio": 1.378787878787879, "no_speech_prob": 1.2289057167436113e-06}, {"id": 354, "seek": 191358, "start": 1913.58, "end": 1923.98, "text": " I'm not going to include it here, but I think, you know, as Adam said, I'm just trying to think", "tokens": [286, 478, 406, 516, 281, 4090, 309, 510, 11, 457, 286, 519, 11, 291, 458, 11, 382, 7938, 848, 11, 286, 478, 445, 1382, 281, 519], "temperature": 0.0, "avg_logprob": -0.6861651317182794, "compression_ratio": 1.6687898089171975, "no_speech_prob": 1.0952605407510418e-05}, {"id": 355, "seek": 191358, "start": 1923.98, "end": 1930.86, "text": " of a way to do this as a train. And I think that's a good way to do this.", "tokens": [295, 257, 636, 281, 360, 341, 382, 257, 3847, 13, 400, 286, 519, 300, 311, 257, 665, 636, 281, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.6861651317182794, "compression_ratio": 1.6687898089171975, "no_speech_prob": 1.0952605407510418e-05}, {"id": 356, "seek": 191358, "start": 1930.86, "end": 1939.4199999999998, "text": " So I'm going to start with the number 3 plus 4i. So that's going to be the number 3 plus 4i.", "tokens": [407, 286, 478, 516, 281, 722, 365, 264, 1230, 805, 1804, 1017, 72, 13, 407, 300, 311, 516, 281, 312, 264, 1230, 805, 1804, 1017, 72, 13], "temperature": 0.0, "avg_logprob": -0.6861651317182794, "compression_ratio": 1.6687898089171975, "no_speech_prob": 1.0952605407510418e-05}, {"id": 357, "seek": 193942, "start": 1939.42, "end": 1945.74, "text": " I'm trying to think of a way to do this as a train. I think this should already work, right?", "tokens": [286, 478, 1382, 281, 519, 295, 257, 636, 281, 360, 341, 382, 257, 3847, 13, 286, 519, 341, 820, 1217, 589, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.25839231491088865, "compression_ratio": 1.599078341013825, "no_speech_prob": 3.5353641578694806e-05}, {"id": 358, "seek": 193942, "start": 1945.74, "end": 1949.8200000000002, "text": " So when you have two of these next to each other, it first of all applies this.", "tokens": [407, 562, 291, 362, 732, 295, 613, 958, 281, 1184, 661, 11, 309, 700, 295, 439, 13165, 341, 13], "temperature": 0.0, "avg_logprob": -0.25839231491088865, "compression_ratio": 1.599078341013825, "no_speech_prob": 3.5353641578694806e-05}, {"id": 359, "seek": 193942, "start": 1952.7, "end": 1955.98, "text": " Is that right? I can't remember which border it's in. Yeah. First of all, applies that.", "tokens": [1119, 300, 558, 30, 286, 393, 380, 1604, 597, 7838, 309, 311, 294, 13, 865, 13, 2386, 295, 439, 11, 13165, 300, 13], "temperature": 0.0, "avg_logprob": -0.25839231491088865, "compression_ratio": 1.599078341013825, "no_speech_prob": 3.5353641578694806e-05}, {"id": 360, "seek": 193942, "start": 1955.98, "end": 1959.8200000000002, "text": " I think it just, right. So you actually-", "tokens": [286, 519, 309, 445, 11, 558, 13, 407, 291, 767, 12], "temperature": 0.0, "avg_logprob": -0.25839231491088865, "compression_ratio": 1.599078341013825, "no_speech_prob": 3.5353641578694806e-05}, {"id": 361, "seek": 193942, "start": 1959.8200000000002, "end": 1962.78, "text": " You can just delete the left-hand side maybe?", "tokens": [509, 393, 445, 12097, 264, 1411, 12, 5543, 1252, 1310, 30], "temperature": 0.0, "avg_logprob": -0.25839231491088865, "compression_ratio": 1.599078341013825, "no_speech_prob": 3.5353641578694806e-05}, {"id": 362, "seek": 196278, "start": 1962.78, "end": 1970.46, "text": " You can't just delete the left. Oh, well, you could delete the left-hand side if you're in j,", "tokens": [509, 393, 380, 445, 12097, 264, 1411, 13, 876, 11, 731, 11, 291, 727, 12097, 264, 1411, 12, 5543, 1252, 498, 291, 434, 294, 361, 11], "temperature": 0.0, "avg_logprob": -0.13964152336120605, "compression_ratio": 1.5, "no_speech_prob": 1.4737921446794644e-05}, {"id": 363, "seek": 196278, "start": 1970.46, "end": 1977.82, "text": " but APL doesn't work that way. APL would treat this as being the reciprocal of the magnitude.", "tokens": [457, 5372, 43, 1177, 380, 589, 300, 636, 13, 5372, 43, 576, 2387, 341, 382, 885, 264, 46948, 295, 264, 15668, 13], "temperature": 0.0, "avg_logprob": -0.13964152336120605, "compression_ratio": 1.5, "no_speech_prob": 1.4737921446794644e-05}, {"id": 364, "seek": 196278, "start": 1979.82, "end": 1981.26, "text": " If you put parentheses on it?", "tokens": [759, 291, 829, 34153, 322, 309, 30], "temperature": 0.0, "avg_logprob": -0.13964152336120605, "compression_ratio": 1.5, "no_speech_prob": 1.4737921446794644e-05}, {"id": 365, "seek": 196278, "start": 1985.5, "end": 1988.94, "text": " Still no. That's the way j works. It's not the way APL works.", "tokens": [8291, 572, 13, 663, 311, 264, 636, 361, 1985, 13, 467, 311, 406, 264, 636, 5372, 43, 1985, 13], "temperature": 0.0, "avg_logprob": -0.13964152336120605, "compression_ratio": 1.5, "no_speech_prob": 1.4737921446794644e-05}, {"id": 366, "seek": 198894, "start": 1988.94, "end": 2000.7, "text": " Okay. You're thinking of a type of train called a hook. But in APL, you would need to use the", "tokens": [1033, 13, 509, 434, 1953, 295, 257, 2010, 295, 3847, 1219, 257, 6328, 13, 583, 294, 5372, 43, 11, 291, 576, 643, 281, 764, 264], "temperature": 0.0, "avg_logprob": -0.2435788263248492, "compression_ratio": 1.4566473988439306, "no_speech_prob": 4.637628990167286e-06}, {"id": 367, "seek": 198894, "start": 2000.7, "end": 2010.7, "text": " self-operator. So you would do that with the self-operator, which I can't remember how to", "tokens": [2698, 12, 7192, 1639, 13, 407, 291, 576, 360, 300, 365, 264, 2698, 12, 7192, 1639, 11, 597, 286, 393, 380, 1604, 577, 281], "temperature": 0.0, "avg_logprob": -0.2435788263248492, "compression_ratio": 1.4566473988439306, "no_speech_prob": 4.637628990167286e-06}, {"id": 368, "seek": 198894, "start": 2010.7, "end": 2014.94, "text": " write it. So I'm going to have to find it. It's the tilde, dioresis.", "tokens": [2464, 309, 13, 407, 286, 478, 516, 281, 362, 281, 915, 309, 13, 467, 311, 264, 45046, 11, 1026, 2706, 271, 13], "temperature": 0.0, "avg_logprob": -0.2435788263248492, "compression_ratio": 1.4566473988439306, "no_speech_prob": 4.637628990167286e-06}, {"id": 369, "seek": 201494, "start": 2014.94, "end": 2019.5, "text": " Capital P, I think. Capital P? Capital T.", "tokens": [21502, 430, 11, 286, 519, 13, 21502, 430, 30, 21502, 314, 13], "temperature": 0.0, "avg_logprob": -0.5475965100665425, "compression_ratio": 1.1523809523809523, "no_speech_prob": 4.905988316750154e-05}, {"id": 370, "seek": 201494, "start": 2028.46, "end": 2030.6200000000001, "text": " Does anybody know how to make that work?", "tokens": [4402, 4472, 458, 577, 281, 652, 300, 589, 30], "temperature": 0.0, "avg_logprob": -0.5475965100665425, "compression_ratio": 1.1523809523809523, "no_speech_prob": 4.905988316750154e-05}, {"id": 371, "seek": 201494, "start": 2033.26, "end": 2034.38, "text": " Working on it.", "tokens": [18337, 322, 309, 13], "temperature": 0.0, "avg_logprob": -0.5475965100665425, "compression_ratio": 1.1523809523809523, "no_speech_prob": 4.905988316750154e-05}, {"id": 372, "seek": 201494, "start": 2038.3, "end": 2039.8200000000002, "text": " Oh, did I get it wrong?", "tokens": [876, 11, 630, 286, 483, 309, 2085, 30], "temperature": 0.0, "avg_logprob": -0.5475965100665425, "compression_ratio": 1.1523809523809523, "no_speech_prob": 4.905988316750154e-05}, {"id": 373, "seek": 203982, "start": 2039.82, "end": 2041.58, "text": " Yeah, I got it right.", "tokens": [865, 11, 286, 658, 309, 558, 13], "temperature": 0.0, "avg_logprob": -0.7466742621527778, "compression_ratio": 1.671875, "no_speech_prob": 1.6440355466329493e-05}, {"id": 374, "seek": 203982, "start": 2044.62, "end": 2049.98, "text": " F tilde, dioresis y equals y F tilde, F y.", "tokens": [479, 45046, 11, 1026, 2706, 271, 288, 6915, 288, 479, 45046, 11, 479, 288, 13], "temperature": 0.0, "avg_logprob": -0.7466742621527778, "compression_ratio": 1.671875, "no_speech_prob": 1.6440355466329493e-05}, {"id": 375, "seek": 203982, "start": 2054.38, "end": 2060.14, "text": " F tilde, dioresis y equals y F tilde, F y.", "tokens": [479, 45046, 11, 1026, 2706, 271, 288, 6915, 288, 479, 45046, 11, 479, 288, 13], "temperature": 0.0, "avg_logprob": -0.7466742621527778, "compression_ratio": 1.671875, "no_speech_prob": 1.6440355466329493e-05}, {"id": 376, "seek": 206014, "start": 2060.14, "end": 2067.74, "text": " F tilde, dioresis y equals y F tilde, F y.", "tokens": [479, 45046, 11, 1026, 2706, 271, 288, 6915, 288, 479, 45046, 11, 479, 288, 13], "temperature": 0.0, "avg_logprob": -0.35263342176164897, "compression_ratio": 1.0864197530864197, "no_speech_prob": 1.3419546121440362e-05}, {"id": 377, "seek": 206014, "start": 2076.22, "end": 2077.74, "text": " I could answer you last week.", "tokens": [286, 727, 1867, 291, 1036, 1243, 13], "temperature": 0.0, "avg_logprob": -0.35263342176164897, "compression_ratio": 1.0864197530864197, "no_speech_prob": 1.3419546121440362e-05}, {"id": 378, "seek": 206014, "start": 2084.7799999999997, "end": 2085.9, "text": " Divide by zero.", "tokens": [9886, 482, 538, 4018, 13], "temperature": 0.0, "avg_logprob": -0.35263342176164897, "compression_ratio": 1.0864197530864197, "no_speech_prob": 1.3419546121440362e-05}, {"id": 379, "seek": 208590, "start": 2085.9, "end": 2092.94, "text": " All right. Well, that's an interesting puzzle for somebody to figure out.", "tokens": [1057, 558, 13, 1042, 11, 300, 311, 364, 1880, 12805, 337, 2618, 281, 2573, 484, 13], "temperature": 0.0, "avg_logprob": -0.2152825135451097, "compression_ratio": 1.348993288590604, "no_speech_prob": 1.497035555075854e-05}, {"id": 380, "seek": 208590, "start": 2095.26, "end": 2101.7400000000002, "text": " Is the binding for the complex number less high than?", "tokens": [1119, 264, 17359, 337, 264, 3997, 1230, 1570, 1090, 813, 30], "temperature": 0.0, "avg_logprob": -0.2152825135451097, "compression_ratio": 1.348993288590604, "no_speech_prob": 1.497035555075854e-05}, {"id": 381, "seek": 208590, "start": 2104.14, "end": 2113.7400000000002, "text": " No, this binds as tightly as upper bar or full stop would as a decimal or", "tokens": [883, 11, 341, 41515, 382, 21952, 382, 6597, 2159, 420, 1577, 1590, 576, 382, 257, 26601, 420], "temperature": 0.0, "avg_logprob": -0.2152825135451097, "compression_ratio": 1.348993288590604, "no_speech_prob": 1.497035555075854e-05}, {"id": 382, "seek": 211374, "start": 2113.74, "end": 2120.06, "text": " yeah, or whatever. I'm 99.99% sure. Yeah.", "tokens": [1338, 11, 420, 2035, 13, 286, 478, 11803, 13, 8494, 4, 988, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.5124380212081107, "compression_ratio": 0.8541666666666666, "no_speech_prob": 4.2612333345459774e-05}, {"id": 383, "seek": 212006, "start": 2120.06, "end": 2123.5, "text": "Ne\u89e3 for F.", "tokens": [50364, 15496, 17278, 337, 479, 13, 50536], "temperature": 1.0, "avg_logprob": -3.8449487686157227, "compression_ratio": 0.6, "no_speech_prob": 0.00017661524179857224}, {"id": 384, "seek": 215006, "start": 2150.06, "end": 2159.06, "text": " Oh, that's interesting.", "tokens": [876, 11, 300, 311, 1880, 13], "temperature": 0.0, "avg_logprob": -0.7015318870544434, "compression_ratio": 0.7419354838709677, "no_speech_prob": 0.05821578577160835}, {"id": 385, "seek": 215906, "start": 2159.06, "end": 2180.06, "text": " So, oh, oh, I see the issue. The issue is that there's an implied parentheses here.", "tokens": [407, 11, 1954, 11, 1954, 11, 286, 536, 264, 2734, 13, 440, 2734, 307, 300, 456, 311, 364, 32614, 34153, 510, 13], "temperature": 0.0, "avg_logprob": -0.246456663949149, "compression_ratio": 1.2043010752688172, "no_speech_prob": 0.00011403109965613112}, {"id": 386, "seek": 215906, "start": 2180.06, "end": 2183.06, "text": " Because we go right to left.", "tokens": [1436, 321, 352, 558, 281, 1411, 13], "temperature": 0.0, "avg_logprob": -0.246456663949149, "compression_ratio": 1.2043010752688172, "no_speech_prob": 0.00011403109965613112}, {"id": 387, "seek": 218306, "start": 2183.06, "end": 2191.06, "text": " Actually, if I did this, that would break.", "tokens": [5135, 11, 498, 286, 630, 341, 11, 300, 576, 1821, 13], "temperature": 0.0, "avg_logprob": -0.09190868414365329, "compression_ratio": 1.426356589147287, "no_speech_prob": 4.537975837592967e-05}, {"id": 388, "seek": 218306, "start": 2191.06, "end": 2200.06, "text": " And so I have a feeling what I actually need and I what I should do really is look it up properly.", "tokens": [400, 370, 286, 362, 257, 2633, 437, 286, 767, 643, 293, 286, 437, 286, 820, 360, 534, 307, 574, 309, 493, 6108, 13], "temperature": 0.0, "avg_logprob": -0.09190868414365329, "compression_ratio": 1.426356589147287, "no_speech_prob": 4.537975837592967e-05}, {"id": 389, "seek": 218306, "start": 2200.06, "end": 2204.06, "text": " Yeah, but what we actually need is beside.", "tokens": [865, 11, 457, 437, 321, 767, 643, 307, 15726, 13], "temperature": 0.0, "avg_logprob": -0.09190868414365329, "compression_ratio": 1.426356589147287, "no_speech_prob": 4.537975837592967e-05}, {"id": 390, "seek": 220406, "start": 2204.06, "end": 2214.06, "text": " Because beside.", "tokens": [1436, 15726, 13], "temperature": 0.0, "avg_logprob": -0.1080341945994984, "compression_ratio": 1.4113475177304964, "no_speech_prob": 1.6699523257557303e-05}, {"id": 391, "seek": 220406, "start": 2214.06, "end": 2219.06, "text": " Yes, beside is the thing which behaves exactly the way we want.", "tokens": [1079, 11, 15726, 307, 264, 551, 597, 36896, 2293, 264, 636, 321, 528, 13], "temperature": 0.0, "avg_logprob": -0.1080341945994984, "compression_ratio": 1.4113475177304964, "no_speech_prob": 1.6699523257557303e-05}, {"id": 392, "seek": 220406, "start": 2219.06, "end": 2226.06, "text": " And it's the same as putting two things next to each other.", "tokens": [400, 309, 311, 264, 912, 382, 3372, 732, 721, 958, 281, 1184, 661, 13], "temperature": 0.0, "avg_logprob": -0.1080341945994984, "compression_ratio": 1.4113475177304964, "no_speech_prob": 1.6699523257557303e-05}, {"id": 393, "seek": 220406, "start": 2226.06, "end": 2229.06, "text": " As long as you don't mess with the kind of execution order.", "tokens": [1018, 938, 382, 291, 500, 380, 2082, 365, 264, 733, 295, 15058, 1668, 13], "temperature": 0.0, "avg_logprob": -0.1080341945994984, "compression_ratio": 1.4113475177304964, "no_speech_prob": 1.6699523257557303e-05}, {"id": 394, "seek": 222906, "start": 2229.06, "end": 2240.06, "text": " So here's beside it applies the monadic G first and then applies the dyadic to the result, which is what we want here.", "tokens": [407, 510, 311, 15726, 309, 13165, 264, 1108, 43341, 460, 700, 293, 550, 13165, 264, 14584, 43341, 281, 264, 1874, 11, 597, 307, 437, 321, 528, 510, 13], "temperature": 0.0, "avg_logprob": -0.16253357841855004, "compression_ratio": 1.2935779816513762, "no_speech_prob": 2.7106205379823223e-05}, {"id": 395, "seek": 222906, "start": 2240.06, "end": 2245.06, "text": " So,", "tokens": [407, 11], "temperature": 0.0, "avg_logprob": -0.16253357841855004, "compression_ratio": 1.2935779816513762, "no_speech_prob": 2.7106205379823223e-05}, {"id": 396, "seek": 222906, "start": 2245.06, "end": 2257.06, "text": " I think that means", "tokens": [286, 519, 300, 1355], "temperature": 0.0, "avg_logprob": -0.16253357841855004, "compression_ratio": 1.2935779816513762, "no_speech_prob": 2.7106205379823223e-05}, {"id": 397, "seek": 225706, "start": 2257.06, "end": 2260.06, "text": " all right now,", "tokens": [439, 558, 586, 11], "temperature": 0.0, "avg_logprob": -0.17817006391637466, "compression_ratio": 1.0602409638554218, "no_speech_prob": 6.501507596112788e-05}, {"id": 398, "seek": 225706, "start": 2260.06, "end": 2269.06, "text": " what do we expect this to work? So it's going to go.", "tokens": [437, 360, 321, 2066, 341, 281, 589, 30, 407, 309, 311, 516, 281, 352, 13], "temperature": 0.0, "avg_logprob": -0.17817006391637466, "compression_ratio": 1.0602409638554218, "no_speech_prob": 6.501507596112788e-05}, {"id": 399, "seek": 225706, "start": 2269.06, "end": 2273.06, "text": " I don't know if it's", "tokens": [286, 500, 380, 458, 498, 309, 311], "temperature": 0.0, "avg_logprob": -0.17817006391637466, "compression_ratio": 1.0602409638554218, "no_speech_prob": 6.501507596112788e-05}, {"id": 400, "seek": 227306, "start": 2273.06, "end": 2288.06, "text": " going to work.", "tokens": [516, 281, 589, 13], "temperature": 0.0, "avg_logprob": -0.8972361087799072, "compression_ratio": 0.6363636363636364, "no_speech_prob": 3.168778494000435e-05}, {"id": 401, "seek": 228806, "start": 2288.06, "end": 2304.06, "text": " So then given it's found an operator, it then needs to find a function and it's found a function here, but I guess it's not a complete function because it's got an operator to its left. And so it keeps looking until it's got a complete function.", "tokens": [407, 550, 2212, 309, 311, 1352, 364, 12973, 11, 309, 550, 2203, 281, 915, 257, 2445, 293, 309, 311, 1352, 257, 2445, 510, 11, 457, 286, 2041, 309, 311, 406, 257, 3566, 2445, 570, 309, 311, 658, 364, 12973, 281, 1080, 1411, 13, 400, 370, 309, 5965, 1237, 1826, 309, 311, 658, 257, 3566, 2445, 13], "temperature": 0.0, "avg_logprob": -0.1669690450032552, "compression_ratio": 1.7536231884057971, "no_speech_prob": 1.5439205526490696e-05}, {"id": 402, "seek": 228806, "start": 2304.06, "end": 2307.06, "text": " Something like that.", "tokens": [6595, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.1669690450032552, "compression_ratio": 1.7536231884057971, "no_speech_prob": 1.5439205526490696e-05}, {"id": 403, "seek": 228806, "start": 2307.06, "end": 2317.06, "text": " I'd love to see like a really clear documentation of this parsing rule, like how is this passed?", "tokens": [286, 1116, 959, 281, 536, 411, 257, 534, 1850, 14333, 295, 341, 21156, 278, 4978, 11, 411, 577, 307, 341, 4678, 30], "temperature": 0.0, "avg_logprob": -0.1669690450032552, "compression_ratio": 1.7536231884057971, "no_speech_prob": 1.5439205526490696e-05}, {"id": 404, "seek": 231706, "start": 2317.06, "end": 2325.06, "text": " Yeah, I think you're right. And then there's a way to do it with train and without the last symbol. I forget what it's called.", "tokens": [865, 11, 286, 519, 291, 434, 558, 13, 400, 550, 456, 311, 257, 636, 281, 360, 309, 365, 3847, 293, 1553, 264, 1036, 5986, 13, 286, 2870, 437, 309, 311, 1219, 13], "temperature": 0.0, "avg_logprob": -0.14977170185870434, "compression_ratio": 1.5524861878453038, "no_speech_prob": 3.821874997811392e-05}, {"id": 405, "seek": 231706, "start": 2325.06, "end": 2328.06, "text": " Without this symbol.", "tokens": [9129, 341, 5986, 13], "temperature": 0.0, "avg_logprob": -0.14977170185870434, "compression_ratio": 1.5524861878453038, "no_speech_prob": 3.821874997811392e-05}, {"id": 406, "seek": 231706, "start": 2328.06, "end": 2332.06, "text": " Right, without the tilde. I'm pretty sure you're thinking of J.", "tokens": [1779, 11, 1553, 264, 45046, 13, 286, 478, 1238, 988, 291, 434, 1953, 295, 508, 13], "temperature": 0.0, "avg_logprob": -0.14977170185870434, "compression_ratio": 1.5524861878453038, "no_speech_prob": 3.821874997811392e-05}, {"id": 407, "seek": 231706, "start": 2332.06, "end": 2338.06, "text": " It's got a hook in J. I'm pretty sure APL does not have such a thing.", "tokens": [467, 311, 658, 257, 6328, 294, 508, 13, 286, 478, 1238, 988, 5372, 43, 775, 406, 362, 1270, 257, 551, 13], "temperature": 0.0, "avg_logprob": -0.14977170185870434, "compression_ratio": 1.5524861878453038, "no_speech_prob": 3.821874997811392e-05}, {"id": 408, "seek": 233806, "start": 2338.06, "end": 2347.06, "text": " See the response from the Adam gave to my computing the mean of a vector. One of them was equivalent to this and one of them the last.", "tokens": [3008, 264, 4134, 490, 264, 7938, 2729, 281, 452, 15866, 264, 914, 295, 257, 8062, 13, 1485, 295, 552, 390, 10344, 281, 341, 293, 472, 295, 552, 264, 1036, 13], "temperature": 0.0, "avg_logprob": -0.1362676306085272, "compression_ratio": 1.5784753363228698, "no_speech_prob": 9.817330465011764e-06}, {"id": 409, "seek": 233806, "start": 2347.06, "end": 2353.06, "text": " No, no, that was different. He had a fork. A fork is a list of three verbs in a row.", "tokens": [883, 11, 572, 11, 300, 390, 819, 13, 634, 632, 257, 17716, 13, 316, 17716, 307, 257, 1329, 295, 1045, 30051, 294, 257, 5386, 13], "temperature": 0.0, "avg_logprob": -0.1362676306085272, "compression_ratio": 1.5784753363228698, "no_speech_prob": 9.817330465011764e-06}, {"id": 410, "seek": 233806, "start": 2353.06, "end": 2362.06, "text": " So you're thinking of something else, which is the definition of mean, which is very interesting, but we are kind of skipping ahead,", "tokens": [407, 291, 434, 1953, 295, 746, 1646, 11, 597, 307, 264, 7123, 295, 914, 11, 597, 307, 588, 1880, 11, 457, 321, 366, 733, 295, 31533, 2286, 11], "temperature": 0.0, "avg_logprob": -0.1362676306085272, "compression_ratio": 1.5784753363228698, "no_speech_prob": 9.817330465011764e-06}, {"id": 411, "seek": 236206, "start": 2362.06, "end": 2381.06, "text": " which is equal to the sum divided by the count, which is tally, which I can't remember how to type.", "tokens": [597, 307, 2681, 281, 264, 2408, 6666, 538, 264, 1207, 11, 597, 307, 256, 379, 11, 597, 286, 393, 380, 1604, 577, 281, 2010, 13], "temperature": 0.0, "avg_logprob": -0.11397141079569972, "compression_ratio": 1.2477064220183487, "no_speech_prob": 1.4970823031035252e-05}, {"id": 412, "seek": 236206, "start": 2381.06, "end": 2383.06, "text": " Double quote.", "tokens": [16633, 6513, 13], "temperature": 0.0, "avg_logprob": -0.11397141079569972, "compression_ratio": 1.2477064220183487, "no_speech_prob": 1.4970823031035252e-05}, {"id": 413, "seek": 236206, "start": 2383.06, "end": 2390.06, "text": " Okay, that's the mean.", "tokens": [1033, 11, 300, 311, 264, 914, 13], "temperature": 0.0, "avg_logprob": -0.11397141079569972, "compression_ratio": 1.2477064220183487, "no_speech_prob": 1.4970823031035252e-05}, {"id": 414, "seek": 239006, "start": 2390.06, "end": 2398.06, "text": " Okay. And this is different because we here we've got one, two, three verbs.", "tokens": [1033, 13, 400, 341, 307, 819, 570, 321, 510, 321, 600, 658, 472, 11, 732, 11, 1045, 30051, 13], "temperature": 0.0, "avg_logprob": -0.19592490196228027, "compression_ratio": 1.6136363636363635, "no_speech_prob": 3.269499211455695e-05}, {"id": 415, "seek": 239006, "start": 2398.06, "end": 2403.06, "text": " And the definition of this three verbs in a row. It's called a fork.", "tokens": [400, 264, 7123, 295, 341, 1045, 30051, 294, 257, 5386, 13, 467, 311, 1219, 257, 17716, 13], "temperature": 0.0, "avg_logprob": -0.19592490196228027, "compression_ratio": 1.6136363636363635, "no_speech_prob": 3.269499211455695e-05}, {"id": 416, "seek": 239006, "start": 2403.06, "end": 2409.06, "text": " And what it does is it applies this to omega.", "tokens": [400, 437, 309, 775, 307, 309, 13165, 341, 281, 10498, 13], "temperature": 0.0, "avg_logprob": -0.19592490196228027, "compression_ratio": 1.6136363636363635, "no_speech_prob": 3.269499211455695e-05}, {"id": 417, "seek": 239006, "start": 2409.06, "end": 2418.06, "text": " And this to omega, and this to the two results. So, some of omega divided by count of omega.", "tokens": [400, 341, 281, 10498, 11, 293, 341, 281, 264, 732, 3542, 13, 407, 11, 512, 295, 10498, 6666, 538, 1207, 295, 10498, 13], "temperature": 0.0, "avg_logprob": -0.19592490196228027, "compression_ratio": 1.6136363636363635, "no_speech_prob": 3.269499211455695e-05}, {"id": 418, "seek": 241806, "start": 2418.06, "end": 2421.06, "text": " But as I said, we're skipping ahead.", "tokens": [583, 382, 286, 848, 11, 321, 434, 31533, 2286, 13], "temperature": 0.0, "avg_logprob": -0.1482551502731611, "compression_ratio": 1.3285714285714285, "no_speech_prob": 3.0709161364939064e-05}, {"id": 419, "seek": 241806, "start": 2421.06, "end": 2431.06, "text": " Jeremy, there's an option you can turn on with the box option to show trains and functions is like parse trees.", "tokens": [17809, 11, 456, 311, 364, 3614, 291, 393, 1261, 322, 365, 264, 2424, 3614, 281, 855, 16329, 293, 6828, 307, 411, 48377, 5852, 13], "temperature": 0.0, "avg_logprob": -0.1482551502731611, "compression_ratio": 1.3285714285714285, "no_speech_prob": 3.0709161364939064e-05}, {"id": 420, "seek": 241806, "start": 2431.06, "end": 2443.06, "text": " I posted it in the chat. Okay, great.", "tokens": [286, 9437, 309, 294, 264, 5081, 13, 1033, 11, 869, 13], "temperature": 0.0, "avg_logprob": -0.1482551502731611, "compression_ratio": 1.3285714285714285, "no_speech_prob": 3.0709161364939064e-05}, {"id": 421, "seek": 244306, "start": 2443.06, "end": 2448.06, "text": " And presumably that would just be if we remove this.", "tokens": [400, 26742, 300, 576, 445, 312, 498, 321, 4159, 341, 13], "temperature": 0.0, "avg_logprob": -0.136374996554467, "compression_ratio": 1.3515151515151516, "no_speech_prob": 1.4284735698311124e-05}, {"id": 422, "seek": 244306, "start": 2448.06, "end": 2453.06, "text": " Why wouldn't you always want that? It's beautiful, isn't it?", "tokens": [1545, 2759, 380, 291, 1009, 528, 300, 30, 467, 311, 2238, 11, 1943, 380, 309, 30], "temperature": 0.0, "avg_logprob": -0.136374996554467, "compression_ratio": 1.3515151515151516, "no_speech_prob": 1.4284735698311124e-05}, {"id": 423, "seek": 244306, "start": 2453.06, "end": 2456.06, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.136374996554467, "compression_ratio": 1.3515151515151516, "no_speech_prob": 1.4284735698311124e-05}, {"id": 424, "seek": 244306, "start": 2456.06, "end": 2465.06, "text": " Still a little bit of a pain kind of deciphering where all of the arguments are supposed to end up, but", "tokens": [8291, 257, 707, 857, 295, 257, 1822, 733, 295, 49859, 278, 689, 439, 295, 264, 12869, 366, 3442, 281, 917, 493, 11, 457], "temperature": 0.0, "avg_logprob": -0.136374996554467, "compression_ratio": 1.3515151515151516, "no_speech_prob": 1.4284735698311124e-05}, {"id": 425, "seek": 246506, "start": 2465.06, "end": 2474.06, "text": " yeah, well, not too bad, right? Because you've got to, this is obviously going to apply to the right hand side.", "tokens": [1338, 11, 731, 11, 406, 886, 1578, 11, 558, 30, 1436, 291, 600, 658, 281, 11, 341, 307, 2745, 516, 281, 3079, 281, 264, 558, 1011, 1252, 13], "temperature": 0.0, "avg_logprob": -0.2077565131249366, "compression_ratio": 1.4831460674157304, "no_speech_prob": 5.421596597443568e-06}, {"id": 426, "seek": 246506, "start": 2474.06, "end": 2479.06, "text": " So I guess that's okay. So,", "tokens": [407, 286, 2041, 300, 311, 1392, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.2077565131249366, "compression_ratio": 1.4831460674157304, "no_speech_prob": 5.421596597443568e-06}, {"id": 427, "seek": 246506, "start": 2479.06, "end": 2483.06, "text": " and yeah, but I mean, you can always and you have, I think that", "tokens": [293, 1338, 11, 457, 286, 914, 11, 291, 393, 1009, 293, 291, 362, 11, 286, 519, 300], "temperature": 0.0, "avg_logprob": -0.2077565131249366, "compression_ratio": 1.4831460674157304, "no_speech_prob": 5.421596597443568e-06}, {"id": 428, "seek": 246506, "start": 2483.06, "end": 2487.06, "text": " those pictures they have is nice if like what the site does.", "tokens": [729, 5242, 436, 362, 307, 1481, 498, 411, 437, 264, 3621, 775, 13], "temperature": 0.0, "avg_logprob": -0.2077565131249366, "compression_ratio": 1.4831460674157304, "no_speech_prob": 5.421596597443568e-06}, {"id": 429, "seek": 248706, "start": 2487.06, "end": 2496.06, "text": " Right. Well, let's put that", "tokens": [1779, 13, 1042, 11, 718, 311, 829, 300], "temperature": 0.0, "avg_logprob": -0.19300689299901327, "compression_ratio": 0.7714285714285715, "no_speech_prob": 4.129621447646059e-05}, {"id": 430, "seek": 249606, "start": 2496.06, "end": 2525.06, "text": " at the top maybe.", "tokens": [412, 264, 1192, 1310, 13], "temperature": 0.0, "avg_logprob": -0.16432803206973606, "compression_ratio": 0.68, "no_speech_prob": 0.00010850099351955578}, {"id": 431, "seek": 252506, "start": 2525.06, "end": 2545.06, "text": " I've actually got a complex section there.", "tokens": [286, 600, 767, 658, 257, 3997, 3541, 456, 13], "temperature": 0.0, "avg_logprob": -0.25926621143634504, "compression_ratio": 0.84, "no_speech_prob": 8.714167051948607e-05}, {"id": 432, "seek": 254506, "start": 2545.06, "end": 2555.06, "text": " So I should move the complex description.", "tokens": [407, 286, 820, 1286, 264, 3997, 3855, 13], "temperature": 0.0, "avg_logprob": -0.11189244190851848, "compression_ratio": 0.8367346938775511, "no_speech_prob": 2.3170612621470354e-05}, {"id": 433, "seek": 255506, "start": 2555.06, "end": 2584.06, "text": " Or just maybe I'll copy it.", "tokens": [1610, 445, 1310, 286, 603, 5055, 309, 13], "temperature": 0.0, "avg_logprob": -0.3458583354949951, "compression_ratio": 0.7714285714285715, "no_speech_prob": 0.0008501632837578654}, {"id": 434, "seek": 258406, "start": 2584.06, "end": 2587.06, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.16345468163490295, "compression_ratio": 0.8571428571428571, "no_speech_prob": 5.8268295106245205e-05}, {"id": 435, "seek": 258406, "start": 2587.06, "end": 2594.06, "text": " Maybe it would even be useful to see", "tokens": [2704, 309, 576, 754, 312, 4420, 281, 536], "temperature": 0.0, "avg_logprob": -0.16345468163490295, "compression_ratio": 0.8571428571428571, "no_speech_prob": 5.8268295106245205e-05}, {"id": 436, "seek": 259406, "start": 2594.06, "end": 2618.06, "text": " for J0.", "tokens": [337, 508, 15, 13], "temperature": 0.0, "avg_logprob": -0.5005367994308472, "compression_ratio": 0.4666666666666667, "no_speech_prob": 4.33078603236936e-05}, {"id": 437, "seek": 261806, "start": 2618.06, "end": 2631.06, "text": " So I think we can now get back to our stuff for 2022 APL competition.", "tokens": [407, 286, 519, 321, 393, 586, 483, 646, 281, 527, 1507, 337, 20229, 5372, 43, 6211, 13], "temperature": 0.0, "avg_logprob": -0.09132180791912657, "compression_ratio": 1.09, "no_speech_prob": 3.4791086363838986e-05}, {"id": 438, "seek": 261806, "start": 2631.06, "end": 2645.06, "text": " So that was our kind of group by thing.", "tokens": [407, 300, 390, 527, 733, 295, 1594, 538, 551, 13], "temperature": 0.0, "avg_logprob": -0.09132180791912657, "compression_ratio": 1.09, "no_speech_prob": 3.4791086363838986e-05}, {"id": 439, "seek": 264506, "start": 2645.06, "end": 2658.06, "text": " Okay. So that, and did we have monadic and dyadic?", "tokens": [1033, 13, 407, 300, 11, 293, 630, 321, 362, 1108, 43341, 293, 14584, 43341, 30], "temperature": 0.0, "avg_logprob": -0.20021979625408465, "compression_ratio": 1.064516129032258, "no_speech_prob": 3.762178312172182e-05}, {"id": 440, "seek": 264506, "start": 2658.06, "end": 2662.06, "text": " This is dyadic.", "tokens": [639, 307, 14584, 43341, 13], "temperature": 0.0, "avg_logprob": -0.20021979625408465, "compression_ratio": 1.064516129032258, "no_speech_prob": 3.762178312172182e-05}, {"id": 441, "seek": 266206, "start": 2662.06, "end": 2676.06, "text": " And this is, oh, right, right, right. We've got the monadic and dyadic versions of the function created by the operator. Cool.", "tokens": [400, 341, 307, 11, 1954, 11, 558, 11, 558, 11, 558, 13, 492, 600, 658, 264, 1108, 43341, 293, 14584, 43341, 9606, 295, 264, 2445, 2942, 538, 264, 12973, 13, 8561, 13], "temperature": 0.0, "avg_logprob": -0.1180695825152927, "compression_ratio": 1.2475247524752475, "no_speech_prob": 2.1110623492859304e-05}, {"id": 442, "seek": 267606, "start": 2676.06, "end": 2705.06, "text": " All right. So the next in our list of these two, let's do this one then, shall we?", "tokens": [1057, 558, 13, 407, 264, 958, 294, 527, 1329, 295, 613, 732, 11, 718, 311, 360, 341, 472, 550, 11, 4393, 321, 30], "temperature": 0.0, "avg_logprob": -0.12132964310822664, "compression_ratio": 1.0512820512820513, "no_speech_prob": 5.8274963521398604e-05}, {"id": 443, "seek": 270506, "start": 2705.06, "end": 2709.06, "text": " Oops, something funny happened there.", "tokens": [21726, 11, 746, 4074, 2011, 456, 13], "temperature": 0.0, "avg_logprob": -0.2989060502303274, "compression_ratio": 0.9375, "no_speech_prob": 6.096094148233533e-05}, {"id": 444, "seek": 270506, "start": 2709.06, "end": 2718.06, "text": " So this is called key.", "tokens": [407, 341, 307, 1219, 2141, 13], "temperature": 0.0, "avg_logprob": -0.2989060502303274, "compression_ratio": 0.9375, "no_speech_prob": 6.096094148233533e-05}, {"id": 445, "seek": 271806, "start": 2718.06, "end": 2741.06, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.38767004013061523, "compression_ratio": 0.38461538461538464, "no_speech_prob": 1.6961503206402995e-05}, {"id": 446, "seek": 274106, "start": 2741.06, "end": 2759.06, "text": " Okay. This is called left shoe. I like it. Cool name.", "tokens": [1033, 13, 639, 307, 1219, 1411, 12796, 13, 286, 411, 309, 13, 8561, 1315, 13], "temperature": 0.0, "avg_logprob": -0.21793312775461296, "compression_ratio": 0.8983050847457628, "no_speech_prob": 1.280420292459894e-05}, {"id": 447, "seek": 275906, "start": 2759.06, "end": 2772.06, "text": " I changed the wrong name.", "tokens": [286, 3105, 264, 2085, 1315, 13], "temperature": 0.0, "avg_logprob": -0.2748438835144043, "compression_ratio": 0.7575757575757576, "no_speech_prob": 2.885353569581639e-05}, {"id": 448, "seek": 277206, "start": 2772.06, "end": 2797.06, "text": " Okay. Monadic is enclosed and dyadic has a couple of meanings.", "tokens": [1033, 13, 4713, 43341, 307, 42089, 293, 14584, 43341, 575, 257, 1916, 295, 28138, 13], "temperature": 0.0, "avg_logprob": -0.12132314631813451, "compression_ratio": 0.9393939393939394, "no_speech_prob": 7.766379894746933e-06}, {"id": 449, "seek": 279706, "start": 2797.06, "end": 2812.06, "text": " So this enclosed thing happens, it gets used all the time.", "tokens": [407, 341, 42089, 551, 2314, 11, 309, 2170, 1143, 439, 264, 565, 13], "temperature": 0.0, "avg_logprob": -0.15106159098008098, "compression_ratio": 0.9666666666666667, "no_speech_prob": 1.1298096069367602e-05}, {"id": 450, "seek": 281206, "start": 2812.06, "end": 2831.06, "text": " And it seems to be something like what J calls boxing or kind of creating like references or something.", "tokens": [400, 309, 2544, 281, 312, 746, 411, 437, 508, 5498, 24424, 420, 733, 295, 4084, 411, 15400, 420, 746, 13], "temperature": 0.0, "avg_logprob": -0.11176925897598267, "compression_ratio": 1.2560975609756098, "no_speech_prob": 1.643870746192988e-05}, {"id": 451, "seek": 283106, "start": 2831.06, "end": 2847.06, "text": " Okay. So we're basically, that's a list.", "tokens": [1033, 13, 407, 321, 434, 1936, 11, 300, 311, 257, 1329, 13], "temperature": 0.0, "avg_logprob": -0.12619530070911755, "compression_ratio": 1.1756756756756757, "no_speech_prob": 1.4969791664043441e-05}, {"id": 452, "seek": 283106, "start": 2847.06, "end": 2852.06, "text": " And this is row of that list.", "tokens": [400, 341, 307, 5386, 295, 300, 1329, 13], "temperature": 0.0, "avg_logprob": -0.12619530070911755, "compression_ratio": 1.1756756756756757, "no_speech_prob": 1.4969791664043441e-05}, {"id": 453, "seek": 283106, "start": 2852.06, "end": 2856.06, "text": " Row of the list.", "tokens": [20309, 295, 264, 1329, 13], "temperature": 0.0, "avg_logprob": -0.12619530070911755, "compression_ratio": 1.1756756756756757, "no_speech_prob": 1.4969791664043441e-05}, {"id": 454, "seek": 285606, "start": 2856.06, "end": 2863.06, "text": " Okay. And then,", "tokens": [1033, 13, 400, 550, 11], "temperature": 0.0, "avg_logprob": -0.11090169454875745, "compression_ratio": 1.8396946564885497, "no_speech_prob": 1.4738695426785853e-05}, {"id": 455, "seek": 285606, "start": 2863.06, "end": 2866.06, "text": " so this is a list with three things in it.", "tokens": [370, 341, 307, 257, 1329, 365, 1045, 721, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.11090169454875745, "compression_ratio": 1.8396946564885497, "no_speech_prob": 1.4738695426785853e-05}, {"id": 456, "seek": 285606, "start": 2866.06, "end": 2869.06, "text": " This is a list with two things in it.", "tokens": [639, 307, 257, 1329, 365, 732, 721, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.11090169454875745, "compression_ratio": 1.8396946564885497, "no_speech_prob": 1.4738695426785853e-05}, {"id": 457, "seek": 285606, "start": 2869.06, "end": 2877.06, "text": " And the second of the things in the list is the list two, three.", "tokens": [400, 264, 1150, 295, 264, 721, 294, 264, 1329, 307, 264, 1329, 732, 11, 1045, 13], "temperature": 0.0, "avg_logprob": -0.11090169454875745, "compression_ratio": 1.8396946564885497, "no_speech_prob": 1.4738695426785853e-05}, {"id": 458, "seek": 285606, "start": 2877.06, "end": 2879.06, "text": " Does that make sense?", "tokens": [4402, 300, 652, 2020, 30], "temperature": 0.0, "avg_logprob": -0.11090169454875745, "compression_ratio": 1.8396946564885497, "no_speech_prob": 1.4738695426785853e-05}, {"id": 459, "seek": 285606, "start": 2879.06, "end": 2885.06, "text": " And then this is going to be a list with one thing in it.", "tokens": [400, 550, 341, 307, 516, 281, 312, 257, 1329, 365, 472, 551, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.11090169454875745, "compression_ratio": 1.8396946564885497, "no_speech_prob": 1.4738695426785853e-05}, {"id": 460, "seek": 288506, "start": 2885.06, "end": 2887.06, "text": " So,", "tokens": [407, 11], "temperature": 0.4, "avg_logprob": -0.5193900591061439, "compression_ratio": 1.5923076923076922, "no_speech_prob": 1.3630126886710059e-05}, {"id": 461, "seek": 288506, "start": 2887.06, "end": 2888.06, "text": " this is a list.", "tokens": [341, 307, 257, 1329, 13], "temperature": 0.4, "avg_logprob": -0.5193900591061439, "compression_ratio": 1.5923076923076922, "no_speech_prob": 1.3630126886710059e-05}, {"id": 462, "seek": 288506, "start": 2888.06, "end": 2891.06, "text": " Oh, this is a scale.", "tokens": [876, 11, 341, 307, 257, 4373, 13], "temperature": 0.4, "avg_logprob": -0.5193900591061439, "compression_ratio": 1.5923076923076922, "no_speech_prob": 1.3630126886710059e-05}, {"id": 463, "seek": 288506, "start": 2891.06, "end": 2896.06, "text": " Is it subtle. It's a,", "tokens": [1119, 309, 13743, 13, 467, 311, 257, 11], "temperature": 0.4, "avg_logprob": -0.5193900591061439, "compression_ratio": 1.5923076923076922, "no_speech_prob": 1.3630126886710059e-05}, {"id": 464, "seek": 288506, "start": 2896.06, "end": 2899.06, "text": " Oh, this is a scalar. That's interesting. Yes. Okay. Of course.", "tokens": [876, 11, 341, 307, 257, 39684, 13, 663, 311, 1880, 13, 1079, 13, 1033, 13, 2720, 1164, 13], "temperature": 0.4, "avg_logprob": -0.5193900591061439, "compression_ratio": 1.5923076923076922, "no_speech_prob": 1.3630126886710059e-05}, {"id": 465, "seek": 288506, "start": 2899.06, "end": 2901.06, "text": " This is a scalar.", "tokens": [639, 307, 257, 39684, 13], "temperature": 0.4, "avg_logprob": -0.5193900591061439, "compression_ratio": 1.5923076923076922, "no_speech_prob": 1.3630126886710059e-05}, {"id": 466, "seek": 288506, "start": 2901.06, "end": 2904.06, "text": " So it's empty. It's got an empty rank.", "tokens": [407, 309, 311, 6707, 13, 467, 311, 658, 364, 6707, 6181, 13], "temperature": 0.4, "avg_logprob": -0.5193900591061439, "compression_ratio": 1.5923076923076922, "no_speech_prob": 1.3630126886710059e-05}, {"id": 467, "seek": 288506, "start": 2904.06, "end": 2909.06, "text": " And empty shape. Sorry.", "tokens": [400, 6707, 3909, 13, 4919, 13], "temperature": 0.4, "avg_logprob": -0.5193900591061439, "compression_ratio": 1.5923076923076922, "no_speech_prob": 1.3630126886710059e-05}, {"id": 468, "seek": 290906, "start": 2909.06, "end": 2917.06, "text": " I think that's interesting.", "tokens": [286, 519, 300, 311, 1880, 13], "temperature": 0.0, "avg_logprob": -0.2877897875649588, "compression_ratio": 1.3445378151260505, "no_speech_prob": 1.4970266420277767e-05}, {"id": 469, "seek": 290906, "start": 2917.06, "end": 2923.06, "text": " Right. And close. How do I type in close?", "tokens": [1779, 13, 400, 1998, 13, 1012, 360, 286, 2010, 294, 1998, 30], "temperature": 0.0, "avg_logprob": -0.2877897875649588, "compression_ratio": 1.3445378151260505, "no_speech_prob": 1.4970266420277767e-05}, {"id": 470, "seek": 290906, "start": 2923.06, "end": 2927.06, "text": " See.", "tokens": [3008, 13], "temperature": 0.0, "avg_logprob": -0.2877897875649588, "compression_ratio": 1.3445378151260505, "no_speech_prob": 1.4970266420277767e-05}, {"id": 471, "seek": 290906, "start": 2927.06, "end": 2930.06, "text": " Right. Right. Right. Okay. So that's what it does.", "tokens": [1779, 13, 1779, 13, 1779, 13, 1033, 13, 407, 300, 311, 437, 309, 775, 13], "temperature": 0.0, "avg_logprob": -0.2877897875649588, "compression_ratio": 1.3445378151260505, "no_speech_prob": 1.4970266420277767e-05}, {"id": 472, "seek": 290906, "start": 2930.06, "end": 2935.06, "text": " Is it creates a scalar or an atom.", "tokens": [1119, 309, 7829, 257, 39684, 420, 364, 12018, 13], "temperature": 0.0, "avg_logprob": -0.2877897875649588, "compression_ratio": 1.3445378151260505, "no_speech_prob": 1.4970266420277767e-05}, {"id": 473, "seek": 293506, "start": 2935.06, "end": 2947.06, "text": " And then it's going to be a list containing a list.", "tokens": [400, 550, 309, 311, 516, 281, 312, 257, 1329, 19273, 257, 1329, 13], "temperature": 0.0, "avg_logprob": -0.34432049801475123, "compression_ratio": 1.4306569343065694, "no_speech_prob": 1.3210921679274179e-05}, {"id": 474, "seek": 293506, "start": 2947.06, "end": 2955.06, "text": " And you've got to do that because", "tokens": [400, 291, 600, 658, 281, 360, 300, 570], "temperature": 0.0, "avg_logprob": -0.34432049801475123, "compression_ratio": 1.4306569343065694, "no_speech_prob": 1.3210921679274179e-05}, {"id": 475, "seek": 293506, "start": 2955.06, "end": 2958.06, "text": " arrays kind of like conceptually only contain atoms.", "tokens": [41011, 733, 295, 411, 3410, 671, 787, 5304, 16871, 13], "temperature": 0.0, "avg_logprob": -0.34432049801475123, "compression_ratio": 1.4306569343065694, "no_speech_prob": 1.3210921679274179e-05}, {"id": 476, "seek": 293506, "start": 2958.06, "end": 2960.06, "text": " So when you.", "tokens": [407, 562, 291, 13], "temperature": 0.0, "avg_logprob": -0.34432049801475123, "compression_ratio": 1.4306569343065694, "no_speech_prob": 1.3210921679274179e-05}, {"id": 477, "seek": 293506, "start": 2960.06, "end": 2964.06, "text": " Strand it like this, it's actually creating.", "tokens": [47517, 309, 411, 341, 11, 309, 311, 767, 4084, 13], "temperature": 0.0, "avg_logprob": -0.34432049801475123, "compression_ratio": 1.4306569343065694, "no_speech_prob": 1.3210921679274179e-05}, {"id": 478, "seek": 296406, "start": 2964.06, "end": 2966.06, "text": " A scalar.", "tokens": [316, 39684, 13], "temperature": 0.0, "avg_logprob": -0.3859021822611491, "compression_ratio": 1.2695652173913043, "no_speech_prob": 2.3549882826046087e-05}, {"id": 479, "seek": 296406, "start": 2966.06, "end": 2968.06, "text": " Which I think.", "tokens": [3013, 286, 519, 13], "temperature": 0.0, "avg_logprob": -0.3859021822611491, "compression_ratio": 1.2695652173913043, "no_speech_prob": 2.3549882826046087e-05}, {"id": 480, "seek": 296406, "start": 2968.06, "end": 2981.06, "text": " Is the same as concatenating.", "tokens": [1119, 264, 912, 382, 1588, 7186, 990, 13], "temperature": 0.0, "avg_logprob": -0.3859021822611491, "compression_ratio": 1.2695652173913043, "no_speech_prob": 2.3549882826046087e-05}, {"id": 481, "seek": 296406, "start": 2981.06, "end": 2983.06, "text": " It is say, okay.", "tokens": [467, 307, 584, 11, 1392, 13], "temperature": 0.0, "avg_logprob": -0.3859021822611491, "compression_ratio": 1.2695652173913043, "no_speech_prob": 2.3549882826046087e-05}, {"id": 482, "seek": 296406, "start": 2983.06, "end": 2985.06, "text": " So if I can catinate.", "tokens": [407, 498, 286, 393, 3857, 13923, 13], "temperature": 0.0, "avg_logprob": -0.3859021822611491, "compression_ratio": 1.2695652173913043, "no_speech_prob": 2.3549882826046087e-05}, {"id": 483, "seek": 296406, "start": 2985.06, "end": 2987.06, "text": " The scale of one.", "tokens": [440, 4373, 295, 472, 13], "temperature": 0.0, "avg_logprob": -0.3859021822611491, "compression_ratio": 1.2695652173913043, "no_speech_prob": 2.3549882826046087e-05}, {"id": 484, "seek": 296406, "start": 2987.06, "end": 2989.06, "text": " With the atom.", "tokens": [2022, 264, 12018, 13], "temperature": 0.0, "avg_logprob": -0.3859021822611491, "compression_ratio": 1.2695652173913043, "no_speech_prob": 2.3549882826046087e-05}, {"id": 485, "seek": 296406, "start": 2989.06, "end": 2991.06, "text": " And close to three.", "tokens": [400, 1998, 281, 1045, 13], "temperature": 0.0, "avg_logprob": -0.3859021822611491, "compression_ratio": 1.2695652173913043, "no_speech_prob": 2.3549882826046087e-05}, {"id": 486, "seek": 299106, "start": 2991.06, "end": 2995.06, "text": " And then I can add a vector.", "tokens": [400, 550, 286, 393, 909, 257, 8062, 13], "temperature": 0.0, "avg_logprob": -0.5923291799184438, "compression_ratio": 1.1111111111111112, "no_speech_prob": 1.6441972547909245e-05}, {"id": 487, "seek": 299106, "start": 2995.06, "end": 3004.06, "text": " That's what this is.", "tokens": [663, 311, 437, 341, 307, 13], "temperature": 0.0, "avg_logprob": -0.5923291799184438, "compression_ratio": 1.1111111111111112, "no_speech_prob": 1.6441972547909245e-05}, {"id": 488, "seek": 299106, "start": 3004.06, "end": 3009.06, "text": " Does that make sense?", "tokens": [4402, 300, 652, 2020, 30], "temperature": 0.0, "avg_logprob": -0.5923291799184438, "compression_ratio": 1.1111111111111112, "no_speech_prob": 1.6441972547909245e-05}, {"id": 489, "seek": 299106, "start": 3009.06, "end": 3016.06, "text": " It's like a void pointer or.", "tokens": [467, 311, 411, 257, 22009, 23918, 420, 13], "temperature": 0.0, "avg_logprob": -0.5923291799184438, "compression_ratio": 1.1111111111111112, "no_speech_prob": 1.6441972547909245e-05}, {"id": 490, "seek": 301606, "start": 3016.06, "end": 3021.06, "text": " A loop pointer.", "tokens": [316, 6367, 23918, 13], "temperature": 0.0, "avg_logprob": -0.31087835335437164, "compression_ratio": 1.4244186046511629, "no_speech_prob": 8.478989184368402e-05}, {"id": 491, "seek": 301606, "start": 3021.06, "end": 3024.06, "text": " Has anybody used this?", "tokens": [8646, 4472, 1143, 341, 30], "temperature": 0.0, "avg_logprob": -0.31087835335437164, "compression_ratio": 1.4244186046511629, "no_speech_prob": 8.478989184368402e-05}, {"id": 492, "seek": 301606, "start": 3024.06, "end": 3026.06, "text": " It seems to come up quite a bit.", "tokens": [467, 2544, 281, 808, 493, 1596, 257, 857, 13], "temperature": 0.0, "avg_logprob": -0.31087835335437164, "compression_ratio": 1.4244186046511629, "no_speech_prob": 8.478989184368402e-05}, {"id": 493, "seek": 301606, "start": 3026.06, "end": 3028.06, "text": " Did you use it in any of your solutions?", "tokens": [2589, 291, 764, 309, 294, 604, 295, 428, 6547, 30], "temperature": 0.0, "avg_logprob": -0.31087835335437164, "compression_ratio": 1.4244186046511629, "no_speech_prob": 8.478989184368402e-05}, {"id": 494, "seek": 301606, "start": 3028.06, "end": 3030.06, "text": " Or anybody else used it?", "tokens": [1610, 4472, 1646, 1143, 309, 30], "temperature": 0.0, "avg_logprob": -0.31087835335437164, "compression_ratio": 1.4244186046511629, "no_speech_prob": 8.478989184368402e-05}, {"id": 495, "seek": 301606, "start": 3030.06, "end": 3032.06, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.31087835335437164, "compression_ratio": 1.4244186046511629, "no_speech_prob": 8.478989184368402e-05}, {"id": 496, "seek": 301606, "start": 3032.06, "end": 3034.06, "text": " Especially for grouping.", "tokens": [8545, 337, 40149, 13], "temperature": 0.0, "avg_logprob": -0.31087835335437164, "compression_ratio": 1.4244186046511629, "no_speech_prob": 8.478989184368402e-05}, {"id": 497, "seek": 301606, "start": 3034.06, "end": 3036.06, "text": " Partition thinking.", "tokens": [4100, 849, 1953, 13], "temperature": 0.0, "avg_logprob": -0.31087835335437164, "compression_ratio": 1.4244186046511629, "no_speech_prob": 8.478989184368402e-05}, {"id": 498, "seek": 301606, "start": 3036.06, "end": 3042.06, "text": " Yeah. Tell us more.", "tokens": [865, 13, 5115, 505, 544, 13], "temperature": 0.0, "avg_logprob": -0.31087835335437164, "compression_ratio": 1.4244186046511629, "no_speech_prob": 8.478989184368402e-05}, {"id": 499, "seek": 301606, "start": 3042.06, "end": 3044.06, "text": " I think that is your example. Sorry.", "tokens": [286, 519, 300, 307, 428, 1365, 13, 4919, 13], "temperature": 0.0, "avg_logprob": -0.31087835335437164, "compression_ratio": 1.4244186046511629, "no_speech_prob": 8.478989184368402e-05}, {"id": 500, "seek": 304406, "start": 3044.06, "end": 3046.06, "text": " I think that is your example. Sorry.", "tokens": [286, 519, 300, 307, 428, 1365, 13, 4919, 13], "temperature": 0.0, "avg_logprob": -0.2982099645278033, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.0002609676157590002}, {"id": 501, "seek": 304406, "start": 3046.06, "end": 3052.06, "text": " It's just a simple.", "tokens": [467, 311, 445, 257, 2199, 13], "temperature": 0.0, "avg_logprob": -0.2982099645278033, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.0002609676157590002}, {"id": 502, "seek": 304406, "start": 3052.06, "end": 3055.06, "text": " But once you put the element is a one chunk,", "tokens": [583, 1564, 291, 829, 264, 4478, 307, 257, 472, 16635, 11], "temperature": 0.0, "avg_logprob": -0.2982099645278033, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.0002609676157590002}, {"id": 503, "seek": 304406, "start": 3055.06, "end": 3057.06, "text": " and then you can operate individually.", "tokens": [293, 550, 291, 393, 9651, 16652, 13], "temperature": 0.0, "avg_logprob": -0.2982099645278033, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.0002609676157590002}, {"id": 504, "seek": 304406, "start": 3057.06, "end": 3059.06, "text": " I just got somebody at the door. Just a moment.", "tokens": [286, 445, 658, 2618, 412, 264, 2853, 13, 1449, 257, 1623, 13], "temperature": 0.0, "avg_logprob": -0.2982099645278033, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.0002609676157590002}, {"id": 505, "seek": 304406, "start": 3059.06, "end": 3067.06, "text": " Sorry about that.", "tokens": [4919, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.2982099645278033, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.0002609676157590002}, {"id": 506, "seek": 304406, "start": 3067.06, "end": 3069.06, "text": " I guess we see it in the docs quite a bit.", "tokens": [286, 2041, 321, 536, 309, 294, 264, 45623, 1596, 257, 857, 13], "temperature": 0.0, "avg_logprob": -0.2982099645278033, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.0002609676157590002}, {"id": 507, "seek": 304406, "start": 3069.06, "end": 3071.06, "text": " So.", "tokens": [407, 13], "temperature": 0.0, "avg_logprob": -0.2982099645278033, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.0002609676157590002}, {"id": 508, "seek": 304406, "start": 3071.06, "end": 3073.06, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2982099645278033, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.0002609676157590002}, {"id": 509, "seek": 307306, "start": 3073.06, "end": 3075.06, "text": " Sorry.", "tokens": [4919, 13], "temperature": 0.0, "avg_logprob": -0.31366452863139493, "compression_ratio": 1.3162393162393162, "no_speech_prob": 1.9830202290904708e-05}, {"id": 510, "seek": 307306, "start": 3075.06, "end": 3077.06, "text": " Sorry.", "tokens": [4919, 13], "temperature": 0.0, "avg_logprob": -0.31366452863139493, "compression_ratio": 1.3162393162393162, "no_speech_prob": 1.9830202290904708e-05}, {"id": 511, "seek": 307306, "start": 3077.06, "end": 3081.06, "text": " I was going to say.", "tokens": [286, 390, 516, 281, 584, 13], "temperature": 0.0, "avg_logprob": -0.31366452863139493, "compression_ratio": 1.3162393162393162, "no_speech_prob": 1.9830202290904708e-05}, {"id": 512, "seek": 307306, "start": 3081.06, "end": 3083.06, "text": " Using it on a single.", "tokens": [11142, 309, 322, 257, 2167, 13], "temperature": 0.0, "avg_logprob": -0.31366452863139493, "compression_ratio": 1.3162393162393162, "no_speech_prob": 1.9830202290904708e-05}, {"id": 513, "seek": 307306, "start": 3083.06, "end": 3085.06, "text": " What is it?", "tokens": [708, 307, 309, 30], "temperature": 0.0, "avg_logprob": -0.31366452863139493, "compression_ratio": 1.3162393162393162, "no_speech_prob": 1.9830202290904708e-05}, {"id": 514, "seek": 307306, "start": 3085.06, "end": 3089.06, "text": " A single scalar.", "tokens": [316, 2167, 39684, 13], "temperature": 0.0, "avg_logprob": -0.31366452863139493, "compression_ratio": 1.3162393162393162, "no_speech_prob": 1.9830202290904708e-05}, {"id": 515, "seek": 307306, "start": 3089.06, "end": 3091.06, "text": " Does not enclose anything.", "tokens": [4402, 406, 20987, 541, 1340, 13], "temperature": 0.0, "avg_logprob": -0.31366452863139493, "compression_ratio": 1.3162393162393162, "no_speech_prob": 1.9830202290904708e-05}, {"id": 516, "seek": 307306, "start": 3091.06, "end": 3093.06, "text": " So that might be a case to look at.", "tokens": [407, 300, 1062, 312, 257, 1389, 281, 574, 412, 13], "temperature": 0.0, "avg_logprob": -0.31366452863139493, "compression_ratio": 1.3162393162393162, "no_speech_prob": 1.9830202290904708e-05}, {"id": 517, "seek": 307306, "start": 3093.06, "end": 3099.06, "text": " Great.", "tokens": [3769, 13], "temperature": 0.0, "avg_logprob": -0.31366452863139493, "compression_ratio": 1.3162393162393162, "no_speech_prob": 1.9830202290904708e-05}, {"id": 518, "seek": 309906, "start": 3099.06, "end": 3103.06, "text": " So it does nothing.", "tokens": [407, 309, 775, 1825, 13], "temperature": 0.0, "avg_logprob": -0.49018717569018166, "compression_ratio": 1.3046875, "no_speech_prob": 5.472273187479004e-05}, {"id": 519, "seek": 309906, "start": 3103.06, "end": 3106.06, "text": " Yeah. Okay.", "tokens": [865, 13, 1033, 13], "temperature": 0.0, "avg_logprob": -0.49018717569018166, "compression_ratio": 1.3046875, "no_speech_prob": 5.472273187479004e-05}, {"id": 520, "seek": 309906, "start": 3106.06, "end": 3108.06, "text": " Why is a scalar?", "tokens": [1545, 307, 257, 39684, 30], "temperature": 0.0, "avg_logprob": -0.49018717569018166, "compression_ratio": 1.3046875, "no_speech_prob": 5.472273187479004e-05}, {"id": 521, "seek": 309906, "start": 3108.06, "end": 3110.06, "text": " It's a scalar.", "tokens": [467, 311, 257, 39684, 13], "temperature": 0.0, "avg_logprob": -0.49018717569018166, "compression_ratio": 1.3046875, "no_speech_prob": 5.472273187479004e-05}, {"id": 522, "seek": 309906, "start": 3110.06, "end": 3112.06, "text": " Otherwise,", "tokens": [10328, 11], "temperature": 0.0, "avg_logprob": -0.49018717569018166, "compression_ratio": 1.3046875, "no_speech_prob": 5.472273187479004e-05}, {"id": 523, "seek": 309906, "start": 3112.06, "end": 3114.06, "text": " it has a depth.", "tokens": [309, 575, 257, 7161, 13], "temperature": 0.0, "avg_logprob": -0.49018717569018166, "compression_ratio": 1.3046875, "no_speech_prob": 5.472273187479004e-05}, {"id": 524, "seek": 309906, "start": 3114.06, "end": 3124.06, "text": " It's one greater than the magnitude of the depth of Y.", "tokens": [467, 311, 472, 5044, 813, 264, 15668, 295, 264, 7161, 295, 398, 13], "temperature": 0.0, "avg_logprob": -0.49018717569018166, "compression_ratio": 1.3046875, "no_speech_prob": 5.472273187479004e-05}, {"id": 525, "seek": 309906, "start": 3124.06, "end": 3126.06, "text": " And you can add axes.", "tokens": [400, 291, 393, 909, 35387, 13], "temperature": 0.0, "avg_logprob": -0.49018717569018166, "compression_ratio": 1.3046875, "no_speech_prob": 5.472273187479004e-05}, {"id": 526, "seek": 312606, "start": 3126.06, "end": 3129.06, "text": " And you can add axes.", "tokens": [400, 291, 393, 909, 35387, 13], "temperature": 0.2, "avg_logprob": -0.43633671083312103, "compression_ratio": 1.2708333333333333, "no_speech_prob": 3.119792745565064e-05}, {"id": 527, "seek": 312606, "start": 3129.06, "end": 3131.06, "text": " And we're definitely not old fashioned.", "tokens": [400, 321, 434, 2138, 406, 1331, 40646, 13], "temperature": 0.2, "avg_logprob": -0.43633671083312103, "compression_ratio": 1.2708333333333333, "no_speech_prob": 3.119792745565064e-05}, {"id": 528, "seek": 312606, "start": 3131.06, "end": 3136.06, "text": " So that's fine.", "tokens": [407, 300, 311, 2489, 13], "temperature": 0.2, "avg_logprob": -0.43633671083312103, "compression_ratio": 1.2708333333333333, "no_speech_prob": 3.119792745565064e-05}, {"id": 529, "seek": 312606, "start": 3136.06, "end": 3139.06, "text": " So dyadic.", "tokens": [407, 14584, 43341, 13], "temperature": 0.2, "avg_logprob": -0.43633671083312103, "compression_ratio": 1.2708333333333333, "no_speech_prob": 3.119792745565064e-05}, {"id": 530, "seek": 312606, "start": 3139.06, "end": 3141.06, "text": " Oh, God, I don't know.", "tokens": [876, 11, 1265, 11, 286, 500, 380, 458, 13], "temperature": 0.2, "avg_logprob": -0.43633671083312103, "compression_ratio": 1.2708333333333333, "no_speech_prob": 3.119792745565064e-05}, {"id": 531, "seek": 312606, "start": 3141.06, "end": 3143.06, "text": " What's our quad ML equal to?", "tokens": [708, 311, 527, 10787, 21601, 2681, 281, 30], "temperature": 0.2, "avg_logprob": -0.43633671083312103, "compression_ratio": 1.2708333333333333, "no_speech_prob": 3.119792745565064e-05}, {"id": 532, "seek": 312606, "start": 3143.06, "end": 3145.06, "text": " Let's just focus on the default.", "tokens": [961, 311, 445, 1879, 322, 264, 7576, 13], "temperature": 0.2, "avg_logprob": -0.43633671083312103, "compression_ratio": 1.2708333333333333, "no_speech_prob": 3.119792745565064e-05}, {"id": 533, "seek": 312606, "start": 3145.06, "end": 3150.06, "text": " Shall we?", "tokens": [12128, 321, 30], "temperature": 0.2, "avg_logprob": -0.43633671083312103, "compression_ratio": 1.2708333333333333, "no_speech_prob": 3.119792745565064e-05}, {"id": 534, "seek": 315006, "start": 3150.06, "end": 3158.06, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.5293785377785012, "compression_ratio": 0.9402985074626866, "no_speech_prob": 0.00015096629795152694}, {"id": 535, "seek": 315006, "start": 3158.06, "end": 3161.06, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.5293785377785012, "compression_ratio": 0.9402985074626866, "no_speech_prob": 0.00015096629795152694}, {"id": 536, "seek": 315006, "start": 3161.06, "end": 3165.06, "text": " Partitioned in close.", "tokens": [4100, 849, 292, 294, 1998, 13], "temperature": 0.0, "avg_logprob": -0.5293785377785012, "compression_ratio": 0.9402985074626866, "no_speech_prob": 0.00015096629795152694}, {"id": 537, "seek": 315006, "start": 3165.06, "end": 3167.06, "text": " APL Wiki has better examples.", "tokens": [5372, 43, 35892, 575, 1101, 5110, 13], "temperature": 0.0, "avg_logprob": -0.5293785377785012, "compression_ratio": 0.9402985074626866, "no_speech_prob": 0.00015096629795152694}, {"id": 538, "seek": 316706, "start": 3167.06, "end": 3195.06, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.4939378499984741, "compression_ratio": 0.38461538461538464, "no_speech_prob": 0.00014410937728825957}, {"id": 539, "seek": 319506, "start": 3195.06, "end": 3206.06, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.2874242655436198, "compression_ratio": 1.4333333333333333, "no_speech_prob": 2.8845448468928225e-05}, {"id": 540, "seek": 319506, "start": 3206.06, "end": 3209.06, "text": " Okay. Where's the good examples?", "tokens": [1033, 13, 2305, 311, 264, 665, 5110, 30], "temperature": 0.0, "avg_logprob": -0.2874242655436198, "compression_ratio": 1.4333333333333333, "no_speech_prob": 2.8845448468928225e-05}, {"id": 541, "seek": 319506, "start": 3209.06, "end": 3212.06, "text": " Is the first one, the other, do you consider that the other core?", "tokens": [1119, 264, 700, 472, 11, 264, 661, 11, 360, 291, 1949, 300, 264, 661, 4965, 30], "temperature": 0.0, "avg_logprob": -0.2874242655436198, "compression_ratio": 1.4333333333333333, "no_speech_prob": 2.8845448468928225e-05}, {"id": 542, "seek": 319506, "start": 3212.06, "end": 3214.06, "text": " Well, it's got a plus before it, which is.", "tokens": [1042, 11, 309, 311, 658, 257, 1804, 949, 309, 11, 597, 307, 13], "temperature": 0.0, "avg_logprob": -0.2874242655436198, "compression_ratio": 1.4333333333333333, "no_speech_prob": 2.8845448468928225e-05}, {"id": 543, "seek": 319506, "start": 3214.06, "end": 3215.06, "text": " Or is that what it is?", "tokens": [1610, 307, 300, 437, 309, 307, 30], "temperature": 0.0, "avg_logprob": -0.2874242655436198, "compression_ratio": 1.4333333333333333, "no_speech_prob": 2.8845448468928225e-05}, {"id": 544, "seek": 319506, "start": 3215.06, "end": 3220.06, "text": " Is it a operator?", "tokens": [1119, 309, 257, 12973, 30], "temperature": 0.0, "avg_logprob": -0.2874242655436198, "compression_ratio": 1.4333333333333333, "no_speech_prob": 2.8845448468928225e-05}, {"id": 545, "seek": 319506, "start": 3220.06, "end": 3222.06, "text": " Oh, there's an optional K.", "tokens": [876, 11, 456, 311, 364, 17312, 591, 13], "temperature": 0.0, "avg_logprob": -0.2874242655436198, "compression_ratio": 1.4333333333333333, "no_speech_prob": 2.8845448468928225e-05}, {"id": 546, "seek": 322206, "start": 3222.06, "end": 3225.06, "text": " Oh, that's the axis.", "tokens": [876, 11, 300, 311, 264, 10298, 13], "temperature": 0.0, "avg_logprob": -0.19141459951595385, "compression_ratio": 1.5888324873096447, "no_speech_prob": 5.1431783504085615e-05}, {"id": 547, "seek": 322206, "start": 3225.06, "end": 3226.06, "text": " I'm confused about this.", "tokens": [286, 478, 9019, 466, 341, 13], "temperature": 0.0, "avg_logprob": -0.19141459951595385, "compression_ratio": 1.5888324873096447, "no_speech_prob": 5.1431783504085615e-05}, {"id": 548, "seek": 322206, "start": 3226.06, "end": 3229.06, "text": " They're.", "tokens": [814, 434, 13], "temperature": 0.0, "avg_logprob": -0.19141459951595385, "compression_ratio": 1.5888324873096447, "no_speech_prob": 5.1431783504085615e-05}, {"id": 549, "seek": 322206, "start": 3229.06, "end": 3231.06, "text": " They're doing plus.", "tokens": [814, 434, 884, 1804, 13], "temperature": 0.0, "avg_logprob": -0.19141459951595385, "compression_ratio": 1.5888324873096447, "no_speech_prob": 5.1431783504085615e-05}, {"id": 550, "seek": 322206, "start": 3231.06, "end": 3235.06, "text": " No, this is, this is, this is monadic.", "tokens": [883, 11, 341, 307, 11, 341, 307, 11, 341, 307, 1108, 43341, 13], "temperature": 0.0, "avg_logprob": -0.19141459951595385, "compression_ratio": 1.5888324873096447, "no_speech_prob": 5.1431783504085615e-05}, {"id": 551, "seek": 322206, "start": 3235.06, "end": 3240.06, "text": " Because when you have two functions in a row, it applies this monadically and then", "tokens": [1436, 562, 291, 362, 732, 6828, 294, 257, 5386, 11, 309, 13165, 341, 1108, 345, 984, 293, 550], "temperature": 0.0, "avg_logprob": -0.19141459951595385, "compression_ratio": 1.5888324873096447, "no_speech_prob": 5.1431783504085615e-05}, {"id": 552, "seek": 322206, "start": 3240.06, "end": 3244.06, "text": " dyadically to the result with the left-hand side.", "tokens": [14584, 345, 984, 281, 264, 1874, 365, 264, 1411, 12, 5543, 1252, 13], "temperature": 0.0, "avg_logprob": -0.19141459951595385, "compression_ratio": 1.5888324873096447, "no_speech_prob": 5.1431783504085615e-05}, {"id": 553, "seek": 322206, "start": 3244.06, "end": 3248.06, "text": " And this is a good example for monadic because it's not intuitive.", "tokens": [400, 341, 307, 257, 665, 1365, 337, 1108, 43341, 570, 309, 311, 406, 21769, 13], "temperature": 0.0, "avg_logprob": -0.19141459951595385, "compression_ratio": 1.5888324873096447, "no_speech_prob": 5.1431783504085615e-05}, {"id": 554, "seek": 324806, "start": 3248.06, "end": 3252.06, "text": " So I'm not sure if it's going to be a monadically.", "tokens": [407, 286, 478, 406, 988, 498, 309, 311, 516, 281, 312, 257, 1108, 345, 984, 13], "temperature": 0.0, "avg_logprob": -0.4952239113292475, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.429833693895489e-05}, {"id": 555, "seek": 324806, "start": 3252.06, "end": 3254.06, "text": " I didn't think it's going to do that.", "tokens": [286, 994, 380, 519, 309, 311, 516, 281, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.4952239113292475, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.429833693895489e-05}, {"id": 556, "seek": 324806, "start": 3254.06, "end": 3256.06, "text": " Oh.", "tokens": [876, 13], "temperature": 0.0, "avg_logprob": -0.4952239113292475, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.429833693895489e-05}, {"id": 557, "seek": 324806, "start": 3256.06, "end": 3259.06, "text": " Maybe.", "tokens": [2704, 13], "temperature": 0.0, "avg_logprob": -0.4952239113292475, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.429833693895489e-05}, {"id": 558, "seek": 324806, "start": 3259.06, "end": 3260.06, "text": " Let's consider that.", "tokens": [961, 311, 1949, 300, 13], "temperature": 0.0, "avg_logprob": -0.4952239113292475, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.429833693895489e-05}, {"id": 559, "seek": 324806, "start": 3260.06, "end": 3262.06, "text": " Okay. So.", "tokens": [1033, 13, 407, 13], "temperature": 0.0, "avg_logprob": -0.4952239113292475, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.429833693895489e-05}, {"id": 560, "seek": 324806, "start": 3262.06, "end": 3266.06, "text": " All right. So that's.", "tokens": [1057, 558, 13, 407, 300, 311, 13], "temperature": 0.0, "avg_logprob": -0.4952239113292475, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.429833693895489e-05}, {"id": 561, "seek": 324806, "start": 3266.06, "end": 3269.06, "text": " I'm going to turn the right into a scalar.", "tokens": [286, 478, 516, 281, 1261, 264, 558, 666, 257, 39684, 13], "temperature": 0.0, "avg_logprob": -0.4952239113292475, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.429833693895489e-05}, {"id": 562, "seek": 324806, "start": 3269.06, "end": 3272.06, "text": " And so then it's going to be.", "tokens": [400, 370, 550, 309, 311, 516, 281, 312, 13], "temperature": 0.0, "avg_logprob": -0.4952239113292475, "compression_ratio": 1.5517241379310345, "no_speech_prob": 2.429833693895489e-05}, {"id": 563, "seek": 327206, "start": 3272.06, "end": 3278.06, "text": " Yeah. Okay. So if you did one, two, three plus one, it would add one to each of these three things.", "tokens": [865, 13, 1033, 13, 407, 498, 291, 630, 472, 11, 732, 11, 1045, 1804, 472, 11, 309, 576, 909, 472, 281, 1184, 295, 613, 1045, 721, 13], "temperature": 0.0, "avg_logprob": -0.1587643949952844, "compression_ratio": 1.7191780821917808, "no_speech_prob": 2.5463967176619917e-05}, {"id": 564, "seek": 327206, "start": 3278.06, "end": 3283.06, "text": " So if you do one, two, three, plus an enclosed array, it adds this to each of these three things.", "tokens": [407, 498, 291, 360, 472, 11, 732, 11, 1045, 11, 1804, 364, 42089, 10225, 11, 309, 10860, 341, 281, 1184, 295, 613, 1045, 721, 13], "temperature": 0.0, "avg_logprob": -0.1587643949952844, "compression_ratio": 1.7191780821917808, "no_speech_prob": 2.5463967176619917e-05}, {"id": 565, "seek": 327206, "start": 3283.06, "end": 3288.06, "text": " Which is actually very, yes, that's very instructive.", "tokens": [3013, 307, 767, 588, 11, 2086, 11, 300, 311, 588, 7232, 488, 13], "temperature": 0.0, "avg_logprob": -0.1587643949952844, "compression_ratio": 1.7191780821917808, "no_speech_prob": 2.5463967176619917e-05}, {"id": 566, "seek": 328806, "start": 3288.06, "end": 3316.06, "text": " And helpful.", "tokens": [50364, 400, 4961, 13, 51764], "temperature": 0.0, "avg_logprob": -0.23192705710728964, "compression_ratio": 0.6, "no_speech_prob": 0.00016049735131673515}, {"id": 567, "seek": 331806, "start": 3318.06, "end": 3328.06, "text": " Hmm.", "tokens": [50364, 8239, 13, 50864], "temperature": 0.0, "avg_logprob": -0.9828766822814942, "compression_ratio": 0.3333333333333333, "no_speech_prob": 0.8567883968353271}, {"id": 568, "seek": 334806, "start": 3348.06, "end": 3368.06, "text": " Oh, we could have used this with a tally operator.", "tokens": [876, 11, 321, 727, 362, 1143, 341, 365, 257, 256, 379, 12973, 13], "temperature": 0.0, "avg_logprob": -0.2322832489013672, "compression_ratio": 1.0119047619047619, "no_speech_prob": 0.007807217538356781}, {"id": 569, "seek": 334806, "start": 3368.06, "end": 3373.06, "text": " For that DNA competition question.", "tokens": [1171, 300, 8272, 6211, 1168, 13], "temperature": 0.0, "avg_logprob": -0.2322832489013672, "compression_ratio": 1.0119047619047619, "no_speech_prob": 0.007807217538356781}, {"id": 570, "seek": 337306, "start": 3373.06, "end": 3379.06, "text": " So I think that would be a good idea.", "tokens": [407, 286, 519, 300, 576, 312, 257, 665, 1558, 13], "temperature": 0.0, "avg_logprob": -0.4517909458705357, "compression_ratio": 1.4, "no_speech_prob": 1.0128183930646628e-05}, {"id": 571, "seek": 337306, "start": 3379.06, "end": 3382.06, "text": " For five, six would be a CGT and the left-hand side would have been the DNA sequence.", "tokens": [1171, 1732, 11, 2309, 576, 312, 257, 38007, 51, 293, 264, 1411, 12, 5543, 1252, 576, 362, 668, 264, 8272, 8310, 13], "temperature": 0.0, "avg_logprob": -0.4517909458705357, "compression_ratio": 1.4, "no_speech_prob": 1.0128183930646628e-05}, {"id": 572, "seek": 337306, "start": 3382.06, "end": 3384.06, "text": " Sounds interesting.", "tokens": [14576, 1880, 13], "temperature": 0.0, "avg_logprob": -0.4517909458705357, "compression_ratio": 1.4, "no_speech_prob": 1.0128183930646628e-05}, {"id": 573, "seek": 337306, "start": 3384.06, "end": 3388.06, "text": " Great.", "tokens": [3769, 13], "temperature": 0.0, "avg_logprob": -0.4517909458705357, "compression_ratio": 1.4, "no_speech_prob": 1.0128183930646628e-05}, {"id": 574, "seek": 337306, "start": 3388.06, "end": 3390.06, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.4517909458705357, "compression_ratio": 1.4, "no_speech_prob": 1.0128183930646628e-05}, {"id": 575, "seek": 337306, "start": 3390.06, "end": 3392.06, "text": " Well, we're kind of out of time.", "tokens": [1042, 11, 321, 434, 733, 295, 484, 295, 565, 13], "temperature": 0.0, "avg_logprob": -0.4517909458705357, "compression_ratio": 1.4, "no_speech_prob": 1.0128183930646628e-05}, {"id": 576, "seek": 337306, "start": 3392.06, "end": 3394.06, "text": " So.", "tokens": [407, 13], "temperature": 0.0, "avg_logprob": -0.4517909458705357, "compression_ratio": 1.4, "no_speech_prob": 1.0128183930646628e-05}, {"id": 577, "seek": 337306, "start": 3394.06, "end": 3396.06, "text": " What do the dyadic version next time?", "tokens": [708, 360, 264, 14584, 43341, 3037, 958, 565, 30], "temperature": 0.0, "avg_logprob": -0.4517909458705357, "compression_ratio": 1.4, "no_speech_prob": 1.0128183930646628e-05}, {"id": 578, "seek": 337306, "start": 3396.06, "end": 3398.06, "text": " Thanks everybody.", "tokens": [2561, 2201, 13], "temperature": 0.0, "avg_logprob": -0.4517909458705357, "compression_ratio": 1.4, "no_speech_prob": 1.0128183930646628e-05}, {"id": 579, "seek": 337306, "start": 3398.06, "end": 3400.06, "text": " Bye.", "tokens": [4621, 13], "temperature": 0.0, "avg_logprob": -0.4517909458705357, "compression_ratio": 1.4, "no_speech_prob": 1.0128183930646628e-05}, {"id": 580, "seek": 337306, "start": 3400.06, "end": 3401.06, "text": " Bye.", "tokens": [4621, 13], "temperature": 0.0, "avg_logprob": -0.4517909458705357, "compression_ratio": 1.4, "no_speech_prob": 1.0128183930646628e-05}, {"id": 581, "seek": 340106, "start": 3401.06, "end": 3411.06, "text": " Thanks everybody.", "tokens": [50364, 2561, 2201, 13, 50864], "temperature": 0.0, "avg_logprob": -0.47011295954386395, "compression_ratio": 0.68, "no_speech_prob": 0.0001847652019932866}], "language": "en"}