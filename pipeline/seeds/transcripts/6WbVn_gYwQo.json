{"text": " Welcome back to our series on creating a complete end-to-end web application using AngularJS on the front end and a backend written in C sharp. We've also looked at a Python version of the backend. Remember the backend is very simple. All it does is take some data out of a database and serve it up using JSON to our front end. It's in that client side where AngularJS does all the heavy lifting in terms of the logic, display and so forth. And that's where the focus of these tutorials has been and will continue to be. So far all we've managed to do is display a list of our to-dos. This is where we got to last time. This list of to-dos is coming out of a SQL Server database or if you're following through the Python version it was a SQLite database, has been served up over JSON and displayed. We can see exactly how this is happening by looking at the network timeline. If I refresh it gives us a really good sense of what exactly is happening here. We asked for index.html. index.html remember consists of just a very small amount of code. All it does is it bring in some JavaScript. Our own JavaScript is amongst those. It brings in the bootstrap CSS and it contains a couple of attributes that tell Angular to display our templates within this. So you can see that from index.html that is bringing in jQuery, Angular, bootstrap, our own application JavaScript and the template we've requested. And then our controller has requested the list of to-dos from our API. So it said get slash API slash to-do and that brought back all of these to-dos. That was then displayed in the template. It was displayed in the template showing for each item the fields that we requested in a table. In the last tutorial we talked a bit about scope which I said is one of or perhaps the most important part of Angular. I say perhaps because maybe even more important than that is the concept of directives. So before we go into more detail around building the application today let's discuss a little bit about exactly what directives are and why they're so important. You'll remember from our last tutorial that index.html which brings in Angular and our application causes two things to be attached to each root. Both some code which is in these controllers and the actual HTML pages which are in these templates. But what really is happening here? In particular how is it that Angular can see things like ng-repeat in our template or ng-app or ng-view and make things happen? These are not attributes which are actually defined in HTML. How is Angular causing them to make stuff happen either by displaying things in a different way by changing the HTML or by adding behaviors through JavaScript? Well what's actually going on is that Angular puts an event handler which gets called as soon as the DOM is completely loaded and that event handler goes through all of our HTML and in fact it goes through the DOM and it looks for special tags or attributes or classes and special meaning that those tags or attribute or classes are things which have been registered with Angular as being special, as being things that we want Angular to handle. And things which are registered in that way are called directives. Let's take a look at the Angular documentation. You can see at the very top of the Angular documentation is a list of directives and you'll see there's basically two kinds. Some which are the same as existing HTML attributes or elements and some which start with ng. You'll notice that the ng ones use camel case and if you look at ng-app for example you can see that the way that these camel case names get used is by taking wherever there's a capital letter and lower casing it and putting a dash between. So ng-app becomes ng-app like this. So these directives are perhaps the most important foundational thing you need to understand to actually understand what Angular is doing and how it's working. And these ng versions are elements and attributes and classes which Angular has effectively added to HTML and they each have their own behaviors. So for example ng-click is something that allows you to specify custom behavior when an element is clicked. Well we've looked at ng- repeat already so here's ng-repeat in the documentation. Instantiates a template, once per item from a collection. So we've seen that used before. What about these ones which overlap with existing HTML? Well what happens here is that the Angular directive causes the existing HTML behavior to slightly change. So in this case the Angular compiler goes through the DOM, finds all the a tags and modifies them in some way and in this case it ensures that the default action is prevented when href is empty. Anybody who's programmed in JavaScript before will recognize that as being a pretty handy default behavior that it's created, well actually default behavior that it's removed in this case. What's really interesting I think about Angular is that you are not limited to the directives that they've provided the Angular authors. In fact you can add your own. Let's say I very commonly had a header which looked something like this maybe those greetings from somebody to somebody and maybe we want to now create something in HTML that can automatically build that using something like a greach tag. This is obviously a very silly example but it's a very simple one to get the idea. So it could be greetings from Jeremy to audience. So how would we create that? Well interestingly it really couldn't be more straightforward. There is something called.directive in Angular and you can see I've got a template for it which basically includes all the bits I might want. So we create a directive called greet and literally this is now registered with Angular and tells it anytime it sees this we would like to attach some special behavior to it. Maybe let's make this a bit simpler and use it..give. So we'll use it here. Okay let's try that. So there's a whole bunch of things that we can do but the very simplest one, let's get rid of everything except the template and the controller because the very simplest one basically lets us insert our own behavior and HTML by having a template and a controller which is reusable. So in this case our template would be the contents of this and we're going to replace these with these things in handlebars. So we'll go from and something called from and we'll call something to. So now that we've done that it's as simple as remember these things are going to come out of dollar scope so let's put them into dollar scope. $dollarscope.from equals and we can just grab the attributes and find the one called from and $dollarscope.to and we'll look at the attributes and we'll find dollar attributes. I think we call it greet. So we've now got a controller we've got a template and let's see if that now has the behavior that we requested so we'll get rid of our h2 and so now all we've got here is a div in which we've got our own new directive. Let's try that and you can see it's done exactly what we hoped it would do. Now that's obviously a very simple example but you get the idea which is using nothing but this template and controller we can insert our own code and our own HTML by searching for our own special directives and with the other directive options that you can see here you can actually put all kinds of other functionality for example this link is perhaps the one that's most commonly used that calls the JavaScript on the DOM element after it's been created and that's where for example you could call a jQuery UI method or something like that and then we'll certainly come back and create some of our own directives that are more interesting than this later in this series. So for now now that we've learned about really what's going on with Angular which is to go through the DOM finding special elements special classes and special attributes which have been registered with Angular and giving them special behaviors these things been called directives and understanding that Angular comes with a whole bunch of these which gives us lots of really useful functionality out of the box let's now try and use some of this to add some functionality to our application and we're just going to use pre-written directives for now rather than creating our own. So at this stage all we have is something which can display a list and we want to add some additional functionality to it we would like to be able to sort it search it and if it gets really long we'd like to be able to paginate it so we don't pull everything down from the web every single time we look at this page. So let's start creating that functionality and let's get rid of our greeting. There we go. So the first functionality I'm going to create is sorting. Now functionality like that since it's working on stuff coming out of the database needs to be handled in two places it needs to be handled both in our web application in C sharp and it also needs to be handled in JavaScript so the JavaScript is going to have to call a method to sort or search or paginate and handle what comes back and our web application is going to be able to have to handle those parameters appropriately. Now sorting searching and paginating is so common that Flask Restless actually does all of that out of the box so we don't have to add any code to the Python version. Unfortunately however Microsoft although they also had all of that functionality out of the box in earlier versions of Web API in pre-release versions they actually took it out of the release version for some strange reason. So we're going to put it back in and the way we're going to put it back in is we'll just go to my blog to part 2 and you'll see here something called get to do items we're just going to copy that and we're going to paste it into our controller replacing the existing get API slash to do. So here it is here and you can see that this has now got the functionality we've requested it can sort in ascending order sending order by a particular field it can have a search and it can also paginate in other words it can limit to a certain number of records and it can start at the nth record with this offset parameter. It's not very much code it's just 8 or 10 lines although it's slightly it's not the most elegant looking code but it does the job and it's nice that we can do it in so little code. So until Microsoft gets around to adding that back to Web API we're going to have to modify Microsoft's code each time we create a new controller just pasting in this and of course you'll need to change the class name to your class name. So now that we have that that's the only change that we need to make in C sharp we now need to make some changes in the JavaScript to actually get this to do something. So since we're doing sorting we need to pass in a sort parameter and the is descending parameter. So let's try and start as simply as possible and that would be to add a default search order. So let's say to start with we're going to so we're obviously going to need two things in dollar scope one for the order and one for the direction. So let's create order and let's by default sort by priority and let's also do direction so we could say sort underscore direction actually let's call it is descending that's a bit easier since it really it's a boolean isn't it. So is descending and let's use false for that so it sorts by ascending so lower numbers will be considered more important. I think that seems reasonable. So now that we've set those we're going to need to make sure that we actually pass in these things to our web API. So at the moment we're not passing in anything at all. So how do we pass things into our web API? Well let's check the Angular documentation and remember that the actual API on the client side we're using this thing dollar resource to call it. So let's find out how dollar resource works. So if we scroll down through the dollar resource documentation we eventually get to what it returns which is something that we can call get save query etc and here we can see that for the get actions the first thing that we can pass in is parameters and here's an example of it here a parameter name and a parameter value. So in our case our parameters are sort and desk so let's pass in sort and that's going to be dollar scope dot sort order and then we've got desk which is going to be dollar scope dot is descending. So we've set them we're calling them in the controller we are doing something with them you can see here if sort is not null or empty then we order by with the appropriate descending or ascending so that should be everything that we need. So let's see if we now have that working. So we can see we've got a problem desk equals undefined and sort equals undefined. So let's find out why it is passing in these unhelpful things and here's the problem we're calling search before we've set them so let's move that to the bottom and really we're always going to want that at the bottom. That's great so here we've got it sorted by priority. So the next thing we want to do is we want to make it possible to click on a header and have that change the sort order. So let's think about what that's going to do so we're going to have a function that the HTML template will call and that means that that function needs to be inside dollarscope. So there's going to be a function let's call it sort and it's going to take in the parameter which is what column do I want to sort by. Let's call that column and I think what we want to do is have it so if you click on it once then it will sort ascending and if you click on it again and again it will just change the sort again and again. For now let's just get it so it sorts ascending every time. So we're going to now go dollarscope.sortorder equals that column and now after we sort we're going to have to recall search. Okay so we've set the sort order to the thing we've been passed so now we just need to make sure that clicking on a column will actually call this method. So since it's inside dollarscope that means that we should be good to go. All we need to do is add a a tag. We don't need an href what we need is a ng click and we need to call sort. So in this case it will be sort by let's check what it's called before I type that. Sort by text. Okay so the first column is called text well of course I could have seen that down here easily enough couldn't I? Anyway that's fine. So sort by text. So let's now refresh this we can see this is now hyperlinked. Let's try clicking it. Oh and we can now see that it's sorting. It's sorting in a slightly strange order just because I filled it with numbers but normally we would have text in here not numbers this is actually meant to be the description of the to do. So each time I click on it I wanted to change order so let's do that. So in other words what I'm saying is if these two are already exactly the same then what I want to do is simply change the direction. So to change the direction let's just reverse is descending. Otherwise let's set the sort order and set the direction to being ascending. Let's try that. So the first time I click it yep and the second time yep that's great. Okay so that's doing everything I want there. So the only other thing I might do is to make it so that a little icon will appear telling me which direction I am sorting in. So icons are rather conveniently available inside Bootstrap. So let's start by finding an icon that we like. So to show icons in Bootstrap you simply use the I tag and you give it a class of icon and so we're going to have to have a arrow down and we're also going to have an arrow up. Now we need to display these depending on whether or not something happens. So we're going to have to wrap them in a span and we're going to display them or not depending on whether something is true or not inside dollar scope. So to do that we use ng-show and that simply takes an expression that will evaluate to true or false. So in this case we will show this if let's have a think about that. So we'll show that if sort order is to do and also sort is descending and since this is down that would be true and we have basically the same thing for the other one except of course this now becomes false. So let's try that. So currently there's no icon showing because we're not sorting by to do and now that I've clicked on it oh it's still not showing. Let's try and figure out why. Oh because of course it's not called to do is it it's called text. Let's try it now. Okay so the first time I click and then there we go the second time I click that's great. So we can now use that for in fact we can basically use that whole thing for each one of our column headers. So this one's going to be priority and then the last one is going to be due date. There we go. So hopefully what you're thinking at this point is that seems like a whole bunch of duplicate code and you would be right. So what I've actually done in the written version of this tutorial is I've shown a directive which automates all of that. We're not going to write it now but let's just take a look at it and then you can try this for yourself. So you can see we've done basically what we had last time which is we had a template which does all that stuff and in this case they've also pulled out the logic around whether to show or not into a scope method and then in the controller we define do sort and do show. So it's really pretty straightforward to turn that into a directive. In order to save us all some time I won't do that now and have you watch me but I'd love for you to see you try it for yourself. So I've just refreshed we can now see this is showing correctly that's very good and if we click it twice. So one of the nice things here is I love the way even when I refresh so I haven't clicked anything and my default sort order is priority. Angular has automatically figured out that it needs to put this arrow here because this ng show directive it's automatically figured out when it has to check that. So all this kind of dependency management around when do you have to test for the truth of things or when do you need to run the things it's all handled automatically and that's certainly something that I look for in an MVC framework and Angular does that really nicely. Great so we have sorting working what should we do next? I think for our next thing we might do pagination. So pagination we need to have an offset and a limit and each time we get more we're going to have to append it to our previous list. I should mention the kind of pagination I'm doing here I'm not going to do that old-fashioned style of pagination where you get a whole list of pages at the bottom from like one to a hundred and you click which page you want. I much prefer the approach to pagination which is you can basically ask for more items to be shown. This is done for example in infinite scroll type frameworks where as you get to the bottom it automatically loads more or else there could just be a hyperlink which asks to show more. I'm going to use the hyperlink approach for now just because it's going to be a little bit easier to explain. So let's put a hyperlink at the bottom and so again we're going to have a ng click and that's going to do a show more. Now we need to write that of course and then some text for it. Equal sign there of course. Great so we've got a something to click on that's basically all we need to do on the template side we need to now create this show more. So if you think about it logically what is show more going to do? It is going to be such that each time you click on it it's going to load another however many let's say 20 another 20 things out of our JSON API and going to append them to whatever is already displayed. So whatever is already displayed is called $scope.items. Now again let's put some some defaults here so the how many things to load at a time. Oopsie-daisy let's call it limit. Let's say 20 okay and then we have what's the offset to start with now of course that's going to be zero. So we now need to create our show more method and so let's do that. Now because we're calling it from the template that means it needs to be inside $scope. So $scope.showMore doesn't have any parameters so what do we want to do here? Basically we want to go the offset should be equal to whatever it was before plus another 20 and then after we do that we now want to rerun our query basically to query some more. So that is called $scope.search at the moment. There we go. So the next thing we need to do now is to use these offset and limit parameters inside our query. Now interestingly though what we want to do now is not just go $scope.items equals to do.query we actually want to wait for the query to finish running and add those items to the end of what we already have. So if you look at the $resource documentation on Angular you'll see that actually you can have this optional success callback. So we don't have to say in fact you can see it used right above you don't have to say actually let's just look here you don't have to say left hand side equals the result of the query instead you can say run the query and when it's finished call some function and that's where we write this function. So it's going to be passed the actual data that it's received and that's where we can do something with it. So to have it just continue to work as before it just be like so $scope.items equals whatever data we were given before and that will continue to work just like it used to. But we actually want to do something else now we actually want to say okay pass in our offset and pass in our limit and so now we're going to be given an extra whatever 20 items that we want to add to the end of $scope.items so we now need to not replace it but concatenate it with our new data. So this time we should only get 20 back however we have a problem which is currently we're trying to call concat on something that's empty so let's make sure we started out not being empty. Okay let's try it again. That's better you can see we just got 20 this time. Let's try clicking show more. That's great so now we've got 40 and show more again. Now that's actually I only have 50 in here so one nasty thing with this UX that still says show more when there's no more to show so hopefully you can figure out pretty easily how to get rid of that. All we need to do is add an ng show and let's create something called has more. So how do we know if there's more? Well more or less we could basically say well if we managed to pull back at least 20 last time sorry if we managed to pull back exactly 20 last time then there's probably more. So let's say that to start with it's going to go more equals true. Let's create the function has more I mean maybe this is overkill maybe we hardly even need a function but never mind so we'll just go return more so I guess we probably could have done without a function at all that's okay that should be inside dollarscope of course and now we need to check to see whether we got at least 20 items or not and if so we will say that there's more to get so we could say here more equals data dot length equals 20. Okay let's see how that looks so we refresh all that so this is showing that's good it's still showing that's good that's great now it's disappeared. Okay so that's going pretty well so we now have pagination working nicely and we now have sorting working nicely so the only other thing we need to add is search. So if you look at the bootstrap documentation they actually have a nice little example of how to create a reasonably nicely styled search form and so I've actually turned that into a template so I'm just going to use that which is my bootstrap search template I've also put some basic stuff in here for my ng click as well so your search template can really look pretty much the same every time until you want to get more sophisticated with styling it. Let's have a look at what's in the template so it's a form with the appropriate bootstrap classes to make it look decent and the actual input box where you're going to type the search it has an ng model of query so in other words anything that we type into this is going to end up inside $scope.query and I think we put into $scope.query is going to end up in this text box and rather nicely the submit the sorry the reset button we have set to be disabled if not query in other words it's disabled if there is nothing typed into the query box or more precisely if there is nothing inside $scope.query so in fact I just wanted to show you that even without adding any JavaScript we already have some neat behavior which is look that's currently disabled and as soon as I type here it's enabled and as soon as I delete all the characters it's disabled so you can see with the angular directives you can actually do quite a lot even without any code and have everything work quite nicely and of course you can add your own directives to add your own functionality again so that you your designers and so forth can actually add functionality to your applications without having to write any code I think that's really cool so in this case when we click on the search button we're going to call something called reset and when we click on the reset button we're going to call something which is basically to empty out the query and then call reset again so let's write reset so what's reset is going to do is it's going to it's going to really start again in terms of what's displayed so if I've pressed show more a bunch of times and then I do a search then I really probably only want to show the first N of that search so I'm going to grab all of this stuff here and I'm going to move it into reset there we go and when I've done all those things I'm going to call search so that's basically all I mean by reset and so now rather than calling search here I can call reset there we go I think as you change searches we should probably leave the sort order as it was so I'm not going to move that inside reset we're just going to set everything up from scratch now we actually want of course to make sure that we do a search now you'll remember that inside our controller our controller we had this parameter called Q and that is the thing that if it's defined we're going to call dot where on it so we need to stick something into Q what is that something it's dollar scope dot query so let's try that shall we so here we're going to add Q and we're going to set it to dollar scope dot query I don't know that we need to do anything else at this point we've defined what dollar scope dot query is from our template we've passed it in the controller is doing something with it so hopefully we're going to be right to go at this point so let's try it shall we let's search for 6 nothing happened but there was no error either let's find out why not so if I go to the network tab and click search again okay so currently our search button is not actually doing anything let's find out why not first of all we'll check our template and there is in fact an ng click connected to it so that's good and then we do have a dollar scope dot reset so that's good at the end of that it calls a search so that's good so let's try and figure out what's going on by using the debugger in JavaScript let's make sure we actually get to dollar scope dot reset shall we I'm just doing a refresh first and then I'll type something into search and click okay so something's happening that's good let's try it so we step step step step step let's go into search that's interesting this time it did work perhaps I just forgot to refresh last time so let's take the debugger out save it do a refresh and let's try it search oh there we go so just all that happened last time was I forgot to refresh and therefore I had my old version of the JavaScript let's try reset no that's great let's try doing a sort and then do a search that's great that's continued to work as well and let's try doing a search and then a sort that's interesting so in this case when I clicked on the sort header it's actually added to this and that's a bug and if you think about it the reason that's a bug is because I am NOT doing my reset after I did my sort so let's change that so that it does a reset here so in other words each time I'm doing something that's not show more I actually need to start again and not append each time let's try that do a search and then a sort great do a reset there's no show more here because it's only five things to show do a reset there's a show more let's make sure it's all show more works looking good once more and no more to show that's great so we're now at a point where we have successfully got search and sort and pagination working and we did that all from scratch in I think well under an hour if I'm counting correctly and I think that really shows that once we've got the basic infrastructure in place it just gets faster and faster to add additional functionality to our application I'm going to leave this tutorial at this point because I think we've got more than enough to keep us going for now see if you can follow through with this and create add that functionality to your own application of course don't forget that you can follow through the written tutorial and tutorial two in the written tutorial goes through all of these steps as this points out in the next part we're going to look at creating deleting and updating items and as you'll see it's going to just keep getting easier and easier and easier thanks very much for listening and of course feel free to leave comments either on my blog post or on YouTube with this video and let me know what you thought or if you have any questions", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.4, "text": " Welcome back to our series on creating a complete end-to-end web application", "tokens": [4027, 646, 281, 527, 2638, 322, 4084, 257, 3566, 917, 12, 1353, 12, 521, 3670, 3861], "temperature": 0.0, "avg_logprob": -0.17178116835557022, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.0029779933393001556}, {"id": 1, "seek": 0, "start": 7.4, "end": 14.280000000000001, "text": " using AngularJS on the front end and a backend written in C sharp. We've also", "tokens": [1228, 34107, 41, 50, 322, 264, 1868, 917, 293, 257, 38087, 3720, 294, 383, 8199, 13, 492, 600, 611], "temperature": 0.0, "avg_logprob": -0.17178116835557022, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.0029779933393001556}, {"id": 2, "seek": 0, "start": 14.280000000000001, "end": 18.72, "text": " looked at a Python version of the backend. Remember the backend is very", "tokens": [2956, 412, 257, 15329, 3037, 295, 264, 38087, 13, 5459, 264, 38087, 307, 588], "temperature": 0.0, "avg_logprob": -0.17178116835557022, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.0029779933393001556}, {"id": 3, "seek": 0, "start": 18.72, "end": 24.28, "text": " simple. All it does is take some data out of a database and serve it up using", "tokens": [2199, 13, 1057, 309, 775, 307, 747, 512, 1412, 484, 295, 257, 8149, 293, 4596, 309, 493, 1228], "temperature": 0.0, "avg_logprob": -0.17178116835557022, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.0029779933393001556}, {"id": 4, "seek": 2428, "start": 24.28, "end": 31.520000000000003, "text": " JSON to our front end. It's in that client side where AngularJS does all", "tokens": [31828, 281, 527, 1868, 917, 13, 467, 311, 294, 300, 6423, 1252, 689, 34107, 41, 50, 775, 439], "temperature": 0.0, "avg_logprob": -0.10194832938058036, "compression_ratio": 1.5172413793103448, "no_speech_prob": 2.178053000534419e-05}, {"id": 5, "seek": 2428, "start": 31.520000000000003, "end": 37.08, "text": " the heavy lifting in terms of the logic, display and so forth. And that's where", "tokens": [264, 4676, 15798, 294, 2115, 295, 264, 9952, 11, 4674, 293, 370, 5220, 13, 400, 300, 311, 689], "temperature": 0.0, "avg_logprob": -0.10194832938058036, "compression_ratio": 1.5172413793103448, "no_speech_prob": 2.178053000534419e-05}, {"id": 6, "seek": 2428, "start": 37.08, "end": 44.6, "text": " the focus of these tutorials has been and will continue to be. So far all we've", "tokens": [264, 1879, 295, 613, 17616, 575, 668, 293, 486, 2354, 281, 312, 13, 407, 1400, 439, 321, 600], "temperature": 0.0, "avg_logprob": -0.10194832938058036, "compression_ratio": 1.5172413793103448, "no_speech_prob": 2.178053000534419e-05}, {"id": 7, "seek": 2428, "start": 44.6, "end": 50.68000000000001, "text": " managed to do is display a list of our to-dos. This is where we got to last", "tokens": [6453, 281, 360, 307, 4674, 257, 1329, 295, 527, 281, 12, 33749, 13, 639, 307, 689, 321, 658, 281, 1036], "temperature": 0.0, "avg_logprob": -0.10194832938058036, "compression_ratio": 1.5172413793103448, "no_speech_prob": 2.178053000534419e-05}, {"id": 8, "seek": 5068, "start": 50.68, "end": 56.68, "text": " time. This list of to-dos is coming out of a SQL Server database or if you're", "tokens": [565, 13, 639, 1329, 295, 281, 12, 33749, 307, 1348, 484, 295, 257, 19200, 25684, 8149, 420, 498, 291, 434], "temperature": 0.0, "avg_logprob": -0.10634613037109375, "compression_ratio": 1.4502369668246446, "no_speech_prob": 4.610659016179852e-05}, {"id": 9, "seek": 5068, "start": 56.68, "end": 61.88, "text": " following through the Python version it was a SQLite database, has been served", "tokens": [3480, 807, 264, 15329, 3037, 309, 390, 257, 19200, 642, 8149, 11, 575, 668, 7584], "temperature": 0.0, "avg_logprob": -0.10634613037109375, "compression_ratio": 1.4502369668246446, "no_speech_prob": 4.610659016179852e-05}, {"id": 10, "seek": 5068, "start": 61.88, "end": 67.4, "text": " up over JSON and displayed. We can see exactly how this is happening by", "tokens": [493, 670, 31828, 293, 16372, 13, 492, 393, 536, 2293, 577, 341, 307, 2737, 538], "temperature": 0.0, "avg_logprob": -0.10634613037109375, "compression_ratio": 1.4502369668246446, "no_speech_prob": 4.610659016179852e-05}, {"id": 11, "seek": 5068, "start": 67.4, "end": 75.92, "text": " looking at the network timeline. If I refresh it gives us a really good sense", "tokens": [1237, 412, 264, 3209, 12933, 13, 759, 286, 15134, 309, 2709, 505, 257, 534, 665, 2020], "temperature": 0.0, "avg_logprob": -0.10634613037109375, "compression_ratio": 1.4502369668246446, "no_speech_prob": 4.610659016179852e-05}, {"id": 12, "seek": 7592, "start": 75.92, "end": 81.44, "text": " of what exactly is happening here. We asked for index.html.", "tokens": [295, 437, 2293, 307, 2737, 510, 13, 492, 2351, 337, 8186, 13, 357, 15480, 13], "temperature": 0.0, "avg_logprob": -0.14271101633707683, "compression_ratio": 1.4848484848484849, "no_speech_prob": 7.64636388339568e-06}, {"id": 13, "seek": 7592, "start": 81.44, "end": 90.12, "text": " index.html remember consists of just a very small amount of code. All it does", "tokens": [8186, 13, 357, 15480, 1604, 14689, 295, 445, 257, 588, 1359, 2372, 295, 3089, 13, 1057, 309, 775], "temperature": 0.0, "avg_logprob": -0.14271101633707683, "compression_ratio": 1.4848484848484849, "no_speech_prob": 7.64636388339568e-06}, {"id": 14, "seek": 7592, "start": 90.12, "end": 96.88, "text": " is it bring in some JavaScript. Our own JavaScript is amongst those. It brings in", "tokens": [307, 309, 1565, 294, 512, 15778, 13, 2621, 1065, 15778, 307, 12918, 729, 13, 467, 5607, 294], "temperature": 0.0, "avg_logprob": -0.14271101633707683, "compression_ratio": 1.4848484848484849, "no_speech_prob": 7.64636388339568e-06}, {"id": 15, "seek": 7592, "start": 96.88, "end": 103.88, "text": " the bootstrap CSS and it contains a couple of attributes that tell Angular", "tokens": [264, 11450, 372, 4007, 24387, 293, 309, 8306, 257, 1916, 295, 17212, 300, 980, 34107], "temperature": 0.0, "avg_logprob": -0.14271101633707683, "compression_ratio": 1.4848484848484849, "no_speech_prob": 7.64636388339568e-06}, {"id": 16, "seek": 10388, "start": 103.88, "end": 111.0, "text": " to display our templates within this. So you can see that from index.html that", "tokens": [281, 4674, 527, 21165, 1951, 341, 13, 407, 291, 393, 536, 300, 490, 8186, 13, 357, 15480, 300], "temperature": 0.0, "avg_logprob": -0.10679474370232944, "compression_ratio": 1.4216867469879517, "no_speech_prob": 3.9054398257576395e-06}, {"id": 17, "seek": 10388, "start": 111.0, "end": 121.67999999999999, "text": " is bringing in jQuery, Angular, bootstrap, our own application JavaScript and the", "tokens": [307, 5062, 294, 361, 35550, 11, 34107, 11, 11450, 372, 4007, 11, 527, 1065, 3861, 15778, 293, 264], "temperature": 0.0, "avg_logprob": -0.10679474370232944, "compression_ratio": 1.4216867469879517, "no_speech_prob": 3.9054398257576395e-06}, {"id": 18, "seek": 10388, "start": 121.67999999999999, "end": 130.72, "text": " template we've requested. And then our controller has requested the list of", "tokens": [12379, 321, 600, 16436, 13, 400, 550, 527, 10561, 575, 16436, 264, 1329, 295], "temperature": 0.0, "avg_logprob": -0.10679474370232944, "compression_ratio": 1.4216867469879517, "no_speech_prob": 3.9054398257576395e-06}, {"id": 19, "seek": 13072, "start": 130.72, "end": 139.92, "text": " to-dos from our API. So it said get slash API slash to-do and that brought back", "tokens": [281, 12, 33749, 490, 527, 9362, 13, 407, 309, 848, 483, 17330, 9362, 17330, 281, 12, 2595, 293, 300, 3038, 646], "temperature": 0.0, "avg_logprob": -0.1278073666459423, "compression_ratio": 1.5517241379310345, "no_speech_prob": 5.173856607143534e-06}, {"id": 20, "seek": 13072, "start": 139.92, "end": 149.84, "text": " all of these to-dos. That was then displayed in the template. It was", "tokens": [439, 295, 613, 281, 12, 33749, 13, 663, 390, 550, 16372, 294, 264, 12379, 13, 467, 390], "temperature": 0.0, "avg_logprob": -0.1278073666459423, "compression_ratio": 1.5517241379310345, "no_speech_prob": 5.173856607143534e-06}, {"id": 21, "seek": 13072, "start": 149.84, "end": 156.07999999999998, "text": " displayed in the template showing for each item the fields that we requested", "tokens": [16372, 294, 264, 12379, 4099, 337, 1184, 3174, 264, 7909, 300, 321, 16436], "temperature": 0.0, "avg_logprob": -0.1278073666459423, "compression_ratio": 1.5517241379310345, "no_speech_prob": 5.173856607143534e-06}, {"id": 22, "seek": 15608, "start": 156.08, "end": 168.72000000000003, "text": " in a table. In the last tutorial we talked a bit about scope which I said is", "tokens": [294, 257, 3199, 13, 682, 264, 1036, 7073, 321, 2825, 257, 857, 466, 11923, 597, 286, 848, 307], "temperature": 0.0, "avg_logprob": -0.13214034250337783, "compression_ratio": 1.5522388059701493, "no_speech_prob": 3.5559407933760667e-06}, {"id": 23, "seek": 15608, "start": 168.72000000000003, "end": 173.92000000000002, "text": " one of or perhaps the most important part of Angular. I say perhaps because", "tokens": [472, 295, 420, 4317, 264, 881, 1021, 644, 295, 34107, 13, 286, 584, 4317, 570], "temperature": 0.0, "avg_logprob": -0.13214034250337783, "compression_ratio": 1.5522388059701493, "no_speech_prob": 3.5559407933760667e-06}, {"id": 24, "seek": 15608, "start": 173.92000000000002, "end": 180.32000000000002, "text": " maybe even more important than that is the concept of directives. So before we", "tokens": [1310, 754, 544, 1021, 813, 300, 307, 264, 3410, 295, 2047, 1539, 13, 407, 949, 321], "temperature": 0.0, "avg_logprob": -0.13214034250337783, "compression_ratio": 1.5522388059701493, "no_speech_prob": 3.5559407933760667e-06}, {"id": 25, "seek": 15608, "start": 180.32000000000002, "end": 184.68, "text": " go into more detail around building the application today let's discuss a little", "tokens": [352, 666, 544, 2607, 926, 2390, 264, 3861, 965, 718, 311, 2248, 257, 707], "temperature": 0.0, "avg_logprob": -0.13214034250337783, "compression_ratio": 1.5522388059701493, "no_speech_prob": 3.5559407933760667e-06}, {"id": 26, "seek": 18468, "start": 184.68, "end": 192.88, "text": " bit about exactly what directives are and why they're so important. You'll", "tokens": [857, 466, 2293, 437, 2047, 1539, 366, 293, 983, 436, 434, 370, 1021, 13, 509, 603], "temperature": 0.0, "avg_logprob": -0.11660047677847055, "compression_ratio": 1.3885350318471337, "no_speech_prob": 5.594253707386088e-06}, {"id": 27, "seek": 18468, "start": 192.88, "end": 202.92000000000002, "text": " remember from our last tutorial that index.html which brings in", "tokens": [1604, 490, 527, 1036, 7073, 300, 8186, 13, 357, 15480, 597, 5607, 294], "temperature": 0.0, "avg_logprob": -0.11660047677847055, "compression_ratio": 1.3885350318471337, "no_speech_prob": 5.594253707386088e-06}, {"id": 28, "seek": 18468, "start": 202.92000000000002, "end": 212.20000000000002, "text": " Angular and our application causes two things to be attached to each root. Both", "tokens": [34107, 293, 527, 3861, 7700, 732, 721, 281, 312, 8570, 281, 1184, 5593, 13, 6767], "temperature": 0.0, "avg_logprob": -0.11660047677847055, "compression_ratio": 1.3885350318471337, "no_speech_prob": 5.594253707386088e-06}, {"id": 29, "seek": 21220, "start": 212.2, "end": 222.16, "text": " some code which is in these controllers and the actual HTML pages which are in", "tokens": [512, 3089, 597, 307, 294, 613, 26903, 293, 264, 3539, 17995, 7183, 597, 366, 294], "temperature": 0.0, "avg_logprob": -0.14100390986392372, "compression_ratio": 1.4580645161290322, "no_speech_prob": 8.446194215139258e-07}, {"id": 30, "seek": 21220, "start": 222.16, "end": 228.82, "text": " these templates. But what really is happening here? In particular how is it", "tokens": [613, 21165, 13, 583, 437, 534, 307, 2737, 510, 30, 682, 1729, 577, 307, 309], "temperature": 0.0, "avg_logprob": -0.14100390986392372, "compression_ratio": 1.4580645161290322, "no_speech_prob": 8.446194215139258e-07}, {"id": 31, "seek": 21220, "start": 228.82, "end": 239.32, "text": " that Angular can see things like ng-repeat in our template or ng-app or", "tokens": [300, 34107, 393, 536, 721, 411, 6415, 12, 265, 494, 267, 294, 527, 12379, 420, 6415, 12, 1746, 420], "temperature": 0.0, "avg_logprob": -0.14100390986392372, "compression_ratio": 1.4580645161290322, "no_speech_prob": 8.446194215139258e-07}, {"id": 32, "seek": 23932, "start": 239.32, "end": 247.12, "text": " ng-view and make things happen? These are not attributes which are actually", "tokens": [6415, 12, 1759, 293, 652, 721, 1051, 30, 1981, 366, 406, 17212, 597, 366, 767], "temperature": 0.0, "avg_logprob": -0.11054887633392776, "compression_ratio": 1.5072463768115942, "no_speech_prob": 1.5293992419174174e-06}, {"id": 33, "seek": 23932, "start": 247.12, "end": 255.2, "text": " defined in HTML. How is Angular causing them to make stuff happen either by", "tokens": [7642, 294, 17995, 13, 1012, 307, 34107, 9853, 552, 281, 652, 1507, 1051, 2139, 538], "temperature": 0.0, "avg_logprob": -0.11054887633392776, "compression_ratio": 1.5072463768115942, "no_speech_prob": 1.5293992419174174e-06}, {"id": 34, "seek": 23932, "start": 255.2, "end": 261.08, "text": " displaying things in a different way by changing the HTML or by adding behaviors", "tokens": [36834, 721, 294, 257, 819, 636, 538, 4473, 264, 17995, 420, 538, 5127, 15501], "temperature": 0.0, "avg_logprob": -0.11054887633392776, "compression_ratio": 1.5072463768115942, "no_speech_prob": 1.5293992419174174e-06}, {"id": 35, "seek": 23932, "start": 261.08, "end": 268.6, "text": " through JavaScript? Well what's actually going on is that Angular puts an event", "tokens": [807, 15778, 30, 1042, 437, 311, 767, 516, 322, 307, 300, 34107, 8137, 364, 2280], "temperature": 0.0, "avg_logprob": -0.11054887633392776, "compression_ratio": 1.5072463768115942, "no_speech_prob": 1.5293992419174174e-06}, {"id": 36, "seek": 26860, "start": 268.6, "end": 275.36, "text": " handler which gets called as soon as the DOM is completely loaded and that event", "tokens": [41967, 597, 2170, 1219, 382, 2321, 382, 264, 35727, 307, 2584, 13210, 293, 300, 2280], "temperature": 0.0, "avg_logprob": -0.09273880832600144, "compression_ratio": 1.551948051948052, "no_speech_prob": 8.664540473546367e-06}, {"id": 37, "seek": 26860, "start": 275.36, "end": 282.40000000000003, "text": " handler goes through all of our HTML and in fact it goes through the DOM and it", "tokens": [41967, 1709, 807, 439, 295, 527, 17995, 293, 294, 1186, 309, 1709, 807, 264, 35727, 293, 309], "temperature": 0.0, "avg_logprob": -0.09273880832600144, "compression_ratio": 1.551948051948052, "no_speech_prob": 8.664540473546367e-06}, {"id": 38, "seek": 26860, "start": 282.40000000000003, "end": 293.20000000000005, "text": " looks for special tags or attributes or classes and special meaning that those", "tokens": [1542, 337, 2121, 18632, 420, 17212, 420, 5359, 293, 2121, 3620, 300, 729], "temperature": 0.0, "avg_logprob": -0.09273880832600144, "compression_ratio": 1.551948051948052, "no_speech_prob": 8.664540473546367e-06}, {"id": 39, "seek": 29320, "start": 293.2, "end": 299.0, "text": " tags or attribute or classes are things which have been registered with", "tokens": [18632, 420, 19667, 420, 5359, 366, 721, 597, 362, 668, 13968, 365], "temperature": 0.0, "avg_logprob": -0.099041774355132, "compression_ratio": 1.8086124401913874, "no_speech_prob": 1.3287705087350332e-06}, {"id": 40, "seek": 29320, "start": 299.0, "end": 306.36, "text": " Angular as being special, as being things that we want Angular to handle. And", "tokens": [34107, 382, 885, 2121, 11, 382, 885, 721, 300, 321, 528, 34107, 281, 4813, 13, 400], "temperature": 0.0, "avg_logprob": -0.099041774355132, "compression_ratio": 1.8086124401913874, "no_speech_prob": 1.3287705087350332e-06}, {"id": 41, "seek": 29320, "start": 306.36, "end": 312.91999999999996, "text": " things which are registered in that way are called directives. Let's take a look", "tokens": [721, 597, 366, 13968, 294, 300, 636, 366, 1219, 2047, 1539, 13, 961, 311, 747, 257, 574], "temperature": 0.0, "avg_logprob": -0.099041774355132, "compression_ratio": 1.8086124401913874, "no_speech_prob": 1.3287705087350332e-06}, {"id": 42, "seek": 29320, "start": 312.91999999999996, "end": 317.76, "text": " at the Angular documentation. You can see at the very top of the Angular", "tokens": [412, 264, 34107, 14333, 13, 509, 393, 536, 412, 264, 588, 1192, 295, 264, 34107], "temperature": 0.0, "avg_logprob": -0.099041774355132, "compression_ratio": 1.8086124401913874, "no_speech_prob": 1.3287705087350332e-06}, {"id": 43, "seek": 29320, "start": 317.76, "end": 322.96, "text": " documentation is a list of directives and you'll see there's basically two", "tokens": [14333, 307, 257, 1329, 295, 2047, 1539, 293, 291, 603, 536, 456, 311, 1936, 732], "temperature": 0.0, "avg_logprob": -0.099041774355132, "compression_ratio": 1.8086124401913874, "no_speech_prob": 1.3287705087350332e-06}, {"id": 44, "seek": 32296, "start": 322.96, "end": 331.47999999999996, "text": " kinds. Some which are the same as existing HTML attributes or elements and", "tokens": [3685, 13, 2188, 597, 366, 264, 912, 382, 6741, 17995, 17212, 420, 4959, 293], "temperature": 0.0, "avg_logprob": -0.1252587143803986, "compression_ratio": 1.580110497237569, "no_speech_prob": 3.13811960950261e-06}, {"id": 45, "seek": 32296, "start": 331.47999999999996, "end": 339.88, "text": " some which start with ng. You'll notice that the ng ones use camel case and if", "tokens": [512, 597, 722, 365, 6415, 13, 509, 603, 3449, 300, 264, 6415, 2306, 764, 37755, 1389, 293, 498], "temperature": 0.0, "avg_logprob": -0.1252587143803986, "compression_ratio": 1.580110497237569, "no_speech_prob": 3.13811960950261e-06}, {"id": 46, "seek": 32296, "start": 339.88, "end": 344.76, "text": " you look at ng-app for example you can see that the way that these camel case", "tokens": [291, 574, 412, 6415, 12, 1746, 337, 1365, 291, 393, 536, 300, 264, 636, 300, 613, 37755, 1389], "temperature": 0.0, "avg_logprob": -0.1252587143803986, "compression_ratio": 1.580110497237569, "no_speech_prob": 3.13811960950261e-06}, {"id": 47, "seek": 32296, "start": 344.76, "end": 350.91999999999996, "text": " names get used is by taking wherever there's a capital", "tokens": [5288, 483, 1143, 307, 538, 1940, 8660, 456, 311, 257, 4238], "temperature": 0.0, "avg_logprob": -0.1252587143803986, "compression_ratio": 1.580110497237569, "no_speech_prob": 3.13811960950261e-06}, {"id": 48, "seek": 35092, "start": 350.92, "end": 356.76, "text": " letter and lower casing it and putting a dash between. So ng-app", "tokens": [5063, 293, 3126, 45109, 309, 293, 3372, 257, 8240, 1296, 13, 407, 6415, 12, 1746], "temperature": 0.0, "avg_logprob": -0.15384693999788654, "compression_ratio": 1.5621621621621622, "no_speech_prob": 1.3496986639438546e-06}, {"id": 49, "seek": 35092, "start": 356.76, "end": 366.56, "text": " becomes ng-app like this. So these directives are perhaps the most", "tokens": [3643, 6415, 12, 1746, 411, 341, 13, 407, 613, 2047, 1539, 366, 4317, 264, 881], "temperature": 0.0, "avg_logprob": -0.15384693999788654, "compression_ratio": 1.5621621621621622, "no_speech_prob": 1.3496986639438546e-06}, {"id": 50, "seek": 35092, "start": 366.56, "end": 371.44, "text": " important foundational thing you need to understand to actually understand what", "tokens": [1021, 32195, 551, 291, 643, 281, 1223, 281, 767, 1223, 437], "temperature": 0.0, "avg_logprob": -0.15384693999788654, "compression_ratio": 1.5621621621621622, "no_speech_prob": 1.3496986639438546e-06}, {"id": 51, "seek": 35092, "start": 371.44, "end": 379.56, "text": " Angular is doing and how it's working. And these ng versions are elements and", "tokens": [34107, 307, 884, 293, 577, 309, 311, 1364, 13, 400, 613, 6415, 9606, 366, 4959, 293], "temperature": 0.0, "avg_logprob": -0.15384693999788654, "compression_ratio": 1.5621621621621622, "no_speech_prob": 1.3496986639438546e-06}, {"id": 52, "seek": 37956, "start": 379.56, "end": 385.64, "text": " attributes and classes which Angular has effectively added to HTML and they each", "tokens": [17212, 293, 5359, 597, 34107, 575, 8659, 3869, 281, 17995, 293, 436, 1184], "temperature": 0.0, "avg_logprob": -0.13000916910695506, "compression_ratio": 1.5555555555555556, "no_speech_prob": 8.939522558648605e-06}, {"id": 53, "seek": 37956, "start": 385.64, "end": 391.48, "text": " have their own behaviors. So for example ng-click is something that allows you to", "tokens": [362, 641, 1065, 15501, 13, 407, 337, 1365, 6415, 12, 18548, 307, 746, 300, 4045, 291, 281], "temperature": 0.0, "avg_logprob": -0.13000916910695506, "compression_ratio": 1.5555555555555556, "no_speech_prob": 8.939522558648605e-06}, {"id": 54, "seek": 37956, "start": 391.48, "end": 397.64, "text": " specify custom behavior when an element is clicked. Well we've looked at ng-", "tokens": [16500, 2375, 5223, 562, 364, 4478, 307, 23370, 13, 1042, 321, 600, 2956, 412, 6415, 12], "temperature": 0.0, "avg_logprob": -0.13000916910695506, "compression_ratio": 1.5555555555555556, "no_speech_prob": 8.939522558648605e-06}, {"id": 55, "seek": 37956, "start": 397.64, "end": 402.16, "text": " repeat already so here's ng-repeat in the documentation. Instantiates a", "tokens": [7149, 1217, 370, 510, 311, 6415, 12, 265, 494, 267, 294, 264, 14333, 13, 2730, 11520, 1024, 257], "temperature": 0.0, "avg_logprob": -0.13000916910695506, "compression_ratio": 1.5555555555555556, "no_speech_prob": 8.939522558648605e-06}, {"id": 56, "seek": 37956, "start": 402.16, "end": 405.6, "text": " template, once per item from a collection. So we've seen that used", "tokens": [12379, 11, 1564, 680, 3174, 490, 257, 5765, 13, 407, 321, 600, 1612, 300, 1143], "temperature": 0.0, "avg_logprob": -0.13000916910695506, "compression_ratio": 1.5555555555555556, "no_speech_prob": 8.939522558648605e-06}, {"id": 57, "seek": 40560, "start": 405.6, "end": 412.44, "text": " before. What about these ones which overlap with existing HTML? Well what", "tokens": [949, 13, 708, 466, 613, 2306, 597, 19959, 365, 6741, 17995, 30, 1042, 437], "temperature": 0.0, "avg_logprob": -0.08545610764447381, "compression_ratio": 1.5805084745762712, "no_speech_prob": 3.2887210181797855e-06}, {"id": 58, "seek": 40560, "start": 412.44, "end": 417.64000000000004, "text": " happens here is that the Angular directive causes the existing HTML", "tokens": [2314, 510, 307, 300, 264, 34107, 45444, 7700, 264, 6741, 17995], "temperature": 0.0, "avg_logprob": -0.08545610764447381, "compression_ratio": 1.5805084745762712, "no_speech_prob": 3.2887210181797855e-06}, {"id": 59, "seek": 40560, "start": 417.64000000000004, "end": 424.36, "text": " behavior to slightly change. So in this case the Angular compiler goes through", "tokens": [5223, 281, 4748, 1319, 13, 407, 294, 341, 1389, 264, 34107, 31958, 1709, 807], "temperature": 0.0, "avg_logprob": -0.08545610764447381, "compression_ratio": 1.5805084745762712, "no_speech_prob": 3.2887210181797855e-06}, {"id": 60, "seek": 40560, "start": 424.36, "end": 428.84000000000003, "text": " the DOM, finds all the a tags and modifies them in some way and in this", "tokens": [264, 35727, 11, 10704, 439, 264, 257, 18632, 293, 1072, 11221, 552, 294, 512, 636, 293, 294, 341], "temperature": 0.0, "avg_logprob": -0.08545610764447381, "compression_ratio": 1.5805084745762712, "no_speech_prob": 3.2887210181797855e-06}, {"id": 61, "seek": 40560, "start": 428.84000000000003, "end": 434.12, "text": " case it ensures that the default action is prevented when href is empty. Anybody", "tokens": [1389, 309, 28111, 300, 264, 7576, 3069, 307, 27314, 562, 276, 33115, 307, 6707, 13, 19082], "temperature": 0.0, "avg_logprob": -0.08545610764447381, "compression_ratio": 1.5805084745762712, "no_speech_prob": 3.2887210181797855e-06}, {"id": 62, "seek": 43412, "start": 434.12, "end": 438.32, "text": " who's programmed in JavaScript before will recognize that as being a pretty", "tokens": [567, 311, 31092, 294, 15778, 949, 486, 5521, 300, 382, 885, 257, 1238], "temperature": 0.0, "avg_logprob": -0.13630044871363148, "compression_ratio": 1.6406926406926408, "no_speech_prob": 3.7266038361849496e-06}, {"id": 63, "seek": 43412, "start": 438.32, "end": 443.36, "text": " handy default behavior that it's created, well actually default behavior that it's", "tokens": [13239, 7576, 5223, 300, 309, 311, 2942, 11, 731, 767, 7576, 5223, 300, 309, 311], "temperature": 0.0, "avg_logprob": -0.13630044871363148, "compression_ratio": 1.6406926406926408, "no_speech_prob": 3.7266038361849496e-06}, {"id": 64, "seek": 43412, "start": 443.36, "end": 449.08, "text": " removed in this case. What's really interesting I think about Angular is", "tokens": [7261, 294, 341, 1389, 13, 708, 311, 534, 1880, 286, 519, 466, 34107, 307], "temperature": 0.0, "avg_logprob": -0.13630044871363148, "compression_ratio": 1.6406926406926408, "no_speech_prob": 3.7266038361849496e-06}, {"id": 65, "seek": 43412, "start": 449.08, "end": 456.0, "text": " that you are not limited to the directives that they've provided the", "tokens": [300, 291, 366, 406, 5567, 281, 264, 2047, 1539, 300, 436, 600, 5649, 264], "temperature": 0.0, "avg_logprob": -0.13630044871363148, "compression_ratio": 1.6406926406926408, "no_speech_prob": 3.7266038361849496e-06}, {"id": 66, "seek": 43412, "start": 456.0, "end": 463.84000000000003, "text": " Angular authors. In fact you can add your own. Let's say I very commonly had a", "tokens": [34107, 16552, 13, 682, 1186, 291, 393, 909, 428, 1065, 13, 961, 311, 584, 286, 588, 12719, 632, 257], "temperature": 0.0, "avg_logprob": -0.13630044871363148, "compression_ratio": 1.6406926406926408, "no_speech_prob": 3.7266038361849496e-06}, {"id": 67, "seek": 46384, "start": 463.84, "end": 482.08, "text": " header which looked something like this maybe those greetings from somebody to", "tokens": [23117, 597, 2956, 746, 411, 341, 1310, 729, 33667, 490, 2618, 281], "temperature": 0.0, "avg_logprob": -0.22295108918220766, "compression_ratio": 1.3773584905660377, "no_speech_prob": 1.4738725440111011e-05}, {"id": 68, "seek": 46384, "start": 482.08, "end": 491.47999999999996, "text": " somebody and maybe we want to now create something in HTML that can", "tokens": [2618, 293, 1310, 321, 528, 281, 586, 1884, 746, 294, 17995, 300, 393], "temperature": 0.0, "avg_logprob": -0.22295108918220766, "compression_ratio": 1.3773584905660377, "no_speech_prob": 1.4738725440111011e-05}, {"id": 69, "seek": 49148, "start": 491.48, "end": 498.0, "text": " automatically build that using something like a greach tag. This is obviously a", "tokens": [6772, 1322, 300, 1228, 746, 411, 257, 6066, 608, 6162, 13, 639, 307, 2745, 257], "temperature": 0.0, "avg_logprob": -0.12099526609693255, "compression_ratio": 1.421383647798742, "no_speech_prob": 4.092869403393706e-06}, {"id": 70, "seek": 49148, "start": 498.0, "end": 501.72, "text": " very silly example but it's a very simple one to get the idea. So it could", "tokens": [588, 11774, 1365, 457, 309, 311, 257, 588, 2199, 472, 281, 483, 264, 1558, 13, 407, 309, 727], "temperature": 0.0, "avg_logprob": -0.12099526609693255, "compression_ratio": 1.421383647798742, "no_speech_prob": 4.092869403393706e-06}, {"id": 71, "seek": 49148, "start": 501.72, "end": 517.9200000000001, "text": " be greetings from Jeremy to audience. So how would we create that? Well", "tokens": [312, 33667, 490, 17809, 281, 4034, 13, 407, 577, 576, 321, 1884, 300, 30, 1042], "temperature": 0.0, "avg_logprob": -0.12099526609693255, "compression_ratio": 1.421383647798742, "no_speech_prob": 4.092869403393706e-06}, {"id": 72, "seek": 51792, "start": 517.92, "end": 524.68, "text": " interestingly it really couldn't be more straightforward. There is something", "tokens": [25873, 309, 534, 2809, 380, 312, 544, 15325, 13, 821, 307, 746], "temperature": 0.0, "avg_logprob": -0.161337610500962, "compression_ratio": 1.5384615384615385, "no_speech_prob": 2.994413762280601e-06}, {"id": 73, "seek": 51792, "start": 524.68, "end": 532.24, "text": " called.directive in Angular and you can see I've got a template for it which", "tokens": [1219, 2411, 44868, 488, 294, 34107, 293, 291, 393, 536, 286, 600, 658, 257, 12379, 337, 309, 597], "temperature": 0.0, "avg_logprob": -0.161337610500962, "compression_ratio": 1.5384615384615385, "no_speech_prob": 2.994413762280601e-06}, {"id": 74, "seek": 51792, "start": 532.24, "end": 535.64, "text": " basically includes all the bits I might want. So we create a directive called", "tokens": [1936, 5974, 439, 264, 9239, 286, 1062, 528, 13, 407, 321, 1884, 257, 45444, 1219], "temperature": 0.0, "avg_logprob": -0.161337610500962, "compression_ratio": 1.5384615384615385, "no_speech_prob": 2.994413762280601e-06}, {"id": 75, "seek": 51792, "start": 535.64, "end": 542.48, "text": " greet and literally this is now registered with Angular and tells it", "tokens": [12044, 293, 3736, 341, 307, 586, 13968, 365, 34107, 293, 5112, 309], "temperature": 0.0, "avg_logprob": -0.161337610500962, "compression_ratio": 1.5384615384615385, "no_speech_prob": 2.994413762280601e-06}, {"id": 76, "seek": 54248, "start": 542.48, "end": 553.88, "text": " anytime it sees this we would like to attach some special behavior to it. Maybe", "tokens": [13038, 309, 8194, 341, 321, 576, 411, 281, 5085, 512, 2121, 5223, 281, 309, 13, 2704], "temperature": 0.0, "avg_logprob": -0.19130095191623853, "compression_ratio": 1.3333333333333333, "no_speech_prob": 4.356841145636281e-06}, {"id": 77, "seek": 54248, "start": 553.88, "end": 569.48, "text": " let's make this a bit simpler and use it..give. So we'll use it here. Okay let's", "tokens": [718, 311, 652, 341, 257, 857, 18587, 293, 764, 309, 13, 2411, 25850, 13, 407, 321, 603, 764, 309, 510, 13, 1033, 718, 311], "temperature": 0.0, "avg_logprob": -0.19130095191623853, "compression_ratio": 1.3333333333333333, "no_speech_prob": 4.356841145636281e-06}, {"id": 78, "seek": 56948, "start": 569.48, "end": 574.72, "text": " try that. So there's a whole bunch of things that we can do but the very", "tokens": [853, 300, 13, 407, 456, 311, 257, 1379, 3840, 295, 721, 300, 321, 393, 360, 457, 264, 588], "temperature": 0.0, "avg_logprob": -0.10631736990523664, "compression_ratio": 1.6368421052631579, "no_speech_prob": 5.093628260510741e-06}, {"id": 79, "seek": 56948, "start": 574.72, "end": 581.6800000000001, "text": " simplest one, let's get rid of everything except the template and the controller", "tokens": [22811, 472, 11, 718, 311, 483, 3973, 295, 1203, 3993, 264, 12379, 293, 264, 10561], "temperature": 0.0, "avg_logprob": -0.10631736990523664, "compression_ratio": 1.6368421052631579, "no_speech_prob": 5.093628260510741e-06}, {"id": 80, "seek": 56948, "start": 581.6800000000001, "end": 587.36, "text": " because the very simplest one basically lets us insert our own behavior and HTML", "tokens": [570, 264, 588, 22811, 472, 1936, 6653, 505, 8969, 527, 1065, 5223, 293, 17995], "temperature": 0.0, "avg_logprob": -0.10631736990523664, "compression_ratio": 1.6368421052631579, "no_speech_prob": 5.093628260510741e-06}, {"id": 81, "seek": 56948, "start": 587.36, "end": 592.04, "text": " by having a template and a controller which is reusable. So in this case our", "tokens": [538, 1419, 257, 12379, 293, 257, 10561, 597, 307, 41807, 13, 407, 294, 341, 1389, 527], "temperature": 0.0, "avg_logprob": -0.10631736990523664, "compression_ratio": 1.6368421052631579, "no_speech_prob": 5.093628260510741e-06}, {"id": 82, "seek": 59204, "start": 592.04, "end": 605.9599999999999, "text": " template would be the contents of this and we're going to replace these with", "tokens": [12379, 576, 312, 264, 15768, 295, 341, 293, 321, 434, 516, 281, 7406, 613, 365], "temperature": 0.0, "avg_logprob": -0.19516309824856845, "compression_ratio": 1.5042735042735043, "no_speech_prob": 1.6028028539949446e-06}, {"id": 83, "seek": 59204, "start": 606.28, "end": 616.76, "text": " these things in handlebars. So we'll go from and something called from and we'll", "tokens": [613, 721, 294, 4813, 42162, 13, 407, 321, 603, 352, 490, 293, 746, 1219, 490, 293, 321, 603], "temperature": 0.0, "avg_logprob": -0.19516309824856845, "compression_ratio": 1.5042735042735043, "no_speech_prob": 1.6028028539949446e-06}, {"id": 84, "seek": 61676, "start": 616.76, "end": 626.36, "text": " call something to. So now that we've done that it's as simple as remember these", "tokens": [818, 746, 281, 13, 407, 586, 300, 321, 600, 1096, 300, 309, 311, 382, 2199, 382, 1604, 613], "temperature": 0.0, "avg_logprob": -0.16358661651611328, "compression_ratio": 1.7541899441340782, "no_speech_prob": 7.296261173905805e-06}, {"id": 85, "seek": 61676, "start": 626.36, "end": 630.2, "text": " things are going to come out of dollar scope so let's put them into dollar", "tokens": [721, 366, 516, 281, 808, 484, 295, 7241, 11923, 370, 718, 311, 829, 552, 666, 7241], "temperature": 0.0, "avg_logprob": -0.16358661651611328, "compression_ratio": 1.7541899441340782, "no_speech_prob": 7.296261173905805e-06}, {"id": 86, "seek": 61676, "start": 630.2, "end": 637.96, "text": " scope. $dollarscope.from equals and we can just grab the attributes and find the one", "tokens": [11923, 13, 1848, 67, 1833, 685, 13960, 13, 20579, 6915, 293, 321, 393, 445, 4444, 264, 17212, 293, 915, 264, 472], "temperature": 0.0, "avg_logprob": -0.16358661651611328, "compression_ratio": 1.7541899441340782, "no_speech_prob": 7.296261173905805e-06}, {"id": 87, "seek": 61676, "start": 637.96, "end": 644.68, "text": " called from and $dollarscope.to and we'll look at the attributes and we'll", "tokens": [1219, 490, 293, 1848, 67, 1833, 685, 13960, 13, 1353, 293, 321, 603, 574, 412, 264, 17212, 293, 321, 603], "temperature": 0.0, "avg_logprob": -0.16358661651611328, "compression_ratio": 1.7541899441340782, "no_speech_prob": 7.296261173905805e-06}, {"id": 88, "seek": 64468, "start": 644.68, "end": 650.68, "text": " find dollar attributes. I think we call it greet. So we've now got a controller", "tokens": [915, 7241, 17212, 13, 286, 519, 321, 818, 309, 12044, 13, 407, 321, 600, 586, 658, 257, 10561], "temperature": 0.0, "avg_logprob": -0.13127142807533002, "compression_ratio": 1.597938144329897, "no_speech_prob": 5.422184131020913e-06}, {"id": 89, "seek": 64468, "start": 650.68, "end": 657.56, "text": " we've got a template and let's see if that now has the behavior that we", "tokens": [321, 600, 658, 257, 12379, 293, 718, 311, 536, 498, 300, 586, 575, 264, 5223, 300, 321], "temperature": 0.0, "avg_logprob": -0.13127142807533002, "compression_ratio": 1.597938144329897, "no_speech_prob": 5.422184131020913e-06}, {"id": 90, "seek": 64468, "start": 657.56, "end": 662.4399999999999, "text": " requested so we'll get rid of our h2 and so now all we've got here is a div in", "tokens": [16436, 370, 321, 603, 483, 3973, 295, 527, 276, 17, 293, 370, 586, 439, 321, 600, 658, 510, 307, 257, 3414, 294], "temperature": 0.0, "avg_logprob": -0.13127142807533002, "compression_ratio": 1.597938144329897, "no_speech_prob": 5.422184131020913e-06}, {"id": 91, "seek": 64468, "start": 662.4399999999999, "end": 671.3599999999999, "text": " which we've got our own new directive. Let's try that and you can see it's done", "tokens": [597, 321, 600, 658, 527, 1065, 777, 45444, 13, 961, 311, 853, 300, 293, 291, 393, 536, 309, 311, 1096], "temperature": 0.0, "avg_logprob": -0.13127142807533002, "compression_ratio": 1.597938144329897, "no_speech_prob": 5.422184131020913e-06}, {"id": 92, "seek": 67136, "start": 671.36, "end": 676.04, "text": " exactly what we hoped it would do. Now that's obviously a very simple", "tokens": [2293, 437, 321, 19737, 309, 576, 360, 13, 823, 300, 311, 2745, 257, 588, 2199], "temperature": 0.0, "avg_logprob": -0.10661111859714284, "compression_ratio": 1.566137566137566, "no_speech_prob": 1.3006811968807597e-05}, {"id": 93, "seek": 67136, "start": 676.04, "end": 681.16, "text": " example but you get the idea which is using nothing but this template and", "tokens": [1365, 457, 291, 483, 264, 1558, 597, 307, 1228, 1825, 457, 341, 12379, 293], "temperature": 0.0, "avg_logprob": -0.10661111859714284, "compression_ratio": 1.566137566137566, "no_speech_prob": 1.3006811968807597e-05}, {"id": 94, "seek": 67136, "start": 681.16, "end": 687.44, "text": " controller we can insert our own code and our own HTML by searching for our", "tokens": [10561, 321, 393, 8969, 527, 1065, 3089, 293, 527, 1065, 17995, 538, 10808, 337, 527], "temperature": 0.0, "avg_logprob": -0.10661111859714284, "compression_ratio": 1.566137566137566, "no_speech_prob": 1.3006811968807597e-05}, {"id": 95, "seek": 67136, "start": 687.44, "end": 695.6, "text": " own special directives and with the other directive options that you can see", "tokens": [1065, 2121, 2047, 1539, 293, 365, 264, 661, 45444, 3956, 300, 291, 393, 536], "temperature": 0.0, "avg_logprob": -0.10661111859714284, "compression_ratio": 1.566137566137566, "no_speech_prob": 1.3006811968807597e-05}, {"id": 96, "seek": 69560, "start": 695.6, "end": 701.48, "text": " here you can actually put all kinds of other functionality for example this", "tokens": [510, 291, 393, 767, 829, 439, 3685, 295, 661, 14980, 337, 1365, 341], "temperature": 0.0, "avg_logprob": -0.10579373722984678, "compression_ratio": 1.5956521739130434, "no_speech_prob": 3.668822955660289e-06}, {"id": 97, "seek": 69560, "start": 701.48, "end": 706.44, "text": " link is perhaps the one that's most commonly used that calls the JavaScript", "tokens": [2113, 307, 4317, 264, 472, 300, 311, 881, 12719, 1143, 300, 5498, 264, 15778], "temperature": 0.0, "avg_logprob": -0.10579373722984678, "compression_ratio": 1.5956521739130434, "no_speech_prob": 3.668822955660289e-06}, {"id": 98, "seek": 69560, "start": 706.44, "end": 711.36, "text": " on the DOM element after it's been created and that's where for example you", "tokens": [322, 264, 35727, 4478, 934, 309, 311, 668, 2942, 293, 300, 311, 689, 337, 1365, 291], "temperature": 0.0, "avg_logprob": -0.10579373722984678, "compression_ratio": 1.5956521739130434, "no_speech_prob": 3.668822955660289e-06}, {"id": 99, "seek": 69560, "start": 711.36, "end": 718.24, "text": " could call a jQuery UI method or something like that and then we'll", "tokens": [727, 818, 257, 361, 35550, 15682, 3170, 420, 746, 411, 300, 293, 550, 321, 603], "temperature": 0.0, "avg_logprob": -0.10579373722984678, "compression_ratio": 1.5956521739130434, "no_speech_prob": 3.668822955660289e-06}, {"id": 100, "seek": 69560, "start": 718.24, "end": 720.88, "text": " certainly come back and create some of our own directives that are more", "tokens": [3297, 808, 646, 293, 1884, 512, 295, 527, 1065, 2047, 1539, 300, 366, 544], "temperature": 0.0, "avg_logprob": -0.10579373722984678, "compression_ratio": 1.5956521739130434, "no_speech_prob": 3.668822955660289e-06}, {"id": 101, "seek": 72088, "start": 720.88, "end": 730.24, "text": " interesting than this later in this series. So for now now that we've learned", "tokens": [1880, 813, 341, 1780, 294, 341, 2638, 13, 407, 337, 586, 586, 300, 321, 600, 3264], "temperature": 0.0, "avg_logprob": -0.13334292631882888, "compression_ratio": 1.6946902654867257, "no_speech_prob": 1.9947094642702723e-06}, {"id": 102, "seek": 72088, "start": 730.24, "end": 733.84, "text": " about really what's going on with Angular which is to go through the DOM", "tokens": [466, 534, 437, 311, 516, 322, 365, 34107, 597, 307, 281, 352, 807, 264, 35727], "temperature": 0.0, "avg_logprob": -0.13334292631882888, "compression_ratio": 1.6946902654867257, "no_speech_prob": 1.9947094642702723e-06}, {"id": 103, "seek": 72088, "start": 733.84, "end": 739.84, "text": " finding special elements special classes and special attributes which have been", "tokens": [5006, 2121, 4959, 2121, 5359, 293, 2121, 17212, 597, 362, 668], "temperature": 0.0, "avg_logprob": -0.13334292631882888, "compression_ratio": 1.6946902654867257, "no_speech_prob": 1.9947094642702723e-06}, {"id": 104, "seek": 72088, "start": 739.84, "end": 745.08, "text": " registered with Angular and giving them special behaviors these things been", "tokens": [13968, 365, 34107, 293, 2902, 552, 2121, 15501, 613, 721, 668], "temperature": 0.0, "avg_logprob": -0.13334292631882888, "compression_ratio": 1.6946902654867257, "no_speech_prob": 1.9947094642702723e-06}, {"id": 105, "seek": 72088, "start": 745.08, "end": 750.24, "text": " called directives and understanding that Angular comes with a whole bunch of", "tokens": [1219, 2047, 1539, 293, 3701, 300, 34107, 1487, 365, 257, 1379, 3840, 295], "temperature": 0.0, "avg_logprob": -0.13334292631882888, "compression_ratio": 1.6946902654867257, "no_speech_prob": 1.9947094642702723e-06}, {"id": 106, "seek": 75024, "start": 750.24, "end": 755.04, "text": " these which gives us lots of really useful functionality out of the box", "tokens": [613, 597, 2709, 505, 3195, 295, 534, 4420, 14980, 484, 295, 264, 2424], "temperature": 0.0, "avg_logprob": -0.08214391511062095, "compression_ratio": 1.7582938388625593, "no_speech_prob": 1.6701042113709264e-05}, {"id": 107, "seek": 75024, "start": 755.04, "end": 759.6, "text": " let's now try and use some of this to add some functionality to our", "tokens": [718, 311, 586, 853, 293, 764, 512, 295, 341, 281, 909, 512, 14980, 281, 527], "temperature": 0.0, "avg_logprob": -0.08214391511062095, "compression_ratio": 1.7582938388625593, "no_speech_prob": 1.6701042113709264e-05}, {"id": 108, "seek": 75024, "start": 759.6, "end": 765.48, "text": " application and we're just going to use pre-written directives for now rather", "tokens": [3861, 293, 321, 434, 445, 516, 281, 764, 659, 12, 26859, 2047, 1539, 337, 586, 2831], "temperature": 0.0, "avg_logprob": -0.08214391511062095, "compression_ratio": 1.7582938388625593, "no_speech_prob": 1.6701042113709264e-05}, {"id": 109, "seek": 75024, "start": 765.48, "end": 771.36, "text": " than creating our own. So at this stage all we have is something which can", "tokens": [813, 4084, 527, 1065, 13, 407, 412, 341, 3233, 439, 321, 362, 307, 746, 597, 393], "temperature": 0.0, "avg_logprob": -0.08214391511062095, "compression_ratio": 1.7582938388625593, "no_speech_prob": 1.6701042113709264e-05}, {"id": 110, "seek": 75024, "start": 771.36, "end": 777.2, "text": " display a list and we want to add some additional functionality to it we would", "tokens": [4674, 257, 1329, 293, 321, 528, 281, 909, 512, 4497, 14980, 281, 309, 321, 576], "temperature": 0.0, "avg_logprob": -0.08214391511062095, "compression_ratio": 1.7582938388625593, "no_speech_prob": 1.6701042113709264e-05}, {"id": 111, "seek": 77720, "start": 777.2, "end": 781.72, "text": " like to be able to sort it search it and if it gets really long we'd like to be", "tokens": [411, 281, 312, 1075, 281, 1333, 309, 3164, 309, 293, 498, 309, 2170, 534, 938, 321, 1116, 411, 281, 312], "temperature": 0.0, "avg_logprob": -0.09578995955617804, "compression_ratio": 1.7641509433962264, "no_speech_prob": 4.222749794280389e-06}, {"id": 112, "seek": 77720, "start": 781.72, "end": 785.5600000000001, "text": " able to paginate it so we don't pull everything down from the web every", "tokens": [1075, 281, 11812, 13923, 309, 370, 321, 500, 380, 2235, 1203, 760, 490, 264, 3670, 633], "temperature": 0.0, "avg_logprob": -0.09578995955617804, "compression_ratio": 1.7641509433962264, "no_speech_prob": 4.222749794280389e-06}, {"id": 113, "seek": 77720, "start": 785.5600000000001, "end": 790.2800000000001, "text": " single time we look at this page. So let's start creating that functionality", "tokens": [2167, 565, 321, 574, 412, 341, 3028, 13, 407, 718, 311, 722, 4084, 300, 14980], "temperature": 0.0, "avg_logprob": -0.09578995955617804, "compression_ratio": 1.7641509433962264, "no_speech_prob": 4.222749794280389e-06}, {"id": 114, "seek": 77720, "start": 790.2800000000001, "end": 797.5600000000001, "text": " and let's get rid of our greeting. There we go. So the first functionality I'm", "tokens": [293, 718, 311, 483, 3973, 295, 527, 28174, 13, 821, 321, 352, 13, 407, 264, 700, 14980, 286, 478], "temperature": 0.0, "avg_logprob": -0.09578995955617804, "compression_ratio": 1.7641509433962264, "no_speech_prob": 4.222749794280389e-06}, {"id": 115, "seek": 77720, "start": 797.5600000000001, "end": 804.6400000000001, "text": " going to create is sorting. Now functionality like that since it's", "tokens": [516, 281, 1884, 307, 32411, 13, 823, 14980, 411, 300, 1670, 309, 311], "temperature": 0.0, "avg_logprob": -0.09578995955617804, "compression_ratio": 1.7641509433962264, "no_speech_prob": 4.222749794280389e-06}, {"id": 116, "seek": 80464, "start": 804.64, "end": 810.36, "text": " working on stuff coming out of the database needs to be handled in two", "tokens": [1364, 322, 1507, 1348, 484, 295, 264, 8149, 2203, 281, 312, 18033, 294, 732], "temperature": 0.0, "avg_logprob": -0.09499674829943426, "compression_ratio": 1.922680412371134, "no_speech_prob": 6.240825769054936e-06}, {"id": 117, "seek": 80464, "start": 810.36, "end": 815.8, "text": " places it needs to be handled both in our web application in C sharp and it", "tokens": [3190, 309, 2203, 281, 312, 18033, 1293, 294, 527, 3670, 3861, 294, 383, 8199, 293, 309], "temperature": 0.0, "avg_logprob": -0.09499674829943426, "compression_ratio": 1.922680412371134, "no_speech_prob": 6.240825769054936e-06}, {"id": 118, "seek": 80464, "start": 815.8, "end": 821.4, "text": " also needs to be handled in JavaScript so the JavaScript is going to have to", "tokens": [611, 2203, 281, 312, 18033, 294, 15778, 370, 264, 15778, 307, 516, 281, 362, 281], "temperature": 0.0, "avg_logprob": -0.09499674829943426, "compression_ratio": 1.922680412371134, "no_speech_prob": 6.240825769054936e-06}, {"id": 119, "seek": 80464, "start": 821.4, "end": 826.96, "text": " call a method to sort or search or paginate and handle what comes back and", "tokens": [818, 257, 3170, 281, 1333, 420, 3164, 420, 11812, 13923, 293, 4813, 437, 1487, 646, 293], "temperature": 0.0, "avg_logprob": -0.09499674829943426, "compression_ratio": 1.922680412371134, "no_speech_prob": 6.240825769054936e-06}, {"id": 120, "seek": 80464, "start": 826.96, "end": 830.68, "text": " our web application is going to be able to have to handle those parameters", "tokens": [527, 3670, 3861, 307, 516, 281, 312, 1075, 281, 362, 281, 4813, 729, 9834], "temperature": 0.0, "avg_logprob": -0.09499674829943426, "compression_ratio": 1.922680412371134, "no_speech_prob": 6.240825769054936e-06}, {"id": 121, "seek": 83068, "start": 830.68, "end": 836.9599999999999, "text": " appropriately. Now sorting searching and paginating is so common that Flask", "tokens": [23505, 13, 823, 32411, 10808, 293, 11812, 8205, 307, 370, 2689, 300, 3235, 3863], "temperature": 0.0, "avg_logprob": -0.10040417423954716, "compression_ratio": 1.7376425855513309, "no_speech_prob": 3.041557420147001e-06}, {"id": 122, "seek": 83068, "start": 836.9599999999999, "end": 841.0799999999999, "text": " Restless actually does all of that out of the box so we don't have to add any", "tokens": [13094, 1832, 767, 775, 439, 295, 300, 484, 295, 264, 2424, 370, 321, 500, 380, 362, 281, 909, 604], "temperature": 0.0, "avg_logprob": -0.10040417423954716, "compression_ratio": 1.7376425855513309, "no_speech_prob": 3.041557420147001e-06}, {"id": 123, "seek": 83068, "start": 841.0799999999999, "end": 846.68, "text": " code to the Python version. Unfortunately however Microsoft although", "tokens": [3089, 281, 264, 15329, 3037, 13, 8590, 4461, 8116, 4878], "temperature": 0.0, "avg_logprob": -0.10040417423954716, "compression_ratio": 1.7376425855513309, "no_speech_prob": 3.041557420147001e-06}, {"id": 124, "seek": 83068, "start": 846.68, "end": 850.1999999999999, "text": " they also had all of that functionality out of the box in earlier versions of", "tokens": [436, 611, 632, 439, 295, 300, 14980, 484, 295, 264, 2424, 294, 3071, 9606, 295], "temperature": 0.0, "avg_logprob": -0.10040417423954716, "compression_ratio": 1.7376425855513309, "no_speech_prob": 3.041557420147001e-06}, {"id": 125, "seek": 83068, "start": 850.1999999999999, "end": 854.4, "text": " Web API in pre-release versions they actually took it out of the release", "tokens": [9573, 9362, 294, 659, 12, 265, 1122, 9606, 436, 767, 1890, 309, 484, 295, 264, 4374], "temperature": 0.0, "avg_logprob": -0.10040417423954716, "compression_ratio": 1.7376425855513309, "no_speech_prob": 3.041557420147001e-06}, {"id": 126, "seek": 83068, "start": 854.4, "end": 859.0799999999999, "text": " version for some strange reason. So we're going to put it back in and the way we're", "tokens": [3037, 337, 512, 5861, 1778, 13, 407, 321, 434, 516, 281, 829, 309, 646, 294, 293, 264, 636, 321, 434], "temperature": 0.0, "avg_logprob": -0.10040417423954716, "compression_ratio": 1.7376425855513309, "no_speech_prob": 3.041557420147001e-06}, {"id": 127, "seek": 85908, "start": 859.08, "end": 865.48, "text": " going to put it back in is we'll just go to my blog to part 2 and you'll see here", "tokens": [516, 281, 829, 309, 646, 294, 307, 321, 603, 445, 352, 281, 452, 6968, 281, 644, 568, 293, 291, 603, 536, 510], "temperature": 0.0, "avg_logprob": -0.16538373435415873, "compression_ratio": 1.634020618556701, "no_speech_prob": 3.237738837924553e-06}, {"id": 128, "seek": 85908, "start": 866.08, "end": 873.4000000000001, "text": " something called get to do items we're just going to copy that and we're going", "tokens": [746, 1219, 483, 281, 360, 4754, 321, 434, 445, 516, 281, 5055, 300, 293, 321, 434, 516], "temperature": 0.0, "avg_logprob": -0.16538373435415873, "compression_ratio": 1.634020618556701, "no_speech_prob": 3.237738837924553e-06}, {"id": 129, "seek": 85908, "start": 873.4000000000001, "end": 884.4000000000001, "text": " to paste it into our controller replacing the existing get API slash to do. So here", "tokens": [281, 9163, 309, 666, 527, 10561, 19139, 264, 6741, 483, 9362, 17330, 281, 360, 13, 407, 510], "temperature": 0.0, "avg_logprob": -0.16538373435415873, "compression_ratio": 1.634020618556701, "no_speech_prob": 3.237738837924553e-06}, {"id": 130, "seek": 85908, "start": 884.4000000000001, "end": 887.5200000000001, "text": " it is here and you can see that this has now got the functionality we've", "tokens": [309, 307, 510, 293, 291, 393, 536, 300, 341, 575, 586, 658, 264, 14980, 321, 600], "temperature": 0.0, "avg_logprob": -0.16538373435415873, "compression_ratio": 1.634020618556701, "no_speech_prob": 3.237738837924553e-06}, {"id": 131, "seek": 88752, "start": 887.52, "end": 892.84, "text": " requested it can sort in ascending order sending order by a particular field it", "tokens": [16436, 309, 393, 1333, 294, 15526, 2029, 1668, 7750, 1668, 538, 257, 1729, 2519, 309], "temperature": 0.0, "avg_logprob": -0.1371161937713623, "compression_ratio": 1.6872246696035242, "no_speech_prob": 5.093620075058425e-06}, {"id": 132, "seek": 88752, "start": 892.84, "end": 897.76, "text": " can have a search and it can also paginate in other words it can limit to", "tokens": [393, 362, 257, 3164, 293, 309, 393, 611, 11812, 13923, 294, 661, 2283, 309, 393, 4948, 281], "temperature": 0.0, "avg_logprob": -0.1371161937713623, "compression_ratio": 1.6872246696035242, "no_speech_prob": 5.093620075058425e-06}, {"id": 133, "seek": 88752, "start": 897.76, "end": 902.56, "text": " a certain number of records and it can start at the nth record with this offset", "tokens": [257, 1629, 1230, 295, 7724, 293, 309, 393, 722, 412, 264, 297, 392, 2136, 365, 341, 18687], "temperature": 0.0, "avg_logprob": -0.1371161937713623, "compression_ratio": 1.6872246696035242, "no_speech_prob": 5.093620075058425e-06}, {"id": 134, "seek": 88752, "start": 902.56, "end": 911.04, "text": " parameter. It's not very much code it's just 8 or 10 lines although it's", "tokens": [13075, 13, 467, 311, 406, 588, 709, 3089, 309, 311, 445, 1649, 420, 1266, 3876, 4878, 309, 311], "temperature": 0.0, "avg_logprob": -0.1371161937713623, "compression_ratio": 1.6872246696035242, "no_speech_prob": 5.093620075058425e-06}, {"id": 135, "seek": 88752, "start": 911.04, "end": 916.88, "text": " slightly it's not the most elegant looking code but it does the job and it's", "tokens": [4748, 309, 311, 406, 264, 881, 21117, 1237, 3089, 457, 309, 775, 264, 1691, 293, 309, 311], "temperature": 0.0, "avg_logprob": -0.1371161937713623, "compression_ratio": 1.6872246696035242, "no_speech_prob": 5.093620075058425e-06}, {"id": 136, "seek": 91688, "start": 916.88, "end": 921.12, "text": " nice that we can do it in so little code. So until Microsoft gets around to", "tokens": [1481, 300, 321, 393, 360, 309, 294, 370, 707, 3089, 13, 407, 1826, 8116, 2170, 926, 281], "temperature": 0.0, "avg_logprob": -0.12224721426915641, "compression_ratio": 1.7117903930131004, "no_speech_prob": 1.2029115168843418e-05}, {"id": 137, "seek": 91688, "start": 921.12, "end": 929.48, "text": " adding that back to Web API we're going to have to modify Microsoft's code each", "tokens": [5127, 300, 646, 281, 9573, 9362, 321, 434, 516, 281, 362, 281, 16927, 8116, 311, 3089, 1184], "temperature": 0.0, "avg_logprob": -0.12224721426915641, "compression_ratio": 1.7117903930131004, "no_speech_prob": 1.2029115168843418e-05}, {"id": 138, "seek": 91688, "start": 929.48, "end": 933.88, "text": " time we create a new controller just pasting in this and of course you'll need", "tokens": [565, 321, 1884, 257, 777, 10561, 445, 1791, 278, 294, 341, 293, 295, 1164, 291, 603, 643], "temperature": 0.0, "avg_logprob": -0.12224721426915641, "compression_ratio": 1.7117903930131004, "no_speech_prob": 1.2029115168843418e-05}, {"id": 139, "seek": 91688, "start": 933.88, "end": 939.08, "text": " to change the class name to your class name. So now that we have that that's", "tokens": [281, 1319, 264, 1508, 1315, 281, 428, 1508, 1315, 13, 407, 586, 300, 321, 362, 300, 300, 311], "temperature": 0.0, "avg_logprob": -0.12224721426915641, "compression_ratio": 1.7117903930131004, "no_speech_prob": 1.2029115168843418e-05}, {"id": 140, "seek": 91688, "start": 939.08, "end": 944.52, "text": " the only change that we need to make in C sharp we now need to make some changes", "tokens": [264, 787, 1319, 300, 321, 643, 281, 652, 294, 383, 8199, 321, 586, 643, 281, 652, 512, 2962], "temperature": 0.0, "avg_logprob": -0.12224721426915641, "compression_ratio": 1.7117903930131004, "no_speech_prob": 1.2029115168843418e-05}, {"id": 141, "seek": 94452, "start": 944.52, "end": 948.1999999999999, "text": " in the JavaScript to actually get this to do something. So since we're doing", "tokens": [294, 264, 15778, 281, 767, 483, 341, 281, 360, 746, 13, 407, 1670, 321, 434, 884], "temperature": 0.0, "avg_logprob": -0.11097616790443339, "compression_ratio": 1.7605633802816902, "no_speech_prob": 3.2887132874748204e-06}, {"id": 142, "seek": 94452, "start": 948.1999999999999, "end": 954.72, "text": " sorting we need to pass in a sort parameter and the is descending parameter.", "tokens": [32411, 321, 643, 281, 1320, 294, 257, 1333, 13075, 293, 264, 307, 40182, 13075, 13], "temperature": 0.0, "avg_logprob": -0.11097616790443339, "compression_ratio": 1.7605633802816902, "no_speech_prob": 3.2887132874748204e-06}, {"id": 143, "seek": 94452, "start": 954.72, "end": 961.24, "text": " So let's try and start as simply as possible and that would be to add a", "tokens": [407, 718, 311, 853, 293, 722, 382, 2935, 382, 1944, 293, 300, 576, 312, 281, 909, 257], "temperature": 0.0, "avg_logprob": -0.11097616790443339, "compression_ratio": 1.7605633802816902, "no_speech_prob": 3.2887132874748204e-06}, {"id": 144, "seek": 94452, "start": 961.24, "end": 967.96, "text": " default search order. So let's say to start with we're going to so we're", "tokens": [7576, 3164, 1668, 13, 407, 718, 311, 584, 281, 722, 365, 321, 434, 516, 281, 370, 321, 434], "temperature": 0.0, "avg_logprob": -0.11097616790443339, "compression_ratio": 1.7605633802816902, "no_speech_prob": 3.2887132874748204e-06}, {"id": 145, "seek": 94452, "start": 967.96, "end": 972.76, "text": " obviously going to need two things in dollar scope one for the order and one", "tokens": [2745, 516, 281, 643, 732, 721, 294, 7241, 11923, 472, 337, 264, 1668, 293, 472], "temperature": 0.0, "avg_logprob": -0.11097616790443339, "compression_ratio": 1.7605633802816902, "no_speech_prob": 3.2887132874748204e-06}, {"id": 146, "seek": 97276, "start": 972.76, "end": 982.56, "text": " for the direction. So let's create order and let's by default sort by priority", "tokens": [337, 264, 3513, 13, 407, 718, 311, 1884, 1668, 293, 718, 311, 538, 7576, 1333, 538, 9365], "temperature": 0.0, "avg_logprob": -0.1920437165248541, "compression_ratio": 1.8114285714285714, "no_speech_prob": 3.3405160593247274e-06}, {"id": 147, "seek": 97276, "start": 982.56, "end": 991.04, "text": " and let's also do direction so we could say sort underscore direction actually", "tokens": [293, 718, 311, 611, 360, 3513, 370, 321, 727, 584, 1333, 37556, 3513, 767], "temperature": 0.0, "avg_logprob": -0.1920437165248541, "compression_ratio": 1.8114285714285714, "no_speech_prob": 3.3405160593247274e-06}, {"id": 148, "seek": 97276, "start": 991.04, "end": 996.0, "text": " let's call it is descending that's a bit easier since it really it's a boolean", "tokens": [718, 311, 818, 309, 307, 40182, 300, 311, 257, 857, 3571, 1670, 309, 534, 309, 311, 257, 748, 4812, 282], "temperature": 0.0, "avg_logprob": -0.1920437165248541, "compression_ratio": 1.8114285714285714, "no_speech_prob": 3.3405160593247274e-06}, {"id": 149, "seek": 97276, "start": 996.0, "end": 1002.4, "text": " isn't it. So is descending and let's use false for that so it sorts by ascending", "tokens": [1943, 380, 309, 13, 407, 307, 40182, 293, 718, 311, 764, 7908, 337, 300, 370, 309, 7527, 538, 15526, 2029], "temperature": 0.0, "avg_logprob": -0.1920437165248541, "compression_ratio": 1.8114285714285714, "no_speech_prob": 3.3405160593247274e-06}, {"id": 150, "seek": 100240, "start": 1002.4, "end": 1008.72, "text": " so lower numbers will be considered more important. I think that seems reasonable.", "tokens": [370, 3126, 3547, 486, 312, 4888, 544, 1021, 13, 286, 519, 300, 2544, 10585, 13], "temperature": 0.0, "avg_logprob": -0.1117680514300311, "compression_ratio": 1.6040609137055837, "no_speech_prob": 4.785033070220379e-06}, {"id": 151, "seek": 100240, "start": 1008.8, "end": 1015.0799999999999, "text": " So now that we've set those we're going to need to make sure that we actually", "tokens": [407, 586, 300, 321, 600, 992, 729, 321, 434, 516, 281, 643, 281, 652, 988, 300, 321, 767], "temperature": 0.0, "avg_logprob": -0.1117680514300311, "compression_ratio": 1.6040609137055837, "no_speech_prob": 4.785033070220379e-06}, {"id": 152, "seek": 100240, "start": 1015.0799999999999, "end": 1021.6, "text": " pass in these things to our web API. So at the moment we're not passing in", "tokens": [1320, 294, 613, 721, 281, 527, 3670, 9362, 13, 407, 412, 264, 1623, 321, 434, 406, 8437, 294], "temperature": 0.0, "avg_logprob": -0.1117680514300311, "compression_ratio": 1.6040609137055837, "no_speech_prob": 4.785033070220379e-06}, {"id": 153, "seek": 100240, "start": 1021.6, "end": 1028.56, "text": " anything at all. So how do we pass things into our web API? Well let's check the", "tokens": [1340, 412, 439, 13, 407, 577, 360, 321, 1320, 721, 666, 527, 3670, 9362, 30, 1042, 718, 311, 1520, 264], "temperature": 0.0, "avg_logprob": -0.1117680514300311, "compression_ratio": 1.6040609137055837, "no_speech_prob": 4.785033070220379e-06}, {"id": 154, "seek": 102856, "start": 1028.56, "end": 1036.12, "text": " Angular documentation and remember that the actual API on the client side we're", "tokens": [34107, 14333, 293, 1604, 300, 264, 3539, 9362, 322, 264, 6423, 1252, 321, 434], "temperature": 0.0, "avg_logprob": -0.08959456457607988, "compression_ratio": 1.6613756613756614, "no_speech_prob": 1.1659310985123739e-05}, {"id": 155, "seek": 102856, "start": 1036.12, "end": 1040.08, "text": " using this thing dollar resource to call it. So let's find out how dollar resource", "tokens": [1228, 341, 551, 7241, 7684, 281, 818, 309, 13, 407, 718, 311, 915, 484, 577, 7241, 7684], "temperature": 0.0, "avg_logprob": -0.08959456457607988, "compression_ratio": 1.6613756613756614, "no_speech_prob": 1.1659310985123739e-05}, {"id": 156, "seek": 102856, "start": 1040.08, "end": 1050.36, "text": " works. So if we scroll down through the dollar resource documentation we", "tokens": [1985, 13, 407, 498, 321, 11369, 760, 807, 264, 7241, 7684, 14333, 321], "temperature": 0.0, "avg_logprob": -0.08959456457607988, "compression_ratio": 1.6613756613756614, "no_speech_prob": 1.1659310985123739e-05}, {"id": 157, "seek": 102856, "start": 1050.36, "end": 1054.84, "text": " eventually get to what it returns which is something that we can call get save", "tokens": [4728, 483, 281, 437, 309, 11247, 597, 307, 746, 300, 321, 393, 818, 483, 3155], "temperature": 0.0, "avg_logprob": -0.08959456457607988, "compression_ratio": 1.6613756613756614, "no_speech_prob": 1.1659310985123739e-05}, {"id": 158, "seek": 105484, "start": 1054.84, "end": 1061.9599999999998, "text": " query etc and here we can see that for the get actions the first thing that we", "tokens": [14581, 5183, 293, 510, 321, 393, 536, 300, 337, 264, 483, 5909, 264, 700, 551, 300, 321], "temperature": 0.0, "avg_logprob": -0.09650984677401456, "compression_ratio": 1.8273809523809523, "no_speech_prob": 2.260306473544915e-06}, {"id": 159, "seek": 105484, "start": 1061.9599999999998, "end": 1065.48, "text": " can pass in is parameters and here's an example of it here a parameter name and", "tokens": [393, 1320, 294, 307, 9834, 293, 510, 311, 364, 1365, 295, 309, 510, 257, 13075, 1315, 293], "temperature": 0.0, "avg_logprob": -0.09650984677401456, "compression_ratio": 1.8273809523809523, "no_speech_prob": 2.260306473544915e-06}, {"id": 160, "seek": 105484, "start": 1065.48, "end": 1074.36, "text": " a parameter value. So in our case our parameters are sort and desk so let's", "tokens": [257, 13075, 2158, 13, 407, 294, 527, 1389, 527, 9834, 366, 1333, 293, 10026, 370, 718, 311], "temperature": 0.0, "avg_logprob": -0.09650984677401456, "compression_ratio": 1.8273809523809523, "no_speech_prob": 2.260306473544915e-06}, {"id": 161, "seek": 105484, "start": 1074.36, "end": 1083.76, "text": " pass in sort and that's going to be dollar scope dot sort order and then", "tokens": [1320, 294, 1333, 293, 300, 311, 516, 281, 312, 7241, 11923, 5893, 1333, 1668, 293, 550], "temperature": 0.0, "avg_logprob": -0.09650984677401456, "compression_ratio": 1.8273809523809523, "no_speech_prob": 2.260306473544915e-06}, {"id": 162, "seek": 108376, "start": 1083.76, "end": 1093.68, "text": " we've got desk which is going to be dollar scope dot is descending. So we've", "tokens": [321, 600, 658, 10026, 597, 307, 516, 281, 312, 7241, 11923, 5893, 307, 40182, 13, 407, 321, 600], "temperature": 0.0, "avg_logprob": -0.11303156775397223, "compression_ratio": 1.6721311475409837, "no_speech_prob": 2.9022880880802404e-06}, {"id": 163, "seek": 108376, "start": 1093.68, "end": 1099.68, "text": " set them we're calling them in the controller we are doing something with", "tokens": [992, 552, 321, 434, 5141, 552, 294, 264, 10561, 321, 366, 884, 746, 365], "temperature": 0.0, "avg_logprob": -0.11303156775397223, "compression_ratio": 1.6721311475409837, "no_speech_prob": 2.9022880880802404e-06}, {"id": 164, "seek": 108376, "start": 1099.68, "end": 1108.56, "text": " them you can see here if sort is not null or empty then we order by with the", "tokens": [552, 291, 393, 536, 510, 498, 1333, 307, 406, 18184, 420, 6707, 550, 321, 1668, 538, 365, 264], "temperature": 0.0, "avg_logprob": -0.11303156775397223, "compression_ratio": 1.6721311475409837, "no_speech_prob": 2.9022880880802404e-06}, {"id": 165, "seek": 108376, "start": 1108.56, "end": 1111.76, "text": " appropriate descending or ascending so that should be everything that we need.", "tokens": [6854, 40182, 420, 15526, 2029, 370, 300, 820, 312, 1203, 300, 321, 643, 13], "temperature": 0.0, "avg_logprob": -0.11303156775397223, "compression_ratio": 1.6721311475409837, "no_speech_prob": 2.9022880880802404e-06}, {"id": 166, "seek": 111176, "start": 1111.76, "end": 1119.6, "text": " So let's see if we now have that working. So we can see we've got a problem", "tokens": [407, 718, 311, 536, 498, 321, 586, 362, 300, 1364, 13, 407, 321, 393, 536, 321, 600, 658, 257, 1154], "temperature": 0.0, "avg_logprob": -0.0945935192562285, "compression_ratio": 1.6885245901639345, "no_speech_prob": 1.963788236025721e-06}, {"id": 167, "seek": 111176, "start": 1119.6, "end": 1125.08, "text": " desk equals undefined and sort equals undefined. So let's find out why it is", "tokens": [10026, 6915, 674, 5666, 2001, 293, 1333, 6915, 674, 5666, 2001, 13, 407, 718, 311, 915, 484, 983, 309, 307], "temperature": 0.0, "avg_logprob": -0.0945935192562285, "compression_ratio": 1.6885245901639345, "no_speech_prob": 1.963788236025721e-06}, {"id": 168, "seek": 111176, "start": 1125.08, "end": 1133.08, "text": " passing in these unhelpful things and here's the problem we're calling search", "tokens": [8437, 294, 613, 517, 37451, 906, 721, 293, 510, 311, 264, 1154, 321, 434, 5141, 3164], "temperature": 0.0, "avg_logprob": -0.0945935192562285, "compression_ratio": 1.6885245901639345, "no_speech_prob": 1.963788236025721e-06}, {"id": 169, "seek": 111176, "start": 1133.08, "end": 1140.2, "text": " before we've set them so let's move that to the bottom and really we're always", "tokens": [949, 321, 600, 992, 552, 370, 718, 311, 1286, 300, 281, 264, 2767, 293, 534, 321, 434, 1009], "temperature": 0.0, "avg_logprob": -0.0945935192562285, "compression_ratio": 1.6885245901639345, "no_speech_prob": 1.963788236025721e-06}, {"id": 170, "seek": 114020, "start": 1140.2, "end": 1148.6000000000001, "text": " going to want that at the bottom. That's great so here we've got it sorted by", "tokens": [516, 281, 528, 300, 412, 264, 2767, 13, 663, 311, 869, 370, 510, 321, 600, 658, 309, 25462, 538], "temperature": 0.0, "avg_logprob": -0.08995109069638135, "compression_ratio": 1.6145833333333333, "no_speech_prob": 1.733040789986262e-06}, {"id": 171, "seek": 114020, "start": 1148.6000000000001, "end": 1155.8, "text": " priority. So the next thing we want to do is we want to make it possible to click", "tokens": [9365, 13, 407, 264, 958, 551, 321, 528, 281, 360, 307, 321, 528, 281, 652, 309, 1944, 281, 2052], "temperature": 0.0, "avg_logprob": -0.08995109069638135, "compression_ratio": 1.6145833333333333, "no_speech_prob": 1.733040789986262e-06}, {"id": 172, "seek": 114020, "start": 1155.8, "end": 1162.24, "text": " on a header and have that change the sort order. So let's think about what", "tokens": [322, 257, 23117, 293, 362, 300, 1319, 264, 1333, 1668, 13, 407, 718, 311, 519, 466, 437], "temperature": 0.0, "avg_logprob": -0.08995109069638135, "compression_ratio": 1.6145833333333333, "no_speech_prob": 1.733040789986262e-06}, {"id": 173, "seek": 114020, "start": 1162.24, "end": 1168.28, "text": " that's going to do so we're going to have a function that the HTML template", "tokens": [300, 311, 516, 281, 360, 370, 321, 434, 516, 281, 362, 257, 2445, 300, 264, 17995, 12379], "temperature": 0.0, "avg_logprob": -0.08995109069638135, "compression_ratio": 1.6145833333333333, "no_speech_prob": 1.733040789986262e-06}, {"id": 174, "seek": 116828, "start": 1168.28, "end": 1173.28, "text": " will call and that means that that function needs to be inside dollarscope.", "tokens": [486, 818, 293, 300, 1355, 300, 300, 2445, 2203, 281, 312, 1854, 3808, 13960, 13], "temperature": 0.0, "avg_logprob": -0.10282990511725931, "compression_ratio": 1.8483412322274881, "no_speech_prob": 2.3687803150096443e-06}, {"id": 175, "seek": 116828, "start": 1173.28, "end": 1180.24, "text": " So there's going to be a function let's call it sort and it's going to take in", "tokens": [407, 456, 311, 516, 281, 312, 257, 2445, 718, 311, 818, 309, 1333, 293, 309, 311, 516, 281, 747, 294], "temperature": 0.0, "avg_logprob": -0.10282990511725931, "compression_ratio": 1.8483412322274881, "no_speech_prob": 2.3687803150096443e-06}, {"id": 176, "seek": 116828, "start": 1180.24, "end": 1185.8, "text": " the parameter which is what column do I want to sort by. Let's call that column", "tokens": [264, 13075, 597, 307, 437, 7738, 360, 286, 528, 281, 1333, 538, 13, 961, 311, 818, 300, 7738], "temperature": 0.0, "avg_logprob": -0.10282990511725931, "compression_ratio": 1.8483412322274881, "no_speech_prob": 2.3687803150096443e-06}, {"id": 177, "seek": 116828, "start": 1185.8, "end": 1192.2, "text": " and I think what we want to do is have it so if you click on it once then it", "tokens": [293, 286, 519, 437, 321, 528, 281, 360, 307, 362, 309, 370, 498, 291, 2052, 322, 309, 1564, 550, 309], "temperature": 0.0, "avg_logprob": -0.10282990511725931, "compression_ratio": 1.8483412322274881, "no_speech_prob": 2.3687803150096443e-06}, {"id": 178, "seek": 116828, "start": 1192.2, "end": 1198.2, "text": " will sort ascending and if you click on it again and again it will just change", "tokens": [486, 1333, 15526, 2029, 293, 498, 291, 2052, 322, 309, 797, 293, 797, 309, 486, 445, 1319], "temperature": 0.0, "avg_logprob": -0.10282990511725931, "compression_ratio": 1.8483412322274881, "no_speech_prob": 2.3687803150096443e-06}, {"id": 179, "seek": 119820, "start": 1198.2, "end": 1203.92, "text": " the sort again and again. For now let's just get it so it sorts ascending every", "tokens": [264, 1333, 797, 293, 797, 13, 1171, 586, 718, 311, 445, 483, 309, 370, 309, 7527, 15526, 2029, 633], "temperature": 0.0, "avg_logprob": -0.22699583991099212, "compression_ratio": 1.49645390070922, "no_speech_prob": 3.844909315375844e-06}, {"id": 180, "seek": 119820, "start": 1203.92, "end": 1215.52, "text": " time. So we're going to now go dollarscope.sortorder equals that column", "tokens": [565, 13, 407, 321, 434, 516, 281, 586, 352, 3808, 13960, 13, 82, 477, 4687, 6915, 300, 7738], "temperature": 0.0, "avg_logprob": -0.22699583991099212, "compression_ratio": 1.49645390070922, "no_speech_prob": 3.844909315375844e-06}, {"id": 181, "seek": 119820, "start": 1215.52, "end": 1222.52, "text": " and now after we sort we're going to have to recall search.", "tokens": [293, 586, 934, 321, 1333, 321, 434, 516, 281, 362, 281, 9901, 3164, 13], "temperature": 0.0, "avg_logprob": -0.22699583991099212, "compression_ratio": 1.49645390070922, "no_speech_prob": 3.844909315375844e-06}, {"id": 182, "seek": 122252, "start": 1222.52, "end": 1231.44, "text": " Okay so we've set the sort order to the thing we've been passed so now we just", "tokens": [1033, 370, 321, 600, 992, 264, 1333, 1668, 281, 264, 551, 321, 600, 668, 4678, 370, 586, 321, 445], "temperature": 0.0, "avg_logprob": -0.16166959043409004, "compression_ratio": 1.4596273291925466, "no_speech_prob": 2.9944046673335833e-06}, {"id": 183, "seek": 122252, "start": 1231.44, "end": 1237.8799999999999, "text": " need to make sure that clicking on a column will actually call this method. So", "tokens": [643, 281, 652, 988, 300, 9697, 322, 257, 7738, 486, 767, 818, 341, 3170, 13, 407], "temperature": 0.0, "avg_logprob": -0.16166959043409004, "compression_ratio": 1.4596273291925466, "no_speech_prob": 2.9944046673335833e-06}, {"id": 184, "seek": 122252, "start": 1237.8799999999999, "end": 1243.52, "text": " since it's inside dollarscope that means that we should be good to go. All we", "tokens": [1670, 309, 311, 1854, 3808, 13960, 300, 1355, 300, 321, 820, 312, 665, 281, 352, 13, 1057, 321], "temperature": 0.0, "avg_logprob": -0.16166959043409004, "compression_ratio": 1.4596273291925466, "no_speech_prob": 2.9944046673335833e-06}, {"id": 185, "seek": 124352, "start": 1243.52, "end": 1258.16, "text": " need to do is add a a tag. We don't need an href what we need is a ng click and", "tokens": [643, 281, 360, 307, 909, 257, 257, 6162, 13, 492, 500, 380, 643, 364, 276, 33115, 437, 321, 643, 307, 257, 6415, 2052, 293], "temperature": 0.0, "avg_logprob": -0.16843528373568667, "compression_ratio": 1.3859649122807018, "no_speech_prob": 1.5056941720104078e-06}, {"id": 186, "seek": 124352, "start": 1258.16, "end": 1268.32, "text": " we need to call sort. So in this case it will be sort by let's check what it's", "tokens": [321, 643, 281, 818, 1333, 13, 407, 294, 341, 1389, 309, 486, 312, 1333, 538, 718, 311, 1520, 437, 309, 311], "temperature": 0.0, "avg_logprob": -0.16843528373568667, "compression_ratio": 1.3859649122807018, "no_speech_prob": 1.5056941720104078e-06}, {"id": 187, "seek": 126832, "start": 1268.32, "end": 1279.36, "text": " called before I type that. Sort by text. Okay so the first column is called text", "tokens": [1219, 949, 286, 2010, 300, 13, 26149, 538, 2487, 13, 1033, 370, 264, 700, 7738, 307, 1219, 2487], "temperature": 0.0, "avg_logprob": -0.15085813858929803, "compression_ratio": 1.5634517766497462, "no_speech_prob": 5.093658273835899e-06}, {"id": 188, "seek": 126832, "start": 1279.36, "end": 1282.3999999999999, "text": " well of course I could have seen that down here easily enough couldn't I?", "tokens": [731, 295, 1164, 286, 727, 362, 1612, 300, 760, 510, 3612, 1547, 2809, 380, 286, 30], "temperature": 0.0, "avg_logprob": -0.15085813858929803, "compression_ratio": 1.5634517766497462, "no_speech_prob": 5.093658273835899e-06}, {"id": 189, "seek": 126832, "start": 1282.3999999999999, "end": 1291.12, "text": " Anyway that's fine. So sort by text. So let's now refresh this we can see this", "tokens": [5684, 300, 311, 2489, 13, 407, 1333, 538, 2487, 13, 407, 718, 311, 586, 15134, 341, 321, 393, 536, 341], "temperature": 0.0, "avg_logprob": -0.15085813858929803, "compression_ratio": 1.5634517766497462, "no_speech_prob": 5.093658273835899e-06}, {"id": 190, "seek": 126832, "start": 1291.12, "end": 1296.3999999999999, "text": " is now hyperlinked. Let's try clicking it. Oh and we can now see that it's", "tokens": [307, 586, 9848, 22473, 292, 13, 961, 311, 853, 9697, 309, 13, 876, 293, 321, 393, 586, 536, 300, 309, 311], "temperature": 0.0, "avg_logprob": -0.15085813858929803, "compression_ratio": 1.5634517766497462, "no_speech_prob": 5.093658273835899e-06}, {"id": 191, "seek": 129640, "start": 1296.4, "end": 1300.72, "text": " sorting. It's sorting in a slightly strange order just because I filled it", "tokens": [32411, 13, 467, 311, 32411, 294, 257, 4748, 5861, 1668, 445, 570, 286, 6412, 309], "temperature": 0.0, "avg_logprob": -0.11002590717413487, "compression_ratio": 1.5477386934673367, "no_speech_prob": 6.540376034536166e-06}, {"id": 192, "seek": 129640, "start": 1300.72, "end": 1305.3600000000001, "text": " with numbers but normally we would have text in here not numbers this is", "tokens": [365, 3547, 457, 5646, 321, 576, 362, 2487, 294, 510, 406, 3547, 341, 307], "temperature": 0.0, "avg_logprob": -0.11002590717413487, "compression_ratio": 1.5477386934673367, "no_speech_prob": 6.540376034536166e-06}, {"id": 193, "seek": 129640, "start": 1305.3600000000001, "end": 1310.3200000000002, "text": " actually meant to be the description of the to do. So each time I click on it I", "tokens": [767, 4140, 281, 312, 264, 3855, 295, 264, 281, 360, 13, 407, 1184, 565, 286, 2052, 322, 309, 286], "temperature": 0.0, "avg_logprob": -0.11002590717413487, "compression_ratio": 1.5477386934673367, "no_speech_prob": 6.540376034536166e-06}, {"id": 194, "seek": 129640, "start": 1310.3200000000002, "end": 1321.0400000000002, "text": " wanted to change order so let's do that. So in other words what I'm saying is if", "tokens": [1415, 281, 1319, 1668, 370, 718, 311, 360, 300, 13, 407, 294, 661, 2283, 437, 286, 478, 1566, 307, 498], "temperature": 0.0, "avg_logprob": -0.11002590717413487, "compression_ratio": 1.5477386934673367, "no_speech_prob": 6.540376034536166e-06}, {"id": 195, "seek": 132104, "start": 1321.04, "end": 1328.0, "text": " these two are already exactly the same then what I want to do is simply change", "tokens": [613, 732, 366, 1217, 2293, 264, 912, 550, 437, 286, 528, 281, 360, 307, 2935, 1319], "temperature": 0.0, "avg_logprob": -0.12643232861080686, "compression_ratio": 1.3628318584070795, "no_speech_prob": 4.3568393266468775e-06}, {"id": 196, "seek": 132104, "start": 1328.0, "end": 1343.48, "text": " the direction. So to change the direction let's just reverse is descending.", "tokens": [264, 3513, 13, 407, 281, 1319, 264, 3513, 718, 311, 445, 9943, 307, 40182, 13], "temperature": 0.0, "avg_logprob": -0.12643232861080686, "compression_ratio": 1.3628318584070795, "no_speech_prob": 4.3568393266468775e-06}, {"id": 197, "seek": 134348, "start": 1343.48, "end": 1358.2, "text": " Otherwise let's set the sort order and set the direction to being ascending.", "tokens": [10328, 718, 311, 992, 264, 1333, 1668, 293, 992, 264, 3513, 281, 885, 15526, 2029, 13], "temperature": 0.0, "avg_logprob": -0.16208565619684034, "compression_ratio": 1.587837837837838, "no_speech_prob": 3.3930894005607115e-06}, {"id": 198, "seek": 134348, "start": 1360.2, "end": 1369.04, "text": " Let's try that. So the first time I click it yep and the second time yep that's", "tokens": [961, 311, 853, 300, 13, 407, 264, 700, 565, 286, 2052, 309, 18633, 293, 264, 1150, 565, 18633, 300, 311], "temperature": 0.0, "avg_logprob": -0.16208565619684034, "compression_ratio": 1.587837837837838, "no_speech_prob": 3.3930894005607115e-06}, {"id": 199, "seek": 134348, "start": 1369.04, "end": 1373.1200000000001, "text": " great. Okay so that's doing everything I want there. So the only other thing I", "tokens": [869, 13, 1033, 370, 300, 311, 884, 1203, 286, 528, 456, 13, 407, 264, 787, 661, 551, 286], "temperature": 0.0, "avg_logprob": -0.16208565619684034, "compression_ratio": 1.587837837837838, "no_speech_prob": 3.3930894005607115e-06}, {"id": 200, "seek": 137312, "start": 1373.12, "end": 1377.52, "text": " might do is to make it so that a little icon will appear telling me which", "tokens": [1062, 360, 307, 281, 652, 309, 370, 300, 257, 707, 6528, 486, 4204, 3585, 385, 597], "temperature": 0.0, "avg_logprob": -0.05426466906512225, "compression_ratio": 1.5846153846153845, "no_speech_prob": 5.77184164285427e-06}, {"id": 201, "seek": 137312, "start": 1377.52, "end": 1384.9199999999998, "text": " direction I am sorting in. So icons are rather conveniently available inside", "tokens": [3513, 286, 669, 32411, 294, 13, 407, 23308, 366, 2831, 44375, 2435, 1854], "temperature": 0.0, "avg_logprob": -0.05426466906512225, "compression_ratio": 1.5846153846153845, "no_speech_prob": 5.77184164285427e-06}, {"id": 202, "seek": 137312, "start": 1384.9199999999998, "end": 1391.9199999999998, "text": " Bootstrap. So let's start by finding an icon that we like. So to show icons in", "tokens": [37263, 372, 4007, 13, 407, 718, 311, 722, 538, 5006, 364, 6528, 300, 321, 411, 13, 407, 281, 855, 23308, 294], "temperature": 0.0, "avg_logprob": -0.05426466906512225, "compression_ratio": 1.5846153846153845, "no_speech_prob": 5.77184164285427e-06}, {"id": 203, "seek": 137312, "start": 1391.9199999999998, "end": 1401.3999999999999, "text": " Bootstrap you simply use the I tag and you give it a class of icon and so we're", "tokens": [37263, 372, 4007, 291, 2935, 764, 264, 286, 6162, 293, 291, 976, 309, 257, 1508, 295, 6528, 293, 370, 321, 434], "temperature": 0.0, "avg_logprob": -0.05426466906512225, "compression_ratio": 1.5846153846153845, "no_speech_prob": 5.77184164285427e-06}, {"id": 204, "seek": 140140, "start": 1401.4, "end": 1412.48, "text": " going to have to have a arrow down and we're also going to have an arrow up.", "tokens": [516, 281, 362, 281, 362, 257, 11610, 760, 293, 321, 434, 611, 516, 281, 362, 364, 11610, 493, 13], "temperature": 0.0, "avg_logprob": -0.10349366634706908, "compression_ratio": 1.95625, "no_speech_prob": 1.1726383490895387e-06}, {"id": 205, "seek": 140140, "start": 1412.48, "end": 1418.5600000000002, "text": " Now we need to display these depending on whether or not something happens. So", "tokens": [823, 321, 643, 281, 4674, 613, 5413, 322, 1968, 420, 406, 746, 2314, 13, 407], "temperature": 0.0, "avg_logprob": -0.10349366634706908, "compression_ratio": 1.95625, "no_speech_prob": 1.1726383490895387e-06}, {"id": 206, "seek": 140140, "start": 1418.5600000000002, "end": 1425.8000000000002, "text": " we're going to have to wrap them in a span and we're going to display them or", "tokens": [321, 434, 516, 281, 362, 281, 7019, 552, 294, 257, 16174, 293, 321, 434, 516, 281, 4674, 552, 420], "temperature": 0.0, "avg_logprob": -0.10349366634706908, "compression_ratio": 1.95625, "no_speech_prob": 1.1726383490895387e-06}, {"id": 207, "seek": 140140, "start": 1425.8000000000002, "end": 1429.22, "text": " not depending on whether something is true or not inside dollar scope. So to do", "tokens": [406, 5413, 322, 1968, 746, 307, 2074, 420, 406, 1854, 7241, 11923, 13, 407, 281, 360], "temperature": 0.0, "avg_logprob": -0.10349366634706908, "compression_ratio": 1.95625, "no_speech_prob": 1.1726383490895387e-06}, {"id": 208, "seek": 142922, "start": 1429.22, "end": 1434.56, "text": " that we use ng-show and that simply takes an expression that will evaluate", "tokens": [300, 321, 764, 6415, 12, 34436, 293, 300, 2935, 2516, 364, 6114, 300, 486, 13059], "temperature": 0.0, "avg_logprob": -0.17247903637769746, "compression_ratio": 1.3508771929824561, "no_speech_prob": 1.1544552762643434e-06}, {"id": 209, "seek": 142922, "start": 1434.56, "end": 1444.48, "text": " to true or false. So in this case we will show this if let's have a think about", "tokens": [281, 2074, 420, 7908, 13, 407, 294, 341, 1389, 321, 486, 855, 341, 498, 718, 311, 362, 257, 519, 466], "temperature": 0.0, "avg_logprob": -0.17247903637769746, "compression_ratio": 1.3508771929824561, "no_speech_prob": 1.1544552762643434e-06}, {"id": 210, "seek": 144448, "start": 1444.48, "end": 1466.28, "text": " that. So we'll show that if sort order is to do and also sort is descending and", "tokens": [300, 13, 407, 321, 603, 855, 300, 498, 1333, 1668, 307, 281, 360, 293, 611, 1333, 307, 40182, 293], "temperature": 0.0, "avg_logprob": -0.27289042265518854, "compression_ratio": 1.0972222222222223, "no_speech_prob": 6.339164883684134e-06}, {"id": 211, "seek": 146628, "start": 1466.28, "end": 1474.96, "text": " since this is down that would be true and we have basically the same thing for", "tokens": [1670, 341, 307, 760, 300, 576, 312, 2074, 293, 321, 362, 1936, 264, 912, 551, 337], "temperature": 0.0, "avg_logprob": -0.14990577363131338, "compression_ratio": 1.4901960784313726, "no_speech_prob": 1.9333444924996e-06}, {"id": 212, "seek": 146628, "start": 1474.96, "end": 1490.68, "text": " the other one except of course this now becomes false. So let's try that. So", "tokens": [264, 661, 472, 3993, 295, 1164, 341, 586, 3643, 7908, 13, 407, 718, 311, 853, 300, 13, 407], "temperature": 0.0, "avg_logprob": -0.14990577363131338, "compression_ratio": 1.4901960784313726, "no_speech_prob": 1.9333444924996e-06}, {"id": 213, "seek": 146628, "start": 1490.68, "end": 1495.72, "text": " currently there's no icon showing because we're not sorting by to do and", "tokens": [4362, 456, 311, 572, 6528, 4099, 570, 321, 434, 406, 32411, 538, 281, 360, 293], "temperature": 0.0, "avg_logprob": -0.14990577363131338, "compression_ratio": 1.4901960784313726, "no_speech_prob": 1.9333444924996e-06}, {"id": 214, "seek": 149572, "start": 1495.72, "end": 1500.52, "text": " now that I've clicked on it oh it's still not showing. Let's try and figure", "tokens": [586, 300, 286, 600, 23370, 322, 309, 1954, 309, 311, 920, 406, 4099, 13, 961, 311, 853, 293, 2573], "temperature": 0.0, "avg_logprob": -0.1599806547164917, "compression_ratio": 1.6282722513089005, "no_speech_prob": 1.2029430763504934e-05}, {"id": 215, "seek": 149572, "start": 1500.52, "end": 1507.8, "text": " out why. Oh because of course it's not called to do is it it's called text. Let's", "tokens": [484, 983, 13, 876, 570, 295, 1164, 309, 311, 406, 1219, 281, 360, 307, 309, 309, 311, 1219, 2487, 13, 961, 311], "temperature": 0.0, "avg_logprob": -0.1599806547164917, "compression_ratio": 1.6282722513089005, "no_speech_prob": 1.2029430763504934e-05}, {"id": 216, "seek": 149572, "start": 1507.8, "end": 1515.96, "text": " try it now. Okay so the first time I click and then there we go the second", "tokens": [853, 309, 586, 13, 1033, 370, 264, 700, 565, 286, 2052, 293, 550, 456, 321, 352, 264, 1150], "temperature": 0.0, "avg_logprob": -0.1599806547164917, "compression_ratio": 1.6282722513089005, "no_speech_prob": 1.2029430763504934e-05}, {"id": 217, "seek": 149572, "start": 1515.96, "end": 1522.64, "text": " time I click that's great. So we can now use that for in fact we can basically", "tokens": [565, 286, 2052, 300, 311, 869, 13, 407, 321, 393, 586, 764, 300, 337, 294, 1186, 321, 393, 1936], "temperature": 0.0, "avg_logprob": -0.1599806547164917, "compression_ratio": 1.6282722513089005, "no_speech_prob": 1.2029430763504934e-05}, {"id": 218, "seek": 152264, "start": 1522.64, "end": 1530.4, "text": " use that whole thing for each one of our column headers. So this one's going to be", "tokens": [764, 300, 1379, 551, 337, 1184, 472, 295, 527, 7738, 45101, 13, 407, 341, 472, 311, 516, 281, 312], "temperature": 0.0, "avg_logprob": -0.29957377910614014, "compression_ratio": 1.3398058252427185, "no_speech_prob": 2.482464424247155e-06}, {"id": 219, "seek": 152264, "start": 1530.4, "end": 1532.8400000000001, "text": " priority", "tokens": [9365], "temperature": 0.0, "avg_logprob": -0.29957377910614014, "compression_ratio": 1.3398058252427185, "no_speech_prob": 2.482464424247155e-06}, {"id": 220, "seek": 152264, "start": 1537.88, "end": 1543.0400000000002, "text": " and then the last one is going to be due date.", "tokens": [293, 550, 264, 1036, 472, 307, 516, 281, 312, 3462, 4002, 13], "temperature": 0.0, "avg_logprob": -0.29957377910614014, "compression_ratio": 1.3398058252427185, "no_speech_prob": 2.482464424247155e-06}, {"id": 221, "seek": 154304, "start": 1543.04, "end": 1555.84, "text": " There we go. So hopefully what you're thinking at this point is that seems", "tokens": [821, 321, 352, 13, 407, 4696, 437, 291, 434, 1953, 412, 341, 935, 307, 300, 2544], "temperature": 0.0, "avg_logprob": -0.0930476606937877, "compression_ratio": 1.453416149068323, "no_speech_prob": 2.4060718715190887e-06}, {"id": 222, "seek": 154304, "start": 1555.84, "end": 1560.6399999999999, "text": " like a whole bunch of duplicate code and you would be right. So what I've actually", "tokens": [411, 257, 1379, 3840, 295, 23976, 3089, 293, 291, 576, 312, 558, 13, 407, 437, 286, 600, 767], "temperature": 0.0, "avg_logprob": -0.0930476606937877, "compression_ratio": 1.453416149068323, "no_speech_prob": 2.4060718715190887e-06}, {"id": 223, "seek": 154304, "start": 1560.6399999999999, "end": 1568.2, "text": " done in the written version of this tutorial is I've shown a directive which", "tokens": [1096, 294, 264, 3720, 3037, 295, 341, 7073, 307, 286, 600, 4898, 257, 45444, 597], "temperature": 0.0, "avg_logprob": -0.0930476606937877, "compression_ratio": 1.453416149068323, "no_speech_prob": 2.4060718715190887e-06}, {"id": 224, "seek": 156820, "start": 1568.2, "end": 1573.96, "text": " automates all of that. We're not going to write it now but let's just take a look", "tokens": [3553, 1024, 439, 295, 300, 13, 492, 434, 406, 516, 281, 2464, 309, 586, 457, 718, 311, 445, 747, 257, 574], "temperature": 0.0, "avg_logprob": -0.09652681061715791, "compression_ratio": 1.6652360515021458, "no_speech_prob": 7.646402991667856e-06}, {"id": 225, "seek": 156820, "start": 1573.96, "end": 1579.4, "text": " at it and then you can try this for yourself. So you can see we've done", "tokens": [412, 309, 293, 550, 291, 393, 853, 341, 337, 1803, 13, 407, 291, 393, 536, 321, 600, 1096], "temperature": 0.0, "avg_logprob": -0.09652681061715791, "compression_ratio": 1.6652360515021458, "no_speech_prob": 7.646402991667856e-06}, {"id": 226, "seek": 156820, "start": 1579.4, "end": 1583.2, "text": " basically what we had last time which is we had a template which does all that", "tokens": [1936, 437, 321, 632, 1036, 565, 597, 307, 321, 632, 257, 12379, 597, 775, 439, 300], "temperature": 0.0, "avg_logprob": -0.09652681061715791, "compression_ratio": 1.6652360515021458, "no_speech_prob": 7.646402991667856e-06}, {"id": 227, "seek": 156820, "start": 1583.2, "end": 1588.0800000000002, "text": " stuff and in this case they've also pulled out the logic around whether to", "tokens": [1507, 293, 294, 341, 1389, 436, 600, 611, 7373, 484, 264, 9952, 926, 1968, 281], "temperature": 0.0, "avg_logprob": -0.09652681061715791, "compression_ratio": 1.6652360515021458, "no_speech_prob": 7.646402991667856e-06}, {"id": 228, "seek": 156820, "start": 1588.0800000000002, "end": 1594.52, "text": " show or not into a scope method and then in the controller we define do sort and", "tokens": [855, 420, 406, 666, 257, 11923, 3170, 293, 550, 294, 264, 10561, 321, 6964, 360, 1333, 293], "temperature": 0.0, "avg_logprob": -0.09652681061715791, "compression_ratio": 1.6652360515021458, "no_speech_prob": 7.646402991667856e-06}, {"id": 229, "seek": 159452, "start": 1594.52, "end": 1599.4, "text": " do show. So it's really pretty straightforward to turn that into a", "tokens": [360, 855, 13, 407, 309, 311, 534, 1238, 15325, 281, 1261, 300, 666, 257], "temperature": 0.0, "avg_logprob": -0.0976337784702338, "compression_ratio": 1.6609442060085837, "no_speech_prob": 4.222790721541969e-06}, {"id": 230, "seek": 159452, "start": 1599.4, "end": 1604.4, "text": " directive. In order to save us all some time I won't do that now and have you", "tokens": [45444, 13, 682, 1668, 281, 3155, 505, 439, 512, 565, 286, 1582, 380, 360, 300, 586, 293, 362, 291], "temperature": 0.0, "avg_logprob": -0.0976337784702338, "compression_ratio": 1.6609442060085837, "no_speech_prob": 4.222790721541969e-06}, {"id": 231, "seek": 159452, "start": 1604.4, "end": 1609.24, "text": " watch me but I'd love for you to see you try it for yourself. So I've just refreshed", "tokens": [1159, 385, 457, 286, 1116, 959, 337, 291, 281, 536, 291, 853, 309, 337, 1803, 13, 407, 286, 600, 445, 46330], "temperature": 0.0, "avg_logprob": -0.0976337784702338, "compression_ratio": 1.6609442060085837, "no_speech_prob": 4.222790721541969e-06}, {"id": 232, "seek": 159452, "start": 1609.24, "end": 1614.28, "text": " we can now see this is showing correctly that's very good and if we click it", "tokens": [321, 393, 586, 536, 341, 307, 4099, 8944, 300, 311, 588, 665, 293, 498, 321, 2052, 309], "temperature": 0.0, "avg_logprob": -0.0976337784702338, "compression_ratio": 1.6609442060085837, "no_speech_prob": 4.222790721541969e-06}, {"id": 233, "seek": 159452, "start": 1614.28, "end": 1620.2, "text": " twice. So one of the nice things here is I love the way even when I refresh so I", "tokens": [6091, 13, 407, 472, 295, 264, 1481, 721, 510, 307, 286, 959, 264, 636, 754, 562, 286, 15134, 370, 286], "temperature": 0.0, "avg_logprob": -0.0976337784702338, "compression_ratio": 1.6609442060085837, "no_speech_prob": 4.222790721541969e-06}, {"id": 234, "seek": 162020, "start": 1620.2, "end": 1624.52, "text": " haven't clicked anything and my default sort order is priority. Angular has", "tokens": [2378, 380, 23370, 1340, 293, 452, 7576, 1333, 1668, 307, 9365, 13, 34107, 575], "temperature": 0.0, "avg_logprob": -0.0995955654219085, "compression_ratio": 1.754863813229572, "no_speech_prob": 6.6432789935788605e-06}, {"id": 235, "seek": 162020, "start": 1624.52, "end": 1629.24, "text": " automatically figured out that it needs to put this arrow here because this ng", "tokens": [6772, 8932, 484, 300, 309, 2203, 281, 829, 341, 11610, 510, 570, 341, 6415], "temperature": 0.0, "avg_logprob": -0.0995955654219085, "compression_ratio": 1.754863813229572, "no_speech_prob": 6.6432789935788605e-06}, {"id": 236, "seek": 162020, "start": 1629.24, "end": 1633.8, "text": " show directive it's automatically figured out when it has to check that. So", "tokens": [855, 45444, 309, 311, 6772, 8932, 484, 562, 309, 575, 281, 1520, 300, 13, 407], "temperature": 0.0, "avg_logprob": -0.0995955654219085, "compression_ratio": 1.754863813229572, "no_speech_prob": 6.6432789935788605e-06}, {"id": 237, "seek": 162020, "start": 1633.8, "end": 1637.72, "text": " all this kind of dependency management around when do you have to test for the", "tokens": [439, 341, 733, 295, 33621, 4592, 926, 562, 360, 291, 362, 281, 1500, 337, 264], "temperature": 0.0, "avg_logprob": -0.0995955654219085, "compression_ratio": 1.754863813229572, "no_speech_prob": 6.6432789935788605e-06}, {"id": 238, "seek": 162020, "start": 1637.72, "end": 1641.0, "text": " truth of things or when do you need to run the things it's all handled", "tokens": [3494, 295, 721, 420, 562, 360, 291, 643, 281, 1190, 264, 721, 309, 311, 439, 18033], "temperature": 0.0, "avg_logprob": -0.0995955654219085, "compression_ratio": 1.754863813229572, "no_speech_prob": 6.6432789935788605e-06}, {"id": 239, "seek": 162020, "start": 1641.0, "end": 1646.8400000000001, "text": " automatically and that's certainly something that I look for in an MVC", "tokens": [6772, 293, 300, 311, 3297, 746, 300, 286, 574, 337, 294, 364, 17663, 34], "temperature": 0.0, "avg_logprob": -0.0995955654219085, "compression_ratio": 1.754863813229572, "no_speech_prob": 6.6432789935788605e-06}, {"id": 240, "seek": 164684, "start": 1646.84, "end": 1654.1599999999999, "text": " framework and Angular does that really nicely. Great so we have sorting working", "tokens": [8388, 293, 34107, 775, 300, 534, 9594, 13, 3769, 370, 321, 362, 32411, 1364], "temperature": 0.0, "avg_logprob": -0.11225695487780449, "compression_ratio": 1.6051282051282052, "no_speech_prob": 2.1567918793152785e-06}, {"id": 241, "seek": 164684, "start": 1654.1599999999999, "end": 1661.8799999999999, "text": " what should we do next? I think for our next thing we might do pagination. So", "tokens": [437, 820, 321, 360, 958, 30, 286, 519, 337, 527, 958, 551, 321, 1062, 360, 11812, 2486, 13, 407], "temperature": 0.0, "avg_logprob": -0.11225695487780449, "compression_ratio": 1.6051282051282052, "no_speech_prob": 2.1567918793152785e-06}, {"id": 242, "seek": 164684, "start": 1661.8799999999999, "end": 1670.8, "text": " pagination we need to have an offset and a limit and each time we get more we're", "tokens": [11812, 2486, 321, 643, 281, 362, 364, 18687, 293, 257, 4948, 293, 1184, 565, 321, 483, 544, 321, 434], "temperature": 0.0, "avg_logprob": -0.11225695487780449, "compression_ratio": 1.6051282051282052, "no_speech_prob": 2.1567918793152785e-06}, {"id": 243, "seek": 164684, "start": 1670.8, "end": 1676.4399999999998, "text": " going to have to append it to our previous list. I should mention the kind", "tokens": [516, 281, 362, 281, 34116, 309, 281, 527, 3894, 1329, 13, 286, 820, 2152, 264, 733], "temperature": 0.0, "avg_logprob": -0.11225695487780449, "compression_ratio": 1.6051282051282052, "no_speech_prob": 2.1567918793152785e-06}, {"id": 244, "seek": 167644, "start": 1676.44, "end": 1681.24, "text": " of pagination I'm doing here I'm not going to do that old-fashioned style of", "tokens": [295, 11812, 2486, 286, 478, 884, 510, 286, 478, 406, 516, 281, 360, 300, 1331, 12, 37998, 3758, 295], "temperature": 0.0, "avg_logprob": -0.07977933282250757, "compression_ratio": 1.741444866920152, "no_speech_prob": 7.071783329593018e-06}, {"id": 245, "seek": 167644, "start": 1681.24, "end": 1685.1200000000001, "text": " pagination where you get a whole list of pages at the bottom from like one to a", "tokens": [11812, 2486, 689, 291, 483, 257, 1379, 1329, 295, 7183, 412, 264, 2767, 490, 411, 472, 281, 257], "temperature": 0.0, "avg_logprob": -0.07977933282250757, "compression_ratio": 1.741444866920152, "no_speech_prob": 7.071783329593018e-06}, {"id": 246, "seek": 167644, "start": 1685.1200000000001, "end": 1689.44, "text": " hundred and you click which page you want. I much prefer the approach to", "tokens": [3262, 293, 291, 2052, 597, 3028, 291, 528, 13, 286, 709, 4382, 264, 3109, 281], "temperature": 0.0, "avg_logprob": -0.07977933282250757, "compression_ratio": 1.741444866920152, "no_speech_prob": 7.071783329593018e-06}, {"id": 247, "seek": 167644, "start": 1689.44, "end": 1694.96, "text": " pagination which is you can basically ask for more items to be shown. This is", "tokens": [11812, 2486, 597, 307, 291, 393, 1936, 1029, 337, 544, 4754, 281, 312, 4898, 13, 639, 307], "temperature": 0.0, "avg_logprob": -0.07977933282250757, "compression_ratio": 1.741444866920152, "no_speech_prob": 7.071783329593018e-06}, {"id": 248, "seek": 167644, "start": 1694.96, "end": 1699.72, "text": " done for example in infinite scroll type frameworks where as you get to the", "tokens": [1096, 337, 1365, 294, 13785, 11369, 2010, 29834, 689, 382, 291, 483, 281, 264], "temperature": 0.0, "avg_logprob": -0.07977933282250757, "compression_ratio": 1.741444866920152, "no_speech_prob": 7.071783329593018e-06}, {"id": 249, "seek": 167644, "start": 1699.72, "end": 1703.92, "text": " bottom it automatically loads more or else there could just be a hyperlink", "tokens": [2767, 309, 6772, 12668, 544, 420, 1646, 456, 727, 445, 312, 257, 9848, 22473], "temperature": 0.0, "avg_logprob": -0.07977933282250757, "compression_ratio": 1.741444866920152, "no_speech_prob": 7.071783329593018e-06}, {"id": 250, "seek": 170392, "start": 1703.92, "end": 1709.16, "text": " which asks to show more. I'm going to use the hyperlink approach for now just", "tokens": [597, 8962, 281, 855, 544, 13, 286, 478, 516, 281, 764, 264, 9848, 22473, 3109, 337, 586, 445], "temperature": 0.0, "avg_logprob": -0.10910312212430513, "compression_ratio": 1.5906040268456376, "no_speech_prob": 3.237719283788465e-06}, {"id": 251, "seek": 170392, "start": 1709.16, "end": 1713.04, "text": " because it's going to be a little bit easier to explain. So let's put a hyperlink", "tokens": [570, 309, 311, 516, 281, 312, 257, 707, 857, 3571, 281, 2903, 13, 407, 718, 311, 829, 257, 9848, 22473], "temperature": 0.0, "avg_logprob": -0.10910312212430513, "compression_ratio": 1.5906040268456376, "no_speech_prob": 3.237719283788465e-06}, {"id": 252, "seek": 170392, "start": 1713.04, "end": 1726.3200000000002, "text": " at the bottom and so again we're going to have a ng click and that's going to", "tokens": [412, 264, 2767, 293, 370, 797, 321, 434, 516, 281, 362, 257, 6415, 2052, 293, 300, 311, 516, 281], "temperature": 0.0, "avg_logprob": -0.10910312212430513, "compression_ratio": 1.5906040268456376, "no_speech_prob": 3.237719283788465e-06}, {"id": 253, "seek": 172632, "start": 1726.32, "end": 1737.2, "text": " do a show more. Now we need to write that of course and then some text for it.", "tokens": [360, 257, 855, 544, 13, 823, 321, 643, 281, 2464, 300, 295, 1164, 293, 550, 512, 2487, 337, 309, 13], "temperature": 0.0, "avg_logprob": -0.21711914797863327, "compression_ratio": 1.6702702702702703, "no_speech_prob": 4.222800271236338e-06}, {"id": 254, "seek": 172632, "start": 1737.84, "end": 1746.48, "text": " Equal sign there of course. Great so we've got a something to click on that's", "tokens": [15624, 304, 1465, 456, 295, 1164, 13, 3769, 370, 321, 600, 658, 257, 746, 281, 2052, 322, 300, 311], "temperature": 0.0, "avg_logprob": -0.21711914797863327, "compression_ratio": 1.6702702702702703, "no_speech_prob": 4.222800271236338e-06}, {"id": 255, "seek": 172632, "start": 1746.48, "end": 1750.0, "text": " basically all we need to do on the template side we need to now create this", "tokens": [1936, 439, 321, 643, 281, 360, 322, 264, 12379, 1252, 321, 643, 281, 586, 1884, 341], "temperature": 0.0, "avg_logprob": -0.21711914797863327, "compression_ratio": 1.6702702702702703, "no_speech_prob": 4.222800271236338e-06}, {"id": 256, "seek": 172632, "start": 1750.0, "end": 1755.6, "text": " show more. So if you think about it logically what is show more going to do?", "tokens": [855, 544, 13, 407, 498, 291, 519, 466, 309, 38887, 437, 307, 855, 544, 516, 281, 360, 30], "temperature": 0.0, "avg_logprob": -0.21711914797863327, "compression_ratio": 1.6702702702702703, "no_speech_prob": 4.222800271236338e-06}, {"id": 257, "seek": 175560, "start": 1755.6, "end": 1761.9199999999998, "text": " It is going to be such that each time you click on it it's going to load", "tokens": [467, 307, 516, 281, 312, 1270, 300, 1184, 565, 291, 2052, 322, 309, 309, 311, 516, 281, 3677], "temperature": 0.0, "avg_logprob": -0.15967481564252806, "compression_ratio": 1.6, "no_speech_prob": 6.6432789935788605e-06}, {"id": 258, "seek": 175560, "start": 1761.9199999999998, "end": 1770.4399999999998, "text": " another however many let's say 20 another 20 things out of our JSON API and", "tokens": [1071, 4461, 867, 718, 311, 584, 945, 1071, 945, 721, 484, 295, 527, 31828, 9362, 293], "temperature": 0.0, "avg_logprob": -0.15967481564252806, "compression_ratio": 1.6, "no_speech_prob": 6.6432789935788605e-06}, {"id": 259, "seek": 175560, "start": 1770.4399999999998, "end": 1775.9599999999998, "text": " going to append them to whatever is already displayed. So whatever is already", "tokens": [516, 281, 34116, 552, 281, 2035, 307, 1217, 16372, 13, 407, 2035, 307, 1217], "temperature": 0.0, "avg_logprob": -0.15967481564252806, "compression_ratio": 1.6, "no_speech_prob": 6.6432789935788605e-06}, {"id": 260, "seek": 175560, "start": 1775.9599999999998, "end": 1783.3999999999999, "text": " displayed is called $scope.items. Now again let's put some some defaults here", "tokens": [16372, 307, 1219, 1848, 4417, 1114, 13, 270, 9097, 13, 823, 797, 718, 311, 829, 512, 512, 7576, 82, 510], "temperature": 0.0, "avg_logprob": -0.15967481564252806, "compression_ratio": 1.6, "no_speech_prob": 6.6432789935788605e-06}, {"id": 261, "seek": 178340, "start": 1783.4, "end": 1793.48, "text": " so the how many things to load at a time. Oopsie-daisy let's call it limit. Let's say", "tokens": [370, 264, 577, 867, 721, 281, 3677, 412, 257, 565, 13, 21726, 414, 12, 67, 1527, 88, 718, 311, 818, 309, 4948, 13, 961, 311, 584], "temperature": 0.0, "avg_logprob": -0.2561225128173828, "compression_ratio": 1.304, "no_speech_prob": 3.8070044183768914e-07}, {"id": 262, "seek": 178340, "start": 1793.48, "end": 1804.2800000000002, "text": " 20 okay and then we have what's the offset to start with now of course that's", "tokens": [945, 1392, 293, 550, 321, 362, 437, 311, 264, 18687, 281, 722, 365, 586, 295, 1164, 300, 311], "temperature": 0.0, "avg_logprob": -0.2561225128173828, "compression_ratio": 1.304, "no_speech_prob": 3.8070044183768914e-07}, {"id": 263, "seek": 180428, "start": 1804.28, "end": 1813.72, "text": " going to be zero. So we now need to create our show more method and so let's", "tokens": [516, 281, 312, 4018, 13, 407, 321, 586, 643, 281, 1884, 527, 855, 544, 3170, 293, 370, 718, 311], "temperature": 0.0, "avg_logprob": -0.15560906893247134, "compression_ratio": 1.511111111111111, "no_speech_prob": 6.179375304782297e-07}, {"id": 264, "seek": 180428, "start": 1813.72, "end": 1817.24, "text": " do that. Now because we're calling it from the template that means it needs to", "tokens": [360, 300, 13, 823, 570, 321, 434, 5141, 309, 490, 264, 12379, 300, 1355, 309, 2203, 281], "temperature": 0.0, "avg_logprob": -0.15560906893247134, "compression_ratio": 1.511111111111111, "no_speech_prob": 6.179375304782297e-07}, {"id": 265, "seek": 180428, "start": 1817.24, "end": 1823.8, "text": " be inside $scope. So $scope.showMore", "tokens": [312, 1854, 1848, 4417, 1114, 13, 407, 1848, 4417, 1114, 13, 34436, 33986], "temperature": 0.0, "avg_logprob": -0.15560906893247134, "compression_ratio": 1.511111111111111, "no_speech_prob": 6.179375304782297e-07}, {"id": 266, "seek": 180428, "start": 1824.84, "end": 1833.48, "text": " doesn't have any parameters so what do we want to do here? Basically we want to", "tokens": [1177, 380, 362, 604, 9834, 370, 437, 360, 321, 528, 281, 360, 510, 30, 8537, 321, 528, 281], "temperature": 0.0, "avg_logprob": -0.15560906893247134, "compression_ratio": 1.511111111111111, "no_speech_prob": 6.179375304782297e-07}, {"id": 267, "seek": 183348, "start": 1833.48, "end": 1845.32, "text": " go the offset should be equal to whatever it was before plus another 20", "tokens": [352, 264, 18687, 820, 312, 2681, 281, 2035, 309, 390, 949, 1804, 1071, 945], "temperature": 0.0, "avg_logprob": -0.1944262981414795, "compression_ratio": 1.3571428571428572, "no_speech_prob": 4.664441064505809e-07}, {"id": 268, "seek": 183348, "start": 1845.8, "end": 1854.84, "text": " and then after we do that we now want to rerun our query basically to query some", "tokens": [293, 550, 934, 321, 360, 300, 321, 586, 528, 281, 43819, 409, 527, 14581, 1936, 281, 14581, 512], "temperature": 0.0, "avg_logprob": -0.1944262981414795, "compression_ratio": 1.3571428571428572, "no_speech_prob": 4.664441064505809e-07}, {"id": 269, "seek": 185484, "start": 1854.84, "end": 1871.24, "text": " more. So that is called $scope.search at the moment. There we go. So the next", "tokens": [544, 13, 407, 300, 307, 1219, 1848, 4417, 1114, 13, 405, 1178, 412, 264, 1623, 13, 821, 321, 352, 13, 407, 264, 958], "temperature": 0.0, "avg_logprob": -0.13160771482131062, "compression_ratio": 1.49375, "no_speech_prob": 7.002147981438611e-07}, {"id": 270, "seek": 185484, "start": 1871.24, "end": 1875.36, "text": " thing we need to do now is to use these offset and limit parameters inside our", "tokens": [551, 321, 643, 281, 360, 586, 307, 281, 764, 613, 18687, 293, 4948, 9834, 1854, 527], "temperature": 0.0, "avg_logprob": -0.13160771482131062, "compression_ratio": 1.49375, "no_speech_prob": 7.002147981438611e-07}, {"id": 271, "seek": 185484, "start": 1875.36, "end": 1880.76, "text": " query. Now interestingly though what we want to do now is not just go $scope.items", "tokens": [14581, 13, 823, 25873, 1673, 437, 321, 528, 281, 360, 586, 307, 406, 445, 352, 1848, 4417, 1114, 13, 270, 9097], "temperature": 0.0, "avg_logprob": -0.13160771482131062, "compression_ratio": 1.49375, "no_speech_prob": 7.002147981438611e-07}, {"id": 272, "seek": 188076, "start": 1880.76, "end": 1886.16, "text": " equals to do.query we actually want to wait for the query to finish running and", "tokens": [6915, 281, 360, 13, 358, 2109, 321, 767, 528, 281, 1699, 337, 264, 14581, 281, 2413, 2614, 293], "temperature": 0.0, "avg_logprob": -0.1321956300243889, "compression_ratio": 1.695067264573991, "no_speech_prob": 1.7061753396774293e-06}, {"id": 273, "seek": 188076, "start": 1886.16, "end": 1893.48, "text": " add those items to the end of what we already have. So if you look at the", "tokens": [909, 729, 4754, 281, 264, 917, 295, 437, 321, 1217, 362, 13, 407, 498, 291, 574, 412, 264], "temperature": 0.0, "avg_logprob": -0.1321956300243889, "compression_ratio": 1.695067264573991, "no_speech_prob": 1.7061753396774293e-06}, {"id": 274, "seek": 188076, "start": 1893.48, "end": 1898.84, "text": " $resource documentation on Angular you'll see that actually you can have", "tokens": [1848, 495, 2948, 14333, 322, 34107, 291, 603, 536, 300, 767, 291, 393, 362], "temperature": 0.0, "avg_logprob": -0.1321956300243889, "compression_ratio": 1.695067264573991, "no_speech_prob": 1.7061753396774293e-06}, {"id": 275, "seek": 188076, "start": 1898.84, "end": 1904.44, "text": " this optional success callback. So we don't have to say in fact you can see", "tokens": [341, 17312, 2245, 818, 3207, 13, 407, 321, 500, 380, 362, 281, 584, 294, 1186, 291, 393, 536], "temperature": 0.0, "avg_logprob": -0.1321956300243889, "compression_ratio": 1.695067264573991, "no_speech_prob": 1.7061753396774293e-06}, {"id": 276, "seek": 188076, "start": 1904.44, "end": 1908.68, "text": " it used right above you don't have to say actually let's just look here you", "tokens": [309, 1143, 558, 3673, 291, 500, 380, 362, 281, 584, 767, 718, 311, 445, 574, 510, 291], "temperature": 0.0, "avg_logprob": -0.1321956300243889, "compression_ratio": 1.695067264573991, "no_speech_prob": 1.7061753396774293e-06}, {"id": 277, "seek": 190868, "start": 1908.68, "end": 1913.6000000000001, "text": " don't have to say left hand side equals the result of the query instead you can", "tokens": [500, 380, 362, 281, 584, 1411, 1011, 1252, 6915, 264, 1874, 295, 264, 14581, 2602, 291, 393], "temperature": 0.0, "avg_logprob": -0.11060843100914589, "compression_ratio": 1.6868131868131868, "no_speech_prob": 4.157316652708687e-06}, {"id": 278, "seek": 190868, "start": 1913.6000000000001, "end": 1923.0800000000002, "text": " say run the query and when it's finished call some function and that's where we", "tokens": [584, 1190, 264, 14581, 293, 562, 309, 311, 4335, 818, 512, 2445, 293, 300, 311, 689, 321], "temperature": 0.0, "avg_logprob": -0.11060843100914589, "compression_ratio": 1.6868131868131868, "no_speech_prob": 4.157316652708687e-06}, {"id": 279, "seek": 190868, "start": 1923.0800000000002, "end": 1929.04, "text": " write this function. So it's going to be passed the actual data that it's", "tokens": [2464, 341, 2445, 13, 407, 309, 311, 516, 281, 312, 4678, 264, 3539, 1412, 300, 309, 311], "temperature": 0.0, "avg_logprob": -0.11060843100914589, "compression_ratio": 1.6868131868131868, "no_speech_prob": 4.157316652708687e-06}, {"id": 280, "seek": 190868, "start": 1929.04, "end": 1934.28, "text": " received and that's where we can do something with it. So to have it just", "tokens": [4613, 293, 300, 311, 689, 321, 393, 360, 746, 365, 309, 13, 407, 281, 362, 309, 445], "temperature": 0.0, "avg_logprob": -0.11060843100914589, "compression_ratio": 1.6868131868131868, "no_speech_prob": 4.157316652708687e-06}, {"id": 281, "seek": 193428, "start": 1934.28, "end": 1938.8, "text": " continue to work as before it just be like so $scope.items equals", "tokens": [2354, 281, 589, 382, 949, 309, 445, 312, 411, 370, 1848, 4417, 1114, 13, 270, 9097, 6915], "temperature": 0.0, "avg_logprob": -0.11982279164450509, "compression_ratio": 1.5755395683453237, "no_speech_prob": 4.860408807871863e-06}, {"id": 282, "seek": 193428, "start": 1938.8, "end": 1943.0, "text": " whatever data we were given before and that will continue to work just like it", "tokens": [2035, 1412, 321, 645, 2212, 949, 293, 300, 486, 2354, 281, 589, 445, 411, 309], "temperature": 0.0, "avg_logprob": -0.11982279164450509, "compression_ratio": 1.5755395683453237, "no_speech_prob": 4.860408807871863e-06}, {"id": 283, "seek": 193428, "start": 1943.0, "end": 1949.28, "text": " used to. But we actually want to do something else now we actually want to", "tokens": [1143, 281, 13, 583, 321, 767, 528, 281, 360, 746, 1646, 586, 321, 767, 528, 281], "temperature": 0.0, "avg_logprob": -0.11982279164450509, "compression_ratio": 1.5755395683453237, "no_speech_prob": 4.860408807871863e-06}, {"id": 284, "seek": 194928, "start": 1949.28, "end": 1971.44, "text": " say okay pass in our offset and pass in our limit and so now we're going to be", "tokens": [584, 1392, 1320, 294, 527, 18687, 293, 1320, 294, 527, 4948, 293, 370, 586, 321, 434, 516, 281, 312], "temperature": 0.0, "avg_logprob": -0.15128312640719943, "compression_ratio": 1.3620689655172413, "no_speech_prob": 7.296297098946525e-06}, {"id": 285, "seek": 197144, "start": 1971.44, "end": 1979.92, "text": " given an extra whatever 20 items that we want to add to the end of $scope.items", "tokens": [2212, 364, 2857, 2035, 945, 4754, 300, 321, 528, 281, 909, 281, 264, 917, 295, 1848, 4417, 1114, 13, 270, 9097], "temperature": 0.0, "avg_logprob": -0.10849501937627792, "compression_ratio": 1.4417177914110428, "no_speech_prob": 2.0261302324797725e-06}, {"id": 286, "seek": 197144, "start": 1979.92, "end": 1991.52, "text": " so we now need to not replace it but concatenate it with our new data. So this", "tokens": [370, 321, 586, 643, 281, 406, 7406, 309, 457, 1588, 7186, 473, 309, 365, 527, 777, 1412, 13, 407, 341], "temperature": 0.0, "avg_logprob": -0.10849501937627792, "compression_ratio": 1.4417177914110428, "no_speech_prob": 2.0261302324797725e-06}, {"id": 287, "seek": 197144, "start": 1991.52, "end": 2000.0, "text": " time we should only get 20 back however we have a problem which is currently", "tokens": [565, 321, 820, 787, 483, 945, 646, 4461, 321, 362, 257, 1154, 597, 307, 4362], "temperature": 0.0, "avg_logprob": -0.10849501937627792, "compression_ratio": 1.4417177914110428, "no_speech_prob": 2.0261302324797725e-06}, {"id": 288, "seek": 200000, "start": 2000.0, "end": 2004.12, "text": " we're trying to call concat on something that's empty so let's make sure we", "tokens": [321, 434, 1382, 281, 818, 1588, 267, 322, 746, 300, 311, 6707, 370, 718, 311, 652, 988, 321], "temperature": 0.0, "avg_logprob": -0.1396777331829071, "compression_ratio": 1.4713375796178343, "no_speech_prob": 5.173848421691218e-06}, {"id": 289, "seek": 200000, "start": 2004.12, "end": 2019.56, "text": " started out not being empty. Okay let's try it again. That's better you can see", "tokens": [1409, 484, 406, 885, 6707, 13, 1033, 718, 311, 853, 309, 797, 13, 663, 311, 1101, 291, 393, 536], "temperature": 0.0, "avg_logprob": -0.1396777331829071, "compression_ratio": 1.4713375796178343, "no_speech_prob": 5.173848421691218e-06}, {"id": 290, "seek": 200000, "start": 2019.56, "end": 2027.0, "text": " we just got 20 this time. Let's try clicking show more. That's great so now", "tokens": [321, 445, 658, 945, 341, 565, 13, 961, 311, 853, 9697, 855, 544, 13, 663, 311, 869, 370, 586], "temperature": 0.0, "avg_logprob": -0.1396777331829071, "compression_ratio": 1.4713375796178343, "no_speech_prob": 5.173848421691218e-06}, {"id": 291, "seek": 202700, "start": 2027.0, "end": 2035.0, "text": " we've got 40 and show more again. Now that's actually I only have 50 in here", "tokens": [321, 600, 658, 3356, 293, 855, 544, 797, 13, 823, 300, 311, 767, 286, 787, 362, 2625, 294, 510], "temperature": 0.0, "avg_logprob": -0.1404355095653999, "compression_ratio": 1.526829268292683, "no_speech_prob": 2.8572990231623407e-06}, {"id": 292, "seek": 202700, "start": 2035.0, "end": 2039.0, "text": " so one nasty thing with this UX that still says show more when there's no", "tokens": [370, 472, 17923, 551, 365, 341, 40176, 300, 920, 1619, 855, 544, 562, 456, 311, 572], "temperature": 0.0, "avg_logprob": -0.1404355095653999, "compression_ratio": 1.526829268292683, "no_speech_prob": 2.8572990231623407e-06}, {"id": 293, "seek": 202700, "start": 2039.0, "end": 2044.04, "text": " more to show so hopefully you can figure out pretty easily how to get rid of that.", "tokens": [544, 281, 855, 370, 4696, 291, 393, 2573, 484, 1238, 3612, 577, 281, 483, 3973, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.1404355095653999, "compression_ratio": 1.526829268292683, "no_speech_prob": 2.8572990231623407e-06}, {"id": 294, "seek": 202700, "start": 2044.04, "end": 2055.24, "text": " All we need to do is add an ng show and let's create something called has more.", "tokens": [1057, 321, 643, 281, 360, 307, 909, 364, 6415, 855, 293, 718, 311, 1884, 746, 1219, 575, 544, 13], "temperature": 0.0, "avg_logprob": -0.1404355095653999, "compression_ratio": 1.526829268292683, "no_speech_prob": 2.8572990231623407e-06}, {"id": 295, "seek": 205524, "start": 2055.24, "end": 2060.0, "text": " So how do we know if there's more? Well more or less we could basically say well", "tokens": [407, 577, 360, 321, 458, 498, 456, 311, 544, 30, 1042, 544, 420, 1570, 321, 727, 1936, 584, 731], "temperature": 0.0, "avg_logprob": -0.11862829083301982, "compression_ratio": 1.5782312925170068, "no_speech_prob": 7.224427918117726e-07}, {"id": 296, "seek": 205524, "start": 2060.0, "end": 2067.3199999999997, "text": " if we managed to pull back at least 20 last time sorry if we managed to pull", "tokens": [498, 321, 6453, 281, 2235, 646, 412, 1935, 945, 1036, 565, 2597, 498, 321, 6453, 281, 2235], "temperature": 0.0, "avg_logprob": -0.11862829083301982, "compression_ratio": 1.5782312925170068, "no_speech_prob": 7.224427918117726e-07}, {"id": 297, "seek": 205524, "start": 2067.3199999999997, "end": 2072.12, "text": " back exactly 20 last time then there's probably more. So let's say that to", "tokens": [646, 2293, 945, 1036, 565, 550, 456, 311, 1391, 544, 13, 407, 718, 311, 584, 300, 281], "temperature": 0.0, "avg_logprob": -0.11862829083301982, "compression_ratio": 1.5782312925170068, "no_speech_prob": 7.224427918117726e-07}, {"id": 298, "seek": 207212, "start": 2072.12, "end": 2089.72, "text": " start with it's going to go more equals true. Let's create the function has more", "tokens": [722, 365, 309, 311, 516, 281, 352, 544, 6915, 2074, 13, 961, 311, 1884, 264, 2445, 575, 544], "temperature": 0.0, "avg_logprob": -0.12793012323050662, "compression_ratio": 1.4465408805031446, "no_speech_prob": 3.237739747419255e-06}, {"id": 299, "seek": 207212, "start": 2089.72, "end": 2094.56, "text": " I mean maybe this is overkill maybe we hardly even need a function but never", "tokens": [286, 914, 1310, 341, 307, 670, 34213, 1310, 321, 13572, 754, 643, 257, 2445, 457, 1128], "temperature": 0.0, "avg_logprob": -0.12793012323050662, "compression_ratio": 1.4465408805031446, "no_speech_prob": 3.237739747419255e-06}, {"id": 300, "seek": 207212, "start": 2094.56, "end": 2099.48, "text": " mind so we'll just go return more so I guess we probably could have done", "tokens": [1575, 370, 321, 603, 445, 352, 2736, 544, 370, 286, 2041, 321, 1391, 727, 362, 1096], "temperature": 0.0, "avg_logprob": -0.12793012323050662, "compression_ratio": 1.4465408805031446, "no_speech_prob": 3.237739747419255e-06}, {"id": 301, "seek": 209948, "start": 2099.48, "end": 2103.4, "text": " without a function at all that's okay that should be inside dollarscope of", "tokens": [1553, 257, 2445, 412, 439, 300, 311, 1392, 300, 820, 312, 1854, 3808, 13960, 295], "temperature": 0.0, "avg_logprob": -0.13465275764465331, "compression_ratio": 1.563758389261745, "no_speech_prob": 1.0451400157762691e-05}, {"id": 302, "seek": 209948, "start": 2103.4, "end": 2111.56, "text": " course and now we need to check to see whether we got at least 20 items or not", "tokens": [1164, 293, 586, 321, 643, 281, 1520, 281, 536, 1968, 321, 658, 412, 1935, 945, 4754, 420, 406], "temperature": 0.0, "avg_logprob": -0.13465275764465331, "compression_ratio": 1.563758389261745, "no_speech_prob": 1.0451400157762691e-05}, {"id": 303, "seek": 209948, "start": 2111.56, "end": 2125.84, "text": " and if so we will say that there's more to get so we could say here more equals", "tokens": [293, 498, 370, 321, 486, 584, 300, 456, 311, 544, 281, 483, 370, 321, 727, 584, 510, 544, 6915], "temperature": 0.0, "avg_logprob": -0.13465275764465331, "compression_ratio": 1.563758389261745, "no_speech_prob": 1.0451400157762691e-05}, {"id": 304, "seek": 212584, "start": 2125.84, "end": 2142.56, "text": " data dot length equals 20. Okay let's see how that looks so we refresh all that", "tokens": [1412, 5893, 4641, 6915, 945, 13, 1033, 718, 311, 536, 577, 300, 1542, 370, 321, 15134, 439, 300], "temperature": 0.0, "avg_logprob": -0.15684926800611543, "compression_ratio": 1.4666666666666666, "no_speech_prob": 2.406087332929019e-06}, {"id": 305, "seek": 212584, "start": 2142.56, "end": 2152.28, "text": " so this is showing that's good it's still showing that's good that's great", "tokens": [370, 341, 307, 4099, 300, 311, 665, 309, 311, 920, 4099, 300, 311, 665, 300, 311, 869], "temperature": 0.0, "avg_logprob": -0.15684926800611543, "compression_ratio": 1.4666666666666666, "no_speech_prob": 2.406087332929019e-06}, {"id": 306, "seek": 215228, "start": 2152.28, "end": 2156.36, "text": " now it's disappeared. Okay so that's going pretty well so we now have", "tokens": [586, 309, 311, 13954, 13, 1033, 370, 300, 311, 516, 1238, 731, 370, 321, 586, 362], "temperature": 0.0, "avg_logprob": -0.10776491598649458, "compression_ratio": 1.68348623853211, "no_speech_prob": 3.55594761458633e-06}, {"id": 307, "seek": 215228, "start": 2156.36, "end": 2162.84, "text": " pagination working nicely and we now have sorting working nicely so the only", "tokens": [11812, 2486, 1364, 9594, 293, 321, 586, 362, 32411, 1364, 9594, 370, 264, 787], "temperature": 0.0, "avg_logprob": -0.10776491598649458, "compression_ratio": 1.68348623853211, "no_speech_prob": 3.55594761458633e-06}, {"id": 308, "seek": 215228, "start": 2162.84, "end": 2168.5600000000004, "text": " other thing we need to add is search. So if you look at the bootstrap", "tokens": [661, 551, 321, 643, 281, 909, 307, 3164, 13, 407, 498, 291, 574, 412, 264, 11450, 372, 4007], "temperature": 0.0, "avg_logprob": -0.10776491598649458, "compression_ratio": 1.68348623853211, "no_speech_prob": 3.55594761458633e-06}, {"id": 309, "seek": 215228, "start": 2168.5600000000004, "end": 2173.2000000000003, "text": " documentation they actually have a nice little example of how to create a", "tokens": [14333, 436, 767, 362, 257, 1481, 707, 1365, 295, 577, 281, 1884, 257], "temperature": 0.0, "avg_logprob": -0.10776491598649458, "compression_ratio": 1.68348623853211, "no_speech_prob": 3.55594761458633e-06}, {"id": 310, "seek": 215228, "start": 2173.2000000000003, "end": 2177.8, "text": " reasonably nicely styled search form and so I've actually turned that into a", "tokens": [23551, 9594, 7952, 1493, 3164, 1254, 293, 370, 286, 600, 767, 3574, 300, 666, 257], "temperature": 0.0, "avg_logprob": -0.10776491598649458, "compression_ratio": 1.68348623853211, "no_speech_prob": 3.55594761458633e-06}, {"id": 311, "seek": 217780, "start": 2177.8, "end": 2185.2400000000002, "text": " template so I'm just going to use that which is my bootstrap search template", "tokens": [12379, 370, 286, 478, 445, 516, 281, 764, 300, 597, 307, 452, 11450, 372, 4007, 3164, 12379], "temperature": 0.0, "avg_logprob": -0.08161365489164989, "compression_ratio": 1.6956521739130435, "no_speech_prob": 3.3930864447029307e-06}, {"id": 312, "seek": 217780, "start": 2185.2400000000002, "end": 2191.0800000000004, "text": " I've also put some basic stuff in here for my ng click as well so your search", "tokens": [286, 600, 611, 829, 512, 3875, 1507, 294, 510, 337, 452, 6415, 2052, 382, 731, 370, 428, 3164], "temperature": 0.0, "avg_logprob": -0.08161365489164989, "compression_ratio": 1.6956521739130435, "no_speech_prob": 3.3930864447029307e-06}, {"id": 313, "seek": 217780, "start": 2191.0800000000004, "end": 2194.28, "text": " template can really look pretty much the same every time until you want to get", "tokens": [12379, 393, 534, 574, 1238, 709, 264, 912, 633, 565, 1826, 291, 528, 281, 483], "temperature": 0.0, "avg_logprob": -0.08161365489164989, "compression_ratio": 1.6956521739130435, "no_speech_prob": 3.3930864447029307e-06}, {"id": 314, "seek": 217780, "start": 2194.28, "end": 2199.1600000000003, "text": " more sophisticated with styling it. Let's have a look at what's in the template so", "tokens": [544, 16950, 365, 27944, 309, 13, 961, 311, 362, 257, 574, 412, 437, 311, 294, 264, 12379, 370], "temperature": 0.0, "avg_logprob": -0.08161365489164989, "compression_ratio": 1.6956521739130435, "no_speech_prob": 3.3930864447029307e-06}, {"id": 315, "seek": 217780, "start": 2199.1600000000003, "end": 2203.7200000000003, "text": " it's a form with the appropriate bootstrap classes to make it look decent", "tokens": [309, 311, 257, 1254, 365, 264, 6854, 11450, 372, 4007, 5359, 281, 652, 309, 574, 8681], "temperature": 0.0, "avg_logprob": -0.08161365489164989, "compression_ratio": 1.6956521739130435, "no_speech_prob": 3.3930864447029307e-06}, {"id": 316, "seek": 220372, "start": 2203.72, "end": 2209.48, "text": " and the actual input box where you're going to type the search it has", "tokens": [293, 264, 3539, 4846, 2424, 689, 291, 434, 516, 281, 2010, 264, 3164, 309, 575], "temperature": 0.0, "avg_logprob": -0.13788704920296718, "compression_ratio": 1.7864077669902914, "no_speech_prob": 5.093652816867689e-06}, {"id": 317, "seek": 220372, "start": 2209.48, "end": 2213.68, "text": " an ng model of query so in other words anything that we type into this is going", "tokens": [364, 6415, 2316, 295, 14581, 370, 294, 661, 2283, 1340, 300, 321, 2010, 666, 341, 307, 516], "temperature": 0.0, "avg_logprob": -0.13788704920296718, "compression_ratio": 1.7864077669902914, "no_speech_prob": 5.093652816867689e-06}, {"id": 318, "seek": 220372, "start": 2213.68, "end": 2218.3999999999996, "text": " to end up inside $scope.query and I think we put into $scope.query is", "tokens": [281, 917, 493, 1854, 1848, 4417, 1114, 13, 358, 2109, 293, 286, 519, 321, 829, 666, 1848, 4417, 1114, 13, 358, 2109, 307], "temperature": 0.0, "avg_logprob": -0.13788704920296718, "compression_ratio": 1.7864077669902914, "no_speech_prob": 5.093652816867689e-06}, {"id": 319, "seek": 220372, "start": 2218.3999999999996, "end": 2224.2, "text": " going to end up in this text box and rather nicely the submit the sorry the", "tokens": [516, 281, 917, 493, 294, 341, 2487, 2424, 293, 2831, 9594, 264, 10315, 264, 2597, 264], "temperature": 0.0, "avg_logprob": -0.13788704920296718, "compression_ratio": 1.7864077669902914, "no_speech_prob": 5.093652816867689e-06}, {"id": 320, "seek": 220372, "start": 2224.2, "end": 2232.3599999999997, "text": " reset button we have set to be disabled if not query in other words it's", "tokens": [14322, 2960, 321, 362, 992, 281, 312, 15191, 498, 406, 14581, 294, 661, 2283, 309, 311], "temperature": 0.0, "avg_logprob": -0.13788704920296718, "compression_ratio": 1.7864077669902914, "no_speech_prob": 5.093652816867689e-06}, {"id": 321, "seek": 223236, "start": 2232.36, "end": 2237.0, "text": " disabled if there is nothing typed into the query box or more precisely if", "tokens": [15191, 498, 456, 307, 1825, 33941, 666, 264, 14581, 2424, 420, 544, 13402, 498], "temperature": 0.0, "avg_logprob": -0.110360227605348, "compression_ratio": 1.7268722466960353, "no_speech_prob": 3.500808361422969e-06}, {"id": 322, "seek": 223236, "start": 2237.0, "end": 2241.8, "text": " there is nothing inside $scope.query so in fact I just wanted to show you that", "tokens": [456, 307, 1825, 1854, 1848, 4417, 1114, 13, 358, 2109, 370, 294, 1186, 286, 445, 1415, 281, 855, 291, 300], "temperature": 0.0, "avg_logprob": -0.110360227605348, "compression_ratio": 1.7268722466960353, "no_speech_prob": 3.500808361422969e-06}, {"id": 323, "seek": 223236, "start": 2241.8, "end": 2249.92, "text": " even without adding any JavaScript we already have some neat behavior which is", "tokens": [754, 1553, 5127, 604, 15778, 321, 1217, 362, 512, 10654, 5223, 597, 307], "temperature": 0.0, "avg_logprob": -0.110360227605348, "compression_ratio": 1.7268722466960353, "no_speech_prob": 3.500808361422969e-06}, {"id": 324, "seek": 223236, "start": 2249.92, "end": 2254.8, "text": " look that's currently disabled and as soon as I type here it's enabled and as", "tokens": [574, 300, 311, 4362, 15191, 293, 382, 2321, 382, 286, 2010, 510, 309, 311, 15172, 293, 382], "temperature": 0.0, "avg_logprob": -0.110360227605348, "compression_ratio": 1.7268722466960353, "no_speech_prob": 3.500808361422969e-06}, {"id": 325, "seek": 223236, "start": 2254.8, "end": 2260.96, "text": " soon as I delete all the characters it's disabled so you can see with the angular", "tokens": [2321, 382, 286, 12097, 439, 264, 4342, 309, 311, 15191, 370, 291, 393, 536, 365, 264, 24413], "temperature": 0.0, "avg_logprob": -0.110360227605348, "compression_ratio": 1.7268722466960353, "no_speech_prob": 3.500808361422969e-06}, {"id": 326, "seek": 226096, "start": 2260.96, "end": 2266.2, "text": " directives you can actually do quite a lot even without any code and have", "tokens": [2047, 1539, 291, 393, 767, 360, 1596, 257, 688, 754, 1553, 604, 3089, 293, 362], "temperature": 0.0, "avg_logprob": -0.07955047062465123, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.495129360293504e-06}, {"id": 327, "seek": 226096, "start": 2266.2, "end": 2270.0, "text": " everything work quite nicely and of course you can add your own directives", "tokens": [1203, 589, 1596, 9594, 293, 295, 1164, 291, 393, 909, 428, 1065, 2047, 1539], "temperature": 0.0, "avg_logprob": -0.07955047062465123, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.495129360293504e-06}, {"id": 328, "seek": 226096, "start": 2270.0, "end": 2276.64, "text": " to add your own functionality again so that you your designers and so forth can", "tokens": [281, 909, 428, 1065, 14980, 797, 370, 300, 291, 428, 16196, 293, 370, 5220, 393], "temperature": 0.0, "avg_logprob": -0.07955047062465123, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.495129360293504e-06}, {"id": 329, "seek": 226096, "start": 2276.64, "end": 2280.28, "text": " actually add functionality to your applications without having to write any", "tokens": [767, 909, 14980, 281, 428, 5821, 1553, 1419, 281, 2464, 604], "temperature": 0.0, "avg_logprob": -0.07955047062465123, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.495129360293504e-06}, {"id": 330, "seek": 226096, "start": 2280.28, "end": 2287.4, "text": " code I think that's really cool so in this case when we click on the search", "tokens": [3089, 286, 519, 300, 311, 534, 1627, 370, 294, 341, 1389, 562, 321, 2052, 322, 264, 3164], "temperature": 0.0, "avg_logprob": -0.07955047062465123, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.495129360293504e-06}, {"id": 331, "seek": 228740, "start": 2287.4, "end": 2293.12, "text": " button we're going to call something called reset and when we click on the", "tokens": [2960, 321, 434, 516, 281, 818, 746, 1219, 14322, 293, 562, 321, 2052, 322, 264], "temperature": 0.0, "avg_logprob": -0.0790399250231291, "compression_ratio": 1.9870129870129871, "no_speech_prob": 7.64639480621554e-06}, {"id": 332, "seek": 228740, "start": 2293.12, "end": 2296.84, "text": " reset button we're going to call something which is basically to empty", "tokens": [14322, 2960, 321, 434, 516, 281, 818, 746, 597, 307, 1936, 281, 6707], "temperature": 0.0, "avg_logprob": -0.0790399250231291, "compression_ratio": 1.9870129870129871, "no_speech_prob": 7.64639480621554e-06}, {"id": 333, "seek": 228740, "start": 2296.84, "end": 2303.44, "text": " out the query and then call reset again so let's write reset so what's reset is", "tokens": [484, 264, 14581, 293, 550, 818, 14322, 797, 370, 718, 311, 2464, 14322, 370, 437, 311, 14322, 307], "temperature": 0.0, "avg_logprob": -0.0790399250231291, "compression_ratio": 1.9870129870129871, "no_speech_prob": 7.64639480621554e-06}, {"id": 334, "seek": 228740, "start": 2303.44, "end": 2313.36, "text": " going to do is it's going to it's going to really start again in terms of what's", "tokens": [516, 281, 360, 307, 309, 311, 516, 281, 309, 311, 516, 281, 534, 722, 797, 294, 2115, 295, 437, 311], "temperature": 0.0, "avg_logprob": -0.0790399250231291, "compression_ratio": 1.9870129870129871, "no_speech_prob": 7.64639480621554e-06}, {"id": 335, "seek": 231336, "start": 2313.36, "end": 2318.6, "text": " displayed so if I've pressed show more a bunch of times and then I do a search", "tokens": [16372, 370, 498, 286, 600, 17355, 855, 544, 257, 3840, 295, 1413, 293, 550, 286, 360, 257, 3164], "temperature": 0.0, "avg_logprob": -0.1244797783513223, "compression_ratio": 1.5454545454545454, "no_speech_prob": 7.002135475886462e-07}, {"id": 336, "seek": 231336, "start": 2318.6, "end": 2325.4, "text": " then I really probably only want to show the first N of that search so I'm going", "tokens": [550, 286, 534, 1391, 787, 528, 281, 855, 264, 700, 426, 295, 300, 3164, 370, 286, 478, 516], "temperature": 0.0, "avg_logprob": -0.1244797783513223, "compression_ratio": 1.5454545454545454, "no_speech_prob": 7.002135475886462e-07}, {"id": 337, "seek": 232540, "start": 2325.4, "end": 2343.08, "text": " to grab all of this stuff here and I'm going to move it into reset there we go", "tokens": [281, 4444, 439, 295, 341, 1507, 510, 293, 286, 478, 516, 281, 1286, 309, 666, 14322, 456, 321, 352], "temperature": 0.0, "avg_logprob": -0.1210893475732138, "compression_ratio": 1.4454545454545455, "no_speech_prob": 4.450833728242287e-07}, {"id": 338, "seek": 232540, "start": 2343.08, "end": 2348.32, "text": " and when I've done all those things I'm going to call search so that's basically", "tokens": [293, 562, 286, 600, 1096, 439, 729, 721, 286, 478, 516, 281, 818, 3164, 370, 300, 311, 1936], "temperature": 0.0, "avg_logprob": -0.1210893475732138, "compression_ratio": 1.4454545454545455, "no_speech_prob": 4.450833728242287e-07}, {"id": 339, "seek": 234832, "start": 2348.32, "end": 2358.56, "text": " all I mean by reset and so now rather than calling search here I can call", "tokens": [439, 286, 914, 538, 14322, 293, 370, 586, 2831, 813, 5141, 3164, 510, 286, 393, 818], "temperature": 0.0, "avg_logprob": -0.10942377726236979, "compression_ratio": 1.6230366492146597, "no_speech_prob": 2.1567914245679276e-06}, {"id": 340, "seek": 234832, "start": 2358.76, "end": 2366.8, "text": " reset there we go I think as you change searches we should probably leave the", "tokens": [14322, 456, 321, 352, 286, 519, 382, 291, 1319, 26701, 321, 820, 1391, 1856, 264], "temperature": 0.0, "avg_logprob": -0.10942377726236979, "compression_ratio": 1.6230366492146597, "no_speech_prob": 2.1567914245679276e-06}, {"id": 341, "seek": 234832, "start": 2366.8, "end": 2370.4, "text": " sort order as it was so I'm not going to move that inside reset we're just going", "tokens": [1333, 1668, 382, 309, 390, 370, 286, 478, 406, 516, 281, 1286, 300, 1854, 14322, 321, 434, 445, 516], "temperature": 0.0, "avg_logprob": -0.10942377726236979, "compression_ratio": 1.6230366492146597, "no_speech_prob": 2.1567914245679276e-06}, {"id": 342, "seek": 234832, "start": 2370.4, "end": 2376.44, "text": " to set everything up from scratch now we actually want of course to make sure", "tokens": [281, 992, 1203, 493, 490, 8459, 586, 321, 767, 528, 295, 1164, 281, 652, 988], "temperature": 0.0, "avg_logprob": -0.10942377726236979, "compression_ratio": 1.6230366492146597, "no_speech_prob": 2.1567914245679276e-06}, {"id": 343, "seek": 237644, "start": 2376.44, "end": 2381.8, "text": " that we do a search now you'll remember that inside our controller our", "tokens": [300, 321, 360, 257, 3164, 586, 291, 603, 1604, 300, 1854, 527, 10561, 527], "temperature": 0.0, "avg_logprob": -0.1450772661911814, "compression_ratio": 1.7262569832402235, "no_speech_prob": 2.123357035088702e-06}, {"id": 344, "seek": 237644, "start": 2381.8, "end": 2388.68, "text": " controller we had this parameter called Q and that is the thing that if it's", "tokens": [10561, 321, 632, 341, 13075, 1219, 1249, 293, 300, 307, 264, 551, 300, 498, 309, 311], "temperature": 0.0, "avg_logprob": -0.1450772661911814, "compression_ratio": 1.7262569832402235, "no_speech_prob": 2.123357035088702e-06}, {"id": 345, "seek": 237644, "start": 2388.68, "end": 2395.64, "text": " defined we're going to call dot where on it so we need to stick something into Q", "tokens": [7642, 321, 434, 516, 281, 818, 5893, 689, 322, 309, 370, 321, 643, 281, 2897, 746, 666, 1249], "temperature": 0.0, "avg_logprob": -0.1450772661911814, "compression_ratio": 1.7262569832402235, "no_speech_prob": 2.123357035088702e-06}, {"id": 346, "seek": 237644, "start": 2395.64, "end": 2403.96, "text": " what is that something it's dollar scope dot query so let's try that shall we so", "tokens": [437, 307, 300, 746, 309, 311, 7241, 11923, 5893, 14581, 370, 718, 311, 853, 300, 4393, 321, 370], "temperature": 0.0, "avg_logprob": -0.1450772661911814, "compression_ratio": 1.7262569832402235, "no_speech_prob": 2.123357035088702e-06}, {"id": 347, "seek": 240396, "start": 2403.96, "end": 2411.2, "text": " here we're going to add Q and we're going to set it to dollar scope dot query", "tokens": [510, 321, 434, 516, 281, 909, 1249, 293, 321, 434, 516, 281, 992, 309, 281, 7241, 11923, 5893, 14581], "temperature": 0.0, "avg_logprob": -0.11015428815569196, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.706172156445973e-06}, {"id": 348, "seek": 240396, "start": 2411.2, "end": 2417.48, "text": " I don't know that we need to do anything else at this point we've defined what", "tokens": [286, 500, 380, 458, 300, 321, 643, 281, 360, 1340, 1646, 412, 341, 935, 321, 600, 7642, 437], "temperature": 0.0, "avg_logprob": -0.11015428815569196, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.706172156445973e-06}, {"id": 349, "seek": 240396, "start": 2417.48, "end": 2421.2, "text": " dollar scope dot query is from our template we've passed it in the", "tokens": [7241, 11923, 5893, 14581, 307, 490, 527, 12379, 321, 600, 4678, 309, 294, 264], "temperature": 0.0, "avg_logprob": -0.11015428815569196, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.706172156445973e-06}, {"id": 350, "seek": 240396, "start": 2421.2, "end": 2426.32, "text": " controller is doing something with it so hopefully we're going to be right to go", "tokens": [10561, 307, 884, 746, 365, 309, 370, 4696, 321, 434, 516, 281, 312, 558, 281, 352], "temperature": 0.0, "avg_logprob": -0.11015428815569196, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.706172156445973e-06}, {"id": 351, "seek": 242632, "start": 2426.32, "end": 2438.2000000000003, "text": " at this point so let's try it shall we let's search for 6 nothing happened but", "tokens": [412, 341, 935, 370, 718, 311, 853, 309, 4393, 321, 718, 311, 3164, 337, 1386, 1825, 2011, 457], "temperature": 0.0, "avg_logprob": -0.11241901837862454, "compression_ratio": 1.718918918918919, "no_speech_prob": 2.3687846351094777e-06}, {"id": 352, "seek": 242632, "start": 2438.2000000000003, "end": 2442.32, "text": " there was no error either let's find out why not so if I go to the network tab", "tokens": [456, 390, 572, 6713, 2139, 718, 311, 915, 484, 983, 406, 370, 498, 286, 352, 281, 264, 3209, 4421], "temperature": 0.0, "avg_logprob": -0.11241901837862454, "compression_ratio": 1.718918918918919, "no_speech_prob": 2.3687846351094777e-06}, {"id": 353, "seek": 242632, "start": 2442.32, "end": 2449.52, "text": " and click search again okay so currently our search button is not actually doing", "tokens": [293, 2052, 3164, 797, 1392, 370, 4362, 527, 3164, 2960, 307, 406, 767, 884], "temperature": 0.0, "avg_logprob": -0.11241901837862454, "compression_ratio": 1.718918918918919, "no_speech_prob": 2.3687846351094777e-06}, {"id": 354, "seek": 242632, "start": 2449.52, "end": 2455.44, "text": " anything let's find out why not first of all we'll check our template and there", "tokens": [1340, 718, 311, 915, 484, 983, 406, 700, 295, 439, 321, 603, 1520, 527, 12379, 293, 456], "temperature": 0.0, "avg_logprob": -0.11241901837862454, "compression_ratio": 1.718918918918919, "no_speech_prob": 2.3687846351094777e-06}, {"id": 355, "seek": 245544, "start": 2455.44, "end": 2464.2000000000003, "text": " is in fact an ng click connected to it so that's good and then we do have a", "tokens": [307, 294, 1186, 364, 6415, 2052, 4582, 281, 309, 370, 300, 311, 665, 293, 550, 321, 360, 362, 257], "temperature": 0.0, "avg_logprob": -0.08855126454279973, "compression_ratio": 1.683453237410072, "no_speech_prob": 4.936920959153213e-06}, {"id": 356, "seek": 245544, "start": 2464.2000000000003, "end": 2476.56, "text": " dollar scope dot reset so that's good at the end of that it calls a search so", "tokens": [7241, 11923, 5893, 14322, 370, 300, 311, 665, 412, 264, 917, 295, 300, 309, 5498, 257, 3164, 370], "temperature": 0.0, "avg_logprob": -0.08855126454279973, "compression_ratio": 1.683453237410072, "no_speech_prob": 4.936920959153213e-06}, {"id": 357, "seek": 245544, "start": 2476.56, "end": 2483.36, "text": " that's good so let's try and figure out what's going on by using the debugger in", "tokens": [300, 311, 665, 370, 718, 311, 853, 293, 2573, 484, 437, 311, 516, 322, 538, 1228, 264, 24083, 1321, 294], "temperature": 0.0, "avg_logprob": -0.08855126454279973, "compression_ratio": 1.683453237410072, "no_speech_prob": 4.936920959153213e-06}, {"id": 358, "seek": 248336, "start": 2483.36, "end": 2489.04, "text": " JavaScript let's make sure we actually get to dollar scope dot reset shall we", "tokens": [15778, 718, 311, 652, 988, 321, 767, 483, 281, 7241, 11923, 5893, 14322, 4393, 321], "temperature": 0.0, "avg_logprob": -0.1665693584241365, "compression_ratio": 1.5161290322580645, "no_speech_prob": 4.222780262352899e-06}, {"id": 359, "seek": 248336, "start": 2491.52, "end": 2499.6400000000003, "text": " I'm just doing a refresh first and then I'll type something into search and click", "tokens": [286, 478, 445, 884, 257, 15134, 700, 293, 550, 286, 603, 2010, 746, 666, 3164, 293, 2052], "temperature": 0.0, "avg_logprob": -0.1665693584241365, "compression_ratio": 1.5161290322580645, "no_speech_prob": 4.222780262352899e-06}, {"id": 360, "seek": 248336, "start": 2499.6400000000003, "end": 2506.8, "text": " okay so something's happening that's good let's try it so we step step step", "tokens": [1392, 370, 746, 311, 2737, 300, 311, 665, 718, 311, 853, 309, 370, 321, 1823, 1823, 1823], "temperature": 0.0, "avg_logprob": -0.1665693584241365, "compression_ratio": 1.5161290322580645, "no_speech_prob": 4.222780262352899e-06}, {"id": 361, "seek": 250680, "start": 2506.8, "end": 2523.1600000000003, "text": " step step let's go into search that's interesting this time it did work", "tokens": [1823, 1823, 718, 311, 352, 666, 3164, 300, 311, 1880, 341, 565, 309, 630, 589], "temperature": 0.0, "avg_logprob": -0.10644655478628058, "compression_ratio": 1.3513513513513513, "no_speech_prob": 1.6027921674321988e-06}, {"id": 362, "seek": 250680, "start": 2523.1600000000003, "end": 2531.2000000000003, "text": " perhaps I just forgot to refresh last time so let's take the debugger out save", "tokens": [4317, 286, 445, 5298, 281, 15134, 1036, 565, 370, 718, 311, 747, 264, 24083, 1321, 484, 3155], "temperature": 0.0, "avg_logprob": -0.10644655478628058, "compression_ratio": 1.3513513513513513, "no_speech_prob": 1.6027921674321988e-06}, {"id": 363, "seek": 253120, "start": 2531.2, "end": 2539.7599999999998, "text": " it do a refresh and let's try it search oh there we go so just all that happened", "tokens": [309, 360, 257, 15134, 293, 718, 311, 853, 309, 3164, 1954, 456, 321, 352, 370, 445, 439, 300, 2011], "temperature": 0.0, "avg_logprob": -0.09032208406472508, "compression_ratio": 1.7719298245614035, "no_speech_prob": 1.5534834574282286e-06}, {"id": 364, "seek": 253120, "start": 2539.7599999999998, "end": 2543.08, "text": " last time was I forgot to refresh and therefore I had my old version of the", "tokens": [1036, 565, 390, 286, 5298, 281, 15134, 293, 4412, 286, 632, 452, 1331, 3037, 295, 264], "temperature": 0.0, "avg_logprob": -0.09032208406472508, "compression_ratio": 1.7719298245614035, "no_speech_prob": 1.5534834574282286e-06}, {"id": 365, "seek": 253120, "start": 2543.08, "end": 2550.16, "text": " JavaScript let's try reset no that's great let's try doing a sort and then", "tokens": [15778, 718, 311, 853, 14322, 572, 300, 311, 869, 718, 311, 853, 884, 257, 1333, 293, 550], "temperature": 0.0, "avg_logprob": -0.09032208406472508, "compression_ratio": 1.7719298245614035, "no_speech_prob": 1.5534834574282286e-06}, {"id": 366, "seek": 253120, "start": 2550.16, "end": 2556.04, "text": " do a search that's great that's continued to work as well and let's try", "tokens": [360, 257, 3164, 300, 311, 869, 300, 311, 7014, 281, 589, 382, 731, 293, 718, 311, 853], "temperature": 0.0, "avg_logprob": -0.09032208406472508, "compression_ratio": 1.7719298245614035, "no_speech_prob": 1.5534834574282286e-06}, {"id": 367, "seek": 255604, "start": 2556.04, "end": 2563.36, "text": " doing a search and then a sort that's interesting so in this case when I", "tokens": [884, 257, 3164, 293, 550, 257, 1333, 300, 311, 1880, 370, 294, 341, 1389, 562, 286], "temperature": 0.0, "avg_logprob": -0.08828109066660811, "compression_ratio": 1.6720430107526882, "no_speech_prob": 1.4367442418006249e-06}, {"id": 368, "seek": 255604, "start": 2563.36, "end": 2569.04, "text": " clicked on the sort header it's actually added to this and that's a bug and if", "tokens": [23370, 322, 264, 1333, 23117, 309, 311, 767, 3869, 281, 341, 293, 300, 311, 257, 7426, 293, 498], "temperature": 0.0, "avg_logprob": -0.08828109066660811, "compression_ratio": 1.6720430107526882, "no_speech_prob": 1.4367442418006249e-06}, {"id": 369, "seek": 255604, "start": 2569.04, "end": 2574.4, "text": " you think about it the reason that's a bug is because I am NOT doing my reset", "tokens": [291, 519, 466, 309, 264, 1778, 300, 311, 257, 7426, 307, 570, 286, 669, 12854, 884, 452, 14322], "temperature": 0.0, "avg_logprob": -0.08828109066660811, "compression_ratio": 1.6720430107526882, "no_speech_prob": 1.4367442418006249e-06}, {"id": 370, "seek": 255604, "start": 2574.4, "end": 2586.0, "text": " after I did my sort so let's change that so that it does a reset here so in other", "tokens": [934, 286, 630, 452, 1333, 370, 718, 311, 1319, 300, 370, 300, 309, 775, 257, 14322, 510, 370, 294, 661], "temperature": 0.0, "avg_logprob": -0.08828109066660811, "compression_ratio": 1.6720430107526882, "no_speech_prob": 1.4367442418006249e-06}, {"id": 371, "seek": 258600, "start": 2586.0, "end": 2589.04, "text": " words each time I'm doing something that's not show more I actually need to", "tokens": [2283, 1184, 565, 286, 478, 884, 746, 300, 311, 406, 855, 544, 286, 767, 643, 281], "temperature": 0.0, "avg_logprob": -0.126628577709198, "compression_ratio": 1.844311377245509, "no_speech_prob": 2.9022860417171614e-06}, {"id": 372, "seek": 258600, "start": 2589.04, "end": 2598.96, "text": " start again and not append each time let's try that do a search and then a", "tokens": [722, 797, 293, 406, 34116, 1184, 565, 718, 311, 853, 300, 360, 257, 3164, 293, 550, 257], "temperature": 0.0, "avg_logprob": -0.126628577709198, "compression_ratio": 1.844311377245509, "no_speech_prob": 2.9022860417171614e-06}, {"id": 373, "seek": 258600, "start": 2598.96, "end": 2604.12, "text": " sort great do a reset there's no show more here because it's only five things", "tokens": [1333, 869, 360, 257, 14322, 456, 311, 572, 855, 544, 510, 570, 309, 311, 787, 1732, 721], "temperature": 0.0, "avg_logprob": -0.126628577709198, "compression_ratio": 1.844311377245509, "no_speech_prob": 2.9022860417171614e-06}, {"id": 374, "seek": 258600, "start": 2604.12, "end": 2612.36, "text": " to show do a reset there's a show more let's make sure it's all show more works", "tokens": [281, 855, 360, 257, 14322, 456, 311, 257, 855, 544, 718, 311, 652, 988, 309, 311, 439, 855, 544, 1985], "temperature": 0.0, "avg_logprob": -0.126628577709198, "compression_ratio": 1.844311377245509, "no_speech_prob": 2.9022860417171614e-06}, {"id": 375, "seek": 261236, "start": 2612.36, "end": 2620.04, "text": " looking good once more and no more to show that's great so we're now at a", "tokens": [1237, 665, 1564, 544, 293, 572, 544, 281, 855, 300, 311, 869, 370, 321, 434, 586, 412, 257], "temperature": 0.0, "avg_logprob": -0.06843965347499063, "compression_ratio": 1.6108108108108108, "no_speech_prob": 1.7603339301786036e-06}, {"id": 376, "seek": 261236, "start": 2620.04, "end": 2627.52, "text": " point where we have successfully got search and sort and pagination working", "tokens": [935, 689, 321, 362, 10727, 658, 3164, 293, 1333, 293, 11812, 2486, 1364], "temperature": 0.0, "avg_logprob": -0.06843965347499063, "compression_ratio": 1.6108108108108108, "no_speech_prob": 1.7603339301786036e-06}, {"id": 377, "seek": 261236, "start": 2627.52, "end": 2634.04, "text": " and we did that all from scratch in I think well under an hour if I'm counting", "tokens": [293, 321, 630, 300, 439, 490, 8459, 294, 286, 519, 731, 833, 364, 1773, 498, 286, 478, 13251], "temperature": 0.0, "avg_logprob": -0.06843965347499063, "compression_ratio": 1.6108108108108108, "no_speech_prob": 1.7603339301786036e-06}, {"id": 378, "seek": 261236, "start": 2634.04, "end": 2638.4, "text": " correctly and I think that really shows that once we've got the basic", "tokens": [8944, 293, 286, 519, 300, 534, 3110, 300, 1564, 321, 600, 658, 264, 3875], "temperature": 0.0, "avg_logprob": -0.06843965347499063, "compression_ratio": 1.6108108108108108, "no_speech_prob": 1.7603339301786036e-06}, {"id": 379, "seek": 263840, "start": 2638.4, "end": 2642.76, "text": " infrastructure in place it just gets faster and faster to add additional", "tokens": [6896, 294, 1081, 309, 445, 2170, 4663, 293, 4663, 281, 909, 4497], "temperature": 0.0, "avg_logprob": -0.12110064954173808, "compression_ratio": 1.9453781512605042, "no_speech_prob": 9.97258484858321e-06}, {"id": 380, "seek": 263840, "start": 2642.76, "end": 2648.44, "text": " functionality to our application I'm going to leave this tutorial at this", "tokens": [14980, 281, 527, 3861, 286, 478, 516, 281, 1856, 341, 7073, 412, 341], "temperature": 0.0, "avg_logprob": -0.12110064954173808, "compression_ratio": 1.9453781512605042, "no_speech_prob": 9.97258484858321e-06}, {"id": 381, "seek": 263840, "start": 2648.44, "end": 2653.32, "text": " point because I think we've got more than enough to keep us going for now see", "tokens": [935, 570, 286, 519, 321, 600, 658, 544, 813, 1547, 281, 1066, 505, 516, 337, 586, 536], "temperature": 0.0, "avg_logprob": -0.12110064954173808, "compression_ratio": 1.9453781512605042, "no_speech_prob": 9.97258484858321e-06}, {"id": 382, "seek": 263840, "start": 2653.32, "end": 2656.84, "text": " if you can follow through with this and create add that functionality to your own", "tokens": [498, 291, 393, 1524, 807, 365, 341, 293, 1884, 909, 300, 14980, 281, 428, 1065], "temperature": 0.0, "avg_logprob": -0.12110064954173808, "compression_ratio": 1.9453781512605042, "no_speech_prob": 9.97258484858321e-06}, {"id": 383, "seek": 263840, "start": 2656.84, "end": 2662.1600000000003, "text": " application of course don't forget that you can follow through the written", "tokens": [3861, 295, 1164, 500, 380, 2870, 300, 291, 393, 1524, 807, 264, 3720], "temperature": 0.0, "avg_logprob": -0.12110064954173808, "compression_ratio": 1.9453781512605042, "no_speech_prob": 9.97258484858321e-06}, {"id": 384, "seek": 263840, "start": 2662.1600000000003, "end": 2667.52, "text": " tutorial and tutorial two in the written tutorial goes through all of these steps", "tokens": [7073, 293, 7073, 732, 294, 264, 3720, 7073, 1709, 807, 439, 295, 613, 4439], "temperature": 0.0, "avg_logprob": -0.12110064954173808, "compression_ratio": 1.9453781512605042, "no_speech_prob": 9.97258484858321e-06}, {"id": 385, "seek": 266752, "start": 2667.52, "end": 2671.68, "text": " as this points out in the next part we're going to look at creating", "tokens": [382, 341, 2793, 484, 294, 264, 958, 644, 321, 434, 516, 281, 574, 412, 4084], "temperature": 0.0, "avg_logprob": -0.0900926703498477, "compression_ratio": 1.6837209302325582, "no_speech_prob": 2.976231371576432e-05}, {"id": 386, "seek": 266752, "start": 2671.68, "end": 2676.72, "text": " deleting and updating items and as you'll see it's going to just keep", "tokens": [48946, 293, 25113, 4754, 293, 382, 291, 603, 536, 309, 311, 516, 281, 445, 1066], "temperature": 0.0, "avg_logprob": -0.0900926703498477, "compression_ratio": 1.6837209302325582, "no_speech_prob": 2.976231371576432e-05}, {"id": 387, "seek": 266752, "start": 2676.72, "end": 2681.7599999999998, "text": " getting easier and easier and easier thanks very much for listening and of", "tokens": [1242, 3571, 293, 3571, 293, 3571, 3231, 588, 709, 337, 4764, 293, 295], "temperature": 0.0, "avg_logprob": -0.0900926703498477, "compression_ratio": 1.6837209302325582, "no_speech_prob": 2.976231371576432e-05}, {"id": 388, "seek": 266752, "start": 2681.7599999999998, "end": 2686.88, "text": " course feel free to leave comments either on my blog post or on YouTube with", "tokens": [1164, 841, 1737, 281, 1856, 3053, 2139, 322, 452, 6968, 2183, 420, 322, 3088, 365], "temperature": 0.0, "avg_logprob": -0.0900926703498477, "compression_ratio": 1.6837209302325582, "no_speech_prob": 2.976231371576432e-05}, {"id": 389, "seek": 268688, "start": 2686.88, "end": 2698.4, "text": " this video and let me know what you thought or if you have any questions", "tokens": [50364, 341, 960, 293, 718, 385, 458, 437, 291, 1194, 420, 498, 291, 362, 604, 1651, 50940], "temperature": 0.0, "avg_logprob": -0.22547475496927896, "compression_ratio": 1.0746268656716418, "no_speech_prob": 9.288802539231256e-05}], "language": "en"}