{"text": " Hello everyone, my name is Jonathan and today I'm going to be taking you through this stable diffusion deep dive notebook, looking into the code behind the kind of popular high level APIs and libraries and tools and so on to see what exactly does the generation process look like and how can we modify that? How do each of the individual components work? So feel free to run along with me. If you haven't before, this might take a little while to run just because it's downloading these large models if they aren't already downloaded and loading them up. And so we're going to start by just kind of recreating what it looks like to generate an image using say one of the existing pipelines and hugging face. So we're going to basically have copied the code from the core method of the default stable diffusion pipeline. And so if you go and view that here, you'll see that we're going to be basically replicating this code, but now we'll be doing it on our own sort of notebook and then we'll slowly understand what each of these different parts is doing. So we've got some setup, we've got some sort of loop running through a number of sampling time steps and we're generating an image. So this is supposed to be a watercolor picture of an otter. And it's very, very cool that this model can just do this. But now we want to know how does that actually work? What's going on? So the first component is the autoencoder. Now this stable diffusion is a latent diffusion model. And what that means is that it doesn't operate on pixels. It operates in the latent space of some other autoencoder model. In this case, a variational autoencoder that's been trained on a large number of images to compress them down into this latent representation and bring them back up again. So I have some functions to do that. We're going to look at what it's like in action, just downloading a picture from the internet, opening it up with PIL. So we have this 512 by 512 pixel image and we're going to load it in. And then we're going to use our function defined above to encode that into some latent representation. And what this is doing is calling the VAE.encode() method on a tensor version of the image. And that gives us a distribution. And so we're sampling from that distribution. And we're scaling by this because that's what the authors of the model did. They scale the latency down before they fit them to the model. And so we have to do that scaling and then the reverse when we decoding just to be consistent with that. But the key idea is that we go from this big image down to this 4 by 64 by 64 latent representation. So we've gone from this much larger image down. And if we visualize what the four channels here, this four different 64 by 64 channels, what that looks like, we'll see that it's capturing something of the image. You can sort of see the same shapes and things there, but it's not quite a direct mapping or anything. For example, there's this weirdness going on the beak. Some of the channels look slightly stranger than the others. So there's some sort of rich information captured there. And if we decode this back, what we'll see is that the decoded image looks really good. You really have to look closely to tell the difference between our input image here and the decoded version. So very, very impressive compression. This is a factor of 8 in each dimension. So 512 by 512 down to 64 by 64. It's like a factor of 64 reduction in data, but it's still somehow capturing most of that information. It's a very information rich representation. And this is going to be great because now we can work with that with our diffusion model and get nice high resolution results, even though we're only working with these 64 by 64 latents. Now, it doesn't have to be 64 by 64. You can go and modify this to say, what if this is 640? And encode that down and you'll see that it's just that same factor of 8 reduction. And there we go. Now we have 80 by 64. This just has to be a multiple of 8. Otherwise you'll get, I think, an error. OK, so we have our encoded version of this image and that's pretty great. The next component we're going to look at is the scheduler. And I'll look more closely at this later. But for now, we're going to focus on this idea of adding noise. So during training, we add some noise to an image and then the model tries to predict what that noise is. And we're going to do that to different amounts. So here we're going to recreate the same type of schedule. You can try different schedulers from the library. And these parameters here, beta start, beta end, beta schedule, that's how much noise was added at different time steps and how many time steps are used during training. For sampling, we don't want to have to do a thousand steps. So we can set a new number of time steps and then we'll see how these correspond with the scheduler.timeSteps attribute to the original training time steps. So here we're going to have 15 sampling steps and that's going to be equivalent to starting at time step 999 and just moving linearly down to time steps there. We can also look at the actual amount of noise present with the sigma's attribute. So again, starting high, moving down. And if you want to see what that schedule looks like, we can plot that here. And if you want to see the time steps, you'll see that it's just a linear relationship. So there we go. We're going to start at a very high noise value and we're going to slowly, slowly try and reduce this down until ideally we get an image out. Okay, so the sigma is the amount of noise added. Let's see what that looks like. So I'm going to start with some random noise that's the same shape as my latent representation, my encoded image. And then I'd like to be equivalent to sampling step 10 out of 15 here. So I'm going to go and look up what time step that equates to. And that's going to be one of the arguments that I pass to the scheduler.addNoise function. So I'm calling scheduler.addNoise, giving it my encoded image, the noise, and what time step I'd like to be noising equivalent to. And this is going to give me this noisy but still recognizable version of the image. And you can go and say, okay, what if I look at somewhere earlier in the process, right? Does it look more noisy? What about right at the beginning, right at the end? Feel free to play around there. Okay, so this adding noise, what are we actually doing? What does the code look like? Let's inspect the function. And you'll see that there's some setup for different types of argument and shapes. But the key line is just this noisy samples is equal to original samples plus the noise scaled by the sigma parameter. All right, so that's all it is. It's not always the same different papers and implementations will add the noise slightly differently. But in this case, that's all it's doing. So scheduler.addNoise, just adding noise that's the same shape as the latency scaled by the sigma parameter. Okay, so that's what we're doing. So if we want to start from random noise, instead of a noisy image, we're going to scale it by that same sigma value so that it looks the same as an image that's been scaled by that amount. But then before we feed that to the actual model, we then have to handle that scaling again. You could do it like this, but now we have this scale model input function associated with the scheduler just to hide that complexity away. Okay, so now we're going to look at the same kind of sampling loop as before. But we're going to start now with our image, we're going to take our encoded image, we're going to noise it to some time step, and then we only can denoise from there. So in code, we are now preparing our text and everything the same as before, which we'll look at. We setting our number of inference steps to 50, right? Number of inference steps is equal to 50 here. And we're saying I'd like to start at the equivalent of step 10 out of 50. So I'll look up what time step that equates to. I'll add noise to my image equivalent to that step. And then we're going to run through sampling, but this time we only going to start doing things once we get above that start step. So I'm going to ignore the first 10 out of 50 steps. And then beyond that, I'm now going to start with this noisy version of my input image. And I'm going to denoise it according to this prompt. And the hope here is that by starting from something that has some of the sort of rough structure and color of that input image, I can kind of fix that into my generation. But I've got a new prompt, a National Geographic photo of a colorful dancer. And here we go. We see this is the same sort of thing as the parrot. But now we have this completely different actual content thanks to a different prompt. And so that's a fun kind of use of this image to image process. You might have seen this for taking drawings, adding a bunch of noise, and then denoising them into fancy paintings and so on. So again, this is something that there's existing tools for this, right? The strength parameter and the image to image pipeline. That's just something like this. What step are we starting at? How many steps are we skipping? But you can see that this is a pretty powerful technique for getting a bit of extra control over composition and color and a bit of the structure. Okay, so that's that trick with adding noise and then using that as image to image. The next big section I'd like to look at is how do we go from a piece of text that describes what we want into a numerical representation that we can feed to the model. So we're going to trace out that pipeline. And along the way, we'll see how we can modify that for a bit of fun. So step number one, we're taking our prompt and we're turning it into a sequence of discrete tokens. So here we have, in this case, 77, because that's the maximum length. Discrete tokens, it's always going to be that if your prompt is longer, it'll truncate it. And if we decode these tokens back, we'll see that we have a special token for the start of the text, then a picture of a puppy. And then the rest is all the same token, which is this kind of end of text padding token. Right, so we have this special token for puppy. This special token has its own meaning, end of text. And the prompts are always going to be padded to be the same length. So before, in the code that we were using there, we always jump straight to these so-called output embeddings, which is what we fed to the model as conditioning. And so somehow this captures some information about this prompt. But now we want to say, well, how do we get there? How do we get from this sequence of tokens to these output embeddings? What is this text encoder forward pass doing? Right, so we can look at this and there's going to be multiple steps. The first is going to be some embeddings. So if we look at the text encoder.textmodel.embeddings, we'll see there's a couple of different ones. We have token embeddings. Right. So this is to take those individual tokens, token 49408 or whatever, and map it into a representation that's a numerical representation. So here it's a learned embedding. There are seven, sorry, about 50,000 rows, one for each token. And for each token, we have 768 values. So that's the embedding of that token. And if we want to feed one in and see what the embedding looks like, here's the token for puppy and here's the token embedding. Right, 768 numbers. They somehow capture that meaning of that token on its own. And we can do the same for all of the tokens in our prompt. So we feed them through this token embedding layer. And now we get 77, 768 dimensional representations of this, of each token. Now, these are all on their own. No matter where in the sentence it is, the token embedding will be the same. So the next step is to add some positional information. Some models will do this with some kind of like learned pattern of positioning. But in this case, the positional embedding is just another learned embedding. But now instead of having one embedding for every token, we have one embedding for every position out of all 77 possible positions. And so just like we did for the tokens, we can feed in the position IDs, one for every possible position, and we'll get back out an embedding for every position in the prompt. Combining them together, there's again multiple ways people do this in the literature. But in this case, it's as simple as adding them. That's why they made them the same shape, so that you can just add the two together. And now these input embeddings have some information related to the token and some related to the position. So, so far, we haven't seen any big model, just two learned embeddings. But this is getting everything ready to feed through that model. And so we can check that this is the same as if we just called the embeddings layer of that model, which is going to do both of those steps at once. But we'll see just now why we want to separate that out into individual ones. Okay, so we have these individual tokens, and they have some positional information. We have these final embeddings. Now we'd like to turn them into something that has a richer representation, thanks to some big transformer model. And so we're going to feed these through, and I made this little diagram here. Each token is going to turn into a token embedding, get combined with the positional embedding, and then it's going to get fed through this transformer encoder, which is just a stack of these blocks. And so each block has some magic like attention, has some feed forward components, there's additions and normalizations and skips and so on as well. But we're going to have some number of these blocks all stacked together, and the outputs of each one get fed into the next block and so on, until we get our final set of hidden states. These encoder hidden states, aka the output embeddings, and this is what we feed to our unit to make its predictions. So the way we get this, I just copied the textencoder.textmodel.forward method, pulled out the relevant bits. We are going to take in those input embeddings, combined positional and token embeddings, and we're going to feed that through the textmodel.encoder function with some additional parameters around attention masking and telling it that we'd like to output the hidden states rather than the final outputs. So if we run this, we can just double check. These embeddings are going to look just like the output embeddings we saw right at the beginning. So we've taken that one step, tokens to output embeddings, and we've broken it down into this number of smaller steps where we have tokenization, getting our token embeddings, starting with position embeddings, feeding it through the model, and then that gives us those final outputs. So why have we gone through this trouble? Well, there's a couple of things we can do. One demoed here, I'm getting the token embeddings, but then I'm looking up where is the token for Puppy, and I'm going to replace it with a new set of embeddings. And this is going to be another just learned embedding of this particular token here, 2368. So I'm kind of cutting out the token embedding for Puppy, slipping in this new set of token embeddings, and I'm going to get some output embeddings, which at the start look very similar to the previous ones, in fact, identical. But as soon as you get past the position of Puppy in that prompt, you're going to see that the rest have changed. So we've somehow messed with these embeddings by slipping in this new token embedding right at the start. And if we generate with those embeddings, which is what this function is doing, we should see something other than a Puppy. And sure enough, drum roll, we don't. We get a cat. And so now you know what token 2368 means. We've managed to slip in a new token embedding and get a different image. Okay, what can we do with this? Why is this fun? Well, a couple of tricks. First off, we could look up the token embedding for Skunk, right, which is this number here. And then instead of now just replacing that in place of Puppy, what if I make a new token embedding that's some combination of the embedding of Puppy and the embedding of Skunk, right? So I'm taking these two token embeddings, I'm just averaging them, and I'm inserting them into my set of token embeddings for my prompt in place of just the word Puppy. And so hopefully when we generate with this, we get something that looks a bit like a Puppy, a bit like a Skunk. And this doesn't work all the time, but it's pretty cute when it does. There we go, Puppy-Skunk hybrid. Okay, so that's not the real reason we're looking at this. The main application at the moment of being able to mess with these token embeddings is to be able to do something called textual inversion. So in textual inversion, we're going to have our prompt tokenizer and so on. But here we're going to have a special learned embedding for some new concept, right? And so the way that's trained is it's going to be outside of the scope of this notebook, but there's a good blog post and community notebooks and things for doing that. But let's just see this in application here. So there's a whole library of these concepts, stable diffusion concept library, where you can browse through tons and tons and tons, look over 1,400 different community contributed token embeddings that people have trained. So I'm going to use this one here, this bird style. Here's some example outputs. And then these are the images it was trained on. So these pretty little bird paintings done by my mother. I've trained a new token embedding that tries to capture the essence of the style. And that's represented here in this learned embeds.bin. So if you download this and then upload it to wherever your notebook's running, I have it here, learned embeds.bin. We can load that in and you'll see that it's just a dictionary where we have one key, that's the name of my new style. And then we have this token embedding, 768 numbers. And so now instead of slipping in the token embedding for cat, we're going to slip in this new embedding, which we've loaded from the file into this prompt. So mouse in the style of puppy, tokenize, get my token embeddings. And then I'm going to slip in this replacement embedding in place of the embedding for puppy. And when we generate with that, we should hopefully get a mouse in the style of this kind of cutesy watercolor on rough paper image. And sure enough, that's what we get, very cute little drawing of a mouse in an apron, apparently. Okay, so very, very cool application. Again, there's a nice inference notebook that makes this really easy. You can say a cat toy in the style of bird style. You don't have to worry about manually replacing the token embeddings yourself. But it's good to know what the code looks like under the hood, right? How are we doing that? What stage of the text embedding process we're modifying. Very fun to get a bit of extra control and a very useful technique because now we can kind of augment our models vocabulary without having to actually retrain the model itself. We just learning a new token embedding. So very, very powerful idea and really fun to play with. And like I said, there's thousands of community contribute contributed tokens, but you can also train your own. I think I linked the notebook from here, but it's also in all the docs and so on. Here's the training notebook. Okay, final little trick with embeddings. Rather than messing with them at the token embedding level, we can push the whole prompt through that entire process to get our final output embeddings. And we can mess with those at that stage as well. So here I have two prompts, a mouse and a leopard, tokenizing them, encoding them with the text encoder. So that's that whole process. And these final output embeddings, I'm just going to mix them together according to some factor and generate with that. And so you can try this with, you know, a cat and a snake. And you should be able to get some really fun different chimeras and oops, a snail apparently. Okay, well, I can't spell. But yeah, have fun with that. Doesn't have to be animals. I'd love to see what you create with these weird mixed up generations. Okay, we should look at the actual model itself. The key unit model, the diffusion model. What is it doing? What is it predicting? What is it accepting as arguments? So this is the kind of call signature. We call our units forward pass and we feed in a noisy latency, the time step. And that's like the training time step and the encoder hidden states, right? So those text embeddings that we've just been having fun with. So doing that without any loops or anything, I'm sitting in my scheduler, getting my time step, getting my noisy latent and my text embeddings. And then we're going to get our model prediction and you'll look at the shape of that and you'll see that this prediction has the same shape as the latency. And given these noisy latents, what the model is predicting is the noise component of that. And actually is predicting the noise component scaled by sigma. So if we wanted to see what the original image looks like, we could say, well, the denoise latency is going to be the current noisy latency minus sigma times the model prediction. And so when we denoising, we're not going to go straight to that upward prediction. We're going to just remove a little bit of the noise at a time, but it might be useful to visualize what that final prediction looks like. So that's what we're doing here, making a folder to store some images, preparing our text scheduler and input. And then we're going to do this loop, but now we're going to get the model prediction. And instead of just updating our latency by one step, we're also going to store an image and decoding these two images, an image of the predicted completely denoised, like original sample. So that's this predicted original sample here. You could also calculate this yourself. Latency Xero is equal to the current latency minus sigma times the noise prediction. So those two should work equivalently, but this loop is going to run and it's going to save those images to the steps folder, which we can then visualize. And so once this finishes in a second or two, on the left, we're going to see the kind of noisy input to the model at each stage. And on the right, we're going to see the noisy inputs minus the noise prediction, right? So the denoised version. And so we'll just give it a second or two to run. It's taking a little bit longer because it's decoding those images each time, saving them. But once this finishes, we should have a nice little preview video. OK here we go. So this is the noisy latent. And if we take the model's noise prediction and subtract it from that, we get this very blurry output. And so you'll see as we play this, oh, I've left some modifications in from last time. Sorry. So as you see, this guidance scale will be back at, I think it was eight. In the next section, we'll talk about classifying free guidance. And so I've been modifying that example. My bad. I might cut this out of the video. We'll see. So I've got to wait a few seconds again for that to generate. And I'll do so as patiently as I can. OK, so here we go again, the noisy input, the predicted denoise version. And you can see at the start, it's very blurry, but over time, it gradually converges on our final output. And you'll notice that on the left, these are the latents as they are each step. They don't change particularly drastically, a little bit at a time. But at the start, when the model doesn't have much to go on, its predictions do change quite a bit at each step. It's much less well-defined. And then as we go forward in time, it gets more and more refined, better and better predictions. And so it's got a more accurate estimation of the noise to remove and we remove that noise gradually until we finally get our output. Quite fun to visualize the process. And hopefully that helps you understand why we don't just make one prediction and do it in one step, right, because we get this very blurry mess. But instead, we do this kind of iterative sampling there, which we'll talk about very shortly. Before then, though, the final thing I should mention, classifier-free guidance. What is that? Well, like you saw when I accidentally generated the version with a much lower guidance scale, the way classifier-free guidance works is that in all of these loops, we haven't actually been passing one set of noisy latents through the model. We've been passing two identical versions. And as our text embeddings, we've not just been passing the embeddings of our prompts, right, these ones here, we've been concatenating them with some unconditional embeddings as well. And what the unconditional embeddings are is just a blank prompt, right? No text whatsoever. So just all padding, passing that through. So when we get our predictions here, we've given in two sets of latency and two sets of text embeddings, we're going to get out two predictions for the noise. So we're splitting that apart, one prediction for the unconditional, like no prompt version, and one for the prediction based on the prompt. And so what we can do now is we can say, well, my final prediction is going to be the unconditional version plus the guidance scale times the difference, right? So if you think about it, if I predict without the noise, I'm predicting here. If I predict with the noise, sorry, with the text encoding, with the prompt, I get this prediction instead. And I'd like to move more in that direction. I'd like to push it even further towards the prompt version and beyond. So this guidance scale can be larger than one to push it even more in that direction. And this, it turns out, is kind of key for getting it to follow the prompt nicely. And I think it was first brought up in the glide paper. AI Coffee Break on YouTube has a great video on that. But yeah, really useful trick or really neat hack, depending on who you talk to. But it does seem to work. And the higher the guidance scale, the more the model will try and look like the prompts kind of in the extreme versus that lower guidance scale. It might just try and look like a generic good picture. Okay, we've been hiding away some complexity in terms of this scheduler.step function. So I think we're going to step away from the notebook now and scribble a bit on some paper to try and explain exactly what's going on with sampling and so on. And then we'll come back to the notebook for one final trick. All right, so here's my take on sampling. And to start with, I'd like you to imagine the space of all possible images. So this is a very large high dimensional space for 256 by 256 by three image that is 200,000 dimensional. And my paper, unfortunately, is only two dimensional. So we're going to have to squish this down a fair bit and use our imagination. Now if you just look at a random point in this space, this is most likely not going to look like anything recognizable. It'll probably just look like garbled noise. But if we map an image into the space, we'll see that it has some sort of fixed point and a very similar image, almost pixel equivalent, it's going to be very close by. Now there's this theory that you'll hear talked about called manifold theory, which says that for most real images, like a data set of images, these are going to lie on some lower dimensional manifold within this higher dimensional space. In other words, if we map a whole bunch of images into the space, they're not going to fill the whole space. They're going to be kind of clustered onto some surface. Now I've drawn it as a line here because we stuck with 2D, but this is a much higher dimensional plane equivalent. OK, so each of these ones here is some image. And the reason that I'm starting with this is because we'd like to generate images, we'd like to generate plausible looking images, not just random nonsense. And so we'd like to do that with diffusion models. So where did they come in? Well, we can start with some image here, some real image from our training data, and we can push it away from the manifold of plausible existing images by corrupting it somehow. So for example, just adding random noise, that's equivalent to moving in some random direction in the space of all possible images. And so that's going to push the image away. And then we can try and predict using some model what this noise looks like. How do I go from here back to a plausible image? What is this noise that's been added? And so that's going to be our big unit that does that prediction. That's going to be our diffusion model. And so that's, in its language, going to be called something like a score function. How do I get from wherever I am? What's the noise that I need to remove to get back to a plausible image? OK, so that's all well and good. We can train this model with a number of examples because we can just take our training data, add some random noise, try and predict the noise, update our model parameters. So we can hopefully learn that function fairly well. Now we'd like to generate with this model. So how do we do that? Well, we can start at some random point. Like let's start over here. And you might think, well, surely I can just now predict the noise, remove that, and then I get my output image. And that's great, except that you've got to remember now we're starting from a random point in the space of all possible images. It just looks like garbled nonsense. And the model's trying to say, well, what does the noise look like? And so you can imagine here for training, the further away we get from our examples, the sparser our training will have been. But also it's not like it's very obvious how we got to this noisy version. We could have come from this image over here, added a bunch of noise. We could have come from one over here, one over here. And so this model's not going to be able to make a perfect prediction. At best it might say, well, somewhere in that direction. It could point towards something like the data set mean, or at least the edge that's closer. But it's not going to be able to perfectly give you one nice solution. And sure enough, that's what we see. If we sample diffusion models in one step, we get the predictions, look at what that corresponds to as an image. It's just going to look like a blurry mess, maybe like the mean of the data or some sort of garbled output. Really not going to look like a nice image. So how do we do better? And the idea of sampling is to say, well, there's a couple of framings. So I'll start with the existing framing that you'll see talked about a lot of score-based models and so on. And then we'll talk about some other ways to think about it as well. So this process of gradually corrupting our images away, adding a little bit of noise at a time, people like to talk of this as a stochastic differential equation. Stochastic because it's some randomness, we're picking random amounts of noise, random directions to add. And a differential equation because it's not talking about anything absolute, just how we should change this from moment to moment to get more and more corrupted. So that's why it's a differential equation. And with that framing, the question of, well, how do I go now back to the image, that's framed as solving an ordinary differential equation that corresponds to the reverse of this process. Now, you can't solve ODEs in a single step, but you can find an approximate solution. And the more sort of sub-steps you take, the better your approximation. And so that's what these samples are doing, given like, okay, we said this image over here, because my prediction, rather than moving the whole way there in one go, will remove some of that noise, do a little update, and then we'll get a new prediction. And so maybe now the prediction is slightly better. It says up here. So we move a little bit in that direction. And now it makes an even better prediction, because as we get closer to the manifold, as we have less and less noise and more and more of some image emerging, the model is able to get more and more accurate predictions. And so in some sort of number of steps, we divide up this process and we get closer and closer and closer until we ideally find some image that looks very plausible as our output. And so that's what we're doing here with a lot of these samples. We're effectively trying to solve this ODE in some number of steps by breaking the process up and only moving a small amount at a time. Now you get sort of first order solvers, right, where all we're doing is just linearly moving within each one. And this is equivalent to something called Euler's method or Euler's method, if you're like me and you've only ever read it. And this is what some of the most basic samples are doing, just linear approximations for each of these little steps. But you also get additional approaches. So for example, maybe if we were to make a prediction from here, it might look like something like this. And if we were to make a prediction from here, it might look like something like that. So we have our error here, but as we move in that direction, it's also changing, right? So there's like a derivative of a derivative, a gradient of a gradient. And that's where this second order solver comes in and says, well, if I know how this prediction changes as I move in this direction, like what is the derivative of it? Then I can kind of account for that curvature when I make my update step and maybe know that it's going to curve a bit in that direction. And so that's where we get things like these so-called second order solvers and higher order solvers. The upside of this is that we can get, you know, do a larger step at a time because we have a more accurate prediction. We're not just doing a first order linear approximation. We have this kind of curvature taken into account. The downside is that to estimate that curvature for a given point, we might need to call our model multiple times to get multiple estimates. And so that takes time. So we can take a larger step, but we need more model evaluations per step. A kind of hybrid approach is to say, well, rather than trying to estimate the curvature here, I might just take a linear step, look at the next prediction, but I'll keep a history of my previous steps. And so then over here, it predicts like this. So I have now this history and I'm going to use that to better guess what this trajectory is. So I might keep a history of the past three or four or five predictions and know that since they're quite close to each other, maybe that tells me some information about the curvature here and I can use that to, again, take larger steps. And so that's what we see the so-called linear multi-step sampling coming in, just keeping this buffer of past predictions to try and do a better job estimating than the simple one step linear type first order solvers. OK, so that's the score based sampling version. And all of the variance and innovation comes down to things like, how can we do this in as few steps as possible? Maybe we have a schedule that says we take larger steps at first and then gradually smaller steps as we get closer. There's, I think, now some dynamic methods and can we estimate how many steps we need to take and so on. So that's all trying to attack it from this kind of score based ODE solving framework. But there's another way to think of this as well. And that's to say, OK, well, I don't really care about solving this exact reverse ODE. All I care about is that I end up with an image that's on this manifold, like a plausible looking image. And so I have a model that estimates how much noise there is. And if that noise is very small, then that means I've got a good image. And if that noise is really large, then that means I've got some work to do. And so this kind of starts bringing up some analogies to training neural networks, because in neural networks, we have the space of all possible parameters. And we're trying to adjust those parameters not to solve the gradient flow equation, right, although that's possible in theory, that you might try and do that. We don't care about that. We just want to find the minima. We want to find a point where our loss is really good. And so when we're training a neural network, that's exactly what we do. We set up an optimizer. We take some number of steps trying to reduce some loss. And once that loss gets sort of, you know, levels off, right, reduce over time levels off, OK, cool. I guess we found a good neural network. And so we can apply that same kind of thinking here to say, all right, I'll start at some point and I'll have an estimate of the gradient, right? It's like maybe pointing over here. But remember, that estimate is not very good, just like the first gradients estimated when training a neural network are pretty bad, because it's all just these randomly initialized weights, but hopefully at least points in a useful direction. So then I'll take some step and the length of the step, I won't try and do some fancy schedule. I'll just offload this to an off the shelf optimizer. So I have some learning rate, maybe something like momentum that determines how big of a step I take. And then I update my prediction, right, take another step in that direction and so on. So now instead of following a fixed schedule, we can use tricks that have been developed for training neural networks, right? Kind of learning rates, momentum, weight decay, and so on. And we can apply them back to this kind of sampling case. And so it turns out this works. Okay, I've tried this for stable diffusion, need some tricks to get it working. But it's a slightly different way of thinking about sampling rather than relying on sort of a hard coded ODE solver that you figured out yourself, just saying, why don't we treat this like an optimization problem, where if the model predicts almost no noise, that's good, we're doing a good job. And if the model predicts lots of noise, then we can use that as a gradient and take a gradient update step according to our optimizer and try and sort of converge on a good image as our output. And this is, you know, you can stop early once your model prediction is sufficiently low for the amount of noise. Okay, cool, I'm done. And so I found, you know, in 10, 15 steps, you can get some pretty good images out. Yeah, so that's a different way of viewing it. Not so popular at the moment, but maybe hopefully something we'll see. Yeah, just a different framing. And for me, at least that helps me think about what we're actually doing with these samplers. We're trying to find a point where the model predicts very little noise. So we're starting from a bad prediction, moving towards it getting better by looking at this estimated amount of noise as our sort of gradient and solving that, just kind of iteratively removing bits at a time. So I hope that helps elucidate the different kinds of samplers and the goal of that whole thing and also illustrate at least why we don't just do this in a single step, right? Why we need some sort of iterative approach. Otherwise, we'd end up with just very bad blurry predictions. All right, I hope that helps. Now we're going to head back to the notebook to talk about our final trick of guidance. Okay, the final part of this notebook, guidance. How do we add some extra control to this generation process? Right, so we already have control via the text and we've seen how we can modify those embeddings. We have some control via starting at a noisy version of an input image rather than pure noise to kind of control the structure. But what if there's something else? What if we'd like a particular style or to enforce that the model looks like some input image or maybe sticks to some color palette? It would be nice to have some way to add this additional control. And so the way we do this is to look at some loss function on the decoded denoised predicted image, right? The predicted denoise needs final output and use that loss to then update the noisy latency as we generate in a direction that tries to reduce that loss. So for demo, we're going to make a very simple loss function. I would like the image to be quite blue. And to enforce that, my error is going to be the difference between the blue channel, right? Red, green, blue. Blue is the third channel of the color channels and the difference between the blue channel and 0.9. So the closer all the blue values are to 0.9, the lower my error will be. So that's going to be my kind of guidance loss. And then during sampling here, what I'm going to do, everything's going to be the same as before. But every few iterations, you could do it every iteration, but that's a little slow. So here, every five iterations, I'm going to set requires grad equals true on the latency. I'm then going to compute my predicted denoised version. I'm going to decode that into image space. And then I'm going to calculate my loss using my special blue loss and scale it with some scaling factor. Then I'm going to use torch to find the gradient of this loss with respect to those latents, those noisy latents. And I'm going to modify them, right? And I want to reduce the loss. I'm going to subtract here this gradient multiplied by sigma squared because we're going to be working at different noise levels. And so if we run this, we should see hopefully it's going to do that same sort of sampling process as before. But we also are occasionally modifying our latency by looking at the gradient of the loss with respect to those latents and updating them in a direction that reduces that loss. And sure enough, we get a very nice blue picture out. And if I change the scale here down to something lower and run it, we'll see that scale is lower so the loss is lower. So our modifications to the latency are smaller. We'll see that we get out a much less blue image. There we go. So that's the default image, very red and dark because the prompt is just a picture of a campfire. But as soon as we add our additional loss, our guidance, we're going to get out something that better matches that additional constraint that we've imposed. Right. So this is very useful, not just for making your images blue, but like I said, color palettes or using some classifier model to make it look like a specific class of image or using a model like clip to again, associate it with some text. So lots and lots of different things you can do. Now a few things I should note. One, we decoding the image back to image space, calculating a loss and then tracing back. That's very computationally intensive compared to just working in latent space. And so we can do that only every fifth operation to reduce the time, but it's still as much slower than just your generic sampling. And then also, we're actually still cheating a little bit here because what we should do is set requires grad equals true on the latents and then use those to make our noise prediction. Use that to calculate the denoised version and decode that, calculate a loss and trace back all the way through the decoder and the process and the unit back to the latents. The reason I'm not doing that is because that takes a lot of memory. So you'll see, for example, like the clip guided diffusion notebook from the hugging face examples, they do it that way, but they have to use tricks like gradient checkpointing and so on to kind of keep the RAM usage under control. For simple losses, it works fine to do it this way because now we just tracing back through denoise, latency is equal to latency minus sigma times this noise prediction. So we don't have to trace any gradients back through the unit. But if you wanted to get more accurate gradients, maybe it's not working as well as you'd hoped. You can do it that other way that I described. But however you do it, very, very powerful technique, fun to be able to, again, inject some additional control into this generation process by crafting a loss that expresses exactly what you'd like to see. All right, that's the end of the notebook for now. If you have any questions, feel free to reach out to me. I'll be in the forums and you can find me on Twitter and so on. But for now, enjoy and I can't wait to see what you make.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 6.92, "text": " Hello everyone, my name is Jonathan and today I'm going to be taking you through this stable", "tokens": [2425, 1518, 11, 452, 1315, 307, 15471, 293, 965, 286, 478, 516, 281, 312, 1940, 291, 807, 341, 8351], "temperature": 0.0, "avg_logprob": -0.1759272865627123, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.05822741240262985}, {"id": 1, "seek": 0, "start": 6.92, "end": 13.96, "text": " diffusion deep dive notebook, looking into the code behind the kind of popular high level", "tokens": [25242, 2452, 9192, 21060, 11, 1237, 666, 264, 3089, 2261, 264, 733, 295, 3743, 1090, 1496], "temperature": 0.0, "avg_logprob": -0.1759272865627123, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.05822741240262985}, {"id": 2, "seek": 0, "start": 13.96, "end": 18.38, "text": " APIs and libraries and tools and so on to see what exactly does the generation process", "tokens": [21445, 293, 15148, 293, 3873, 293, 370, 322, 281, 536, 437, 2293, 775, 264, 5125, 1399], "temperature": 0.0, "avg_logprob": -0.1759272865627123, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.05822741240262985}, {"id": 3, "seek": 0, "start": 18.38, "end": 20.6, "text": " look like and how can we modify that?", "tokens": [574, 411, 293, 577, 393, 321, 16927, 300, 30], "temperature": 0.0, "avg_logprob": -0.1759272865627123, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.05822741240262985}, {"id": 4, "seek": 0, "start": 20.6, "end": 23.68, "text": " How do each of the individual components work?", "tokens": [1012, 360, 1184, 295, 264, 2609, 6677, 589, 30], "temperature": 0.0, "avg_logprob": -0.1759272865627123, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.05822741240262985}, {"id": 5, "seek": 0, "start": 23.68, "end": 26.36, "text": " So feel free to run along with me.", "tokens": [407, 841, 1737, 281, 1190, 2051, 365, 385, 13], "temperature": 0.0, "avg_logprob": -0.1759272865627123, "compression_ratio": 1.5136186770428015, "no_speech_prob": 0.05822741240262985}, {"id": 6, "seek": 2636, "start": 26.36, "end": 30.28, "text": " If you haven't before, this might take a little while to run just because it's downloading", "tokens": [759, 291, 2378, 380, 949, 11, 341, 1062, 747, 257, 707, 1339, 281, 1190, 445, 570, 309, 311, 32529], "temperature": 0.0, "avg_logprob": -0.07641859977476058, "compression_ratio": 1.7876712328767124, "no_speech_prob": 6.909885996719822e-05}, {"id": 7, "seek": 2636, "start": 30.28, "end": 34.26, "text": " these large models if they aren't already downloaded and loading them up.", "tokens": [613, 2416, 5245, 498, 436, 3212, 380, 1217, 21748, 293, 15114, 552, 493, 13], "temperature": 0.0, "avg_logprob": -0.07641859977476058, "compression_ratio": 1.7876712328767124, "no_speech_prob": 6.909885996719822e-05}, {"id": 8, "seek": 2636, "start": 34.26, "end": 38.12, "text": " And so we're going to start by just kind of recreating what it looks like to generate", "tokens": [400, 370, 321, 434, 516, 281, 722, 538, 445, 733, 295, 850, 44613, 437, 309, 1542, 411, 281, 8460], "temperature": 0.0, "avg_logprob": -0.07641859977476058, "compression_ratio": 1.7876712328767124, "no_speech_prob": 6.909885996719822e-05}, {"id": 9, "seek": 2636, "start": 38.12, "end": 42.379999999999995, "text": " an image using say one of the existing pipelines and hugging face.", "tokens": [364, 3256, 1228, 584, 472, 295, 264, 6741, 40168, 293, 41706, 1851, 13], "temperature": 0.0, "avg_logprob": -0.07641859977476058, "compression_ratio": 1.7876712328767124, "no_speech_prob": 6.909885996719822e-05}, {"id": 10, "seek": 2636, "start": 42.379999999999995, "end": 47.22, "text": " So we're going to basically have copied the code from the core method of the default stable", "tokens": [407, 321, 434, 516, 281, 1936, 362, 25365, 264, 3089, 490, 264, 4965, 3170, 295, 264, 7576, 8351], "temperature": 0.0, "avg_logprob": -0.07641859977476058, "compression_ratio": 1.7876712328767124, "no_speech_prob": 6.909885996719822e-05}, {"id": 11, "seek": 2636, "start": 47.22, "end": 48.6, "text": " diffusion pipeline.", "tokens": [25242, 15517, 13], "temperature": 0.0, "avg_logprob": -0.07641859977476058, "compression_ratio": 1.7876712328767124, "no_speech_prob": 6.909885996719822e-05}, {"id": 12, "seek": 2636, "start": 48.6, "end": 52.6, "text": " And so if you go and view that here, you'll see that we're going to be basically replicating", "tokens": [400, 370, 498, 291, 352, 293, 1910, 300, 510, 11, 291, 603, 536, 300, 321, 434, 516, 281, 312, 1936, 3248, 30541], "temperature": 0.0, "avg_logprob": -0.07641859977476058, "compression_ratio": 1.7876712328767124, "no_speech_prob": 6.909885996719822e-05}, {"id": 13, "seek": 5260, "start": 52.6, "end": 59.52, "text": " this code, but now we'll be doing it on our own sort of notebook and then we'll slowly", "tokens": [341, 3089, 11, 457, 586, 321, 603, 312, 884, 309, 322, 527, 1065, 1333, 295, 21060, 293, 550, 321, 603, 5692], "temperature": 0.0, "avg_logprob": -0.15441125981947956, "compression_ratio": 1.6866666666666668, "no_speech_prob": 7.88769557402702e-06}, {"id": 14, "seek": 5260, "start": 59.52, "end": 61.74, "text": " understand what each of these different parts is doing.", "tokens": [1223, 437, 1184, 295, 613, 819, 3166, 307, 884, 13], "temperature": 0.0, "avg_logprob": -0.15441125981947956, "compression_ratio": 1.6866666666666668, "no_speech_prob": 7.88769557402702e-06}, {"id": 15, "seek": 5260, "start": 61.74, "end": 65.16, "text": " So we've got some setup, we've got some sort of loop running through a number of sampling", "tokens": [407, 321, 600, 658, 512, 8657, 11, 321, 600, 658, 512, 1333, 295, 6367, 2614, 807, 257, 1230, 295, 21179], "temperature": 0.0, "avg_logprob": -0.15441125981947956, "compression_ratio": 1.6866666666666668, "no_speech_prob": 7.88769557402702e-06}, {"id": 16, "seek": 5260, "start": 65.16, "end": 67.64, "text": " time steps and we're generating an image.", "tokens": [565, 4439, 293, 321, 434, 17746, 364, 3256, 13], "temperature": 0.0, "avg_logprob": -0.15441125981947956, "compression_ratio": 1.6866666666666668, "no_speech_prob": 7.88769557402702e-06}, {"id": 17, "seek": 5260, "start": 67.64, "end": 71.12, "text": " So this is supposed to be a watercolor picture of an otter.", "tokens": [407, 341, 307, 3442, 281, 312, 257, 31727, 3036, 295, 364, 4337, 391, 13], "temperature": 0.0, "avg_logprob": -0.15441125981947956, "compression_ratio": 1.6866666666666668, "no_speech_prob": 7.88769557402702e-06}, {"id": 18, "seek": 5260, "start": 71.12, "end": 73.8, "text": " And it's very, very cool that this model can just do this.", "tokens": [400, 309, 311, 588, 11, 588, 1627, 300, 341, 2316, 393, 445, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.15441125981947956, "compression_ratio": 1.6866666666666668, "no_speech_prob": 7.88769557402702e-06}, {"id": 19, "seek": 5260, "start": 73.8, "end": 76.0, "text": " But now we want to know how does that actually work?", "tokens": [583, 586, 321, 528, 281, 458, 577, 775, 300, 767, 589, 30], "temperature": 0.0, "avg_logprob": -0.15441125981947956, "compression_ratio": 1.6866666666666668, "no_speech_prob": 7.88769557402702e-06}, {"id": 20, "seek": 5260, "start": 76.0, "end": 77.44, "text": " What's going on?", "tokens": [708, 311, 516, 322, 30], "temperature": 0.0, "avg_logprob": -0.15441125981947956, "compression_ratio": 1.6866666666666668, "no_speech_prob": 7.88769557402702e-06}, {"id": 21, "seek": 5260, "start": 77.44, "end": 80.08, "text": " So the first component is the autoencoder.", "tokens": [407, 264, 700, 6542, 307, 264, 8399, 22660, 19866, 13], "temperature": 0.0, "avg_logprob": -0.15441125981947956, "compression_ratio": 1.6866666666666668, "no_speech_prob": 7.88769557402702e-06}, {"id": 22, "seek": 8008, "start": 80.08, "end": 83.16, "text": " Now this stable diffusion is a latent diffusion model.", "tokens": [823, 341, 8351, 25242, 307, 257, 48994, 25242, 2316, 13], "temperature": 0.0, "avg_logprob": -0.11825376045046829, "compression_ratio": 1.7003367003367003, "no_speech_prob": 2.994229589603492e-06}, {"id": 23, "seek": 8008, "start": 83.16, "end": 85.52, "text": " And what that means is that it doesn't operate on pixels.", "tokens": [400, 437, 300, 1355, 307, 300, 309, 1177, 380, 9651, 322, 18668, 13], "temperature": 0.0, "avg_logprob": -0.11825376045046829, "compression_ratio": 1.7003367003367003, "no_speech_prob": 2.994229589603492e-06}, {"id": 24, "seek": 8008, "start": 85.52, "end": 90.24, "text": " It operates in the latent space of some other autoencoder model.", "tokens": [467, 22577, 294, 264, 48994, 1901, 295, 512, 661, 8399, 22660, 19866, 2316, 13], "temperature": 0.0, "avg_logprob": -0.11825376045046829, "compression_ratio": 1.7003367003367003, "no_speech_prob": 2.994229589603492e-06}, {"id": 25, "seek": 8008, "start": 90.24, "end": 94.64, "text": " In this case, a variational autoencoder that's been trained on a large number of images to", "tokens": [682, 341, 1389, 11, 257, 3034, 1478, 8399, 22660, 19866, 300, 311, 668, 8895, 322, 257, 2416, 1230, 295, 5267, 281], "temperature": 0.0, "avg_logprob": -0.11825376045046829, "compression_ratio": 1.7003367003367003, "no_speech_prob": 2.994229589603492e-06}, {"id": 26, "seek": 8008, "start": 94.64, "end": 98.5, "text": " compress them down into this latent representation and bring them back up again.", "tokens": [14778, 552, 760, 666, 341, 48994, 10290, 293, 1565, 552, 646, 493, 797, 13], "temperature": 0.0, "avg_logprob": -0.11825376045046829, "compression_ratio": 1.7003367003367003, "no_speech_prob": 2.994229589603492e-06}, {"id": 27, "seek": 8008, "start": 98.5, "end": 100.28, "text": " So I have some functions to do that.", "tokens": [407, 286, 362, 512, 6828, 281, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.11825376045046829, "compression_ratio": 1.7003367003367003, "no_speech_prob": 2.994229589603492e-06}, {"id": 28, "seek": 8008, "start": 100.28, "end": 104.96, "text": " We're going to look at what it's like in action, just downloading a picture from the internet,", "tokens": [492, 434, 516, 281, 574, 412, 437, 309, 311, 411, 294, 3069, 11, 445, 32529, 257, 3036, 490, 264, 4705, 11], "temperature": 0.0, "avg_logprob": -0.11825376045046829, "compression_ratio": 1.7003367003367003, "no_speech_prob": 2.994229589603492e-06}, {"id": 29, "seek": 8008, "start": 104.96, "end": 106.42, "text": " opening it up with PIL.", "tokens": [5193, 309, 493, 365, 430, 4620, 13], "temperature": 0.0, "avg_logprob": -0.11825376045046829, "compression_ratio": 1.7003367003367003, "no_speech_prob": 2.994229589603492e-06}, {"id": 30, "seek": 10642, "start": 106.42, "end": 112.16, "text": " So we have this 512 by 512 pixel image and we're going to load it in.", "tokens": [407, 321, 362, 341, 1025, 4762, 538, 1025, 4762, 19261, 3256, 293, 321, 434, 516, 281, 3677, 309, 294, 13], "temperature": 0.0, "avg_logprob": -0.15161358642578124, "compression_ratio": 1.8022388059701493, "no_speech_prob": 2.0577454051817767e-06}, {"id": 31, "seek": 10642, "start": 112.16, "end": 116.96000000000001, "text": " And then we're going to use our function defined above to encode that into some latent representation.", "tokens": [400, 550, 321, 434, 516, 281, 764, 527, 2445, 7642, 3673, 281, 2058, 1429, 300, 666, 512, 48994, 10290, 13], "temperature": 0.0, "avg_logprob": -0.15161358642578124, "compression_ratio": 1.8022388059701493, "no_speech_prob": 2.0577454051817767e-06}, {"id": 32, "seek": 10642, "start": 116.96000000000001, "end": 122.44, "text": " And what this is doing is calling the VAE.encode() method on a tensor version of the image.", "tokens": [400, 437, 341, 307, 884, 307, 5141, 264, 18527, 36, 13, 22660, 1429, 45191, 3170, 322, 257, 40863, 3037, 295, 264, 3256, 13], "temperature": 0.0, "avg_logprob": -0.15161358642578124, "compression_ratio": 1.8022388059701493, "no_speech_prob": 2.0577454051817767e-06}, {"id": 33, "seek": 10642, "start": 122.44, "end": 123.44, "text": " And that gives us a distribution.", "tokens": [400, 300, 2709, 505, 257, 7316, 13], "temperature": 0.0, "avg_logprob": -0.15161358642578124, "compression_ratio": 1.8022388059701493, "no_speech_prob": 2.0577454051817767e-06}, {"id": 34, "seek": 10642, "start": 123.44, "end": 126.12, "text": " And so we're sampling from that distribution.", "tokens": [400, 370, 321, 434, 21179, 490, 300, 7316, 13], "temperature": 0.0, "avg_logprob": -0.15161358642578124, "compression_ratio": 1.8022388059701493, "no_speech_prob": 2.0577454051817767e-06}, {"id": 35, "seek": 10642, "start": 126.12, "end": 130.0, "text": " And we're scaling by this because that's what the authors of the model did.", "tokens": [400, 321, 434, 21589, 538, 341, 570, 300, 311, 437, 264, 16552, 295, 264, 2316, 630, 13], "temperature": 0.0, "avg_logprob": -0.15161358642578124, "compression_ratio": 1.8022388059701493, "no_speech_prob": 2.0577454051817767e-06}, {"id": 36, "seek": 10642, "start": 130.0, "end": 133.48000000000002, "text": " They scale the latency down before they fit them to the model.", "tokens": [814, 4373, 264, 27043, 760, 949, 436, 3318, 552, 281, 264, 2316, 13], "temperature": 0.0, "avg_logprob": -0.15161358642578124, "compression_ratio": 1.8022388059701493, "no_speech_prob": 2.0577454051817767e-06}, {"id": 37, "seek": 13348, "start": 133.48, "end": 138.16, "text": " And so we have to do that scaling and then the reverse when we decoding just to be consistent", "tokens": [400, 370, 321, 362, 281, 360, 300, 21589, 293, 550, 264, 9943, 562, 321, 979, 8616, 445, 281, 312, 8398], "temperature": 0.0, "avg_logprob": -0.08622446275295172, "compression_ratio": 1.7567567567567568, "no_speech_prob": 3.6678331980510848e-06}, {"id": 38, "seek": 13348, "start": 138.16, "end": 139.16, "text": " with that.", "tokens": [365, 300, 13], "temperature": 0.0, "avg_logprob": -0.08622446275295172, "compression_ratio": 1.7567567567567568, "no_speech_prob": 3.6678331980510848e-06}, {"id": 39, "seek": 13348, "start": 139.16, "end": 146.39999999999998, "text": " But the key idea is that we go from this big image down to this 4 by 64 by 64 latent representation.", "tokens": [583, 264, 2141, 1558, 307, 300, 321, 352, 490, 341, 955, 3256, 760, 281, 341, 1017, 538, 12145, 538, 12145, 48994, 10290, 13], "temperature": 0.0, "avg_logprob": -0.08622446275295172, "compression_ratio": 1.7567567567567568, "no_speech_prob": 3.6678331980510848e-06}, {"id": 40, "seek": 13348, "start": 146.39999999999998, "end": 148.83999999999997, "text": " So we've gone from this much larger image down.", "tokens": [407, 321, 600, 2780, 490, 341, 709, 4833, 3256, 760, 13], "temperature": 0.0, "avg_logprob": -0.08622446275295172, "compression_ratio": 1.7567567567567568, "no_speech_prob": 3.6678331980510848e-06}, {"id": 41, "seek": 13348, "start": 148.83999999999997, "end": 154.07999999999998, "text": " And if we visualize what the four channels here, this four different 64 by 64 channels,", "tokens": [400, 498, 321, 23273, 437, 264, 1451, 9235, 510, 11, 341, 1451, 819, 12145, 538, 12145, 9235, 11], "temperature": 0.0, "avg_logprob": -0.08622446275295172, "compression_ratio": 1.7567567567567568, "no_speech_prob": 3.6678331980510848e-06}, {"id": 42, "seek": 13348, "start": 154.07999999999998, "end": 157.23999999999998, "text": " what that looks like, we'll see that it's capturing something of the image.", "tokens": [437, 300, 1542, 411, 11, 321, 603, 536, 300, 309, 311, 23384, 746, 295, 264, 3256, 13], "temperature": 0.0, "avg_logprob": -0.08622446275295172, "compression_ratio": 1.7567567567567568, "no_speech_prob": 3.6678331980510848e-06}, {"id": 43, "seek": 13348, "start": 157.23999999999998, "end": 161.44, "text": " You can sort of see the same shapes and things there, but it's not quite a direct mapping", "tokens": [509, 393, 1333, 295, 536, 264, 912, 10854, 293, 721, 456, 11, 457, 309, 311, 406, 1596, 257, 2047, 18350], "temperature": 0.0, "avg_logprob": -0.08622446275295172, "compression_ratio": 1.7567567567567568, "no_speech_prob": 3.6678331980510848e-06}, {"id": 44, "seek": 13348, "start": 161.44, "end": 162.44, "text": " or anything.", "tokens": [420, 1340, 13], "temperature": 0.0, "avg_logprob": -0.08622446275295172, "compression_ratio": 1.7567567567567568, "no_speech_prob": 3.6678331980510848e-06}, {"id": 45, "seek": 16244, "start": 162.44, "end": 164.56, "text": " For example, there's this weirdness going on the beak.", "tokens": [1171, 1365, 11, 456, 311, 341, 3657, 1287, 516, 322, 264, 48663, 13], "temperature": 0.0, "avg_logprob": -0.1258794303954117, "compression_ratio": 1.6608996539792387, "no_speech_prob": 3.1874028536549304e-06}, {"id": 46, "seek": 16244, "start": 164.56, "end": 167.56, "text": " Some of the channels look slightly stranger than the others.", "tokens": [2188, 295, 264, 9235, 574, 4748, 18834, 813, 264, 2357, 13], "temperature": 0.0, "avg_logprob": -0.1258794303954117, "compression_ratio": 1.6608996539792387, "no_speech_prob": 3.1874028536549304e-06}, {"id": 47, "seek": 16244, "start": 167.56, "end": 170.6, "text": " So there's some sort of rich information captured there.", "tokens": [407, 456, 311, 512, 1333, 295, 4593, 1589, 11828, 456, 13], "temperature": 0.0, "avg_logprob": -0.1258794303954117, "compression_ratio": 1.6608996539792387, "no_speech_prob": 3.1874028536549304e-06}, {"id": 48, "seek": 16244, "start": 170.6, "end": 175.44, "text": " And if we decode this back, what we'll see is that the decoded image looks really good.", "tokens": [400, 498, 321, 979, 1429, 341, 646, 11, 437, 321, 603, 536, 307, 300, 264, 979, 12340, 3256, 1542, 534, 665, 13], "temperature": 0.0, "avg_logprob": -0.1258794303954117, "compression_ratio": 1.6608996539792387, "no_speech_prob": 3.1874028536549304e-06}, {"id": 49, "seek": 16244, "start": 175.44, "end": 180.16, "text": " You really have to look closely to tell the difference between our input image here and", "tokens": [509, 534, 362, 281, 574, 8185, 281, 980, 264, 2649, 1296, 527, 4846, 3256, 510, 293], "temperature": 0.0, "avg_logprob": -0.1258794303954117, "compression_ratio": 1.6608996539792387, "no_speech_prob": 3.1874028536549304e-06}, {"id": 50, "seek": 16244, "start": 180.16, "end": 181.16, "text": " the decoded version.", "tokens": [264, 979, 12340, 3037, 13], "temperature": 0.0, "avg_logprob": -0.1258794303954117, "compression_ratio": 1.6608996539792387, "no_speech_prob": 3.1874028536549304e-06}, {"id": 51, "seek": 16244, "start": 181.16, "end": 184.4, "text": " So very, very impressive compression.", "tokens": [407, 588, 11, 588, 8992, 19355, 13], "temperature": 0.0, "avg_logprob": -0.1258794303954117, "compression_ratio": 1.6608996539792387, "no_speech_prob": 3.1874028536549304e-06}, {"id": 52, "seek": 16244, "start": 184.4, "end": 187.12, "text": " This is a factor of 8 in each dimension.", "tokens": [639, 307, 257, 5952, 295, 1649, 294, 1184, 10139, 13], "temperature": 0.0, "avg_logprob": -0.1258794303954117, "compression_ratio": 1.6608996539792387, "no_speech_prob": 3.1874028536549304e-06}, {"id": 53, "seek": 16244, "start": 187.12, "end": 190.52, "text": " So 512 by 512 down to 64 by 64.", "tokens": [407, 1025, 4762, 538, 1025, 4762, 760, 281, 12145, 538, 12145, 13], "temperature": 0.0, "avg_logprob": -0.1258794303954117, "compression_ratio": 1.6608996539792387, "no_speech_prob": 3.1874028536549304e-06}, {"id": 54, "seek": 19052, "start": 190.52, "end": 196.76000000000002, "text": " It's like a factor of 64 reduction in data, but it's still somehow capturing most of that", "tokens": [467, 311, 411, 257, 5952, 295, 12145, 11004, 294, 1412, 11, 457, 309, 311, 920, 6063, 23384, 881, 295, 300], "temperature": 0.0, "avg_logprob": -0.13832946445630945, "compression_ratio": 1.6113207547169812, "no_speech_prob": 2.7688661248248536e-06}, {"id": 55, "seek": 19052, "start": 196.76000000000002, "end": 197.76000000000002, "text": " information.", "tokens": [1589, 13], "temperature": 0.0, "avg_logprob": -0.13832946445630945, "compression_ratio": 1.6113207547169812, "no_speech_prob": 2.7688661248248536e-06}, {"id": 56, "seek": 19052, "start": 197.76000000000002, "end": 200.28, "text": " It's a very information rich representation.", "tokens": [467, 311, 257, 588, 1589, 4593, 10290, 13], "temperature": 0.0, "avg_logprob": -0.13832946445630945, "compression_ratio": 1.6113207547169812, "no_speech_prob": 2.7688661248248536e-06}, {"id": 57, "seek": 19052, "start": 200.28, "end": 204.20000000000002, "text": " And this is going to be great because now we can work with that with our diffusion model", "tokens": [400, 341, 307, 516, 281, 312, 869, 570, 586, 321, 393, 589, 365, 300, 365, 527, 25242, 2316], "temperature": 0.0, "avg_logprob": -0.13832946445630945, "compression_ratio": 1.6113207547169812, "no_speech_prob": 2.7688661248248536e-06}, {"id": 58, "seek": 19052, "start": 204.20000000000002, "end": 208.72, "text": " and get nice high resolution results, even though we're only working with these 64 by", "tokens": [293, 483, 1481, 1090, 8669, 3542, 11, 754, 1673, 321, 434, 787, 1364, 365, 613, 12145, 538], "temperature": 0.0, "avg_logprob": -0.13832946445630945, "compression_ratio": 1.6113207547169812, "no_speech_prob": 2.7688661248248536e-06}, {"id": 59, "seek": 19052, "start": 208.72, "end": 209.72, "text": " 64 latents.", "tokens": [12145, 4465, 791, 13], "temperature": 0.0, "avg_logprob": -0.13832946445630945, "compression_ratio": 1.6113207547169812, "no_speech_prob": 2.7688661248248536e-06}, {"id": 60, "seek": 19052, "start": 209.72, "end": 212.72, "text": " Now, it doesn't have to be 64 by 64.", "tokens": [823, 11, 309, 1177, 380, 362, 281, 312, 12145, 538, 12145, 13], "temperature": 0.0, "avg_logprob": -0.13832946445630945, "compression_ratio": 1.6113207547169812, "no_speech_prob": 2.7688661248248536e-06}, {"id": 61, "seek": 19052, "start": 212.72, "end": 217.56, "text": " You can go and modify this to say, what if this is 640?", "tokens": [509, 393, 352, 293, 16927, 341, 281, 584, 11, 437, 498, 341, 307, 1386, 5254, 30], "temperature": 0.0, "avg_logprob": -0.13832946445630945, "compression_ratio": 1.6113207547169812, "no_speech_prob": 2.7688661248248536e-06}, {"id": 62, "seek": 21756, "start": 217.56, "end": 223.68, "text": " And encode that down and you'll see that it's just that same factor of 8 reduction.", "tokens": [400, 2058, 1429, 300, 760, 293, 291, 603, 536, 300, 309, 311, 445, 300, 912, 5952, 295, 1649, 11004, 13], "temperature": 0.0, "avg_logprob": -0.1572474705353948, "compression_ratio": 1.6236162361623616, "no_speech_prob": 5.86188207307714e-06}, {"id": 63, "seek": 21756, "start": 223.68, "end": 224.68, "text": " And there we go.", "tokens": [400, 456, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.1572474705353948, "compression_ratio": 1.6236162361623616, "no_speech_prob": 5.86188207307714e-06}, {"id": 64, "seek": 21756, "start": 224.68, "end": 226.84, "text": " Now we have 80 by 64.", "tokens": [823, 321, 362, 4688, 538, 12145, 13], "temperature": 0.0, "avg_logprob": -0.1572474705353948, "compression_ratio": 1.6236162361623616, "no_speech_prob": 5.86188207307714e-06}, {"id": 65, "seek": 21756, "start": 226.84, "end": 228.76, "text": " This just has to be a multiple of 8.", "tokens": [639, 445, 575, 281, 312, 257, 3866, 295, 1649, 13], "temperature": 0.0, "avg_logprob": -0.1572474705353948, "compression_ratio": 1.6236162361623616, "no_speech_prob": 5.86188207307714e-06}, {"id": 66, "seek": 21756, "start": 228.76, "end": 231.08, "text": " Otherwise you'll get, I think, an error.", "tokens": [10328, 291, 603, 483, 11, 286, 519, 11, 364, 6713, 13], "temperature": 0.0, "avg_logprob": -0.1572474705353948, "compression_ratio": 1.6236162361623616, "no_speech_prob": 5.86188207307714e-06}, {"id": 67, "seek": 21756, "start": 231.08, "end": 236.0, "text": " OK, so we have our encoded version of this image and that's pretty great.", "tokens": [2264, 11, 370, 321, 362, 527, 2058, 12340, 3037, 295, 341, 3256, 293, 300, 311, 1238, 869, 13], "temperature": 0.0, "avg_logprob": -0.1572474705353948, "compression_ratio": 1.6236162361623616, "no_speech_prob": 5.86188207307714e-06}, {"id": 68, "seek": 21756, "start": 236.0, "end": 239.08, "text": " The next component we're going to look at is the scheduler.", "tokens": [440, 958, 6542, 321, 434, 516, 281, 574, 412, 307, 264, 12000, 260, 13], "temperature": 0.0, "avg_logprob": -0.1572474705353948, "compression_ratio": 1.6236162361623616, "no_speech_prob": 5.86188207307714e-06}, {"id": 69, "seek": 21756, "start": 239.08, "end": 241.16, "text": " And I'll look more closely at this later.", "tokens": [400, 286, 603, 574, 544, 8185, 412, 341, 1780, 13], "temperature": 0.0, "avg_logprob": -0.1572474705353948, "compression_ratio": 1.6236162361623616, "no_speech_prob": 5.86188207307714e-06}, {"id": 70, "seek": 21756, "start": 241.16, "end": 243.88, "text": " But for now, we're going to focus on this idea of adding noise.", "tokens": [583, 337, 586, 11, 321, 434, 516, 281, 1879, 322, 341, 1558, 295, 5127, 5658, 13], "temperature": 0.0, "avg_logprob": -0.1572474705353948, "compression_ratio": 1.6236162361623616, "no_speech_prob": 5.86188207307714e-06}, {"id": 71, "seek": 24388, "start": 243.88, "end": 247.6, "text": " So during training, we add some noise to an image and then the model tries to predict", "tokens": [407, 1830, 3097, 11, 321, 909, 512, 5658, 281, 364, 3256, 293, 550, 264, 2316, 9898, 281, 6069], "temperature": 0.0, "avg_logprob": -0.10746533966064453, "compression_ratio": 1.8571428571428572, "no_speech_prob": 5.1735473789449316e-06}, {"id": 72, "seek": 24388, "start": 247.6, "end": 249.35999999999999, "text": " what that noise is.", "tokens": [437, 300, 5658, 307, 13], "temperature": 0.0, "avg_logprob": -0.10746533966064453, "compression_ratio": 1.8571428571428572, "no_speech_prob": 5.1735473789449316e-06}, {"id": 73, "seek": 24388, "start": 249.35999999999999, "end": 251.44, "text": " And we're going to do that to different amounts.", "tokens": [400, 321, 434, 516, 281, 360, 300, 281, 819, 11663, 13], "temperature": 0.0, "avg_logprob": -0.10746533966064453, "compression_ratio": 1.8571428571428572, "no_speech_prob": 5.1735473789449316e-06}, {"id": 74, "seek": 24388, "start": 251.44, "end": 255.12, "text": " So here we're going to recreate the same type of schedule.", "tokens": [407, 510, 321, 434, 516, 281, 25833, 264, 912, 2010, 295, 7567, 13], "temperature": 0.0, "avg_logprob": -0.10746533966064453, "compression_ratio": 1.8571428571428572, "no_speech_prob": 5.1735473789449316e-06}, {"id": 75, "seek": 24388, "start": 255.12, "end": 258.24, "text": " You can try different schedulers from the library.", "tokens": [509, 393, 853, 819, 12000, 433, 490, 264, 6405, 13], "temperature": 0.0, "avg_logprob": -0.10746533966064453, "compression_ratio": 1.8571428571428572, "no_speech_prob": 5.1735473789449316e-06}, {"id": 76, "seek": 24388, "start": 258.24, "end": 262.24, "text": " And these parameters here, beta start, beta end, beta schedule, that's how much noise", "tokens": [400, 613, 9834, 510, 11, 9861, 722, 11, 9861, 917, 11, 9861, 7567, 11, 300, 311, 577, 709, 5658], "temperature": 0.0, "avg_logprob": -0.10746533966064453, "compression_ratio": 1.8571428571428572, "no_speech_prob": 5.1735473789449316e-06}, {"id": 77, "seek": 24388, "start": 262.24, "end": 267.0, "text": " was added at different time steps and how many time steps are used during training.", "tokens": [390, 3869, 412, 819, 565, 4439, 293, 577, 867, 565, 4439, 366, 1143, 1830, 3097, 13], "temperature": 0.0, "avg_logprob": -0.10746533966064453, "compression_ratio": 1.8571428571428572, "no_speech_prob": 5.1735473789449316e-06}, {"id": 78, "seek": 24388, "start": 267.0, "end": 269.82, "text": " For sampling, we don't want to have to do a thousand steps.", "tokens": [1171, 21179, 11, 321, 500, 380, 528, 281, 362, 281, 360, 257, 4714, 4439, 13], "temperature": 0.0, "avg_logprob": -0.10746533966064453, "compression_ratio": 1.8571428571428572, "no_speech_prob": 5.1735473789449316e-06}, {"id": 79, "seek": 26982, "start": 269.82, "end": 274.56, "text": " So we can set a new number of time steps and then we'll see how these correspond with the", "tokens": [407, 321, 393, 992, 257, 777, 1230, 295, 565, 4439, 293, 550, 321, 603, 536, 577, 613, 6805, 365, 264], "temperature": 0.0, "avg_logprob": -0.11253747233638058, "compression_ratio": 1.7692307692307692, "no_speech_prob": 2.5213109893229557e-06}, {"id": 80, "seek": 26982, "start": 274.56, "end": 281.42, "text": " scheduler.timeSteps attribute to the original training time steps.", "tokens": [12000, 260, 13, 3766, 4520, 10653, 19667, 281, 264, 3380, 3097, 565, 4439, 13], "temperature": 0.0, "avg_logprob": -0.11253747233638058, "compression_ratio": 1.7692307692307692, "no_speech_prob": 2.5213109893229557e-06}, {"id": 81, "seek": 26982, "start": 281.42, "end": 285.42, "text": " So here we're going to have 15 sampling steps and that's going to be equivalent to starting", "tokens": [407, 510, 321, 434, 516, 281, 362, 2119, 21179, 4439, 293, 300, 311, 516, 281, 312, 10344, 281, 2891], "temperature": 0.0, "avg_logprob": -0.11253747233638058, "compression_ratio": 1.7692307692307692, "no_speech_prob": 2.5213109893229557e-06}, {"id": 82, "seek": 26982, "start": 285.42, "end": 291.03999999999996, "text": " at time step 999 and just moving linearly down to time steps there.", "tokens": [412, 565, 1823, 1722, 8494, 293, 445, 2684, 43586, 760, 281, 565, 4439, 456, 13], "temperature": 0.0, "avg_logprob": -0.11253747233638058, "compression_ratio": 1.7692307692307692, "no_speech_prob": 2.5213109893229557e-06}, {"id": 83, "seek": 26982, "start": 291.03999999999996, "end": 295.15999999999997, "text": " We can also look at the actual amount of noise present with the sigma's attribute.", "tokens": [492, 393, 611, 574, 412, 264, 3539, 2372, 295, 5658, 1974, 365, 264, 12771, 311, 19667, 13], "temperature": 0.0, "avg_logprob": -0.11253747233638058, "compression_ratio": 1.7692307692307692, "no_speech_prob": 2.5213109893229557e-06}, {"id": 84, "seek": 26982, "start": 295.15999999999997, "end": 297.36, "text": " So again, starting high, moving down.", "tokens": [407, 797, 11, 2891, 1090, 11, 2684, 760, 13], "temperature": 0.0, "avg_logprob": -0.11253747233638058, "compression_ratio": 1.7692307692307692, "no_speech_prob": 2.5213109893229557e-06}, {"id": 85, "seek": 29736, "start": 297.36, "end": 301.68, "text": " And if you want to see what that schedule looks like, we can plot that here.", "tokens": [400, 498, 291, 528, 281, 536, 437, 300, 7567, 1542, 411, 11, 321, 393, 7542, 300, 510, 13], "temperature": 0.0, "avg_logprob": -0.1147369087165129, "compression_ratio": 1.8333333333333333, "no_speech_prob": 2.857093932107091e-06}, {"id": 86, "seek": 29736, "start": 301.68, "end": 307.32, "text": " And if you want to see the time steps, you'll see that it's just a linear relationship.", "tokens": [400, 498, 291, 528, 281, 536, 264, 565, 4439, 11, 291, 603, 536, 300, 309, 311, 445, 257, 8213, 2480, 13], "temperature": 0.0, "avg_logprob": -0.1147369087165129, "compression_ratio": 1.8333333333333333, "no_speech_prob": 2.857093932107091e-06}, {"id": 87, "seek": 29736, "start": 307.32, "end": 308.32, "text": " So there we go.", "tokens": [407, 456, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.1147369087165129, "compression_ratio": 1.8333333333333333, "no_speech_prob": 2.857093932107091e-06}, {"id": 88, "seek": 29736, "start": 308.32, "end": 311.36, "text": " We're going to start at a very high noise value and we're going to slowly, slowly try", "tokens": [492, 434, 516, 281, 722, 412, 257, 588, 1090, 5658, 2158, 293, 321, 434, 516, 281, 5692, 11, 5692, 853], "temperature": 0.0, "avg_logprob": -0.1147369087165129, "compression_ratio": 1.8333333333333333, "no_speech_prob": 2.857093932107091e-06}, {"id": 89, "seek": 29736, "start": 311.36, "end": 314.72, "text": " and reduce this down until ideally we get an image out.", "tokens": [293, 5407, 341, 760, 1826, 22915, 321, 483, 364, 3256, 484, 13], "temperature": 0.0, "avg_logprob": -0.1147369087165129, "compression_ratio": 1.8333333333333333, "no_speech_prob": 2.857093932107091e-06}, {"id": 90, "seek": 29736, "start": 314.72, "end": 318.32, "text": " Okay, so the sigma is the amount of noise added.", "tokens": [1033, 11, 370, 264, 12771, 307, 264, 2372, 295, 5658, 3869, 13], "temperature": 0.0, "avg_logprob": -0.1147369087165129, "compression_ratio": 1.8333333333333333, "no_speech_prob": 2.857093932107091e-06}, {"id": 91, "seek": 29736, "start": 318.32, "end": 319.42, "text": " Let's see what that looks like.", "tokens": [961, 311, 536, 437, 300, 1542, 411, 13], "temperature": 0.0, "avg_logprob": -0.1147369087165129, "compression_ratio": 1.8333333333333333, "no_speech_prob": 2.857093932107091e-06}, {"id": 92, "seek": 29736, "start": 319.42, "end": 323.68, "text": " So I'm going to start with some random noise that's the same shape as my latent representation,", "tokens": [407, 286, 478, 516, 281, 722, 365, 512, 4974, 5658, 300, 311, 264, 912, 3909, 382, 452, 48994, 10290, 11], "temperature": 0.0, "avg_logprob": -0.1147369087165129, "compression_ratio": 1.8333333333333333, "no_speech_prob": 2.857093932107091e-06}, {"id": 93, "seek": 29736, "start": 323.68, "end": 325.64, "text": " my encoded image.", "tokens": [452, 2058, 12340, 3256, 13], "temperature": 0.0, "avg_logprob": -0.1147369087165129, "compression_ratio": 1.8333333333333333, "no_speech_prob": 2.857093932107091e-06}, {"id": 94, "seek": 32564, "start": 325.64, "end": 329.12, "text": " And then I'd like to be equivalent to sampling step 10 out of 15 here.", "tokens": [400, 550, 286, 1116, 411, 281, 312, 10344, 281, 21179, 1823, 1266, 484, 295, 2119, 510, 13], "temperature": 0.0, "avg_logprob": -0.1140944327077558, "compression_ratio": 1.819672131147541, "no_speech_prob": 4.028833245683927e-06}, {"id": 95, "seek": 32564, "start": 329.12, "end": 333.64, "text": " So I'm going to go and look up what time step that equates to.", "tokens": [407, 286, 478, 516, 281, 352, 293, 574, 493, 437, 565, 1823, 300, 1267, 1024, 281, 13], "temperature": 0.0, "avg_logprob": -0.1140944327077558, "compression_ratio": 1.819672131147541, "no_speech_prob": 4.028833245683927e-06}, {"id": 96, "seek": 32564, "start": 333.64, "end": 338.08, "text": " And that's going to be one of the arguments that I pass to the scheduler.addNoise function.", "tokens": [400, 300, 311, 516, 281, 312, 472, 295, 264, 12869, 300, 286, 1320, 281, 264, 12000, 260, 13, 25224, 4540, 908, 2445, 13], "temperature": 0.0, "avg_logprob": -0.1140944327077558, "compression_ratio": 1.819672131147541, "no_speech_prob": 4.028833245683927e-06}, {"id": 97, "seek": 32564, "start": 338.08, "end": 343.84, "text": " So I'm calling scheduler.addNoise, giving it my encoded image, the noise, and what time", "tokens": [407, 286, 478, 5141, 12000, 260, 13, 25224, 4540, 908, 11, 2902, 309, 452, 2058, 12340, 3256, 11, 264, 5658, 11, 293, 437, 565], "temperature": 0.0, "avg_logprob": -0.1140944327077558, "compression_ratio": 1.819672131147541, "no_speech_prob": 4.028833245683927e-06}, {"id": 98, "seek": 32564, "start": 343.84, "end": 346.47999999999996, "text": " step I'd like to be noising equivalent to.", "tokens": [1823, 286, 1116, 411, 281, 312, 572, 3436, 10344, 281, 13], "temperature": 0.0, "avg_logprob": -0.1140944327077558, "compression_ratio": 1.819672131147541, "no_speech_prob": 4.028833245683927e-06}, {"id": 99, "seek": 32564, "start": 346.47999999999996, "end": 350.26, "text": " And this is going to give me this noisy but still recognizable version of the image.", "tokens": [400, 341, 307, 516, 281, 976, 385, 341, 24518, 457, 920, 40757, 3037, 295, 264, 3256, 13], "temperature": 0.0, "avg_logprob": -0.1140944327077558, "compression_ratio": 1.819672131147541, "no_speech_prob": 4.028833245683927e-06}, {"id": 100, "seek": 32564, "start": 350.26, "end": 353.68, "text": " And you can go and say, okay, what if I look at somewhere earlier in the process, right?", "tokens": [400, 291, 393, 352, 293, 584, 11, 1392, 11, 437, 498, 286, 574, 412, 4079, 3071, 294, 264, 1399, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1140944327077558, "compression_ratio": 1.819672131147541, "no_speech_prob": 4.028833245683927e-06}, {"id": 101, "seek": 32564, "start": 353.68, "end": 355.12, "text": " Does it look more noisy?", "tokens": [4402, 309, 574, 544, 24518, 30], "temperature": 0.0, "avg_logprob": -0.1140944327077558, "compression_ratio": 1.819672131147541, "no_speech_prob": 4.028833245683927e-06}, {"id": 102, "seek": 35512, "start": 355.12, "end": 357.84000000000003, "text": " What about right at the beginning, right at the end?", "tokens": [708, 466, 558, 412, 264, 2863, 11, 558, 412, 264, 917, 30], "temperature": 0.0, "avg_logprob": -0.17616844177246094, "compression_ratio": 1.720257234726688, "no_speech_prob": 2.5856885258690454e-05}, {"id": 103, "seek": 35512, "start": 357.84000000000003, "end": 359.52, "text": " Feel free to play around there.", "tokens": [14113, 1737, 281, 862, 926, 456, 13], "temperature": 0.0, "avg_logprob": -0.17616844177246094, "compression_ratio": 1.720257234726688, "no_speech_prob": 2.5856885258690454e-05}, {"id": 104, "seek": 35512, "start": 359.52, "end": 363.06, "text": " Okay, so this adding noise, what are we actually doing?", "tokens": [1033, 11, 370, 341, 5127, 5658, 11, 437, 366, 321, 767, 884, 30], "temperature": 0.0, "avg_logprob": -0.17616844177246094, "compression_ratio": 1.720257234726688, "no_speech_prob": 2.5856885258690454e-05}, {"id": 105, "seek": 35512, "start": 363.06, "end": 364.44, "text": " What does the code look like?", "tokens": [708, 775, 264, 3089, 574, 411, 30], "temperature": 0.0, "avg_logprob": -0.17616844177246094, "compression_ratio": 1.720257234726688, "no_speech_prob": 2.5856885258690454e-05}, {"id": 106, "seek": 35512, "start": 364.44, "end": 366.12, "text": " Let's inspect the function.", "tokens": [961, 311, 15018, 264, 2445, 13], "temperature": 0.0, "avg_logprob": -0.17616844177246094, "compression_ratio": 1.720257234726688, "no_speech_prob": 2.5856885258690454e-05}, {"id": 107, "seek": 35512, "start": 366.12, "end": 370.0, "text": " And you'll see that there's some setup for different types of argument and shapes.", "tokens": [400, 291, 603, 536, 300, 456, 311, 512, 8657, 337, 819, 3467, 295, 6770, 293, 10854, 13], "temperature": 0.0, "avg_logprob": -0.17616844177246094, "compression_ratio": 1.720257234726688, "no_speech_prob": 2.5856885258690454e-05}, {"id": 108, "seek": 35512, "start": 370.0, "end": 375.64, "text": " But the key line is just this noisy samples is equal to original samples plus the noise", "tokens": [583, 264, 2141, 1622, 307, 445, 341, 24518, 10938, 307, 2681, 281, 3380, 10938, 1804, 264, 5658], "temperature": 0.0, "avg_logprob": -0.17616844177246094, "compression_ratio": 1.720257234726688, "no_speech_prob": 2.5856885258690454e-05}, {"id": 109, "seek": 35512, "start": 375.64, "end": 377.56, "text": " scaled by the sigma parameter.", "tokens": [36039, 538, 264, 12771, 13075, 13], "temperature": 0.0, "avg_logprob": -0.17616844177246094, "compression_ratio": 1.720257234726688, "no_speech_prob": 2.5856885258690454e-05}, {"id": 110, "seek": 35512, "start": 377.56, "end": 379.44, "text": " All right, so that's all it is.", "tokens": [1057, 558, 11, 370, 300, 311, 439, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.17616844177246094, "compression_ratio": 1.720257234726688, "no_speech_prob": 2.5856885258690454e-05}, {"id": 111, "seek": 35512, "start": 379.44, "end": 383.24, "text": " It's not always the same different papers and implementations will add the noise slightly", "tokens": [467, 311, 406, 1009, 264, 912, 819, 10577, 293, 4445, 763, 486, 909, 264, 5658, 4748], "temperature": 0.0, "avg_logprob": -0.17616844177246094, "compression_ratio": 1.720257234726688, "no_speech_prob": 2.5856885258690454e-05}, {"id": 112, "seek": 35512, "start": 383.24, "end": 384.24, "text": " differently.", "tokens": [7614, 13], "temperature": 0.0, "avg_logprob": -0.17616844177246094, "compression_ratio": 1.720257234726688, "no_speech_prob": 2.5856885258690454e-05}, {"id": 113, "seek": 38424, "start": 384.24, "end": 385.68, "text": " But in this case, that's all it's doing.", "tokens": [583, 294, 341, 1389, 11, 300, 311, 439, 309, 311, 884, 13], "temperature": 0.0, "avg_logprob": -0.13600101470947265, "compression_ratio": 1.8157894736842106, "no_speech_prob": 2.391275302215945e-05}, {"id": 114, "seek": 38424, "start": 385.68, "end": 391.16, "text": " So scheduler.addNoise, just adding noise that's the same shape as the latency scaled by the", "tokens": [407, 12000, 260, 13, 25224, 4540, 908, 11, 445, 5127, 5658, 300, 311, 264, 912, 3909, 382, 264, 27043, 36039, 538, 264], "temperature": 0.0, "avg_logprob": -0.13600101470947265, "compression_ratio": 1.8157894736842106, "no_speech_prob": 2.391275302215945e-05}, {"id": 115, "seek": 38424, "start": 391.16, "end": 392.48, "text": " sigma parameter.", "tokens": [12771, 13075, 13], "temperature": 0.0, "avg_logprob": -0.13600101470947265, "compression_ratio": 1.8157894736842106, "no_speech_prob": 2.391275302215945e-05}, {"id": 116, "seek": 38424, "start": 392.48, "end": 395.16, "text": " Okay, so that's what we're doing.", "tokens": [1033, 11, 370, 300, 311, 437, 321, 434, 884, 13], "temperature": 0.0, "avg_logprob": -0.13600101470947265, "compression_ratio": 1.8157894736842106, "no_speech_prob": 2.391275302215945e-05}, {"id": 117, "seek": 38424, "start": 395.16, "end": 398.08, "text": " So if we want to start from random noise, instead of a noisy image, we're going to scale", "tokens": [407, 498, 321, 528, 281, 722, 490, 4974, 5658, 11, 2602, 295, 257, 24518, 3256, 11, 321, 434, 516, 281, 4373], "temperature": 0.0, "avg_logprob": -0.13600101470947265, "compression_ratio": 1.8157894736842106, "no_speech_prob": 2.391275302215945e-05}, {"id": 118, "seek": 38424, "start": 398.08, "end": 402.48, "text": " it by that same sigma value so that it looks the same as an image that's been scaled by", "tokens": [309, 538, 300, 912, 12771, 2158, 370, 300, 309, 1542, 264, 912, 382, 364, 3256, 300, 311, 668, 36039, 538], "temperature": 0.0, "avg_logprob": -0.13600101470947265, "compression_ratio": 1.8157894736842106, "no_speech_prob": 2.391275302215945e-05}, {"id": 119, "seek": 38424, "start": 402.48, "end": 404.04, "text": " that amount.", "tokens": [300, 2372, 13], "temperature": 0.0, "avg_logprob": -0.13600101470947265, "compression_ratio": 1.8157894736842106, "no_speech_prob": 2.391275302215945e-05}, {"id": 120, "seek": 38424, "start": 404.04, "end": 406.8, "text": " But then before we feed that to the actual model, we then have to handle that scaling", "tokens": [583, 550, 949, 321, 3154, 300, 281, 264, 3539, 2316, 11, 321, 550, 362, 281, 4813, 300, 21589], "temperature": 0.0, "avg_logprob": -0.13600101470947265, "compression_ratio": 1.8157894736842106, "no_speech_prob": 2.391275302215945e-05}, {"id": 121, "seek": 38424, "start": 406.8, "end": 407.88, "text": " again.", "tokens": [797, 13], "temperature": 0.0, "avg_logprob": -0.13600101470947265, "compression_ratio": 1.8157894736842106, "no_speech_prob": 2.391275302215945e-05}, {"id": 122, "seek": 38424, "start": 407.88, "end": 413.0, "text": " You could do it like this, but now we have this scale model input function associated", "tokens": [509, 727, 360, 309, 411, 341, 11, 457, 586, 321, 362, 341, 4373, 2316, 4846, 2445, 6615], "temperature": 0.0, "avg_logprob": -0.13600101470947265, "compression_ratio": 1.8157894736842106, "no_speech_prob": 2.391275302215945e-05}, {"id": 123, "seek": 41300, "start": 413.0, "end": 416.32, "text": " with the scheduler just to hide that complexity away.", "tokens": [365, 264, 12000, 260, 445, 281, 6479, 300, 14024, 1314, 13], "temperature": 0.0, "avg_logprob": -0.1666868772262182, "compression_ratio": 1.8516129032258064, "no_speech_prob": 6.853217200841755e-06}, {"id": 124, "seek": 41300, "start": 416.32, "end": 420.28, "text": " Okay, so now we're going to look at the same kind of sampling loop as before.", "tokens": [1033, 11, 370, 586, 321, 434, 516, 281, 574, 412, 264, 912, 733, 295, 21179, 6367, 382, 949, 13], "temperature": 0.0, "avg_logprob": -0.1666868772262182, "compression_ratio": 1.8516129032258064, "no_speech_prob": 6.853217200841755e-06}, {"id": 125, "seek": 41300, "start": 420.28, "end": 423.48, "text": " But we're going to start now with our image, we're going to take our encoded image, we're", "tokens": [583, 321, 434, 516, 281, 722, 586, 365, 527, 3256, 11, 321, 434, 516, 281, 747, 527, 2058, 12340, 3256, 11, 321, 434], "temperature": 0.0, "avg_logprob": -0.1666868772262182, "compression_ratio": 1.8516129032258064, "no_speech_prob": 6.853217200841755e-06}, {"id": 126, "seek": 41300, "start": 423.48, "end": 427.68, "text": " going to noise it to some time step, and then we only can denoise from there.", "tokens": [516, 281, 5658, 309, 281, 512, 565, 1823, 11, 293, 550, 321, 787, 393, 1441, 38800, 490, 456, 13], "temperature": 0.0, "avg_logprob": -0.1666868772262182, "compression_ratio": 1.8516129032258064, "no_speech_prob": 6.853217200841755e-06}, {"id": 127, "seek": 41300, "start": 427.68, "end": 431.68, "text": " So in code, we are now preparing our text and everything the same as before, which we'll", "tokens": [407, 294, 3089, 11, 321, 366, 586, 10075, 527, 2487, 293, 1203, 264, 912, 382, 949, 11, 597, 321, 603], "temperature": 0.0, "avg_logprob": -0.1666868772262182, "compression_ratio": 1.8516129032258064, "no_speech_prob": 6.853217200841755e-06}, {"id": 128, "seek": 41300, "start": 431.68, "end": 432.68, "text": " look at.", "tokens": [574, 412, 13], "temperature": 0.0, "avg_logprob": -0.1666868772262182, "compression_ratio": 1.8516129032258064, "no_speech_prob": 6.853217200841755e-06}, {"id": 129, "seek": 41300, "start": 432.68, "end": 435.2, "text": " We setting our number of inference steps to 50, right?", "tokens": [492, 3287, 527, 1230, 295, 38253, 4439, 281, 2625, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1666868772262182, "compression_ratio": 1.8516129032258064, "no_speech_prob": 6.853217200841755e-06}, {"id": 130, "seek": 41300, "start": 435.2, "end": 437.34, "text": " Number of inference steps is equal to 50 here.", "tokens": [5118, 295, 38253, 4439, 307, 2681, 281, 2625, 510, 13], "temperature": 0.0, "avg_logprob": -0.1666868772262182, "compression_ratio": 1.8516129032258064, "no_speech_prob": 6.853217200841755e-06}, {"id": 131, "seek": 41300, "start": 437.34, "end": 441.02, "text": " And we're saying I'd like to start at the equivalent of step 10 out of 50.", "tokens": [400, 321, 434, 1566, 286, 1116, 411, 281, 722, 412, 264, 10344, 295, 1823, 1266, 484, 295, 2625, 13], "temperature": 0.0, "avg_logprob": -0.1666868772262182, "compression_ratio": 1.8516129032258064, "no_speech_prob": 6.853217200841755e-06}, {"id": 132, "seek": 44102, "start": 441.02, "end": 443.96, "text": " So I'll look up what time step that equates to.", "tokens": [407, 286, 603, 574, 493, 437, 565, 1823, 300, 1267, 1024, 281, 13], "temperature": 0.0, "avg_logprob": -0.10192535204045913, "compression_ratio": 1.8654545454545455, "no_speech_prob": 6.747275620000437e-06}, {"id": 133, "seek": 44102, "start": 443.96, "end": 448.15999999999997, "text": " I'll add noise to my image equivalent to that step.", "tokens": [286, 603, 909, 5658, 281, 452, 3256, 10344, 281, 300, 1823, 13], "temperature": 0.0, "avg_logprob": -0.10192535204045913, "compression_ratio": 1.8654545454545455, "no_speech_prob": 6.747275620000437e-06}, {"id": 134, "seek": 44102, "start": 448.15999999999997, "end": 451.44, "text": " And then we're going to run through sampling, but this time we only going to start doing", "tokens": [400, 550, 321, 434, 516, 281, 1190, 807, 21179, 11, 457, 341, 565, 321, 787, 516, 281, 722, 884], "temperature": 0.0, "avg_logprob": -0.10192535204045913, "compression_ratio": 1.8654545454545455, "no_speech_prob": 6.747275620000437e-06}, {"id": 135, "seek": 44102, "start": 451.44, "end": 453.88, "text": " things once we get above that start step.", "tokens": [721, 1564, 321, 483, 3673, 300, 722, 1823, 13], "temperature": 0.0, "avg_logprob": -0.10192535204045913, "compression_ratio": 1.8654545454545455, "no_speech_prob": 6.747275620000437e-06}, {"id": 136, "seek": 44102, "start": 453.88, "end": 456.84, "text": " So I'm going to ignore the first 10 out of 50 steps.", "tokens": [407, 286, 478, 516, 281, 11200, 264, 700, 1266, 484, 295, 2625, 4439, 13], "temperature": 0.0, "avg_logprob": -0.10192535204045913, "compression_ratio": 1.8654545454545455, "no_speech_prob": 6.747275620000437e-06}, {"id": 137, "seek": 44102, "start": 456.84, "end": 460.64, "text": " And then beyond that, I'm now going to start with this noisy version of my input image.", "tokens": [400, 550, 4399, 300, 11, 286, 478, 586, 516, 281, 722, 365, 341, 24518, 3037, 295, 452, 4846, 3256, 13], "temperature": 0.0, "avg_logprob": -0.10192535204045913, "compression_ratio": 1.8654545454545455, "no_speech_prob": 6.747275620000437e-06}, {"id": 138, "seek": 44102, "start": 460.64, "end": 463.2, "text": " And I'm going to denoise it according to this prompt.", "tokens": [400, 286, 478, 516, 281, 1441, 38800, 309, 4650, 281, 341, 12391, 13], "temperature": 0.0, "avg_logprob": -0.10192535204045913, "compression_ratio": 1.8654545454545455, "no_speech_prob": 6.747275620000437e-06}, {"id": 139, "seek": 44102, "start": 463.2, "end": 467.24, "text": " And the hope here is that by starting from something that has some of the sort of rough", "tokens": [400, 264, 1454, 510, 307, 300, 538, 2891, 490, 746, 300, 575, 512, 295, 264, 1333, 295, 5903], "temperature": 0.0, "avg_logprob": -0.10192535204045913, "compression_ratio": 1.8654545454545455, "no_speech_prob": 6.747275620000437e-06}, {"id": 140, "seek": 46724, "start": 467.24, "end": 471.76, "text": " structure and color of that input image, I can kind of fix that into my generation.", "tokens": [3877, 293, 2017, 295, 300, 4846, 3256, 11, 286, 393, 733, 295, 3191, 300, 666, 452, 5125, 13], "temperature": 0.0, "avg_logprob": -0.10048635854017014, "compression_ratio": 1.7522658610271904, "no_speech_prob": 6.3362635955854785e-06}, {"id": 141, "seek": 46724, "start": 471.76, "end": 476.28000000000003, "text": " But I've got a new prompt, a National Geographic photo of a colorful dancer.", "tokens": [583, 286, 600, 658, 257, 777, 12391, 11, 257, 4862, 2876, 12295, 5052, 295, 257, 18506, 21621, 13], "temperature": 0.0, "avg_logprob": -0.10048635854017014, "compression_ratio": 1.7522658610271904, "no_speech_prob": 6.3362635955854785e-06}, {"id": 142, "seek": 46724, "start": 476.28000000000003, "end": 477.28000000000003, "text": " And here we go.", "tokens": [400, 510, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.10048635854017014, "compression_ratio": 1.7522658610271904, "no_speech_prob": 6.3362635955854785e-06}, {"id": 143, "seek": 46724, "start": 477.28000000000003, "end": 479.96000000000004, "text": " We see this is the same sort of thing as the parrot.", "tokens": [492, 536, 341, 307, 264, 912, 1333, 295, 551, 382, 264, 42462, 13], "temperature": 0.0, "avg_logprob": -0.10048635854017014, "compression_ratio": 1.7522658610271904, "no_speech_prob": 6.3362635955854785e-06}, {"id": 144, "seek": 46724, "start": 479.96000000000004, "end": 484.0, "text": " But now we have this completely different actual content thanks to a different prompt.", "tokens": [583, 586, 321, 362, 341, 2584, 819, 3539, 2701, 3231, 281, 257, 819, 12391, 13], "temperature": 0.0, "avg_logprob": -0.10048635854017014, "compression_ratio": 1.7522658610271904, "no_speech_prob": 6.3362635955854785e-06}, {"id": 145, "seek": 46724, "start": 484.0, "end": 487.74, "text": " And so that's a fun kind of use of this image to image process.", "tokens": [400, 370, 300, 311, 257, 1019, 733, 295, 764, 295, 341, 3256, 281, 3256, 1399, 13], "temperature": 0.0, "avg_logprob": -0.10048635854017014, "compression_ratio": 1.7522658610271904, "no_speech_prob": 6.3362635955854785e-06}, {"id": 146, "seek": 46724, "start": 487.74, "end": 490.92, "text": " You might have seen this for taking drawings, adding a bunch of noise, and then denoising", "tokens": [509, 1062, 362, 1612, 341, 337, 1940, 18618, 11, 5127, 257, 3840, 295, 5658, 11, 293, 550, 1441, 78, 3436], "temperature": 0.0, "avg_logprob": -0.10048635854017014, "compression_ratio": 1.7522658610271904, "no_speech_prob": 6.3362635955854785e-06}, {"id": 147, "seek": 46724, "start": 490.92, "end": 493.44, "text": " them into fancy paintings and so on.", "tokens": [552, 666, 10247, 14880, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.10048635854017014, "compression_ratio": 1.7522658610271904, "no_speech_prob": 6.3362635955854785e-06}, {"id": 148, "seek": 46724, "start": 493.44, "end": 496.88, "text": " So again, this is something that there's existing tools for this, right?", "tokens": [407, 797, 11, 341, 307, 746, 300, 456, 311, 6741, 3873, 337, 341, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.10048635854017014, "compression_ratio": 1.7522658610271904, "no_speech_prob": 6.3362635955854785e-06}, {"id": 149, "seek": 49688, "start": 496.88, "end": 500.48, "text": " The strength parameter and the image to image pipeline.", "tokens": [440, 3800, 13075, 293, 264, 3256, 281, 3256, 15517, 13], "temperature": 0.0, "avg_logprob": -0.12840093885149276, "compression_ratio": 1.6690140845070423, "no_speech_prob": 1.0782557183119934e-05}, {"id": 150, "seek": 49688, "start": 500.48, "end": 503.2, "text": " That's just something like this.", "tokens": [663, 311, 445, 746, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.12840093885149276, "compression_ratio": 1.6690140845070423, "no_speech_prob": 1.0782557183119934e-05}, {"id": 151, "seek": 49688, "start": 503.2, "end": 504.28, "text": " What step are we starting at?", "tokens": [708, 1823, 366, 321, 2891, 412, 30], "temperature": 0.0, "avg_logprob": -0.12840093885149276, "compression_ratio": 1.6690140845070423, "no_speech_prob": 1.0782557183119934e-05}, {"id": 152, "seek": 49688, "start": 504.28, "end": 506.8, "text": " How many steps are we skipping?", "tokens": [1012, 867, 4439, 366, 321, 31533, 30], "temperature": 0.0, "avg_logprob": -0.12840093885149276, "compression_ratio": 1.6690140845070423, "no_speech_prob": 1.0782557183119934e-05}, {"id": 153, "seek": 49688, "start": 506.8, "end": 511.4, "text": " But you can see that this is a pretty powerful technique for getting a bit of extra control", "tokens": [583, 291, 393, 536, 300, 341, 307, 257, 1238, 4005, 6532, 337, 1242, 257, 857, 295, 2857, 1969], "temperature": 0.0, "avg_logprob": -0.12840093885149276, "compression_ratio": 1.6690140845070423, "no_speech_prob": 1.0782557183119934e-05}, {"id": 154, "seek": 49688, "start": 511.4, "end": 514.8, "text": " over composition and color and a bit of the structure.", "tokens": [670, 12686, 293, 2017, 293, 257, 857, 295, 264, 3877, 13], "temperature": 0.0, "avg_logprob": -0.12840093885149276, "compression_ratio": 1.6690140845070423, "no_speech_prob": 1.0782557183119934e-05}, {"id": 155, "seek": 49688, "start": 514.8, "end": 520.48, "text": " Okay, so that's that trick with adding noise and then using that as image to image.", "tokens": [1033, 11, 370, 300, 311, 300, 4282, 365, 5127, 5658, 293, 550, 1228, 300, 382, 3256, 281, 3256, 13], "temperature": 0.0, "avg_logprob": -0.12840093885149276, "compression_ratio": 1.6690140845070423, "no_speech_prob": 1.0782557183119934e-05}, {"id": 156, "seek": 49688, "start": 520.48, "end": 526.04, "text": " The next big section I'd like to look at is how do we go from a piece of text that describes", "tokens": [440, 958, 955, 3541, 286, 1116, 411, 281, 574, 412, 307, 577, 360, 321, 352, 490, 257, 2522, 295, 2487, 300, 15626], "temperature": 0.0, "avg_logprob": -0.12840093885149276, "compression_ratio": 1.6690140845070423, "no_speech_prob": 1.0782557183119934e-05}, {"id": 157, "seek": 52604, "start": 526.04, "end": 531.92, "text": " what we want into a numerical representation that we can feed to the model.", "tokens": [437, 321, 528, 666, 257, 29054, 10290, 300, 321, 393, 3154, 281, 264, 2316, 13], "temperature": 0.0, "avg_logprob": -0.11900102996826172, "compression_ratio": 1.7307692307692308, "no_speech_prob": 1.3626940017275047e-05}, {"id": 158, "seek": 52604, "start": 531.92, "end": 533.88, "text": " So we're going to trace out that pipeline.", "tokens": [407, 321, 434, 516, 281, 13508, 484, 300, 15517, 13], "temperature": 0.0, "avg_logprob": -0.11900102996826172, "compression_ratio": 1.7307692307692308, "no_speech_prob": 1.3626940017275047e-05}, {"id": 159, "seek": 52604, "start": 533.88, "end": 538.48, "text": " And along the way, we'll see how we can modify that for a bit of fun.", "tokens": [400, 2051, 264, 636, 11, 321, 603, 536, 577, 321, 393, 16927, 300, 337, 257, 857, 295, 1019, 13], "temperature": 0.0, "avg_logprob": -0.11900102996826172, "compression_ratio": 1.7307692307692308, "no_speech_prob": 1.3626940017275047e-05}, {"id": 160, "seek": 52604, "start": 538.48, "end": 543.24, "text": " So step number one, we're taking our prompt and we're turning it into a sequence of discrete", "tokens": [407, 1823, 1230, 472, 11, 321, 434, 1940, 527, 12391, 293, 321, 434, 6246, 309, 666, 257, 8310, 295, 27706], "temperature": 0.0, "avg_logprob": -0.11900102996826172, "compression_ratio": 1.7307692307692308, "no_speech_prob": 1.3626940017275047e-05}, {"id": 161, "seek": 52604, "start": 543.24, "end": 544.24, "text": " tokens.", "tokens": [22667, 13], "temperature": 0.0, "avg_logprob": -0.11900102996826172, "compression_ratio": 1.7307692307692308, "no_speech_prob": 1.3626940017275047e-05}, {"id": 162, "seek": 52604, "start": 544.24, "end": 549.3, "text": " So here we have, in this case, 77, because that's the maximum length.", "tokens": [407, 510, 321, 362, 11, 294, 341, 1389, 11, 25546, 11, 570, 300, 311, 264, 6674, 4641, 13], "temperature": 0.0, "avg_logprob": -0.11900102996826172, "compression_ratio": 1.7307692307692308, "no_speech_prob": 1.3626940017275047e-05}, {"id": 163, "seek": 52604, "start": 549.3, "end": 553.1999999999999, "text": " Discrete tokens, it's always going to be that if your prompt is longer, it'll truncate it.", "tokens": [19839, 7600, 22667, 11, 309, 311, 1009, 516, 281, 312, 300, 498, 428, 12391, 307, 2854, 11, 309, 603, 504, 409, 66, 473, 309, 13], "temperature": 0.0, "avg_logprob": -0.11900102996826172, "compression_ratio": 1.7307692307692308, "no_speech_prob": 1.3626940017275047e-05}, {"id": 164, "seek": 55320, "start": 553.2, "end": 557.5600000000001, "text": " And if we decode these tokens back, we'll see that we have a special token for the start", "tokens": [400, 498, 321, 979, 1429, 613, 22667, 646, 11, 321, 603, 536, 300, 321, 362, 257, 2121, 14862, 337, 264, 722], "temperature": 0.0, "avg_logprob": -0.13302238227785096, "compression_ratio": 1.8972332015810276, "no_speech_prob": 5.2551158660207875e-06}, {"id": 165, "seek": 55320, "start": 557.5600000000001, "end": 561.0400000000001, "text": " of the text, then a picture of a puppy.", "tokens": [295, 264, 2487, 11, 550, 257, 3036, 295, 257, 18196, 13], "temperature": 0.0, "avg_logprob": -0.13302238227785096, "compression_ratio": 1.8972332015810276, "no_speech_prob": 5.2551158660207875e-06}, {"id": 166, "seek": 55320, "start": 561.0400000000001, "end": 565.0400000000001, "text": " And then the rest is all the same token, which is this kind of end of text padding token.", "tokens": [400, 550, 264, 1472, 307, 439, 264, 912, 14862, 11, 597, 307, 341, 733, 295, 917, 295, 2487, 39562, 14862, 13], "temperature": 0.0, "avg_logprob": -0.13302238227785096, "compression_ratio": 1.8972332015810276, "no_speech_prob": 5.2551158660207875e-06}, {"id": 167, "seek": 55320, "start": 565.0400000000001, "end": 568.5600000000001, "text": " Right, so we have this special token for puppy.", "tokens": [1779, 11, 370, 321, 362, 341, 2121, 14862, 337, 18196, 13], "temperature": 0.0, "avg_logprob": -0.13302238227785096, "compression_ratio": 1.8972332015810276, "no_speech_prob": 5.2551158660207875e-06}, {"id": 168, "seek": 55320, "start": 568.5600000000001, "end": 571.5200000000001, "text": " This special token has its own meaning, end of text.", "tokens": [639, 2121, 14862, 575, 1080, 1065, 3620, 11, 917, 295, 2487, 13], "temperature": 0.0, "avg_logprob": -0.13302238227785096, "compression_ratio": 1.8972332015810276, "no_speech_prob": 5.2551158660207875e-06}, {"id": 169, "seek": 55320, "start": 571.5200000000001, "end": 575.76, "text": " And the prompts are always going to be padded to be the same length.", "tokens": [400, 264, 41095, 366, 1009, 516, 281, 312, 6887, 9207, 281, 312, 264, 912, 4641, 13], "temperature": 0.0, "avg_logprob": -0.13302238227785096, "compression_ratio": 1.8972332015810276, "no_speech_prob": 5.2551158660207875e-06}, {"id": 170, "seek": 55320, "start": 575.76, "end": 580.5, "text": " So before, in the code that we were using there, we always jump straight to these so-called", "tokens": [407, 949, 11, 294, 264, 3089, 300, 321, 645, 1228, 456, 11, 321, 1009, 3012, 2997, 281, 613, 370, 12, 11880], "temperature": 0.0, "avg_logprob": -0.13302238227785096, "compression_ratio": 1.8972332015810276, "no_speech_prob": 5.2551158660207875e-06}, {"id": 171, "seek": 58050, "start": 580.5, "end": 584.48, "text": " output embeddings, which is what we fed to the model as conditioning.", "tokens": [5598, 12240, 29432, 11, 597, 307, 437, 321, 4636, 281, 264, 2316, 382, 21901, 13], "temperature": 0.0, "avg_logprob": -0.1411618809950979, "compression_ratio": 1.8361204013377928, "no_speech_prob": 1.3628879969473928e-05}, {"id": 172, "seek": 58050, "start": 584.48, "end": 587.72, "text": " And so somehow this captures some information about this prompt.", "tokens": [400, 370, 6063, 341, 27986, 512, 1589, 466, 341, 12391, 13], "temperature": 0.0, "avg_logprob": -0.1411618809950979, "compression_ratio": 1.8361204013377928, "no_speech_prob": 1.3628879969473928e-05}, {"id": 173, "seek": 58050, "start": 587.72, "end": 589.48, "text": " But now we want to say, well, how do we get there?", "tokens": [583, 586, 321, 528, 281, 584, 11, 731, 11, 577, 360, 321, 483, 456, 30], "temperature": 0.0, "avg_logprob": -0.1411618809950979, "compression_ratio": 1.8361204013377928, "no_speech_prob": 1.3628879969473928e-05}, {"id": 174, "seek": 58050, "start": 589.48, "end": 593.08, "text": " How do we get from this sequence of tokens to these output embeddings?", "tokens": [1012, 360, 321, 483, 490, 341, 8310, 295, 22667, 281, 613, 5598, 12240, 29432, 30], "temperature": 0.0, "avg_logprob": -0.1411618809950979, "compression_ratio": 1.8361204013377928, "no_speech_prob": 1.3628879969473928e-05}, {"id": 175, "seek": 58050, "start": 593.08, "end": 597.6, "text": " What is this text encoder forward pass doing?", "tokens": [708, 307, 341, 2487, 2058, 19866, 2128, 1320, 884, 30], "temperature": 0.0, "avg_logprob": -0.1411618809950979, "compression_ratio": 1.8361204013377928, "no_speech_prob": 1.3628879969473928e-05}, {"id": 176, "seek": 58050, "start": 597.6, "end": 601.28, "text": " Right, so we can look at this and there's going to be multiple steps.", "tokens": [1779, 11, 370, 321, 393, 574, 412, 341, 293, 456, 311, 516, 281, 312, 3866, 4439, 13], "temperature": 0.0, "avg_logprob": -0.1411618809950979, "compression_ratio": 1.8361204013377928, "no_speech_prob": 1.3628879969473928e-05}, {"id": 177, "seek": 58050, "start": 601.28, "end": 603.04, "text": " The first is going to be some embeddings.", "tokens": [440, 700, 307, 516, 281, 312, 512, 12240, 29432, 13], "temperature": 0.0, "avg_logprob": -0.1411618809950979, "compression_ratio": 1.8361204013377928, "no_speech_prob": 1.3628879969473928e-05}, {"id": 178, "seek": 58050, "start": 603.04, "end": 607.98, "text": " So if we look at the text encoder.textmodel.embeddings, we'll see there's a couple of different ones.", "tokens": [407, 498, 321, 574, 412, 264, 2487, 2058, 19866, 13, 25111, 8014, 338, 13, 443, 2883, 29432, 11, 321, 603, 536, 456, 311, 257, 1916, 295, 819, 2306, 13], "temperature": 0.0, "avg_logprob": -0.1411618809950979, "compression_ratio": 1.8361204013377928, "no_speech_prob": 1.3628879969473928e-05}, {"id": 179, "seek": 58050, "start": 607.98, "end": 609.16, "text": " We have token embeddings.", "tokens": [492, 362, 14862, 12240, 29432, 13], "temperature": 0.0, "avg_logprob": -0.1411618809950979, "compression_ratio": 1.8361204013377928, "no_speech_prob": 1.3628879969473928e-05}, {"id": 180, "seek": 58050, "start": 609.16, "end": 610.16, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.1411618809950979, "compression_ratio": 1.8361204013377928, "no_speech_prob": 1.3628879969473928e-05}, {"id": 181, "seek": 61016, "start": 610.16, "end": 616.88, "text": " So this is to take those individual tokens, token 49408 or whatever, and map it into a", "tokens": [407, 341, 307, 281, 747, 729, 2609, 22667, 11, 14862, 16513, 5254, 23, 420, 2035, 11, 293, 4471, 309, 666, 257], "temperature": 0.0, "avg_logprob": -0.18468377084443063, "compression_ratio": 1.7829457364341086, "no_speech_prob": 4.860288754571229e-06}, {"id": 182, "seek": 61016, "start": 616.88, "end": 619.7199999999999, "text": " representation that's a numerical representation.", "tokens": [10290, 300, 311, 257, 29054, 10290, 13], "temperature": 0.0, "avg_logprob": -0.18468377084443063, "compression_ratio": 1.7829457364341086, "no_speech_prob": 4.860288754571229e-06}, {"id": 183, "seek": 61016, "start": 619.7199999999999, "end": 621.28, "text": " So here it's a learned embedding.", "tokens": [407, 510, 309, 311, 257, 3264, 12240, 3584, 13], "temperature": 0.0, "avg_logprob": -0.18468377084443063, "compression_ratio": 1.7829457364341086, "no_speech_prob": 4.860288754571229e-06}, {"id": 184, "seek": 61016, "start": 621.28, "end": 626.16, "text": " There are seven, sorry, about 50,000 rows, one for each token.", "tokens": [821, 366, 3407, 11, 2597, 11, 466, 2625, 11, 1360, 13241, 11, 472, 337, 1184, 14862, 13], "temperature": 0.0, "avg_logprob": -0.18468377084443063, "compression_ratio": 1.7829457364341086, "no_speech_prob": 4.860288754571229e-06}, {"id": 185, "seek": 61016, "start": 626.16, "end": 628.76, "text": " And for each token, we have 768 values.", "tokens": [400, 337, 1184, 14862, 11, 321, 362, 24733, 23, 4190, 13], "temperature": 0.0, "avg_logprob": -0.18468377084443063, "compression_ratio": 1.7829457364341086, "no_speech_prob": 4.860288754571229e-06}, {"id": 186, "seek": 61016, "start": 628.76, "end": 630.92, "text": " So that's the embedding of that token.", "tokens": [407, 300, 311, 264, 12240, 3584, 295, 300, 14862, 13], "temperature": 0.0, "avg_logprob": -0.18468377084443063, "compression_ratio": 1.7829457364341086, "no_speech_prob": 4.860288754571229e-06}, {"id": 187, "seek": 61016, "start": 630.92, "end": 634.04, "text": " And if we want to feed one in and see what the embedding looks like, here's the token", "tokens": [400, 498, 321, 528, 281, 3154, 472, 294, 293, 536, 437, 264, 12240, 3584, 1542, 411, 11, 510, 311, 264, 14862], "temperature": 0.0, "avg_logprob": -0.18468377084443063, "compression_ratio": 1.7829457364341086, "no_speech_prob": 4.860288754571229e-06}, {"id": 188, "seek": 61016, "start": 634.04, "end": 636.36, "text": " for puppy and here's the token embedding.", "tokens": [337, 18196, 293, 510, 311, 264, 14862, 12240, 3584, 13], "temperature": 0.0, "avg_logprob": -0.18468377084443063, "compression_ratio": 1.7829457364341086, "no_speech_prob": 4.860288754571229e-06}, {"id": 189, "seek": 61016, "start": 636.36, "end": 637.9599999999999, "text": " Right, 768 numbers.", "tokens": [1779, 11, 24733, 23, 3547, 13], "temperature": 0.0, "avg_logprob": -0.18468377084443063, "compression_ratio": 1.7829457364341086, "no_speech_prob": 4.860288754571229e-06}, {"id": 190, "seek": 63796, "start": 637.96, "end": 642.2, "text": " They somehow capture that meaning of that token on its own.", "tokens": [814, 6063, 7983, 300, 3620, 295, 300, 14862, 322, 1080, 1065, 13], "temperature": 0.0, "avg_logprob": -0.143369134016863, "compression_ratio": 1.7697841726618706, "no_speech_prob": 3.668742238005507e-06}, {"id": 191, "seek": 63796, "start": 642.2, "end": 644.36, "text": " And we can do the same for all of the tokens in our prompt.", "tokens": [400, 321, 393, 360, 264, 912, 337, 439, 295, 264, 22667, 294, 527, 12391, 13], "temperature": 0.0, "avg_logprob": -0.143369134016863, "compression_ratio": 1.7697841726618706, "no_speech_prob": 3.668742238005507e-06}, {"id": 192, "seek": 63796, "start": 644.36, "end": 646.64, "text": " So we feed them through this token embedding layer.", "tokens": [407, 321, 3154, 552, 807, 341, 14862, 12240, 3584, 4583, 13], "temperature": 0.0, "avg_logprob": -0.143369134016863, "compression_ratio": 1.7697841726618706, "no_speech_prob": 3.668742238005507e-06}, {"id": 193, "seek": 63796, "start": 646.64, "end": 654.2, "text": " And now we get 77, 768 dimensional representations of this, of each token.", "tokens": [400, 586, 321, 483, 25546, 11, 24733, 23, 18795, 33358, 295, 341, 11, 295, 1184, 14862, 13], "temperature": 0.0, "avg_logprob": -0.143369134016863, "compression_ratio": 1.7697841726618706, "no_speech_prob": 3.668742238005507e-06}, {"id": 194, "seek": 63796, "start": 654.2, "end": 656.6800000000001, "text": " Now, these are all on their own.", "tokens": [823, 11, 613, 366, 439, 322, 641, 1065, 13], "temperature": 0.0, "avg_logprob": -0.143369134016863, "compression_ratio": 1.7697841726618706, "no_speech_prob": 3.668742238005507e-06}, {"id": 195, "seek": 63796, "start": 656.6800000000001, "end": 660.88, "text": " No matter where in the sentence it is, the token embedding will be the same.", "tokens": [883, 1871, 689, 294, 264, 8174, 309, 307, 11, 264, 14862, 12240, 3584, 486, 312, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.143369134016863, "compression_ratio": 1.7697841726618706, "no_speech_prob": 3.668742238005507e-06}, {"id": 196, "seek": 63796, "start": 660.88, "end": 663.76, "text": " So the next step is to add some positional information.", "tokens": [407, 264, 958, 1823, 307, 281, 909, 512, 2535, 304, 1589, 13], "temperature": 0.0, "avg_logprob": -0.143369134016863, "compression_ratio": 1.7697841726618706, "no_speech_prob": 3.668742238005507e-06}, {"id": 197, "seek": 63796, "start": 663.76, "end": 666.8000000000001, "text": " Some models will do this with some kind of like learned pattern of positioning.", "tokens": [2188, 5245, 486, 360, 341, 365, 512, 733, 295, 411, 3264, 5102, 295, 26381, 13], "temperature": 0.0, "avg_logprob": -0.143369134016863, "compression_ratio": 1.7697841726618706, "no_speech_prob": 3.668742238005507e-06}, {"id": 198, "seek": 66680, "start": 666.8, "end": 671.0, "text": " But in this case, the positional embedding is just another learned embedding.", "tokens": [583, 294, 341, 1389, 11, 264, 2535, 304, 12240, 3584, 307, 445, 1071, 3264, 12240, 3584, 13], "temperature": 0.0, "avg_logprob": -0.08381192867572491, "compression_ratio": 1.996168582375479, "no_speech_prob": 9.080177733267192e-06}, {"id": 199, "seek": 66680, "start": 671.0, "end": 674.92, "text": " But now instead of having one embedding for every token, we have one embedding for every", "tokens": [583, 586, 2602, 295, 1419, 472, 12240, 3584, 337, 633, 14862, 11, 321, 362, 472, 12240, 3584, 337, 633], "temperature": 0.0, "avg_logprob": -0.08381192867572491, "compression_ratio": 1.996168582375479, "no_speech_prob": 9.080177733267192e-06}, {"id": 200, "seek": 66680, "start": 674.92, "end": 678.4, "text": " position out of all 77 possible positions.", "tokens": [2535, 484, 295, 439, 25546, 1944, 8432, 13], "temperature": 0.0, "avg_logprob": -0.08381192867572491, "compression_ratio": 1.996168582375479, "no_speech_prob": 9.080177733267192e-06}, {"id": 201, "seek": 66680, "start": 678.4, "end": 682.52, "text": " And so just like we did for the tokens, we can feed in the position IDs, one for every", "tokens": [400, 370, 445, 411, 321, 630, 337, 264, 22667, 11, 321, 393, 3154, 294, 264, 2535, 48212, 11, 472, 337, 633], "temperature": 0.0, "avg_logprob": -0.08381192867572491, "compression_ratio": 1.996168582375479, "no_speech_prob": 9.080177733267192e-06}, {"id": 202, "seek": 66680, "start": 682.52, "end": 689.56, "text": " possible position, and we'll get back out an embedding for every position in the prompt.", "tokens": [1944, 2535, 11, 293, 321, 603, 483, 646, 484, 364, 12240, 3584, 337, 633, 2535, 294, 264, 12391, 13], "temperature": 0.0, "avg_logprob": -0.08381192867572491, "compression_ratio": 1.996168582375479, "no_speech_prob": 9.080177733267192e-06}, {"id": 203, "seek": 66680, "start": 689.56, "end": 693.12, "text": " Combining them together, there's again multiple ways people do this in the literature.", "tokens": [25939, 1760, 552, 1214, 11, 456, 311, 797, 3866, 2098, 561, 360, 341, 294, 264, 10394, 13], "temperature": 0.0, "avg_logprob": -0.08381192867572491, "compression_ratio": 1.996168582375479, "no_speech_prob": 9.080177733267192e-06}, {"id": 204, "seek": 66680, "start": 693.12, "end": 695.56, "text": " But in this case, it's as simple as adding them.", "tokens": [583, 294, 341, 1389, 11, 309, 311, 382, 2199, 382, 5127, 552, 13], "temperature": 0.0, "avg_logprob": -0.08381192867572491, "compression_ratio": 1.996168582375479, "no_speech_prob": 9.080177733267192e-06}, {"id": 205, "seek": 69556, "start": 695.56, "end": 698.7199999999999, "text": " That's why they made them the same shape, so that you can just add the two together.", "tokens": [663, 311, 983, 436, 1027, 552, 264, 912, 3909, 11, 370, 300, 291, 393, 445, 909, 264, 732, 1214, 13], "temperature": 0.0, "avg_logprob": -0.1161062091800338, "compression_ratio": 1.8110749185667752, "no_speech_prob": 3.0411238185479306e-06}, {"id": 206, "seek": 69556, "start": 698.7199999999999, "end": 704.8, "text": " And now these input embeddings have some information related to the token and some related to the", "tokens": [400, 586, 613, 4846, 12240, 29432, 362, 512, 1589, 4077, 281, 264, 14862, 293, 512, 4077, 281, 264], "temperature": 0.0, "avg_logprob": -0.1161062091800338, "compression_ratio": 1.8110749185667752, "no_speech_prob": 3.0411238185479306e-06}, {"id": 207, "seek": 69556, "start": 704.8, "end": 705.8, "text": " position.", "tokens": [2535, 13], "temperature": 0.0, "avg_logprob": -0.1161062091800338, "compression_ratio": 1.8110749185667752, "no_speech_prob": 3.0411238185479306e-06}, {"id": 208, "seek": 69556, "start": 705.8, "end": 709.4399999999999, "text": " So, so far, we haven't seen any big model, just two learned embeddings.", "tokens": [407, 11, 370, 1400, 11, 321, 2378, 380, 1612, 604, 955, 2316, 11, 445, 732, 3264, 12240, 29432, 13], "temperature": 0.0, "avg_logprob": -0.1161062091800338, "compression_ratio": 1.8110749185667752, "no_speech_prob": 3.0411238185479306e-06}, {"id": 209, "seek": 69556, "start": 709.4399999999999, "end": 712.4, "text": " But this is getting everything ready to feed through that model.", "tokens": [583, 341, 307, 1242, 1203, 1919, 281, 3154, 807, 300, 2316, 13], "temperature": 0.0, "avg_logprob": -0.1161062091800338, "compression_ratio": 1.8110749185667752, "no_speech_prob": 3.0411238185479306e-06}, {"id": 210, "seek": 69556, "start": 712.4, "end": 716.4799999999999, "text": " And so we can check that this is the same as if we just called the embeddings layer", "tokens": [400, 370, 321, 393, 1520, 300, 341, 307, 264, 912, 382, 498, 321, 445, 1219, 264, 12240, 29432, 4583], "temperature": 0.0, "avg_logprob": -0.1161062091800338, "compression_ratio": 1.8110749185667752, "no_speech_prob": 3.0411238185479306e-06}, {"id": 211, "seek": 69556, "start": 716.4799999999999, "end": 720.04, "text": " of that model, which is going to do both of those steps at once.", "tokens": [295, 300, 2316, 11, 597, 307, 516, 281, 360, 1293, 295, 729, 4439, 412, 1564, 13], "temperature": 0.0, "avg_logprob": -0.1161062091800338, "compression_ratio": 1.8110749185667752, "no_speech_prob": 3.0411238185479306e-06}, {"id": 212, "seek": 69556, "start": 720.04, "end": 723.4799999999999, "text": " But we'll see just now why we want to separate that out into individual ones.", "tokens": [583, 321, 603, 536, 445, 586, 983, 321, 528, 281, 4994, 300, 484, 666, 2609, 2306, 13], "temperature": 0.0, "avg_logprob": -0.1161062091800338, "compression_ratio": 1.8110749185667752, "no_speech_prob": 3.0411238185479306e-06}, {"id": 213, "seek": 72348, "start": 723.48, "end": 728.6, "text": " Okay, so we have these individual tokens, and they have some positional information.", "tokens": [1033, 11, 370, 321, 362, 613, 2609, 22667, 11, 293, 436, 362, 512, 2535, 304, 1589, 13], "temperature": 0.0, "avg_logprob": -0.11312343649668237, "compression_ratio": 1.8927444794952681, "no_speech_prob": 3.3928822631423827e-06}, {"id": 214, "seek": 72348, "start": 728.6, "end": 729.88, "text": " We have these final embeddings.", "tokens": [492, 362, 613, 2572, 12240, 29432, 13], "temperature": 0.0, "avg_logprob": -0.11312343649668237, "compression_ratio": 1.8927444794952681, "no_speech_prob": 3.3928822631423827e-06}, {"id": 215, "seek": 72348, "start": 729.88, "end": 733.28, "text": " Now we'd like to turn them into something that has a richer representation, thanks to", "tokens": [823, 321, 1116, 411, 281, 1261, 552, 666, 746, 300, 575, 257, 29021, 10290, 11, 3231, 281], "temperature": 0.0, "avg_logprob": -0.11312343649668237, "compression_ratio": 1.8927444794952681, "no_speech_prob": 3.3928822631423827e-06}, {"id": 216, "seek": 72348, "start": 733.28, "end": 735.16, "text": " some big transformer model.", "tokens": [512, 955, 31782, 2316, 13], "temperature": 0.0, "avg_logprob": -0.11312343649668237, "compression_ratio": 1.8927444794952681, "no_speech_prob": 3.3928822631423827e-06}, {"id": 217, "seek": 72348, "start": 735.16, "end": 738.86, "text": " And so we're going to feed these through, and I made this little diagram here.", "tokens": [400, 370, 321, 434, 516, 281, 3154, 613, 807, 11, 293, 286, 1027, 341, 707, 10686, 510, 13], "temperature": 0.0, "avg_logprob": -0.11312343649668237, "compression_ratio": 1.8927444794952681, "no_speech_prob": 3.3928822631423827e-06}, {"id": 218, "seek": 72348, "start": 738.86, "end": 742.96, "text": " Each token is going to turn into a token embedding, get combined with the positional embedding,", "tokens": [6947, 14862, 307, 516, 281, 1261, 666, 257, 14862, 12240, 3584, 11, 483, 9354, 365, 264, 2535, 304, 12240, 3584, 11], "temperature": 0.0, "avg_logprob": -0.11312343649668237, "compression_ratio": 1.8927444794952681, "no_speech_prob": 3.3928822631423827e-06}, {"id": 219, "seek": 72348, "start": 742.96, "end": 747.36, "text": " and then it's going to get fed through this transformer encoder, which is just a stack", "tokens": [293, 550, 309, 311, 516, 281, 483, 4636, 807, 341, 31782, 2058, 19866, 11, 597, 307, 445, 257, 8630], "temperature": 0.0, "avg_logprob": -0.11312343649668237, "compression_ratio": 1.8927444794952681, "no_speech_prob": 3.3928822631423827e-06}, {"id": 220, "seek": 72348, "start": 747.36, "end": 748.36, "text": " of these blocks.", "tokens": [295, 613, 8474, 13], "temperature": 0.0, "avg_logprob": -0.11312343649668237, "compression_ratio": 1.8927444794952681, "no_speech_prob": 3.3928822631423827e-06}, {"id": 221, "seek": 72348, "start": 748.36, "end": 753.16, "text": " And so each block has some magic like attention, has some feed forward components, there's", "tokens": [400, 370, 1184, 3461, 575, 512, 5585, 411, 3202, 11, 575, 512, 3154, 2128, 6677, 11, 456, 311], "temperature": 0.0, "avg_logprob": -0.11312343649668237, "compression_ratio": 1.8927444794952681, "no_speech_prob": 3.3928822631423827e-06}, {"id": 222, "seek": 75316, "start": 753.16, "end": 756.56, "text": " additions and normalizations and skips and so on as well.", "tokens": [35113, 293, 2710, 14455, 293, 1110, 2600, 293, 370, 322, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.1284711150085034, "compression_ratio": 1.8273615635179152, "no_speech_prob": 7.296008334378712e-06}, {"id": 223, "seek": 75316, "start": 756.56, "end": 759.9599999999999, "text": " But we're going to have some number of these blocks all stacked together, and the outputs", "tokens": [583, 321, 434, 516, 281, 362, 512, 1230, 295, 613, 8474, 439, 28867, 1214, 11, 293, 264, 23930], "temperature": 0.0, "avg_logprob": -0.1284711150085034, "compression_ratio": 1.8273615635179152, "no_speech_prob": 7.296008334378712e-06}, {"id": 224, "seek": 75316, "start": 759.9599999999999, "end": 764.12, "text": " of each one get fed into the next block and so on, until we get our final set of hidden", "tokens": [295, 1184, 472, 483, 4636, 666, 264, 958, 3461, 293, 370, 322, 11, 1826, 321, 483, 527, 2572, 992, 295, 7633], "temperature": 0.0, "avg_logprob": -0.1284711150085034, "compression_ratio": 1.8273615635179152, "no_speech_prob": 7.296008334378712e-06}, {"id": 225, "seek": 75316, "start": 764.12, "end": 765.12, "text": " states.", "tokens": [4368, 13], "temperature": 0.0, "avg_logprob": -0.1284711150085034, "compression_ratio": 1.8273615635179152, "no_speech_prob": 7.296008334378712e-06}, {"id": 226, "seek": 75316, "start": 765.12, "end": 769.8, "text": " These encoder hidden states, aka the output embeddings, and this is what we feed to our", "tokens": [1981, 2058, 19866, 7633, 4368, 11, 28042, 264, 5598, 12240, 29432, 11, 293, 341, 307, 437, 321, 3154, 281, 527], "temperature": 0.0, "avg_logprob": -0.1284711150085034, "compression_ratio": 1.8273615635179152, "no_speech_prob": 7.296008334378712e-06}, {"id": 227, "seek": 75316, "start": 769.8, "end": 772.48, "text": " unit to make its predictions.", "tokens": [4985, 281, 652, 1080, 21264, 13], "temperature": 0.0, "avg_logprob": -0.1284711150085034, "compression_ratio": 1.8273615635179152, "no_speech_prob": 7.296008334378712e-06}, {"id": 228, "seek": 75316, "start": 772.48, "end": 777.0799999999999, "text": " So the way we get this, I just copied the textencoder.textmodel.forward method, pulled", "tokens": [407, 264, 636, 321, 483, 341, 11, 286, 445, 25365, 264, 2487, 22660, 19866, 13, 25111, 8014, 338, 13, 13305, 3170, 11, 7373], "temperature": 0.0, "avg_logprob": -0.1284711150085034, "compression_ratio": 1.8273615635179152, "no_speech_prob": 7.296008334378712e-06}, {"id": 229, "seek": 75316, "start": 777.0799999999999, "end": 778.0799999999999, "text": " out the relevant bits.", "tokens": [484, 264, 7340, 9239, 13], "temperature": 0.0, "avg_logprob": -0.1284711150085034, "compression_ratio": 1.8273615635179152, "no_speech_prob": 7.296008334378712e-06}, {"id": 230, "seek": 75316, "start": 778.0799999999999, "end": 782.36, "text": " We are going to take in those input embeddings, combined positional and token embeddings,", "tokens": [492, 366, 516, 281, 747, 294, 729, 4846, 12240, 29432, 11, 9354, 2535, 304, 293, 14862, 12240, 29432, 11], "temperature": 0.0, "avg_logprob": -0.1284711150085034, "compression_ratio": 1.8273615635179152, "no_speech_prob": 7.296008334378712e-06}, {"id": 231, "seek": 78236, "start": 782.36, "end": 787.84, "text": " and we're going to feed that through the textmodel.encoder function with some additional parameters around", "tokens": [293, 321, 434, 516, 281, 3154, 300, 807, 264, 2487, 8014, 338, 13, 22660, 19866, 2445, 365, 512, 4497, 9834, 926], "temperature": 0.0, "avg_logprob": -0.097723687341971, "compression_ratio": 1.8472222222222223, "no_speech_prob": 2.0903723907395033e-06}, {"id": 232, "seek": 78236, "start": 787.84, "end": 792.32, "text": " attention masking and telling it that we'd like to output the hidden states rather than", "tokens": [3202, 31226, 293, 3585, 309, 300, 321, 1116, 411, 281, 5598, 264, 7633, 4368, 2831, 813], "temperature": 0.0, "avg_logprob": -0.097723687341971, "compression_ratio": 1.8472222222222223, "no_speech_prob": 2.0903723907395033e-06}, {"id": 233, "seek": 78236, "start": 792.32, "end": 794.6, "text": " the final outputs.", "tokens": [264, 2572, 23930, 13], "temperature": 0.0, "avg_logprob": -0.097723687341971, "compression_ratio": 1.8472222222222223, "no_speech_prob": 2.0903723907395033e-06}, {"id": 234, "seek": 78236, "start": 794.6, "end": 797.04, "text": " So if we run this, we can just double check.", "tokens": [407, 498, 321, 1190, 341, 11, 321, 393, 445, 3834, 1520, 13], "temperature": 0.0, "avg_logprob": -0.097723687341971, "compression_ratio": 1.8472222222222223, "no_speech_prob": 2.0903723907395033e-06}, {"id": 235, "seek": 78236, "start": 797.04, "end": 801.44, "text": " These embeddings are going to look just like the output embeddings we saw right at the", "tokens": [1981, 12240, 29432, 366, 516, 281, 574, 445, 411, 264, 5598, 12240, 29432, 321, 1866, 558, 412, 264], "temperature": 0.0, "avg_logprob": -0.097723687341971, "compression_ratio": 1.8472222222222223, "no_speech_prob": 2.0903723907395033e-06}, {"id": 236, "seek": 78236, "start": 801.44, "end": 802.44, "text": " beginning.", "tokens": [2863, 13], "temperature": 0.0, "avg_logprob": -0.097723687341971, "compression_ratio": 1.8472222222222223, "no_speech_prob": 2.0903723907395033e-06}, {"id": 237, "seek": 78236, "start": 802.44, "end": 806.2, "text": " So we've taken that one step, tokens to output embeddings, and we've broken it down into", "tokens": [407, 321, 600, 2726, 300, 472, 1823, 11, 22667, 281, 5598, 12240, 29432, 11, 293, 321, 600, 5463, 309, 760, 666], "temperature": 0.0, "avg_logprob": -0.097723687341971, "compression_ratio": 1.8472222222222223, "no_speech_prob": 2.0903723907395033e-06}, {"id": 238, "seek": 78236, "start": 806.2, "end": 810.6, "text": " this number of smaller steps where we have tokenization, getting our token embeddings,", "tokens": [341, 1230, 295, 4356, 4439, 689, 321, 362, 14862, 2144, 11, 1242, 527, 14862, 12240, 29432, 11], "temperature": 0.0, "avg_logprob": -0.097723687341971, "compression_ratio": 1.8472222222222223, "no_speech_prob": 2.0903723907395033e-06}, {"id": 239, "seek": 81060, "start": 810.6, "end": 813.44, "text": " starting with position embeddings, feeding it through the model, and then that gives", "tokens": [2891, 365, 2535, 12240, 29432, 11, 12919, 309, 807, 264, 2316, 11, 293, 550, 300, 2709], "temperature": 0.0, "avg_logprob": -0.1411253743701511, "compression_ratio": 1.8401360544217686, "no_speech_prob": 1.2027624507027213e-05}, {"id": 240, "seek": 81060, "start": 813.44, "end": 815.6800000000001, "text": " us those final outputs.", "tokens": [505, 729, 2572, 23930, 13], "temperature": 0.0, "avg_logprob": -0.1411253743701511, "compression_ratio": 1.8401360544217686, "no_speech_prob": 1.2027624507027213e-05}, {"id": 241, "seek": 81060, "start": 815.6800000000001, "end": 817.16, "text": " So why have we gone through this trouble?", "tokens": [407, 983, 362, 321, 2780, 807, 341, 5253, 30], "temperature": 0.0, "avg_logprob": -0.1411253743701511, "compression_ratio": 1.8401360544217686, "no_speech_prob": 1.2027624507027213e-05}, {"id": 242, "seek": 81060, "start": 817.16, "end": 819.9200000000001, "text": " Well, there's a couple of things we can do.", "tokens": [1042, 11, 456, 311, 257, 1916, 295, 721, 321, 393, 360, 13], "temperature": 0.0, "avg_logprob": -0.1411253743701511, "compression_ratio": 1.8401360544217686, "no_speech_prob": 1.2027624507027213e-05}, {"id": 243, "seek": 81060, "start": 819.9200000000001, "end": 826.44, "text": " One demoed here, I'm getting the token embeddings, but then I'm looking up where is the token", "tokens": [1485, 10723, 292, 510, 11, 286, 478, 1242, 264, 14862, 12240, 29432, 11, 457, 550, 286, 478, 1237, 493, 689, 307, 264, 14862], "temperature": 0.0, "avg_logprob": -0.1411253743701511, "compression_ratio": 1.8401360544217686, "no_speech_prob": 1.2027624507027213e-05}, {"id": 244, "seek": 81060, "start": 826.44, "end": 829.76, "text": " for Puppy, and I'm going to replace it with a new set of embeddings.", "tokens": [337, 13605, 7966, 11, 293, 286, 478, 516, 281, 7406, 309, 365, 257, 777, 992, 295, 12240, 29432, 13], "temperature": 0.0, "avg_logprob": -0.1411253743701511, "compression_ratio": 1.8401360544217686, "no_speech_prob": 1.2027624507027213e-05}, {"id": 245, "seek": 81060, "start": 829.76, "end": 834.84, "text": " And this is going to be another just learned embedding of this particular token here, 2368.", "tokens": [400, 341, 307, 516, 281, 312, 1071, 445, 3264, 12240, 3584, 295, 341, 1729, 14862, 510, 11, 6673, 27102, 13], "temperature": 0.0, "avg_logprob": -0.1411253743701511, "compression_ratio": 1.8401360544217686, "no_speech_prob": 1.2027624507027213e-05}, {"id": 246, "seek": 81060, "start": 834.84, "end": 839.96, "text": " So I'm kind of cutting out the token embedding for Puppy, slipping in this new set of token", "tokens": [407, 286, 478, 733, 295, 6492, 484, 264, 14862, 12240, 3584, 337, 13605, 7966, 11, 36779, 294, 341, 777, 992, 295, 14862], "temperature": 0.0, "avg_logprob": -0.1411253743701511, "compression_ratio": 1.8401360544217686, "no_speech_prob": 1.2027624507027213e-05}, {"id": 247, "seek": 83996, "start": 839.96, "end": 843.88, "text": " embeddings, and I'm going to get some output embeddings, which at the start look very similar", "tokens": [12240, 29432, 11, 293, 286, 478, 516, 281, 483, 512, 5598, 12240, 29432, 11, 597, 412, 264, 722, 574, 588, 2531], "temperature": 0.0, "avg_logprob": -0.11534212046656116, "compression_ratio": 1.7759197324414715, "no_speech_prob": 8.664440429129172e-06}, {"id": 248, "seek": 83996, "start": 843.88, "end": 846.6800000000001, "text": " to the previous ones, in fact, identical.", "tokens": [281, 264, 3894, 2306, 11, 294, 1186, 11, 14800, 13], "temperature": 0.0, "avg_logprob": -0.11534212046656116, "compression_ratio": 1.7759197324414715, "no_speech_prob": 8.664440429129172e-06}, {"id": 249, "seek": 83996, "start": 846.6800000000001, "end": 850.1600000000001, "text": " But as soon as you get past the position of Puppy in that prompt, you're going to see", "tokens": [583, 382, 2321, 382, 291, 483, 1791, 264, 2535, 295, 13605, 7966, 294, 300, 12391, 11, 291, 434, 516, 281, 536], "temperature": 0.0, "avg_logprob": -0.11534212046656116, "compression_ratio": 1.7759197324414715, "no_speech_prob": 8.664440429129172e-06}, {"id": 250, "seek": 83996, "start": 850.1600000000001, "end": 851.9200000000001, "text": " that the rest have changed.", "tokens": [300, 264, 1472, 362, 3105, 13], "temperature": 0.0, "avg_logprob": -0.11534212046656116, "compression_ratio": 1.7759197324414715, "no_speech_prob": 8.664440429129172e-06}, {"id": 251, "seek": 83996, "start": 851.9200000000001, "end": 855.72, "text": " So we've somehow messed with these embeddings by slipping in this new token embedding right", "tokens": [407, 321, 600, 6063, 16507, 365, 613, 12240, 29432, 538, 36779, 294, 341, 777, 14862, 12240, 3584, 558], "temperature": 0.0, "avg_logprob": -0.11534212046656116, "compression_ratio": 1.7759197324414715, "no_speech_prob": 8.664440429129172e-06}, {"id": 252, "seek": 83996, "start": 855.72, "end": 856.72, "text": " at the start.", "tokens": [412, 264, 722, 13], "temperature": 0.0, "avg_logprob": -0.11534212046656116, "compression_ratio": 1.7759197324414715, "no_speech_prob": 8.664440429129172e-06}, {"id": 253, "seek": 83996, "start": 856.72, "end": 861.08, "text": " And if we generate with those embeddings, which is what this function is doing, we should", "tokens": [400, 498, 321, 8460, 365, 729, 12240, 29432, 11, 597, 307, 437, 341, 2445, 307, 884, 11, 321, 820], "temperature": 0.0, "avg_logprob": -0.11534212046656116, "compression_ratio": 1.7759197324414715, "no_speech_prob": 8.664440429129172e-06}, {"id": 254, "seek": 83996, "start": 861.08, "end": 863.72, "text": " see something other than a Puppy.", "tokens": [536, 746, 661, 813, 257, 13605, 7966, 13], "temperature": 0.0, "avg_logprob": -0.11534212046656116, "compression_ratio": 1.7759197324414715, "no_speech_prob": 8.664440429129172e-06}, {"id": 255, "seek": 83996, "start": 863.72, "end": 866.5600000000001, "text": " And sure enough, drum roll, we don't.", "tokens": [400, 988, 1547, 11, 10206, 3373, 11, 321, 500, 380, 13], "temperature": 0.0, "avg_logprob": -0.11534212046656116, "compression_ratio": 1.7759197324414715, "no_speech_prob": 8.664440429129172e-06}, {"id": 256, "seek": 83996, "start": 866.5600000000001, "end": 867.6, "text": " We get a cat.", "tokens": [492, 483, 257, 3857, 13], "temperature": 0.0, "avg_logprob": -0.11534212046656116, "compression_ratio": 1.7759197324414715, "no_speech_prob": 8.664440429129172e-06}, {"id": 257, "seek": 86760, "start": 867.6, "end": 871.6800000000001, "text": " And so now you know what token 2368 means.", "tokens": [400, 370, 586, 291, 458, 437, 14862, 6673, 27102, 1355, 13], "temperature": 0.0, "avg_logprob": -0.11591486432659093, "compression_ratio": 1.7434944237918215, "no_speech_prob": 8.267008524853736e-06}, {"id": 258, "seek": 86760, "start": 871.6800000000001, "end": 874.96, "text": " We've managed to slip in a new token embedding and get a different image.", "tokens": [492, 600, 6453, 281, 11140, 294, 257, 777, 14862, 12240, 3584, 293, 483, 257, 819, 3256, 13], "temperature": 0.0, "avg_logprob": -0.11591486432659093, "compression_ratio": 1.7434944237918215, "no_speech_prob": 8.267008524853736e-06}, {"id": 259, "seek": 86760, "start": 874.96, "end": 876.36, "text": " Okay, what can we do with this?", "tokens": [1033, 11, 437, 393, 321, 360, 365, 341, 30], "temperature": 0.0, "avg_logprob": -0.11591486432659093, "compression_ratio": 1.7434944237918215, "no_speech_prob": 8.267008524853736e-06}, {"id": 260, "seek": 86760, "start": 876.36, "end": 877.36, "text": " Why is this fun?", "tokens": [1545, 307, 341, 1019, 30], "temperature": 0.0, "avg_logprob": -0.11591486432659093, "compression_ratio": 1.7434944237918215, "no_speech_prob": 8.267008524853736e-06}, {"id": 261, "seek": 86760, "start": 877.36, "end": 878.88, "text": " Well, a couple of tricks.", "tokens": [1042, 11, 257, 1916, 295, 11733, 13], "temperature": 0.0, "avg_logprob": -0.11591486432659093, "compression_ratio": 1.7434944237918215, "no_speech_prob": 8.267008524853736e-06}, {"id": 262, "seek": 86760, "start": 878.88, "end": 884.28, "text": " First off, we could look up the token embedding for Skunk, right, which is this number here.", "tokens": [2386, 766, 11, 321, 727, 574, 493, 264, 14862, 12240, 3584, 337, 7324, 3197, 11, 558, 11, 597, 307, 341, 1230, 510, 13], "temperature": 0.0, "avg_logprob": -0.11591486432659093, "compression_ratio": 1.7434944237918215, "no_speech_prob": 8.267008524853736e-06}, {"id": 263, "seek": 86760, "start": 884.28, "end": 889.0400000000001, "text": " And then instead of now just replacing that in place of Puppy, what if I make a new token", "tokens": [400, 550, 2602, 295, 586, 445, 19139, 300, 294, 1081, 295, 13605, 7966, 11, 437, 498, 286, 652, 257, 777, 14862], "temperature": 0.0, "avg_logprob": -0.11591486432659093, "compression_ratio": 1.7434944237918215, "no_speech_prob": 8.267008524853736e-06}, {"id": 264, "seek": 86760, "start": 889.0400000000001, "end": 894.72, "text": " embedding that's some combination of the embedding of Puppy and the embedding of Skunk, right?", "tokens": [12240, 3584, 300, 311, 512, 6562, 295, 264, 12240, 3584, 295, 13605, 7966, 293, 264, 12240, 3584, 295, 7324, 3197, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.11591486432659093, "compression_ratio": 1.7434944237918215, "no_speech_prob": 8.267008524853736e-06}, {"id": 265, "seek": 89472, "start": 894.72, "end": 899.08, "text": " So I'm taking these two token embeddings, I'm just averaging them, and I'm inserting", "tokens": [407, 286, 478, 1940, 613, 732, 14862, 12240, 29432, 11, 286, 478, 445, 47308, 552, 11, 293, 286, 478, 46567], "temperature": 0.0, "avg_logprob": -0.1266286953075512, "compression_ratio": 1.7852348993288591, "no_speech_prob": 5.2551558837876655e-06}, {"id": 266, "seek": 89472, "start": 899.08, "end": 905.2, "text": " them into my set of token embeddings for my prompt in place of just the word Puppy.", "tokens": [552, 666, 452, 992, 295, 14862, 12240, 29432, 337, 452, 12391, 294, 1081, 295, 445, 264, 1349, 13605, 7966, 13], "temperature": 0.0, "avg_logprob": -0.1266286953075512, "compression_ratio": 1.7852348993288591, "no_speech_prob": 5.2551558837876655e-06}, {"id": 267, "seek": 89472, "start": 905.2, "end": 908.48, "text": " And so hopefully when we generate with this, we get something that looks a bit like a Puppy,", "tokens": [400, 370, 4696, 562, 321, 8460, 365, 341, 11, 321, 483, 746, 300, 1542, 257, 857, 411, 257, 13605, 7966, 11], "temperature": 0.0, "avg_logprob": -0.1266286953075512, "compression_ratio": 1.7852348993288591, "no_speech_prob": 5.2551558837876655e-06}, {"id": 268, "seek": 89472, "start": 908.48, "end": 910.48, "text": " a bit like a Skunk.", "tokens": [257, 857, 411, 257, 7324, 3197, 13], "temperature": 0.0, "avg_logprob": -0.1266286953075512, "compression_ratio": 1.7852348993288591, "no_speech_prob": 5.2551558837876655e-06}, {"id": 269, "seek": 89472, "start": 910.48, "end": 913.2, "text": " And this doesn't work all the time, but it's pretty cute when it does.", "tokens": [400, 341, 1177, 380, 589, 439, 264, 565, 11, 457, 309, 311, 1238, 4052, 562, 309, 775, 13], "temperature": 0.0, "avg_logprob": -0.1266286953075512, "compression_ratio": 1.7852348993288591, "no_speech_prob": 5.2551558837876655e-06}, {"id": 270, "seek": 89472, "start": 913.2, "end": 915.12, "text": " There we go, Puppy-Skunk hybrid.", "tokens": [821, 321, 352, 11, 13605, 7966, 12, 50, 74, 3197, 13051, 13], "temperature": 0.0, "avg_logprob": -0.1266286953075512, "compression_ratio": 1.7852348993288591, "no_speech_prob": 5.2551558837876655e-06}, {"id": 271, "seek": 89472, "start": 915.12, "end": 918.6800000000001, "text": " Okay, so that's not the real reason we're looking at this.", "tokens": [1033, 11, 370, 300, 311, 406, 264, 957, 1778, 321, 434, 1237, 412, 341, 13], "temperature": 0.0, "avg_logprob": -0.1266286953075512, "compression_ratio": 1.7852348993288591, "no_speech_prob": 5.2551558837876655e-06}, {"id": 272, "seek": 89472, "start": 918.6800000000001, "end": 922.5600000000001, "text": " The main application at the moment of being able to mess with these token embeddings is", "tokens": [440, 2135, 3861, 412, 264, 1623, 295, 885, 1075, 281, 2082, 365, 613, 14862, 12240, 29432, 307], "temperature": 0.0, "avg_logprob": -0.1266286953075512, "compression_ratio": 1.7852348993288591, "no_speech_prob": 5.2551558837876655e-06}, {"id": 273, "seek": 92256, "start": 922.56, "end": 925.54, "text": " to be able to do something called textual inversion.", "tokens": [281, 312, 1075, 281, 360, 746, 1219, 2487, 901, 43576, 13], "temperature": 0.0, "avg_logprob": -0.14761571366657583, "compression_ratio": 1.8339222614840989, "no_speech_prob": 1.392320427839877e-06}, {"id": 274, "seek": 92256, "start": 925.54, "end": 929.4, "text": " So in textual inversion, we're going to have our prompt tokenizer and so on.", "tokens": [407, 294, 2487, 901, 43576, 11, 321, 434, 516, 281, 362, 527, 12391, 14862, 6545, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.14761571366657583, "compression_ratio": 1.8339222614840989, "no_speech_prob": 1.392320427839877e-06}, {"id": 275, "seek": 92256, "start": 929.4, "end": 934.26, "text": " But here we're going to have a special learned embedding for some new concept, right?", "tokens": [583, 510, 321, 434, 516, 281, 362, 257, 2121, 3264, 12240, 3584, 337, 512, 777, 3410, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.14761571366657583, "compression_ratio": 1.8339222614840989, "no_speech_prob": 1.392320427839877e-06}, {"id": 276, "seek": 92256, "start": 934.26, "end": 938.2399999999999, "text": " And so the way that's trained is it's going to be outside of the scope of this notebook,", "tokens": [400, 370, 264, 636, 300, 311, 8895, 307, 309, 311, 516, 281, 312, 2380, 295, 264, 11923, 295, 341, 21060, 11], "temperature": 0.0, "avg_logprob": -0.14761571366657583, "compression_ratio": 1.8339222614840989, "no_speech_prob": 1.392320427839877e-06}, {"id": 277, "seek": 92256, "start": 938.2399999999999, "end": 943.18, "text": " but there's a good blog post and community notebooks and things for doing that.", "tokens": [457, 456, 311, 257, 665, 6968, 2183, 293, 1768, 43782, 293, 721, 337, 884, 300, 13], "temperature": 0.0, "avg_logprob": -0.14761571366657583, "compression_ratio": 1.8339222614840989, "no_speech_prob": 1.392320427839877e-06}, {"id": 278, "seek": 92256, "start": 943.18, "end": 945.04, "text": " But let's just see this in application here.", "tokens": [583, 718, 311, 445, 536, 341, 294, 3861, 510, 13], "temperature": 0.0, "avg_logprob": -0.14761571366657583, "compression_ratio": 1.8339222614840989, "no_speech_prob": 1.392320427839877e-06}, {"id": 279, "seek": 92256, "start": 945.04, "end": 950.76, "text": " So there's a whole library of these concepts, stable diffusion concept library, where you", "tokens": [407, 456, 311, 257, 1379, 6405, 295, 613, 10392, 11, 8351, 25242, 3410, 6405, 11, 689, 291], "temperature": 0.0, "avg_logprob": -0.14761571366657583, "compression_ratio": 1.8339222614840989, "no_speech_prob": 1.392320427839877e-06}, {"id": 280, "seek": 95076, "start": 950.76, "end": 958.92, "text": " can browse through tons and tons and tons, look over 1,400 different community contributed", "tokens": [393, 31442, 807, 9131, 293, 9131, 293, 9131, 11, 574, 670, 502, 11, 13741, 819, 1768, 18434], "temperature": 0.0, "avg_logprob": -0.17209602224415746, "compression_ratio": 1.6937269372693726, "no_speech_prob": 8.267362318292726e-06}, {"id": 281, "seek": 95076, "start": 958.92, "end": 960.96, "text": " token embeddings that people have trained.", "tokens": [14862, 12240, 29432, 300, 561, 362, 8895, 13], "temperature": 0.0, "avg_logprob": -0.17209602224415746, "compression_ratio": 1.6937269372693726, "no_speech_prob": 8.267362318292726e-06}, {"id": 282, "seek": 95076, "start": 960.96, "end": 963.64, "text": " So I'm going to use this one here, this bird style.", "tokens": [407, 286, 478, 516, 281, 764, 341, 472, 510, 11, 341, 5255, 3758, 13], "temperature": 0.0, "avg_logprob": -0.17209602224415746, "compression_ratio": 1.6937269372693726, "no_speech_prob": 8.267362318292726e-06}, {"id": 283, "seek": 95076, "start": 963.64, "end": 965.18, "text": " Here's some example outputs.", "tokens": [1692, 311, 512, 1365, 23930, 13], "temperature": 0.0, "avg_logprob": -0.17209602224415746, "compression_ratio": 1.6937269372693726, "no_speech_prob": 8.267362318292726e-06}, {"id": 284, "seek": 95076, "start": 965.18, "end": 967.08, "text": " And then these are the images it was trained on.", "tokens": [400, 550, 613, 366, 264, 5267, 309, 390, 8895, 322, 13], "temperature": 0.0, "avg_logprob": -0.17209602224415746, "compression_ratio": 1.6937269372693726, "no_speech_prob": 8.267362318292726e-06}, {"id": 285, "seek": 95076, "start": 967.08, "end": 970.24, "text": " So these pretty little bird paintings done by my mother.", "tokens": [407, 613, 1238, 707, 5255, 14880, 1096, 538, 452, 2895, 13], "temperature": 0.0, "avg_logprob": -0.17209602224415746, "compression_ratio": 1.6937269372693726, "no_speech_prob": 8.267362318292726e-06}, {"id": 286, "seek": 95076, "start": 970.24, "end": 975.7, "text": " I've trained a new token embedding that tries to capture the essence of the style.", "tokens": [286, 600, 8895, 257, 777, 14862, 12240, 3584, 300, 9898, 281, 7983, 264, 12801, 295, 264, 3758, 13], "temperature": 0.0, "avg_logprob": -0.17209602224415746, "compression_ratio": 1.6937269372693726, "no_speech_prob": 8.267362318292726e-06}, {"id": 287, "seek": 95076, "start": 975.7, "end": 978.52, "text": " And that's represented here in this learned embeds.bin.", "tokens": [400, 300, 311, 10379, 510, 294, 341, 3264, 12240, 82, 13, 13496, 13], "temperature": 0.0, "avg_logprob": -0.17209602224415746, "compression_ratio": 1.6937269372693726, "no_speech_prob": 8.267362318292726e-06}, {"id": 288, "seek": 97852, "start": 978.52, "end": 981.72, "text": " So if you download this and then upload it to wherever your notebook's running, I have", "tokens": [407, 498, 291, 5484, 341, 293, 550, 6580, 309, 281, 8660, 428, 21060, 311, 2614, 11, 286, 362], "temperature": 0.0, "avg_logprob": -0.11785363812818594, "compression_ratio": 1.7708333333333333, "no_speech_prob": 1.99464921024628e-06}, {"id": 289, "seek": 97852, "start": 981.72, "end": 983.84, "text": " it here, learned embeds.bin.", "tokens": [309, 510, 11, 3264, 12240, 82, 13, 13496, 13], "temperature": 0.0, "avg_logprob": -0.11785363812818594, "compression_ratio": 1.7708333333333333, "no_speech_prob": 1.99464921024628e-06}, {"id": 290, "seek": 97852, "start": 983.84, "end": 988.88, "text": " We can load that in and you'll see that it's just a dictionary where we have one key, that's", "tokens": [492, 393, 3677, 300, 294, 293, 291, 603, 536, 300, 309, 311, 445, 257, 25890, 689, 321, 362, 472, 2141, 11, 300, 311], "temperature": 0.0, "avg_logprob": -0.11785363812818594, "compression_ratio": 1.7708333333333333, "no_speech_prob": 1.99464921024628e-06}, {"id": 291, "seek": 97852, "start": 988.88, "end": 991.4399999999999, "text": " the name of my new style.", "tokens": [264, 1315, 295, 452, 777, 3758, 13], "temperature": 0.0, "avg_logprob": -0.11785363812818594, "compression_ratio": 1.7708333333333333, "no_speech_prob": 1.99464921024628e-06}, {"id": 292, "seek": 97852, "start": 991.4399999999999, "end": 994.6, "text": " And then we have this token embedding, 768 numbers.", "tokens": [400, 550, 321, 362, 341, 14862, 12240, 3584, 11, 24733, 23, 3547, 13], "temperature": 0.0, "avg_logprob": -0.11785363812818594, "compression_ratio": 1.7708333333333333, "no_speech_prob": 1.99464921024628e-06}, {"id": 293, "seek": 97852, "start": 994.6, "end": 998.0799999999999, "text": " And so now instead of slipping in the token embedding for cat, we're going to slip in", "tokens": [400, 370, 586, 2602, 295, 36779, 294, 264, 14862, 12240, 3584, 337, 3857, 11, 321, 434, 516, 281, 11140, 294], "temperature": 0.0, "avg_logprob": -0.11785363812818594, "compression_ratio": 1.7708333333333333, "no_speech_prob": 1.99464921024628e-06}, {"id": 294, "seek": 97852, "start": 998.0799999999999, "end": 1001.76, "text": " this new embedding, which we've loaded from the file into this prompt.", "tokens": [341, 777, 12240, 3584, 11, 597, 321, 600, 13210, 490, 264, 3991, 666, 341, 12391, 13], "temperature": 0.0, "avg_logprob": -0.11785363812818594, "compression_ratio": 1.7708333333333333, "no_speech_prob": 1.99464921024628e-06}, {"id": 295, "seek": 97852, "start": 1001.76, "end": 1005.52, "text": " So mouse in the style of puppy, tokenize, get my token embeddings.", "tokens": [407, 9719, 294, 264, 3758, 295, 18196, 11, 14862, 1125, 11, 483, 452, 14862, 12240, 29432, 13], "temperature": 0.0, "avg_logprob": -0.11785363812818594, "compression_ratio": 1.7708333333333333, "no_speech_prob": 1.99464921024628e-06}, {"id": 296, "seek": 100552, "start": 1005.52, "end": 1011.46, "text": " And then I'm going to slip in this replacement embedding in place of the embedding for puppy.", "tokens": [400, 550, 286, 478, 516, 281, 11140, 294, 341, 14419, 12240, 3584, 294, 1081, 295, 264, 12240, 3584, 337, 18196, 13], "temperature": 0.0, "avg_logprob": -0.15661599900987414, "compression_ratio": 1.7153024911032029, "no_speech_prob": 1.1813915079983417e-05}, {"id": 297, "seek": 100552, "start": 1011.46, "end": 1015.88, "text": " And when we generate with that, we should hopefully get a mouse in the style of this", "tokens": [400, 562, 321, 8460, 365, 300, 11, 321, 820, 4696, 483, 257, 9719, 294, 264, 3758, 295, 341], "temperature": 0.0, "avg_logprob": -0.15661599900987414, "compression_ratio": 1.7153024911032029, "no_speech_prob": 1.1813915079983417e-05}, {"id": 298, "seek": 100552, "start": 1015.88, "end": 1020.1999999999999, "text": " kind of cutesy watercolor on rough paper image.", "tokens": [733, 295, 1723, 17823, 31727, 322, 5903, 3035, 3256, 13], "temperature": 0.0, "avg_logprob": -0.15661599900987414, "compression_ratio": 1.7153024911032029, "no_speech_prob": 1.1813915079983417e-05}, {"id": 299, "seek": 100552, "start": 1020.1999999999999, "end": 1024.36, "text": " And sure enough, that's what we get, very cute little drawing of a mouse in an apron,", "tokens": [400, 988, 1547, 11, 300, 311, 437, 321, 483, 11, 588, 4052, 707, 6316, 295, 257, 9719, 294, 364, 46742, 11], "temperature": 0.0, "avg_logprob": -0.15661599900987414, "compression_ratio": 1.7153024911032029, "no_speech_prob": 1.1813915079983417e-05}, {"id": 300, "seek": 100552, "start": 1024.36, "end": 1025.36, "text": " apparently.", "tokens": [7970, 13], "temperature": 0.0, "avg_logprob": -0.15661599900987414, "compression_ratio": 1.7153024911032029, "no_speech_prob": 1.1813915079983417e-05}, {"id": 301, "seek": 100552, "start": 1025.36, "end": 1027.32, "text": " Okay, so very, very cool application.", "tokens": [1033, 11, 370, 588, 11, 588, 1627, 3861, 13], "temperature": 0.0, "avg_logprob": -0.15661599900987414, "compression_ratio": 1.7153024911032029, "no_speech_prob": 1.1813915079983417e-05}, {"id": 302, "seek": 100552, "start": 1027.32, "end": 1031.24, "text": " Again, there's a nice inference notebook that makes this really easy.", "tokens": [3764, 11, 456, 311, 257, 1481, 38253, 21060, 300, 1669, 341, 534, 1858, 13], "temperature": 0.0, "avg_logprob": -0.15661599900987414, "compression_ratio": 1.7153024911032029, "no_speech_prob": 1.1813915079983417e-05}, {"id": 303, "seek": 100552, "start": 1031.24, "end": 1033.32, "text": " You can say a cat toy in the style of bird style.", "tokens": [509, 393, 584, 257, 3857, 12058, 294, 264, 3758, 295, 5255, 3758, 13], "temperature": 0.0, "avg_logprob": -0.15661599900987414, "compression_ratio": 1.7153024911032029, "no_speech_prob": 1.1813915079983417e-05}, {"id": 304, "seek": 103332, "start": 1033.32, "end": 1037.1599999999999, "text": " You don't have to worry about manually replacing the token embeddings yourself.", "tokens": [509, 500, 380, 362, 281, 3292, 466, 16945, 19139, 264, 14862, 12240, 29432, 1803, 13], "temperature": 0.0, "avg_logprob": -0.11602495100114729, "compression_ratio": 1.7246376811594204, "no_speech_prob": 6.6429306571080815e-06}, {"id": 305, "seek": 103332, "start": 1037.1599999999999, "end": 1039.74, "text": " But it's good to know what the code looks like under the hood, right?", "tokens": [583, 309, 311, 665, 281, 458, 437, 264, 3089, 1542, 411, 833, 264, 13376, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.11602495100114729, "compression_ratio": 1.7246376811594204, "no_speech_prob": 6.6429306571080815e-06}, {"id": 306, "seek": 103332, "start": 1039.74, "end": 1040.74, "text": " How are we doing that?", "tokens": [1012, 366, 321, 884, 300, 30], "temperature": 0.0, "avg_logprob": -0.11602495100114729, "compression_ratio": 1.7246376811594204, "no_speech_prob": 6.6429306571080815e-06}, {"id": 307, "seek": 103332, "start": 1040.74, "end": 1044.6, "text": " What stage of the text embedding process we're modifying.", "tokens": [708, 3233, 295, 264, 2487, 12240, 3584, 1399, 321, 434, 42626, 13], "temperature": 0.0, "avg_logprob": -0.11602495100114729, "compression_ratio": 1.7246376811594204, "no_speech_prob": 6.6429306571080815e-06}, {"id": 308, "seek": 103332, "start": 1044.6, "end": 1048.32, "text": " Very fun to get a bit of extra control and a very useful technique because now we can", "tokens": [4372, 1019, 281, 483, 257, 857, 295, 2857, 1969, 293, 257, 588, 4420, 6532, 570, 586, 321, 393], "temperature": 0.0, "avg_logprob": -0.11602495100114729, "compression_ratio": 1.7246376811594204, "no_speech_prob": 6.6429306571080815e-06}, {"id": 309, "seek": 103332, "start": 1048.32, "end": 1053.1599999999999, "text": " kind of augment our models vocabulary without having to actually retrain the model itself.", "tokens": [733, 295, 29919, 527, 5245, 19864, 1553, 1419, 281, 767, 1533, 7146, 264, 2316, 2564, 13], "temperature": 0.0, "avg_logprob": -0.11602495100114729, "compression_ratio": 1.7246376811594204, "no_speech_prob": 6.6429306571080815e-06}, {"id": 310, "seek": 103332, "start": 1053.1599999999999, "end": 1054.72, "text": " We just learning a new token embedding.", "tokens": [492, 445, 2539, 257, 777, 14862, 12240, 3584, 13], "temperature": 0.0, "avg_logprob": -0.11602495100114729, "compression_ratio": 1.7246376811594204, "no_speech_prob": 6.6429306571080815e-06}, {"id": 311, "seek": 103332, "start": 1054.72, "end": 1057.6399999999999, "text": " So very, very powerful idea and really fun to play with.", "tokens": [407, 588, 11, 588, 4005, 1558, 293, 534, 1019, 281, 862, 365, 13], "temperature": 0.0, "avg_logprob": -0.11602495100114729, "compression_ratio": 1.7246376811594204, "no_speech_prob": 6.6429306571080815e-06}, {"id": 312, "seek": 103332, "start": 1057.6399999999999, "end": 1062.02, "text": " And like I said, there's thousands of community contribute contributed tokens, but you can", "tokens": [400, 411, 286, 848, 11, 456, 311, 5383, 295, 1768, 10586, 18434, 22667, 11, 457, 291, 393], "temperature": 0.0, "avg_logprob": -0.11602495100114729, "compression_ratio": 1.7246376811594204, "no_speech_prob": 6.6429306571080815e-06}, {"id": 313, "seek": 106202, "start": 1062.02, "end": 1063.48, "text": " also train your own.", "tokens": [611, 3847, 428, 1065, 13], "temperature": 0.0, "avg_logprob": -0.13695748444575412, "compression_ratio": 1.8722741433021808, "no_speech_prob": 8.01291662355652e-06}, {"id": 314, "seek": 106202, "start": 1063.48, "end": 1067.36, "text": " I think I linked the notebook from here, but it's also in all the docs and so on.", "tokens": [286, 519, 286, 9408, 264, 21060, 490, 510, 11, 457, 309, 311, 611, 294, 439, 264, 45623, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.13695748444575412, "compression_ratio": 1.8722741433021808, "no_speech_prob": 8.01291662355652e-06}, {"id": 315, "seek": 106202, "start": 1067.36, "end": 1069.08, "text": " Here's the training notebook.", "tokens": [1692, 311, 264, 3097, 21060, 13], "temperature": 0.0, "avg_logprob": -0.13695748444575412, "compression_ratio": 1.8722741433021808, "no_speech_prob": 8.01291662355652e-06}, {"id": 316, "seek": 106202, "start": 1069.08, "end": 1072.32, "text": " Okay, final little trick with embeddings.", "tokens": [1033, 11, 2572, 707, 4282, 365, 12240, 29432, 13], "temperature": 0.0, "avg_logprob": -0.13695748444575412, "compression_ratio": 1.8722741433021808, "no_speech_prob": 8.01291662355652e-06}, {"id": 317, "seek": 106202, "start": 1072.32, "end": 1075.6, "text": " Rather than messing with them at the token embedding level, we can push the whole prompt", "tokens": [16571, 813, 23258, 365, 552, 412, 264, 14862, 12240, 3584, 1496, 11, 321, 393, 2944, 264, 1379, 12391], "temperature": 0.0, "avg_logprob": -0.13695748444575412, "compression_ratio": 1.8722741433021808, "no_speech_prob": 8.01291662355652e-06}, {"id": 318, "seek": 106202, "start": 1075.6, "end": 1078.8799999999999, "text": " through that entire process to get our final output embeddings.", "tokens": [807, 300, 2302, 1399, 281, 483, 527, 2572, 5598, 12240, 29432, 13], "temperature": 0.0, "avg_logprob": -0.13695748444575412, "compression_ratio": 1.8722741433021808, "no_speech_prob": 8.01291662355652e-06}, {"id": 319, "seek": 106202, "start": 1078.8799999999999, "end": 1080.72, "text": " And we can mess with those at that stage as well.", "tokens": [400, 321, 393, 2082, 365, 729, 412, 300, 3233, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.13695748444575412, "compression_ratio": 1.8722741433021808, "no_speech_prob": 8.01291662355652e-06}, {"id": 320, "seek": 106202, "start": 1080.72, "end": 1085.24, "text": " So here I have two prompts, a mouse and a leopard, tokenizing them, encoding them with", "tokens": [407, 510, 286, 362, 732, 41095, 11, 257, 9719, 293, 257, 47161, 11, 14862, 3319, 552, 11, 43430, 552, 365], "temperature": 0.0, "avg_logprob": -0.13695748444575412, "compression_ratio": 1.8722741433021808, "no_speech_prob": 8.01291662355652e-06}, {"id": 321, "seek": 106202, "start": 1085.24, "end": 1086.24, "text": " the text encoder.", "tokens": [264, 2487, 2058, 19866, 13], "temperature": 0.0, "avg_logprob": -0.13695748444575412, "compression_ratio": 1.8722741433021808, "no_speech_prob": 8.01291662355652e-06}, {"id": 322, "seek": 106202, "start": 1086.24, "end": 1087.68, "text": " So that's that whole process.", "tokens": [407, 300, 311, 300, 1379, 1399, 13], "temperature": 0.0, "avg_logprob": -0.13695748444575412, "compression_ratio": 1.8722741433021808, "no_speech_prob": 8.01291662355652e-06}, {"id": 323, "seek": 106202, "start": 1087.68, "end": 1090.9, "text": " And these final output embeddings, I'm just going to mix them together according to some", "tokens": [400, 613, 2572, 5598, 12240, 29432, 11, 286, 478, 445, 516, 281, 2890, 552, 1214, 4650, 281, 512], "temperature": 0.0, "avg_logprob": -0.13695748444575412, "compression_ratio": 1.8722741433021808, "no_speech_prob": 8.01291662355652e-06}, {"id": 324, "seek": 109090, "start": 1090.9, "end": 1092.8000000000002, "text": " factor and generate with that.", "tokens": [5952, 293, 8460, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.2271311820090354, "compression_ratio": 1.6483050847457628, "no_speech_prob": 6.959468919376377e-06}, {"id": 325, "seek": 109090, "start": 1092.8000000000002, "end": 1099.4, "text": " And so you can try this with, you know, a cat and a snake.", "tokens": [400, 370, 291, 393, 853, 341, 365, 11, 291, 458, 11, 257, 3857, 293, 257, 12650, 13], "temperature": 0.0, "avg_logprob": -0.2271311820090354, "compression_ratio": 1.6483050847457628, "no_speech_prob": 6.959468919376377e-06}, {"id": 326, "seek": 109090, "start": 1099.4, "end": 1105.3200000000002, "text": " And you should be able to get some really fun different chimeras and oops, a snail apparently.", "tokens": [400, 291, 820, 312, 1075, 281, 483, 512, 534, 1019, 819, 18375, 6985, 293, 34166, 11, 257, 42555, 7970, 13], "temperature": 0.0, "avg_logprob": -0.2271311820090354, "compression_ratio": 1.6483050847457628, "no_speech_prob": 6.959468919376377e-06}, {"id": 327, "seek": 109090, "start": 1105.3200000000002, "end": 1108.76, "text": " Okay, well, I can't spell.", "tokens": [1033, 11, 731, 11, 286, 393, 380, 9827, 13], "temperature": 0.0, "avg_logprob": -0.2271311820090354, "compression_ratio": 1.6483050847457628, "no_speech_prob": 6.959468919376377e-06}, {"id": 328, "seek": 109090, "start": 1108.76, "end": 1110.0400000000002, "text": " But yeah, have fun with that.", "tokens": [583, 1338, 11, 362, 1019, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.2271311820090354, "compression_ratio": 1.6483050847457628, "no_speech_prob": 6.959468919376377e-06}, {"id": 329, "seek": 109090, "start": 1110.0400000000002, "end": 1111.0400000000002, "text": " Doesn't have to be animals.", "tokens": [12955, 380, 362, 281, 312, 4882, 13], "temperature": 0.0, "avg_logprob": -0.2271311820090354, "compression_ratio": 1.6483050847457628, "no_speech_prob": 6.959468919376377e-06}, {"id": 330, "seek": 109090, "start": 1111.0400000000002, "end": 1116.0400000000002, "text": " I'd love to see what you create with these weird mixed up generations.", "tokens": [286, 1116, 959, 281, 536, 437, 291, 1884, 365, 613, 3657, 7467, 493, 10593, 13], "temperature": 0.0, "avg_logprob": -0.2271311820090354, "compression_ratio": 1.6483050847457628, "no_speech_prob": 6.959468919376377e-06}, {"id": 331, "seek": 109090, "start": 1116.0400000000002, "end": 1119.0400000000002, "text": " Okay, we should look at the actual model itself.", "tokens": [1033, 11, 321, 820, 574, 412, 264, 3539, 2316, 2564, 13], "temperature": 0.0, "avg_logprob": -0.2271311820090354, "compression_ratio": 1.6483050847457628, "no_speech_prob": 6.959468919376377e-06}, {"id": 332, "seek": 111904, "start": 1119.04, "end": 1122.52, "text": " The key unit model, the diffusion model.", "tokens": [440, 2141, 4985, 2316, 11, 264, 25242, 2316, 13], "temperature": 0.0, "avg_logprob": -0.1447939565104823, "compression_ratio": 1.7022058823529411, "no_speech_prob": 4.637617621483514e-06}, {"id": 333, "seek": 111904, "start": 1122.52, "end": 1123.52, "text": " What is it doing?", "tokens": [708, 307, 309, 884, 30], "temperature": 0.0, "avg_logprob": -0.1447939565104823, "compression_ratio": 1.7022058823529411, "no_speech_prob": 4.637617621483514e-06}, {"id": 334, "seek": 111904, "start": 1123.52, "end": 1124.52, "text": " What is it predicting?", "tokens": [708, 307, 309, 32884, 30], "temperature": 0.0, "avg_logprob": -0.1447939565104823, "compression_ratio": 1.7022058823529411, "no_speech_prob": 4.637617621483514e-06}, {"id": 335, "seek": 111904, "start": 1124.52, "end": 1125.92, "text": " What is it accepting as arguments?", "tokens": [708, 307, 309, 17391, 382, 12869, 30], "temperature": 0.0, "avg_logprob": -0.1447939565104823, "compression_ratio": 1.7022058823529411, "no_speech_prob": 4.637617621483514e-06}, {"id": 336, "seek": 111904, "start": 1125.92, "end": 1128.6399999999999, "text": " So this is the kind of call signature.", "tokens": [407, 341, 307, 264, 733, 295, 818, 13397, 13], "temperature": 0.0, "avg_logprob": -0.1447939565104823, "compression_ratio": 1.7022058823529411, "no_speech_prob": 4.637617621483514e-06}, {"id": 337, "seek": 111904, "start": 1128.6399999999999, "end": 1134.68, "text": " We call our units forward pass and we feed in a noisy latency, the time step.", "tokens": [492, 818, 527, 6815, 2128, 1320, 293, 321, 3154, 294, 257, 24518, 27043, 11, 264, 565, 1823, 13], "temperature": 0.0, "avg_logprob": -0.1447939565104823, "compression_ratio": 1.7022058823529411, "no_speech_prob": 4.637617621483514e-06}, {"id": 338, "seek": 111904, "start": 1134.68, "end": 1138.86, "text": " And that's like the training time step and the encoder hidden states, right?", "tokens": [400, 300, 311, 411, 264, 3097, 565, 1823, 293, 264, 2058, 19866, 7633, 4368, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1447939565104823, "compression_ratio": 1.7022058823529411, "no_speech_prob": 4.637617621483514e-06}, {"id": 339, "seek": 111904, "start": 1138.86, "end": 1141.7, "text": " So those text embeddings that we've just been having fun with.", "tokens": [407, 729, 2487, 12240, 29432, 300, 321, 600, 445, 668, 1419, 1019, 365, 13], "temperature": 0.0, "avg_logprob": -0.1447939565104823, "compression_ratio": 1.7022058823529411, "no_speech_prob": 4.637617621483514e-06}, {"id": 340, "seek": 111904, "start": 1141.7, "end": 1145.96, "text": " So doing that without any loops or anything, I'm sitting in my scheduler, getting my time", "tokens": [407, 884, 300, 1553, 604, 16121, 420, 1340, 11, 286, 478, 3798, 294, 452, 12000, 260, 11, 1242, 452, 565], "temperature": 0.0, "avg_logprob": -0.1447939565104823, "compression_ratio": 1.7022058823529411, "no_speech_prob": 4.637617621483514e-06}, {"id": 341, "seek": 114596, "start": 1145.96, "end": 1151.24, "text": " step, getting my noisy latent and my text embeddings.", "tokens": [1823, 11, 1242, 452, 24518, 48994, 293, 452, 2487, 12240, 29432, 13], "temperature": 0.0, "avg_logprob": -0.12101434809820992, "compression_ratio": 1.9201680672268908, "no_speech_prob": 1.9524284653016366e-05}, {"id": 342, "seek": 114596, "start": 1151.24, "end": 1153.92, "text": " And then we're going to get our model prediction and you'll look at the shape of that and you'll", "tokens": [400, 550, 321, 434, 516, 281, 483, 527, 2316, 17630, 293, 291, 603, 574, 412, 264, 3909, 295, 300, 293, 291, 603], "temperature": 0.0, "avg_logprob": -0.12101434809820992, "compression_ratio": 1.9201680672268908, "no_speech_prob": 1.9524284653016366e-05}, {"id": 343, "seek": 114596, "start": 1153.92, "end": 1157.68, "text": " see that this prediction has the same shape as the latency.", "tokens": [536, 300, 341, 17630, 575, 264, 912, 3909, 382, 264, 27043, 13], "temperature": 0.0, "avg_logprob": -0.12101434809820992, "compression_ratio": 1.9201680672268908, "no_speech_prob": 1.9524284653016366e-05}, {"id": 344, "seek": 114596, "start": 1157.68, "end": 1163.6000000000001, "text": " And given these noisy latents, what the model is predicting is the noise component of that.", "tokens": [400, 2212, 613, 24518, 4465, 791, 11, 437, 264, 2316, 307, 32884, 307, 264, 5658, 6542, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.12101434809820992, "compression_ratio": 1.9201680672268908, "no_speech_prob": 1.9524284653016366e-05}, {"id": 345, "seek": 114596, "start": 1163.6000000000001, "end": 1166.94, "text": " And actually is predicting the noise component scaled by sigma.", "tokens": [400, 767, 307, 32884, 264, 5658, 6542, 36039, 538, 12771, 13], "temperature": 0.0, "avg_logprob": -0.12101434809820992, "compression_ratio": 1.9201680672268908, "no_speech_prob": 1.9524284653016366e-05}, {"id": 346, "seek": 114596, "start": 1166.94, "end": 1171.4, "text": " So if we wanted to see what the original image looks like, we could say, well, the denoise", "tokens": [407, 498, 321, 1415, 281, 536, 437, 264, 3380, 3256, 1542, 411, 11, 321, 727, 584, 11, 731, 11, 264, 1441, 38800], "temperature": 0.0, "avg_logprob": -0.12101434809820992, "compression_ratio": 1.9201680672268908, "no_speech_prob": 1.9524284653016366e-05}, {"id": 347, "seek": 117140, "start": 1171.4, "end": 1178.4, "text": " latency is going to be the current noisy latency minus sigma times the model prediction.", "tokens": [27043, 307, 516, 281, 312, 264, 2190, 24518, 27043, 3175, 12771, 1413, 264, 2316, 17630, 13], "temperature": 0.0, "avg_logprob": -0.1279272437095642, "compression_ratio": 1.878228782287823, "no_speech_prob": 3.5554933219827944e-06}, {"id": 348, "seek": 117140, "start": 1178.4, "end": 1182.3200000000002, "text": " And so when we denoising, we're not going to go straight to that upward prediction.", "tokens": [400, 370, 562, 321, 1441, 78, 3436, 11, 321, 434, 406, 516, 281, 352, 2997, 281, 300, 23452, 17630, 13], "temperature": 0.0, "avg_logprob": -0.1279272437095642, "compression_ratio": 1.878228782287823, "no_speech_prob": 3.5554933219827944e-06}, {"id": 349, "seek": 117140, "start": 1182.3200000000002, "end": 1185.92, "text": " We're going to just remove a little bit of the noise at a time, but it might be useful", "tokens": [492, 434, 516, 281, 445, 4159, 257, 707, 857, 295, 264, 5658, 412, 257, 565, 11, 457, 309, 1062, 312, 4420], "temperature": 0.0, "avg_logprob": -0.1279272437095642, "compression_ratio": 1.878228782287823, "no_speech_prob": 3.5554933219827944e-06}, {"id": 350, "seek": 117140, "start": 1185.92, "end": 1188.3400000000001, "text": " to visualize what that final prediction looks like.", "tokens": [281, 23273, 437, 300, 2572, 17630, 1542, 411, 13], "temperature": 0.0, "avg_logprob": -0.1279272437095642, "compression_ratio": 1.878228782287823, "no_speech_prob": 3.5554933219827944e-06}, {"id": 351, "seek": 117140, "start": 1188.3400000000001, "end": 1192.2800000000002, "text": " So that's what we're doing here, making a folder to store some images, preparing our", "tokens": [407, 300, 311, 437, 321, 434, 884, 510, 11, 1455, 257, 10820, 281, 3531, 512, 5267, 11, 10075, 527], "temperature": 0.0, "avg_logprob": -0.1279272437095642, "compression_ratio": 1.878228782287823, "no_speech_prob": 3.5554933219827944e-06}, {"id": 352, "seek": 117140, "start": 1192.2800000000002, "end": 1194.72, "text": " text scheduler and input.", "tokens": [2487, 12000, 260, 293, 4846, 13], "temperature": 0.0, "avg_logprob": -0.1279272437095642, "compression_ratio": 1.878228782287823, "no_speech_prob": 3.5554933219827944e-06}, {"id": 353, "seek": 117140, "start": 1194.72, "end": 1198.46, "text": " And then we're going to do this loop, but now we're going to get the model prediction.", "tokens": [400, 550, 321, 434, 516, 281, 360, 341, 6367, 11, 457, 586, 321, 434, 516, 281, 483, 264, 2316, 17630, 13], "temperature": 0.0, "avg_logprob": -0.1279272437095642, "compression_ratio": 1.878228782287823, "no_speech_prob": 3.5554933219827944e-06}, {"id": 354, "seek": 119846, "start": 1198.46, "end": 1203.28, "text": " And instead of just updating our latency by one step, we're also going to store an image", "tokens": [400, 2602, 295, 445, 25113, 527, 27043, 538, 472, 1823, 11, 321, 434, 611, 516, 281, 3531, 364, 3256], "temperature": 0.0, "avg_logprob": -0.15732931518554688, "compression_ratio": 1.7944250871080138, "no_speech_prob": 5.862271336809499e-06}, {"id": 355, "seek": 119846, "start": 1203.28, "end": 1208.28, "text": " and decoding these two images, an image of the predicted completely denoised, like original", "tokens": [293, 979, 8616, 613, 732, 5267, 11, 364, 3256, 295, 264, 19147, 2584, 1441, 78, 2640, 11, 411, 3380], "temperature": 0.0, "avg_logprob": -0.15732931518554688, "compression_ratio": 1.7944250871080138, "no_speech_prob": 5.862271336809499e-06}, {"id": 356, "seek": 119846, "start": 1208.28, "end": 1209.28, "text": " sample.", "tokens": [6889, 13], "temperature": 0.0, "avg_logprob": -0.15732931518554688, "compression_ratio": 1.7944250871080138, "no_speech_prob": 5.862271336809499e-06}, {"id": 357, "seek": 119846, "start": 1209.28, "end": 1211.0, "text": " So that's this predicted original sample here.", "tokens": [407, 300, 311, 341, 19147, 3380, 6889, 510, 13], "temperature": 0.0, "avg_logprob": -0.15732931518554688, "compression_ratio": 1.7944250871080138, "no_speech_prob": 5.862271336809499e-06}, {"id": 358, "seek": 119846, "start": 1211.0, "end": 1212.56, "text": " You could also calculate this yourself.", "tokens": [509, 727, 611, 8873, 341, 1803, 13], "temperature": 0.0, "avg_logprob": -0.15732931518554688, "compression_ratio": 1.7944250871080138, "no_speech_prob": 5.862271336809499e-06}, {"id": 359, "seek": 119846, "start": 1212.56, "end": 1217.1200000000001, "text": " Latency Xero is equal to the current latency minus sigma times the noise prediction.", "tokens": [7354, 3020, 1783, 2032, 307, 2681, 281, 264, 2190, 27043, 3175, 12771, 1413, 264, 5658, 17630, 13], "temperature": 0.0, "avg_logprob": -0.15732931518554688, "compression_ratio": 1.7944250871080138, "no_speech_prob": 5.862271336809499e-06}, {"id": 360, "seek": 119846, "start": 1217.1200000000001, "end": 1221.44, "text": " So those two should work equivalently, but this loop is going to run and it's going to", "tokens": [407, 729, 732, 820, 589, 9052, 2276, 11, 457, 341, 6367, 307, 516, 281, 1190, 293, 309, 311, 516, 281], "temperature": 0.0, "avg_logprob": -0.15732931518554688, "compression_ratio": 1.7944250871080138, "no_speech_prob": 5.862271336809499e-06}, {"id": 361, "seek": 119846, "start": 1221.44, "end": 1225.4, "text": " save those images to the steps folder, which we can then visualize.", "tokens": [3155, 729, 5267, 281, 264, 4439, 10820, 11, 597, 321, 393, 550, 23273, 13], "temperature": 0.0, "avg_logprob": -0.15732931518554688, "compression_ratio": 1.7944250871080138, "no_speech_prob": 5.862271336809499e-06}, {"id": 362, "seek": 122540, "start": 1225.4, "end": 1230.2800000000002, "text": " And so once this finishes in a second or two, on the left, we're going to see the kind of", "tokens": [400, 370, 1564, 341, 23615, 294, 257, 1150, 420, 732, 11, 322, 264, 1411, 11, 321, 434, 516, 281, 536, 264, 733, 295], "temperature": 0.0, "avg_logprob": -0.1366282757197585, "compression_ratio": 1.7695852534562213, "no_speech_prob": 8.138959856296424e-06}, {"id": 363, "seek": 122540, "start": 1230.2800000000002, "end": 1232.72, "text": " noisy input to the model at each stage.", "tokens": [24518, 4846, 281, 264, 2316, 412, 1184, 3233, 13], "temperature": 0.0, "avg_logprob": -0.1366282757197585, "compression_ratio": 1.7695852534562213, "no_speech_prob": 8.138959856296424e-06}, {"id": 364, "seek": 122540, "start": 1232.72, "end": 1237.4, "text": " And on the right, we're going to see the noisy inputs minus the noise prediction, right?", "tokens": [400, 322, 264, 558, 11, 321, 434, 516, 281, 536, 264, 24518, 15743, 3175, 264, 5658, 17630, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1366282757197585, "compression_ratio": 1.7695852534562213, "no_speech_prob": 8.138959856296424e-06}, {"id": 365, "seek": 122540, "start": 1237.4, "end": 1239.2800000000002, "text": " So the denoised version.", "tokens": [407, 264, 1441, 78, 2640, 3037, 13], "temperature": 0.0, "avg_logprob": -0.1366282757197585, "compression_ratio": 1.7695852534562213, "no_speech_prob": 8.138959856296424e-06}, {"id": 366, "seek": 122540, "start": 1239.2800000000002, "end": 1241.0800000000002, "text": " And so we'll just give it a second or two to run.", "tokens": [400, 370, 321, 603, 445, 976, 309, 257, 1150, 420, 732, 281, 1190, 13], "temperature": 0.0, "avg_logprob": -0.1366282757197585, "compression_ratio": 1.7695852534562213, "no_speech_prob": 8.138959856296424e-06}, {"id": 367, "seek": 122540, "start": 1241.0800000000002, "end": 1247.1200000000001, "text": " It's taking a little bit longer because it's decoding those images each time, saving them.", "tokens": [467, 311, 1940, 257, 707, 857, 2854, 570, 309, 311, 979, 8616, 729, 5267, 1184, 565, 11, 6816, 552, 13], "temperature": 0.0, "avg_logprob": -0.1366282757197585, "compression_ratio": 1.7695852534562213, "no_speech_prob": 8.138959856296424e-06}, {"id": 368, "seek": 124712, "start": 1247.12, "end": 1260.2399999999998, "text": " But once this finishes, we should have a nice little preview video.", "tokens": [583, 1564, 341, 23615, 11, 321, 820, 362, 257, 1481, 707, 14281, 960, 13], "temperature": 0.0, "avg_logprob": -0.14961449666456741, "compression_ratio": 1.502439024390244, "no_speech_prob": 3.120833571301773e-05}, {"id": 369, "seek": 124712, "start": 1260.2399999999998, "end": 1261.2399999999998, "text": " OK here we go.", "tokens": [2264, 510, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.14961449666456741, "compression_ratio": 1.502439024390244, "no_speech_prob": 3.120833571301773e-05}, {"id": 370, "seek": 124712, "start": 1261.2399999999998, "end": 1262.5, "text": " So this is the noisy latent.", "tokens": [407, 341, 307, 264, 24518, 48994, 13], "temperature": 0.0, "avg_logprob": -0.14961449666456741, "compression_ratio": 1.502439024390244, "no_speech_prob": 3.120833571301773e-05}, {"id": 371, "seek": 124712, "start": 1262.5, "end": 1266.6, "text": " And if we take the model's noise prediction and subtract it from that, we get this very", "tokens": [400, 498, 321, 747, 264, 2316, 311, 5658, 17630, 293, 16390, 309, 490, 300, 11, 321, 483, 341, 588], "temperature": 0.0, "avg_logprob": -0.14961449666456741, "compression_ratio": 1.502439024390244, "no_speech_prob": 3.120833571301773e-05}, {"id": 372, "seek": 124712, "start": 1266.6, "end": 1267.9199999999998, "text": " blurry output.", "tokens": [37644, 5598, 13], "temperature": 0.0, "avg_logprob": -0.14961449666456741, "compression_ratio": 1.502439024390244, "no_speech_prob": 3.120833571301773e-05}, {"id": 373, "seek": 124712, "start": 1267.9199999999998, "end": 1273.28, "text": " And so you'll see as we play this, oh, I've left some modifications in from last time.", "tokens": [400, 370, 291, 603, 536, 382, 321, 862, 341, 11, 1954, 11, 286, 600, 1411, 512, 26881, 294, 490, 1036, 565, 13], "temperature": 0.0, "avg_logprob": -0.14961449666456741, "compression_ratio": 1.502439024390244, "no_speech_prob": 3.120833571301773e-05}, {"id": 374, "seek": 124712, "start": 1273.28, "end": 1274.28, "text": " Sorry.", "tokens": [4919, 13], "temperature": 0.0, "avg_logprob": -0.14961449666456741, "compression_ratio": 1.502439024390244, "no_speech_prob": 3.120833571301773e-05}, {"id": 375, "seek": 127428, "start": 1274.28, "end": 1279.8799999999999, "text": " So as you see, this guidance scale will be back at, I think it was eight.", "tokens": [407, 382, 291, 536, 11, 341, 10056, 4373, 486, 312, 646, 412, 11, 286, 519, 309, 390, 3180, 13], "temperature": 0.0, "avg_logprob": -0.2892152187870998, "compression_ratio": 1.5488372093023255, "no_speech_prob": 5.056518784840591e-05}, {"id": 376, "seek": 127428, "start": 1279.8799999999999, "end": 1281.96, "text": " In the next section, we'll talk about classifying free guidance.", "tokens": [682, 264, 958, 3541, 11, 321, 603, 751, 466, 1508, 5489, 1737, 10056, 13], "temperature": 0.0, "avg_logprob": -0.2892152187870998, "compression_ratio": 1.5488372093023255, "no_speech_prob": 5.056518784840591e-05}, {"id": 377, "seek": 127428, "start": 1281.96, "end": 1284.32, "text": " And so I've been modifying that example.", "tokens": [400, 370, 286, 600, 668, 42626, 300, 1365, 13], "temperature": 0.0, "avg_logprob": -0.2892152187870998, "compression_ratio": 1.5488372093023255, "no_speech_prob": 5.056518784840591e-05}, {"id": 378, "seek": 127428, "start": 1284.32, "end": 1285.32, "text": " My bad.", "tokens": [1222, 1578, 13], "temperature": 0.0, "avg_logprob": -0.2892152187870998, "compression_ratio": 1.5488372093023255, "no_speech_prob": 5.056518784840591e-05}, {"id": 379, "seek": 127428, "start": 1285.32, "end": 1286.56, "text": " I might cut this out of the video.", "tokens": [286, 1062, 1723, 341, 484, 295, 264, 960, 13], "temperature": 0.0, "avg_logprob": -0.2892152187870998, "compression_ratio": 1.5488372093023255, "no_speech_prob": 5.056518784840591e-05}, {"id": 380, "seek": 127428, "start": 1286.56, "end": 1287.56, "text": " We'll see.", "tokens": [492, 603, 536, 13], "temperature": 0.0, "avg_logprob": -0.2892152187870998, "compression_ratio": 1.5488372093023255, "no_speech_prob": 5.056518784840591e-05}, {"id": 381, "seek": 127428, "start": 1287.56, "end": 1291.44, "text": " So I've got to wait a few seconds again for that to generate.", "tokens": [407, 286, 600, 658, 281, 1699, 257, 1326, 3949, 797, 337, 300, 281, 8460, 13], "temperature": 0.0, "avg_logprob": -0.2892152187870998, "compression_ratio": 1.5488372093023255, "no_speech_prob": 5.056518784840591e-05}, {"id": 382, "seek": 127428, "start": 1291.44, "end": 1299.48, "text": " And I'll do so as patiently as I can.", "tokens": [400, 286, 603, 360, 370, 382, 49001, 382, 286, 393, 13], "temperature": 0.0, "avg_logprob": -0.2892152187870998, "compression_ratio": 1.5488372093023255, "no_speech_prob": 5.056518784840591e-05}, {"id": 383, "seek": 129948, "start": 1299.48, "end": 1318.92, "text": " OK, so here we go again, the noisy input, the predicted denoise version.", "tokens": [2264, 11, 370, 510, 321, 352, 797, 11, 264, 24518, 4846, 11, 264, 19147, 1441, 38800, 3037, 13], "temperature": 0.0, "avg_logprob": -0.2057320888225849, "compression_ratio": 1.335820895522388, "no_speech_prob": 9.965372555598151e-06}, {"id": 384, "seek": 129948, "start": 1318.92, "end": 1323.3600000000001, "text": " And you can see at the start, it's very blurry, but over time, it gradually converges on our", "tokens": [400, 291, 393, 536, 412, 264, 722, 11, 309, 311, 588, 37644, 11, 457, 670, 565, 11, 309, 13145, 9652, 2880, 322, 527], "temperature": 0.0, "avg_logprob": -0.2057320888225849, "compression_ratio": 1.335820895522388, "no_speech_prob": 9.965372555598151e-06}, {"id": 385, "seek": 129948, "start": 1323.3600000000001, "end": 1326.08, "text": " final output.", "tokens": [2572, 5598, 13], "temperature": 0.0, "avg_logprob": -0.2057320888225849, "compression_ratio": 1.335820895522388, "no_speech_prob": 9.965372555598151e-06}, {"id": 386, "seek": 132608, "start": 1326.08, "end": 1329.8799999999999, "text": " And you'll notice that on the left, these are the latents as they are each step.", "tokens": [400, 291, 603, 3449, 300, 322, 264, 1411, 11, 613, 366, 264, 4465, 791, 382, 436, 366, 1184, 1823, 13], "temperature": 0.0, "avg_logprob": -0.1272609993263527, "compression_ratio": 1.7781569965870307, "no_speech_prob": 1.0125497283297591e-05}, {"id": 387, "seek": 132608, "start": 1329.8799999999999, "end": 1334.12, "text": " They don't change particularly drastically, a little bit at a time.", "tokens": [814, 500, 380, 1319, 4098, 29673, 11, 257, 707, 857, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.1272609993263527, "compression_ratio": 1.7781569965870307, "no_speech_prob": 1.0125497283297591e-05}, {"id": 388, "seek": 132608, "start": 1334.12, "end": 1338.72, "text": " But at the start, when the model doesn't have much to go on, its predictions do change quite", "tokens": [583, 412, 264, 722, 11, 562, 264, 2316, 1177, 380, 362, 709, 281, 352, 322, 11, 1080, 21264, 360, 1319, 1596], "temperature": 0.0, "avg_logprob": -0.1272609993263527, "compression_ratio": 1.7781569965870307, "no_speech_prob": 1.0125497283297591e-05}, {"id": 389, "seek": 132608, "start": 1338.72, "end": 1340.3999999999999, "text": " a bit at each step.", "tokens": [257, 857, 412, 1184, 1823, 13], "temperature": 0.0, "avg_logprob": -0.1272609993263527, "compression_ratio": 1.7781569965870307, "no_speech_prob": 1.0125497283297591e-05}, {"id": 390, "seek": 132608, "start": 1340.3999999999999, "end": 1342.12, "text": " It's much less well-defined.", "tokens": [467, 311, 709, 1570, 731, 12, 37716, 13], "temperature": 0.0, "avg_logprob": -0.1272609993263527, "compression_ratio": 1.7781569965870307, "no_speech_prob": 1.0125497283297591e-05}, {"id": 391, "seek": 132608, "start": 1342.12, "end": 1346.6399999999999, "text": " And then as we go forward in time, it gets more and more refined, better and better predictions.", "tokens": [400, 550, 382, 321, 352, 2128, 294, 565, 11, 309, 2170, 544, 293, 544, 26201, 11, 1101, 293, 1101, 21264, 13], "temperature": 0.0, "avg_logprob": -0.1272609993263527, "compression_ratio": 1.7781569965870307, "no_speech_prob": 1.0125497283297591e-05}, {"id": 392, "seek": 132608, "start": 1346.6399999999999, "end": 1351.36, "text": " And so it's got a more accurate estimation of the noise to remove and we remove that", "tokens": [400, 370, 309, 311, 658, 257, 544, 8559, 35701, 295, 264, 5658, 281, 4159, 293, 321, 4159, 300], "temperature": 0.0, "avg_logprob": -0.1272609993263527, "compression_ratio": 1.7781569965870307, "no_speech_prob": 1.0125497283297591e-05}, {"id": 393, "seek": 132608, "start": 1351.36, "end": 1354.9199999999998, "text": " noise gradually until we finally get our output.", "tokens": [5658, 13145, 1826, 321, 2721, 483, 527, 5598, 13], "temperature": 0.0, "avg_logprob": -0.1272609993263527, "compression_ratio": 1.7781569965870307, "no_speech_prob": 1.0125497283297591e-05}, {"id": 394, "seek": 135492, "start": 1354.92, "end": 1356.6000000000001, "text": " Quite fun to visualize the process.", "tokens": [20464, 1019, 281, 23273, 264, 1399, 13], "temperature": 0.0, "avg_logprob": -0.12584616297440562, "compression_ratio": 1.6746987951807228, "no_speech_prob": 2.190519808209501e-06}, {"id": 395, "seek": 135492, "start": 1356.6000000000001, "end": 1360.04, "text": " And hopefully that helps you understand why we don't just make one prediction and do it", "tokens": [400, 4696, 300, 3665, 291, 1223, 983, 321, 500, 380, 445, 652, 472, 17630, 293, 360, 309], "temperature": 0.0, "avg_logprob": -0.12584616297440562, "compression_ratio": 1.6746987951807228, "no_speech_prob": 2.190519808209501e-06}, {"id": 396, "seek": 135492, "start": 1360.04, "end": 1363.2, "text": " in one step, right, because we get this very blurry mess.", "tokens": [294, 472, 1823, 11, 558, 11, 570, 321, 483, 341, 588, 37644, 2082, 13], "temperature": 0.0, "avg_logprob": -0.12584616297440562, "compression_ratio": 1.6746987951807228, "no_speech_prob": 2.190519808209501e-06}, {"id": 397, "seek": 135492, "start": 1363.2, "end": 1367.72, "text": " But instead, we do this kind of iterative sampling there, which we'll talk about very", "tokens": [583, 2602, 11, 321, 360, 341, 733, 295, 17138, 1166, 21179, 456, 11, 597, 321, 603, 751, 466, 588], "temperature": 0.0, "avg_logprob": -0.12584616297440562, "compression_ratio": 1.6746987951807228, "no_speech_prob": 2.190519808209501e-06}, {"id": 398, "seek": 135492, "start": 1367.72, "end": 1369.0, "text": " shortly.", "tokens": [13392, 13], "temperature": 0.0, "avg_logprob": -0.12584616297440562, "compression_ratio": 1.6746987951807228, "no_speech_prob": 2.190519808209501e-06}, {"id": 399, "seek": 135492, "start": 1369.0, "end": 1372.22, "text": " Before then, though, the final thing I should mention, classifier-free guidance.", "tokens": [4546, 550, 11, 1673, 11, 264, 2572, 551, 286, 820, 2152, 11, 1508, 9902, 12, 10792, 10056, 13], "temperature": 0.0, "avg_logprob": -0.12584616297440562, "compression_ratio": 1.6746987951807228, "no_speech_prob": 2.190519808209501e-06}, {"id": 400, "seek": 135492, "start": 1372.22, "end": 1373.22, "text": " What is that?", "tokens": [708, 307, 300, 30], "temperature": 0.0, "avg_logprob": -0.12584616297440562, "compression_ratio": 1.6746987951807228, "no_speech_prob": 2.190519808209501e-06}, {"id": 401, "seek": 135492, "start": 1373.22, "end": 1379.64, "text": " Well, like you saw when I accidentally generated the version with a much lower guidance scale,", "tokens": [1042, 11, 411, 291, 1866, 562, 286, 15715, 10833, 264, 3037, 365, 257, 709, 3126, 10056, 4373, 11], "temperature": 0.0, "avg_logprob": -0.12584616297440562, "compression_ratio": 1.6746987951807228, "no_speech_prob": 2.190519808209501e-06}, {"id": 402, "seek": 135492, "start": 1379.64, "end": 1384.1200000000001, "text": " the way classifier-free guidance works is that in all of these loops, we haven't actually", "tokens": [264, 636, 1508, 9902, 12, 10792, 10056, 1985, 307, 300, 294, 439, 295, 613, 16121, 11, 321, 2378, 380, 767], "temperature": 0.0, "avg_logprob": -0.12584616297440562, "compression_ratio": 1.6746987951807228, "no_speech_prob": 2.190519808209501e-06}, {"id": 403, "seek": 138412, "start": 1384.12, "end": 1387.4399999999998, "text": " been passing one set of noisy latents through the model.", "tokens": [668, 8437, 472, 992, 295, 24518, 4465, 791, 807, 264, 2316, 13], "temperature": 0.0, "avg_logprob": -0.14287447929382324, "compression_ratio": 1.920152091254753, "no_speech_prob": 3.2884372558328323e-06}, {"id": 404, "seek": 138412, "start": 1387.4399999999998, "end": 1390.7199999999998, "text": " We've been passing two identical versions.", "tokens": [492, 600, 668, 8437, 732, 14800, 9606, 13], "temperature": 0.0, "avg_logprob": -0.14287447929382324, "compression_ratio": 1.920152091254753, "no_speech_prob": 3.2884372558328323e-06}, {"id": 405, "seek": 138412, "start": 1390.7199999999998, "end": 1395.28, "text": " And as our text embeddings, we've not just been passing the embeddings of our prompts,", "tokens": [400, 382, 527, 2487, 12240, 29432, 11, 321, 600, 406, 445, 668, 8437, 264, 12240, 29432, 295, 527, 41095, 11], "temperature": 0.0, "avg_logprob": -0.14287447929382324, "compression_ratio": 1.920152091254753, "no_speech_prob": 3.2884372558328323e-06}, {"id": 406, "seek": 138412, "start": 1395.28, "end": 1400.04, "text": " right, these ones here, we've been concatenating them with some unconditional embeddings as", "tokens": [558, 11, 613, 2306, 510, 11, 321, 600, 668, 1588, 7186, 990, 552, 365, 512, 47916, 12240, 29432, 382], "temperature": 0.0, "avg_logprob": -0.14287447929382324, "compression_ratio": 1.920152091254753, "no_speech_prob": 3.2884372558328323e-06}, {"id": 407, "seek": 138412, "start": 1400.04, "end": 1401.04, "text": " well.", "tokens": [731, 13], "temperature": 0.0, "avg_logprob": -0.14287447929382324, "compression_ratio": 1.920152091254753, "no_speech_prob": 3.2884372558328323e-06}, {"id": 408, "seek": 138412, "start": 1401.04, "end": 1404.32, "text": " And what the unconditional embeddings are is just a blank prompt, right?", "tokens": [400, 437, 264, 47916, 12240, 29432, 366, 307, 445, 257, 8247, 12391, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.14287447929382324, "compression_ratio": 1.920152091254753, "no_speech_prob": 3.2884372558328323e-06}, {"id": 409, "seek": 138412, "start": 1404.32, "end": 1405.82, "text": " No text whatsoever.", "tokens": [883, 2487, 17076, 13], "temperature": 0.0, "avg_logprob": -0.14287447929382324, "compression_ratio": 1.920152091254753, "no_speech_prob": 3.2884372558328323e-06}, {"id": 410, "seek": 138412, "start": 1405.82, "end": 1408.4799999999998, "text": " So just all padding, passing that through.", "tokens": [407, 445, 439, 39562, 11, 8437, 300, 807, 13], "temperature": 0.0, "avg_logprob": -0.14287447929382324, "compression_ratio": 1.920152091254753, "no_speech_prob": 3.2884372558328323e-06}, {"id": 411, "seek": 138412, "start": 1408.4799999999998, "end": 1412.1, "text": " So when we get our predictions here, we've given in two sets of latency and two sets", "tokens": [407, 562, 321, 483, 527, 21264, 510, 11, 321, 600, 2212, 294, 732, 6352, 295, 27043, 293, 732, 6352], "temperature": 0.0, "avg_logprob": -0.14287447929382324, "compression_ratio": 1.920152091254753, "no_speech_prob": 3.2884372558328323e-06}, {"id": 412, "seek": 141210, "start": 1412.1, "end": 1416.7199999999998, "text": " of text embeddings, we're going to get out two predictions for the noise.", "tokens": [295, 2487, 12240, 29432, 11, 321, 434, 516, 281, 483, 484, 732, 21264, 337, 264, 5658, 13], "temperature": 0.0, "avg_logprob": -0.1028604507446289, "compression_ratio": 1.8455284552845528, "no_speech_prob": 1.2097909802832874e-06}, {"id": 413, "seek": 141210, "start": 1416.7199999999998, "end": 1422.3999999999999, "text": " So we're splitting that apart, one prediction for the unconditional, like no prompt version,", "tokens": [407, 321, 434, 30348, 300, 4936, 11, 472, 17630, 337, 264, 47916, 11, 411, 572, 12391, 3037, 11], "temperature": 0.0, "avg_logprob": -0.1028604507446289, "compression_ratio": 1.8455284552845528, "no_speech_prob": 1.2097909802832874e-06}, {"id": 414, "seek": 141210, "start": 1422.3999999999999, "end": 1425.6799999999998, "text": " and one for the prediction based on the prompt.", "tokens": [293, 472, 337, 264, 17630, 2361, 322, 264, 12391, 13], "temperature": 0.0, "avg_logprob": -0.1028604507446289, "compression_ratio": 1.8455284552845528, "no_speech_prob": 1.2097909802832874e-06}, {"id": 415, "seek": 141210, "start": 1425.6799999999998, "end": 1430.04, "text": " And so what we can do now is we can say, well, my final prediction is going to be the unconditional", "tokens": [400, 370, 437, 321, 393, 360, 586, 307, 321, 393, 584, 11, 731, 11, 452, 2572, 17630, 307, 516, 281, 312, 264, 47916], "temperature": 0.0, "avg_logprob": -0.1028604507446289, "compression_ratio": 1.8455284552845528, "no_speech_prob": 1.2097909802832874e-06}, {"id": 416, "seek": 141210, "start": 1430.04, "end": 1433.3999999999999, "text": " version plus the guidance scale times the difference, right?", "tokens": [3037, 1804, 264, 10056, 4373, 1413, 264, 2649, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1028604507446289, "compression_ratio": 1.8455284552845528, "no_speech_prob": 1.2097909802832874e-06}, {"id": 417, "seek": 141210, "start": 1433.3999999999999, "end": 1437.3999999999999, "text": " So if you think about it, if I predict without the noise, I'm predicting here.", "tokens": [407, 498, 291, 519, 466, 309, 11, 498, 286, 6069, 1553, 264, 5658, 11, 286, 478, 32884, 510, 13], "temperature": 0.0, "avg_logprob": -0.1028604507446289, "compression_ratio": 1.8455284552845528, "no_speech_prob": 1.2097909802832874e-06}, {"id": 418, "seek": 143740, "start": 1437.4, "end": 1442.72, "text": " If I predict with the noise, sorry, with the text encoding, with the prompt, I get this", "tokens": [759, 286, 6069, 365, 264, 5658, 11, 2597, 11, 365, 264, 2487, 43430, 11, 365, 264, 12391, 11, 286, 483, 341], "temperature": 0.0, "avg_logprob": -0.13786656619938276, "compression_ratio": 1.8093525179856116, "no_speech_prob": 1.095031348086195e-05}, {"id": 419, "seek": 143740, "start": 1442.72, "end": 1443.96, "text": " prediction instead.", "tokens": [17630, 2602, 13], "temperature": 0.0, "avg_logprob": -0.13786656619938276, "compression_ratio": 1.8093525179856116, "no_speech_prob": 1.095031348086195e-05}, {"id": 420, "seek": 143740, "start": 1443.96, "end": 1445.64, "text": " And I'd like to move more in that direction.", "tokens": [400, 286, 1116, 411, 281, 1286, 544, 294, 300, 3513, 13], "temperature": 0.0, "avg_logprob": -0.13786656619938276, "compression_ratio": 1.8093525179856116, "no_speech_prob": 1.095031348086195e-05}, {"id": 421, "seek": 143740, "start": 1445.64, "end": 1450.64, "text": " I'd like to push it even further towards the prompt version and beyond.", "tokens": [286, 1116, 411, 281, 2944, 309, 754, 3052, 3030, 264, 12391, 3037, 293, 4399, 13], "temperature": 0.0, "avg_logprob": -0.13786656619938276, "compression_ratio": 1.8093525179856116, "no_speech_prob": 1.095031348086195e-05}, {"id": 422, "seek": 143740, "start": 1450.64, "end": 1455.0, "text": " So this guidance scale can be larger than one to push it even more in that direction.", "tokens": [407, 341, 10056, 4373, 393, 312, 4833, 813, 472, 281, 2944, 309, 754, 544, 294, 300, 3513, 13], "temperature": 0.0, "avg_logprob": -0.13786656619938276, "compression_ratio": 1.8093525179856116, "no_speech_prob": 1.095031348086195e-05}, {"id": 423, "seek": 143740, "start": 1455.0, "end": 1459.3600000000001, "text": " And this, it turns out, is kind of key for getting it to follow the prompt nicely.", "tokens": [400, 341, 11, 309, 4523, 484, 11, 307, 733, 295, 2141, 337, 1242, 309, 281, 1524, 264, 12391, 9594, 13], "temperature": 0.0, "avg_logprob": -0.13786656619938276, "compression_ratio": 1.8093525179856116, "no_speech_prob": 1.095031348086195e-05}, {"id": 424, "seek": 143740, "start": 1459.3600000000001, "end": 1462.52, "text": " And I think it was first brought up in the glide paper.", "tokens": [400, 286, 519, 309, 390, 700, 3038, 493, 294, 264, 41848, 3035, 13], "temperature": 0.0, "avg_logprob": -0.13786656619938276, "compression_ratio": 1.8093525179856116, "no_speech_prob": 1.095031348086195e-05}, {"id": 425, "seek": 143740, "start": 1462.52, "end": 1465.2, "text": " AI Coffee Break on YouTube has a great video on that.", "tokens": [7318, 25481, 16925, 322, 3088, 575, 257, 869, 960, 322, 300, 13], "temperature": 0.0, "avg_logprob": -0.13786656619938276, "compression_ratio": 1.8093525179856116, "no_speech_prob": 1.095031348086195e-05}, {"id": 426, "seek": 146520, "start": 1465.2, "end": 1469.76, "text": " But yeah, really useful trick or really neat hack, depending on who you talk to.", "tokens": [583, 1338, 11, 534, 4420, 4282, 420, 534, 10654, 10339, 11, 5413, 322, 567, 291, 751, 281, 13], "temperature": 0.0, "avg_logprob": -0.13703671462244268, "compression_ratio": 1.6890243902439024, "no_speech_prob": 5.164067715668352e-06}, {"id": 427, "seek": 146520, "start": 1469.76, "end": 1470.76, "text": " But it does seem to work.", "tokens": [583, 309, 775, 1643, 281, 589, 13], "temperature": 0.0, "avg_logprob": -0.13703671462244268, "compression_ratio": 1.6890243902439024, "no_speech_prob": 5.164067715668352e-06}, {"id": 428, "seek": 146520, "start": 1470.76, "end": 1474.8, "text": " And the higher the guidance scale, the more the model will try and look like the prompts", "tokens": [400, 264, 2946, 264, 10056, 4373, 11, 264, 544, 264, 2316, 486, 853, 293, 574, 411, 264, 41095], "temperature": 0.0, "avg_logprob": -0.13703671462244268, "compression_ratio": 1.6890243902439024, "no_speech_prob": 5.164067715668352e-06}, {"id": 429, "seek": 146520, "start": 1474.8, "end": 1478.0, "text": " kind of in the extreme versus that lower guidance scale.", "tokens": [733, 295, 294, 264, 8084, 5717, 300, 3126, 10056, 4373, 13], "temperature": 0.0, "avg_logprob": -0.13703671462244268, "compression_ratio": 1.6890243902439024, "no_speech_prob": 5.164067715668352e-06}, {"id": 430, "seek": 146520, "start": 1478.0, "end": 1480.8400000000001, "text": " It might just try and look like a generic good picture.", "tokens": [467, 1062, 445, 853, 293, 574, 411, 257, 19577, 665, 3036, 13], "temperature": 0.0, "avg_logprob": -0.13703671462244268, "compression_ratio": 1.6890243902439024, "no_speech_prob": 5.164067715668352e-06}, {"id": 431, "seek": 146520, "start": 1480.8400000000001, "end": 1487.16, "text": " Okay, we've been hiding away some complexity in terms of this scheduler.step function.", "tokens": [1033, 11, 321, 600, 668, 10596, 1314, 512, 14024, 294, 2115, 295, 341, 12000, 260, 13, 16792, 2445, 13], "temperature": 0.0, "avg_logprob": -0.13703671462244268, "compression_ratio": 1.6890243902439024, "no_speech_prob": 5.164067715668352e-06}, {"id": 432, "seek": 146520, "start": 1487.16, "end": 1490.76, "text": " So I think we're going to step away from the notebook now and scribble a bit on some paper", "tokens": [407, 286, 519, 321, 434, 516, 281, 1823, 1314, 490, 264, 21060, 586, 293, 39435, 638, 257, 857, 322, 512, 3035], "temperature": 0.0, "avg_logprob": -0.13703671462244268, "compression_ratio": 1.6890243902439024, "no_speech_prob": 5.164067715668352e-06}, {"id": 433, "seek": 146520, "start": 1490.76, "end": 1494.2, "text": " to try and explain exactly what's going on with sampling and so on.", "tokens": [281, 853, 293, 2903, 2293, 437, 311, 516, 322, 365, 21179, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.13703671462244268, "compression_ratio": 1.6890243902439024, "no_speech_prob": 5.164067715668352e-06}, {"id": 434, "seek": 149420, "start": 1494.2, "end": 1497.4, "text": " And then we'll come back to the notebook for one final trick.", "tokens": [400, 550, 321, 603, 808, 646, 281, 264, 21060, 337, 472, 2572, 4282, 13], "temperature": 0.0, "avg_logprob": -0.15259170532226562, "compression_ratio": 1.599236641221374, "no_speech_prob": 3.2156902307178825e-05}, {"id": 435, "seek": 149420, "start": 1497.4, "end": 1502.4, "text": " All right, so here's my take on sampling.", "tokens": [1057, 558, 11, 370, 510, 311, 452, 747, 322, 21179, 13], "temperature": 0.0, "avg_logprob": -0.15259170532226562, "compression_ratio": 1.599236641221374, "no_speech_prob": 3.2156902307178825e-05}, {"id": 436, "seek": 149420, "start": 1502.4, "end": 1506.3600000000001, "text": " And to start with, I'd like you to imagine the space of all possible images.", "tokens": [400, 281, 722, 365, 11, 286, 1116, 411, 291, 281, 3811, 264, 1901, 295, 439, 1944, 5267, 13], "temperature": 0.0, "avg_logprob": -0.15259170532226562, "compression_ratio": 1.599236641221374, "no_speech_prob": 3.2156902307178825e-05}, {"id": 437, "seek": 149420, "start": 1506.3600000000001, "end": 1513.92, "text": " So this is a very large high dimensional space for 256 by 256 by three image that is 200,000", "tokens": [407, 341, 307, 257, 588, 2416, 1090, 18795, 1901, 337, 38882, 538, 38882, 538, 1045, 3256, 300, 307, 2331, 11, 1360], "temperature": 0.0, "avg_logprob": -0.15259170532226562, "compression_ratio": 1.599236641221374, "no_speech_prob": 3.2156902307178825e-05}, {"id": 438, "seek": 149420, "start": 1513.92, "end": 1514.92, "text": " dimensional.", "tokens": [18795, 13], "temperature": 0.0, "avg_logprob": -0.15259170532226562, "compression_ratio": 1.599236641221374, "no_speech_prob": 3.2156902307178825e-05}, {"id": 439, "seek": 149420, "start": 1514.92, "end": 1518.4, "text": " And my paper, unfortunately, is only two dimensional.", "tokens": [400, 452, 3035, 11, 7015, 11, 307, 787, 732, 18795, 13], "temperature": 0.0, "avg_logprob": -0.15259170532226562, "compression_ratio": 1.599236641221374, "no_speech_prob": 3.2156902307178825e-05}, {"id": 440, "seek": 149420, "start": 1518.4, "end": 1522.6000000000001, "text": " So we're going to have to squish this down a fair bit and use our imagination.", "tokens": [407, 321, 434, 516, 281, 362, 281, 31379, 341, 760, 257, 3143, 857, 293, 764, 527, 12938, 13], "temperature": 0.0, "avg_logprob": -0.15259170532226562, "compression_ratio": 1.599236641221374, "no_speech_prob": 3.2156902307178825e-05}, {"id": 441, "seek": 152260, "start": 1522.6, "end": 1527.32, "text": " Now if you just look at a random point in this space, this is most likely not going", "tokens": [823, 498, 291, 445, 574, 412, 257, 4974, 935, 294, 341, 1901, 11, 341, 307, 881, 3700, 406, 516], "temperature": 0.0, "avg_logprob": -0.10995811391099591, "compression_ratio": 1.6486486486486487, "no_speech_prob": 5.3049148846184835e-05}, {"id": 442, "seek": 152260, "start": 1527.32, "end": 1529.6, "text": " to look like anything recognizable.", "tokens": [281, 574, 411, 1340, 40757, 13], "temperature": 0.0, "avg_logprob": -0.10995811391099591, "compression_ratio": 1.6486486486486487, "no_speech_prob": 5.3049148846184835e-05}, {"id": 443, "seek": 152260, "start": 1529.6, "end": 1532.56, "text": " It'll probably just look like garbled noise.", "tokens": [467, 603, 1391, 445, 574, 411, 3691, 18320, 5658, 13], "temperature": 0.0, "avg_logprob": -0.10995811391099591, "compression_ratio": 1.6486486486486487, "no_speech_prob": 5.3049148846184835e-05}, {"id": 444, "seek": 152260, "start": 1532.56, "end": 1538.4199999999998, "text": " But if we map an image into the space, we'll see that it has some sort of fixed point and", "tokens": [583, 498, 321, 4471, 364, 3256, 666, 264, 1901, 11, 321, 603, 536, 300, 309, 575, 512, 1333, 295, 6806, 935, 293], "temperature": 0.0, "avg_logprob": -0.10995811391099591, "compression_ratio": 1.6486486486486487, "no_speech_prob": 5.3049148846184835e-05}, {"id": 445, "seek": 152260, "start": 1538.4199999999998, "end": 1544.36, "text": " a very similar image, almost pixel equivalent, it's going to be very close by.", "tokens": [257, 588, 2531, 3256, 11, 1920, 19261, 10344, 11, 309, 311, 516, 281, 312, 588, 1998, 538, 13], "temperature": 0.0, "avg_logprob": -0.10995811391099591, "compression_ratio": 1.6486486486486487, "no_speech_prob": 5.3049148846184835e-05}, {"id": 446, "seek": 152260, "start": 1544.36, "end": 1549.8, "text": " Now there's this theory that you'll hear talked about called manifold theory, which says that", "tokens": [823, 456, 311, 341, 5261, 300, 291, 603, 1568, 2825, 466, 1219, 47138, 5261, 11, 597, 1619, 300], "temperature": 0.0, "avg_logprob": -0.10995811391099591, "compression_ratio": 1.6486486486486487, "no_speech_prob": 5.3049148846184835e-05}, {"id": 447, "seek": 154980, "start": 1549.8, "end": 1555.32, "text": " for most real images, like a data set of images, these are going to lie on some lower dimensional", "tokens": [337, 881, 957, 5267, 11, 411, 257, 1412, 992, 295, 5267, 11, 613, 366, 516, 281, 4544, 322, 512, 3126, 18795], "temperature": 0.0, "avg_logprob": -0.1273117530636671, "compression_ratio": 1.7509293680297398, "no_speech_prob": 9.308053995482624e-05}, {"id": 448, "seek": 154980, "start": 1555.32, "end": 1558.04, "text": " manifold within this higher dimensional space.", "tokens": [47138, 1951, 341, 2946, 18795, 1901, 13], "temperature": 0.0, "avg_logprob": -0.1273117530636671, "compression_ratio": 1.7509293680297398, "no_speech_prob": 9.308053995482624e-05}, {"id": 449, "seek": 154980, "start": 1558.04, "end": 1562.48, "text": " In other words, if we map a whole bunch of images into the space, they're not going to", "tokens": [682, 661, 2283, 11, 498, 321, 4471, 257, 1379, 3840, 295, 5267, 666, 264, 1901, 11, 436, 434, 406, 516, 281], "temperature": 0.0, "avg_logprob": -0.1273117530636671, "compression_ratio": 1.7509293680297398, "no_speech_prob": 9.308053995482624e-05}, {"id": 450, "seek": 154980, "start": 1562.48, "end": 1563.48, "text": " fill the whole space.", "tokens": [2836, 264, 1379, 1901, 13], "temperature": 0.0, "avg_logprob": -0.1273117530636671, "compression_ratio": 1.7509293680297398, "no_speech_prob": 9.308053995482624e-05}, {"id": 451, "seek": 154980, "start": 1563.48, "end": 1566.28, "text": " They're going to be kind of clustered onto some surface.", "tokens": [814, 434, 516, 281, 312, 733, 295, 596, 38624, 3911, 512, 3753, 13], "temperature": 0.0, "avg_logprob": -0.1273117530636671, "compression_ratio": 1.7509293680297398, "no_speech_prob": 9.308053995482624e-05}, {"id": 452, "seek": 154980, "start": 1566.28, "end": 1571.12, "text": " Now I've drawn it as a line here because we stuck with 2D, but this is a much higher dimensional", "tokens": [823, 286, 600, 10117, 309, 382, 257, 1622, 510, 570, 321, 5541, 365, 568, 35, 11, 457, 341, 307, 257, 709, 2946, 18795], "temperature": 0.0, "avg_logprob": -0.1273117530636671, "compression_ratio": 1.7509293680297398, "no_speech_prob": 9.308053995482624e-05}, {"id": 453, "seek": 154980, "start": 1571.12, "end": 1572.12, "text": " plane equivalent.", "tokens": [5720, 10344, 13], "temperature": 0.0, "avg_logprob": -0.1273117530636671, "compression_ratio": 1.7509293680297398, "no_speech_prob": 9.308053995482624e-05}, {"id": 454, "seek": 154980, "start": 1572.12, "end": 1576.6, "text": " OK, so each of these ones here is some image.", "tokens": [2264, 11, 370, 1184, 295, 613, 2306, 510, 307, 512, 3256, 13], "temperature": 0.0, "avg_logprob": -0.1273117530636671, "compression_ratio": 1.7509293680297398, "no_speech_prob": 9.308053995482624e-05}, {"id": 455, "seek": 157660, "start": 1576.6, "end": 1580.76, "text": " And the reason that I'm starting with this is because we'd like to generate images, we'd", "tokens": [400, 264, 1778, 300, 286, 478, 2891, 365, 341, 307, 570, 321, 1116, 411, 281, 8460, 5267, 11, 321, 1116], "temperature": 0.0, "avg_logprob": -0.11328028056247175, "compression_ratio": 1.8175182481751824, "no_speech_prob": 3.119830944342539e-05}, {"id": 456, "seek": 157660, "start": 1580.76, "end": 1584.9599999999998, "text": " like to generate plausible looking images, not just random nonsense.", "tokens": [411, 281, 8460, 39925, 1237, 5267, 11, 406, 445, 4974, 14925, 13], "temperature": 0.0, "avg_logprob": -0.11328028056247175, "compression_ratio": 1.8175182481751824, "no_speech_prob": 3.119830944342539e-05}, {"id": 457, "seek": 157660, "start": 1584.9599999999998, "end": 1586.9599999999998, "text": " And so we'd like to do that with diffusion models.", "tokens": [400, 370, 321, 1116, 411, 281, 360, 300, 365, 25242, 5245, 13], "temperature": 0.0, "avg_logprob": -0.11328028056247175, "compression_ratio": 1.8175182481751824, "no_speech_prob": 3.119830944342539e-05}, {"id": 458, "seek": 157660, "start": 1586.9599999999998, "end": 1588.76, "text": " So where did they come in?", "tokens": [407, 689, 630, 436, 808, 294, 30], "temperature": 0.0, "avg_logprob": -0.11328028056247175, "compression_ratio": 1.8175182481751824, "no_speech_prob": 3.119830944342539e-05}, {"id": 459, "seek": 157660, "start": 1588.76, "end": 1594.56, "text": " Well, we can start with some image here, some real image from our training data, and we", "tokens": [1042, 11, 321, 393, 722, 365, 512, 3256, 510, 11, 512, 957, 3256, 490, 527, 3097, 1412, 11, 293, 321], "temperature": 0.0, "avg_logprob": -0.11328028056247175, "compression_ratio": 1.8175182481751824, "no_speech_prob": 3.119830944342539e-05}, {"id": 460, "seek": 157660, "start": 1594.56, "end": 1600.32, "text": " can push it away from the manifold of plausible existing images by corrupting it somehow.", "tokens": [393, 2944, 309, 1314, 490, 264, 47138, 295, 39925, 6741, 5267, 538, 17366, 278, 309, 6063, 13], "temperature": 0.0, "avg_logprob": -0.11328028056247175, "compression_ratio": 1.8175182481751824, "no_speech_prob": 3.119830944342539e-05}, {"id": 461, "seek": 157660, "start": 1600.32, "end": 1603.98, "text": " So for example, just adding random noise, that's equivalent to moving in some random", "tokens": [407, 337, 1365, 11, 445, 5127, 4974, 5658, 11, 300, 311, 10344, 281, 2684, 294, 512, 4974], "temperature": 0.0, "avg_logprob": -0.11328028056247175, "compression_ratio": 1.8175182481751824, "no_speech_prob": 3.119830944342539e-05}, {"id": 462, "seek": 160398, "start": 1603.98, "end": 1607.08, "text": " direction in the space of all possible images.", "tokens": [3513, 294, 264, 1901, 295, 439, 1944, 5267, 13], "temperature": 0.0, "avg_logprob": -0.09420499875563984, "compression_ratio": 1.8560311284046693, "no_speech_prob": 2.0784762455150485e-05}, {"id": 463, "seek": 160398, "start": 1607.08, "end": 1610.8, "text": " And so that's going to push the image away.", "tokens": [400, 370, 300, 311, 516, 281, 2944, 264, 3256, 1314, 13], "temperature": 0.0, "avg_logprob": -0.09420499875563984, "compression_ratio": 1.8560311284046693, "no_speech_prob": 2.0784762455150485e-05}, {"id": 464, "seek": 160398, "start": 1610.8, "end": 1615.4, "text": " And then we can try and predict using some model what this noise looks like.", "tokens": [400, 550, 321, 393, 853, 293, 6069, 1228, 512, 2316, 437, 341, 5658, 1542, 411, 13], "temperature": 0.0, "avg_logprob": -0.09420499875563984, "compression_ratio": 1.8560311284046693, "no_speech_prob": 2.0784762455150485e-05}, {"id": 465, "seek": 160398, "start": 1615.4, "end": 1618.52, "text": " How do I go from here back to a plausible image?", "tokens": [1012, 360, 286, 352, 490, 510, 646, 281, 257, 39925, 3256, 30], "temperature": 0.0, "avg_logprob": -0.09420499875563984, "compression_ratio": 1.8560311284046693, "no_speech_prob": 2.0784762455150485e-05}, {"id": 466, "seek": 160398, "start": 1618.52, "end": 1620.46, "text": " What is this noise that's been added?", "tokens": [708, 307, 341, 5658, 300, 311, 668, 3869, 30], "temperature": 0.0, "avg_logprob": -0.09420499875563984, "compression_ratio": 1.8560311284046693, "no_speech_prob": 2.0784762455150485e-05}, {"id": 467, "seek": 160398, "start": 1620.46, "end": 1623.44, "text": " And so that's going to be our big unit that does that prediction.", "tokens": [400, 370, 300, 311, 516, 281, 312, 527, 955, 4985, 300, 775, 300, 17630, 13], "temperature": 0.0, "avg_logprob": -0.09420499875563984, "compression_ratio": 1.8560311284046693, "no_speech_prob": 2.0784762455150485e-05}, {"id": 468, "seek": 160398, "start": 1623.44, "end": 1625.68, "text": " That's going to be our diffusion model.", "tokens": [663, 311, 516, 281, 312, 527, 25242, 2316, 13], "temperature": 0.0, "avg_logprob": -0.09420499875563984, "compression_ratio": 1.8560311284046693, "no_speech_prob": 2.0784762455150485e-05}, {"id": 469, "seek": 160398, "start": 1625.68, "end": 1630.32, "text": " And so that's, in its language, going to be called something like a score function.", "tokens": [400, 370, 300, 311, 11, 294, 1080, 2856, 11, 516, 281, 312, 1219, 746, 411, 257, 6175, 2445, 13], "temperature": 0.0, "avg_logprob": -0.09420499875563984, "compression_ratio": 1.8560311284046693, "no_speech_prob": 2.0784762455150485e-05}, {"id": 470, "seek": 160398, "start": 1630.32, "end": 1632.0, "text": " How do I get from wherever I am?", "tokens": [1012, 360, 286, 483, 490, 8660, 286, 669, 30], "temperature": 0.0, "avg_logprob": -0.09420499875563984, "compression_ratio": 1.8560311284046693, "no_speech_prob": 2.0784762455150485e-05}, {"id": 471, "seek": 163200, "start": 1632.0, "end": 1635.68, "text": " What's the noise that I need to remove to get back to a plausible image?", "tokens": [708, 311, 264, 5658, 300, 286, 643, 281, 4159, 281, 483, 646, 281, 257, 39925, 3256, 30], "temperature": 0.0, "avg_logprob": -0.14502221062069848, "compression_ratio": 1.684782608695652, "no_speech_prob": 8.13512542663375e-06}, {"id": 472, "seek": 163200, "start": 1635.68, "end": 1639.92, "text": " OK, so that's all well and good.", "tokens": [2264, 11, 370, 300, 311, 439, 731, 293, 665, 13], "temperature": 0.0, "avg_logprob": -0.14502221062069848, "compression_ratio": 1.684782608695652, "no_speech_prob": 8.13512542663375e-06}, {"id": 473, "seek": 163200, "start": 1639.92, "end": 1643.72, "text": " We can train this model with a number of examples because we can just take our training data,", "tokens": [492, 393, 3847, 341, 2316, 365, 257, 1230, 295, 5110, 570, 321, 393, 445, 747, 527, 3097, 1412, 11], "temperature": 0.0, "avg_logprob": -0.14502221062069848, "compression_ratio": 1.684782608695652, "no_speech_prob": 8.13512542663375e-06}, {"id": 474, "seek": 163200, "start": 1643.72, "end": 1647.76, "text": " add some random noise, try and predict the noise, update our model parameters.", "tokens": [909, 512, 4974, 5658, 11, 853, 293, 6069, 264, 5658, 11, 5623, 527, 2316, 9834, 13], "temperature": 0.0, "avg_logprob": -0.14502221062069848, "compression_ratio": 1.684782608695652, "no_speech_prob": 8.13512542663375e-06}, {"id": 475, "seek": 163200, "start": 1647.76, "end": 1650.76, "text": " So we can hopefully learn that function fairly well.", "tokens": [407, 321, 393, 4696, 1466, 300, 2445, 6457, 731, 13], "temperature": 0.0, "avg_logprob": -0.14502221062069848, "compression_ratio": 1.684782608695652, "no_speech_prob": 8.13512542663375e-06}, {"id": 476, "seek": 163200, "start": 1650.76, "end": 1652.36, "text": " Now we'd like to generate with this model.", "tokens": [823, 321, 1116, 411, 281, 8460, 365, 341, 2316, 13], "temperature": 0.0, "avg_logprob": -0.14502221062069848, "compression_ratio": 1.684782608695652, "no_speech_prob": 8.13512542663375e-06}, {"id": 477, "seek": 163200, "start": 1652.36, "end": 1654.04, "text": " So how do we do that?", "tokens": [407, 577, 360, 321, 360, 300, 30], "temperature": 0.0, "avg_logprob": -0.14502221062069848, "compression_ratio": 1.684782608695652, "no_speech_prob": 8.13512542663375e-06}, {"id": 478, "seek": 163200, "start": 1654.04, "end": 1656.72, "text": " Well, we can start at some random point.", "tokens": [1042, 11, 321, 393, 722, 412, 512, 4974, 935, 13], "temperature": 0.0, "avg_logprob": -0.14502221062069848, "compression_ratio": 1.684782608695652, "no_speech_prob": 8.13512542663375e-06}, {"id": 479, "seek": 163200, "start": 1656.72, "end": 1659.56, "text": " Like let's start over here.", "tokens": [1743, 718, 311, 722, 670, 510, 13], "temperature": 0.0, "avg_logprob": -0.14502221062069848, "compression_ratio": 1.684782608695652, "no_speech_prob": 8.13512542663375e-06}, {"id": 480, "seek": 165956, "start": 1659.56, "end": 1663.6399999999999, "text": " And you might think, well, surely I can just now predict the noise, remove that, and then", "tokens": [400, 291, 1062, 519, 11, 731, 11, 11468, 286, 393, 445, 586, 6069, 264, 5658, 11, 4159, 300, 11, 293, 550], "temperature": 0.0, "avg_logprob": -0.09714385939807427, "compression_ratio": 1.7429378531073447, "no_speech_prob": 3.2187286706175655e-05}, {"id": 481, "seek": 165956, "start": 1663.6399999999999, "end": 1665.6799999999998, "text": " I get my output image.", "tokens": [286, 483, 452, 5598, 3256, 13], "temperature": 0.0, "avg_logprob": -0.09714385939807427, "compression_ratio": 1.7429378531073447, "no_speech_prob": 3.2187286706175655e-05}, {"id": 482, "seek": 165956, "start": 1665.6799999999998, "end": 1668.34, "text": " And that's great, except that you've got to remember now we're starting from a random", "tokens": [400, 300, 311, 869, 11, 3993, 300, 291, 600, 658, 281, 1604, 586, 321, 434, 2891, 490, 257, 4974], "temperature": 0.0, "avg_logprob": -0.09714385939807427, "compression_ratio": 1.7429378531073447, "no_speech_prob": 3.2187286706175655e-05}, {"id": 483, "seek": 165956, "start": 1668.34, "end": 1670.04, "text": " point in the space of all possible images.", "tokens": [935, 294, 264, 1901, 295, 439, 1944, 5267, 13], "temperature": 0.0, "avg_logprob": -0.09714385939807427, "compression_ratio": 1.7429378531073447, "no_speech_prob": 3.2187286706175655e-05}, {"id": 484, "seek": 165956, "start": 1670.04, "end": 1672.3999999999999, "text": " It just looks like garbled nonsense.", "tokens": [467, 445, 1542, 411, 3691, 18320, 14925, 13], "temperature": 0.0, "avg_logprob": -0.09714385939807427, "compression_ratio": 1.7429378531073447, "no_speech_prob": 3.2187286706175655e-05}, {"id": 485, "seek": 165956, "start": 1672.3999999999999, "end": 1674.48, "text": " And the model's trying to say, well, what does the noise look like?", "tokens": [400, 264, 2316, 311, 1382, 281, 584, 11, 731, 11, 437, 775, 264, 5658, 574, 411, 30], "temperature": 0.0, "avg_logprob": -0.09714385939807427, "compression_ratio": 1.7429378531073447, "no_speech_prob": 3.2187286706175655e-05}, {"id": 486, "seek": 165956, "start": 1674.48, "end": 1679.36, "text": " And so you can imagine here for training, the further away we get from our examples,", "tokens": [400, 370, 291, 393, 3811, 510, 337, 3097, 11, 264, 3052, 1314, 321, 483, 490, 527, 5110, 11], "temperature": 0.0, "avg_logprob": -0.09714385939807427, "compression_ratio": 1.7429378531073447, "no_speech_prob": 3.2187286706175655e-05}, {"id": 487, "seek": 165956, "start": 1679.36, "end": 1681.8, "text": " the sparser our training will have been.", "tokens": [264, 637, 685, 260, 527, 3097, 486, 362, 668, 13], "temperature": 0.0, "avg_logprob": -0.09714385939807427, "compression_ratio": 1.7429378531073447, "no_speech_prob": 3.2187286706175655e-05}, {"id": 488, "seek": 165956, "start": 1681.8, "end": 1685.6799999999998, "text": " But also it's not like it's very obvious how we got to this noisy version.", "tokens": [583, 611, 309, 311, 406, 411, 309, 311, 588, 6322, 577, 321, 658, 281, 341, 24518, 3037, 13], "temperature": 0.0, "avg_logprob": -0.09714385939807427, "compression_ratio": 1.7429378531073447, "no_speech_prob": 3.2187286706175655e-05}, {"id": 489, "seek": 165956, "start": 1685.6799999999998, "end": 1689.08, "text": " We could have come from this image over here, added a bunch of noise.", "tokens": [492, 727, 362, 808, 490, 341, 3256, 670, 510, 11, 3869, 257, 3840, 295, 5658, 13], "temperature": 0.0, "avg_logprob": -0.09714385939807427, "compression_ratio": 1.7429378531073447, "no_speech_prob": 3.2187286706175655e-05}, {"id": 490, "seek": 168908, "start": 1689.08, "end": 1691.48, "text": " We could have come from one over here, one over here.", "tokens": [492, 727, 362, 808, 490, 472, 670, 510, 11, 472, 670, 510, 13], "temperature": 0.0, "avg_logprob": -0.11332740312741127, "compression_ratio": 1.8440366972477065, "no_speech_prob": 1.2409865121298935e-05}, {"id": 491, "seek": 168908, "start": 1691.48, "end": 1694.9199999999998, "text": " And so this model's not going to be able to make a perfect prediction.", "tokens": [400, 370, 341, 2316, 311, 406, 516, 281, 312, 1075, 281, 652, 257, 2176, 17630, 13], "temperature": 0.0, "avg_logprob": -0.11332740312741127, "compression_ratio": 1.8440366972477065, "no_speech_prob": 1.2409865121298935e-05}, {"id": 492, "seek": 168908, "start": 1694.9199999999998, "end": 1698.8799999999999, "text": " At best it might say, well, somewhere in that direction.", "tokens": [1711, 1151, 309, 1062, 584, 11, 731, 11, 4079, 294, 300, 3513, 13], "temperature": 0.0, "avg_logprob": -0.11332740312741127, "compression_ratio": 1.8440366972477065, "no_speech_prob": 1.2409865121298935e-05}, {"id": 493, "seek": 168908, "start": 1698.8799999999999, "end": 1701.8799999999999, "text": " It could point towards something like the data set mean, or at least the edge that's", "tokens": [467, 727, 935, 3030, 746, 411, 264, 1412, 992, 914, 11, 420, 412, 1935, 264, 4691, 300, 311], "temperature": 0.0, "avg_logprob": -0.11332740312741127, "compression_ratio": 1.8440366972477065, "no_speech_prob": 1.2409865121298935e-05}, {"id": 494, "seek": 168908, "start": 1701.8799999999999, "end": 1702.8799999999999, "text": " closer.", "tokens": [4966, 13], "temperature": 0.0, "avg_logprob": -0.11332740312741127, "compression_ratio": 1.8440366972477065, "no_speech_prob": 1.2409865121298935e-05}, {"id": 495, "seek": 168908, "start": 1702.8799999999999, "end": 1706.4399999999998, "text": " But it's not going to be able to perfectly give you one nice solution.", "tokens": [583, 309, 311, 406, 516, 281, 312, 1075, 281, 6239, 976, 291, 472, 1481, 3827, 13], "temperature": 0.0, "avg_logprob": -0.11332740312741127, "compression_ratio": 1.8440366972477065, "no_speech_prob": 1.2409865121298935e-05}, {"id": 496, "seek": 168908, "start": 1706.4399999999998, "end": 1708.1799999999998, "text": " And sure enough, that's what we see.", "tokens": [400, 988, 1547, 11, 300, 311, 437, 321, 536, 13], "temperature": 0.0, "avg_logprob": -0.11332740312741127, "compression_ratio": 1.8440366972477065, "no_speech_prob": 1.2409865121298935e-05}, {"id": 497, "seek": 168908, "start": 1708.1799999999998, "end": 1712.08, "text": " If we sample diffusion models in one step, we get the predictions, look at what that", "tokens": [759, 321, 6889, 25242, 5245, 294, 472, 1823, 11, 321, 483, 264, 21264, 11, 574, 412, 437, 300], "temperature": 0.0, "avg_logprob": -0.11332740312741127, "compression_ratio": 1.8440366972477065, "no_speech_prob": 1.2409865121298935e-05}, {"id": 498, "seek": 168908, "start": 1712.08, "end": 1713.6, "text": " corresponds to as an image.", "tokens": [23249, 281, 382, 364, 3256, 13], "temperature": 0.0, "avg_logprob": -0.11332740312741127, "compression_ratio": 1.8440366972477065, "no_speech_prob": 1.2409865121298935e-05}, {"id": 499, "seek": 168908, "start": 1713.6, "end": 1717.32, "text": " It's just going to look like a blurry mess, maybe like the mean of the data or some sort", "tokens": [467, 311, 445, 516, 281, 574, 411, 257, 37644, 2082, 11, 1310, 411, 264, 914, 295, 264, 1412, 420, 512, 1333], "temperature": 0.0, "avg_logprob": -0.11332740312741127, "compression_ratio": 1.8440366972477065, "no_speech_prob": 1.2409865121298935e-05}, {"id": 500, "seek": 168908, "start": 1717.32, "end": 1718.8999999999999, "text": " of garbled output.", "tokens": [295, 3691, 18320, 5598, 13], "temperature": 0.0, "avg_logprob": -0.11332740312741127, "compression_ratio": 1.8440366972477065, "no_speech_prob": 1.2409865121298935e-05}, {"id": 501, "seek": 171890, "start": 1718.9, "end": 1721.64, "text": " Really not going to look like a nice image.", "tokens": [4083, 406, 516, 281, 574, 411, 257, 1481, 3256, 13], "temperature": 0.0, "avg_logprob": -0.09908468539898212, "compression_ratio": 1.6842105263157894, "no_speech_prob": 1.4283275049820077e-05}, {"id": 502, "seek": 171890, "start": 1721.64, "end": 1724.5600000000002, "text": " So how do we do better?", "tokens": [407, 577, 360, 321, 360, 1101, 30], "temperature": 0.0, "avg_logprob": -0.09908468539898212, "compression_ratio": 1.6842105263157894, "no_speech_prob": 1.4283275049820077e-05}, {"id": 503, "seek": 171890, "start": 1724.5600000000002, "end": 1728.8400000000001, "text": " And the idea of sampling is to say, well, there's a couple of framings.", "tokens": [400, 264, 1558, 295, 21179, 307, 281, 584, 11, 731, 11, 456, 311, 257, 1916, 295, 21405, 1109, 13], "temperature": 0.0, "avg_logprob": -0.09908468539898212, "compression_ratio": 1.6842105263157894, "no_speech_prob": 1.4283275049820077e-05}, {"id": 504, "seek": 171890, "start": 1728.8400000000001, "end": 1732.64, "text": " So I'll start with the existing framing that you'll see talked about a lot of score-based", "tokens": [407, 286, 603, 722, 365, 264, 6741, 28971, 300, 291, 603, 536, 2825, 466, 257, 688, 295, 6175, 12, 6032], "temperature": 0.0, "avg_logprob": -0.09908468539898212, "compression_ratio": 1.6842105263157894, "no_speech_prob": 1.4283275049820077e-05}, {"id": 505, "seek": 171890, "start": 1732.64, "end": 1734.14, "text": " models and so on.", "tokens": [5245, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.09908468539898212, "compression_ratio": 1.6842105263157894, "no_speech_prob": 1.4283275049820077e-05}, {"id": 506, "seek": 171890, "start": 1734.14, "end": 1737.16, "text": " And then we'll talk about some other ways to think about it as well.", "tokens": [400, 550, 321, 603, 751, 466, 512, 661, 2098, 281, 519, 466, 309, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.09908468539898212, "compression_ratio": 1.6842105263157894, "no_speech_prob": 1.4283275049820077e-05}, {"id": 507, "seek": 171890, "start": 1737.16, "end": 1742.3600000000001, "text": " So this process of gradually corrupting our images away, adding a little bit of noise", "tokens": [407, 341, 1399, 295, 13145, 17366, 278, 527, 5267, 1314, 11, 5127, 257, 707, 857, 295, 5658], "temperature": 0.0, "avg_logprob": -0.09908468539898212, "compression_ratio": 1.6842105263157894, "no_speech_prob": 1.4283275049820077e-05}, {"id": 508, "seek": 171890, "start": 1742.3600000000001, "end": 1747.6000000000001, "text": " at a time, people like to talk of this as a stochastic differential equation.", "tokens": [412, 257, 565, 11, 561, 411, 281, 751, 295, 341, 382, 257, 342, 8997, 2750, 15756, 5367, 13], "temperature": 0.0, "avg_logprob": -0.09908468539898212, "compression_ratio": 1.6842105263157894, "no_speech_prob": 1.4283275049820077e-05}, {"id": 509, "seek": 174760, "start": 1747.6, "end": 1750.9199999999998, "text": " Stochastic because it's some randomness, we're picking random amounts of noise, random directions", "tokens": [745, 8997, 2750, 570, 309, 311, 512, 4974, 1287, 11, 321, 434, 8867, 4974, 11663, 295, 5658, 11, 4974, 11095], "temperature": 0.0, "avg_logprob": -0.11224722862243652, "compression_ratio": 1.8218181818181818, "no_speech_prob": 5.2943760238122195e-05}, {"id": 510, "seek": 174760, "start": 1750.9199999999998, "end": 1751.9199999999998, "text": " to add.", "tokens": [281, 909, 13], "temperature": 0.0, "avg_logprob": -0.11224722862243652, "compression_ratio": 1.8218181818181818, "no_speech_prob": 5.2943760238122195e-05}, {"id": 511, "seek": 174760, "start": 1751.9199999999998, "end": 1755.76, "text": " And a differential equation because it's not talking about anything absolute, just how", "tokens": [400, 257, 15756, 5367, 570, 309, 311, 406, 1417, 466, 1340, 8236, 11, 445, 577], "temperature": 0.0, "avg_logprob": -0.11224722862243652, "compression_ratio": 1.8218181818181818, "no_speech_prob": 5.2943760238122195e-05}, {"id": 512, "seek": 174760, "start": 1755.76, "end": 1759.4399999999998, "text": " we should change this from moment to moment to get more and more corrupted.", "tokens": [321, 820, 1319, 341, 490, 1623, 281, 1623, 281, 483, 544, 293, 544, 39480, 13], "temperature": 0.0, "avg_logprob": -0.11224722862243652, "compression_ratio": 1.8218181818181818, "no_speech_prob": 5.2943760238122195e-05}, {"id": 513, "seek": 174760, "start": 1759.4399999999998, "end": 1762.3999999999999, "text": " So that's why it's a differential equation.", "tokens": [407, 300, 311, 983, 309, 311, 257, 15756, 5367, 13], "temperature": 0.0, "avg_logprob": -0.11224722862243652, "compression_ratio": 1.8218181818181818, "no_speech_prob": 5.2943760238122195e-05}, {"id": 514, "seek": 174760, "start": 1762.3999999999999, "end": 1768.1999999999998, "text": " And with that framing, the question of, well, how do I go now back to the image, that's", "tokens": [400, 365, 300, 28971, 11, 264, 1168, 295, 11, 731, 11, 577, 360, 286, 352, 586, 646, 281, 264, 3256, 11, 300, 311], "temperature": 0.0, "avg_logprob": -0.11224722862243652, "compression_ratio": 1.8218181818181818, "no_speech_prob": 5.2943760238122195e-05}, {"id": 515, "seek": 174760, "start": 1768.1999999999998, "end": 1771.9199999999998, "text": " framed as solving an ordinary differential equation that corresponds to the reverse of", "tokens": [30420, 382, 12606, 364, 10547, 15756, 5367, 300, 23249, 281, 264, 9943, 295], "temperature": 0.0, "avg_logprob": -0.11224722862243652, "compression_ratio": 1.8218181818181818, "no_speech_prob": 5.2943760238122195e-05}, {"id": 516, "seek": 174760, "start": 1771.9199999999998, "end": 1772.9199999999998, "text": " this process.", "tokens": [341, 1399, 13], "temperature": 0.0, "avg_logprob": -0.11224722862243652, "compression_ratio": 1.8218181818181818, "no_speech_prob": 5.2943760238122195e-05}, {"id": 517, "seek": 177292, "start": 1772.92, "end": 1779.8400000000001, "text": " Now, you can't solve ODEs in a single step, but you can find an approximate solution.", "tokens": [823, 11, 291, 393, 380, 5039, 48447, 20442, 294, 257, 2167, 1823, 11, 457, 291, 393, 915, 364, 30874, 3827, 13], "temperature": 0.0, "avg_logprob": -0.1893055128014606, "compression_ratio": 1.7203947368421053, "no_speech_prob": 3.426309922360815e-05}, {"id": 518, "seek": 177292, "start": 1779.8400000000001, "end": 1783.0, "text": " And the more sort of sub-steps you take, the better your approximation.", "tokens": [400, 264, 544, 1333, 295, 1422, 12, 20413, 291, 747, 11, 264, 1101, 428, 28023, 13], "temperature": 0.0, "avg_logprob": -0.1893055128014606, "compression_ratio": 1.7203947368421053, "no_speech_prob": 3.426309922360815e-05}, {"id": 519, "seek": 177292, "start": 1783.0, "end": 1786.2, "text": " And so that's what these samples are doing, given like, okay, we said this image over", "tokens": [400, 370, 300, 311, 437, 613, 10938, 366, 884, 11, 2212, 411, 11, 1392, 11, 321, 848, 341, 3256, 670], "temperature": 0.0, "avg_logprob": -0.1893055128014606, "compression_ratio": 1.7203947368421053, "no_speech_prob": 3.426309922360815e-05}, {"id": 520, "seek": 177292, "start": 1786.2, "end": 1791.8400000000001, "text": " here, because my prediction, rather than moving the whole way there in one go, will remove", "tokens": [510, 11, 570, 452, 17630, 11, 2831, 813, 2684, 264, 1379, 636, 456, 294, 472, 352, 11, 486, 4159], "temperature": 0.0, "avg_logprob": -0.1893055128014606, "compression_ratio": 1.7203947368421053, "no_speech_prob": 3.426309922360815e-05}, {"id": 521, "seek": 177292, "start": 1791.8400000000001, "end": 1796.48, "text": " some of that noise, do a little update, and then we'll get a new prediction.", "tokens": [512, 295, 300, 5658, 11, 360, 257, 707, 5623, 11, 293, 550, 321, 603, 483, 257, 777, 17630, 13], "temperature": 0.0, "avg_logprob": -0.1893055128014606, "compression_ratio": 1.7203947368421053, "no_speech_prob": 3.426309922360815e-05}, {"id": 522, "seek": 177292, "start": 1796.48, "end": 1798.0, "text": " And so maybe now the prediction is slightly better.", "tokens": [400, 370, 1310, 586, 264, 17630, 307, 4748, 1101, 13], "temperature": 0.0, "avg_logprob": -0.1893055128014606, "compression_ratio": 1.7203947368421053, "no_speech_prob": 3.426309922360815e-05}, {"id": 523, "seek": 177292, "start": 1798.0, "end": 1799.0, "text": " It says up here.", "tokens": [467, 1619, 493, 510, 13], "temperature": 0.0, "avg_logprob": -0.1893055128014606, "compression_ratio": 1.7203947368421053, "no_speech_prob": 3.426309922360815e-05}, {"id": 524, "seek": 177292, "start": 1799.0, "end": 1800.88, "text": " So we move a little bit in that direction.", "tokens": [407, 321, 1286, 257, 707, 857, 294, 300, 3513, 13], "temperature": 0.0, "avg_logprob": -0.1893055128014606, "compression_ratio": 1.7203947368421053, "no_speech_prob": 3.426309922360815e-05}, {"id": 525, "seek": 180088, "start": 1800.88, "end": 1804.1200000000001, "text": " And now it makes an even better prediction, because as we get closer to the manifold,", "tokens": [400, 586, 309, 1669, 364, 754, 1101, 17630, 11, 570, 382, 321, 483, 4966, 281, 264, 47138, 11], "temperature": 0.0, "avg_logprob": -0.09922303562670683, "compression_ratio": 1.8412698412698412, "no_speech_prob": 1.892452382890042e-05}, {"id": 526, "seek": 180088, "start": 1804.1200000000001, "end": 1808.0400000000002, "text": " as we have less and less noise and more and more of some image emerging, the model is", "tokens": [382, 321, 362, 1570, 293, 1570, 5658, 293, 544, 293, 544, 295, 512, 3256, 14989, 11, 264, 2316, 307], "temperature": 0.0, "avg_logprob": -0.09922303562670683, "compression_ratio": 1.8412698412698412, "no_speech_prob": 1.892452382890042e-05}, {"id": 527, "seek": 180088, "start": 1808.0400000000002, "end": 1810.2, "text": " able to get more and more accurate predictions.", "tokens": [1075, 281, 483, 544, 293, 544, 8559, 21264, 13], "temperature": 0.0, "avg_logprob": -0.09922303562670683, "compression_ratio": 1.8412698412698412, "no_speech_prob": 1.892452382890042e-05}, {"id": 528, "seek": 180088, "start": 1810.2, "end": 1816.2, "text": " And so in some sort of number of steps, we divide up this process and we get closer and", "tokens": [400, 370, 294, 512, 1333, 295, 1230, 295, 4439, 11, 321, 9845, 493, 341, 1399, 293, 321, 483, 4966, 293], "temperature": 0.0, "avg_logprob": -0.09922303562670683, "compression_ratio": 1.8412698412698412, "no_speech_prob": 1.892452382890042e-05}, {"id": 529, "seek": 180088, "start": 1816.2, "end": 1821.7800000000002, "text": " closer and closer until we ideally find some image that looks very plausible as our output.", "tokens": [4966, 293, 4966, 1826, 321, 22915, 915, 512, 3256, 300, 1542, 588, 39925, 382, 527, 5598, 13], "temperature": 0.0, "avg_logprob": -0.09922303562670683, "compression_ratio": 1.8412698412698412, "no_speech_prob": 1.892452382890042e-05}, {"id": 530, "seek": 180088, "start": 1821.7800000000002, "end": 1825.0800000000002, "text": " And so that's what we're doing here with a lot of these samples.", "tokens": [400, 370, 300, 311, 437, 321, 434, 884, 510, 365, 257, 688, 295, 613, 10938, 13], "temperature": 0.0, "avg_logprob": -0.09922303562670683, "compression_ratio": 1.8412698412698412, "no_speech_prob": 1.892452382890042e-05}, {"id": 531, "seek": 182508, "start": 1825.08, "end": 1831.6399999999999, "text": " We're effectively trying to solve this ODE in some number of steps by breaking the process", "tokens": [492, 434, 8659, 1382, 281, 5039, 341, 422, 22296, 294, 512, 1230, 295, 4439, 538, 7697, 264, 1399], "temperature": 0.0, "avg_logprob": -0.09702549687138311, "compression_ratio": 1.7287581699346406, "no_speech_prob": 3.589382322388701e-05}, {"id": 532, "seek": 182508, "start": 1831.6399999999999, "end": 1834.36, "text": " up and only moving a small amount at a time.", "tokens": [493, 293, 787, 2684, 257, 1359, 2372, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.09702549687138311, "compression_ratio": 1.7287581699346406, "no_speech_prob": 3.589382322388701e-05}, {"id": 533, "seek": 182508, "start": 1834.36, "end": 1839.08, "text": " Now you get sort of first order solvers, right, where all we're doing is just linearly moving", "tokens": [823, 291, 483, 1333, 295, 700, 1668, 1404, 840, 11, 558, 11, 689, 439, 321, 434, 884, 307, 445, 43586, 2684], "temperature": 0.0, "avg_logprob": -0.09702549687138311, "compression_ratio": 1.7287581699346406, "no_speech_prob": 3.589382322388701e-05}, {"id": 534, "seek": 182508, "start": 1839.08, "end": 1840.52, "text": " within each one.", "tokens": [1951, 1184, 472, 13], "temperature": 0.0, "avg_logprob": -0.09702549687138311, "compression_ratio": 1.7287581699346406, "no_speech_prob": 3.589382322388701e-05}, {"id": 535, "seek": 182508, "start": 1840.52, "end": 1843.84, "text": " And this is equivalent to something called Euler's method or Euler's method, if you're", "tokens": [400, 341, 307, 10344, 281, 746, 1219, 462, 26318, 311, 3170, 420, 462, 26318, 311, 3170, 11, 498, 291, 434], "temperature": 0.0, "avg_logprob": -0.09702549687138311, "compression_ratio": 1.7287581699346406, "no_speech_prob": 3.589382322388701e-05}, {"id": 536, "seek": 182508, "start": 1843.84, "end": 1846.08, "text": " like me and you've only ever read it.", "tokens": [411, 385, 293, 291, 600, 787, 1562, 1401, 309, 13], "temperature": 0.0, "avg_logprob": -0.09702549687138311, "compression_ratio": 1.7287581699346406, "no_speech_prob": 3.589382322388701e-05}, {"id": 537, "seek": 182508, "start": 1846.08, "end": 1849.62, "text": " And this is what some of the most basic samples are doing, just linear approximations for", "tokens": [400, 341, 307, 437, 512, 295, 264, 881, 3875, 10938, 366, 884, 11, 445, 8213, 8542, 763, 337], "temperature": 0.0, "avg_logprob": -0.09702549687138311, "compression_ratio": 1.7287581699346406, "no_speech_prob": 3.589382322388701e-05}, {"id": 538, "seek": 182508, "start": 1849.62, "end": 1852.1999999999998, "text": " each of these little steps.", "tokens": [1184, 295, 613, 707, 4439, 13], "temperature": 0.0, "avg_logprob": -0.09702549687138311, "compression_ratio": 1.7287581699346406, "no_speech_prob": 3.589382322388701e-05}, {"id": 539, "seek": 182508, "start": 1852.1999999999998, "end": 1854.28, "text": " But you also get additional approaches.", "tokens": [583, 291, 611, 483, 4497, 11587, 13], "temperature": 0.0, "avg_logprob": -0.09702549687138311, "compression_ratio": 1.7287581699346406, "no_speech_prob": 3.589382322388701e-05}, {"id": 540, "seek": 185428, "start": 1854.28, "end": 1859.84, "text": " So for example, maybe if we were to make a prediction from here, it might look like something", "tokens": [407, 337, 1365, 11, 1310, 498, 321, 645, 281, 652, 257, 17630, 490, 510, 11, 309, 1062, 574, 411, 746], "temperature": 0.0, "avg_logprob": -0.10513015291584071, "compression_ratio": 2.0634920634920637, "no_speech_prob": 0.00010227119491901249}, {"id": 541, "seek": 185428, "start": 1859.84, "end": 1860.84, "text": " like this.", "tokens": [411, 341, 13], "temperature": 0.0, "avg_logprob": -0.10513015291584071, "compression_ratio": 2.0634920634920637, "no_speech_prob": 0.00010227119491901249}, {"id": 542, "seek": 185428, "start": 1860.84, "end": 1864.44, "text": " And if we were to make a prediction from here, it might look like something like that.", "tokens": [400, 498, 321, 645, 281, 652, 257, 17630, 490, 510, 11, 309, 1062, 574, 411, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.10513015291584071, "compression_ratio": 2.0634920634920637, "no_speech_prob": 0.00010227119491901249}, {"id": 543, "seek": 185428, "start": 1864.44, "end": 1870.36, "text": " So we have our error here, but as we move in that direction, it's also changing, right?", "tokens": [407, 321, 362, 527, 6713, 510, 11, 457, 382, 321, 1286, 294, 300, 3513, 11, 309, 311, 611, 4473, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.10513015291584071, "compression_ratio": 2.0634920634920637, "no_speech_prob": 0.00010227119491901249}, {"id": 544, "seek": 185428, "start": 1870.36, "end": 1874.6399999999999, "text": " So there's like a derivative of a derivative, a gradient of a gradient.", "tokens": [407, 456, 311, 411, 257, 13760, 295, 257, 13760, 11, 257, 16235, 295, 257, 16235, 13], "temperature": 0.0, "avg_logprob": -0.10513015291584071, "compression_ratio": 2.0634920634920637, "no_speech_prob": 0.00010227119491901249}, {"id": 545, "seek": 185428, "start": 1874.6399999999999, "end": 1879.84, "text": " And that's where this second order solver comes in and says, well, if I know how this", "tokens": [400, 300, 311, 689, 341, 1150, 1668, 1404, 331, 1487, 294, 293, 1619, 11, 731, 11, 498, 286, 458, 577, 341], "temperature": 0.0, "avg_logprob": -0.10513015291584071, "compression_ratio": 2.0634920634920637, "no_speech_prob": 0.00010227119491901249}, {"id": 546, "seek": 185428, "start": 1879.84, "end": 1883.84, "text": " prediction changes as I move in this direction, like what is the derivative of it?", "tokens": [17630, 2962, 382, 286, 1286, 294, 341, 3513, 11, 411, 437, 307, 264, 13760, 295, 309, 30], "temperature": 0.0, "avg_logprob": -0.10513015291584071, "compression_ratio": 2.0634920634920637, "no_speech_prob": 0.00010227119491901249}, {"id": 547, "seek": 188384, "start": 1883.84, "end": 1888.1599999999999, "text": " Then I can kind of account for that curvature when I make my update step and maybe know", "tokens": [1396, 286, 393, 733, 295, 2696, 337, 300, 37638, 562, 286, 652, 452, 5623, 1823, 293, 1310, 458], "temperature": 0.0, "avg_logprob": -0.13605081274154338, "compression_ratio": 1.8006430868167203, "no_speech_prob": 4.005618393421173e-05}, {"id": 548, "seek": 188384, "start": 1888.1599999999999, "end": 1890.6799999999998, "text": " that it's going to curve a bit in that direction.", "tokens": [300, 309, 311, 516, 281, 7605, 257, 857, 294, 300, 3513, 13], "temperature": 0.0, "avg_logprob": -0.13605081274154338, "compression_ratio": 1.8006430868167203, "no_speech_prob": 4.005618393421173e-05}, {"id": 549, "seek": 188384, "start": 1890.6799999999998, "end": 1893.56, "text": " And so that's where we get things like these so-called second order solvers and higher", "tokens": [400, 370, 300, 311, 689, 321, 483, 721, 411, 613, 370, 12, 11880, 1150, 1668, 1404, 840, 293, 2946], "temperature": 0.0, "avg_logprob": -0.13605081274154338, "compression_ratio": 1.8006430868167203, "no_speech_prob": 4.005618393421173e-05}, {"id": 550, "seek": 188384, "start": 1893.56, "end": 1895.28, "text": " order solvers.", "tokens": [1668, 1404, 840, 13], "temperature": 0.0, "avg_logprob": -0.13605081274154338, "compression_ratio": 1.8006430868167203, "no_speech_prob": 4.005618393421173e-05}, {"id": 551, "seek": 188384, "start": 1895.28, "end": 1899.36, "text": " The upside of this is that we can get, you know, do a larger step at a time because we", "tokens": [440, 14119, 295, 341, 307, 300, 321, 393, 483, 11, 291, 458, 11, 360, 257, 4833, 1823, 412, 257, 565, 570, 321], "temperature": 0.0, "avg_logprob": -0.13605081274154338, "compression_ratio": 1.8006430868167203, "no_speech_prob": 4.005618393421173e-05}, {"id": 552, "seek": 188384, "start": 1899.36, "end": 1900.9199999999998, "text": " have a more accurate prediction.", "tokens": [362, 257, 544, 8559, 17630, 13], "temperature": 0.0, "avg_logprob": -0.13605081274154338, "compression_ratio": 1.8006430868167203, "no_speech_prob": 4.005618393421173e-05}, {"id": 553, "seek": 188384, "start": 1900.9199999999998, "end": 1903.52, "text": " We're not just doing a first order linear approximation.", "tokens": [492, 434, 406, 445, 884, 257, 700, 1668, 8213, 28023, 13], "temperature": 0.0, "avg_logprob": -0.13605081274154338, "compression_ratio": 1.8006430868167203, "no_speech_prob": 4.005618393421173e-05}, {"id": 554, "seek": 188384, "start": 1903.52, "end": 1906.4599999999998, "text": " We have this kind of curvature taken into account.", "tokens": [492, 362, 341, 733, 295, 37638, 2726, 666, 2696, 13], "temperature": 0.0, "avg_logprob": -0.13605081274154338, "compression_ratio": 1.8006430868167203, "no_speech_prob": 4.005618393421173e-05}, {"id": 555, "seek": 188384, "start": 1906.4599999999998, "end": 1911.1599999999999, "text": " The downside is that to estimate that curvature for a given point, we might need to call our", "tokens": [440, 25060, 307, 300, 281, 12539, 300, 37638, 337, 257, 2212, 935, 11, 321, 1062, 643, 281, 818, 527], "temperature": 0.0, "avg_logprob": -0.13605081274154338, "compression_ratio": 1.8006430868167203, "no_speech_prob": 4.005618393421173e-05}, {"id": 556, "seek": 191116, "start": 1911.16, "end": 1913.8000000000002, "text": " model multiple times to get multiple estimates.", "tokens": [2316, 3866, 1413, 281, 483, 3866, 20561, 13], "temperature": 0.0, "avg_logprob": -0.10898963425510613, "compression_ratio": 1.7617328519855595, "no_speech_prob": 4.131127570872195e-05}, {"id": 557, "seek": 191116, "start": 1913.8000000000002, "end": 1914.8000000000002, "text": " And so that takes time.", "tokens": [400, 370, 300, 2516, 565, 13], "temperature": 0.0, "avg_logprob": -0.10898963425510613, "compression_ratio": 1.7617328519855595, "no_speech_prob": 4.131127570872195e-05}, {"id": 558, "seek": 191116, "start": 1914.8000000000002, "end": 1918.28, "text": " So we can take a larger step, but we need more model evaluations per step.", "tokens": [407, 321, 393, 747, 257, 4833, 1823, 11, 457, 321, 643, 544, 2316, 43085, 680, 1823, 13], "temperature": 0.0, "avg_logprob": -0.10898963425510613, "compression_ratio": 1.7617328519855595, "no_speech_prob": 4.131127570872195e-05}, {"id": 559, "seek": 191116, "start": 1918.28, "end": 1922.8400000000001, "text": " A kind of hybrid approach is to say, well, rather than trying to estimate the curvature", "tokens": [316, 733, 295, 13051, 3109, 307, 281, 584, 11, 731, 11, 2831, 813, 1382, 281, 12539, 264, 37638], "temperature": 0.0, "avg_logprob": -0.10898963425510613, "compression_ratio": 1.7617328519855595, "no_speech_prob": 4.131127570872195e-05}, {"id": 560, "seek": 191116, "start": 1922.8400000000001, "end": 1928.18, "text": " here, I might just take a linear step, look at the next prediction, but I'll keep a history", "tokens": [510, 11, 286, 1062, 445, 747, 257, 8213, 1823, 11, 574, 412, 264, 958, 17630, 11, 457, 286, 603, 1066, 257, 2503], "temperature": 0.0, "avg_logprob": -0.10898963425510613, "compression_ratio": 1.7617328519855595, "no_speech_prob": 4.131127570872195e-05}, {"id": 561, "seek": 191116, "start": 1928.18, "end": 1929.18, "text": " of my previous steps.", "tokens": [295, 452, 3894, 4439, 13], "temperature": 0.0, "avg_logprob": -0.10898963425510613, "compression_ratio": 1.7617328519855595, "no_speech_prob": 4.131127570872195e-05}, {"id": 562, "seek": 191116, "start": 1929.18, "end": 1931.8000000000002, "text": " And so then over here, it predicts like this.", "tokens": [400, 370, 550, 670, 510, 11, 309, 6069, 82, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.10898963425510613, "compression_ratio": 1.7617328519855595, "no_speech_prob": 4.131127570872195e-05}, {"id": 563, "seek": 191116, "start": 1931.8000000000002, "end": 1935.96, "text": " So I have now this history and I'm going to use that to better guess what this trajectory", "tokens": [407, 286, 362, 586, 341, 2503, 293, 286, 478, 516, 281, 764, 300, 281, 1101, 2041, 437, 341, 21512], "temperature": 0.0, "avg_logprob": -0.10898963425510613, "compression_ratio": 1.7617328519855595, "no_speech_prob": 4.131127570872195e-05}, {"id": 564, "seek": 191116, "start": 1935.96, "end": 1936.96, "text": " is.", "tokens": [307, 13], "temperature": 0.0, "avg_logprob": -0.10898963425510613, "compression_ratio": 1.7617328519855595, "no_speech_prob": 4.131127570872195e-05}, {"id": 565, "seek": 193696, "start": 1936.96, "end": 1941.52, "text": " So I might keep a history of the past three or four or five predictions and know that", "tokens": [407, 286, 1062, 1066, 257, 2503, 295, 264, 1791, 1045, 420, 1451, 420, 1732, 21264, 293, 458, 300], "temperature": 0.0, "avg_logprob": -0.16008761621290638, "compression_ratio": 1.7027027027027026, "no_speech_prob": 7.141338574001566e-05}, {"id": 566, "seek": 193696, "start": 1941.52, "end": 1944.68, "text": " since they're quite close to each other, maybe that tells me some information about the curvature", "tokens": [1670, 436, 434, 1596, 1998, 281, 1184, 661, 11, 1310, 300, 5112, 385, 512, 1589, 466, 264, 37638], "temperature": 0.0, "avg_logprob": -0.16008761621290638, "compression_ratio": 1.7027027027027026, "no_speech_prob": 7.141338574001566e-05}, {"id": 567, "seek": 193696, "start": 1944.68, "end": 1948.04, "text": " here and I can use that to, again, take larger steps.", "tokens": [510, 293, 286, 393, 764, 300, 281, 11, 797, 11, 747, 4833, 4439, 13], "temperature": 0.0, "avg_logprob": -0.16008761621290638, "compression_ratio": 1.7027027027027026, "no_speech_prob": 7.141338574001566e-05}, {"id": 568, "seek": 193696, "start": 1948.04, "end": 1952.0, "text": " And so that's what we see the so-called linear multi-step sampling coming in, just keeping", "tokens": [400, 370, 300, 311, 437, 321, 536, 264, 370, 12, 11880, 8213, 4825, 12, 16792, 21179, 1348, 294, 11, 445, 5145], "temperature": 0.0, "avg_logprob": -0.16008761621290638, "compression_ratio": 1.7027027027027026, "no_speech_prob": 7.141338574001566e-05}, {"id": 569, "seek": 193696, "start": 1952.0, "end": 1956.52, "text": " this buffer of past predictions to try and do a better job estimating than the simple", "tokens": [341, 21762, 295, 1791, 21264, 281, 853, 293, 360, 257, 1101, 1691, 8017, 990, 813, 264, 2199], "temperature": 0.0, "avg_logprob": -0.16008761621290638, "compression_ratio": 1.7027027027027026, "no_speech_prob": 7.141338574001566e-05}, {"id": 570, "seek": 193696, "start": 1956.52, "end": 1960.64, "text": " one step linear type first order solvers.", "tokens": [472, 1823, 8213, 2010, 700, 1668, 1404, 840, 13], "temperature": 0.0, "avg_logprob": -0.16008761621290638, "compression_ratio": 1.7027027027027026, "no_speech_prob": 7.141338574001566e-05}, {"id": 571, "seek": 193696, "start": 1960.64, "end": 1964.6000000000001, "text": " OK, so that's the score based sampling version.", "tokens": [2264, 11, 370, 300, 311, 264, 6175, 2361, 21179, 3037, 13], "temperature": 0.0, "avg_logprob": -0.16008761621290638, "compression_ratio": 1.7027027027027026, "no_speech_prob": 7.141338574001566e-05}, {"id": 572, "seek": 196460, "start": 1964.6, "end": 1969.12, "text": " And all of the variance and innovation comes down to things like, how can we do this in", "tokens": [400, 439, 295, 264, 21977, 293, 8504, 1487, 760, 281, 721, 411, 11, 577, 393, 321, 360, 341, 294], "temperature": 0.0, "avg_logprob": -0.13762893051397604, "compression_ratio": 1.6354166666666667, "no_speech_prob": 6.492660031653941e-05}, {"id": 573, "seek": 196460, "start": 1969.12, "end": 1970.8799999999999, "text": " as few steps as possible?", "tokens": [382, 1326, 4439, 382, 1944, 30], "temperature": 0.0, "avg_logprob": -0.13762893051397604, "compression_ratio": 1.6354166666666667, "no_speech_prob": 6.492660031653941e-05}, {"id": 574, "seek": 196460, "start": 1970.8799999999999, "end": 1974.12, "text": " Maybe we have a schedule that says we take larger steps at first and then gradually smaller", "tokens": [2704, 321, 362, 257, 7567, 300, 1619, 321, 747, 4833, 4439, 412, 700, 293, 550, 13145, 4356], "temperature": 0.0, "avg_logprob": -0.13762893051397604, "compression_ratio": 1.6354166666666667, "no_speech_prob": 6.492660031653941e-05}, {"id": 575, "seek": 196460, "start": 1974.12, "end": 1976.12, "text": " steps as we get closer.", "tokens": [4439, 382, 321, 483, 4966, 13], "temperature": 0.0, "avg_logprob": -0.13762893051397604, "compression_ratio": 1.6354166666666667, "no_speech_prob": 6.492660031653941e-05}, {"id": 576, "seek": 196460, "start": 1976.12, "end": 1979.6799999999998, "text": " There's, I think, now some dynamic methods and can we estimate how many steps we need", "tokens": [821, 311, 11, 286, 519, 11, 586, 512, 8546, 7150, 293, 393, 321, 12539, 577, 867, 4439, 321, 643], "temperature": 0.0, "avg_logprob": -0.13762893051397604, "compression_ratio": 1.6354166666666667, "no_speech_prob": 6.492660031653941e-05}, {"id": 577, "seek": 196460, "start": 1979.6799999999998, "end": 1981.6799999999998, "text": " to take and so on.", "tokens": [281, 747, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.13762893051397604, "compression_ratio": 1.6354166666666667, "no_speech_prob": 6.492660031653941e-05}, {"id": 578, "seek": 196460, "start": 1981.6799999999998, "end": 1987.8799999999999, "text": " So that's all trying to attack it from this kind of score based ODE solving framework.", "tokens": [407, 300, 311, 439, 1382, 281, 2690, 309, 490, 341, 733, 295, 6175, 2361, 422, 22296, 12606, 8388, 13], "temperature": 0.0, "avg_logprob": -0.13762893051397604, "compression_ratio": 1.6354166666666667, "no_speech_prob": 6.492660031653941e-05}, {"id": 579, "seek": 196460, "start": 1987.8799999999999, "end": 1990.08, "text": " But there's another way to think of this as well.", "tokens": [583, 456, 311, 1071, 636, 281, 519, 295, 341, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.13762893051397604, "compression_ratio": 1.6354166666666667, "no_speech_prob": 6.492660031653941e-05}, {"id": 580, "seek": 199008, "start": 1990.08, "end": 1995.6799999999998, "text": " And that's to say, OK, well, I don't really care about solving this exact reverse ODE.", "tokens": [400, 300, 311, 281, 584, 11, 2264, 11, 731, 11, 286, 500, 380, 534, 1127, 466, 12606, 341, 1900, 9943, 422, 22296, 13], "temperature": 0.0, "avg_logprob": -0.07101789116859436, "compression_ratio": 1.7478260869565216, "no_speech_prob": 6.5397375692555215e-06}, {"id": 581, "seek": 199008, "start": 1995.6799999999998, "end": 1999.8799999999999, "text": " All I care about is that I end up with an image that's on this manifold, like a plausible", "tokens": [1057, 286, 1127, 466, 307, 300, 286, 917, 493, 365, 364, 3256, 300, 311, 322, 341, 47138, 11, 411, 257, 39925], "temperature": 0.0, "avg_logprob": -0.07101789116859436, "compression_ratio": 1.7478260869565216, "no_speech_prob": 6.5397375692555215e-06}, {"id": 582, "seek": 199008, "start": 1999.8799999999999, "end": 2001.1999999999998, "text": " looking image.", "tokens": [1237, 3256, 13], "temperature": 0.0, "avg_logprob": -0.07101789116859436, "compression_ratio": 1.7478260869565216, "no_speech_prob": 6.5397375692555215e-06}, {"id": 583, "seek": 199008, "start": 2001.1999999999998, "end": 2006.6399999999999, "text": " And so I have a model that estimates how much noise there is.", "tokens": [400, 370, 286, 362, 257, 2316, 300, 20561, 577, 709, 5658, 456, 307, 13], "temperature": 0.0, "avg_logprob": -0.07101789116859436, "compression_ratio": 1.7478260869565216, "no_speech_prob": 6.5397375692555215e-06}, {"id": 584, "seek": 199008, "start": 2006.6399999999999, "end": 2010.58, "text": " And if that noise is very small, then that means I've got a good image.", "tokens": [400, 498, 300, 5658, 307, 588, 1359, 11, 550, 300, 1355, 286, 600, 658, 257, 665, 3256, 13], "temperature": 0.0, "avg_logprob": -0.07101789116859436, "compression_ratio": 1.7478260869565216, "no_speech_prob": 6.5397375692555215e-06}, {"id": 585, "seek": 199008, "start": 2010.58, "end": 2014.22, "text": " And if that noise is really large, then that means I've got some work to do.", "tokens": [400, 498, 300, 5658, 307, 534, 2416, 11, 550, 300, 1355, 286, 600, 658, 512, 589, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.07101789116859436, "compression_ratio": 1.7478260869565216, "no_speech_prob": 6.5397375692555215e-06}, {"id": 586, "seek": 201422, "start": 2014.22, "end": 2020.24, "text": " And so this kind of starts bringing up some analogies to training neural networks, because", "tokens": [400, 370, 341, 733, 295, 3719, 5062, 493, 512, 16660, 530, 281, 3097, 18161, 9590, 11, 570], "temperature": 0.0, "avg_logprob": -0.11658122960258932, "compression_ratio": 1.8075601374570447, "no_speech_prob": 1.4011680832481943e-05}, {"id": 587, "seek": 201422, "start": 2020.24, "end": 2024.08, "text": " in neural networks, we have the space of all possible parameters.", "tokens": [294, 18161, 9590, 11, 321, 362, 264, 1901, 295, 439, 1944, 9834, 13], "temperature": 0.0, "avg_logprob": -0.11658122960258932, "compression_ratio": 1.8075601374570447, "no_speech_prob": 1.4011680832481943e-05}, {"id": 588, "seek": 201422, "start": 2024.08, "end": 2028.44, "text": " And we're trying to adjust those parameters not to solve the gradient flow equation, right,", "tokens": [400, 321, 434, 1382, 281, 4369, 729, 9834, 406, 281, 5039, 264, 16235, 3095, 5367, 11, 558, 11], "temperature": 0.0, "avg_logprob": -0.11658122960258932, "compression_ratio": 1.8075601374570447, "no_speech_prob": 1.4011680832481943e-05}, {"id": 589, "seek": 201422, "start": 2028.44, "end": 2032.6200000000001, "text": " although that's possible in theory, that you might try and do that.", "tokens": [4878, 300, 311, 1944, 294, 5261, 11, 300, 291, 1062, 853, 293, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.11658122960258932, "compression_ratio": 1.8075601374570447, "no_speech_prob": 1.4011680832481943e-05}, {"id": 590, "seek": 201422, "start": 2032.6200000000001, "end": 2033.6200000000001, "text": " We don't care about that.", "tokens": [492, 500, 380, 1127, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.11658122960258932, "compression_ratio": 1.8075601374570447, "no_speech_prob": 1.4011680832481943e-05}, {"id": 591, "seek": 201422, "start": 2033.6200000000001, "end": 2034.6200000000001, "text": " We just want to find the minima.", "tokens": [492, 445, 528, 281, 915, 264, 4464, 64, 13], "temperature": 0.0, "avg_logprob": -0.11658122960258932, "compression_ratio": 1.8075601374570447, "no_speech_prob": 1.4011680832481943e-05}, {"id": 592, "seek": 201422, "start": 2034.6200000000001, "end": 2036.7, "text": " We want to find a point where our loss is really good.", "tokens": [492, 528, 281, 915, 257, 935, 689, 527, 4470, 307, 534, 665, 13], "temperature": 0.0, "avg_logprob": -0.11658122960258932, "compression_ratio": 1.8075601374570447, "no_speech_prob": 1.4011680832481943e-05}, {"id": 593, "seek": 201422, "start": 2036.7, "end": 2039.72, "text": " And so when we're training a neural network, that's exactly what we do.", "tokens": [400, 370, 562, 321, 434, 3097, 257, 18161, 3209, 11, 300, 311, 2293, 437, 321, 360, 13], "temperature": 0.0, "avg_logprob": -0.11658122960258932, "compression_ratio": 1.8075601374570447, "no_speech_prob": 1.4011680832481943e-05}, {"id": 594, "seek": 201422, "start": 2039.72, "end": 2041.48, "text": " We set up an optimizer.", "tokens": [492, 992, 493, 364, 5028, 6545, 13], "temperature": 0.0, "avg_logprob": -0.11658122960258932, "compression_ratio": 1.8075601374570447, "no_speech_prob": 1.4011680832481943e-05}, {"id": 595, "seek": 204148, "start": 2041.48, "end": 2044.84, "text": " We take some number of steps trying to reduce some loss.", "tokens": [492, 747, 512, 1230, 295, 4439, 1382, 281, 5407, 512, 4470, 13], "temperature": 0.0, "avg_logprob": -0.1650812214818494, "compression_ratio": 1.7586206896551724, "no_speech_prob": 3.5168432077625766e-05}, {"id": 596, "seek": 204148, "start": 2044.84, "end": 2048.48, "text": " And once that loss gets sort of, you know, levels off, right, reduce over time levels", "tokens": [400, 1564, 300, 4470, 2170, 1333, 295, 11, 291, 458, 11, 4358, 766, 11, 558, 11, 5407, 670, 565, 4358], "temperature": 0.0, "avg_logprob": -0.1650812214818494, "compression_ratio": 1.7586206896551724, "no_speech_prob": 3.5168432077625766e-05}, {"id": 597, "seek": 204148, "start": 2048.48, "end": 2049.48, "text": " off, OK, cool.", "tokens": [766, 11, 2264, 11, 1627, 13], "temperature": 0.0, "avg_logprob": -0.1650812214818494, "compression_ratio": 1.7586206896551724, "no_speech_prob": 3.5168432077625766e-05}, {"id": 598, "seek": 204148, "start": 2049.48, "end": 2052.32, "text": " I guess we found a good neural network.", "tokens": [286, 2041, 321, 1352, 257, 665, 18161, 3209, 13], "temperature": 0.0, "avg_logprob": -0.1650812214818494, "compression_ratio": 1.7586206896551724, "no_speech_prob": 3.5168432077625766e-05}, {"id": 599, "seek": 204148, "start": 2052.32, "end": 2055.76, "text": " And so we can apply that same kind of thinking here to say, all right, I'll start at some", "tokens": [400, 370, 321, 393, 3079, 300, 912, 733, 295, 1953, 510, 281, 584, 11, 439, 558, 11, 286, 603, 722, 412, 512], "temperature": 0.0, "avg_logprob": -0.1650812214818494, "compression_ratio": 1.7586206896551724, "no_speech_prob": 3.5168432077625766e-05}, {"id": 600, "seek": 204148, "start": 2055.76, "end": 2059.72, "text": " point and I'll have an estimate of the gradient, right?", "tokens": [935, 293, 286, 603, 362, 364, 12539, 295, 264, 16235, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1650812214818494, "compression_ratio": 1.7586206896551724, "no_speech_prob": 3.5168432077625766e-05}, {"id": 601, "seek": 204148, "start": 2059.72, "end": 2061.72, "text": " It's like maybe pointing over here.", "tokens": [467, 311, 411, 1310, 12166, 670, 510, 13], "temperature": 0.0, "avg_logprob": -0.1650812214818494, "compression_ratio": 1.7586206896551724, "no_speech_prob": 3.5168432077625766e-05}, {"id": 602, "seek": 204148, "start": 2061.72, "end": 2066.08, "text": " But remember, that estimate is not very good, just like the first gradients estimated when", "tokens": [583, 1604, 11, 300, 12539, 307, 406, 588, 665, 11, 445, 411, 264, 700, 2771, 2448, 14109, 562], "temperature": 0.0, "avg_logprob": -0.1650812214818494, "compression_ratio": 1.7586206896551724, "no_speech_prob": 3.5168432077625766e-05}, {"id": 603, "seek": 204148, "start": 2066.08, "end": 2068.96, "text": " training a neural network are pretty bad, because it's all just these randomly initialized", "tokens": [3097, 257, 18161, 3209, 366, 1238, 1578, 11, 570, 309, 311, 439, 445, 613, 16979, 5883, 1602], "temperature": 0.0, "avg_logprob": -0.1650812214818494, "compression_ratio": 1.7586206896551724, "no_speech_prob": 3.5168432077625766e-05}, {"id": 604, "seek": 206896, "start": 2068.96, "end": 2072.12, "text": " weights, but hopefully at least points in a useful direction.", "tokens": [17443, 11, 457, 4696, 412, 1935, 2793, 294, 257, 4420, 3513, 13], "temperature": 0.0, "avg_logprob": -0.18152787792148875, "compression_ratio": 1.7022653721682848, "no_speech_prob": 7.76150500314543e-06}, {"id": 605, "seek": 206896, "start": 2072.12, "end": 2076.0, "text": " So then I'll take some step and the length of the step, I won't try and do some fancy", "tokens": [407, 550, 286, 603, 747, 512, 1823, 293, 264, 4641, 295, 264, 1823, 11, 286, 1582, 380, 853, 293, 360, 512, 10247], "temperature": 0.0, "avg_logprob": -0.18152787792148875, "compression_ratio": 1.7022653721682848, "no_speech_prob": 7.76150500314543e-06}, {"id": 606, "seek": 206896, "start": 2076.0, "end": 2077.0, "text": " schedule.", "tokens": [7567, 13], "temperature": 0.0, "avg_logprob": -0.18152787792148875, "compression_ratio": 1.7022653721682848, "no_speech_prob": 7.76150500314543e-06}, {"id": 607, "seek": 206896, "start": 2077.0, "end": 2080.2, "text": " I'll just offload this to an off the shelf optimizer.", "tokens": [286, 603, 445, 766, 2907, 341, 281, 364, 766, 264, 15222, 5028, 6545, 13], "temperature": 0.0, "avg_logprob": -0.18152787792148875, "compression_ratio": 1.7022653721682848, "no_speech_prob": 7.76150500314543e-06}, {"id": 608, "seek": 206896, "start": 2080.2, "end": 2084.92, "text": " So I have some learning rate, maybe something like momentum that determines how big of a", "tokens": [407, 286, 362, 512, 2539, 3314, 11, 1310, 746, 411, 11244, 300, 24799, 577, 955, 295, 257], "temperature": 0.0, "avg_logprob": -0.18152787792148875, "compression_ratio": 1.7022653721682848, "no_speech_prob": 7.76150500314543e-06}, {"id": 609, "seek": 206896, "start": 2084.92, "end": 2086.04, "text": " step I take.", "tokens": [1823, 286, 747, 13], "temperature": 0.0, "avg_logprob": -0.18152787792148875, "compression_ratio": 1.7022653721682848, "no_speech_prob": 7.76150500314543e-06}, {"id": 610, "seek": 206896, "start": 2086.04, "end": 2090.48, "text": " And then I update my prediction, right, take another step in that direction and so on.", "tokens": [400, 550, 286, 5623, 452, 17630, 11, 558, 11, 747, 1071, 1823, 294, 300, 3513, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.18152787792148875, "compression_ratio": 1.7022653721682848, "no_speech_prob": 7.76150500314543e-06}, {"id": 611, "seek": 206896, "start": 2090.48, "end": 2094.64, "text": " So now instead of following a fixed schedule, we can use tricks that have been developed", "tokens": [407, 586, 2602, 295, 3480, 257, 6806, 7567, 11, 321, 393, 764, 11733, 300, 362, 668, 4743], "temperature": 0.0, "avg_logprob": -0.18152787792148875, "compression_ratio": 1.7022653721682848, "no_speech_prob": 7.76150500314543e-06}, {"id": 612, "seek": 206896, "start": 2094.64, "end": 2096.36, "text": " for training neural networks, right?", "tokens": [337, 3097, 18161, 9590, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.18152787792148875, "compression_ratio": 1.7022653721682848, "no_speech_prob": 7.76150500314543e-06}, {"id": 613, "seek": 209636, "start": 2096.36, "end": 2099.52, "text": " Kind of learning rates, momentum, weight decay, and so on.", "tokens": [9242, 295, 2539, 6846, 11, 11244, 11, 3364, 21039, 11, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.14552938113422514, "compression_ratio": 1.7457142857142858, "no_speech_prob": 1.2213001355121378e-05}, {"id": 614, "seek": 209636, "start": 2099.52, "end": 2102.08, "text": " And we can apply them back to this kind of sampling case.", "tokens": [400, 321, 393, 3079, 552, 646, 281, 341, 733, 295, 21179, 1389, 13], "temperature": 0.0, "avg_logprob": -0.14552938113422514, "compression_ratio": 1.7457142857142858, "no_speech_prob": 1.2213001355121378e-05}, {"id": 615, "seek": 209636, "start": 2102.08, "end": 2103.84, "text": " And so it turns out this works.", "tokens": [400, 370, 309, 4523, 484, 341, 1985, 13], "temperature": 0.0, "avg_logprob": -0.14552938113422514, "compression_ratio": 1.7457142857142858, "no_speech_prob": 1.2213001355121378e-05}, {"id": 616, "seek": 209636, "start": 2103.84, "end": 2107.8, "text": " Okay, I've tried this for stable diffusion, need some tricks to get it working.", "tokens": [1033, 11, 286, 600, 3031, 341, 337, 8351, 25242, 11, 643, 512, 11733, 281, 483, 309, 1364, 13], "temperature": 0.0, "avg_logprob": -0.14552938113422514, "compression_ratio": 1.7457142857142858, "no_speech_prob": 1.2213001355121378e-05}, {"id": 617, "seek": 209636, "start": 2107.8, "end": 2111.6, "text": " But it's a slightly different way of thinking about sampling rather than relying on sort", "tokens": [583, 309, 311, 257, 4748, 819, 636, 295, 1953, 466, 21179, 2831, 813, 24140, 322, 1333], "temperature": 0.0, "avg_logprob": -0.14552938113422514, "compression_ratio": 1.7457142857142858, "no_speech_prob": 1.2213001355121378e-05}, {"id": 618, "seek": 209636, "start": 2111.6, "end": 2116.04, "text": " of a hard coded ODE solver that you figured out yourself, just saying, why don't we treat", "tokens": [295, 257, 1152, 34874, 422, 22296, 1404, 331, 300, 291, 8932, 484, 1803, 11, 445, 1566, 11, 983, 500, 380, 321, 2387], "temperature": 0.0, "avg_logprob": -0.14552938113422514, "compression_ratio": 1.7457142857142858, "no_speech_prob": 1.2213001355121378e-05}, {"id": 619, "seek": 209636, "start": 2116.04, "end": 2120.52, "text": " this like an optimization problem, where if the model predicts almost no noise, that's", "tokens": [341, 411, 364, 19618, 1154, 11, 689, 498, 264, 2316, 6069, 82, 1920, 572, 5658, 11, 300, 311], "temperature": 0.0, "avg_logprob": -0.14552938113422514, "compression_ratio": 1.7457142857142858, "no_speech_prob": 1.2213001355121378e-05}, {"id": 620, "seek": 209636, "start": 2120.52, "end": 2121.52, "text": " good, we're doing a good job.", "tokens": [665, 11, 321, 434, 884, 257, 665, 1691, 13], "temperature": 0.0, "avg_logprob": -0.14552938113422514, "compression_ratio": 1.7457142857142858, "no_speech_prob": 1.2213001355121378e-05}, {"id": 621, "seek": 209636, "start": 2121.52, "end": 2126.08, "text": " And if the model predicts lots of noise, then we can use that as a gradient and take a", "tokens": [400, 498, 264, 2316, 6069, 82, 3195, 295, 5658, 11, 550, 321, 393, 764, 300, 382, 257, 16235, 293, 747, 257], "temperature": 0.0, "avg_logprob": -0.14552938113422514, "compression_ratio": 1.7457142857142858, "no_speech_prob": 1.2213001355121378e-05}, {"id": 622, "seek": 212608, "start": 2126.08, "end": 2130.72, "text": " gradient update step according to our optimizer and try and sort of converge on a good image", "tokens": [16235, 5623, 1823, 4650, 281, 527, 5028, 6545, 293, 853, 293, 1333, 295, 41881, 322, 257, 665, 3256], "temperature": 0.0, "avg_logprob": -0.1373448771815146, "compression_ratio": 1.6695906432748537, "no_speech_prob": 3.620388815761544e-05}, {"id": 623, "seek": 212608, "start": 2130.72, "end": 2131.88, "text": " as our output.", "tokens": [382, 527, 5598, 13], "temperature": 0.0, "avg_logprob": -0.1373448771815146, "compression_ratio": 1.6695906432748537, "no_speech_prob": 3.620388815761544e-05}, {"id": 624, "seek": 212608, "start": 2131.88, "end": 2135.7999999999997, "text": " And this is, you know, you can stop early once your model prediction is sufficiently", "tokens": [400, 341, 307, 11, 291, 458, 11, 291, 393, 1590, 2440, 1564, 428, 2316, 17630, 307, 31868], "temperature": 0.0, "avg_logprob": -0.1373448771815146, "compression_ratio": 1.6695906432748537, "no_speech_prob": 3.620388815761544e-05}, {"id": 625, "seek": 212608, "start": 2135.7999999999997, "end": 2137.12, "text": " low for the amount of noise.", "tokens": [2295, 337, 264, 2372, 295, 5658, 13], "temperature": 0.0, "avg_logprob": -0.1373448771815146, "compression_ratio": 1.6695906432748537, "no_speech_prob": 3.620388815761544e-05}, {"id": 626, "seek": 212608, "start": 2137.12, "end": 2138.42, "text": " Okay, cool, I'm done.", "tokens": [1033, 11, 1627, 11, 286, 478, 1096, 13], "temperature": 0.0, "avg_logprob": -0.1373448771815146, "compression_ratio": 1.6695906432748537, "no_speech_prob": 3.620388815761544e-05}, {"id": 627, "seek": 212608, "start": 2138.42, "end": 2142.48, "text": " And so I found, you know, in 10, 15 steps, you can get some pretty good images out.", "tokens": [400, 370, 286, 1352, 11, 291, 458, 11, 294, 1266, 11, 2119, 4439, 11, 291, 393, 483, 512, 1238, 665, 5267, 484, 13], "temperature": 0.0, "avg_logprob": -0.1373448771815146, "compression_ratio": 1.6695906432748537, "no_speech_prob": 3.620388815761544e-05}, {"id": 628, "seek": 212608, "start": 2142.48, "end": 2145.64, "text": " Yeah, so that's a different way of viewing it.", "tokens": [865, 11, 370, 300, 311, 257, 819, 636, 295, 17480, 309, 13], "temperature": 0.0, "avg_logprob": -0.1373448771815146, "compression_ratio": 1.6695906432748537, "no_speech_prob": 3.620388815761544e-05}, {"id": 629, "seek": 212608, "start": 2145.64, "end": 2149.04, "text": " Not so popular at the moment, but maybe hopefully something we'll see.", "tokens": [1726, 370, 3743, 412, 264, 1623, 11, 457, 1310, 4696, 746, 321, 603, 536, 13], "temperature": 0.0, "avg_logprob": -0.1373448771815146, "compression_ratio": 1.6695906432748537, "no_speech_prob": 3.620388815761544e-05}, {"id": 630, "seek": 212608, "start": 2149.04, "end": 2150.6, "text": " Yeah, just a different framing.", "tokens": [865, 11, 445, 257, 819, 28971, 13], "temperature": 0.0, "avg_logprob": -0.1373448771815146, "compression_ratio": 1.6695906432748537, "no_speech_prob": 3.620388815761544e-05}, {"id": 631, "seek": 212608, "start": 2150.6, "end": 2154.24, "text": " And for me, at least that helps me think about what we're actually doing with these samplers.", "tokens": [400, 337, 385, 11, 412, 1935, 300, 3665, 385, 519, 466, 437, 321, 434, 767, 884, 365, 613, 3247, 564, 433, 13], "temperature": 0.0, "avg_logprob": -0.1373448771815146, "compression_ratio": 1.6695906432748537, "no_speech_prob": 3.620388815761544e-05}, {"id": 632, "seek": 215424, "start": 2154.24, "end": 2157.12, "text": " We're trying to find a point where the model predicts very little noise.", "tokens": [492, 434, 1382, 281, 915, 257, 935, 689, 264, 2316, 6069, 82, 588, 707, 5658, 13], "temperature": 0.0, "avg_logprob": -0.1612901624464831, "compression_ratio": 1.7791044776119402, "no_speech_prob": 1.9208260710001923e-05}, {"id": 633, "seek": 215424, "start": 2157.12, "end": 2162.2, "text": " So we're starting from a bad prediction, moving towards it getting better by looking at this", "tokens": [407, 321, 434, 2891, 490, 257, 1578, 17630, 11, 2684, 3030, 309, 1242, 1101, 538, 1237, 412, 341], "temperature": 0.0, "avg_logprob": -0.1612901624464831, "compression_ratio": 1.7791044776119402, "no_speech_prob": 1.9208260710001923e-05}, {"id": 634, "seek": 215424, "start": 2162.2, "end": 2167.52, "text": " estimated amount of noise as our sort of gradient and solving that, just kind of iteratively", "tokens": [14109, 2372, 295, 5658, 382, 527, 1333, 295, 16235, 293, 12606, 300, 11, 445, 733, 295, 17138, 19020], "temperature": 0.0, "avg_logprob": -0.1612901624464831, "compression_ratio": 1.7791044776119402, "no_speech_prob": 1.9208260710001923e-05}, {"id": 635, "seek": 215424, "start": 2167.52, "end": 2169.3599999999997, "text": " removing bits at a time.", "tokens": [12720, 9239, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.1612901624464831, "compression_ratio": 1.7791044776119402, "no_speech_prob": 1.9208260710001923e-05}, {"id": 636, "seek": 215424, "start": 2169.3599999999997, "end": 2173.56, "text": " So I hope that helps elucidate the different kinds of samplers and the goal of that whole", "tokens": [407, 286, 1454, 300, 3665, 806, 1311, 327, 473, 264, 819, 3685, 295, 3247, 564, 433, 293, 264, 3387, 295, 300, 1379], "temperature": 0.0, "avg_logprob": -0.1612901624464831, "compression_ratio": 1.7791044776119402, "no_speech_prob": 1.9208260710001923e-05}, {"id": 637, "seek": 215424, "start": 2173.56, "end": 2177.3999999999996, "text": " thing and also illustrate at least why we don't just do this in a single step, right?", "tokens": [551, 293, 611, 23221, 412, 1935, 983, 321, 500, 380, 445, 360, 341, 294, 257, 2167, 1823, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1612901624464831, "compression_ratio": 1.7791044776119402, "no_speech_prob": 1.9208260710001923e-05}, {"id": 638, "seek": 215424, "start": 2177.3999999999996, "end": 2179.2, "text": " Why we need some sort of iterative approach.", "tokens": [1545, 321, 643, 512, 1333, 295, 17138, 1166, 3109, 13], "temperature": 0.0, "avg_logprob": -0.1612901624464831, "compression_ratio": 1.7791044776119402, "no_speech_prob": 1.9208260710001923e-05}, {"id": 639, "seek": 215424, "start": 2179.2, "end": 2181.7999999999997, "text": " Otherwise, we'd end up with just very bad blurry predictions.", "tokens": [10328, 11, 321, 1116, 917, 493, 365, 445, 588, 1578, 37644, 21264, 13], "temperature": 0.0, "avg_logprob": -0.1612901624464831, "compression_ratio": 1.7791044776119402, "no_speech_prob": 1.9208260710001923e-05}, {"id": 640, "seek": 215424, "start": 2181.7999999999997, "end": 2183.3999999999996, "text": " All right, I hope that helps.", "tokens": [1057, 558, 11, 286, 1454, 300, 3665, 13], "temperature": 0.0, "avg_logprob": -0.1612901624464831, "compression_ratio": 1.7791044776119402, "no_speech_prob": 1.9208260710001923e-05}, {"id": 641, "seek": 218340, "start": 2183.4, "end": 2189.12, "text": " Now we're going to head back to the notebook to talk about our final trick of guidance.", "tokens": [823, 321, 434, 516, 281, 1378, 646, 281, 264, 21060, 281, 751, 466, 527, 2572, 4282, 295, 10056, 13], "temperature": 0.0, "avg_logprob": -0.1624135224715523, "compression_ratio": 1.6751824817518248, "no_speech_prob": 2.5059036488528363e-05}, {"id": 642, "seek": 218340, "start": 2189.12, "end": 2194.92, "text": " Okay, the final part of this notebook, guidance.", "tokens": [1033, 11, 264, 2572, 644, 295, 341, 21060, 11, 10056, 13], "temperature": 0.0, "avg_logprob": -0.1624135224715523, "compression_ratio": 1.6751824817518248, "no_speech_prob": 2.5059036488528363e-05}, {"id": 643, "seek": 218340, "start": 2194.92, "end": 2198.04, "text": " How do we add some extra control to this generation process?", "tokens": [1012, 360, 321, 909, 512, 2857, 1969, 281, 341, 5125, 1399, 30], "temperature": 0.0, "avg_logprob": -0.1624135224715523, "compression_ratio": 1.6751824817518248, "no_speech_prob": 2.5059036488528363e-05}, {"id": 644, "seek": 218340, "start": 2198.04, "end": 2201.84, "text": " Right, so we already have control via the text and we've seen how we can modify those", "tokens": [1779, 11, 370, 321, 1217, 362, 1969, 5766, 264, 2487, 293, 321, 600, 1612, 577, 321, 393, 16927, 729], "temperature": 0.0, "avg_logprob": -0.1624135224715523, "compression_ratio": 1.6751824817518248, "no_speech_prob": 2.5059036488528363e-05}, {"id": 645, "seek": 218340, "start": 2201.84, "end": 2202.84, "text": " embeddings.", "tokens": [12240, 29432, 13], "temperature": 0.0, "avg_logprob": -0.1624135224715523, "compression_ratio": 1.6751824817518248, "no_speech_prob": 2.5059036488528363e-05}, {"id": 646, "seek": 218340, "start": 2202.84, "end": 2206.92, "text": " We have some control via starting at a noisy version of an input image rather than pure", "tokens": [492, 362, 512, 1969, 5766, 2891, 412, 257, 24518, 3037, 295, 364, 4846, 3256, 2831, 813, 6075], "temperature": 0.0, "avg_logprob": -0.1624135224715523, "compression_ratio": 1.6751824817518248, "no_speech_prob": 2.5059036488528363e-05}, {"id": 647, "seek": 218340, "start": 2206.92, "end": 2209.28, "text": " noise to kind of control the structure.", "tokens": [5658, 281, 733, 295, 1969, 264, 3877, 13], "temperature": 0.0, "avg_logprob": -0.1624135224715523, "compression_ratio": 1.6751824817518248, "no_speech_prob": 2.5059036488528363e-05}, {"id": 648, "seek": 218340, "start": 2209.28, "end": 2210.28, "text": " But what if there's something else?", "tokens": [583, 437, 498, 456, 311, 746, 1646, 30], "temperature": 0.0, "avg_logprob": -0.1624135224715523, "compression_ratio": 1.6751824817518248, "no_speech_prob": 2.5059036488528363e-05}, {"id": 649, "seek": 221028, "start": 2210.28, "end": 2215.1600000000003, "text": " What if we'd like a particular style or to enforce that the model looks like some input", "tokens": [708, 498, 321, 1116, 411, 257, 1729, 3758, 420, 281, 24825, 300, 264, 2316, 1542, 411, 512, 4846], "temperature": 0.0, "avg_logprob": -0.14261888971134107, "compression_ratio": 1.6751054852320675, "no_speech_prob": 7.111142394933267e-07}, {"id": 650, "seek": 221028, "start": 2215.1600000000003, "end": 2218.6000000000004, "text": " image or maybe sticks to some color palette?", "tokens": [3256, 420, 1310, 12518, 281, 512, 2017, 15851, 30], "temperature": 0.0, "avg_logprob": -0.14261888971134107, "compression_ratio": 1.6751054852320675, "no_speech_prob": 7.111142394933267e-07}, {"id": 651, "seek": 221028, "start": 2218.6000000000004, "end": 2221.0400000000004, "text": " It would be nice to have some way to add this additional control.", "tokens": [467, 576, 312, 1481, 281, 362, 512, 636, 281, 909, 341, 4497, 1969, 13], "temperature": 0.0, "avg_logprob": -0.14261888971134107, "compression_ratio": 1.6751054852320675, "no_speech_prob": 7.111142394933267e-07}, {"id": 652, "seek": 221028, "start": 2221.0400000000004, "end": 2228.92, "text": " And so the way we do this is to look at some loss function on the decoded denoised predicted", "tokens": [400, 370, 264, 636, 321, 360, 341, 307, 281, 574, 412, 512, 4470, 2445, 322, 264, 979, 12340, 1441, 78, 2640, 19147], "temperature": 0.0, "avg_logprob": -0.14261888971134107, "compression_ratio": 1.6751054852320675, "no_speech_prob": 7.111142394933267e-07}, {"id": 653, "seek": 221028, "start": 2228.92, "end": 2229.92, "text": " image, right?", "tokens": [3256, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.14261888971134107, "compression_ratio": 1.6751054852320675, "no_speech_prob": 7.111142394933267e-07}, {"id": 654, "seek": 221028, "start": 2229.92, "end": 2236.7200000000003, "text": " The predicted denoise needs final output and use that loss to then update the noisy latency", "tokens": [440, 19147, 1441, 38800, 2203, 2572, 5598, 293, 764, 300, 4470, 281, 550, 5623, 264, 24518, 27043], "temperature": 0.0, "avg_logprob": -0.14261888971134107, "compression_ratio": 1.6751054852320675, "no_speech_prob": 7.111142394933267e-07}, {"id": 655, "seek": 223672, "start": 2236.72, "end": 2240.48, "text": " as we generate in a direction that tries to reduce that loss.", "tokens": [382, 321, 8460, 294, 257, 3513, 300, 9898, 281, 5407, 300, 4470, 13], "temperature": 0.0, "avg_logprob": -0.10190966099868586, "compression_ratio": 1.9153094462540716, "no_speech_prob": 2.057926167253754e-06}, {"id": 656, "seek": 223672, "start": 2240.48, "end": 2243.04, "text": " So for demo, we're going to make a very simple loss function.", "tokens": [407, 337, 10723, 11, 321, 434, 516, 281, 652, 257, 588, 2199, 4470, 2445, 13], "temperature": 0.0, "avg_logprob": -0.10190966099868586, "compression_ratio": 1.9153094462540716, "no_speech_prob": 2.057926167253754e-06}, {"id": 657, "seek": 223672, "start": 2243.04, "end": 2245.2799999999997, "text": " I would like the image to be quite blue.", "tokens": [286, 576, 411, 264, 3256, 281, 312, 1596, 3344, 13], "temperature": 0.0, "avg_logprob": -0.10190966099868586, "compression_ratio": 1.9153094462540716, "no_speech_prob": 2.057926167253754e-06}, {"id": 658, "seek": 223672, "start": 2245.2799999999997, "end": 2248.9599999999996, "text": " And to enforce that, my error is going to be the difference between the blue channel,", "tokens": [400, 281, 24825, 300, 11, 452, 6713, 307, 516, 281, 312, 264, 2649, 1296, 264, 3344, 2269, 11], "temperature": 0.0, "avg_logprob": -0.10190966099868586, "compression_ratio": 1.9153094462540716, "no_speech_prob": 2.057926167253754e-06}, {"id": 659, "seek": 223672, "start": 2248.9599999999996, "end": 2249.9599999999996, "text": " right?", "tokens": [558, 30], "temperature": 0.0, "avg_logprob": -0.10190966099868586, "compression_ratio": 1.9153094462540716, "no_speech_prob": 2.057926167253754e-06}, {"id": 660, "seek": 223672, "start": 2249.9599999999996, "end": 2250.9599999999996, "text": " Red, green, blue.", "tokens": [4477, 11, 3092, 11, 3344, 13], "temperature": 0.0, "avg_logprob": -0.10190966099868586, "compression_ratio": 1.9153094462540716, "no_speech_prob": 2.057926167253754e-06}, {"id": 661, "seek": 223672, "start": 2250.9599999999996, "end": 2254.16, "text": " Blue is the third channel of the color channels and the difference between the blue channel", "tokens": [8510, 307, 264, 2636, 2269, 295, 264, 2017, 9235, 293, 264, 2649, 1296, 264, 3344, 2269], "temperature": 0.0, "avg_logprob": -0.10190966099868586, "compression_ratio": 1.9153094462540716, "no_speech_prob": 2.057926167253754e-06}, {"id": 662, "seek": 223672, "start": 2254.16, "end": 2255.4399999999996, "text": " and 0.9.", "tokens": [293, 1958, 13, 24, 13], "temperature": 0.0, "avg_logprob": -0.10190966099868586, "compression_ratio": 1.9153094462540716, "no_speech_prob": 2.057926167253754e-06}, {"id": 663, "seek": 223672, "start": 2255.4399999999996, "end": 2259.6, "text": " So the closer all the blue values are to 0.9, the lower my error will be.", "tokens": [407, 264, 4966, 439, 264, 3344, 4190, 366, 281, 1958, 13, 24, 11, 264, 3126, 452, 6713, 486, 312, 13], "temperature": 0.0, "avg_logprob": -0.10190966099868586, "compression_ratio": 1.9153094462540716, "no_speech_prob": 2.057926167253754e-06}, {"id": 664, "seek": 223672, "start": 2259.6, "end": 2262.3399999999997, "text": " So that's going to be my kind of guidance loss.", "tokens": [407, 300, 311, 516, 281, 312, 452, 733, 295, 10056, 4470, 13], "temperature": 0.0, "avg_logprob": -0.10190966099868586, "compression_ratio": 1.9153094462540716, "no_speech_prob": 2.057926167253754e-06}, {"id": 665, "seek": 223672, "start": 2262.3399999999997, "end": 2265.7999999999997, "text": " And then during sampling here, what I'm going to do, everything's going to be the same as", "tokens": [400, 550, 1830, 21179, 510, 11, 437, 286, 478, 516, 281, 360, 11, 1203, 311, 516, 281, 312, 264, 912, 382], "temperature": 0.0, "avg_logprob": -0.10190966099868586, "compression_ratio": 1.9153094462540716, "no_speech_prob": 2.057926167253754e-06}, {"id": 666, "seek": 226580, "start": 2265.8, "end": 2267.48, "text": " before.", "tokens": [949, 13], "temperature": 0.0, "avg_logprob": -0.1306564240228562, "compression_ratio": 1.8120300751879699, "no_speech_prob": 5.9536632761592045e-06}, {"id": 667, "seek": 226580, "start": 2267.48, "end": 2272.44, "text": " But every few iterations, you could do it every iteration, but that's a little slow.", "tokens": [583, 633, 1326, 36540, 11, 291, 727, 360, 309, 633, 24784, 11, 457, 300, 311, 257, 707, 2964, 13], "temperature": 0.0, "avg_logprob": -0.1306564240228562, "compression_ratio": 1.8120300751879699, "no_speech_prob": 5.9536632761592045e-06}, {"id": 668, "seek": 226580, "start": 2272.44, "end": 2278.28, "text": " So here, every five iterations, I'm going to set requires grad equals true on the latency.", "tokens": [407, 510, 11, 633, 1732, 36540, 11, 286, 478, 516, 281, 992, 7029, 2771, 6915, 2074, 322, 264, 27043, 13], "temperature": 0.0, "avg_logprob": -0.1306564240228562, "compression_ratio": 1.8120300751879699, "no_speech_prob": 5.9536632761592045e-06}, {"id": 669, "seek": 226580, "start": 2278.28, "end": 2281.1200000000003, "text": " I'm then going to compute my predicted denoised version.", "tokens": [286, 478, 550, 516, 281, 14722, 452, 19147, 1441, 78, 2640, 3037, 13], "temperature": 0.0, "avg_logprob": -0.1306564240228562, "compression_ratio": 1.8120300751879699, "no_speech_prob": 5.9536632761592045e-06}, {"id": 670, "seek": 226580, "start": 2281.1200000000003, "end": 2284.32, "text": " I'm going to decode that into image space.", "tokens": [286, 478, 516, 281, 979, 1429, 300, 666, 3256, 1901, 13], "temperature": 0.0, "avg_logprob": -0.1306564240228562, "compression_ratio": 1.8120300751879699, "no_speech_prob": 5.9536632761592045e-06}, {"id": 671, "seek": 226580, "start": 2284.32, "end": 2288.04, "text": " And then I'm going to calculate my loss using my special blue loss and scale it with some", "tokens": [400, 550, 286, 478, 516, 281, 8873, 452, 4470, 1228, 452, 2121, 3344, 4470, 293, 4373, 309, 365, 512], "temperature": 0.0, "avg_logprob": -0.1306564240228562, "compression_ratio": 1.8120300751879699, "no_speech_prob": 5.9536632761592045e-06}, {"id": 672, "seek": 226580, "start": 2288.04, "end": 2290.28, "text": " scaling factor.", "tokens": [21589, 5952, 13], "temperature": 0.0, "avg_logprob": -0.1306564240228562, "compression_ratio": 1.8120300751879699, "no_speech_prob": 5.9536632761592045e-06}, {"id": 673, "seek": 226580, "start": 2290.28, "end": 2295.76, "text": " Then I'm going to use torch to find the gradient of this loss with respect to those latents,", "tokens": [1396, 286, 478, 516, 281, 764, 27822, 281, 915, 264, 16235, 295, 341, 4470, 365, 3104, 281, 729, 4465, 791, 11], "temperature": 0.0, "avg_logprob": -0.1306564240228562, "compression_ratio": 1.8120300751879699, "no_speech_prob": 5.9536632761592045e-06}, {"id": 674, "seek": 229576, "start": 2295.76, "end": 2296.76, "text": " those noisy latents.", "tokens": [729, 24518, 4465, 791, 13], "temperature": 0.0, "avg_logprob": -0.1559955188206264, "compression_ratio": 1.7802547770700636, "no_speech_prob": 1.1118125257780775e-05}, {"id": 675, "seek": 229576, "start": 2296.76, "end": 2298.6800000000003, "text": " And I'm going to modify them, right?", "tokens": [400, 286, 478, 516, 281, 16927, 552, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1559955188206264, "compression_ratio": 1.7802547770700636, "no_speech_prob": 1.1118125257780775e-05}, {"id": 676, "seek": 229576, "start": 2298.6800000000003, "end": 2300.1600000000003, "text": " And I want to reduce the loss.", "tokens": [400, 286, 528, 281, 5407, 264, 4470, 13], "temperature": 0.0, "avg_logprob": -0.1559955188206264, "compression_ratio": 1.7802547770700636, "no_speech_prob": 1.1118125257780775e-05}, {"id": 677, "seek": 229576, "start": 2300.1600000000003, "end": 2304.76, "text": " I'm going to subtract here this gradient multiplied by sigma squared because we're going to be", "tokens": [286, 478, 516, 281, 16390, 510, 341, 16235, 17207, 538, 12771, 8889, 570, 321, 434, 516, 281, 312], "temperature": 0.0, "avg_logprob": -0.1559955188206264, "compression_ratio": 1.7802547770700636, "no_speech_prob": 1.1118125257780775e-05}, {"id": 678, "seek": 229576, "start": 2304.76, "end": 2307.2400000000002, "text": " working at different noise levels.", "tokens": [1364, 412, 819, 5658, 4358, 13], "temperature": 0.0, "avg_logprob": -0.1559955188206264, "compression_ratio": 1.7802547770700636, "no_speech_prob": 1.1118125257780775e-05}, {"id": 679, "seek": 229576, "start": 2307.2400000000002, "end": 2311.1800000000003, "text": " And so if we run this, we should see hopefully it's going to do that same sort of sampling", "tokens": [400, 370, 498, 321, 1190, 341, 11, 321, 820, 536, 4696, 309, 311, 516, 281, 360, 300, 912, 1333, 295, 21179], "temperature": 0.0, "avg_logprob": -0.1559955188206264, "compression_ratio": 1.7802547770700636, "no_speech_prob": 1.1118125257780775e-05}, {"id": 680, "seek": 229576, "start": 2311.1800000000003, "end": 2312.82, "text": " process as before.", "tokens": [1399, 382, 949, 13], "temperature": 0.0, "avg_logprob": -0.1559955188206264, "compression_ratio": 1.7802547770700636, "no_speech_prob": 1.1118125257780775e-05}, {"id": 681, "seek": 229576, "start": 2312.82, "end": 2317.36, "text": " But we also are occasionally modifying our latency by looking at the gradient of the", "tokens": [583, 321, 611, 366, 16895, 42626, 527, 27043, 538, 1237, 412, 264, 16235, 295, 264], "temperature": 0.0, "avg_logprob": -0.1559955188206264, "compression_ratio": 1.7802547770700636, "no_speech_prob": 1.1118125257780775e-05}, {"id": 682, "seek": 229576, "start": 2317.36, "end": 2321.98, "text": " loss with respect to those latents and updating them in a direction that reduces that loss.", "tokens": [4470, 365, 3104, 281, 729, 4465, 791, 293, 25113, 552, 294, 257, 3513, 300, 18081, 300, 4470, 13], "temperature": 0.0, "avg_logprob": -0.1559955188206264, "compression_ratio": 1.7802547770700636, "no_speech_prob": 1.1118125257780775e-05}, {"id": 683, "seek": 229576, "start": 2321.98, "end": 2324.1200000000003, "text": " And sure enough, we get a very nice blue picture out.", "tokens": [400, 988, 1547, 11, 321, 483, 257, 588, 1481, 3344, 3036, 484, 13], "temperature": 0.0, "avg_logprob": -0.1559955188206264, "compression_ratio": 1.7802547770700636, "no_speech_prob": 1.1118125257780775e-05}, {"id": 684, "seek": 232412, "start": 2324.12, "end": 2331.92, "text": " And if I change the scale here down to something lower and run it, we'll see that scale is", "tokens": [400, 498, 286, 1319, 264, 4373, 510, 760, 281, 746, 3126, 293, 1190, 309, 11, 321, 603, 536, 300, 4373, 307], "temperature": 0.0, "avg_logprob": -0.14641725291376528, "compression_ratio": 1.6963562753036436, "no_speech_prob": 6.2390904531639535e-06}, {"id": 685, "seek": 232412, "start": 2331.92, "end": 2333.04, "text": " lower so the loss is lower.", "tokens": [3126, 370, 264, 4470, 307, 3126, 13], "temperature": 0.0, "avg_logprob": -0.14641725291376528, "compression_ratio": 1.6963562753036436, "no_speech_prob": 6.2390904531639535e-06}, {"id": 686, "seek": 232412, "start": 2333.04, "end": 2336.48, "text": " So our modifications to the latency are smaller.", "tokens": [407, 527, 26881, 281, 264, 27043, 366, 4356, 13], "temperature": 0.0, "avg_logprob": -0.14641725291376528, "compression_ratio": 1.6963562753036436, "no_speech_prob": 6.2390904531639535e-06}, {"id": 687, "seek": 232412, "start": 2336.48, "end": 2340.64, "text": " We'll see that we get out a much less blue image.", "tokens": [492, 603, 536, 300, 321, 483, 484, 257, 709, 1570, 3344, 3256, 13], "temperature": 0.0, "avg_logprob": -0.14641725291376528, "compression_ratio": 1.6963562753036436, "no_speech_prob": 6.2390904531639535e-06}, {"id": 688, "seek": 232412, "start": 2340.64, "end": 2341.64, "text": " There we go.", "tokens": [821, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.14641725291376528, "compression_ratio": 1.6963562753036436, "no_speech_prob": 6.2390904531639535e-06}, {"id": 689, "seek": 232412, "start": 2341.64, "end": 2345.44, "text": " So that's the default image, very red and dark because the prompt is just a picture", "tokens": [407, 300, 311, 264, 7576, 3256, 11, 588, 2182, 293, 2877, 570, 264, 12391, 307, 445, 257, 3036], "temperature": 0.0, "avg_logprob": -0.14641725291376528, "compression_ratio": 1.6963562753036436, "no_speech_prob": 6.2390904531639535e-06}, {"id": 690, "seek": 232412, "start": 2345.44, "end": 2346.44, "text": " of a campfire.", "tokens": [295, 257, 2255, 12037, 13], "temperature": 0.0, "avg_logprob": -0.14641725291376528, "compression_ratio": 1.6963562753036436, "no_speech_prob": 6.2390904531639535e-06}, {"id": 691, "seek": 232412, "start": 2346.44, "end": 2353.04, "text": " But as soon as we add our additional loss, our guidance, we're going to get out something", "tokens": [583, 382, 2321, 382, 321, 909, 527, 4497, 4470, 11, 527, 10056, 11, 321, 434, 516, 281, 483, 484, 746], "temperature": 0.0, "avg_logprob": -0.14641725291376528, "compression_ratio": 1.6963562753036436, "no_speech_prob": 6.2390904531639535e-06}, {"id": 692, "seek": 235304, "start": 2353.04, "end": 2357.08, "text": " that better matches that additional constraint that we've imposed.", "tokens": [300, 1101, 10676, 300, 4497, 25534, 300, 321, 600, 26491, 13], "temperature": 0.0, "avg_logprob": -0.1635447401341384, "compression_ratio": 1.7092198581560283, "no_speech_prob": 4.221549261274049e-06}, {"id": 693, "seek": 235304, "start": 2357.08, "end": 2358.08, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.1635447401341384, "compression_ratio": 1.7092198581560283, "no_speech_prob": 4.221549261274049e-06}, {"id": 694, "seek": 235304, "start": 2358.08, "end": 2361.56, "text": " So this is very useful, not just for making your images blue, but like I said, color palettes", "tokens": [407, 341, 307, 588, 4420, 11, 406, 445, 337, 1455, 428, 5267, 3344, 11, 457, 411, 286, 848, 11, 2017, 3984, 16049], "temperature": 0.0, "avg_logprob": -0.1635447401341384, "compression_ratio": 1.7092198581560283, "no_speech_prob": 4.221549261274049e-06}, {"id": 695, "seek": 235304, "start": 2361.56, "end": 2366.62, "text": " or using some classifier model to make it look like a specific class of image or using", "tokens": [420, 1228, 512, 1508, 9902, 2316, 281, 652, 309, 574, 411, 257, 2685, 1508, 295, 3256, 420, 1228], "temperature": 0.0, "avg_logprob": -0.1635447401341384, "compression_ratio": 1.7092198581560283, "no_speech_prob": 4.221549261274049e-06}, {"id": 696, "seek": 235304, "start": 2366.62, "end": 2369.8, "text": " a model like clip to again, associate it with some text.", "tokens": [257, 2316, 411, 7353, 281, 797, 11, 14644, 309, 365, 512, 2487, 13], "temperature": 0.0, "avg_logprob": -0.1635447401341384, "compression_ratio": 1.7092198581560283, "no_speech_prob": 4.221549261274049e-06}, {"id": 697, "seek": 235304, "start": 2369.8, "end": 2372.52, "text": " So lots and lots of different things you can do.", "tokens": [407, 3195, 293, 3195, 295, 819, 721, 291, 393, 360, 13], "temperature": 0.0, "avg_logprob": -0.1635447401341384, "compression_ratio": 1.7092198581560283, "no_speech_prob": 4.221549261274049e-06}, {"id": 698, "seek": 235304, "start": 2372.52, "end": 2373.88, "text": " Now a few things I should note.", "tokens": [823, 257, 1326, 721, 286, 820, 3637, 13], "temperature": 0.0, "avg_logprob": -0.1635447401341384, "compression_ratio": 1.7092198581560283, "no_speech_prob": 4.221549261274049e-06}, {"id": 699, "seek": 235304, "start": 2373.88, "end": 2379.12, "text": " One, we decoding the image back to image space, calculating a loss and then tracing back.", "tokens": [1485, 11, 321, 979, 8616, 264, 3256, 646, 281, 3256, 1901, 11, 28258, 257, 4470, 293, 550, 25262, 646, 13], "temperature": 0.0, "avg_logprob": -0.1635447401341384, "compression_ratio": 1.7092198581560283, "no_speech_prob": 4.221549261274049e-06}, {"id": 700, "seek": 237912, "start": 2379.12, "end": 2383.64, "text": " That's very computationally intensive compared to just working in latent space.", "tokens": [663, 311, 588, 24903, 379, 18957, 5347, 281, 445, 1364, 294, 48994, 1901, 13], "temperature": 0.0, "avg_logprob": -0.1068868637084961, "compression_ratio": 1.6864111498257839, "no_speech_prob": 1.5776547570567345e-06}, {"id": 701, "seek": 237912, "start": 2383.64, "end": 2388.16, "text": " And so we can do that only every fifth operation to reduce the time, but it's still as much", "tokens": [400, 370, 321, 393, 360, 300, 787, 633, 9266, 6916, 281, 5407, 264, 565, 11, 457, 309, 311, 920, 382, 709], "temperature": 0.0, "avg_logprob": -0.1068868637084961, "compression_ratio": 1.6864111498257839, "no_speech_prob": 1.5776547570567345e-06}, {"id": 702, "seek": 237912, "start": 2388.16, "end": 2391.52, "text": " slower than just your generic sampling.", "tokens": [14009, 813, 445, 428, 19577, 21179, 13], "temperature": 0.0, "avg_logprob": -0.1068868637084961, "compression_ratio": 1.6864111498257839, "no_speech_prob": 1.5776547570567345e-06}, {"id": 703, "seek": 237912, "start": 2391.52, "end": 2396.08, "text": " And then also, we're actually still cheating a little bit here because what we should do", "tokens": [400, 550, 611, 11, 321, 434, 767, 920, 18309, 257, 707, 857, 510, 570, 437, 321, 820, 360], "temperature": 0.0, "avg_logprob": -0.1068868637084961, "compression_ratio": 1.6864111498257839, "no_speech_prob": 1.5776547570567345e-06}, {"id": 704, "seek": 237912, "start": 2396.08, "end": 2401.24, "text": " is set requires grad equals true on the latents and then use those to make our noise prediction.", "tokens": [307, 992, 7029, 2771, 6915, 2074, 322, 264, 4465, 791, 293, 550, 764, 729, 281, 652, 527, 5658, 17630, 13], "temperature": 0.0, "avg_logprob": -0.1068868637084961, "compression_ratio": 1.6864111498257839, "no_speech_prob": 1.5776547570567345e-06}, {"id": 705, "seek": 237912, "start": 2401.24, "end": 2406.48, "text": " Use that to calculate the denoised version and decode that, calculate a loss and trace", "tokens": [8278, 300, 281, 8873, 264, 1441, 78, 2640, 3037, 293, 979, 1429, 300, 11, 8873, 257, 4470, 293, 13508], "temperature": 0.0, "avg_logprob": -0.1068868637084961, "compression_ratio": 1.6864111498257839, "no_speech_prob": 1.5776547570567345e-06}, {"id": 706, "seek": 240648, "start": 2406.48, "end": 2411.92, "text": " back all the way through the decoder and the process and the unit back to the latents.", "tokens": [646, 439, 264, 636, 807, 264, 979, 19866, 293, 264, 1399, 293, 264, 4985, 646, 281, 264, 4465, 791, 13], "temperature": 0.0, "avg_logprob": -0.14934364601417824, "compression_ratio": 1.6981707317073171, "no_speech_prob": 1.403287114953855e-05}, {"id": 707, "seek": 240648, "start": 2411.92, "end": 2415.48, "text": " The reason I'm not doing that is because that takes a lot of memory.", "tokens": [440, 1778, 286, 478, 406, 884, 300, 307, 570, 300, 2516, 257, 688, 295, 4675, 13], "temperature": 0.0, "avg_logprob": -0.14934364601417824, "compression_ratio": 1.6981707317073171, "no_speech_prob": 1.403287114953855e-05}, {"id": 708, "seek": 240648, "start": 2415.48, "end": 2419.88, "text": " So you'll see, for example, like the clip guided diffusion notebook from the hugging", "tokens": [407, 291, 603, 536, 11, 337, 1365, 11, 411, 264, 7353, 19663, 25242, 21060, 490, 264, 41706], "temperature": 0.0, "avg_logprob": -0.14934364601417824, "compression_ratio": 1.6981707317073171, "no_speech_prob": 1.403287114953855e-05}, {"id": 709, "seek": 240648, "start": 2419.88, "end": 2423.56, "text": " face examples, they do it that way, but they have to use tricks like gradient checkpointing", "tokens": [1851, 5110, 11, 436, 360, 309, 300, 636, 11, 457, 436, 362, 281, 764, 11733, 411, 16235, 42269, 278], "temperature": 0.0, "avg_logprob": -0.14934364601417824, "compression_ratio": 1.6981707317073171, "no_speech_prob": 1.403287114953855e-05}, {"id": 710, "seek": 240648, "start": 2423.56, "end": 2426.72, "text": " and so on to kind of keep the RAM usage under control.", "tokens": [293, 370, 322, 281, 733, 295, 1066, 264, 14561, 14924, 833, 1969, 13], "temperature": 0.0, "avg_logprob": -0.14934364601417824, "compression_ratio": 1.6981707317073171, "no_speech_prob": 1.403287114953855e-05}, {"id": 711, "seek": 240648, "start": 2426.72, "end": 2430.52, "text": " For simple losses, it works fine to do it this way because now we just tracing back", "tokens": [1171, 2199, 15352, 11, 309, 1985, 2489, 281, 360, 309, 341, 636, 570, 586, 321, 445, 25262, 646], "temperature": 0.0, "avg_logprob": -0.14934364601417824, "compression_ratio": 1.6981707317073171, "no_speech_prob": 1.403287114953855e-05}, {"id": 712, "seek": 240648, "start": 2430.52, "end": 2435.44, "text": " through denoise, latency is equal to latency minus sigma times this noise prediction.", "tokens": [807, 1441, 38800, 11, 27043, 307, 2681, 281, 27043, 3175, 12771, 1413, 341, 5658, 17630, 13], "temperature": 0.0, "avg_logprob": -0.14934364601417824, "compression_ratio": 1.6981707317073171, "no_speech_prob": 1.403287114953855e-05}, {"id": 713, "seek": 243544, "start": 2435.44, "end": 2438.36, "text": " So we don't have to trace any gradients back through the unit.", "tokens": [407, 321, 500, 380, 362, 281, 13508, 604, 2771, 2448, 646, 807, 264, 4985, 13], "temperature": 0.0, "avg_logprob": -0.12848392609627016, "compression_ratio": 1.6590909090909092, "no_speech_prob": 1.1473346603452228e-05}, {"id": 714, "seek": 243544, "start": 2438.36, "end": 2442.2400000000002, "text": " But if you wanted to get more accurate gradients, maybe it's not working as well as you'd hoped.", "tokens": [583, 498, 291, 1415, 281, 483, 544, 8559, 2771, 2448, 11, 1310, 309, 311, 406, 1364, 382, 731, 382, 291, 1116, 19737, 13], "temperature": 0.0, "avg_logprob": -0.12848392609627016, "compression_ratio": 1.6590909090909092, "no_speech_prob": 1.1473346603452228e-05}, {"id": 715, "seek": 243544, "start": 2442.2400000000002, "end": 2444.44, "text": " You can do it that other way that I described.", "tokens": [509, 393, 360, 309, 300, 661, 636, 300, 286, 7619, 13], "temperature": 0.0, "avg_logprob": -0.12848392609627016, "compression_ratio": 1.6590909090909092, "no_speech_prob": 1.1473346603452228e-05}, {"id": 716, "seek": 243544, "start": 2444.44, "end": 2449.12, "text": " But however you do it, very, very powerful technique, fun to be able to, again, inject", "tokens": [583, 4461, 291, 360, 309, 11, 588, 11, 588, 4005, 6532, 11, 1019, 281, 312, 1075, 281, 11, 797, 11, 10711], "temperature": 0.0, "avg_logprob": -0.12848392609627016, "compression_ratio": 1.6590909090909092, "no_speech_prob": 1.1473346603452228e-05}, {"id": 717, "seek": 243544, "start": 2449.12, "end": 2453.44, "text": " some additional control into this generation process by crafting a loss that expresses", "tokens": [512, 4497, 1969, 666, 341, 5125, 1399, 538, 29048, 257, 4470, 300, 39204], "temperature": 0.0, "avg_logprob": -0.12848392609627016, "compression_ratio": 1.6590909090909092, "no_speech_prob": 1.1473346603452228e-05}, {"id": 718, "seek": 243544, "start": 2453.44, "end": 2455.28, "text": " exactly what you'd like to see.", "tokens": [2293, 437, 291, 1116, 411, 281, 536, 13], "temperature": 0.0, "avg_logprob": -0.12848392609627016, "compression_ratio": 1.6590909090909092, "no_speech_prob": 1.1473346603452228e-05}, {"id": 719, "seek": 243544, "start": 2455.28, "end": 2458.2000000000003, "text": " All right, that's the end of the notebook for now.", "tokens": [1057, 558, 11, 300, 311, 264, 917, 295, 264, 21060, 337, 586, 13], "temperature": 0.0, "avg_logprob": -0.12848392609627016, "compression_ratio": 1.6590909090909092, "no_speech_prob": 1.1473346603452228e-05}, {"id": 720, "seek": 243544, "start": 2458.2000000000003, "end": 2460.6, "text": " If you have any questions, feel free to reach out to me.", "tokens": [759, 291, 362, 604, 1651, 11, 841, 1737, 281, 2524, 484, 281, 385, 13], "temperature": 0.0, "avg_logprob": -0.12848392609627016, "compression_ratio": 1.6590909090909092, "no_speech_prob": 1.1473346603452228e-05}, {"id": 721, "seek": 243544, "start": 2460.6, "end": 2463.96, "text": " I'll be in the forums and you can find me on Twitter and so on.", "tokens": [286, 603, 312, 294, 264, 26998, 293, 291, 393, 915, 385, 322, 5794, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.12848392609627016, "compression_ratio": 1.6590909090909092, "no_speech_prob": 1.1473346603452228e-05}, {"id": 722, "seek": 246396, "start": 2463.96, "end": 2466.48, "text": " But for now, enjoy and I can't wait to see what you make.", "tokens": [50364, 583, 337, 586, 11, 2103, 293, 286, 393, 380, 1699, 281, 536, 437, 291, 652, 13, 50490], "temperature": 0.0, "avg_logprob": -0.1280028318103991, "compression_ratio": 0.890625, "no_speech_prob": 2.2959855414228514e-05}], "language": "en"}