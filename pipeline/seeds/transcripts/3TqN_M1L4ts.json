{"text": " Welcome everybody to lesson 13, also known as lesson 6 of part 2, also known as lesson 1 of, never mind, the lesson in which we start talking about SWIFT. Before we do, I wanted to mention a couple of cool things during the week because lots of people were doing lots of cool things. And in part 2, I haven't done as much highlighting of these things, but I thought it would be nice to look at a couple of cool examples from this week. Big congrats to Rob G, who said that 14 months ago, he had never done any machine learning or deep learning or Python or maths beyond high school. And he just competed in one of the top academic challenges for computer vision machine learning and came first and second in the two or three challenge tracks he entered. So congrats, Rob. And I thought this is a great example of like, you know, the kind of interesting things you can do because if you do an academic challenge like this and if you do well like Rob, you actually get the opportunity, as he mentions here, to write a paper. And so if you've never done an academic paper before, this is a great way to get an introduction. You kind of have a certain publishing venue and you get a bit of an insight to the academic world. And I certainly found the same thing that Rob points out here, which is that when you actually submit a paper for the first time, you suddenly realize why so many academic papers aren't that useful because they focus on weird things. So anyway, I thought this was a great result. Congratulations to Rob. I also feel like I have a kind of a regular gig in promoting the amazing work Alina Harley does because she does so much great work, but this is yet another great piece of work that she's done. You'll remember her from the part one genomic stuff. And this is nice because it's an example of looking at text data for the purpose of looking at genomic information. And I just love this example. And Alina has got a great walkthrough that you can find describing, I mean, look how familiar this looks. It's the exact steps that we've just taken. And one of the things I love is she's actually using whatever this version of Fast AI is that we have in our exp folder, so it's not even Fast AI version one. It's the stuff that we've built from scratch. So it's nice to see that used in practice. Not just used, but not bad for a quick thrown together baseline. It hits 15th out of 357 teams on this leaderboard, which she describes as not a bad starting point. So not a bad starting point at all. So that's very cool. So rewind. Start of lesson eight, we said we're going to try and recreate Fast AI and much of PyTorch from the foundations. And 26 days ago, Sylvia and I started the same thing for Swift, except we actually had no ability to cheat. Because when we started, we really were starting with the foundations. There are no Swift data science modules, basically. But there is stuff, as you'll see, for creating tensors and random number generators. And you'll actually see we're even able to use Matplotlib, which might surprise you. We'll show you why and how. So this is what we're going to do over the next two lessons, is revisit this. Now obviously, we're not going to go through every step and excruciating detail, because as you'll see, the vast majority of it is, hey, this is almost identical to what we did in Python. So what we're still going to do is dig in to the bits that show us something interesting or different, of which there will be many. But in the end, we're going to get here, which is this is xresnet. Here's the res block from xresnet. And this, believe it or not, is the Swift version. Like you almost can't tell it's different. So we're going to end up in this beautiful situation. This is the res block. Here's the xresnet itself. It's so concise. It's so familiar. Hopefully, it's going to make you feel pretty comfortable that this is where we're going. And what about how we get all the data in there? We're going to have to deal with all the TensorFlow data APIs and learn all this stuff as well? Well, no. Here is the data approach that we're going to use, Datablocks API. So we're actually going to show you how to build the Datablocks API in Swift or TensorFlow. So three weeks ago, when we started digging into this, none of us knew if this would be possible. And I'm really thrilled to find that not only is it possible, but we end up with code that looks wonderfully familiar and has all the nice features that we've hopefully grown to love. So to get to here, there's a lot of people I want to thank. In particular, Chris Latner, who I still don't understand why he put his trust in us in this way. It seems like he has very strange judgment or something. But given that he did, we felt that we had to make sure we don't screw it up. So he's been fantastic. And then the whole Swift for TensorFlow team has actually made this project their number one priority. And this totally wouldn't have happened without everybody calling together. Also in terms of bad judgment, Sylvain has, obviously, we all know made the mistake of deciding to spend his time working with me on fast AI stuff. And a few weeks ago, I said, guess what? We're going to rebuild everything from scratch in Swift. And rather than running away screaming, he said, OK, when do we start? So thank you, Sylvain. And he has built nearly all of these notebooks in three weeks and learned Swift, which is not bad. Thanks, Alexis, for the value types discussion. You'll see next week super helpful. Pedro has built something which makes the Swift packaging system suck slightly less than it otherwise does, which is a lot. And also the whole San Francisco Fast AI Study Group, who's given us lots of valuable feedback over the last few weeks. So what does this mean for fast AI? There is a blog post we will link to about, which many of you, I'm sure, have read about why we're doing this crazy, or harebrained, Swift thing. But I particularly wanted to mention two things. The first is we actually don't really have a choice. We used to work with TensorFlow and Keras. And we had to stop because we couldn't build for you and with you the things that we wanted to build together. So luckily, PyTorch had just come out. And we actually first started using PyTorch in this course, I think it was two weeks after the first pre-release of PyTorch. So doing ridiculous things ridiculously early is definitely part of our DNA. We were lucky that happened. But then when we came to get to the next part one, because we started using PyTorch in an earlier part two, just like we're doing for Swift. Then we got to the next part one. And we thought, well, PyTorch is great. We want to use it all the time. But there's no way we can teach PyTorch to new practitioners. So we created a whole new library called Fast AI, because we had to. And now we've hit the same point we were with when we first switched to PyTorch, which is we can't build with you the stuff we want to build together. We're hitting the boundaries. We want to create nice, regularized RNNs, for example. We want to create batch norm layers, which skip computing the statistics from time to time, for example. We want to create highly flexible on GPU augmentation systems. And we can do all these things in PyTorch, but they're slow enough that we kind of tend to choose not to. So we're hitting the limits. So we actually need to do something else. So we need to start building the next thing. And we were very lucky, again, that Swift for TensorFlow appeared at just the right time. The second thing I'll mention is that not only will this not hurt Fast AI for PyTorch, but I'm confident it will make it better. I find that when I work with new programming languages in new environments, I learn new things. And I become a better developer. And we're already coming up with ideas that's going to help us to actually make Fast AI for Python better. You have a question, Rachel? Yes. Why has Fast AI chosen Swift over Julia? Well, because it's impractical deep learning for coders. And Julia is far too mature for such a thing. They would both be great choices. But a lot of it is just for me personally. I'm really interested in getting involved in something that has a huge amount of potential, but a little bit earlier so I can help guide it. I feel like I can be more part of it. I wanted to create something for our student community and our practitioner community where we could all help be part of that guiding and development process. So that's one reason. Second reason is it's not just about the language, but it's about who's using it. And Julia doesn't quite have that big customer that really makes sure that it goes from quite good to huge. Whereas Swift for TensorFlow has Google. And so Google needs it to work. Google needs it to be hugely successful. So I feel that that's really good. I also feel like the stuff that I've talked to Chris Latner about as to what's next for Swift goes beyond the stuff I've talked to the Julia core team about what they're doing. And so to be clear, I've sat down with many of the Julia founding team members. And I think they're amazing. And I hope I get to spend to have time hacking stuff with them too. But I feel like the place we're heading with Swift is another level again, as you'll see. But I definitely would not say to anybody, don't touch Julia. I've actually sent invites to the forum to a large number of the Julia developers at their request to say, why don't you build fast AI with us for Julia too? So I hope that happens. Perhaps another question is, why not Python? And for most people, the answer to the question of what do we do next is, given we're using Python, we fix the problems in certain ways. So for example, in the TensorFlow world, they're creating things like tf.function, which is kind of like allows them to connect up Python to the whole XLA environment, which you'll learn about. In PyTorch, they're using JIT to kind of turn Python into C++. Why aren't we doing this? Why aren't we just do the best with what we have? Because Python, to be clear, has a fantastic ecosystem. And we already all know it. We all know it. And it kind of seems crazy to throw that all away. I think you'll see the answer to this question in the next two weeks. But basically, it turns out, I'm pretty sure, that it's easier to pick the right language and compilation environment and write everything else on top of it from scratch than it is to write everything else on top of something that was not written for that in the first place, and then try and madly patch up the thing underneath to make it work. So things like the global interpreter lock, everything we're doing has to be massively parallel. But Python is written so that no two things can happen at the same time. So these are things that are just incredibly, incredibly hard to work around. Whereas with Swift, as you'll see, it's like the things we want is how it's designed. So why not Python? Because we think that we can't keep going with Python. We were not the first people to think the existing languages are not good enough. There's actually somebody else who had that thought a few years ago. And he's so OCD that he actually decided to write his own language. And he's so OCD that before that he wrote his own compiler, because they weren't good enough either. And so whilst it may be difficult to be around such an OCD person, we're all very thankful that these people exist, because they create the things we have. Oh, and here's one now. Chris, tell us about why you did this crazy thing. Thanks, Jeremy. I'm not the only crazy one, as you know. So let's talk about what Swift is. And then we'll kind of go very high level, and then we'll get down in the bits. So Swift is a lot of different things. It's a programming language. If you go ask the marketing people what it is, they say things like, Swift defines away large classes of errors in programs. It talks about how fast it is. And it's optimized to get the most out of modern hardware. I think another aspect of it is that Swift is really ambitious. And that is something that I think you'll see over the next two lessons, where Swift isn't just about solving a niche problem. It was not about, like, let's make iOS a little bit better. Swift was conceived as a full stack programming language that goes all the way from scripting down to low level systems programming. So you can write boot loaders in it. Now, this is crazy. I'm not aware of any other language that's actually set out from the start to do that. But that's one of the reasons why it becomes really interesting and really good for this domain, because you want very high level programming abstractions and a very nice and easy to use way of working with the language. But you also want the ability to go down to the metal in the rare cases you need to. So there's some random guy on the internet that wrote a blog post about this. I highly recommend that. One of the things that he says is that it's the interesting thing about Swift is that you get expressivity, flexibility, tight code, you get safety, ease of use, and speed. And it pulls it together in a unique way. That's a very insightful quote, Chris. I'd like to read more of that person's work. Yeah, he does some good things, too. He's a little bit crazy himself, too. So getting out of the marketing stuff, what is really Swift about? Swift is a really young language. This is something I don't think that people realize. Jeremy, you like to point out that Python is 25 years old. Many of the systems we're working on are 30 years old. I think Python might be 30. JavaScript might be 25. Java's about 25. I mean, for me, I've never spent time writing such a young language before. I also don't really remember. It's not quite true. I guess languages like JavaScript have developed quickly. But it's really unusual to have such a young language be so widely used. So there's definitely a feeling for me often of feeling like, oh, I'm using a language which lots of people use, yet somehow it still feels like not everything's fully baked yet. Yeah, well, it's kind of interesting because you have millions of programmers using it. But on the other hand, it can be changed. And so that's one of the things that in this project we'll talk about, being able to do language integrated Autodiff as an example of the kind of thing that you can only do if on a reasonable time scale you can innovate and make new language features, get them merged in, and evolve quickly. And that's one of the things that's made this whole project possible. Swift from its roots was designed for usability. And so it was designed for IDEs and user experience and code completion and inline errors and things like that. It has a refactoring engine, a bunch of stuff that modern languages have. The other aspect of Swift that I think is really important is, Swift is designed to be not weird. And so when you look at Swift code over the course of the lessons, it will look pretty familiar if you've used JavaScript, you've used lots of other languages, you've used Python. It will look pretty similar in a lot of ways. And that's by design. A lot of languages start out being trying to prove a point about something. And Swift was really designed to be, there's lots of good ideas in the world. Let's take them together and through a hardcore, intense design process, actually apply taste and try to come up with something that is well considered and fits well together. It reminds me of Perl, which Larry Wall, it's developed and described as a Swiss army chainsaw. Swift has got a similar feel of trying to get the bits of everything, the best bits, but it's much more curated and carefully designed than something like Perl. So it fits together. And so as we'll talk about, the whole team that built Swift originally was the team that built LLVM and Clang and things like this. And so many languages were designed, you come from the perspective of, well, create a programming language and then figure out how to make it fast later. A lot of Swift was built from the beginning to be something that compilers can use and humans too. So what is Swift for TensorFlow? So here, we're here to rethink how deep learning systems work from the ground up. And where a lot of the systems today are constrained by being, as much as you can get done in a Python library, here we're changing the language, we're changing the compiler, we're changing all the library stacks, we're changing TensorFlow, which we'll talk about. There's a tremendous amount of stuff involved in this. And one of the things that's really cool about this and one of the focuses is that we want to make an open, hackable platform where you can go and change anything you want in it. And you can experiment, research, explore, do lots of new kinds of things because that's where science comes from. Oh yeah, caveat, it's all broken. Fair? Yeah, nothing works, which is important. If you're going to be doing an impractical deep learning for coders, you wouldn't want to work with something that works. So yeah, Swift is not just very much not just for iOS programming. It's an incredibly powerful language. And all these people that are writing iOS applications can much more quickly become AI experts. Yes. Suddenly, they're working with the language which is super cool suddenly. And they help propel the ecosystem as well. So the things we'll be talking about across the lesson are the Swift for TensorFlow project has very big bricks that are part of it. So part of it is the tensor API. We'll touch on that a little bit today. Python integration is a really big deal. This is what gives you direct access to the entire ecosystem that you already know. Automatic differentiation, hugely important for ML. And Swift has a really cool industry-leading approach to it, stolen from Fortran. Jupiter, you'll see a lot of that today. So one of the things you'll notice is that a lot of what you see as a high-level programmer is very familiar. And that's by design. And so this is an example layer built in Swift. This is an example layer built in PyTorch. And it looks basically the same. There's differences. And we're working to reduce the difference even more. We'd love all those floats to be. Some of the differences are very nice, the fact that you don't have to pass self all the time. There are things where you're just like, oh, finally. So it's actually getting to the point where the boilerplate in the Python code, there's more boilerplate of like all this self.conv and self.pool and self, comma, and get rid of a lot of that. Yeah, so we're going to start very deep and very low level. So I just want to give you a high-level view of what things look like and where we'll end up. And so this is a layer. And so in Swift, this is implemented with a struct. We'll talk about those a little bit later. And it says, I'm defining my model. And it's a layer. We use layers just like you would normally. And so you have conv2d, maxpool, flatten. Things are callable in Swift. And we use call instead of underbar underbar call. You'll see a lot less underbars. And otherwise, it looks basically the same. You just compose these things together. One major difference is this differentiable thing. And you may be wondering, why do we have differentiable? Well, this is just telling the compiler that it should be able to differentiate this. And one of the cool things about compiler integration is that when you say, hey, compiler, give me the gradient of some function, in the happy path, when everything is good, it just does. And that's what you'd expect. But the unhappy path matters as well. I don't know if anybody here makes mistakes. I do. And so one of the cool things about having proper language support is you can get an error message that says, hey, that function can't be differentiated. That's useful. But you go farther. You say, oh, well, it can't be differentiated because integers and this int cast that you have can't be differentiated. And then it says, even farther, well, it's actually, this is several levels deep in function calls. And this is exactly the path. And this is exactly what went wrong. And it's really cool to get this in your workbook without even having to run something. And so this is the kind of, when you build things for IDEs and you build things for usability, you get really nice behavior that the compiler's helping you. So what is Swift for TensorFlow? And how does it stack up? And how does it relate to TensorFlow? So TensorFlow, one way to think about classic TensorFlow is that you have a tremendous amount of infrastructure. And TensorFlow has this really mature distribution, scale out, end-to-end training, inference with mobile devices, like all this cool stuff in the ecosystem. And then it has this thing called Python. I call it Python for TF. And Python for TF includes its autodiff system. And then it has a bunch of APIs like Keras and Estimator and other things built on top. And so what we've done is we've built a parallel stack where we're using a lot of the same infrastructure underneath the covers. And then we're building a new fast AI framework on top. Now, one of the things we'll talk about more later is that TensorFlow itself is undergoing radical change in the internals. And one example of this is the XLA compiler. And one of the things you'll find out is that TensorFlow is compilerizing itself as new accelerators and new technologies and lots of things are coming into play. And so TensorFlow is the internals are undergoing major changes, which is super exciting. So let's dive into some code. So first, one more question. Yeah. What's the roadmap relationship between Swift for TensorFlow and mainstream Swift? Will they eventually be the same thing? Yeah, that's a great question. So right now, the Swift for TensorFlow project, you can think of it as like a dev branch. Actually, it is literally a dev branch on the Swift project. And so what we do is we build things like automatic differentiation. We bake them. We get experience. And then we propose them and merge them back in the mainline Swift language. And a bunch of stuff has already been done that way. So the Python integration drove new language features in Swift. We propose them. We got them integrated into the mainline compiler. And now they're shipping. And iOS developers can use cool things because of Swift for TensorFlow. Yep. So let's dive in. Now, I thought I would start with some really basic things to just introduce the language, just so you understand you have some context of how things work. And then we'll get into some more interesting stuff. So this is a Jupyter notebook, just like you'd expect. This is Jeremy's window machine, which I will struggle to use because I have not used Windows for a long time. It will be fine. It has a Mac keyboard on it, so it's super weird. Scrolls the wrong direction, but it will be great. So a lot of what Swift does looks very familiar to Python. So here I have some integer 6. I have some math. I have print. It all works exactly the same as you'd expect in Python. One of the major differences in Swift is that you have this let and this var thing. And so let in Swift means constant. Var means variable. And so it's super easy. And as Jeremy, I think, loves to say in a workbook, just declare everything var. And then you don't have to worry about it. And then you can change it however much you want. But you can see if you declare a constant, like pi, because pi should not change, it makes sense to use let. If you try to change it, change a constant, you'll get this error message. And this error message says something like cell 5, line 1. One of the cool things about Jupyter is if you hit Shift L, you get line numbers in here. And here you can see it's referring to cell 5, line 1. And it says, hey, if you go to cell 3, line 2, up here, you can change this let into a var. And now your code will work. And so it's trying to help you out here. So that's something that you'll see. That's super awesome. And I'll just mention, for people watching that have a background in Swift programming, there's a tendency in that culture to kind of keep things closed, keep things constant, keep things private. And there's lots of good reasons for that. But when you're kind of getting into this deep learning mode, we generally represent flipping everything upside down, at least for the R&D and prototyping process. Because you want things to be infinitely hackable, the way Chris describes. You want them to be var. So you can change them. You want to be public so that you can see inside them. And so you'll actually find there's been recent PRs to Swift for TensorFlow itself, where we're starting to change APIs in this way to kind of make it so that people can look inside the covers and change things more. Yep. So you may notice that we're not using a lot of types here. But Swift is a typed language. Types are actually a very important way that the compiler can help you, because you can detect errors early. What Swift does is it has a thing called type inference. And so when you say var x equals 4, it knows that 4 is an int. And so it will default it to an int. Or if you say var x is equal to 1.0, it will say that, oh, that's a float or a double. And so types in Swift are written with a colon here. And so you can say, OK, well, even though this would normally be an integer, actually make it a float. Swift supports important things like emoji. Emoji is totally better than Greek letters, Jeremy. Yeah, so actually, Chris asked me last week. He goes, Jeremy, yes, Chris, what? He's like, how do you feel like emoji, about emoji in notebooks in Swift code? And I literally said to him, Chris, they're fine as long as it's the pile of poo emoji and it's next to a cow. And Chris goes, OK, it's a pile of poo emoji, but it's next to a dog. Is that OK? So like, yeah, OK. Yeah, we split the difference. So this is great power and great responsibility. If you name all of your variables pile of poo, then your code is never mind. Static and fun. Yes, yes, yes, descriptive, maybe. Yes. So let's talk about a few other things. So Python uses indentation. Swift uses curly braces. So I don't think that there's any, I'm not going to say one's better than the other. Curly braces are more commonly used, and so that's why Swift uses them. But they're basically the same thing. Just you'll figure it out. How do functions work? Well, in Python you use def, and Swift you use func. Because it's a function. And so what this is, this is defining a function, and you declare the inputs, the signature, x and y, and it returns a float, and you implement it with the thing you'd expect. When you call it, you pass keyword arguments. Swift is very opinionated about keyword arguments. And so if you say that this thing has x and y as arguments, you have to pass x and y. And so one of the funny things you'll see is you'll see this underbar thing going on right here. And this is saying that ignore, underbars ignore, just like Python, ignore the keyword argument. And so when you call it, you don't pass it. That's all that means. I've got to say, I love almost everything about Swift, except for three things. This is one of the three things. So this bit I find awkward, because these positional parameters, you can't even change the order of them. Even though they're positional, you can't use them in a different order. If you do have that underscore to say you don't have to name it, then you're not allowed to name it. Like, it's, I don't know. I find this bit nasty, but it's like almost everything else I love about Swift, so I just put up with it. This is also not my opinion of the right thing. But the argument for that is consistency of APIs is important, and it works fine. So tuples work pretty much the same way as they do in Python. You can use them to return multiple values, which is what we're doing here. So here we're turning two floats, and we're saying the first one is sine and the second one is cosine. You get destructuring. You get access to the tuples, all the nice things that you'd expect. One of the things that's different about Swift in Python, Swift has this thing called struct. And the way to think about it to begin with is it's just like a class in Python. Structs are super powerful, though. They are more efficient. There's a lot of good things about them. They don't require memory allocation. And we'll talk about why that matters. If you've got a C programming background, it's not much like that at all. So I would say think of it more like a Python class than a C struct. Yeah, exactly. And we'll show you a little bit about that. So here I have a complex F struct, and I've got a real and imaginary. I stick it in there. I can create one of these complex Fs. By specifying these things, I print it out, and I get it back. And in Python, there's this thing called data class. Yeah, so we've used data class. And it's interesting, when I threw in a data class here, it looks almost exactly the same. There's some extra boilerplate we need in the Python version. For example, we have to put the two things on different lines. We can't put them on the same line. But overall, like a lot of things between Swift and Python, ends up looking extremely comfortable. Yeah, OK. So now one of the bad things about this thing is you notice it's defined with floats. But complex numbers work with integers as well. And they work with doubles and lots of other things. So the way that Swift handles this is this thing called generics. And we'll talk more about the details of generics later. But basically, what we can do is we can say, let's define a complex type. And complex works with any type T and anything that has signed. And that's a number. And that's what the sign numeric thing says. And so now what I can do is I can define the struct. And I can use it down here with integers and with floating point. And it just figures out that T is enter, T is float, depending on what you use it with. And this is something that Python can't do, right? So with Python, if we remove the data class, we could certainly then remove the float. And then we could have it untyped. But we can't say in Python, these two have to be of the same type. But I don't know what type it is yet. So this ability to use generics lets us do some pretty powerful stuff right out of the box. Yeah, and we'll talk about some of the really cool things that you can do that make it super flexible and super, I mean, there's some really powerful things you can do. So we've got our complex here. One of the things you can see we're doing is that just like in Python, you have computed properties and stored properties. And here we have a computed property. We can define a getter just in line. And so it's just a stored property. But you provide a body. It's quite simple. Here's a computed property doing a weird thing. But here I just have a computed getter and a setter. And it's pretty straightforward. This is very similar to C Sharp. When you've got one of these, you can create some of these things. You can use the computed property. And it works just like a normal property. It's all very simple. Now, one of the cool things about Swift is that after you define a type, you can add methods to it. And this is something that might make you feel weird. But you can add methods on anybody's type. You can add it on your own, like we're doing here. Or you can add it on standard library types. Or you can add it on anybody's. I mean, it doesn't make us feel weird. It doesn't make me feel weird, Chris, because we do it in fast AI all the time. It's called monkey patching. But it's kind of something that we're told to avoid, because monkey patching has weird, dangerous, undefined, strange behavior and things combined in weird ways. So is this monkey patching? Should we be avoiding this in Swift? So this works in a very highly principled way that actually composes. And if you get a conflict, the compiler will ask you which one you want. This is not something you should feel bad about. Now, here I'm defining an add method. And so I'm using this to add two complex numbers. I feel bad about this, because there's a way to spell add. And yes, it's ADD, I guess. But I would rather spell it with plus. And so you can call a method on this, just like any other method. But if you want to add an operator, what you do is you just define func plus. And so instead of underbar, underbar, add, and all that jazz, you just find the operators you want and spell them the way you expect. And they're just functions like anything else. And this already is getting at something that would be really nice to be able to do in Python, would be able to say, oh, there's a whole bunch of different functions or operators with the same name. And they behave differently depending on what type I pass to them. Now, Python does have a standard library decorator you can use called single dispatch. We almost never use it, because every time we've tried to use it, it reacts in weird ways with everything else. But it's super nice that in Swift, as in many typed languages like this, it's very much designed for us to be able to say, oh, here's lots of different types. And they all have different meanings of what, for example, plus means. And it just works. And so here, we're implementing plus on complex in terms of plus of its elements. And so we're just adding together the real and imaginary. And these are different pluses. One of the mind-blowing things that's very different than Python is that you can define your own operators. And so some of us do lots of math, us not including me. But some of you all do a lot of math. Or you're working in a domain where you're doing quaternions or other cool things like that. And it's really nice to be able to use operators that are familiar to your domain. And so if you want to find a square root operator, then you can define a square root operator. And these just work. And now you can use a square root operator just like anything else. And this is one of the examples of Swift being hackable. There's a standard library that has a bunch of stuff built in and provided in the box. But the stuff the standard library does, you can do too. And so we try very hard to not make the standard library be privileged. So that's the super quick introduction to some random stuff in Swift. There's this guided tour here, which is really cool. It goes into other random stuff. And so if you want just a high level introduction like this, you can go there. But let's dive into some more relevant pieces. First, we have two questions. The first is, does Swift support any debugger within Jupyter similar to IPDB for Python to set breakpoints? So we don't have that yet. We have all the mechanics under the covers. So Jupyter is actually talking to a debugger. We just haven't wired it up yet. But that's one of the things we're interested in. OK, so that's probably coming. I can't promise that. But the guy in the front row that built it all is smiling. So maybe. And does Swift have something similar to Python's args and KW args? Yes. In fact, we'll talk about that when we get to the Python section. Oh, great. Thank you. So it works a little bit differently. So let's talk about Python now. Because we love Python, right? Well, Swift loves Python too. And as Jeremy healthily pointed out, Swift's data science ecosystem is kind of pathetic. So Python is really important. And beyond the data science ecosystem and Swift being pathetic, you all know Python. And so you all know important APIs that are pervasively available. And there's no reason for you to relearn new APIs. If you know the APIs in Python, just use them. So let's talk about how that works, because I think it might blow your mind a little bit. So to use Python in Swift, you first import Python. This is just a library in Swift called Python. And then you use Python to import whatever Python libraries you want. And there's no wrappers. There's no build steps. There's no wrapper generator thingies. You just literally import NumPy. We're here importing Matplotlib. What does this give you? This gives you NP. This gives you PLT, just like you would do in Python. And now you use it just like in Python. And so here I'm calling NP array. And except for the let, this is literally what you write in Python. So we can now use this to do some cool stuff. And so here, actually, we're going to use this load mnist function. And we'll see it a little bit later. It's in the 00 notebook. This is firing up TensorFlow and loading the mnist data set and plopping it into a tensor for us. Once that comes back, now we can use Matplotlib. And Matplotlib, we can use this magic accantation. This is kind of like the Matplotlib inline. We can then load, take the tensor the TensorFlow gave us, do all the NumPy stuff with a NumPy ndarray, reshape it, and plot it out. And this all just works the way you would normally use Matplotlib. And the cool thing about this is that Swift knows nothing about Matplotlib. It knows nothing about NumPy. It knows nothing about any of the particular libraries you're using. We literally just imported some random thing with strings. And Swift doesn't know anything about what you imported here. OK? Yeah, and so you may be wondering how this works, because we're just using Python right from Swift. And how does Swift know what Python is? Well, the way to think about this is that we think about Python as though it has no types. But really, Python has one type. And that type is Python object. And Python has an internal representation of objects. And you can use dot on them. And you can call them. And so the way it works in Swift is that you have one type called Python object. So here, when we use the type of, that's just like type in Python, says give me the type of np, or give me the type of np.array, or give me a type of the array that we got, or whatever, what it actually shows you is the type is Python object. And so Python values are Python object types in Swift. And when you dot them, when you call them, it's just using the interpreter. And so it just works in Swift, because you are literally using Python as dynamically as Python is designed to be used. And you can actually go and look. And one of the totally brain-twisting things that you can do is you can import Python into Swift, import FastAIs, Python libraries into Swift, and now go to town and just use all the standard FastAI cool stuff right from Swift. And it all just works. So thank you to Omar SF for trying this. It's a crazy thing to try. And it's interesting how, when you look at the resulting code, it's the same code that we'd like. At this point, you can't tell, other than some slightly different syntax here and there. But it's all the same. It's like Python with Latin. One thing I'll say about this is this is a super cool feature that you should totally use to fill in the gaps that need to be filled in while this ecosystem doesn't exist. But then as soon as possible, fill in the gap. Because I don't want us, as a Swift for TensorFlow community, to use this as such a crutch that we never write our own even better data frames library, because we're always using pandas. And we always use map plotlib. So we never create an even better plotting library. We should use the crutch to allow us to get all our work done end to end and then gradually replace it with bits that are more Swifty. I mean, one of the awesome things about Swift is that it supports really well-considered and beautiful APIs. And it was really designed for building APIs. But particularly when you're new to Swift, don't worry about that stuff. That's a problem for a different day. If you want to open a file, open a file the way you know how. Just use the Python file IO library. That's fine. Don't waste your brain cycles on that kind of stuff. So let's now talk about the idea of Jeremy's course here, which is building a machine learning library from scratch. And I think it's very quaint that Jeremy tried so hard to go down to the foundation and teach you how to build a matmul with a few loops and looping over an array and adding and multiplying floating point numbers. And I think that it's very nice how that he thinks that this is going down to the foundation. No, Chris. It's matmul from scratch. Yes. Well, so if that's matmul from scratch, then I think we should go down to the bedrock and actually talk about where float and arrays come from. But before we do that, I want to dive in and geek out just a little bit about compilers, because I think you need to understand, or it's useful to understand what LVM and Swift and things like this are. So Chris, what you're saying is that I cheated. I used array without implementing array. Exactly. I used float without implementing float. So let's fix that. OK, I'm sorry. So what is a compiler? Actually, we can do bonk. Touchscreens. Wow, crazy. OK, so what is a compiler anyways? And what is a language? So the way I think about this is that there's actually two unmovable obstacles in the universe. There's humans, which we're all kind of a pain to work with, right? Highly opinionated sometimes. And then there's computers. And they're really a pain, because they are super opinionated. And so what languages are is they're a point in between. And different languages are different points in between. And some are optimized for working with humans better. Some are optimized for working with computers better. But good languages work well with both. And so how do compilers work? Well, the way that it used to work in the bad old days is that if somebody wanted to build a compiler for x86, they would build a parser, the front end part of a compiler. They'd then build an optimizer to make the code go fast. And they'd build a code generator for the Intel PC or whatever it is that they want to target. Somebody else would come along and say, hey, I want a different compiler. I want a C++ compiler. And they would build a parser. They would build an optimizer. They'd build a back end for PowerPC. Somebody else would say, hey, APL is really cool. Let's build a parser for APL, an optimizer for APL, and then a back end for ARM. And if you've noticed the trend here, there's a lot of re-implementation of all the things going on. And so what compilers have done is they've created funnel points. LLVM is one of these funnel points where you can make it so that lots of different language people can implement lots of different front ends. And lots of different hardware people can implement what's called the back end or the code generator. And now they can share a tremendous amount of code. And now you can get all the permutations that you want out of this. And we should all thank Chris Latner's master's thesis supervisor for forcing him to write his damn thesis and getting him to actually write LLVM version 1 in 1 and 1 1 half weeks of DietKurk fueled coding activity. This is the way we get things done, is give people a ridiculous deadline. And it happens. Yeah, absolutely. And so the details of what LLVM is is not really important. But LLVM is what powers Julia and Rust and Swift and Clang that does C and C++. It's like a very common set of infrastructure that lots of things use these days. And if you're not very familiar with compilers and what optimizations are, there's a bunch of standard stuff that LLVM does, including constant folding, removing dead code, other things like the example I show here of taking an expression and pulling it out of a loop. This is something that in PyTorch, for example, if you do a multiply inside of a loop of two tensors, it's going to run that multiply every single time you go through the loop. But reasonable, more modern languages actually pull these things out for you. So this is a fascinating example, right? Because normally, if we're writing Python and you see, oh, I'm doing this work inside the loop redundantly, I can pull it out. That's something that I, as a programmer, have to figure out, right? And the fact that LLVM can do this for you and other optimization systems in GCC or whatever, it suddenly makes you realize that compilers are something different to at least what I thought they were. I thought compilers were things that got in your way and complained until you did things the way they expected you to do them and took forever to run code that I would have finished yesterday if it was Python. But actually, working with Swift, and particularly with Swift for TensorFlow, has made me realize that these optimizations actually allow us to write code in different ways and actually be much more lazy about how we write code. And this is, as you think about, a point in the space between the human and the computer. Yeah, so we're actually going to show you something really mind-blowing next week, where this is actually going to be used to basically make autodiff work. And it's like, it blew my mind when I found out about it. Yep. And so now, if you think about languages and different points in the space, there's a couple of different ways to look at this. One of the ways I think about it, ignoring the syntax pieces, which the syntax is always the first thing people talk about, is what are the atoms of the universe and how do they get composed and how do you build things out of them? And so if you look at Python, for example, if you boil everything down in Python, boil a dictionary down, it's a bunch of C functions. And then what the interpreter does, the Python interpreter does, is it decides what C functions to call in what order and on what data. And so the Python interpreter is slow. And so the Python program ends up being slow, even if the C pieces are fast. C++ is another language. C++ is a little bit different. C++, the atoms are built in things like integers and floats and arrays and pointers and things like that. And then a C++ programmer can use structs and classes to build complex numbers or strings or its variable size array thing out of in the library. It could do this because C++ is a fast language. It's also not a super well-considered language. But it's weird to me in C++ that array is hard-coded into the compiler, but string is a library feature. And why is that? That doesn't really make sense to me, because strings and arrays are so similar. What Swift is is it says, let's rethink all this. And so the primitives, the low-level atoms of the universe are now things that LLVM, the compiler, knows about. And then all the abstractions you build, including floats, arrays, dictionaries, of course, the high-level stuff too, like layers, those are all defined in the library. And so a float is not a magic built-in thing. Swift doesn't like magic built-in things. Swift likes things that are hackable. And if something is interesting for a library developer to do, maybe you want to do it in your workbook. And so having an open ecosystem is very powerful. And so if you actually go look at the library that implements float, float is just a struct, just like the complex thing we were talking about before. And the middle, the inside of it is this built-in weird thing. That's an LLVM thing. And plus, on floats, isn't a magic thing that the compiler knows about. Plus is just an operator, just like we were talking about before when we defined square root. Just this one happens to be named plus or plus equals. And it's implemented with LLVM magic. So we're allowed to use float now, Chris? Well, let's go look at the implementation. And so if you actually go look at this, this is the standard library that comes with Swift. Here you can see it implements infinity. It implements not a number. It implements add, pi. Like all the things that are in float is just a gigantic pile of Swift code. And the cool thing about this is that this means that you can implement low-level stuff like this, too, right in the workbook. And to be clear, we don't expect you to implement float yourself. But the fact that you can is actually important for data scientists. And so let me explain. When I was starting out, and I did a lot of stuff with Delphi, I guess 20-something years ago, which is like a very fast Pascal system, and I was writing a lot of numeric code, and I very often hit this floor where things weren't working the way I wanted them to, so I had to use assembler, which nobody should ever have to do. But that was the floor I hit. I had work that needed to be done, and I couldn't do it in Delphi, so I had to use assembler. But at least I could. And over the last 25 years, we've gradually filled in more and more of the things that numeric programmers use. But what I'm finding is happening now is as numeric programming is becoming differentiable programming, I'm hitting the bottom of the stack again, and there aren't things that I want to do. Or there are things I want to do a little bit differently. So I feel like we're at this point in history, and we might be for the next five or 10 years or more, where data scientists don't need to know how to write assembler, but they do need a system where they can go under the surface and actually change things that people don't normally change. Yeah. Well, and again, to me, I think the goal here is an infinitely hackable platform. So in the box are all the nice things you'd expect. You don't have to write matmols. You don't have to write floats. But if you want to go change it and do your own, you can. Or if you want to take somebody else's, you can drop it in your workbook. You don't have to recompile the whole stack. Now, we talked about structure a little bit like classes in Python. The major difference is that these are actually fast. So here's our square add that multiplies two things together and adds it. If this was Python, these would be allocating objects. This would be doing lots of crazy stuff. This thing I'm showing you now is called the Compiler Explorer. And you thought you came to learn machine learning? Here's some assembly language, which we're going to get away from as soon as possible. But the point is you're writing a reasonable Swift code. And you're getting literally the same code you would get from Clang if you wrote C++. Even though float is implemented in the standard library, there's no tricks here. You're getting the lowest level optimized fast code that's turning to multiply instruction and add instruction on Intel. And I'll go away from this very quickly, because we're not here to learn about Intel assembly. Now, the thing about float, again, is not really about something you should want to do. But you can poke at it if you want. You can see what's inside of it. One of the things we've at least so far chosen not to do is we don't export the built-in to workbooks. And so you have to write a standalone file to use it. We could change that if we wanted to. But one of the really powerful things about this is because these types are defined in the library, they're not magic. Well, now all the other things we talked about before work with these. And so we can add a method to int or to bool. So here we add a little isOdd method that's just saying, is the low bit set or clear? That's cool. That's fine. This is not monkey patching. This is just super low level int is a struct. Sure, you can add a method to it, no problem. We can add a symbol that turns a boolean into an emoji, because emojis are cool. And so now you can just use these things. And we can say, hey, four, are you odd? A four, are you odd? Turn yourself into a symbol. And we get true, false. We get thumbs up, thumbs down. And it all just kind of works. Yeah, I mean, this is particularly important for all of us at this stage, because as we discussed, Swift hasn't been widely used for numeric programming. So a lot of stuff doesn't exist. And so when I started playing with it in December, and I realized, oh, I'm missing stuff. So yeah, so I created this library called BaseMath, where I literally was defining things on float that I needed to exist. And not only did they then exist, but they ran at C speed. And then from then on, I had all the math stuff that I wanted in the language. And so if you're hacking around over the coming months, and you find things not quite the way you want, you can and should change it. And it's really, really, really common in Swift code to add extensions to basic types. It's not at all unusual or weird. It's just part of how you write Swift code. And you can make it feel the way you want. So we're not going to dive in too deep. But there's lots of interesting things in the system. So if you say, well, how does and-and work? And-and only evaluates one side of itself if the other side is true. Well, that's implemented in our library. It's three lines of code. You can go dive in. There's a couple of links. Let's talk about array, because we need arrays to implement MatMul. Before we talk about how array works, let's look at how you use it as a Swift programmer. Arrays in Swift are super simple. You just define them with square brackets like you'd expect. Swift is type-inferred. And so what you'll end up seeing is there's two different syntaxes for the types. There's int and square brackets, which is the way you'd normally write it if it's not inferred. But that is actually just sugar for this array. And if you print out the types of these things, you'll see that they're all just array event, array event, array event. Well, arrays can be iterated over. So you can have a for loop. It just goes over all the elements of the array. Pretty simple. You can slice them. Swift has two ways to slice based on whether you want the endpoint or not. And if you want an inclusive range, which includes that endpoint, you use dot, dot, dot. In an exclusive range, you use dot, dot, lesson. And the lesson says, but not the last one. Swift supports functional programming things. And so here what we do is we use this functional map algorithm. And it's using a closure. Closures are the same thing as lambdas in Python with slightly nicer syntax. And so here what we're doing is we're saying, give me an array, but run a function that takes all the elements and adds 10 to them. And it's very simple. You can just do this right in line. And it's nice and fast. And so here we get our array where everything has 10 added to it. It has filter and reduce as well. So filter just takes a predicate where you say, filter and only include the things that are odd. And we just added is odd. And now we get an array that just has odd things in it. It's super easy. And one of the other things you'll notice is that Swift has lots of nice syntactic shortcuts. And so instead of naming our argument like we did in map, we just use the default name, which is $0. So the top one is equivalent to lambda arg colon arg plus 10. And so then we can get rid of both the lambda and the arg colon by sticking it in curly brackets and just using $0 to refer to the first argument. Another super common thing is that often these closures end up being the last argument to a function. If they're the last argument of function, you can just put them outside the parentheses. And if that's the only thing in the parentheses, you can just get rid of the parentheses as well. And so you get these really nice things that are kind of like list comprehensions where you can say, map and multiply all the elements by 3 and then filter them and only keep the odd ones. And you get very nice, fluent things. Or here's a map where I'm saying, decide whether it's odd and then turn it into a symbol. And I get very nice, simple. Yeah, so just come back and have a look at this map filter again at the end of the lesson because this is how you do list comprehensions in Swift. You don't need special syntax for it because the stuff that's already built in very elegantly gives us list comprehensions for free. Yep, and all these things are just library features. Reduce is a reduction. So you give it the first element. And then in this case, we're just adding all the elements of the array to 0. And plus is a function. We saw it already. And so this just uses the plus function to do a reduction. It's super simple. Now, we're talking about array. Array is a type. And that means you can do an extension on a type. So you can add methods to arrays. That's super easy. So here we defined a double elements method that returns a new array. And we just map. So double elements just multiplies all the elements by 2. And like the self thing we don't actually need. Oh, thank you. Right, Jeremy? Too much self in Python. Yeah. And now one of the other things you may wonder about is, why do we need this where element is numeric? And what this is talking about is it's saying, well, we're taking all the elements out of this thing and multiplying it by 2. This is helping us catch errors. So if I have an array of Booleans, I get an error message that says, hey, I can't double all the elements of a Boolean array because bool is not a number. And so in Python, what would end up happening is if you accidentally pass the wrong thing in, you would pass in your bools. And then they'd get multiplied by 2. And then sometime in a far distant API call, somewhere later you find out you have 2s in your Booleans. Like what just happened? And so Swift helps catch these errors early. And talking of what just happened, this is the point where if you've used a few languages before, you're thinking, oh, Swift is actually pretty different in a pretty interesting way. Because look what we've just done. We've just said, here is some functionality which applies to some type which has some particular properties to it. So we've defined functionality in a way that's going to be looked up in this really nuanced and interesting way. And so we're not going to go into the details now, but just take a look at this after the lesson and think, wow, what's going on here? Because this is something really interesting. And again, one of the cool things about this is because it's all built in the library, it's all open to you. And you can do cool things like add methods or do other things. So I'm not going to go into the full details of array. Array is implemented right here in array.swift. This is the standard library. Array is a struct. It has a buffer inside of it, the elements. You can go through and you can see all the different gory details of things that go into array. And instead of coding this in workbook, I think that we will just consider it that we implemented this. Is that okay with you, Jeremy? Absolutely. Okay, so now we can use arrays. Okay, so let's move on to Matmul. Okay, so what I'm going to suggest is we might be a good time to take a break. So let's take a six minute break and we'll see you back here at 6.47. Now that we've invented Swift and float and array, we will actually implement matrix multiplication. So we'll see you back here at 7.47. Okay, any questions before we keep going, Rachel? Yes, we have two questions. The first is that in keyword is very unintuitive for arg and arg plus 10. In closures, yeah. Oh, can we point at that? So yeah, the in keyword. Yeah. Up here, in. Yep. So that's the question, why is it so weird? Why is arg in arg plus 10? Yeah, so we carefully considered the name of this keyword and we didn't have anything better to use, so we got stuck with this. In Python, I guess that would be a colon. Yeah, so there's no good answer. Nobody knows what it means. There's historical reasons, but they're not good reasons. So we just do it and it's. So the answer is because Chris says so. Yeah. Thanks for your honesty. Why do we use colon? Well, that's what Python says. And the second question, can Swift LLVM implement instructions to execute on the GPU? Would this be a good idea? Yeah, this is a really exciting direction. This is one of the things we're investing a lot in TensorFlow and the infrastructure pieces, and we'll be talking about that a little bit next time. Yeah, but I mean, the short answer is that LLVM has a number of backends. Yes. And one of the backends it has is a PTX backend, which is the lower level Nvidia kind of instruction set. And so like right now you can compile stuff with LLVM and have it run as CUDA kernels. Yep. So the answer is yes, absolutely. Yeah, and in fact, like every pixel on the iPhone goes through LLVM, not through Swift in a workbook. That's not bad. Yeah, so LLVM is used for lots of cool stuff and using it for more cool stuff is fun. So now that we have our bedrock of floats and arrays, let's build something a little bit higher level. Let's talk about matrix multiplication. So here what we're gonna do is we're actually gonna load up a few tensors, and here we're playing by the same rules that we played with in Python where we could use the random number generation and things like this, but we're not gonna use the matrix multiplication operator quite yet. So there's lots of ways, there we go, there's lots of ways to create tensors in Swift for TensorFlow, it has this tensor type, this little float thing we wanna go away eventually, we hope, but right now you say tensor of float to say that I want a tensor of floats. Use a shape, you can get zeros, ones, you can repeat a thing, you can get random, there's lots of different things you can play with. I highly recommend you type tab in Jupyter and it will tell you all the things that you can do with completion. So let's build a matrix multiply. So here what we're doing is we're doing something kind of similar to what Jeremy did in the Python version of this, but here we're starting a little bit lower level. We only have one dimensional arrays, that's how the Swift array works. And so what we need to do is we need to pass in two arrays of floats and then we're doing a two dimensional matrix multiplication so we need to know the number of rows and number of columns for A and B. So that's a definition of a tuple parameter, Chris? Yep. So they're two ints. Yep, so A dims is two ints and B dims is two ints. And so what we do is we create an array full of zeros and then we write the same three loops you saw before and because we have a one dimensional array, we have to do manual arithmetic to get into it. Now, one of the things that you'll see is like, if you actually try this out and you run this, I didn't actually run the cell, this is why you say don't do things and I don't listen and then I make a fool out of myself. Okay, so then you run this, you get the tensors here, we're just using the MNIST data set because it's fun to use. Now we can run this and we can time it and one of the major differences you'll see is we just wrote three loops and it takes.132 milliseconds. The Python version of this took 835 milliseconds. Just have a look. So Chris, I just wanted to compare. So, I mean the first thing I want to compare is to look at the code, so that's the Swift code and in Python, there's the Python code. So it's basically exactly the same code, as you said. Here you have two D arrays. Which we'll get to. And so, yeah, we kind of found with the Python version, it took about a second to do a five by 784 matrix multiply with a 784 by 10. So we kind of did the math and said like, we can't use this because it's just not fast enough. But something very different is going on here because this is about 9,000 times faster. Yeah, so this is not super fast, but this is pretty reasonable. And this is what you get from roughly C, right? And that's because again, we talked about, it's primitives that are principled, that are fast. And when you build things out of principled fast primitives, you get new things that are principled and fast. Okay, so this is no big deal for you, but for a Python programmer, this is like, this is a whole mind shift change. Because at this point, the fact that you can write this and have it run this fast means like, I can now write anything I can think of doing with numbers in the most obvious way possible and have it work pretty damn well. So this is kind of like a superpower that Python programmers don't have. Well, and if you think about it, so one way to think about it for TensorFlow is we're trying to subtract C and C++ out of the picture, right? Because if you think about working with Python, a lot of it ends up being, if you care about performance, working around the gill. And how do you do that? You go on to do C stuff or working around writing, oh, I need a new kind of data structure. What do I do? I can write a bunch of stuff in C because writing in Python wouldn't be fast enough. And that's problematic for lots of reasons, one of which is it's just really hard to do things in workbooks. But here, we're implementing basic stuff in workbooks and it goes fast. Yeah, and I can ship something that's like a compiled program that I just ship it. I don't have to figure out how to put the C library over here and compile it and put it together with this header. So Jeremy, what is this built-in called time? Is that built in a language? No, well, so Chris. Can you show me what that is? Absolutely, so we're not using percent time because percent time is a magic. And under your new rules, we shouldn't be allowed to use things that are magic. We should write them ourselves. So time is written ourselves and it's actually written in this notebook called zero zero. So yeah, so when we started out, we started out with a blank slate. And so we had to start out with things like, how do I time a cell, right? So the answer is, this is the nice thing about working with Swift is we can build everything from scratch, right? So here's the timing section, right? And the details don't matter, but basically you can see, we can grab some stuff from the Swift standard library, for example, a function that tells the time, and we can run some function and see how long it takes. And the nice thing is that we can end up with some very neat syntax, right? Because the thing that we pass in, the function we pass in is a closure, right? And this is how you say, pass in some closure that takes no arguments and returns nothing at all. And so for example, we can give it a default value, which means if we wanna time something and just run it once, we can just do that, right? So we can create syntax, you know, we can create APIs that are really nice and elegant and simple to use. And so this version of time actually is both time it and time together, right? So if you give it repeating, it'll do that, right? And actually this zero zero notebook is worth flicking through because it's the only notebook where there's no tensors in it, there's no tensor flow in it, there's no tf.data in it. So if you just wanna see like just Swift, right? This is a good way to learn to Swift. So for example, you can see how we built this thing where you can go ls.shell. So we've actually added something to string that will run a task, right? And you can kind of see how to write these things in just nice neat little concise packages. And now we can export this. And now anytime you wanna run a process through the shell, you can just go blah.shell. You can see how to download a file. And one of the nice things here is that you'll see that download a file, we've actually using this path library that looks almost identical to pathlib. And that's because there's a wonderful programmer, wonderful person called Max Howell. This is Max's username on GitHub. And I mentioned he's actually an open source programmer who entirely relies on sponsorship for his work. So if you like Max's work, which I certainly do, you should go to his Patreon and give him a few dollars. So thanks to Max, we have something that's really just like pathlib, but actually even almost a bit better. There's something that's almost exactly like requests. It's called Just, right? So in the Swift ecosystem, thanks to the fact that you've got all these millions of iOS programmers that's been, who have been using this language for five years to build cool stuff, there's actually a nice non-data science ecosystem. And while we're talking about a non-data science Python similar packages, is there any web framework similar to Flask or Django for Swift? Yeah, absolutely. Yeah, actually the Swift on the server community is a really vibrant community. And there's the equivalent of Ruby on Rails and a bunch of these different frameworks have Swift versions. And that's actually one of the biggest non-iOS communities that exist. The one I've seen a lot of love for is Vapor. Yeah, Vapor, IBM is investing. They have a framework called Couture and they're putting a lot of time and thought into that. Apple has a low level thing that's like NETI, the NETI library on Java. And there's a Swift version of that called Swift Neo. So there's a bunch of these fairly infrastructural things that exist that are part of the Swift ecosystem. And Swift is really great on servers too. Okay, so here you can see how we can download a file. It's all pretty straightforward. You've got try catch blocks a lot like we're used to, but they're kind of do try catch. The details are a bit different. So in this case, we wanna download Mlist and load it up. One thing to be aware of is that things, and we'll talk a lot more about this next week, but things can get a little bit complicated when, like for example, for Mlist, we've got a file containing labels and we've got a file containing images. They're different types. The labels are ints, the images are floats. So we kind of want two functions, one that returns a tensor of floats, one that returns a tensor of images. That's duplicate code. I hate duplicate code, right? So here's a version where we actually tell it, oh, you could load up different types of Mlist data, and it's gonna return a tensor of that type. Okay, and unfortunately, if I try to use this, I get an error, right? And I really wanted to show you this error because for the first week as a Swift programmer, I kind of, I've never felt so stupid. Like I felt like everything I wanted to do, Swift hated me, and it told me these things like cannot invoke map with a, what the hell is all this? And I just gotta say, that's totally fine, right? Because the Swift type system is very new to somebody like me and probably most of the people watching this. The messages are helpful for people who understand it pretty well, and it's totally normal to think, for a week or two, Swift hates me. To be stubbing your toe on every new thing and feeling like you'll never. And particularly this generic stuff, you know? And I would say, look, a couple of suggestions. The first is just write the two separate versions so that you don't get frustrated, and then come back and try again a few times yourself. Ask on the forum. Stack overflow's great. Yeah, but quite often, quite often the kinds of errors you get from the site system are, sometimes they're even like a long way away from really where the problem was. It can be quite difficult because it's a powerful type system for it to really know where the problem is. Now, in this case, the issue basically is that we are trying to call, we're trying to initialize either floats or bytes. And so it basically needs to know that the type we're creating can initialize either floats or bytes. So as you'll learn next week, you could do that by creating something called a protocol. You do it by saying that these things conform to that protocol. You then use that protocol. And so now this version of load MNIST works totally fine. So this is a nice little package that you can look through. The last piece that we had to build in 0.0 was the thing that makes slash slash export works. So kind of delightful writing the thing that makes slash slash export work by typing slash slash export. One of the things that I needed to do here was to check whether something matches a regular expression or not. I found it extremely weird that the way to do that in Swift is called range of options regular expression. So I created something called find in string. So now I never have to worry about the weird and clunky Swift syntax. Most of the time I'm just looking to see whether something does exist or not. So I just created something called has match that checks whether something exists or not. So I make Swift work the way I want it to. And to give you a sense of like, when I say clunky APIs, that in particular, you'll see here we're using Max's beautiful path library. Before we realized that the path library does everything we wanted, we use the thing that Apple provides, which is called the foundation library. And that comes with Swift. These two lines- It also works great on Linux. It's a standard thing that's available. Yeah, so those two lines of code in Apple's foundation library looks like, oh my God, it looks like this. Okay, so to me, a lot of Swift APIs look like deleting path component, appending path component, la la la la, appending path extension, ah! Right? I don't know why, but a lot of Swift programmers seem to like writing this kind of code. I like writing this kind of code. But I think foundation is not necessarily your favorite API design, Chris. Would that be fair to say? I think it's fair to say that the thing that's great about foundation is it has a lot of interesting and useful stuff, URLs and other stuff like that. But its design is not all great. It's great that it's there. And it's amazing that it's all been ported to Linux, right? So quite often you'll find- It's got a tremendous amount of function. I need something like the ability to tell the time it's in dispatch, or the ability to work with URLs. And so know that foundation is there. And generally speaking, I always just import it first thing, right? Because there's a lot of stuff you want, we'll live there, and if you forget to import it, it won't appear in your tab completion, and you'll get errors. But also, when you find clunky foundation APIs, which is most of them- There's usually a better one out there. Or write your own little wrapper on top. Anyway, so once you've done that, now we've got our own JSON serialization thing. We can grab our Drupal notebook, we can find ourselves, we can export them. And now, we can just do the same thing that we do in Python. And we now have a nice little module exporter that we can use. That's cool. We have a question on the time function. How do we know that calling F parentheses is not optimized away in this case, because of a lack of side effects detected by the compiler? Generally, so that's actually a great question. In the case of the workbook, I don't think there's no cross workbook optimization going on, so that's one thing. I don't know if there's a really good, wait, that's a good question. What I recommend doing is put something that's not trivial inside the thing you're timing. And so if you're doing, we'll show you later, launching a CUDA kernel to do a matrix multiplication, for example, and that's not something that gets optimized away. You can also get the value into the closure and then take the value back out. So there's different things that you can do like that. Yeah, sometimes when I was doing this stuff for base math, I would just add a print inside the thing that I was timing to force it to be calculated. And one of the other things that will happen with GPUs is GPUs run asynchronously, and so you need to force a GPU sync. We'll show you how to do that in a minute. So anyway, so coming back to this, so we showed you how to build Matmul, we showed you how to build time. So this Matmul is working on arrays, and this is pretty fast, we talked about, it's 0.13 seconds, but array in Swift is safe. And so what's happening is that every time you index into an array, it does a check to make sure that the index that you're computing is in bounds. And so this is actually doing a lot of work that you would not need to do if you're in C. And so one of the other really cool things about Swift is that you can actually go all the way down to the bare metal and do things, the unsafe, nasty, awesome C way if you want to, to get even a little bit more performance. And so here, sorry, I forgot to change this back, but we have a couple of arrays, and so we have the exact same signature that we did before where we take in two arrays and we have our dimensions. And so what we're going to do is to optimize storing into that result array, we're gonna say, give me an unsafe mutable buffer pointer into that array. And it's unsafe, it's verbose, it has red warning signs all over because it's unsafe, but with almost no code change, now we're able to get something that runs twice as fast. And so here's MatMul, and now it runs at 0.07 milliseconds, which is even faster, which really is a performance of C. And this is pretty cool. And something I found with BaseMath is, sometimes these differences are four or five times faster because making something a pointer allows it to use 70 vectorization. So it's not a minor tweak, you can get super fast performance. But the thing I want to emphasize at this point is that this is like a super low level geeky thing that not everybody should do. This is something that exists because at certain points in your career or your journey, you may find that it's useful, or you may find something that somebody else wrote and it going twice as fast as otherwise would is a pretty big deal, because it makes you twice as productive. But usually you're not working at this level, layers are a good thing. If you want to go like super deep down the rabbit hole, unsafe pointer and unsafe mutable buffer pointer and all these things are also Swift libraries and you can go see their implementations too. And those are implemented in terms of the LLV magic, just like float is. So at this point, let's skip over more C stuff and jump down to working with tensor. So we've got a matrix multiplication working on arrays and floats, but we also have tensors. And so when we talked about tensor and matmul in the PyTorch context, you start out by using the tensor abstraction as the thing that was the container for the matmul. So let's talk a little bit about how tensor works, because this is the first really so for TensorFlow piece of this. Tensors are type and tensor can have multiple different elements in it. Like we talked about before, you can create one with zeros or with random numbers. And the nice thing about tensors is that they carry a shape just like you'd expect. And so you can get it with a dot shape. So here you can see we have a five by seven 84, just like you might expect. And here we have a two dimensional tensor and you can print it out and it's a two dimensional tensor, just like you would kind of expect. Python has the at operator to do matmuls of two tensors. Swift has the same thing, but it uses the nice Unicode thing. There's a easy way to type this if you're on a Mac or if you're using the compose key on windows, or if you don't like Unicode, that's also totally cool. You can just use the matmul function and just spell it out. And so, this is an example of Swift just wanting to work the way you want to work. And if you like math, then you can add math. If you want to type things out, you can do that too. And they're both great. Tensors do all the basic stuff you'd expect. You can reshape them with the reshape function. They support square root and all the other math functions. It's all math stuff. It all works the way you'd expect. It has element wise operations like add and multiply and square root and pow. Oh, we have a question from earlier. Why was it unsafe, what you did? Ah, so what we did was we turned off bounds checking. And so, if I write code that, if I have an array of 10 numbers, and in Swift if I access the 11th element, it will explode and tell me that that's invalid. If you use unsafe, then it will let you do that. And so, whatever happens to be in memory beyond the end of your array, you're now poking it. And you should not do that, but you're taking the guardrails off. And so, this is, Swift is trying to be by default safe and it's trying to help you. It's trying to check things for you. But if you want to, you can just rip off all the guardrails. And just like we showed you with Python, like you can literally do things as dynamic as Python if that's what you'd like. But the defaults are there to help you out. Yeah, so Python programmers, a lot of them won't be familiar with this idea, but in things like C, unsafe code is code where you're working with memory that hasn't been initialized or it's been freed. And it's a really big problem if you're using it like in production or something, because that kind of thing is how people can like inject shell code into your server and security over and steal your users and whatever. So, you know, you should, I think it's fine to now drip it in a notebook though. Yeah, yeah. So, coming back to tensor, you know, you can add them, you can multiply them, you can square root power, like all the normal stuff you'd expect is on tensor. Tensor also, if I run the right cell, tensors also have a bunch of methods that do cool things like convolutions and other stuff like that that we'll talk about later. One of the interesting things about Swift is that it likes comparisons to return Booleans. And so you'll see that if you compare two tensors, it will see if it will give you an ordering of the two tensors, but sometimes you want to get a tensor of Booleans back. And so Swift calls these the point-wise operators. And so if you put a dot before the less than or the greater than or the equals or whatever, it will do a tensor comparison. Yeah, and I get burnt by this all the time in NumPy and PyTorch that doesn't have this level of consistency. So I think that this design call is awesome. This idea that Boolean operations always return Booleans and point-wise operations return point-wise Booleans. It's a good idea. And then you have reductions like any and all that say, hey, if I have a tensor of Booleans, I can check to see if they're all set or if any of them are set. So basically then, I mean, the next part of the notebook is just saying, hey, look, all the stuff that you've seen before looks exactly the same as what you've seen before. Sometimes the words change, like unsqueeze is called expanding shape at, which is a rather Swifty way of saying things. But in a lot of these notebooks, you'll find that there's like lots of details where we've just basically copied the Python code and we're not gonna show you all those details because they're the same. Yep, now let's talk about matmul on tensor. So what we've done here is we've defined the same matmul that we had before. And before we took two arrays and we took two dimensions. But tensor carries a shape. And so here we implemented matmul on tensor. We start by creating a zero tensor, we loop over it all. Now we have our two-dimensional indexing, just like you saw before with NumPy. When you run this, what you'll see is this is a lot slower. This takes seven seconds to do one matmul, where before it was taking 0.07 milliseconds. So why? So what is this? This is about 10,000 times faster. Yeah, so why is that, Jeremy? Why is that? Well, the first thing I wanna say is that hopefully at this point you're thinking this is a problem because it's kind of like the exact opposite of everything that Chris has been telling us and I've been telling you about why this is good. What's the point of something that's infinitely hackable if there's this tensor flow layer we can't go beneath and that it's so slow that we can't really actually write things that run, I mean, seven seconds through a small matrix multiplication? Extraordinary. We would not be running this course if this is where we were heading. This is where we are now and it's a temporary situation that we're fixing. And so let me explain what's going on and how it's being fixed. So the first thing to point out is that when you work with PyTorch, we have a similar issue. Is like we don't write PyTorch triply nested for loops either, right? And the reason we don't is that we need PyTorch to have a reasonable amount of work to do each time we get it to do something, right? So we kind of say, here's a whole matrix A, here's a whole matrix B, there it all is, multiply them together and then it says, here's the whole thing multiplied together. And that's what we do. So it's like if PyTorch was an airplane, right? And we want to send our stuff off to China, we pack it all in a bag and we put the bag in the airplane and it gets sent off to China. As opposed to the triply nested for loop version which is where I take a sock and I put it in an airplane and it flies to China and back and then I put it in my next sock and it flies there and back. And it's gonna take, that's a fast airplane, right? But it's just not an efficient way to use it, right? So we already have this issue which is you gotta give PyTorch enough work to do to make this latency, this overhead worthwhile. Now, TensorFlow is designed in a very different way to PyTorch. And for those of you that did the earliest courses with fast AI, this will look very familiar, right? It's actually a really fascinating programming model. You say there will be later on a float called X and later on I will want to multiply that float by two. Now, set up a session where we're gonna do some stuff and run this computation graph, which could have lots of things going on in it and run it in these things. So I basically kind of set up this whole series of computations and then I pass in some data. So this is a very different feel to PyTorch, right? And because TensorFlow was built this way, TensorFlow to me does not behave like a plane. It behaves like a ship or actually a ship designed for shipping ships or actually a shipping ship designed for shipping shipping ships, which is this particular one, the MV Blue Marlin. So if you have a shipping ship, shipping ships ship, then you need to use it in a different way, which is if you wanna get all of your socks, all of the socks in America to China, you send them all, send all of your ships off to all of the ports in America, everybody dumps their socks on and they all get sent to China and we're all happy, right? Now to take advantage of this extraordinary power, you have to use it in a certain way and you have to have certain things that you need to be able to do. So like if you're Google and you wanna run all the world's search engine queries, this makes a hell of a lot of sense. Now, TF Eager is the kind of the new hot thing for TensorFlow and it's designed to, or it does look like PyTorch, right? So this is what happens when you say tf.enableEagerExecution, that's becoming the default in TensorFlow, you can say here's my number. I'm not saying there will be a number later, I say this is my number and this is my matrix multiplication, right? And I can print it. The thing about this is though, is that this is kind of syntax sugar on top of the ship shipping ship, shipping ship ship, right? Or whatever the hell the thing is, because we're still using the same, a lot of the same kind of foundations and some of it's been optimized, but only a bit, right? So as I say this today, as of April 2019, a like five by five matrix, like a tiny matrix multiply on a GPU with TF Eager takes 0.28 milliseconds, which is 10 times longer than PyTorch takes, right? And so we still just have a lot of overhead. And so TF Eager is not a solution to writing the kind of, low level, get down to the bottom stuff that Chris is saying you can do with Swift. Yeah, but also neither GPUs. GPU is not gonna be fast at a five by five matrix multiply either. Right, right. So, I mean, it's, but it's not, you know, we want something, we want something better. Yes. Right? So TensorFlow has this big ecosystem of things to try and kind of fill in around this issue of having this huge kind of mechanism that works in a particular way to make sure that, you know, you can put it on mobile phones or that you can do it on web servers or whatever, right? But the good news is that what's happening at the moment and the reason we're seeing, the reason we're seeing this speed, right? Is that behind the scenes, Swift for TensorFlow is using TF Eager. And this is like a great choice because it lets us like do this course. It lets us say like, here's how you use it. We can build things on top of it whilst the real stuff is being built behind the scenes. And the real stuff, which is to sit on top of this thing called MLIR, which Chris can tell us a little bit about, which is basically gets all of that compiler goodness that you've seen and allow that to work with the GPU and the CPU and different types of accelerators and let you write Swift, right? So the reason I mention this is that for probably as long as this course is relevant, you know, like the next year, the true potential of what we're talking about, you kind of won't be able to see it, right? We're actually building for a future that's not here yet. This is like a year away. But when we get there, all the stuff that Chris is showing you, it will be able to write stuff that looks, that could even look like this. Yeah, so if I were, a different way to explain it, a year from now it's gonna be mind blowing. Like the future, you're gonna be able to do stuff you've never even thought that was possible and use these accelerators in ways that are just completely unthinkable unless you're writing low level CUDA today. Like there are certain humans in the world, like Scott Gray is one of these people who can make an accelerator do crazy things that nobody even thought was possible. And that's what we're trying to do, but in a workbook. Right, and the reason this matters is that there are vast areas of unexplored research territory, because I mean, most people can't write the CUDA code, and even those that can, it takes so long and it has so many errors, you just don't, right? So in a year's time, we'll be able to do stuff that people just aren't even trying to do yet. But one of the cool things about this is you don't have to wait a year. So next lesson, we'll show you that XLA is here today. XLA is super awesome, it's a really important part of the TensorFlow ecosystem, and it's way better than the torched shit. Right, so just to explain, yeah. So we wanna like completely jump over the industry and do something that is mind expanding. But even today, TensorFlow has a lot of power and XLA allows you to express and build really cool things with super high performance. Exactly, so XLA is this really nice kind of intermediate thing where it's much more mature than the PyTorch JIT, it's been around for a couple of years now. It's a compiler that will turn your code into stuff that's kind of similar-ish performance to what you might see from PyTorch JIT, probably a lot less rough edges. Doesn't generate blobs of C++ and try to compile them again. Yeah, it's a principled compiler. So it's a really neat path because it allows us to do this course now, it allows you to start playing with this now, in a couple of months, it allows you to get a lot of performance for a lot of things that you might wanna play with. And it means that by the time that MLIR comes, we'll be all ready to hit the ground running. Yeah, cool. Shin, is there a way to make sure the matmul or other functions are correctly using shared memory on the GPO? For example, using tiling to make sure you aren't constantly busting the cache of shared memory on the GPO. Yeah, we're not gonna talk about this next week, so maybe we could bring that to the end. Well, so I think that the thing to know is that this is not something you would write in Swift for TensorFlow. You would not poke a tensor one float at a time, it was just not designed for that. And so you can go through all the steps, this is very similar to the Python workbook, but what you end up wanting to write is, let's see here. What's the name of the word? You just write this. Where you write something where you take two matrices and you multiply them together. Or you use the Unicode one or the Matmul one and it goes fast and it takes 0.02 seconds, which is faster than the Swift version because it's using the GPU, it's properly tile blocked, if you run on the CPU it uses all the threads on your computer and it goes really fast. And so the way to think about tensor is that it's meant for these big operations. It's not meant for one float at a time. And we will see next week some really interesting stuff coming down the line. Excellent. Yeah, with stuff where you can write kind of tiled algorithms in ways that are much more concise than the triply nested for loops but much more flexible than the Matmul. Yeah, join. Sorry, another question just came in. How do LLVM, MLIR and XLA relate to each other? That would be better explained with slides, which we'll go into on the next time I think. But LLVM, the simple way to explain it is that it is really good at CPUs. It's a little bit of an oversimplification because we do use it for some GPU stuff. But LLVM really helps you with the one float at a time kind of a thing if you're going to a simpler processor. XLA is really good at tensors. And so it's a tensor compiler. And so it's really good at saying, I have these big tensor operations, I have convolutions. To get maximum performance out of a CPU or a GPU or a TPU, for example, you have to know about tiling, you have to know about fusion, you have to know about a lot of these low level systems things before you then hand it off to LLVM that does the low level stuff. And so XLA talks to LLVM for GPUs, for example, and for CPUs. And there's the way to think about it is XLA does all the tensor stuff and LLVM does all the float and small vector stuff. MLR is like XLA in a certain way, but it's tackling graph level optimizations and tensor flow and kind of expanding XLA beyond just dense linear algebra because there's a lot of interesting, sparse things and other things that are coming down the pipeline that are really exciting. So, yeah, so basically, I mean, we won't look at the rest of this notebook other than to say that the broadcasting stuff that we saw is all here. So you can kind of see how that all looks at the moment. You can run ops on the CPU or the GPU, I mean, all that stuff is all here. And don't worry about the performance, it's really slow at the moment for the reason we mentioned, but it totally won't be. And you can also see matrix modifications at different sizes and how to take its timing and so forth. So did you want to go to raw now? Well, do you want to do this or do you want to go to 11? Do we have time? We have time to do this now. Okay. Maybe five to 10 minutes. Okay, cool. So one of the really cool things about the stack is that TensorFlow is a really mature ecosystem. It has hundreds of different operators available. There's pros and cons of this. So TensorFlow kind of grew organically over time a little bit and so it has a lot of things in its toolbox. What Swift for TensorFlow does is it tries to curate that and it has tensor. And the way tensor works is it's the struct and the struct is implemented in terms of those low-level tensor operations. And so if you look inside tensor, and here there's a link so you can go click on it and see the implementation, tensor has this thing called tensor handle that is under the covers, basically the TensorFlow low-level thing that Eager mode uses. And then if you look at plus, what plus does on two tensors is it calls this raw add operation. And the way that this works is this is just directly talking to the add op in TensorFlow. And the add op is implemented with cuDNN or it's implemented with XLA or it's implemented in different ways for different pieces of hardware. But this is just a simple syntactic sugar thing where we're saying, hey, plus turns into TensorFlow add. Now, again, TensorFlow has tons of cool stuff and it has stuff that I barely understand with lots of mathy things and triangular LU decompositional things and like Bayesian propagation of things that I've... We have an excellent course about triangular decomposition if you check that. Awesome. I'm going to try to survive next week and then I'll take it. And so we haven't curated all of the things that are potentially interesting. And so what you can do is you can actually add new things to tensor. And so one example of that right here is... So you can get like zeros like. If you go into here, let's see if this is... So with tab completion, you can see all of the interesting things, add many sparse to tensor map, add n, adjust contrast, a sign, like it's got lots and lots and lots and lots and lots and lots and lots and lots of stuff. And this is super cool. Particularly if you're watching this between like about April and about September, like in the period where maybe the XLA stuff isn't as fully fleshed out, you probably care about this because there's stuff you can do. Lots and lots and lots and lots and lots and lots and lots and lots of stuff. Which we haven't necessarily surfaced yet. So for example, somebody today was saying, how do I can switch from RGB to BGR format? And somebody said, oh, there's something in TensorFlow called reversed. And so here's the answer, raw.reversed. So that's what I'm knowing about this. Yeah, and so one of the things we'll use for Xresonet and other image models in this course is, hey, we need to be able to load a file. And you could do that with Python, that's fine. TensorFlow has great stuff for doing this. And so here we just use raw read file. And so all we're doing is we're adding a method to string tensor. And we're saying, hey, if you want to create a string tensor from a file, we can have read tensor, we can just use read file and now I can say, give me string tensor, read file, foo, and I added a decode JPEG method on here too. So now I can say decode JPEG, JPEG, and I got my file. And so this is one of the cool things about this platform is that TensorFlow has all this functionality. We're not trying to hide it. We're just trying to curate it a little bit. But again, you can just go add whatever you need. Yeah, so one of the people in the study group today was building an audio library with Swift for TensorFlow. And we haven't surfaced any of that. So they were grabbing raw.decodeWAV or something and they had it all up and running. Yeah, and it's super cool. And again, Swift gives you nice ways to build these things as APIs with default arguments and all this nice stuff. And so you get a lot of design space to do things that work the way you'd like them to work. Cool, so the way we're gonna do this is we've kind of gone like super, super bottom up. I must admit, I thought we had done bottom up before, but this is another level of bottom up. Then he brought a compiler guy. Yeah, then we brought a compiler guy who is always good at making me feel small and insignificant. But now let's jump back up to the top again to see where we're gonna end up. And then next week, we're gonna kind of flesh out all the stuff between the middle. So I'm gonna jump to notebook 11. And notebook 11 is interesting because this is the one where we train an Xresnet on ImageNet. So this is where we're heading. So every time we import the previous notebook, just like we do in Python, the previous notebooks, however, aren't just numbered, but they also have the name. That's the only difference. And then this is just the equivalent of percent map plot lib inline in this environment. So here, load data. We'll show you how we built something that downloads ImageNet, but it basically looks almost exactly like the, very similar to the download MNIST thing you've already seen. And we've created an item list, which has extensions. And we've created a split data, which takes an item list. Now, one of the nice things here is that we don't really need something like functools.partial in Swift because now we can just pass in a trailing closure, which as Chris described, if the last thing is, is in the last parameter is a closure, then you can just whack it in curly brackets. You don't even need a return or anything. And you don't even have to give it an argument name because you can use the default ones. So we're saying split this item list by grandparent. This is the file name that you're gonna get. So this is basically like the equivalent of doing partial, right, and it's gonna be some different validation set. And so now we can create our label data and we need a processor. So we have again, a category processor. So you can see we've got a whole data blocks API here. One of the things that I guess you're gonna talk about next week, Chris, is end and mutation and stuff. Yeah, okay, so basically in Swift, as Chris mentioned, most of the time we use structs. And as Chris will describe to you, structs are things that normally don't change, but you can create something that kind of feels a lot like a C++ reference or a C pointer, but it's much cooler by adding an ampersand. Because remember, processes actually change their state because we get like a vocabulary, for example, the first time we use a processor on the training set. So now we've got a split label data set. And then we've added a to data bunch and we can pass in all the normal stuff, including a batch size. So next thing we can do is we can do transformations. And again, here, we can use a trailing closure to basically do a partial, to say that we're gonna do resize in our transformations. So then we'll grab a batch. Something that I think Chris will probably talk about next week more is this thing. But basically in Swift, very often you wanna be able to set very often you wanna be able to say, hey, this is gonna return either a batch of data or maybe it was gonna return nothing at all. Which in Python, we use the optional type for that and it's called the same thing in Swift. None. None. Yeah, so basically what happens is if you have something that might not return anything, so one batch might not return anything because there might be nothing to return, it can return nothing and then exclamation mark just says assume that it's something. So we can look at the shapes of that batch and look, we've even got show batch. So it's been really fun this process of, in the last couple of weeks of basically saying what does fast AI look like on Swift? And one thing I'll say is like, a lot of these notebooks have been written by Sylvia in particular and by me a little bit and we don't know Swift at all well. So any good Swift programmers looking through those notebooks thinking, oh, this is nice but it'd be even more Swiftie if you did blah, please let us know in the forum because we're super interested to learn how to write better Swift. And I've been super interested to learn all the ML. It's been great. It has been great. I mean it's been great working with each other. I mean, in one sense it's a good sign that you're learning fast AI for Swift from the people who started the fast AI and Swift projects. But on another sense, I know nothing about Swift and Chris doesn't know much about deep learning so maybe it's the worst of all possible worlds. I don't know. No, I think we're all learning together. Yeah. So anyway, yeah, it's been super fun. So as you can see, we've got a data blocks API that's now working. The other thing I mentioned as you'll see next week is the way we've got this working is it's using a TensorFlow API called tf.data which is actually a lot better than a lot of data APIs but it's still not nearly as good as I would like. And I would love to, as a community, start building out the next version that uses like Swift's dispatch to do the threading and maybe open CV to do the transformations and stuff like that. Like we can build, I think, a data blocks something like the Python data blocks API but that is like native. It's not talking to anything else. Anyway, so now we've got batches of data. We can train a model as soon as we have one. So let's create a Xresnet model. And as you've already seen in the slides, it ends up looking very, very familiar. So here's our conflayer. Just one thing to mention, at the moment, and this will probably only be true for a couple more weeks, there are kind of two versions of all the layers. There's the versions in the FastAI repo which all start with fa and there are versions in the Swift repo that don't. So just ignore these fa's. So a conflayer has a batch norm and it has a convolution. Another thing that's slightly awkward at the moment is that we, so you'll see in right now, some of our code looks weird because auto diff in Swift doesn't support flow control. So if or for loops, that'll change soon enough. So when you see something like no bias convolution, that's because we can't write a convolution layer that has an if statement saying, if the person asked for bias, use it, otherwise don't. So don't worry too much about those workarounds either. They'll go away soon enough. So we've got a batch norm layer. We've got a conf layer and we can go through them and the zero bn is the stuff that you're used to. And as Chris said, dunder call is built without the dunder but otherwise everything looks the same as usual. Because we don't have the ability right now, this will change soon, to use if in differentiable code that needs to be differentiated. We've basically added something called a switchable layer which is something you can turn on or off so the details don't matter. Chris will describe next week however, how we actually wrote our own kind of custom gradients for this kind of layer and that'll be fun to learn about. So then we use that to basically have something where, because remember in Xresnet in the identity path, it's not always an identity path. Sometimes you down sample in that path. Sometimes you change the number of channels in that path. If you down sample, then you maybe add an average pool 2D. So because again, we don't have the ability to have if, we just use this switchable layer and maybe you change the number of channels by adding a one by one conv, that's all that is. So most of this stuff, if you're watching this much later than kind of July or something, this will probably all have gone away and been replaced by some if statements. But once we've got all that, the res block res block, there's really nothing to mention, is there? I mean, it's basically identical. If you look back at the version in 11 in the Python versions and kind of switch between them, you almost need like a strobe light thing to see that they're different. Like it's the same layers equals conv layer, layers equals conv layer, don't know why we changed the name. Got this ternary here. This question mark and colon is identical to if and else as an operator in Python comes from C. And then, yeah, and then finally in the call, that and that look exactly the same. Pure selves. Yeah, thank heavens. Thank you. Make layer looks basically the same. This is the make layer we had before. This is the make layer we have now. Don't need that. And so it's interesting to see how some swift things kind of come out quite neatly, right? So this use of map, so this is generating, this is the same as range and blocks in Python. So this is basically saying map, range and blocks, and then passing in disclosure, which generates the res block, right? So I think it's kind of, I don't know, I find it more clear the swift way, but very, very similar. The idea of swift is to have simpler primitives that compose instead of having special cases for the important things. Yeah. So now we've got all that. The xresnet looks very similar to what we would expect. We've still got our number of filters thing going on, the stem, so now we've got that array map thing. You kind of get a start to get a feel for these kind of idioms in swift. So kind of range.map is a useful kind of idiom to be aware of. You can also use a for loop. You can say for i and 0.3. That's also fine too. Just depends on how you wanna write the code. There's an enumerate, but rather than enumerate bracket something, it's dot enumerated, but it works the same way. When you map to it, you get back an index and an object, just like in Python, so very familiar. So in this case, because we've gone dot map and then dot reduce with plus on a list, this is a list comprehension now, right? Because this is spitting out a bunch of lists that we're joining all together. So no special cases there. This is one of those cases where you're asking for the last element of a list. List could be empty, so there might be nothing in it. So exclamation mark says, just assume that there is something there. And we've written a little compose, so we can compose this list of layers on our input. So again, we've got kind of similar concepts expressed in similar ways. So we can now put all that together and we've got all our different ResNets. So now we create the various functions that we need to pass into our ladder. So one is a function that's gonna create a model. So it's gonna be something that creates an X ResNet, and that's the function that's gonna create a model. We're gonna have a function that creates our optimizer, which as you'll see, we have a stateful optimizer, just like we had in Python. We have a learner, just like we had in Python, and it has very, very similar look to it. And again, next time we'll talk about how all these are built. And so atom optimizer, of course, is just a thing that's hackable. Yep. You can change it. Exactly. We have recorder callbacks, just like we're familiar with. We have one cycle training, just like we're familiar with. This add one cycle delegates and make default delegates is probably gonna go away pretty soon, and we'll have some slightly neater ways to do this. So by the time you see this notebook, this might have changed a bit. And then we train it with a ResNet 18 for a few minutes, and we're at.81. Couple of things to mention as I go through this end of April. Right now, this uses about twice as much memory as PyTorch, and it's about three to four times slower than PyTorch. No fundamental reason why this need be the case. We've just started. And so the fact that within... It's not bad for three weeks. Not bad for three weeks. I mean, and all the work that you guys did to build the auto diff in the first place. And three weeks ago, it really didn't work. Yeah, so it's pretty cool that we're at a point where we can actually train proper models like this from scratch in not too slow and not too memory intensive. And if you're interested in kind of getting into the weights, we would certainly love help with fixing the performance and fixing the amount of memory. So that's a... There's a related question. What would be the best way to contribute to the Swift for TensorFlow ecosystem as someone who's now using Swift for the first time? Yeah, that's a great question. So the best place to go is github.com slash tensorflow slash Swift. That's our landing page. There's also a bunch of tutorials there. It explains how to get and build things. One of the things that we're doing is that we're building everything in the open. And so we do our development in the open. We use GitHub. We have our discussions on a mailing list you'll find linked off our GitHub page. And so we try to have a really inclusive and welcoming community. And there's a ton of resources available and a lot to do. Yeah, and I would... That's one way to do it. I would like to suggest another way, which is to come to the Hair, Brain Forum on the Fast AI forums. Because I think for a lot of people, the right way, the best way to contribute the way that you'll get the most out of, that it'll be most relevant to you right now, is to pick something that you've already been using in Python and doesn't exist yet and create the Swift version. And you may think you have no idea how to do that. And perhaps you don't, but like create a really crappy slim down Swift version and build from there. That's the only way any of this stuff gets done. Ask for help on the forum, offer help to others. And so like pick small bits or find some piece that hasn't been documented yet. We haven't really figured out yet where... To put things. Yeah, where Fast AI lives and where Swift for TensorFlow lives and where different repos will be. But in the end, between the Fast AI and Swift for TensorFlow repos, there'll be a kind of an ecosystem that covers the same kind of ground that PyTorch plus Fast AI covers and has just as much room for you to, well, much more room actually for you to build things on top of that because you've got like entirety of scikit-learn and Matplotlib and pandas and all this stuff to... And another thing is if you go on the Fast AI GitHub, you'll see these workbooks. And we skipped from one to 11. And so next time we'll go back through and talk about two and three and four and five. But these are all there for you now. And so if you'd like to look, you can go do that. And they'll get a little bit better by next week, I bet. Yeah, and one thing to mention is where else with the normal Fast AI notebooks, we nearly freeze them. Once we do the course, we just fix errors and that's about it. These notebooks is gonna be very different. We're gonna keep them very, very up to date. So by the time you watch this, they may look very different because we wanna always have for you, showing you like, this is how we suggest you write Swift to TensorFlow code now. And even over the last week, we've been, if you look at the GitHub history, you'll see we've been discovering new things like differentiable arrays and suchable layers. And it allows us to delete lots of previous workarounds and the next weeks and the next couple of months will be similar. So yeah. Do you want more questions? Sure. All right, is Swift thread safe? Yes, Swift is both thread safe and has a really great threading abstraction called dispatch. And so you can fire up lots of concurrent work items, set up work queues, has a really vibrant and good API for doing that with quality of service and like all these advanced things that are available there. Yeah, I've never used such a nice kind of threading. It's like, it's a framework. It feels more like more than just a language. So like on the Apple side, they call it Grand Central Dispatch, but they've put the whole thing over to Linux and you have this whole kind of threading library framework, which is super easy to use and extensible. This is one of the reasons the Swift on server community really likes Swift is that it's efficient, yes, but it also supports threading and other things really well and very naturally. Oh, are there any sidekit learn for Swift projects in the works? I have no idea. There should be. Yeah, I haven't seen anything much. I have a random forest implementation I would love to convert over to Swift, which is a pretty nice one, but it would definitely be nice if you could build a gradient boosting machine or even simple things like K-nearest neighbors and stuff like that. I think though that the opportunity here is to go beyond just reinventing what's already there. Like sidekit learn is cool that it exists, but it could be a lot better, particularly in Swift. So if you do decide I wanna build bits of SK learn or bits of pandas, jump on the forum and talk to us about it and let's try and build something that's vastly better than what's been before, not just a copy of it. I wouldn't suggest that being a starter project. Like if you want a starter project, pick one of the lessons in the one through seven class and implement some of those algorithms. I think in terms of this framework, I think that'd be a really great place to start, but as you get more experience and you get more familiar with Swift, then tackling something like building a big library can be a lot of fun. Is there any plan to build tensor shapes into the Swift type system? So we have a tensor shape type, it's a struct literally right now and that's when you pass in shapes to create a tensor of zeros, you get that. I think what they're probably asking is will we get dimensions in the types or will we get names in the dimensions? So this is something we're super interested in. We think there's a lot of opportunities there both in terms of like shape checking, for example. The whole stack we're building with the compiler integration and the good locations and stuff like that, we think there's a ton of potential. We haven't tapped into that yet. The names on dimensions is tricky and there's lots of space and we haven't exactly figured out how the best way to do that is because there's trade-offs, but that's exactly all the kind of like second step things we wanna do. Probably starting this fall-ish when the basic autodiff, basic performance, like scale out and a bunch of other things are all settled and we feel good about all those basics. And we're trying to stay focused on making sure that things are really good and build the basics and get them right and then move out. Okay, any more questions? There are a lot of people going to do this. No, I mean that's fine. We're at a good stuff point. How is ampersand referencing different from struct? Oh, we'll talk more about that next time. So Swift has a, this comes back to safety in the language. Swift has a completely different approach to references like classes and structs and values. And so I'm gonna save that mind blowing piece for next time. It's really cool. It is. It underlies a ton of, I mean it's a very foundational thing that makes a lot of stuff possible. And how is Swift for probabilistic programming? Ooh, so this is one of the areas I'm both completely incapable of talking intelligently about but also very excited about because this is one of those things that I think is really under utilized. One of the things that I think is really interesting about Swift as a platform for machine learning is that you often, so with Python, you end up in this weird situation where you build a machine learning model and then you have an application that you eventually wanna use it in. And these are two different things. Training your model and deploying your model are different worlds. And we can start erasing some of those boundaries because Swift can be put in a mobile app, believe it or not, or put in a server, or put in other things that you're actually deploying. And probabilistic programming and many of these other applications I think would be great to build and integrate with the applications themselves. So I think the answer is it'll be a great fit. I haven't seen anything here yet. But basically with things like probabilistic programming or things like kind of graph-based systems, they're not a great fit for PyTorch. And that's not a controversial thing to say because Sumit Chintaloh who created PyTorch said that on Twitter himself last week. He said if you wanna do this kind of work at the moment, you might wanna look at Julia, which is another great option for this kind of programming. Because what happens is you have these kind of deep connections, you know, computational graphs of lots of things calling lots of other things. And so you need, and they're often kind of small. So you need those things to happen super quickly. So things like Julia and Swift work really well for that kind of thing, particularly when you kind of add all the threading stuff on top as well. So if you're interested in that area, that would certainly be one that I think you could start getting into straight away. Like one of the nice things about that is you can do a lot on the CPU. Like a lot of these things don't even make sense on the GPU. So you can take advantage of it right now. And for that actually, we'll add it to the forum post, but I actually have a post already about how to access a variety of random number distributions from Swift, C++ random number distributions. So you could actually get started with this right away. Is that it? Yeah, yeah, also the TensorFlow ecosystem has a big mature framework called TensorFlow probability. And so I personally don't know very much about it, but I expect that all the atoms you need are all there. And we just need somebody who knows the space really well to build a Swift library that can expose all the primitives that TensorFlow already has. Is that it? How could you deploy Swift models on Android? Well, so I think there's two options that you have there. So one is Swift, again, builds on the entire TensorFlow ecosystem. And so TensorFlow ecosystem includes graphs, and graphs are a part of what Swift talks to. So you can export a graph, you can send it through TF Lite. And so the whole mobile deployment situation there works. I feel like that's kind of the model we're trying to get away from a little bit though. Do you feel that way? So the other option is like Swift actually runs fine on Android. People ship Android apps written in Swift. So you can do that too. Swift on Android isn't really awesome as far as I know. I'm not exactly an Android programmer. I don't really know that. But the issue there is that Android, you have a dual world between the Java stuff and the native stuff. And so Swift fits into the native stuff, is my understanding. But I know that people are building and shipping Android apps written in Swift. And so that's a totally reasonable thing to do. The other thing to mention in terms of platforms is that Swift on Windows is starting to come together as well. So I don't know where it'll be by the time you're watching this at home. But Swift is definitely making its way to worlds outside the iOS world pretty rapidly. Windows is one of them. Yeah, yeah, it's super exciting. People are writing, what's the Windows MVC? MFC, MFC apps in Swift, which is brain twisting to me. So what we're gonna close with now is a little taste of where we're heading next week. And this is actually something that Rachel shows in her computational linear algebra course. And it comes from a really amazing programming language called Halide. And Halide is one of these dramatic steps in terms of completely rethinking how we program computers. And I wanna show it to you because it gives you a sense of the kinds of problems that Swift has to solve in order to, like the goal here is to be able to get, the goal here is to be able to get this performance. Because remember that the C speed triply nested for loop was 0.07. But TensorFlow is 0.02, right? How do we get this level of performance but you being able to write it yourself in Swift? Now here's why it's hard, right? And so this video actually comes from the Halide project, which is a programming language that has kind of invented an amazing way to think about this. And so I'm gonna use it to describe the problems that we're gonna solve. So in order to write something fast, we have to think about how everything's gonna get put together. And so the algorithm we're gonna write here that they wrote in this Halide video is one where they're doing a simple blur, a three by three blur, right? So we take each group of three by three pixels and we take their average. That's how you do a three by three blur. Now, what are some of the things we could do, right? So how, in what order, for example, do I compute the values in my three by three blur? And one way is just go through each X one at a time, and then within that, go through each Y one at a time. That would be one choice. A second choice I could make would be to do the exact opposite, which is to go through each column one at a time. Now these aren't gonna have very different characteristics. Maybe the latter might be a bit slower because we're jumping further through memory. But what we could do is we could do something called vectorization. And vectorization is super important because what happens with vectorization is we actually take four, or sometimes even eight, numbers at a time and throw them all at the CPU or GPU at once and say calculate them all together. And so we have these things called vector units in our computers nowadays that can do that. You can even have multiple vectorized things happening at the same time because you have multiple cores. But in fact, in a GPU, this is what happens all the time. Or in order to think about better memory access, we could do a little block at a time like this. So there's lots of choices about how I compute my values that are gonna change the performance characteristics of my, in this case, a blur. Another question is when should I compute my inputs? So here's my input. And see how it's going through three at a time? So because I'm trying to calculate three at a time. And that gives me my blurred in X. Now I have to go through all of those three at a time. And so you can see this is super slow. It's recalculating things again and again. And it's not able to really use the cache well. Instead, I could do a whole set of nine at a time. And that would then allow me to create a whole blurred output at a time. Or I could go through it like this, exactly like before, but actually save what I had before. And that means when I then do the next row, I don't need to recompute, because it's already there. Okay, just add a clarification that the left panel's input, the middle is the intermediate values, and the right is the final output. Thank you. We could vectorize that. So we can do vectorized input, and then vectorized on the intermediate values, and then calculate those to create our vectorized output with parallel processing. Here's another way that we could combine vectorization and parallel processing. There's all these things you can do, and you can see they're gonna have very different performance characteristics. At Halide, they have this neat idea, which is, hey, let's not write nested, nested, nested for loops and tiles and looping through the memory like that. Let's instead describe for each value x, y in my blurred output, here is how it's calculated in this kind of declarative way. This is literally the definition of a blur algorithm. And so you first do that, and then, after you've done that, you can then say to Halide, what are different schedules for calculating that? So what's the order in which things are done? And for these different schedules that are written here, they have all the different behaviors you just saw. Now, here's the thing. When expert CUDA programmers and expert CPU programmers write code to do things like this, they're using the world's best knowledge available across all of those things to create special versions for every architecture, for every different, well, not every, but lots of different matrix sizes, tensors of different numbers of dimensions, so much assembly code, right? And so we can't write that, right? So how are we going to be able to write the stuff that's in our head, but have it run reasonably quickly? And so what we're moving towards with stuff like MLIR is the ability to kind of have domain-specific languages where you could write, here's the tiling domain-specific language, and here's the, and the- For example, Halide directly. For example, Halide directly, right? And so that's the hope of where we're gonna be going here is that Chris's team is gonna be putting these kinds of tools in your hands via Swift. Is that a reasonable summary? Well, and so one of the bad things about Halide, so in this space, we have TensorFlow today, TensorFlow today, we have Exelay. Exelay is an important part of TensorFlow right now. It's just not really wired into the Swift part of TensorFlow yet. Exelay does all this stuff right now. And Exelay is really good because you don't have to hand tune it, like that whole writing out schedules. Exelay does a good job of using the hardware as it is today. The thing we're going further with MLIR is to say, well, instead of you having to put all this blood, sweat, and tears into tune it and know the hardware and do all this stuff, we can do other things like search. And in fact, there are research systems available now which will use genetic algorithms to auto search for their optimal schedule. So you're starting to see the kind of the ideas that come out of the database query optimizer world coming into the CUDA kernel world. And this is gonna be so great for us to understand. Exactly, search can be implemented in lots of different ways. Brute force, reinforcement learning, like lots of different genetic algorithms. There's lots of cool things that can be done here. And so what we're going to do over time is crack open the compiler and make the internal algorithms all learned. And I think that's gonna be super cool. So this is why you have a compiler guy and a DL guy standing next to each other, right? Because it is- Oh, well we like each other too. It's, oh, you're okay. Because we're not gonna get this kind of great outcome unless people like us are working together with amazing teams like the folks that they have in TensorFlow and XLA and so forth. So next week, come back and we will dig even deeper. Thank you very much, Chris Latner. Thank you, Jeremy. Thank you. Thank you, Jeremy. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.2, "text": " Welcome everybody to lesson 13, also known as lesson 6 of part 2,", "tokens": [4027, 2201, 281, 6898, 3705, 11, 611, 2570, 382, 6898, 1386, 295, 644, 568, 11], "temperature": 0.0, "avg_logprob": -0.20138623534130448, "compression_ratio": 1.69921875, "no_speech_prob": 0.0044655632227659225}, {"id": 1, "seek": 0, "start": 7.2, "end": 11.0, "text": " also known as lesson 1 of, never mind, the lesson", "tokens": [611, 2570, 382, 6898, 502, 295, 11, 1128, 1575, 11, 264, 6898], "temperature": 0.0, "avg_logprob": -0.20138623534130448, "compression_ratio": 1.69921875, "no_speech_prob": 0.0044655632227659225}, {"id": 2, "seek": 0, "start": 11.0, "end": 14.120000000000001, "text": " in which we start talking about SWIFT.", "tokens": [294, 597, 321, 722, 1417, 466, 20346, 12775, 51, 13], "temperature": 0.0, "avg_logprob": -0.20138623534130448, "compression_ratio": 1.69921875, "no_speech_prob": 0.0044655632227659225}, {"id": 3, "seek": 0, "start": 14.120000000000001, "end": 18.080000000000002, "text": " Before we do, I wanted to mention a couple", "tokens": [4546, 321, 360, 11, 286, 1415, 281, 2152, 257, 1916], "temperature": 0.0, "avg_logprob": -0.20138623534130448, "compression_ratio": 1.69921875, "no_speech_prob": 0.0044655632227659225}, {"id": 4, "seek": 0, "start": 18.080000000000002, "end": 19.400000000000002, "text": " of cool things during the week because lots", "tokens": [295, 1627, 721, 1830, 264, 1243, 570, 3195], "temperature": 0.0, "avg_logprob": -0.20138623534130448, "compression_ratio": 1.69921875, "no_speech_prob": 0.0044655632227659225}, {"id": 5, "seek": 0, "start": 19.400000000000002, "end": 21.48, "text": " of people were doing lots of cool things.", "tokens": [295, 561, 645, 884, 3195, 295, 1627, 721, 13], "temperature": 0.0, "avg_logprob": -0.20138623534130448, "compression_ratio": 1.69921875, "no_speech_prob": 0.0044655632227659225}, {"id": 6, "seek": 0, "start": 21.48, "end": 24.36, "text": " And in part 2, I haven't done as much highlighting of these things,", "tokens": [400, 294, 644, 568, 11, 286, 2378, 380, 1096, 382, 709, 26551, 295, 613, 721, 11], "temperature": 0.0, "avg_logprob": -0.20138623534130448, "compression_ratio": 1.69921875, "no_speech_prob": 0.0044655632227659225}, {"id": 7, "seek": 0, "start": 24.36, "end": 26.52, "text": " but I thought it would be nice to look at a couple", "tokens": [457, 286, 1194, 309, 576, 312, 1481, 281, 574, 412, 257, 1916], "temperature": 0.0, "avg_logprob": -0.20138623534130448, "compression_ratio": 1.69921875, "no_speech_prob": 0.0044655632227659225}, {"id": 8, "seek": 0, "start": 26.52, "end": 29.04, "text": " of cool examples from this week.", "tokens": [295, 1627, 5110, 490, 341, 1243, 13], "temperature": 0.0, "avg_logprob": -0.20138623534130448, "compression_ratio": 1.69921875, "no_speech_prob": 0.0044655632227659225}, {"id": 9, "seek": 2904, "start": 29.04, "end": 33.519999999999996, "text": " Big congrats to Rob G, who said that 14 months ago,", "tokens": [5429, 8882, 1720, 281, 5424, 460, 11, 567, 848, 300, 3499, 2493, 2057, 11], "temperature": 0.0, "avg_logprob": -0.17486163302584812, "compression_ratio": 1.6377358490566039, "no_speech_prob": 6.908538489369676e-05}, {"id": 10, "seek": 2904, "start": 33.519999999999996, "end": 35.64, "text": " he had never done any machine learning or deep learning", "tokens": [415, 632, 1128, 1096, 604, 3479, 2539, 420, 2452, 2539], "temperature": 0.0, "avg_logprob": -0.17486163302584812, "compression_ratio": 1.6377358490566039, "no_speech_prob": 6.908538489369676e-05}, {"id": 11, "seek": 2904, "start": 35.64, "end": 38.12, "text": " or Python or maths beyond high school.", "tokens": [420, 15329, 420, 36287, 4399, 1090, 1395, 13], "temperature": 0.0, "avg_logprob": -0.17486163302584812, "compression_ratio": 1.6377358490566039, "no_speech_prob": 6.908538489369676e-05}, {"id": 12, "seek": 2904, "start": 38.12, "end": 42.68, "text": " And he just competed in one of the top academic challenges", "tokens": [400, 415, 445, 43619, 294, 472, 295, 264, 1192, 7778, 4759], "temperature": 0.0, "avg_logprob": -0.17486163302584812, "compression_ratio": 1.6377358490566039, "no_speech_prob": 6.908538489369676e-05}, {"id": 13, "seek": 2904, "start": 42.68, "end": 46.68, "text": " for computer vision machine learning and came first and second", "tokens": [337, 3820, 5201, 3479, 2539, 293, 1361, 700, 293, 1150], "temperature": 0.0, "avg_logprob": -0.17486163302584812, "compression_ratio": 1.6377358490566039, "no_speech_prob": 6.908538489369676e-05}, {"id": 14, "seek": 2904, "start": 46.68, "end": 49.480000000000004, "text": " in the two or three challenge tracks he entered.", "tokens": [294, 264, 732, 420, 1045, 3430, 10218, 415, 9065, 13], "temperature": 0.0, "avg_logprob": -0.17486163302584812, "compression_ratio": 1.6377358490566039, "no_speech_prob": 6.908538489369676e-05}, {"id": 15, "seek": 2904, "start": 49.480000000000004, "end": 51.16, "text": " So congrats, Rob.", "tokens": [407, 8882, 1720, 11, 5424, 13], "temperature": 0.0, "avg_logprob": -0.17486163302584812, "compression_ratio": 1.6377358490566039, "no_speech_prob": 6.908538489369676e-05}, {"id": 16, "seek": 2904, "start": 51.16, "end": 55.4, "text": " And I thought this is a great example of like, you know,", "tokens": [400, 286, 1194, 341, 307, 257, 869, 1365, 295, 411, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.17486163302584812, "compression_ratio": 1.6377358490566039, "no_speech_prob": 6.908538489369676e-05}, {"id": 17, "seek": 2904, "start": 55.4, "end": 56.72, "text": " the kind of interesting things you can do", "tokens": [264, 733, 295, 1880, 721, 291, 393, 360], "temperature": 0.0, "avg_logprob": -0.17486163302584812, "compression_ratio": 1.6377358490566039, "no_speech_prob": 6.908538489369676e-05}, {"id": 18, "seek": 5672, "start": 56.72, "end": 59.24, "text": " because if you do an academic challenge like this", "tokens": [570, 498, 291, 360, 364, 7778, 3430, 411, 341], "temperature": 0.0, "avg_logprob": -0.08158656322594846, "compression_ratio": 1.7808219178082192, "no_speech_prob": 3.643905438366346e-05}, {"id": 19, "seek": 5672, "start": 59.24, "end": 62.32, "text": " and if you do well like Rob, you actually get the opportunity,", "tokens": [293, 498, 291, 360, 731, 411, 5424, 11, 291, 767, 483, 264, 2650, 11], "temperature": 0.0, "avg_logprob": -0.08158656322594846, "compression_ratio": 1.7808219178082192, "no_speech_prob": 3.643905438366346e-05}, {"id": 20, "seek": 5672, "start": 62.32, "end": 65.8, "text": " as he mentions here, to write a paper.", "tokens": [382, 415, 23844, 510, 11, 281, 2464, 257, 3035, 13], "temperature": 0.0, "avg_logprob": -0.08158656322594846, "compression_ratio": 1.7808219178082192, "no_speech_prob": 3.643905438366346e-05}, {"id": 21, "seek": 5672, "start": 65.8, "end": 67.84, "text": " And so if you've never done an academic paper before,", "tokens": [400, 370, 498, 291, 600, 1128, 1096, 364, 7778, 3035, 949, 11], "temperature": 0.0, "avg_logprob": -0.08158656322594846, "compression_ratio": 1.7808219178082192, "no_speech_prob": 3.643905438366346e-05}, {"id": 22, "seek": 5672, "start": 67.84, "end": 69.52, "text": " this is a great way to get an introduction.", "tokens": [341, 307, 257, 869, 636, 281, 483, 364, 9339, 13], "temperature": 0.0, "avg_logprob": -0.08158656322594846, "compression_ratio": 1.7808219178082192, "no_speech_prob": 3.643905438366346e-05}, {"id": 23, "seek": 5672, "start": 69.52, "end": 74.36, "text": " You kind of have a certain publishing venue and you get a bit", "tokens": [509, 733, 295, 362, 257, 1629, 17832, 21645, 293, 291, 483, 257, 857], "temperature": 0.0, "avg_logprob": -0.08158656322594846, "compression_ratio": 1.7808219178082192, "no_speech_prob": 3.643905438366346e-05}, {"id": 24, "seek": 5672, "start": 74.36, "end": 76.52, "text": " of an insight to the academic world.", "tokens": [295, 364, 11269, 281, 264, 7778, 1002, 13], "temperature": 0.0, "avg_logprob": -0.08158656322594846, "compression_ratio": 1.7808219178082192, "no_speech_prob": 3.643905438366346e-05}, {"id": 25, "seek": 5672, "start": 76.52, "end": 79.68, "text": " And I certainly found the same thing that Rob points out here,", "tokens": [400, 286, 3297, 1352, 264, 912, 551, 300, 5424, 2793, 484, 510, 11], "temperature": 0.0, "avg_logprob": -0.08158656322594846, "compression_ratio": 1.7808219178082192, "no_speech_prob": 3.643905438366346e-05}, {"id": 26, "seek": 5672, "start": 79.68, "end": 82.16, "text": " which is that when you actually submit a paper", "tokens": [597, 307, 300, 562, 291, 767, 10315, 257, 3035], "temperature": 0.0, "avg_logprob": -0.08158656322594846, "compression_ratio": 1.7808219178082192, "no_speech_prob": 3.643905438366346e-05}, {"id": 27, "seek": 5672, "start": 82.16, "end": 85.32, "text": " for the first time, you suddenly realize why so many academic", "tokens": [337, 264, 700, 565, 11, 291, 5800, 4325, 983, 370, 867, 7778], "temperature": 0.0, "avg_logprob": -0.08158656322594846, "compression_ratio": 1.7808219178082192, "no_speech_prob": 3.643905438366346e-05}, {"id": 28, "seek": 8532, "start": 85.32, "end": 88.83999999999999, "text": " papers aren't that useful because they focus on weird things.", "tokens": [10577, 3212, 380, 300, 4420, 570, 436, 1879, 322, 3657, 721, 13], "temperature": 0.0, "avg_logprob": -0.1207151248537261, "compression_ratio": 1.605072463768116, "no_speech_prob": 2.884285459003877e-05}, {"id": 29, "seek": 8532, "start": 88.83999999999999, "end": 91.11999999999999, "text": " So anyway, I thought this was a great result.", "tokens": [407, 4033, 11, 286, 1194, 341, 390, 257, 869, 1874, 13], "temperature": 0.0, "avg_logprob": -0.1207151248537261, "compression_ratio": 1.605072463768116, "no_speech_prob": 2.884285459003877e-05}, {"id": 30, "seek": 8532, "start": 91.11999999999999, "end": 92.67999999999999, "text": " Congratulations to Rob.", "tokens": [9694, 281, 5424, 13], "temperature": 0.0, "avg_logprob": -0.1207151248537261, "compression_ratio": 1.605072463768116, "no_speech_prob": 2.884285459003877e-05}, {"id": 31, "seek": 8532, "start": 92.67999999999999, "end": 98.11999999999999, "text": " I also feel like I have a kind of a regular gig", "tokens": [286, 611, 841, 411, 286, 362, 257, 733, 295, 257, 3890, 8741], "temperature": 0.0, "avg_logprob": -0.1207151248537261, "compression_ratio": 1.605072463768116, "no_speech_prob": 2.884285459003877e-05}, {"id": 32, "seek": 8532, "start": 98.11999999999999, "end": 100.72, "text": " in promoting the amazing work Alina Harley does because she does", "tokens": [294, 16383, 264, 2243, 589, 967, 1426, 34921, 775, 570, 750, 775], "temperature": 0.0, "avg_logprob": -0.1207151248537261, "compression_ratio": 1.605072463768116, "no_speech_prob": 2.884285459003877e-05}, {"id": 33, "seek": 8532, "start": 100.72, "end": 102.72, "text": " so much great work, but this is yet another great piece", "tokens": [370, 709, 869, 589, 11, 457, 341, 307, 1939, 1071, 869, 2522], "temperature": 0.0, "avg_logprob": -0.1207151248537261, "compression_ratio": 1.605072463768116, "no_speech_prob": 2.884285459003877e-05}, {"id": 34, "seek": 8532, "start": 102.72, "end": 104.03999999999999, "text": " of work that she's done.", "tokens": [295, 589, 300, 750, 311, 1096, 13], "temperature": 0.0, "avg_logprob": -0.1207151248537261, "compression_ratio": 1.605072463768116, "no_speech_prob": 2.884285459003877e-05}, {"id": 35, "seek": 8532, "start": 104.03999999999999, "end": 107.91999999999999, "text": " You'll remember her from the part one genomic stuff.", "tokens": [509, 603, 1604, 720, 490, 264, 644, 472, 1049, 21401, 1507, 13], "temperature": 0.0, "avg_logprob": -0.1207151248537261, "compression_ratio": 1.605072463768116, "no_speech_prob": 2.884285459003877e-05}, {"id": 36, "seek": 8532, "start": 107.91999999999999, "end": 114.88, "text": " And this is nice because it's an example of looking at text data", "tokens": [400, 341, 307, 1481, 570, 309, 311, 364, 1365, 295, 1237, 412, 2487, 1412], "temperature": 0.0, "avg_logprob": -0.1207151248537261, "compression_ratio": 1.605072463768116, "no_speech_prob": 2.884285459003877e-05}, {"id": 37, "seek": 11488, "start": 114.88, "end": 121.8, "text": " for the purpose of looking at genomic information.", "tokens": [337, 264, 4334, 295, 1237, 412, 1049, 21401, 1589, 13], "temperature": 0.0, "avg_logprob": -0.12792119823518347, "compression_ratio": 1.6926070038910506, "no_speech_prob": 2.54555961873848e-05}, {"id": 38, "seek": 11488, "start": 121.8, "end": 124.16, "text": " And I just love this example.", "tokens": [400, 286, 445, 959, 341, 1365, 13], "temperature": 0.0, "avg_logprob": -0.12792119823518347, "compression_ratio": 1.6926070038910506, "no_speech_prob": 2.54555961873848e-05}, {"id": 39, "seek": 11488, "start": 124.16, "end": 126.84, "text": " And Alina has got a great walkthrough", "tokens": [400, 967, 1426, 575, 658, 257, 869, 1792, 11529], "temperature": 0.0, "avg_logprob": -0.12792119823518347, "compression_ratio": 1.6926070038910506, "no_speech_prob": 2.54555961873848e-05}, {"id": 40, "seek": 11488, "start": 126.84, "end": 129.4, "text": " that you can find describing, I mean,", "tokens": [300, 291, 393, 915, 16141, 11, 286, 914, 11], "temperature": 0.0, "avg_logprob": -0.12792119823518347, "compression_ratio": 1.6926070038910506, "no_speech_prob": 2.54555961873848e-05}, {"id": 41, "seek": 11488, "start": 129.4, "end": 130.84, "text": " look how familiar this looks.", "tokens": [574, 577, 4963, 341, 1542, 13], "temperature": 0.0, "avg_logprob": -0.12792119823518347, "compression_ratio": 1.6926070038910506, "no_speech_prob": 2.54555961873848e-05}, {"id": 42, "seek": 11488, "start": 130.84, "end": 132.8, "text": " It's the exact steps that we've just taken.", "tokens": [467, 311, 264, 1900, 4439, 300, 321, 600, 445, 2726, 13], "temperature": 0.0, "avg_logprob": -0.12792119823518347, "compression_ratio": 1.6926070038910506, "no_speech_prob": 2.54555961873848e-05}, {"id": 43, "seek": 11488, "start": 132.8, "end": 137.35999999999999, "text": " And one of the things I love is she's actually using whatever this", "tokens": [400, 472, 295, 264, 721, 286, 959, 307, 750, 311, 767, 1228, 2035, 341], "temperature": 0.0, "avg_logprob": -0.12792119823518347, "compression_ratio": 1.6926070038910506, "no_speech_prob": 2.54555961873848e-05}, {"id": 44, "seek": 11488, "start": 137.35999999999999, "end": 140.56, "text": " version of Fast AI is that we have in our exp folder,", "tokens": [3037, 295, 15968, 7318, 307, 300, 321, 362, 294, 527, 1278, 10820, 11], "temperature": 0.0, "avg_logprob": -0.12792119823518347, "compression_ratio": 1.6926070038910506, "no_speech_prob": 2.54555961873848e-05}, {"id": 45, "seek": 11488, "start": 140.56, "end": 142.0, "text": " so it's not even Fast AI version one.", "tokens": [370, 309, 311, 406, 754, 15968, 7318, 3037, 472, 13], "temperature": 0.0, "avg_logprob": -0.12792119823518347, "compression_ratio": 1.6926070038910506, "no_speech_prob": 2.54555961873848e-05}, {"id": 46, "seek": 11488, "start": 142.0, "end": 144.2, "text": " It's the stuff that we've built from scratch.", "tokens": [467, 311, 264, 1507, 300, 321, 600, 3094, 490, 8459, 13], "temperature": 0.0, "avg_logprob": -0.12792119823518347, "compression_ratio": 1.6926070038910506, "no_speech_prob": 2.54555961873848e-05}, {"id": 47, "seek": 14420, "start": 144.2, "end": 147.11999999999998, "text": " So it's nice to see that used in practice.", "tokens": [407, 309, 311, 1481, 281, 536, 300, 1143, 294, 3124, 13], "temperature": 0.0, "avg_logprob": -0.16028904914855957, "compression_ratio": 1.564102564102564, "no_speech_prob": 1.362931197945727e-05}, {"id": 48, "seek": 14420, "start": 147.11999999999998, "end": 149.64, "text": " Not just used, but not bad for a quick thrown", "tokens": [1726, 445, 1143, 11, 457, 406, 1578, 337, 257, 1702, 11732], "temperature": 0.0, "avg_logprob": -0.16028904914855957, "compression_ratio": 1.564102564102564, "no_speech_prob": 1.362931197945727e-05}, {"id": 49, "seek": 14420, "start": 149.64, "end": 150.95999999999998, "text": " together baseline.", "tokens": [1214, 20518, 13], "temperature": 0.0, "avg_logprob": -0.16028904914855957, "compression_ratio": 1.564102564102564, "no_speech_prob": 1.362931197945727e-05}, {"id": 50, "seek": 14420, "start": 150.95999999999998, "end": 157.83999999999997, "text": " It hits 15th out of 357 teams on this leaderboard,", "tokens": [467, 8664, 2119, 392, 484, 295, 6976, 22, 5491, 322, 341, 5263, 3787, 11], "temperature": 0.0, "avg_logprob": -0.16028904914855957, "compression_ratio": 1.564102564102564, "no_speech_prob": 1.362931197945727e-05}, {"id": 51, "seek": 14420, "start": 157.83999999999997, "end": 160.11999999999998, "text": " which she describes as not a bad starting point.", "tokens": [597, 750, 15626, 382, 406, 257, 1578, 2891, 935, 13], "temperature": 0.0, "avg_logprob": -0.16028904914855957, "compression_ratio": 1.564102564102564, "no_speech_prob": 1.362931197945727e-05}, {"id": 52, "seek": 14420, "start": 160.11999999999998, "end": 162.88, "text": " So not a bad starting point at all.", "tokens": [407, 406, 257, 1578, 2891, 935, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.16028904914855957, "compression_ratio": 1.564102564102564, "no_speech_prob": 1.362931197945727e-05}, {"id": 53, "seek": 14420, "start": 162.88, "end": 165.92, "text": " So that's very cool.", "tokens": [407, 300, 311, 588, 1627, 13], "temperature": 0.0, "avg_logprob": -0.16028904914855957, "compression_ratio": 1.564102564102564, "no_speech_prob": 1.362931197945727e-05}, {"id": 54, "seek": 14420, "start": 165.92, "end": 167.79999999999998, "text": " So rewind.", "tokens": [407, 41458, 13], "temperature": 0.0, "avg_logprob": -0.16028904914855957, "compression_ratio": 1.564102564102564, "no_speech_prob": 1.362931197945727e-05}, {"id": 55, "seek": 14420, "start": 167.79999999999998, "end": 170.28, "text": " Start of lesson eight, we said we're", "tokens": [6481, 295, 6898, 3180, 11, 321, 848, 321, 434], "temperature": 0.0, "avg_logprob": -0.16028904914855957, "compression_ratio": 1.564102564102564, "no_speech_prob": 1.362931197945727e-05}, {"id": 56, "seek": 14420, "start": 170.28, "end": 173.48, "text": " going to try and recreate Fast AI and much of PyTorch", "tokens": [516, 281, 853, 293, 25833, 15968, 7318, 293, 709, 295, 9953, 51, 284, 339], "temperature": 0.0, "avg_logprob": -0.16028904914855957, "compression_ratio": 1.564102564102564, "no_speech_prob": 1.362931197945727e-05}, {"id": 57, "seek": 17348, "start": 173.48, "end": 175.92, "text": " from the foundations.", "tokens": [490, 264, 22467, 13], "temperature": 0.0, "avg_logprob": -0.1820251636016063, "compression_ratio": 1.5105263157894737, "no_speech_prob": 8.138295015669428e-06}, {"id": 58, "seek": 17348, "start": 175.92, "end": 183.83999999999997, "text": " And 26 days ago, Sylvia and I started the same thing", "tokens": [400, 7551, 1708, 2057, 11, 33349, 11617, 293, 286, 1409, 264, 912, 551], "temperature": 0.0, "avg_logprob": -0.1820251636016063, "compression_ratio": 1.5105263157894737, "no_speech_prob": 8.138295015669428e-06}, {"id": 59, "seek": 17348, "start": 183.83999999999997, "end": 188.0, "text": " for Swift, except we actually had no ability to cheat.", "tokens": [337, 25539, 11, 3993, 321, 767, 632, 572, 3485, 281, 17470, 13], "temperature": 0.0, "avg_logprob": -0.1820251636016063, "compression_ratio": 1.5105263157894737, "no_speech_prob": 8.138295015669428e-06}, {"id": 60, "seek": 17348, "start": 188.0, "end": 190.48, "text": " Because when we started, we really", "tokens": [1436, 562, 321, 1409, 11, 321, 534], "temperature": 0.0, "avg_logprob": -0.1820251636016063, "compression_ratio": 1.5105263157894737, "no_speech_prob": 8.138295015669428e-06}, {"id": 61, "seek": 17348, "start": 190.48, "end": 192.88, "text": " were starting with the foundations.", "tokens": [645, 2891, 365, 264, 22467, 13], "temperature": 0.0, "avg_logprob": -0.1820251636016063, "compression_ratio": 1.5105263157894737, "no_speech_prob": 8.138295015669428e-06}, {"id": 62, "seek": 17348, "start": 192.88, "end": 198.07999999999998, "text": " There are no Swift data science modules, basically.", "tokens": [821, 366, 572, 25539, 1412, 3497, 16679, 11, 1936, 13], "temperature": 0.0, "avg_logprob": -0.1820251636016063, "compression_ratio": 1.5105263157894737, "no_speech_prob": 8.138295015669428e-06}, {"id": 63, "seek": 17348, "start": 198.07999999999998, "end": 200.12, "text": " But there is stuff, as you'll see,", "tokens": [583, 456, 307, 1507, 11, 382, 291, 603, 536, 11], "temperature": 0.0, "avg_logprob": -0.1820251636016063, "compression_ratio": 1.5105263157894737, "no_speech_prob": 8.138295015669428e-06}, {"id": 64, "seek": 20012, "start": 200.12, "end": 205.48000000000002, "text": " for creating tensors and random number generators.", "tokens": [337, 4084, 10688, 830, 293, 4974, 1230, 38662, 13], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 65, "seek": 20012, "start": 205.48000000000002, "end": 207.08, "text": " And you'll actually see we're even", "tokens": [400, 291, 603, 767, 536, 321, 434, 754], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 66, "seek": 20012, "start": 207.08, "end": 209.20000000000002, "text": " able to use Matplotlib, which might surprise you.", "tokens": [1075, 281, 764, 6789, 564, 310, 38270, 11, 597, 1062, 6365, 291, 13], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 67, "seek": 20012, "start": 209.20000000000002, "end": 211.56, "text": " We'll show you why and how.", "tokens": [492, 603, 855, 291, 983, 293, 577, 13], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 68, "seek": 20012, "start": 211.56, "end": 214.48000000000002, "text": " So this is what we're going to do over the next two lessons,", "tokens": [407, 341, 307, 437, 321, 434, 516, 281, 360, 670, 264, 958, 732, 8820, 11], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 69, "seek": 20012, "start": 214.48000000000002, "end": 215.92000000000002, "text": " is revisit this.", "tokens": [307, 32676, 341, 13], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 70, "seek": 20012, "start": 215.92000000000002, "end": 218.12, "text": " Now obviously, we're not going to go through every step", "tokens": [823, 2745, 11, 321, 434, 406, 516, 281, 352, 807, 633, 1823], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 71, "seek": 20012, "start": 218.12, "end": 220.28, "text": " and excruciating detail, because as you'll see,", "tokens": [293, 1624, 894, 537, 990, 2607, 11, 570, 382, 291, 603, 536, 11], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 72, "seek": 20012, "start": 220.28, "end": 222.20000000000002, "text": " the vast majority of it is, hey, this", "tokens": [264, 8369, 6286, 295, 309, 307, 11, 4177, 11, 341], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 73, "seek": 20012, "start": 222.20000000000002, "end": 224.92000000000002, "text": " is almost identical to what we did in Python.", "tokens": [307, 1920, 14800, 281, 437, 321, 630, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 74, "seek": 20012, "start": 224.92000000000002, "end": 226.36, "text": " So what we're still going to do is", "tokens": [407, 437, 321, 434, 920, 516, 281, 360, 307], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 75, "seek": 20012, "start": 226.36, "end": 229.48000000000002, "text": " dig in to the bits that show us something interesting", "tokens": [2528, 294, 281, 264, 9239, 300, 855, 505, 746, 1880], "temperature": 0.0, "avg_logprob": -0.15318777123276067, "compression_ratio": 1.6928104575163399, "no_speech_prob": 8.663851076562423e-06}, {"id": 76, "seek": 22948, "start": 229.48, "end": 233.64, "text": " or different, of which there will be many.", "tokens": [420, 819, 11, 295, 597, 456, 486, 312, 867, 13], "temperature": 0.0, "avg_logprob": -0.13484790460850166, "compression_ratio": 1.721461187214612, "no_speech_prob": 2.429866071906872e-05}, {"id": 77, "seek": 22948, "start": 233.64, "end": 236.95999999999998, "text": " But in the end, we're going to get here,", "tokens": [583, 294, 264, 917, 11, 321, 434, 516, 281, 483, 510, 11], "temperature": 0.0, "avg_logprob": -0.13484790460850166, "compression_ratio": 1.721461187214612, "no_speech_prob": 2.429866071906872e-05}, {"id": 78, "seek": 22948, "start": 236.95999999999998, "end": 239.35999999999999, "text": " which is this is xresnet.", "tokens": [597, 307, 341, 307, 2031, 495, 7129, 13], "temperature": 0.0, "avg_logprob": -0.13484790460850166, "compression_ratio": 1.721461187214612, "no_speech_prob": 2.429866071906872e-05}, {"id": 79, "seek": 22948, "start": 239.35999999999999, "end": 241.76, "text": " Here's the res block from xresnet.", "tokens": [1692, 311, 264, 725, 3461, 490, 2031, 495, 7129, 13], "temperature": 0.0, "avg_logprob": -0.13484790460850166, "compression_ratio": 1.721461187214612, "no_speech_prob": 2.429866071906872e-05}, {"id": 80, "seek": 22948, "start": 241.76, "end": 245.35999999999999, "text": " And this, believe it or not, is the Swift version.", "tokens": [400, 341, 11, 1697, 309, 420, 406, 11, 307, 264, 25539, 3037, 13], "temperature": 0.0, "avg_logprob": -0.13484790460850166, "compression_ratio": 1.721461187214612, "no_speech_prob": 2.429866071906872e-05}, {"id": 81, "seek": 22948, "start": 245.35999999999999, "end": 248.67999999999998, "text": " Like you almost can't tell it's different.", "tokens": [1743, 291, 1920, 393, 380, 980, 309, 311, 819, 13], "temperature": 0.0, "avg_logprob": -0.13484790460850166, "compression_ratio": 1.721461187214612, "no_speech_prob": 2.429866071906872e-05}, {"id": 82, "seek": 22948, "start": 248.67999999999998, "end": 251.0, "text": " So we're going to end up in this beautiful situation.", "tokens": [407, 321, 434, 516, 281, 917, 493, 294, 341, 2238, 2590, 13], "temperature": 0.0, "avg_logprob": -0.13484790460850166, "compression_ratio": 1.721461187214612, "no_speech_prob": 2.429866071906872e-05}, {"id": 83, "seek": 22948, "start": 251.0, "end": 252.2, "text": " This is the res block.", "tokens": [639, 307, 264, 725, 3461, 13], "temperature": 0.0, "avg_logprob": -0.13484790460850166, "compression_ratio": 1.721461187214612, "no_speech_prob": 2.429866071906872e-05}, {"id": 84, "seek": 22948, "start": 252.2, "end": 254.23999999999998, "text": " Here's the xresnet itself.", "tokens": [1692, 311, 264, 2031, 495, 7129, 2564, 13], "temperature": 0.0, "avg_logprob": -0.13484790460850166, "compression_ratio": 1.721461187214612, "no_speech_prob": 2.429866071906872e-05}, {"id": 85, "seek": 22948, "start": 254.23999999999998, "end": 256.8, "text": " It's so concise.", "tokens": [467, 311, 370, 44882, 13], "temperature": 0.0, "avg_logprob": -0.13484790460850166, "compression_ratio": 1.721461187214612, "no_speech_prob": 2.429866071906872e-05}, {"id": 86, "seek": 22948, "start": 256.8, "end": 258.92, "text": " It's so familiar.", "tokens": [467, 311, 370, 4963, 13], "temperature": 0.0, "avg_logprob": -0.13484790460850166, "compression_ratio": 1.721461187214612, "no_speech_prob": 2.429866071906872e-05}, {"id": 87, "seek": 25892, "start": 258.92, "end": 260.72, "text": " Hopefully, it's going to make you feel pretty comfortable", "tokens": [10429, 11, 309, 311, 516, 281, 652, 291, 841, 1238, 4619], "temperature": 0.0, "avg_logprob": -0.16491350634344693, "compression_ratio": 1.7004219409282701, "no_speech_prob": 4.784926659340272e-06}, {"id": 88, "seek": 25892, "start": 260.72, "end": 263.36, "text": " that this is where we're going.", "tokens": [300, 341, 307, 689, 321, 434, 516, 13], "temperature": 0.0, "avg_logprob": -0.16491350634344693, "compression_ratio": 1.7004219409282701, "no_speech_prob": 4.784926659340272e-06}, {"id": 89, "seek": 25892, "start": 263.36, "end": 267.16, "text": " And what about how we get all the data in there?", "tokens": [400, 437, 466, 577, 321, 483, 439, 264, 1412, 294, 456, 30], "temperature": 0.0, "avg_logprob": -0.16491350634344693, "compression_ratio": 1.7004219409282701, "no_speech_prob": 4.784926659340272e-06}, {"id": 90, "seek": 25892, "start": 267.16, "end": 270.44, "text": " We're going to have to deal with all the TensorFlow data APIs", "tokens": [492, 434, 516, 281, 362, 281, 2028, 365, 439, 264, 37624, 1412, 21445], "temperature": 0.0, "avg_logprob": -0.16491350634344693, "compression_ratio": 1.7004219409282701, "no_speech_prob": 4.784926659340272e-06}, {"id": 91, "seek": 25892, "start": 270.44, "end": 272.24, "text": " and learn all this stuff as well?", "tokens": [293, 1466, 439, 341, 1507, 382, 731, 30], "temperature": 0.0, "avg_logprob": -0.16491350634344693, "compression_ratio": 1.7004219409282701, "no_speech_prob": 4.784926659340272e-06}, {"id": 92, "seek": 25892, "start": 272.24, "end": 273.8, "text": " Well, no.", "tokens": [1042, 11, 572, 13], "temperature": 0.0, "avg_logprob": -0.16491350634344693, "compression_ratio": 1.7004219409282701, "no_speech_prob": 4.784926659340272e-06}, {"id": 93, "seek": 25892, "start": 273.8, "end": 277.28000000000003, "text": " Here is the data approach that we're", "tokens": [1692, 307, 264, 1412, 3109, 300, 321, 434], "temperature": 0.0, "avg_logprob": -0.16491350634344693, "compression_ratio": 1.7004219409282701, "no_speech_prob": 4.784926659340272e-06}, {"id": 94, "seek": 25892, "start": 277.28000000000003, "end": 279.32, "text": " going to use, Datablocks API.", "tokens": [516, 281, 764, 11, 9315, 455, 34896, 9362, 13], "temperature": 0.0, "avg_logprob": -0.16491350634344693, "compression_ratio": 1.7004219409282701, "no_speech_prob": 4.784926659340272e-06}, {"id": 95, "seek": 25892, "start": 279.32, "end": 280.68, "text": " So we're actually going to show you", "tokens": [407, 321, 434, 767, 516, 281, 855, 291], "temperature": 0.0, "avg_logprob": -0.16491350634344693, "compression_ratio": 1.7004219409282701, "no_speech_prob": 4.784926659340272e-06}, {"id": 96, "seek": 25892, "start": 280.68, "end": 286.32, "text": " how to build the Datablocks API in Swift or TensorFlow.", "tokens": [577, 281, 1322, 264, 9315, 455, 34896, 9362, 294, 25539, 420, 37624, 13], "temperature": 0.0, "avg_logprob": -0.16491350634344693, "compression_ratio": 1.7004219409282701, "no_speech_prob": 4.784926659340272e-06}, {"id": 97, "seek": 28632, "start": 286.32, "end": 291.44, "text": " So three weeks ago, when we started digging into this,", "tokens": [407, 1045, 3259, 2057, 11, 562, 321, 1409, 17343, 666, 341, 11], "temperature": 0.0, "avg_logprob": -0.09664949806787634, "compression_ratio": 1.5642201834862386, "no_speech_prob": 5.254957613942679e-06}, {"id": 98, "seek": 28632, "start": 291.44, "end": 293.28, "text": " none of us knew if this would be possible.", "tokens": [6022, 295, 505, 2586, 498, 341, 576, 312, 1944, 13], "temperature": 0.0, "avg_logprob": -0.09664949806787634, "compression_ratio": 1.5642201834862386, "no_speech_prob": 5.254957613942679e-06}, {"id": 99, "seek": 28632, "start": 293.28, "end": 297.71999999999997, "text": " And I'm really thrilled to find that not only is it possible,", "tokens": [400, 286, 478, 534, 18744, 281, 915, 300, 406, 787, 307, 309, 1944, 11], "temperature": 0.0, "avg_logprob": -0.09664949806787634, "compression_ratio": 1.5642201834862386, "no_speech_prob": 5.254957613942679e-06}, {"id": 100, "seek": 28632, "start": 297.71999999999997, "end": 302.96, "text": " but we end up with code that looks wonderfully familiar", "tokens": [457, 321, 917, 493, 365, 3089, 300, 1542, 38917, 4963], "temperature": 0.0, "avg_logprob": -0.09664949806787634, "compression_ratio": 1.5642201834862386, "no_speech_prob": 5.254957613942679e-06}, {"id": 101, "seek": 28632, "start": 302.96, "end": 305.68, "text": " and has all the nice features that we've hopefully", "tokens": [293, 575, 439, 264, 1481, 4122, 300, 321, 600, 4696], "temperature": 0.0, "avg_logprob": -0.09664949806787634, "compression_ratio": 1.5642201834862386, "no_speech_prob": 5.254957613942679e-06}, {"id": 102, "seek": 28632, "start": 305.68, "end": 307.92, "text": " grown to love.", "tokens": [7709, 281, 959, 13], "temperature": 0.0, "avg_logprob": -0.09664949806787634, "compression_ratio": 1.5642201834862386, "no_speech_prob": 5.254957613942679e-06}, {"id": 103, "seek": 28632, "start": 307.92, "end": 311.76, "text": " So to get to here, there's a lot of people I want to thank.", "tokens": [407, 281, 483, 281, 510, 11, 456, 311, 257, 688, 295, 561, 286, 528, 281, 1309, 13], "temperature": 0.0, "avg_logprob": -0.09664949806787634, "compression_ratio": 1.5642201834862386, "no_speech_prob": 5.254957613942679e-06}, {"id": 104, "seek": 31176, "start": 311.76, "end": 316.76, "text": " In particular, Chris Latner, who I still", "tokens": [682, 1729, 11, 6688, 7354, 1193, 11, 567, 286, 920], "temperature": 0.0, "avg_logprob": -0.11535354929232816, "compression_ratio": 1.5387453874538746, "no_speech_prob": 1.1656984497676603e-05}, {"id": 105, "seek": 31176, "start": 316.76, "end": 319.96, "text": " don't understand why he put his trust in us in this way.", "tokens": [500, 380, 1223, 983, 415, 829, 702, 3361, 294, 505, 294, 341, 636, 13], "temperature": 0.0, "avg_logprob": -0.11535354929232816, "compression_ratio": 1.5387453874538746, "no_speech_prob": 1.1656984497676603e-05}, {"id": 106, "seek": 31176, "start": 319.96, "end": 326.68, "text": " It seems like he has very strange judgment or something.", "tokens": [467, 2544, 411, 415, 575, 588, 5861, 12216, 420, 746, 13], "temperature": 0.0, "avg_logprob": -0.11535354929232816, "compression_ratio": 1.5387453874538746, "no_speech_prob": 1.1656984497676603e-05}, {"id": 107, "seek": 31176, "start": 326.68, "end": 330.03999999999996, "text": " But given that he did, we felt that we had to make sure we", "tokens": [583, 2212, 300, 415, 630, 11, 321, 2762, 300, 321, 632, 281, 652, 988, 321], "temperature": 0.0, "avg_logprob": -0.11535354929232816, "compression_ratio": 1.5387453874538746, "no_speech_prob": 1.1656984497676603e-05}, {"id": 108, "seek": 31176, "start": 330.03999999999996, "end": 330.8, "text": " don't screw it up.", "tokens": [500, 380, 5630, 309, 493, 13], "temperature": 0.0, "avg_logprob": -0.11535354929232816, "compression_ratio": 1.5387453874538746, "no_speech_prob": 1.1656984497676603e-05}, {"id": 109, "seek": 31176, "start": 330.8, "end": 333.0, "text": " So he's been fantastic.", "tokens": [407, 415, 311, 668, 5456, 13], "temperature": 0.0, "avg_logprob": -0.11535354929232816, "compression_ratio": 1.5387453874538746, "no_speech_prob": 1.1656984497676603e-05}, {"id": 110, "seek": 31176, "start": 333.0, "end": 335.08, "text": " And then the whole Swift for TensorFlow team", "tokens": [400, 550, 264, 1379, 25539, 337, 37624, 1469], "temperature": 0.0, "avg_logprob": -0.11535354929232816, "compression_ratio": 1.5387453874538746, "no_speech_prob": 1.1656984497676603e-05}, {"id": 111, "seek": 31176, "start": 335.08, "end": 338.0, "text": " has actually made this project their number one priority.", "tokens": [575, 767, 1027, 341, 1716, 641, 1230, 472, 9365, 13], "temperature": 0.0, "avg_logprob": -0.11535354929232816, "compression_ratio": 1.5387453874538746, "no_speech_prob": 1.1656984497676603e-05}, {"id": 112, "seek": 31176, "start": 338.0, "end": 340.71999999999997, "text": " And this totally wouldn't have happened without everybody", "tokens": [400, 341, 3879, 2759, 380, 362, 2011, 1553, 2201], "temperature": 0.0, "avg_logprob": -0.11535354929232816, "compression_ratio": 1.5387453874538746, "no_speech_prob": 1.1656984497676603e-05}, {"id": 113, "seek": 34072, "start": 340.72, "end": 343.12, "text": " calling together.", "tokens": [5141, 1214, 13], "temperature": 0.0, "avg_logprob": -0.12315746556932682, "compression_ratio": 1.5, "no_speech_prob": 3.0213817808544263e-05}, {"id": 114, "seek": 34072, "start": 343.12, "end": 348.16, "text": " Also in terms of bad judgment, Sylvain has, obviously,", "tokens": [2743, 294, 2115, 295, 1578, 12216, 11, 3902, 14574, 491, 575, 11, 2745, 11], "temperature": 0.0, "avg_logprob": -0.12315746556932682, "compression_ratio": 1.5, "no_speech_prob": 3.0213817808544263e-05}, {"id": 115, "seek": 34072, "start": 348.16, "end": 351.64000000000004, "text": " we all know made the mistake of deciding", "tokens": [321, 439, 458, 1027, 264, 6146, 295, 17990], "temperature": 0.0, "avg_logprob": -0.12315746556932682, "compression_ratio": 1.5, "no_speech_prob": 3.0213817808544263e-05}, {"id": 116, "seek": 34072, "start": 351.64000000000004, "end": 354.40000000000003, "text": " to spend his time working with me on fast AI stuff.", "tokens": [281, 3496, 702, 565, 1364, 365, 385, 322, 2370, 7318, 1507, 13], "temperature": 0.0, "avg_logprob": -0.12315746556932682, "compression_ratio": 1.5, "no_speech_prob": 3.0213817808544263e-05}, {"id": 117, "seek": 34072, "start": 354.40000000000003, "end": 358.12, "text": " And a few weeks ago, I said, guess what?", "tokens": [400, 257, 1326, 3259, 2057, 11, 286, 848, 11, 2041, 437, 30], "temperature": 0.0, "avg_logprob": -0.12315746556932682, "compression_ratio": 1.5, "no_speech_prob": 3.0213817808544263e-05}, {"id": 118, "seek": 34072, "start": 358.12, "end": 360.6, "text": " We're going to rebuild everything from scratch", "tokens": [492, 434, 516, 281, 16877, 1203, 490, 8459], "temperature": 0.0, "avg_logprob": -0.12315746556932682, "compression_ratio": 1.5, "no_speech_prob": 3.0213817808544263e-05}, {"id": 119, "seek": 34072, "start": 360.6, "end": 361.96000000000004, "text": " in Swift.", "tokens": [294, 25539, 13], "temperature": 0.0, "avg_logprob": -0.12315746556932682, "compression_ratio": 1.5, "no_speech_prob": 3.0213817808544263e-05}, {"id": 120, "seek": 34072, "start": 361.96000000000004, "end": 364.84000000000003, "text": " And rather than running away screaming,", "tokens": [400, 2831, 813, 2614, 1314, 12636, 11], "temperature": 0.0, "avg_logprob": -0.12315746556932682, "compression_ratio": 1.5, "no_speech_prob": 3.0213817808544263e-05}, {"id": 121, "seek": 34072, "start": 364.84000000000003, "end": 367.52000000000004, "text": " he said, OK, when do we start?", "tokens": [415, 848, 11, 2264, 11, 562, 360, 321, 722, 30], "temperature": 0.0, "avg_logprob": -0.12315746556932682, "compression_ratio": 1.5, "no_speech_prob": 3.0213817808544263e-05}, {"id": 122, "seek": 34072, "start": 367.52000000000004, "end": 368.56, "text": " So thank you, Sylvain.", "tokens": [407, 1309, 291, 11, 3902, 14574, 491, 13], "temperature": 0.0, "avg_logprob": -0.12315746556932682, "compression_ratio": 1.5, "no_speech_prob": 3.0213817808544263e-05}, {"id": 123, "seek": 36856, "start": 368.56, "end": 372.16, "text": " And he has built nearly all of these notebooks in three weeks", "tokens": [400, 415, 575, 3094, 6217, 439, 295, 613, 43782, 294, 1045, 3259], "temperature": 0.0, "avg_logprob": -0.1139005258542682, "compression_ratio": 1.5661764705882353, "no_speech_prob": 3.880163421854377e-05}, {"id": 124, "seek": 36856, "start": 372.16, "end": 374.44, "text": " and learned Swift, which is not bad.", "tokens": [293, 3264, 25539, 11, 597, 307, 406, 1578, 13], "temperature": 0.0, "avg_logprob": -0.1139005258542682, "compression_ratio": 1.5661764705882353, "no_speech_prob": 3.880163421854377e-05}, {"id": 125, "seek": 36856, "start": 374.44, "end": 377.08, "text": " Thanks, Alexis, for the value types discussion.", "tokens": [2561, 11, 39826, 11, 337, 264, 2158, 3467, 5017, 13], "temperature": 0.0, "avg_logprob": -0.1139005258542682, "compression_ratio": 1.5661764705882353, "no_speech_prob": 3.880163421854377e-05}, {"id": 126, "seek": 36856, "start": 377.08, "end": 378.92, "text": " You'll see next week super helpful.", "tokens": [509, 603, 536, 958, 1243, 1687, 4961, 13], "temperature": 0.0, "avg_logprob": -0.1139005258542682, "compression_ratio": 1.5661764705882353, "no_speech_prob": 3.880163421854377e-05}, {"id": 127, "seek": 36856, "start": 378.92, "end": 383.56, "text": " Pedro has built something which makes the Swift packaging", "tokens": [26662, 575, 3094, 746, 597, 1669, 264, 25539, 16836], "temperature": 0.0, "avg_logprob": -0.1139005258542682, "compression_ratio": 1.5661764705882353, "no_speech_prob": 3.880163421854377e-05}, {"id": 128, "seek": 36856, "start": 383.56, "end": 386.52, "text": " system suck slightly less than it otherwise does,", "tokens": [1185, 9967, 4748, 1570, 813, 309, 5911, 775, 11], "temperature": 0.0, "avg_logprob": -0.1139005258542682, "compression_ratio": 1.5661764705882353, "no_speech_prob": 3.880163421854377e-05}, {"id": 129, "seek": 36856, "start": 386.52, "end": 388.56, "text": " which is a lot.", "tokens": [597, 307, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.1139005258542682, "compression_ratio": 1.5661764705882353, "no_speech_prob": 3.880163421854377e-05}, {"id": 130, "seek": 36856, "start": 388.56, "end": 390.88, "text": " And also the whole San Francisco Fast AI Study", "tokens": [400, 611, 264, 1379, 5271, 12279, 15968, 7318, 27039], "temperature": 0.0, "avg_logprob": -0.1139005258542682, "compression_ratio": 1.5661764705882353, "no_speech_prob": 3.880163421854377e-05}, {"id": 131, "seek": 36856, "start": 390.88, "end": 393.6, "text": " Group, who's given us lots of valuable feedback", "tokens": [10500, 11, 567, 311, 2212, 505, 3195, 295, 8263, 5824], "temperature": 0.0, "avg_logprob": -0.1139005258542682, "compression_ratio": 1.5661764705882353, "no_speech_prob": 3.880163421854377e-05}, {"id": 132, "seek": 36856, "start": 393.6, "end": 396.6, "text": " over the last few weeks.", "tokens": [670, 264, 1036, 1326, 3259, 13], "temperature": 0.0, "avg_logprob": -0.1139005258542682, "compression_ratio": 1.5661764705882353, "no_speech_prob": 3.880163421854377e-05}, {"id": 133, "seek": 39660, "start": 396.6, "end": 402.04, "text": " So what does this mean for fast AI?", "tokens": [407, 437, 775, 341, 914, 337, 2370, 7318, 30], "temperature": 0.0, "avg_logprob": -0.16017707865288916, "compression_ratio": 1.448888888888889, "no_speech_prob": 8.396611519856378e-06}, {"id": 134, "seek": 39660, "start": 402.04, "end": 406.12, "text": " There is a blog post we will link to about,", "tokens": [821, 307, 257, 6968, 2183, 321, 486, 2113, 281, 466, 11], "temperature": 0.0, "avg_logprob": -0.16017707865288916, "compression_ratio": 1.448888888888889, "no_speech_prob": 8.396611519856378e-06}, {"id": 135, "seek": 39660, "start": 406.12, "end": 409.40000000000003, "text": " which many of you, I'm sure, have read about why we're", "tokens": [597, 867, 295, 291, 11, 286, 478, 988, 11, 362, 1401, 466, 983, 321, 434], "temperature": 0.0, "avg_logprob": -0.16017707865288916, "compression_ratio": 1.448888888888889, "no_speech_prob": 8.396611519856378e-06}, {"id": 136, "seek": 39660, "start": 409.40000000000003, "end": 413.92, "text": " doing this crazy, or harebrained, Swift thing.", "tokens": [884, 341, 3219, 11, 420, 39921, 6198, 2001, 11, 25539, 551, 13], "temperature": 0.0, "avg_logprob": -0.16017707865288916, "compression_ratio": 1.448888888888889, "no_speech_prob": 8.396611519856378e-06}, {"id": 137, "seek": 39660, "start": 413.92, "end": 417.72, "text": " But I particularly wanted to mention two things.", "tokens": [583, 286, 4098, 1415, 281, 2152, 732, 721, 13], "temperature": 0.0, "avg_logprob": -0.16017707865288916, "compression_ratio": 1.448888888888889, "no_speech_prob": 8.396611519856378e-06}, {"id": 138, "seek": 39660, "start": 417.72, "end": 420.08000000000004, "text": " The first is we actually don't really have a choice.", "tokens": [440, 700, 307, 321, 767, 500, 380, 534, 362, 257, 3922, 13], "temperature": 0.0, "avg_logprob": -0.16017707865288916, "compression_ratio": 1.448888888888889, "no_speech_prob": 8.396611519856378e-06}, {"id": 139, "seek": 39660, "start": 423.64000000000004, "end": 426.20000000000005, "text": " We used to work with TensorFlow and Keras.", "tokens": [492, 1143, 281, 589, 365, 37624, 293, 591, 6985, 13], "temperature": 0.0, "avg_logprob": -0.16017707865288916, "compression_ratio": 1.448888888888889, "no_speech_prob": 8.396611519856378e-06}, {"id": 140, "seek": 42620, "start": 426.2, "end": 430.44, "text": " And we had to stop because we couldn't build for you", "tokens": [400, 321, 632, 281, 1590, 570, 321, 2809, 380, 1322, 337, 291], "temperature": 0.0, "avg_logprob": -0.09786278639382463, "compression_ratio": 1.6450381679389312, "no_speech_prob": 2.626520290505141e-05}, {"id": 141, "seek": 42620, "start": 430.44, "end": 433.32, "text": " and with you the things that we wanted to build together.", "tokens": [293, 365, 291, 264, 721, 300, 321, 1415, 281, 1322, 1214, 13], "temperature": 0.0, "avg_logprob": -0.09786278639382463, "compression_ratio": 1.6450381679389312, "no_speech_prob": 2.626520290505141e-05}, {"id": 142, "seek": 42620, "start": 433.32, "end": 436.03999999999996, "text": " So luckily, PyTorch had just come out.", "tokens": [407, 22880, 11, 9953, 51, 284, 339, 632, 445, 808, 484, 13], "temperature": 0.0, "avg_logprob": -0.09786278639382463, "compression_ratio": 1.6450381679389312, "no_speech_prob": 2.626520290505141e-05}, {"id": 143, "seek": 42620, "start": 436.03999999999996, "end": 440.12, "text": " And we actually first started using PyTorch in this course,", "tokens": [400, 321, 767, 700, 1409, 1228, 9953, 51, 284, 339, 294, 341, 1164, 11], "temperature": 0.0, "avg_logprob": -0.09786278639382463, "compression_ratio": 1.6450381679389312, "no_speech_prob": 2.626520290505141e-05}, {"id": 144, "seek": 42620, "start": 440.12, "end": 443.32, "text": " I think it was two weeks after the first pre-release", "tokens": [286, 519, 309, 390, 732, 3259, 934, 264, 700, 659, 12, 265, 1122], "temperature": 0.0, "avg_logprob": -0.09786278639382463, "compression_ratio": 1.6450381679389312, "no_speech_prob": 2.626520290505141e-05}, {"id": 145, "seek": 42620, "start": 443.32, "end": 444.32, "text": " of PyTorch.", "tokens": [295, 9953, 51, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.09786278639382463, "compression_ratio": 1.6450381679389312, "no_speech_prob": 2.626520290505141e-05}, {"id": 146, "seek": 42620, "start": 444.32, "end": 446.91999999999996, "text": " So doing ridiculous things ridiculously early", "tokens": [407, 884, 11083, 721, 41358, 2440], "temperature": 0.0, "avg_logprob": -0.09786278639382463, "compression_ratio": 1.6450381679389312, "no_speech_prob": 2.626520290505141e-05}, {"id": 147, "seek": 42620, "start": 446.91999999999996, "end": 448.96, "text": " is definitely part of our DNA.", "tokens": [307, 2138, 644, 295, 527, 8272, 13], "temperature": 0.0, "avg_logprob": -0.09786278639382463, "compression_ratio": 1.6450381679389312, "no_speech_prob": 2.626520290505141e-05}, {"id": 148, "seek": 42620, "start": 448.96, "end": 451.84, "text": " We were lucky that happened.", "tokens": [492, 645, 6356, 300, 2011, 13], "temperature": 0.0, "avg_logprob": -0.09786278639382463, "compression_ratio": 1.6450381679389312, "no_speech_prob": 2.626520290505141e-05}, {"id": 149, "seek": 42620, "start": 451.84, "end": 454.68, "text": " But then when we came to get to the next part one,", "tokens": [583, 550, 562, 321, 1361, 281, 483, 281, 264, 958, 644, 472, 11], "temperature": 0.0, "avg_logprob": -0.09786278639382463, "compression_ratio": 1.6450381679389312, "no_speech_prob": 2.626520290505141e-05}, {"id": 150, "seek": 45468, "start": 454.68, "end": 458.04, "text": " because we started using PyTorch in an earlier part two,", "tokens": [570, 321, 1409, 1228, 9953, 51, 284, 339, 294, 364, 3071, 644, 732, 11], "temperature": 0.0, "avg_logprob": -0.1329504461849437, "compression_ratio": 1.647940074906367, "no_speech_prob": 7.410338639601832e-06}, {"id": 151, "seek": 45468, "start": 458.04, "end": 459.40000000000003, "text": " just like we're doing for Swift.", "tokens": [445, 411, 321, 434, 884, 337, 25539, 13], "temperature": 0.0, "avg_logprob": -0.1329504461849437, "compression_ratio": 1.647940074906367, "no_speech_prob": 7.410338639601832e-06}, {"id": 152, "seek": 45468, "start": 459.40000000000003, "end": 462.04, "text": " Then we got to the next part one.", "tokens": [1396, 321, 658, 281, 264, 958, 644, 472, 13], "temperature": 0.0, "avg_logprob": -0.1329504461849437, "compression_ratio": 1.647940074906367, "no_speech_prob": 7.410338639601832e-06}, {"id": 153, "seek": 45468, "start": 462.04, "end": 463.64, "text": " And we thought, well, PyTorch is great.", "tokens": [400, 321, 1194, 11, 731, 11, 9953, 51, 284, 339, 307, 869, 13], "temperature": 0.0, "avg_logprob": -0.1329504461849437, "compression_ratio": 1.647940074906367, "no_speech_prob": 7.410338639601832e-06}, {"id": 154, "seek": 45468, "start": 463.64, "end": 465.28000000000003, "text": " We want to use it all the time.", "tokens": [492, 528, 281, 764, 309, 439, 264, 565, 13], "temperature": 0.0, "avg_logprob": -0.1329504461849437, "compression_ratio": 1.647940074906367, "no_speech_prob": 7.410338639601832e-06}, {"id": 155, "seek": 45468, "start": 465.28000000000003, "end": 470.76, "text": " But there's no way we can teach PyTorch to new practitioners.", "tokens": [583, 456, 311, 572, 636, 321, 393, 2924, 9953, 51, 284, 339, 281, 777, 25742, 13], "temperature": 0.0, "avg_logprob": -0.1329504461849437, "compression_ratio": 1.647940074906367, "no_speech_prob": 7.410338639601832e-06}, {"id": 156, "seek": 45468, "start": 470.76, "end": 474.28000000000003, "text": " So we created a whole new library called Fast AI,", "tokens": [407, 321, 2942, 257, 1379, 777, 6405, 1219, 15968, 7318, 11], "temperature": 0.0, "avg_logprob": -0.1329504461849437, "compression_ratio": 1.647940074906367, "no_speech_prob": 7.410338639601832e-06}, {"id": 157, "seek": 45468, "start": 474.28000000000003, "end": 476.12, "text": " because we had to.", "tokens": [570, 321, 632, 281, 13], "temperature": 0.0, "avg_logprob": -0.1329504461849437, "compression_ratio": 1.647940074906367, "no_speech_prob": 7.410338639601832e-06}, {"id": 158, "seek": 45468, "start": 476.12, "end": 479.32, "text": " And now we've hit the same point we were with when we first", "tokens": [400, 586, 321, 600, 2045, 264, 912, 935, 321, 645, 365, 562, 321, 700], "temperature": 0.0, "avg_logprob": -0.1329504461849437, "compression_ratio": 1.647940074906367, "no_speech_prob": 7.410338639601832e-06}, {"id": 159, "seek": 45468, "start": 479.32, "end": 483.48, "text": " switched to PyTorch, which is we can't build with you", "tokens": [16858, 281, 9953, 51, 284, 339, 11, 597, 307, 321, 393, 380, 1322, 365, 291], "temperature": 0.0, "avg_logprob": -0.1329504461849437, "compression_ratio": 1.647940074906367, "no_speech_prob": 7.410338639601832e-06}, {"id": 160, "seek": 48348, "start": 483.48, "end": 486.0, "text": " the stuff we want to build together.", "tokens": [264, 1507, 321, 528, 281, 1322, 1214, 13], "temperature": 0.0, "avg_logprob": -0.11687163344952238, "compression_ratio": 1.7028112449799198, "no_speech_prob": 1.473767315474106e-05}, {"id": 161, "seek": 48348, "start": 486.0, "end": 487.08000000000004, "text": " We're hitting the boundaries.", "tokens": [492, 434, 8850, 264, 13180, 13], "temperature": 0.0, "avg_logprob": -0.11687163344952238, "compression_ratio": 1.7028112449799198, "no_speech_prob": 1.473767315474106e-05}, {"id": 162, "seek": 48348, "start": 487.08000000000004, "end": 492.24, "text": " We want to create nice, regularized RNNs, for example.", "tokens": [492, 528, 281, 1884, 1481, 11, 3890, 1602, 45702, 45, 82, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.11687163344952238, "compression_ratio": 1.7028112449799198, "no_speech_prob": 1.473767315474106e-05}, {"id": 163, "seek": 48348, "start": 492.24, "end": 494.88, "text": " We want to create batch norm layers, which", "tokens": [492, 528, 281, 1884, 15245, 2026, 7914, 11, 597], "temperature": 0.0, "avg_logprob": -0.11687163344952238, "compression_ratio": 1.7028112449799198, "no_speech_prob": 1.473767315474106e-05}, {"id": 164, "seek": 48348, "start": 494.88, "end": 498.56, "text": " skip computing the statistics from time to time, for example.", "tokens": [10023, 15866, 264, 12523, 490, 565, 281, 565, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.11687163344952238, "compression_ratio": 1.7028112449799198, "no_speech_prob": 1.473767315474106e-05}, {"id": 165, "seek": 48348, "start": 498.56, "end": 502.68, "text": " We want to create highly flexible on GPU augmentation", "tokens": [492, 528, 281, 1884, 5405, 11358, 322, 18407, 14501, 19631], "temperature": 0.0, "avg_logprob": -0.11687163344952238, "compression_ratio": 1.7028112449799198, "no_speech_prob": 1.473767315474106e-05}, {"id": 166, "seek": 48348, "start": 502.68, "end": 503.68, "text": " systems.", "tokens": [3652, 13], "temperature": 0.0, "avg_logprob": -0.11687163344952238, "compression_ratio": 1.7028112449799198, "no_speech_prob": 1.473767315474106e-05}, {"id": 167, "seek": 48348, "start": 503.68, "end": 505.68, "text": " And we can do all these things in PyTorch,", "tokens": [400, 321, 393, 360, 439, 613, 721, 294, 9953, 51, 284, 339, 11], "temperature": 0.0, "avg_logprob": -0.11687163344952238, "compression_ratio": 1.7028112449799198, "no_speech_prob": 1.473767315474106e-05}, {"id": 168, "seek": 48348, "start": 505.68, "end": 511.04, "text": " but they're slow enough that we kind of tend to choose not to.", "tokens": [457, 436, 434, 2964, 1547, 300, 321, 733, 295, 3928, 281, 2826, 406, 281, 13], "temperature": 0.0, "avg_logprob": -0.11687163344952238, "compression_ratio": 1.7028112449799198, "no_speech_prob": 1.473767315474106e-05}, {"id": 169, "seek": 48348, "start": 511.04, "end": 512.96, "text": " So we're hitting the limits.", "tokens": [407, 321, 434, 8850, 264, 10406, 13], "temperature": 0.0, "avg_logprob": -0.11687163344952238, "compression_ratio": 1.7028112449799198, "no_speech_prob": 1.473767315474106e-05}, {"id": 170, "seek": 51296, "start": 512.96, "end": 515.52, "text": " So we actually need to do something else.", "tokens": [407, 321, 767, 643, 281, 360, 746, 1646, 13], "temperature": 0.0, "avg_logprob": -0.09810962152043613, "compression_ratio": 1.572549019607843, "no_speech_prob": 8.93887863639975e-06}, {"id": 171, "seek": 51296, "start": 515.52, "end": 518.72, "text": " So we need to start building the next thing.", "tokens": [407, 321, 643, 281, 722, 2390, 264, 958, 551, 13], "temperature": 0.0, "avg_logprob": -0.09810962152043613, "compression_ratio": 1.572549019607843, "no_speech_prob": 8.93887863639975e-06}, {"id": 172, "seek": 51296, "start": 518.72, "end": 522.2, "text": " And we were very lucky, again, that Swift for TensorFlow", "tokens": [400, 321, 645, 588, 6356, 11, 797, 11, 300, 25539, 337, 37624], "temperature": 0.0, "avg_logprob": -0.09810962152043613, "compression_ratio": 1.572549019607843, "no_speech_prob": 8.93887863639975e-06}, {"id": 173, "seek": 51296, "start": 522.2, "end": 524.2, "text": " appeared at just the right time.", "tokens": [8516, 412, 445, 264, 558, 565, 13], "temperature": 0.0, "avg_logprob": -0.09810962152043613, "compression_ratio": 1.572549019607843, "no_speech_prob": 8.93887863639975e-06}, {"id": 174, "seek": 51296, "start": 524.2, "end": 528.44, "text": " The second thing I'll mention is that not only will this not", "tokens": [440, 1150, 551, 286, 603, 2152, 307, 300, 406, 787, 486, 341, 406], "temperature": 0.0, "avg_logprob": -0.09810962152043613, "compression_ratio": 1.572549019607843, "no_speech_prob": 8.93887863639975e-06}, {"id": 175, "seek": 51296, "start": 528.44, "end": 531.72, "text": " hurt Fast AI for PyTorch, but I'm", "tokens": [4607, 15968, 7318, 337, 9953, 51, 284, 339, 11, 457, 286, 478], "temperature": 0.0, "avg_logprob": -0.09810962152043613, "compression_ratio": 1.572549019607843, "no_speech_prob": 8.93887863639975e-06}, {"id": 176, "seek": 51296, "start": 531.72, "end": 533.9200000000001, "text": " confident it will make it better.", "tokens": [6679, 309, 486, 652, 309, 1101, 13], "temperature": 0.0, "avg_logprob": -0.09810962152043613, "compression_ratio": 1.572549019607843, "no_speech_prob": 8.93887863639975e-06}, {"id": 177, "seek": 51296, "start": 533.9200000000001, "end": 536.8000000000001, "text": " I find that when I work with new programming", "tokens": [286, 915, 300, 562, 286, 589, 365, 777, 9410], "temperature": 0.0, "avg_logprob": -0.09810962152043613, "compression_ratio": 1.572549019607843, "no_speech_prob": 8.93887863639975e-06}, {"id": 178, "seek": 51296, "start": 536.8000000000001, "end": 542.1600000000001, "text": " languages in new environments, I learn new things.", "tokens": [8650, 294, 777, 12388, 11, 286, 1466, 777, 721, 13], "temperature": 0.0, "avg_logprob": -0.09810962152043613, "compression_ratio": 1.572549019607843, "no_speech_prob": 8.93887863639975e-06}, {"id": 179, "seek": 54216, "start": 542.16, "end": 543.7199999999999, "text": " And I become a better developer.", "tokens": [400, 286, 1813, 257, 1101, 10754, 13], "temperature": 0.0, "avg_logprob": -0.20621696172976026, "compression_ratio": 1.4564315352697095, "no_speech_prob": 1.643838913878426e-05}, {"id": 180, "seek": 54216, "start": 543.7199999999999, "end": 545.52, "text": " And we're already coming up with ideas", "tokens": [400, 321, 434, 1217, 1348, 493, 365, 3487], "temperature": 0.0, "avg_logprob": -0.20621696172976026, "compression_ratio": 1.4564315352697095, "no_speech_prob": 1.643838913878426e-05}, {"id": 181, "seek": 54216, "start": 545.52, "end": 548.6, "text": " that's going to help us to actually make Fast AI for Python", "tokens": [300, 311, 516, 281, 854, 505, 281, 767, 652, 15968, 7318, 337, 15329], "temperature": 0.0, "avg_logprob": -0.20621696172976026, "compression_ratio": 1.4564315352697095, "no_speech_prob": 1.643838913878426e-05}, {"id": 182, "seek": 54216, "start": 548.6, "end": 549.36, "text": " better.", "tokens": [1101, 13], "temperature": 0.0, "avg_logprob": -0.20621696172976026, "compression_ratio": 1.4564315352697095, "no_speech_prob": 1.643838913878426e-05}, {"id": 183, "seek": 54216, "start": 549.36, "end": 550.4399999999999, "text": " You have a question, Rachel?", "tokens": [509, 362, 257, 1168, 11, 14246, 30], "temperature": 0.0, "avg_logprob": -0.20621696172976026, "compression_ratio": 1.4564315352697095, "no_speech_prob": 1.643838913878426e-05}, {"id": 184, "seek": 54216, "start": 550.4399999999999, "end": 551.3199999999999, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.20621696172976026, "compression_ratio": 1.4564315352697095, "no_speech_prob": 1.643838913878426e-05}, {"id": 185, "seek": 54216, "start": 551.3199999999999, "end": 553.9599999999999, "text": " Why has Fast AI chosen Swift over Julia?", "tokens": [1545, 575, 15968, 7318, 8614, 25539, 670, 18551, 30], "temperature": 0.0, "avg_logprob": -0.20621696172976026, "compression_ratio": 1.4564315352697095, "no_speech_prob": 1.643838913878426e-05}, {"id": 186, "seek": 54216, "start": 557.8, "end": 561.4, "text": " Well, because it's impractical deep learning for coders.", "tokens": [1042, 11, 570, 309, 311, 704, 1897, 804, 2452, 2539, 337, 17656, 433, 13], "temperature": 0.0, "avg_logprob": -0.20621696172976026, "compression_ratio": 1.4564315352697095, "no_speech_prob": 1.643838913878426e-05}, {"id": 187, "seek": 54216, "start": 561.4, "end": 564.3199999999999, "text": " And Julia is far too mature for such a thing.", "tokens": [400, 18551, 307, 1400, 886, 14442, 337, 1270, 257, 551, 13], "temperature": 0.0, "avg_logprob": -0.20621696172976026, "compression_ratio": 1.4564315352697095, "no_speech_prob": 1.643838913878426e-05}, {"id": 188, "seek": 54216, "start": 568.1999999999999, "end": 570.0799999999999, "text": " They would both be great choices.", "tokens": [814, 576, 1293, 312, 869, 7994, 13], "temperature": 0.0, "avg_logprob": -0.20621696172976026, "compression_ratio": 1.4564315352697095, "no_speech_prob": 1.643838913878426e-05}, {"id": 189, "seek": 57008, "start": 570.08, "end": 573.1600000000001, "text": " But a lot of it is just for me personally.", "tokens": [583, 257, 688, 295, 309, 307, 445, 337, 385, 5665, 13], "temperature": 0.0, "avg_logprob": -0.14225589719593015, "compression_ratio": 1.6902985074626866, "no_speech_prob": 1.7498752640676685e-05}, {"id": 190, "seek": 57008, "start": 573.1600000000001, "end": 575.44, "text": " I'm really interested in getting involved in something", "tokens": [286, 478, 534, 3102, 294, 1242, 3288, 294, 746], "temperature": 0.0, "avg_logprob": -0.14225589719593015, "compression_ratio": 1.6902985074626866, "no_speech_prob": 1.7498752640676685e-05}, {"id": 191, "seek": 57008, "start": 575.44, "end": 578.44, "text": " that has a huge amount of potential,", "tokens": [300, 575, 257, 2603, 2372, 295, 3995, 11], "temperature": 0.0, "avg_logprob": -0.14225589719593015, "compression_ratio": 1.6902985074626866, "no_speech_prob": 1.7498752640676685e-05}, {"id": 192, "seek": 57008, "start": 578.44, "end": 581.08, "text": " but a little bit earlier so I can help guide it.", "tokens": [457, 257, 707, 857, 3071, 370, 286, 393, 854, 5934, 309, 13], "temperature": 0.0, "avg_logprob": -0.14225589719593015, "compression_ratio": 1.6902985074626866, "no_speech_prob": 1.7498752640676685e-05}, {"id": 193, "seek": 57008, "start": 581.08, "end": 582.72, "text": " I feel like I can be more part of it.", "tokens": [286, 841, 411, 286, 393, 312, 544, 644, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.14225589719593015, "compression_ratio": 1.6902985074626866, "no_speech_prob": 1.7498752640676685e-05}, {"id": 194, "seek": 57008, "start": 582.72, "end": 585.6800000000001, "text": " I wanted to create something for our student community", "tokens": [286, 1415, 281, 1884, 746, 337, 527, 3107, 1768], "temperature": 0.0, "avg_logprob": -0.14225589719593015, "compression_ratio": 1.6902985074626866, "no_speech_prob": 1.7498752640676685e-05}, {"id": 195, "seek": 57008, "start": 585.6800000000001, "end": 589.08, "text": " and our practitioner community where we could all", "tokens": [293, 527, 32125, 1768, 689, 321, 727, 439], "temperature": 0.0, "avg_logprob": -0.14225589719593015, "compression_ratio": 1.6902985074626866, "no_speech_prob": 1.7498752640676685e-05}, {"id": 196, "seek": 57008, "start": 589.08, "end": 593.72, "text": " help be part of that guiding and development process.", "tokens": [854, 312, 644, 295, 300, 25061, 293, 3250, 1399, 13], "temperature": 0.0, "avg_logprob": -0.14225589719593015, "compression_ratio": 1.6902985074626866, "no_speech_prob": 1.7498752640676685e-05}, {"id": 197, "seek": 57008, "start": 593.72, "end": 596.32, "text": " So that's one reason.", "tokens": [407, 300, 311, 472, 1778, 13], "temperature": 0.0, "avg_logprob": -0.14225589719593015, "compression_ratio": 1.6902985074626866, "no_speech_prob": 1.7498752640676685e-05}, {"id": 198, "seek": 57008, "start": 596.32, "end": 600.0, "text": " Second reason is it's not just about the language,", "tokens": [5736, 1778, 307, 309, 311, 406, 445, 466, 264, 2856, 11], "temperature": 0.0, "avg_logprob": -0.14225589719593015, "compression_ratio": 1.6902985074626866, "no_speech_prob": 1.7498752640676685e-05}, {"id": 199, "seek": 60000, "start": 600.0, "end": 601.56, "text": " but it's about who's using it.", "tokens": [457, 309, 311, 466, 567, 311, 1228, 309, 13], "temperature": 0.0, "avg_logprob": -0.10358148888696599, "compression_ratio": 1.5513513513513513, "no_speech_prob": 1.3210251381678972e-05}, {"id": 200, "seek": 60000, "start": 601.56, "end": 607.0, "text": " And Julia doesn't quite have that big customer that really", "tokens": [400, 18551, 1177, 380, 1596, 362, 300, 955, 5474, 300, 534], "temperature": 0.0, "avg_logprob": -0.10358148888696599, "compression_ratio": 1.5513513513513513, "no_speech_prob": 1.3210251381678972e-05}, {"id": 201, "seek": 60000, "start": 607.0, "end": 613.08, "text": " makes sure that it goes from quite good to huge.", "tokens": [1669, 988, 300, 309, 1709, 490, 1596, 665, 281, 2603, 13], "temperature": 0.0, "avg_logprob": -0.10358148888696599, "compression_ratio": 1.5513513513513513, "no_speech_prob": 1.3210251381678972e-05}, {"id": 202, "seek": 60000, "start": 613.08, "end": 617.28, "text": " Whereas Swift for TensorFlow has Google.", "tokens": [13813, 25539, 337, 37624, 575, 3329, 13], "temperature": 0.0, "avg_logprob": -0.10358148888696599, "compression_ratio": 1.5513513513513513, "no_speech_prob": 1.3210251381678972e-05}, {"id": 203, "seek": 60000, "start": 617.28, "end": 620.16, "text": " And so Google needs it to work.", "tokens": [400, 370, 3329, 2203, 309, 281, 589, 13], "temperature": 0.0, "avg_logprob": -0.10358148888696599, "compression_ratio": 1.5513513513513513, "no_speech_prob": 1.3210251381678972e-05}, {"id": 204, "seek": 60000, "start": 620.16, "end": 622.36, "text": " Google needs it to be hugely successful.", "tokens": [3329, 2203, 309, 281, 312, 27417, 4406, 13], "temperature": 0.0, "avg_logprob": -0.10358148888696599, "compression_ratio": 1.5513513513513513, "no_speech_prob": 1.3210251381678972e-05}, {"id": 205, "seek": 60000, "start": 622.36, "end": 626.12, "text": " So I feel that that's really good.", "tokens": [407, 286, 841, 300, 300, 311, 534, 665, 13], "temperature": 0.0, "avg_logprob": -0.10358148888696599, "compression_ratio": 1.5513513513513513, "no_speech_prob": 1.3210251381678972e-05}, {"id": 206, "seek": 62612, "start": 626.12, "end": 632.08, "text": " I also feel like the stuff that I've talked to Chris Latner", "tokens": [286, 611, 841, 411, 264, 1507, 300, 286, 600, 2825, 281, 6688, 7354, 1193], "temperature": 0.0, "avg_logprob": -0.10877923205890487, "compression_ratio": 1.7264957264957266, "no_speech_prob": 2.368568857491482e-06}, {"id": 207, "seek": 62612, "start": 632.08, "end": 638.68, "text": " about as to what's next for Swift goes beyond the stuff", "tokens": [466, 382, 281, 437, 311, 958, 337, 25539, 1709, 4399, 264, 1507], "temperature": 0.0, "avg_logprob": -0.10877923205890487, "compression_ratio": 1.7264957264957266, "no_speech_prob": 2.368568857491482e-06}, {"id": 208, "seek": 62612, "start": 638.68, "end": 641.6, "text": " I've talked to the Julia core team about what they're doing.", "tokens": [286, 600, 2825, 281, 264, 18551, 4965, 1469, 466, 437, 436, 434, 884, 13], "temperature": 0.0, "avg_logprob": -0.10877923205890487, "compression_ratio": 1.7264957264957266, "no_speech_prob": 2.368568857491482e-06}, {"id": 209, "seek": 62612, "start": 641.6, "end": 644.88, "text": " And so to be clear, I've sat down with many of the Julia", "tokens": [400, 370, 281, 312, 1850, 11, 286, 600, 3227, 760, 365, 867, 295, 264, 18551], "temperature": 0.0, "avg_logprob": -0.10877923205890487, "compression_ratio": 1.7264957264957266, "no_speech_prob": 2.368568857491482e-06}, {"id": 210, "seek": 62612, "start": 644.88, "end": 645.96, "text": " founding team members.", "tokens": [22223, 1469, 2679, 13], "temperature": 0.0, "avg_logprob": -0.10877923205890487, "compression_ratio": 1.7264957264957266, "no_speech_prob": 2.368568857491482e-06}, {"id": 211, "seek": 62612, "start": 645.96, "end": 647.32, "text": " And I think they're amazing.", "tokens": [400, 286, 519, 436, 434, 2243, 13], "temperature": 0.0, "avg_logprob": -0.10877923205890487, "compression_ratio": 1.7264957264957266, "no_speech_prob": 2.368568857491482e-06}, {"id": 212, "seek": 62612, "start": 647.32, "end": 650.52, "text": " And I hope I get to spend to have time hacking stuff", "tokens": [400, 286, 1454, 286, 483, 281, 3496, 281, 362, 565, 31422, 1507], "temperature": 0.0, "avg_logprob": -0.10877923205890487, "compression_ratio": 1.7264957264957266, "no_speech_prob": 2.368568857491482e-06}, {"id": 213, "seek": 62612, "start": 650.52, "end": 651.6800000000001, "text": " with them too.", "tokens": [365, 552, 886, 13], "temperature": 0.0, "avg_logprob": -0.10877923205890487, "compression_ratio": 1.7264957264957266, "no_speech_prob": 2.368568857491482e-06}, {"id": 214, "seek": 62612, "start": 651.6800000000001, "end": 655.92, "text": " But I feel like the place we're heading with Swift", "tokens": [583, 286, 841, 411, 264, 1081, 321, 434, 9864, 365, 25539], "temperature": 0.0, "avg_logprob": -0.10877923205890487, "compression_ratio": 1.7264957264957266, "no_speech_prob": 2.368568857491482e-06}, {"id": 215, "seek": 65592, "start": 655.92, "end": 659.88, "text": " is another level again, as you'll see.", "tokens": [307, 1071, 1496, 797, 11, 382, 291, 603, 536, 13], "temperature": 0.0, "avg_logprob": -0.13097798382794415, "compression_ratio": 1.461139896373057, "no_speech_prob": 5.421383320936002e-06}, {"id": 216, "seek": 65592, "start": 659.88, "end": 663.28, "text": " But I definitely would not say to anybody,", "tokens": [583, 286, 2138, 576, 406, 584, 281, 4472, 11], "temperature": 0.0, "avg_logprob": -0.13097798382794415, "compression_ratio": 1.461139896373057, "no_speech_prob": 5.421383320936002e-06}, {"id": 217, "seek": 65592, "start": 663.28, "end": 664.3199999999999, "text": " don't touch Julia.", "tokens": [500, 380, 2557, 18551, 13], "temperature": 0.0, "avg_logprob": -0.13097798382794415, "compression_ratio": 1.461139896373057, "no_speech_prob": 5.421383320936002e-06}, {"id": 218, "seek": 65592, "start": 664.3199999999999, "end": 667.0799999999999, "text": " I've actually sent invites to the forum", "tokens": [286, 600, 767, 2279, 35719, 281, 264, 17542], "temperature": 0.0, "avg_logprob": -0.13097798382794415, "compression_ratio": 1.461139896373057, "no_speech_prob": 5.421383320936002e-06}, {"id": 219, "seek": 65592, "start": 667.0799999999999, "end": 671.88, "text": " to a large number of the Julia developers at their request", "tokens": [281, 257, 2416, 1230, 295, 264, 18551, 8849, 412, 641, 5308], "temperature": 0.0, "avg_logprob": -0.13097798382794415, "compression_ratio": 1.461139896373057, "no_speech_prob": 5.421383320936002e-06}, {"id": 220, "seek": 65592, "start": 671.88, "end": 676.12, "text": " to say, why don't you build fast AI with us for Julia too?", "tokens": [281, 584, 11, 983, 500, 380, 291, 1322, 2370, 7318, 365, 505, 337, 18551, 886, 30], "temperature": 0.0, "avg_logprob": -0.13097798382794415, "compression_ratio": 1.461139896373057, "no_speech_prob": 5.421383320936002e-06}, {"id": 221, "seek": 65592, "start": 676.12, "end": 677.4399999999999, "text": " So I hope that happens.", "tokens": [407, 286, 1454, 300, 2314, 13], "temperature": 0.0, "avg_logprob": -0.13097798382794415, "compression_ratio": 1.461139896373057, "no_speech_prob": 5.421383320936002e-06}, {"id": 222, "seek": 67744, "start": 677.44, "end": 683.24, "text": " Perhaps another question is, why not Python?", "tokens": [10517, 1071, 1168, 307, 11, 983, 406, 15329, 30], "temperature": 0.0, "avg_logprob": -0.2979673952669711, "compression_ratio": 1.4585635359116023, "no_speech_prob": 1.0449512956256513e-05}, {"id": 223, "seek": 67744, "start": 689.24, "end": 692.24, "text": " And for most people, the answer to the question of what", "tokens": [400, 337, 881, 561, 11, 264, 1867, 281, 264, 1168, 295, 437], "temperature": 0.0, "avg_logprob": -0.2979673952669711, "compression_ratio": 1.4585635359116023, "no_speech_prob": 1.0449512956256513e-05}, {"id": 224, "seek": 67744, "start": 692.24, "end": 697.2800000000001, "text": " do we do next is, given we're using Python,", "tokens": [360, 321, 360, 958, 307, 11, 2212, 321, 434, 1228, 15329, 11], "temperature": 0.0, "avg_logprob": -0.2979673952669711, "compression_ratio": 1.4585635359116023, "no_speech_prob": 1.0449512956256513e-05}, {"id": 225, "seek": 67744, "start": 697.2800000000001, "end": 699.48, "text": " we fix the problems in certain ways.", "tokens": [321, 3191, 264, 2740, 294, 1629, 2098, 13], "temperature": 0.0, "avg_logprob": -0.2979673952669711, "compression_ratio": 1.4585635359116023, "no_speech_prob": 1.0449512956256513e-05}, {"id": 226, "seek": 67744, "start": 699.48, "end": 701.2, "text": " So for example, in the TensorFlow world,", "tokens": [407, 337, 1365, 11, 294, 264, 37624, 1002, 11], "temperature": 0.0, "avg_logprob": -0.2979673952669711, "compression_ratio": 1.4585635359116023, "no_speech_prob": 1.0449512956256513e-05}, {"id": 227, "seek": 67744, "start": 701.2, "end": 703.7600000000001, "text": " they're creating things like tf.function,", "tokens": [436, 434, 4084, 721, 411, 256, 69, 13, 22845, 11], "temperature": 0.0, "avg_logprob": -0.2979673952669711, "compression_ratio": 1.4585635359116023, "no_speech_prob": 1.0449512956256513e-05}, {"id": 228, "seek": 70376, "start": 703.76, "end": 707.6, "text": " which is kind of like allows them to connect up Python", "tokens": [597, 307, 733, 295, 411, 4045, 552, 281, 1745, 493, 15329], "temperature": 0.0, "avg_logprob": -0.19845313255232994, "compression_ratio": 1.4866071428571428, "no_speech_prob": 1.5443356460309587e-05}, {"id": 229, "seek": 70376, "start": 707.6, "end": 711.6, "text": " to the whole XLA environment, which you'll learn about.", "tokens": [281, 264, 1379, 1783, 11435, 2823, 11, 597, 291, 603, 1466, 466, 13], "temperature": 0.0, "avg_logprob": -0.19845313255232994, "compression_ratio": 1.4866071428571428, "no_speech_prob": 1.5443356460309587e-05}, {"id": 230, "seek": 70376, "start": 711.6, "end": 719.16, "text": " In PyTorch, they're using JIT to kind of turn Python into C++.", "tokens": [682, 9953, 51, 284, 339, 11, 436, 434, 1228, 508, 3927, 281, 733, 295, 1261, 15329, 666, 383, 25472, 13], "temperature": 0.0, "avg_logprob": -0.19845313255232994, "compression_ratio": 1.4866071428571428, "no_speech_prob": 1.5443356460309587e-05}, {"id": 231, "seek": 70376, "start": 719.16, "end": 720.36, "text": " Why aren't we doing this?", "tokens": [1545, 3212, 380, 321, 884, 341, 30], "temperature": 0.0, "avg_logprob": -0.19845313255232994, "compression_ratio": 1.4866071428571428, "no_speech_prob": 1.5443356460309587e-05}, {"id": 232, "seek": 70376, "start": 720.36, "end": 725.08, "text": " Why aren't we just do the best with what we have?", "tokens": [1545, 3212, 380, 321, 445, 360, 264, 1151, 365, 437, 321, 362, 30], "temperature": 0.0, "avg_logprob": -0.19845313255232994, "compression_ratio": 1.4866071428571428, "no_speech_prob": 1.5443356460309587e-05}, {"id": 233, "seek": 70376, "start": 725.08, "end": 727.72, "text": " Because Python, to be clear, has a fantastic ecosystem.", "tokens": [1436, 15329, 11, 281, 312, 1850, 11, 575, 257, 5456, 11311, 13], "temperature": 0.0, "avg_logprob": -0.19845313255232994, "compression_ratio": 1.4866071428571428, "no_speech_prob": 1.5443356460309587e-05}, {"id": 234, "seek": 70376, "start": 727.72, "end": 728.88, "text": " And we already all know it.", "tokens": [400, 321, 1217, 439, 458, 309, 13], "temperature": 0.0, "avg_logprob": -0.19845313255232994, "compression_ratio": 1.4866071428571428, "no_speech_prob": 1.5443356460309587e-05}, {"id": 235, "seek": 72888, "start": 728.88, "end": 729.88, "text": " We all know it.", "tokens": [492, 439, 458, 309, 13], "temperature": 0.0, "avg_logprob": -0.16438355396703347, "compression_ratio": 1.6531531531531531, "no_speech_prob": 1.0613373888190836e-05}, {"id": 236, "seek": 72888, "start": 729.88, "end": 737.28, "text": " And it kind of seems crazy to throw that all away.", "tokens": [400, 309, 733, 295, 2544, 3219, 281, 3507, 300, 439, 1314, 13], "temperature": 0.0, "avg_logprob": -0.16438355396703347, "compression_ratio": 1.6531531531531531, "no_speech_prob": 1.0613373888190836e-05}, {"id": 237, "seek": 72888, "start": 737.28, "end": 740.2, "text": " I think you'll see the answer to this question", "tokens": [286, 519, 291, 603, 536, 264, 1867, 281, 341, 1168], "temperature": 0.0, "avg_logprob": -0.16438355396703347, "compression_ratio": 1.6531531531531531, "no_speech_prob": 1.0613373888190836e-05}, {"id": 238, "seek": 72888, "start": 740.2, "end": 741.56, "text": " in the next two weeks.", "tokens": [294, 264, 958, 732, 3259, 13], "temperature": 0.0, "avg_logprob": -0.16438355396703347, "compression_ratio": 1.6531531531531531, "no_speech_prob": 1.0613373888190836e-05}, {"id": 239, "seek": 72888, "start": 741.56, "end": 745.96, "text": " But basically, it turns out, I'm pretty sure,", "tokens": [583, 1936, 11, 309, 4523, 484, 11, 286, 478, 1238, 988, 11], "temperature": 0.0, "avg_logprob": -0.16438355396703347, "compression_ratio": 1.6531531531531531, "no_speech_prob": 1.0613373888190836e-05}, {"id": 240, "seek": 72888, "start": 745.96, "end": 750.24, "text": " that it's easier to pick the right language and compilation", "tokens": [300, 309, 311, 3571, 281, 1888, 264, 558, 2856, 293, 40261], "temperature": 0.0, "avg_logprob": -0.16438355396703347, "compression_ratio": 1.6531531531531531, "no_speech_prob": 1.0613373888190836e-05}, {"id": 241, "seek": 72888, "start": 750.24, "end": 755.52, "text": " environment and write everything else on top of it from scratch", "tokens": [2823, 293, 2464, 1203, 1646, 322, 1192, 295, 309, 490, 8459], "temperature": 0.0, "avg_logprob": -0.16438355396703347, "compression_ratio": 1.6531531531531531, "no_speech_prob": 1.0613373888190836e-05}, {"id": 242, "seek": 72888, "start": 755.52, "end": 758.68, "text": " than it is to write everything else on top of something that", "tokens": [813, 309, 307, 281, 2464, 1203, 1646, 322, 1192, 295, 746, 300], "temperature": 0.0, "avg_logprob": -0.16438355396703347, "compression_ratio": 1.6531531531531531, "no_speech_prob": 1.0613373888190836e-05}, {"id": 243, "seek": 75868, "start": 758.68, "end": 760.8, "text": " was not written for that in the first place,", "tokens": [390, 406, 3720, 337, 300, 294, 264, 700, 1081, 11], "temperature": 0.0, "avg_logprob": -0.10643555083364811, "compression_ratio": 1.6270491803278688, "no_speech_prob": 2.143888923455961e-05}, {"id": 244, "seek": 75868, "start": 760.8, "end": 764.04, "text": " and then try and madly patch up the thing underneath", "tokens": [293, 550, 853, 293, 5244, 356, 9972, 493, 264, 551, 7223], "temperature": 0.0, "avg_logprob": -0.10643555083364811, "compression_ratio": 1.6270491803278688, "no_speech_prob": 2.143888923455961e-05}, {"id": 245, "seek": 75868, "start": 764.04, "end": 766.3199999999999, "text": " to make it work.", "tokens": [281, 652, 309, 589, 13], "temperature": 0.0, "avg_logprob": -0.10643555083364811, "compression_ratio": 1.6270491803278688, "no_speech_prob": 2.143888923455961e-05}, {"id": 246, "seek": 75868, "start": 766.3199999999999, "end": 770.88, "text": " So things like the global interpreter lock,", "tokens": [407, 721, 411, 264, 4338, 34132, 4017, 11], "temperature": 0.0, "avg_logprob": -0.10643555083364811, "compression_ratio": 1.6270491803278688, "no_speech_prob": 2.143888923455961e-05}, {"id": 247, "seek": 75868, "start": 770.88, "end": 773.3599999999999, "text": " everything we're doing has to be massively parallel.", "tokens": [1203, 321, 434, 884, 575, 281, 312, 29379, 8952, 13], "temperature": 0.0, "avg_logprob": -0.10643555083364811, "compression_ratio": 1.6270491803278688, "no_speech_prob": 2.143888923455961e-05}, {"id": 248, "seek": 75868, "start": 773.3599999999999, "end": 777.04, "text": " But Python is written so that no two things can", "tokens": [583, 15329, 307, 3720, 370, 300, 572, 732, 721, 393], "temperature": 0.0, "avg_logprob": -0.10643555083364811, "compression_ratio": 1.6270491803278688, "no_speech_prob": 2.143888923455961e-05}, {"id": 249, "seek": 75868, "start": 777.04, "end": 779.1999999999999, "text": " happen at the same time.", "tokens": [1051, 412, 264, 912, 565, 13], "temperature": 0.0, "avg_logprob": -0.10643555083364811, "compression_ratio": 1.6270491803278688, "no_speech_prob": 2.143888923455961e-05}, {"id": 250, "seek": 75868, "start": 779.1999999999999, "end": 782.68, "text": " So these are things that are just incredibly, incredibly", "tokens": [407, 613, 366, 721, 300, 366, 445, 6252, 11, 6252], "temperature": 0.0, "avg_logprob": -0.10643555083364811, "compression_ratio": 1.6270491803278688, "no_speech_prob": 2.143888923455961e-05}, {"id": 251, "seek": 75868, "start": 782.68, "end": 784.8, "text": " hard to work around.", "tokens": [1152, 281, 589, 926, 13], "temperature": 0.0, "avg_logprob": -0.10643555083364811, "compression_ratio": 1.6270491803278688, "no_speech_prob": 2.143888923455961e-05}, {"id": 252, "seek": 75868, "start": 784.8, "end": 786.28, "text": " Whereas with Swift, as you'll see,", "tokens": [13813, 365, 25539, 11, 382, 291, 603, 536, 11], "temperature": 0.0, "avg_logprob": -0.10643555083364811, "compression_ratio": 1.6270491803278688, "no_speech_prob": 2.143888923455961e-05}, {"id": 253, "seek": 78628, "start": 786.28, "end": 790.24, "text": " it's like the things we want is how it's designed.", "tokens": [309, 311, 411, 264, 721, 321, 528, 307, 577, 309, 311, 4761, 13], "temperature": 0.0, "avg_logprob": -0.09912145137786865, "compression_ratio": 1.587962962962963, "no_speech_prob": 1.7229818695341237e-05}, {"id": 254, "seek": 78628, "start": 790.24, "end": 793.24, "text": " So why not Python?", "tokens": [407, 983, 406, 15329, 30], "temperature": 0.0, "avg_logprob": -0.09912145137786865, "compression_ratio": 1.587962962962963, "no_speech_prob": 1.7229818695341237e-05}, {"id": 255, "seek": 78628, "start": 793.24, "end": 800.0799999999999, "text": " Because we think that we can't keep going with Python.", "tokens": [1436, 321, 519, 300, 321, 393, 380, 1066, 516, 365, 15329, 13], "temperature": 0.0, "avg_logprob": -0.09912145137786865, "compression_ratio": 1.587962962962963, "no_speech_prob": 1.7229818695341237e-05}, {"id": 256, "seek": 78628, "start": 800.0799999999999, "end": 803.68, "text": " We were not the first people to think the existing languages", "tokens": [492, 645, 406, 264, 700, 561, 281, 519, 264, 6741, 8650], "temperature": 0.0, "avg_logprob": -0.09912145137786865, "compression_ratio": 1.587962962962963, "no_speech_prob": 1.7229818695341237e-05}, {"id": 257, "seek": 78628, "start": 803.68, "end": 806.12, "text": " are not good enough.", "tokens": [366, 406, 665, 1547, 13], "temperature": 0.0, "avg_logprob": -0.09912145137786865, "compression_ratio": 1.587962962962963, "no_speech_prob": 1.7229818695341237e-05}, {"id": 258, "seek": 78628, "start": 806.12, "end": 807.48, "text": " There's actually somebody else who", "tokens": [821, 311, 767, 2618, 1646, 567], "temperature": 0.0, "avg_logprob": -0.09912145137786865, "compression_ratio": 1.587962962962963, "no_speech_prob": 1.7229818695341237e-05}, {"id": 259, "seek": 78628, "start": 807.48, "end": 809.3199999999999, "text": " had that thought a few years ago.", "tokens": [632, 300, 1194, 257, 1326, 924, 2057, 13], "temperature": 0.0, "avg_logprob": -0.09912145137786865, "compression_ratio": 1.587962962962963, "no_speech_prob": 1.7229818695341237e-05}, {"id": 260, "seek": 78628, "start": 809.3199999999999, "end": 814.4, "text": " And he's so OCD that he actually decided", "tokens": [400, 415, 311, 370, 422, 16508, 300, 415, 767, 3047], "temperature": 0.0, "avg_logprob": -0.09912145137786865, "compression_ratio": 1.587962962962963, "no_speech_prob": 1.7229818695341237e-05}, {"id": 261, "seek": 78628, "start": 814.4, "end": 816.12, "text": " to write his own language.", "tokens": [281, 2464, 702, 1065, 2856, 13], "temperature": 0.0, "avg_logprob": -0.09912145137786865, "compression_ratio": 1.587962962962963, "no_speech_prob": 1.7229818695341237e-05}, {"id": 262, "seek": 81612, "start": 816.12, "end": 819.2, "text": " And he's so OCD that before that he wrote his own compiler,", "tokens": [400, 415, 311, 370, 422, 16508, 300, 949, 300, 415, 4114, 702, 1065, 31958, 11], "temperature": 0.0, "avg_logprob": -0.1399901591948349, "compression_ratio": 1.6124567474048443, "no_speech_prob": 2.1438618205138482e-05}, {"id": 263, "seek": 81612, "start": 819.2, "end": 821.28, "text": " because they weren't good enough either.", "tokens": [570, 436, 4999, 380, 665, 1547, 2139, 13], "temperature": 0.0, "avg_logprob": -0.1399901591948349, "compression_ratio": 1.6124567474048443, "no_speech_prob": 2.1438618205138482e-05}, {"id": 264, "seek": 81612, "start": 821.28, "end": 824.92, "text": " And so whilst it may be difficult to be around such an OCD person,", "tokens": [400, 370, 18534, 309, 815, 312, 2252, 281, 312, 926, 1270, 364, 422, 16508, 954, 11], "temperature": 0.0, "avg_logprob": -0.1399901591948349, "compression_ratio": 1.6124567474048443, "no_speech_prob": 2.1438618205138482e-05}, {"id": 265, "seek": 81612, "start": 824.92, "end": 827.0, "text": " we're all very thankful that these people exist,", "tokens": [321, 434, 439, 588, 13611, 300, 613, 561, 2514, 11], "temperature": 0.0, "avg_logprob": -0.1399901591948349, "compression_ratio": 1.6124567474048443, "no_speech_prob": 2.1438618205138482e-05}, {"id": 266, "seek": 81612, "start": 827.0, "end": 828.8, "text": " because they create the things we have.", "tokens": [570, 436, 1884, 264, 721, 321, 362, 13], "temperature": 0.0, "avg_logprob": -0.1399901591948349, "compression_ratio": 1.6124567474048443, "no_speech_prob": 2.1438618205138482e-05}, {"id": 267, "seek": 81612, "start": 828.8, "end": 830.52, "text": " Oh, and here's one now.", "tokens": [876, 11, 293, 510, 311, 472, 586, 13], "temperature": 0.0, "avg_logprob": -0.1399901591948349, "compression_ratio": 1.6124567474048443, "no_speech_prob": 2.1438618205138482e-05}, {"id": 268, "seek": 81612, "start": 830.52, "end": 834.0, "text": " Chris, tell us about why you did this crazy thing.", "tokens": [6688, 11, 980, 505, 466, 983, 291, 630, 341, 3219, 551, 13], "temperature": 0.0, "avg_logprob": -0.1399901591948349, "compression_ratio": 1.6124567474048443, "no_speech_prob": 2.1438618205138482e-05}, {"id": 269, "seek": 81612, "start": 834.0, "end": 836.92, "text": " Thanks, Jeremy.", "tokens": [2561, 11, 17809, 13], "temperature": 0.0, "avg_logprob": -0.1399901591948349, "compression_ratio": 1.6124567474048443, "no_speech_prob": 2.1438618205138482e-05}, {"id": 270, "seek": 81612, "start": 836.92, "end": 840.28, "text": " I'm not the only crazy one, as you know.", "tokens": [286, 478, 406, 264, 787, 3219, 472, 11, 382, 291, 458, 13], "temperature": 0.0, "avg_logprob": -0.1399901591948349, "compression_ratio": 1.6124567474048443, "no_speech_prob": 2.1438618205138482e-05}, {"id": 271, "seek": 81612, "start": 840.28, "end": 842.6800000000001, "text": " So let's talk about what Swift is.", "tokens": [407, 718, 311, 751, 466, 437, 25539, 307, 13], "temperature": 0.0, "avg_logprob": -0.1399901591948349, "compression_ratio": 1.6124567474048443, "no_speech_prob": 2.1438618205138482e-05}, {"id": 272, "seek": 81612, "start": 842.6800000000001, "end": 844.96, "text": " And then we'll kind of go very high level,", "tokens": [400, 550, 321, 603, 733, 295, 352, 588, 1090, 1496, 11], "temperature": 0.0, "avg_logprob": -0.1399901591948349, "compression_ratio": 1.6124567474048443, "no_speech_prob": 2.1438618205138482e-05}, {"id": 273, "seek": 84496, "start": 844.96, "end": 847.2800000000001, "text": " and then we'll get down in the bits.", "tokens": [293, 550, 321, 603, 483, 760, 294, 264, 9239, 13], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 274, "seek": 84496, "start": 847.2800000000001, "end": 849.36, "text": " So Swift is a lot of different things.", "tokens": [407, 25539, 307, 257, 688, 295, 819, 721, 13], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 275, "seek": 84496, "start": 849.36, "end": 850.6800000000001, "text": " It's a programming language.", "tokens": [467, 311, 257, 9410, 2856, 13], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 276, "seek": 84496, "start": 850.6800000000001, "end": 853.08, "text": " If you go ask the marketing people what it is,", "tokens": [759, 291, 352, 1029, 264, 6370, 561, 437, 309, 307, 11], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 277, "seek": 84496, "start": 853.08, "end": 854.88, "text": " they say things like, Swift defines away", "tokens": [436, 584, 721, 411, 11, 25539, 23122, 1314], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 278, "seek": 84496, "start": 854.88, "end": 857.08, "text": " large classes of errors in programs.", "tokens": [2416, 5359, 295, 13603, 294, 4268, 13], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 279, "seek": 84496, "start": 857.08, "end": 858.64, "text": " It talks about how fast it is.", "tokens": [467, 6686, 466, 577, 2370, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 280, "seek": 84496, "start": 858.64, "end": 861.76, "text": " And it's optimized to get the most out of modern hardware.", "tokens": [400, 309, 311, 26941, 281, 483, 264, 881, 484, 295, 4363, 8837, 13], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 281, "seek": 84496, "start": 861.76, "end": 864.9200000000001, "text": " I think another aspect of it is that Swift is really ambitious.", "tokens": [286, 519, 1071, 4171, 295, 309, 307, 300, 25539, 307, 534, 20239, 13], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 282, "seek": 84496, "start": 864.9200000000001, "end": 866.84, "text": " And that is something that I think", "tokens": [400, 300, 307, 746, 300, 286, 519], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 283, "seek": 84496, "start": 866.84, "end": 869.96, "text": " you'll see over the next two lessons, where", "tokens": [291, 603, 536, 670, 264, 958, 732, 8820, 11, 689], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 284, "seek": 84496, "start": 869.96, "end": 873.96, "text": " Swift isn't just about solving a niche problem.", "tokens": [25539, 1943, 380, 445, 466, 12606, 257, 19956, 1154, 13], "temperature": 0.0, "avg_logprob": -0.10606322772261026, "compression_ratio": 1.7346938775510203, "no_speech_prob": 1.3842016414855607e-05}, {"id": 285, "seek": 87396, "start": 873.96, "end": 876.72, "text": " It was not about, like, let's make iOS a little bit better.", "tokens": [467, 390, 406, 466, 11, 411, 11, 718, 311, 652, 17430, 257, 707, 857, 1101, 13], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 286, "seek": 87396, "start": 876.72, "end": 880.0400000000001, "text": " Swift was conceived as a full stack programming language", "tokens": [25539, 390, 34898, 382, 257, 1577, 8630, 9410, 2856], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 287, "seek": 87396, "start": 880.0400000000001, "end": 881.96, "text": " that goes all the way from scripting down", "tokens": [300, 1709, 439, 264, 636, 490, 5755, 278, 760], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 288, "seek": 87396, "start": 881.96, "end": 883.52, "text": " to low level systems programming.", "tokens": [281, 2295, 1496, 3652, 9410, 13], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 289, "seek": 87396, "start": 883.52, "end": 885.2, "text": " So you can write boot loaders in it.", "tokens": [407, 291, 393, 2464, 11450, 3677, 433, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 290, "seek": 87396, "start": 885.2, "end": 886.96, "text": " Now, this is crazy.", "tokens": [823, 11, 341, 307, 3219, 13], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 291, "seek": 87396, "start": 886.96, "end": 888.32, "text": " I'm not aware of any other language", "tokens": [286, 478, 406, 3650, 295, 604, 661, 2856], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 292, "seek": 87396, "start": 888.32, "end": 891.0400000000001, "text": " that's actually set out from the start to do that.", "tokens": [300, 311, 767, 992, 484, 490, 264, 722, 281, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 293, "seek": 87396, "start": 891.0400000000001, "end": 893.64, "text": " But that's one of the reasons why it becomes really interesting", "tokens": [583, 300, 311, 472, 295, 264, 4112, 983, 309, 3643, 534, 1880], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 294, "seek": 87396, "start": 893.64, "end": 896.36, "text": " and really good for this domain, because you want very high level", "tokens": [293, 534, 665, 337, 341, 9274, 11, 570, 291, 528, 588, 1090, 1496], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 295, "seek": 87396, "start": 896.36, "end": 899.48, "text": " programming abstractions and a very nice and easy to use", "tokens": [9410, 12649, 626, 293, 257, 588, 1481, 293, 1858, 281, 764], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 296, "seek": 87396, "start": 899.48, "end": 900.96, "text": " way of working with the language.", "tokens": [636, 295, 1364, 365, 264, 2856, 13], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 297, "seek": 87396, "start": 900.96, "end": 903.08, "text": " But you also want the ability to go down to the metal", "tokens": [583, 291, 611, 528, 264, 3485, 281, 352, 760, 281, 264, 5760], "temperature": 0.0, "avg_logprob": -0.13777683665917353, "compression_ratio": 1.7761627906976745, "no_speech_prob": 2.4679588022991084e-05}, {"id": 298, "seek": 90308, "start": 903.08, "end": 905.32, "text": " in the rare cases you need to.", "tokens": [294, 264, 5892, 3331, 291, 643, 281, 13], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 299, "seek": 90308, "start": 905.32, "end": 906.96, "text": " So there's some random guy on the internet", "tokens": [407, 456, 311, 512, 4974, 2146, 322, 264, 4705], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 300, "seek": 90308, "start": 906.96, "end": 908.5200000000001, "text": " that wrote a blog post about this.", "tokens": [300, 4114, 257, 6968, 2183, 466, 341, 13], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 301, "seek": 90308, "start": 908.5200000000001, "end": 910.6, "text": " I highly recommend that.", "tokens": [286, 5405, 2748, 300, 13], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 302, "seek": 90308, "start": 910.6, "end": 914.9200000000001, "text": " One of the things that he says is that it's the interesting thing", "tokens": [1485, 295, 264, 721, 300, 415, 1619, 307, 300, 309, 311, 264, 1880, 551], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 303, "seek": 90308, "start": 914.9200000000001, "end": 919.1600000000001, "text": " about Swift is that you get expressivity, flexibility,", "tokens": [466, 25539, 307, 300, 291, 483, 5109, 4253, 11, 12635, 11], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 304, "seek": 90308, "start": 919.1600000000001, "end": 921.96, "text": " tight code, you get safety, ease of use, and speed.", "tokens": [4524, 3089, 11, 291, 483, 4514, 11, 12708, 295, 764, 11, 293, 3073, 13], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 305, "seek": 90308, "start": 921.96, "end": 924.1600000000001, "text": " And it pulls it together in a unique way.", "tokens": [400, 309, 16982, 309, 1214, 294, 257, 3845, 636, 13], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 306, "seek": 90308, "start": 924.1600000000001, "end": 925.96, "text": " That's a very insightful quote, Chris.", "tokens": [663, 311, 257, 588, 46401, 6513, 11, 6688, 13], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 307, "seek": 90308, "start": 925.96, "end": 928.12, "text": " I'd like to read more of that person's work.", "tokens": [286, 1116, 411, 281, 1401, 544, 295, 300, 954, 311, 589, 13], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 308, "seek": 90308, "start": 928.12, "end": 929.84, "text": " Yeah, he does some good things, too.", "tokens": [865, 11, 415, 775, 512, 665, 721, 11, 886, 13], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 309, "seek": 90308, "start": 929.84, "end": 931.9200000000001, "text": " He's a little bit crazy himself, too.", "tokens": [634, 311, 257, 707, 857, 3219, 3647, 11, 886, 13], "temperature": 0.0, "avg_logprob": -0.13762659569309182, "compression_ratio": 1.667763157894737, "no_speech_prob": 5.420312390924664e-06}, {"id": 310, "seek": 93192, "start": 931.92, "end": 934.12, "text": " So getting out of the marketing stuff,", "tokens": [407, 1242, 484, 295, 264, 6370, 1507, 11], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 311, "seek": 93192, "start": 934.12, "end": 935.88, "text": " what is really Swift about?", "tokens": [437, 307, 534, 25539, 466, 30], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 312, "seek": 93192, "start": 935.88, "end": 937.4, "text": " Swift is a really young language.", "tokens": [25539, 307, 257, 534, 2037, 2856, 13], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 313, "seek": 93192, "start": 937.4, "end": 939.88, "text": " This is something I don't think that people realize.", "tokens": [639, 307, 746, 286, 500, 380, 519, 300, 561, 4325, 13], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 314, "seek": 93192, "start": 939.88, "end": 943.56, "text": " Jeremy, you like to point out that Python is 25 years old.", "tokens": [17809, 11, 291, 411, 281, 935, 484, 300, 15329, 307, 3552, 924, 1331, 13], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 315, "seek": 93192, "start": 943.56, "end": 945.9599999999999, "text": " Many of the systems we're working on are 30 years old.", "tokens": [5126, 295, 264, 3652, 321, 434, 1364, 322, 366, 2217, 924, 1331, 13], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 316, "seek": 93192, "start": 945.9599999999999, "end": 947.12, "text": " I think Python might be 30.", "tokens": [286, 519, 15329, 1062, 312, 2217, 13], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 317, "seek": 93192, "start": 947.12, "end": 949.12, "text": " JavaScript might be 25.", "tokens": [15778, 1062, 312, 3552, 13], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 318, "seek": 93192, "start": 949.12, "end": 950.64, "text": " Java's about 25.", "tokens": [10745, 311, 466, 3552, 13], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 319, "seek": 93192, "start": 950.64, "end": 955.3199999999999, "text": " I mean, for me, I've never spent time writing", "tokens": [286, 914, 11, 337, 385, 11, 286, 600, 1128, 4418, 565, 3579], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 320, "seek": 93192, "start": 955.3199999999999, "end": 957.12, "text": " such a young language before.", "tokens": [1270, 257, 2037, 2856, 949, 13], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 321, "seek": 93192, "start": 957.12, "end": 958.76, "text": " I also don't really remember.", "tokens": [286, 611, 500, 380, 534, 1604, 13], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 322, "seek": 93192, "start": 958.76, "end": 959.52, "text": " It's not quite true.", "tokens": [467, 311, 406, 1596, 2074, 13], "temperature": 0.0, "avg_logprob": -0.1549870667634187, "compression_ratio": 1.6714801444043321, "no_speech_prob": 6.960729024285683e-06}, {"id": 323, "seek": 95952, "start": 959.52, "end": 962.36, "text": " I guess languages like JavaScript have developed quickly.", "tokens": [286, 2041, 8650, 411, 15778, 362, 4743, 2661, 13], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 324, "seek": 95952, "start": 962.36, "end": 965.04, "text": " But it's really unusual to have such a young language", "tokens": [583, 309, 311, 534, 10901, 281, 362, 1270, 257, 2037, 2856], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 325, "seek": 95952, "start": 965.04, "end": 966.6, "text": " be so widely used.", "tokens": [312, 370, 13371, 1143, 13], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 326, "seek": 95952, "start": 966.6, "end": 968.36, "text": " So there's definitely a feeling for me", "tokens": [407, 456, 311, 2138, 257, 2633, 337, 385], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 327, "seek": 95952, "start": 968.36, "end": 970.96, "text": " often of feeling like, oh, I'm using a language which", "tokens": [2049, 295, 2633, 411, 11, 1954, 11, 286, 478, 1228, 257, 2856, 597], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 328, "seek": 95952, "start": 970.96, "end": 975.04, "text": " lots of people use, yet somehow it still feels like not", "tokens": [3195, 295, 561, 764, 11, 1939, 6063, 309, 920, 3417, 411, 406], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 329, "seek": 95952, "start": 975.04, "end": 976.28, "text": " everything's fully baked yet.", "tokens": [1203, 311, 4498, 19453, 1939, 13], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 330, "seek": 95952, "start": 976.28, "end": 977.84, "text": " Yeah, well, it's kind of interesting", "tokens": [865, 11, 731, 11, 309, 311, 733, 295, 1880], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 331, "seek": 95952, "start": 977.84, "end": 979.96, "text": " because you have millions of programmers using it.", "tokens": [570, 291, 362, 6803, 295, 41504, 1228, 309, 13], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 332, "seek": 95952, "start": 979.96, "end": 982.88, "text": " But on the other hand, it can be changed.", "tokens": [583, 322, 264, 661, 1011, 11, 309, 393, 312, 3105, 13], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 333, "seek": 95952, "start": 982.88, "end": 985.6, "text": " And so that's one of the things that in this project we'll", "tokens": [400, 370, 300, 311, 472, 295, 264, 721, 300, 294, 341, 1716, 321, 603], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 334, "seek": 95952, "start": 985.6, "end": 988.4, "text": " talk about, being able to do language integrated Autodiff", "tokens": [751, 466, 11, 885, 1075, 281, 360, 2856, 10919, 6049, 378, 3661], "temperature": 0.0, "avg_logprob": -0.16357135114998653, "compression_ratio": 1.7160493827160495, "no_speech_prob": 1.0450688932905905e-05}, {"id": 335, "seek": 98840, "start": 988.4, "end": 990.52, "text": " as an example of the kind of thing that you can only do", "tokens": [382, 364, 1365, 295, 264, 733, 295, 551, 300, 291, 393, 787, 360], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 336, "seek": 98840, "start": 990.52, "end": 993.4399999999999, "text": " if on a reasonable time scale you can innovate and make", "tokens": [498, 322, 257, 10585, 565, 4373, 291, 393, 33444, 293, 652], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 337, "seek": 98840, "start": 993.4399999999999, "end": 996.84, "text": " new language features, get them merged in, and evolve quickly.", "tokens": [777, 2856, 4122, 11, 483, 552, 36427, 294, 11, 293, 16693, 2661, 13], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 338, "seek": 98840, "start": 996.84, "end": 998.8, "text": " And that's one of the things that's made this whole project", "tokens": [400, 300, 311, 472, 295, 264, 721, 300, 311, 1027, 341, 1379, 1716], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 339, "seek": 98840, "start": 998.8, "end": 999.88, "text": " possible.", "tokens": [1944, 13], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 340, "seek": 98840, "start": 999.88, "end": 1002.4399999999999, "text": " Swift from its roots was designed for usability.", "tokens": [25539, 490, 1080, 10669, 390, 4761, 337, 46878, 13], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 341, "seek": 98840, "start": 1002.4399999999999, "end": 1005.8, "text": " And so it was designed for IDEs and user experience", "tokens": [400, 370, 309, 390, 4761, 337, 7348, 20442, 293, 4195, 1752], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 342, "seek": 98840, "start": 1005.8, "end": 1008.84, "text": " and code completion and inline errors and things like that.", "tokens": [293, 3089, 19372, 293, 294, 1889, 13603, 293, 721, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 343, "seek": 98840, "start": 1008.84, "end": 1010.68, "text": " It has a refactoring engine, a bunch of stuff", "tokens": [467, 575, 257, 1895, 578, 3662, 2848, 11, 257, 3840, 295, 1507], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 344, "seek": 98840, "start": 1010.68, "end": 1012.68, "text": " that modern languages have.", "tokens": [300, 4363, 8650, 362, 13], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 345, "seek": 98840, "start": 1012.68, "end": 1015.22, "text": " The other aspect of Swift that I think is really important is,", "tokens": [440, 661, 4171, 295, 25539, 300, 286, 519, 307, 534, 1021, 307, 11], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 346, "seek": 98840, "start": 1015.22, "end": 1018.28, "text": " Swift is designed to be not weird.", "tokens": [25539, 307, 4761, 281, 312, 406, 3657, 13], "temperature": 0.0, "avg_logprob": -0.15950222273130674, "compression_ratio": 1.7327327327327327, "no_speech_prob": 1.695806349744089e-05}, {"id": 347, "seek": 101828, "start": 1018.28, "end": 1020.0799999999999, "text": " And so when you look at Swift code", "tokens": [400, 370, 562, 291, 574, 412, 25539, 3089], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 348, "seek": 101828, "start": 1020.0799999999999, "end": 1021.76, "text": " over the course of the lessons, it", "tokens": [670, 264, 1164, 295, 264, 8820, 11, 309], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 349, "seek": 101828, "start": 1021.76, "end": 1024.52, "text": " will look pretty familiar if you've used JavaScript,", "tokens": [486, 574, 1238, 4963, 498, 291, 600, 1143, 15778, 11], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 350, "seek": 101828, "start": 1024.52, "end": 1026.68, "text": " you've used lots of other languages, you've used Python.", "tokens": [291, 600, 1143, 3195, 295, 661, 8650, 11, 291, 600, 1143, 15329, 13], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 351, "seek": 101828, "start": 1026.68, "end": 1028.56, "text": " It will look pretty similar in a lot of ways.", "tokens": [467, 486, 574, 1238, 2531, 294, 257, 688, 295, 2098, 13], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 352, "seek": 101828, "start": 1028.56, "end": 1030.08, "text": " And that's by design.", "tokens": [400, 300, 311, 538, 1715, 13], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 353, "seek": 101828, "start": 1030.08, "end": 1032.68, "text": " A lot of languages start out being trying to prove", "tokens": [316, 688, 295, 8650, 722, 484, 885, 1382, 281, 7081], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 354, "seek": 101828, "start": 1032.68, "end": 1033.6399999999999, "text": " a point about something.", "tokens": [257, 935, 466, 746, 13], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 355, "seek": 101828, "start": 1033.6399999999999, "end": 1036.06, "text": " And Swift was really designed to be,", "tokens": [400, 25539, 390, 534, 4761, 281, 312, 11], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 356, "seek": 101828, "start": 1036.06, "end": 1037.8, "text": " there's lots of good ideas in the world.", "tokens": [456, 311, 3195, 295, 665, 3487, 294, 264, 1002, 13], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 357, "seek": 101828, "start": 1037.8, "end": 1040.84, "text": " Let's take them together and through a hardcore, intense", "tokens": [961, 311, 747, 552, 1214, 293, 807, 257, 28196, 11, 9447], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 358, "seek": 101828, "start": 1040.84, "end": 1043.72, "text": " design process, actually apply taste", "tokens": [1715, 1399, 11, 767, 3079, 3939], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 359, "seek": 101828, "start": 1043.72, "end": 1046.3999999999999, "text": " and try to come up with something that is well considered", "tokens": [293, 853, 281, 808, 493, 365, 746, 300, 307, 731, 4888], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 360, "seek": 101828, "start": 1046.3999999999999, "end": 1047.6399999999999, "text": " and fits well together.", "tokens": [293, 9001, 731, 1214, 13], "temperature": 0.0, "avg_logprob": -0.149000883102417, "compression_ratio": 1.803125, "no_speech_prob": 2.7957563361269422e-05}, {"id": 361, "seek": 104764, "start": 1047.64, "end": 1051.0, "text": " It reminds me of Perl, which Larry Wall, it's", "tokens": [467, 12025, 385, 295, 3026, 75, 11, 597, 18145, 9551, 11, 309, 311], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 362, "seek": 104764, "start": 1051.0, "end": 1054.5200000000002, "text": " developed and described as a Swiss army chainsaw.", "tokens": [4743, 293, 7619, 382, 257, 21965, 7267, 12626, 1607, 13], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 363, "seek": 104764, "start": 1054.5200000000002, "end": 1056.3600000000001, "text": " Swift has got a similar feel of trying", "tokens": [25539, 575, 658, 257, 2531, 841, 295, 1382], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 364, "seek": 104764, "start": 1056.3600000000001, "end": 1058.68, "text": " to get the bits of everything, the best bits,", "tokens": [281, 483, 264, 9239, 295, 1203, 11, 264, 1151, 9239, 11], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 365, "seek": 104764, "start": 1058.68, "end": 1062.8000000000002, "text": " but it's much more curated and carefully designed", "tokens": [457, 309, 311, 709, 544, 47851, 293, 7500, 4761], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 366, "seek": 104764, "start": 1062.8000000000002, "end": 1063.76, "text": " than something like Perl.", "tokens": [813, 746, 411, 3026, 75, 13], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 367, "seek": 104764, "start": 1063.76, "end": 1064.88, "text": " So it fits together.", "tokens": [407, 309, 9001, 1214, 13], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 368, "seek": 104764, "start": 1064.88, "end": 1068.0400000000002, "text": " And so as we'll talk about, the whole team that", "tokens": [400, 370, 382, 321, 603, 751, 466, 11, 264, 1379, 1469, 300], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 369, "seek": 104764, "start": 1068.0400000000002, "end": 1070.64, "text": " built Swift originally was the team that built LLVM and Clang", "tokens": [3094, 25539, 7993, 390, 264, 1469, 300, 3094, 441, 43, 53, 44, 293, 2033, 656], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 370, "seek": 104764, "start": 1070.64, "end": 1071.5200000000002, "text": " and things like this.", "tokens": [293, 721, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 371, "seek": 104764, "start": 1071.5200000000002, "end": 1074.8400000000001, "text": " And so many languages were designed,", "tokens": [400, 370, 867, 8650, 645, 4761, 11], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 372, "seek": 104764, "start": 1074.8400000000001, "end": 1076.44, "text": " you come from the perspective of, well,", "tokens": [291, 808, 490, 264, 4585, 295, 11, 731, 11], "temperature": 0.0, "avg_logprob": -0.20842935057247386, "compression_ratio": 1.6643835616438356, "no_speech_prob": 1.0612425285216887e-05}, {"id": 373, "seek": 107644, "start": 1076.44, "end": 1078.3200000000002, "text": " create a programming language and then figure out", "tokens": [1884, 257, 9410, 2856, 293, 550, 2573, 484], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 374, "seek": 107644, "start": 1078.3200000000002, "end": 1079.88, "text": " how to make it fast later.", "tokens": [577, 281, 652, 309, 2370, 1780, 13], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 375, "seek": 107644, "start": 1079.88, "end": 1082.0800000000002, "text": " A lot of Swift was built from the beginning", "tokens": [316, 688, 295, 25539, 390, 3094, 490, 264, 2863], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 376, "seek": 107644, "start": 1082.0800000000002, "end": 1085.52, "text": " to be something that compilers can use and humans too.", "tokens": [281, 312, 746, 300, 715, 388, 433, 393, 764, 293, 6255, 886, 13], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 377, "seek": 107644, "start": 1085.52, "end": 1086.76, "text": " So what is Swift for TensorFlow?", "tokens": [407, 437, 307, 25539, 337, 37624, 30], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 378, "seek": 107644, "start": 1086.76, "end": 1090.4, "text": " So here, we're here to rethink how deep learning systems work", "tokens": [407, 510, 11, 321, 434, 510, 281, 34595, 577, 2452, 2539, 3652, 589], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 379, "seek": 107644, "start": 1090.4, "end": 1091.44, "text": " from the ground up.", "tokens": [490, 264, 2727, 493, 13], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 380, "seek": 107644, "start": 1091.44, "end": 1093.0800000000002, "text": " And where a lot of the systems today", "tokens": [400, 689, 257, 688, 295, 264, 3652, 965], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 381, "seek": 107644, "start": 1093.0800000000002, "end": 1096.0, "text": " are constrained by being, as much as you can get done", "tokens": [366, 38901, 538, 885, 11, 382, 709, 382, 291, 393, 483, 1096], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 382, "seek": 107644, "start": 1096.0, "end": 1098.68, "text": " in a Python library, here we're changing the language,", "tokens": [294, 257, 15329, 6405, 11, 510, 321, 434, 4473, 264, 2856, 11], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 383, "seek": 107644, "start": 1098.68, "end": 1100.04, "text": " we're changing the compiler, we're", "tokens": [321, 434, 4473, 264, 31958, 11, 321, 434], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 384, "seek": 107644, "start": 1100.04, "end": 1101.3200000000002, "text": " changing all the library stacks, we're", "tokens": [4473, 439, 264, 6405, 30792, 11, 321, 434], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 385, "seek": 107644, "start": 1101.3200000000002, "end": 1103.24, "text": " changing TensorFlow, which we'll talk about.", "tokens": [4473, 37624, 11, 597, 321, 603, 751, 466, 13], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 386, "seek": 107644, "start": 1103.24, "end": 1105.3600000000001, "text": " There's a tremendous amount of stuff involved in this.", "tokens": [821, 311, 257, 10048, 2372, 295, 1507, 3288, 294, 341, 13], "temperature": 0.0, "avg_logprob": -0.1637005925178528, "compression_ratio": 1.8208955223880596, "no_speech_prob": 1.4735488548467401e-05}, {"id": 387, "seek": 110536, "start": 1105.36, "end": 1107.4799999999998, "text": " And one of the things that's really cool about this", "tokens": [400, 472, 295, 264, 721, 300, 311, 534, 1627, 466, 341], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 388, "seek": 110536, "start": 1107.4799999999998, "end": 1108.9599999999998, "text": " and one of the focuses is that we", "tokens": [293, 472, 295, 264, 16109, 307, 300, 321], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 389, "seek": 110536, "start": 1108.9599999999998, "end": 1112.52, "text": " want to make an open, hackable platform where you can go", "tokens": [528, 281, 652, 364, 1269, 11, 10339, 712, 3663, 689, 291, 393, 352], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 390, "seek": 110536, "start": 1112.52, "end": 1114.6, "text": " and change anything you want in it.", "tokens": [293, 1319, 1340, 291, 528, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 391, "seek": 110536, "start": 1114.6, "end": 1117.8, "text": " And you can experiment, research, explore,", "tokens": [400, 291, 393, 5120, 11, 2132, 11, 6839, 11], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 392, "seek": 110536, "start": 1117.8, "end": 1119.8, "text": " do lots of new kinds of things because that's", "tokens": [360, 3195, 295, 777, 3685, 295, 721, 570, 300, 311], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 393, "seek": 110536, "start": 1119.8, "end": 1121.1999999999998, "text": " where science comes from.", "tokens": [689, 3497, 1487, 490, 13], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 394, "seek": 110536, "start": 1124.4799999999998, "end": 1127.56, "text": " Oh yeah, caveat, it's all broken.", "tokens": [876, 1338, 11, 43012, 11, 309, 311, 439, 5463, 13], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 395, "seek": 110536, "start": 1127.56, "end": 1128.28, "text": " Fair?", "tokens": [12157, 30], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 396, "seek": 110536, "start": 1128.28, "end": 1130.76, "text": " Yeah, nothing works, which is important.", "tokens": [865, 11, 1825, 1985, 11, 597, 307, 1021, 13], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 397, "seek": 110536, "start": 1130.76, "end": 1133.1999999999998, "text": " If you're going to be doing an impractical deep learning", "tokens": [759, 291, 434, 516, 281, 312, 884, 364, 704, 1897, 804, 2452, 2539], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 398, "seek": 110536, "start": 1133.1999999999998, "end": 1134.6799999999998, "text": " for coders, you wouldn't want to work", "tokens": [337, 17656, 433, 11, 291, 2759, 380, 528, 281, 589], "temperature": 0.0, "avg_logprob": -0.16003453553612554, "compression_ratio": 1.657243816254417, "no_speech_prob": 9.814828445087187e-06}, {"id": 399, "seek": 113468, "start": 1134.68, "end": 1136.16, "text": " with something that works.", "tokens": [365, 746, 300, 1985, 13], "temperature": 0.0, "avg_logprob": -0.2076164535854174, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.749057810229715e-05}, {"id": 400, "seek": 113468, "start": 1136.16, "end": 1141.5600000000002, "text": " So yeah, Swift is not just very much not just", "tokens": [407, 1338, 11, 25539, 307, 406, 445, 588, 709, 406, 445], "temperature": 0.0, "avg_logprob": -0.2076164535854174, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.749057810229715e-05}, {"id": 401, "seek": 113468, "start": 1141.5600000000002, "end": 1142.64, "text": " for iOS programming.", "tokens": [337, 17430, 9410, 13], "temperature": 0.0, "avg_logprob": -0.2076164535854174, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.749057810229715e-05}, {"id": 402, "seek": 113468, "start": 1142.64, "end": 1145.64, "text": " It's an incredibly powerful language.", "tokens": [467, 311, 364, 6252, 4005, 2856, 13], "temperature": 0.0, "avg_logprob": -0.2076164535854174, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.749057810229715e-05}, {"id": 403, "seek": 113468, "start": 1145.64, "end": 1151.28, "text": " And all these people that are writing iOS applications", "tokens": [400, 439, 613, 561, 300, 366, 3579, 17430, 5821], "temperature": 0.0, "avg_logprob": -0.2076164535854174, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.749057810229715e-05}, {"id": 404, "seek": 113468, "start": 1151.28, "end": 1154.04, "text": " can much more quickly become AI experts.", "tokens": [393, 709, 544, 2661, 1813, 7318, 8572, 13], "temperature": 0.0, "avg_logprob": -0.2076164535854174, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.749057810229715e-05}, {"id": 405, "seek": 113468, "start": 1154.04, "end": 1154.5600000000002, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.2076164535854174, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.749057810229715e-05}, {"id": 406, "seek": 113468, "start": 1154.5600000000002, "end": 1158.48, "text": " Suddenly, they're working with the language which", "tokens": [21194, 11, 436, 434, 1364, 365, 264, 2856, 597], "temperature": 0.0, "avg_logprob": -0.2076164535854174, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.749057810229715e-05}, {"id": 407, "seek": 113468, "start": 1158.48, "end": 1160.16, "text": " is super cool suddenly.", "tokens": [307, 1687, 1627, 5800, 13], "temperature": 0.0, "avg_logprob": -0.2076164535854174, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.749057810229715e-05}, {"id": 408, "seek": 113468, "start": 1160.16, "end": 1162.3600000000001, "text": " And they help propel the ecosystem as well.", "tokens": [400, 436, 854, 2365, 338, 264, 11311, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.2076164535854174, "compression_ratio": 1.5217391304347827, "no_speech_prob": 1.749057810229715e-05}, {"id": 409, "seek": 116236, "start": 1162.36, "end": 1165.0, "text": " So the things we'll be talking about across the lesson", "tokens": [407, 264, 721, 321, 603, 312, 1417, 466, 2108, 264, 6898], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 410, "seek": 116236, "start": 1165.0, "end": 1166.56, "text": " are the Swift for TensorFlow project", "tokens": [366, 264, 25539, 337, 37624, 1716], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 411, "seek": 116236, "start": 1166.56, "end": 1169.24, "text": " has very big bricks that are part of it.", "tokens": [575, 588, 955, 25497, 300, 366, 644, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 412, "seek": 116236, "start": 1169.24, "end": 1170.52, "text": " So part of it is the tensor API.", "tokens": [407, 644, 295, 309, 307, 264, 40863, 9362, 13], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 413, "seek": 116236, "start": 1170.52, "end": 1172.56, "text": " We'll touch on that a little bit today.", "tokens": [492, 603, 2557, 322, 300, 257, 707, 857, 965, 13], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 414, "seek": 116236, "start": 1172.56, "end": 1174.56, "text": " Python integration is a really big deal.", "tokens": [15329, 10980, 307, 257, 534, 955, 2028, 13], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 415, "seek": 116236, "start": 1174.56, "end": 1176.12, "text": " This is what gives you direct access", "tokens": [639, 307, 437, 2709, 291, 2047, 2105], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 416, "seek": 116236, "start": 1176.12, "end": 1178.24, "text": " to the entire ecosystem that you already know.", "tokens": [281, 264, 2302, 11311, 300, 291, 1217, 458, 13], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 417, "seek": 116236, "start": 1178.24, "end": 1181.1599999999999, "text": " Automatic differentiation, hugely important for ML.", "tokens": [6049, 13143, 38902, 11, 27417, 1021, 337, 21601, 13], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 418, "seek": 116236, "start": 1181.1599999999999, "end": 1185.3999999999999, "text": " And Swift has a really cool industry-leading approach", "tokens": [400, 25539, 575, 257, 534, 1627, 3518, 12, 28012, 3109], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 419, "seek": 116236, "start": 1185.3999999999999, "end": 1188.24, "text": " to it, stolen from Fortran.", "tokens": [281, 309, 11, 15900, 490, 11002, 4257, 13], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 420, "seek": 116236, "start": 1188.24, "end": 1190.76, "text": " Jupiter, you'll see a lot of that today.", "tokens": [24567, 11, 291, 603, 536, 257, 688, 295, 300, 965, 13], "temperature": 0.0, "avg_logprob": -0.13855511394899284, "compression_ratio": 1.6343042071197411, "no_speech_prob": 4.564870323520154e-06}, {"id": 421, "seek": 119076, "start": 1190.76, "end": 1192.36, "text": " So one of the things you'll notice", "tokens": [407, 472, 295, 264, 721, 291, 603, 3449], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 422, "seek": 119076, "start": 1192.36, "end": 1195.76, "text": " is that a lot of what you see as a high-level programmer", "tokens": [307, 300, 257, 688, 295, 437, 291, 536, 382, 257, 1090, 12, 12418, 32116], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 423, "seek": 119076, "start": 1195.76, "end": 1196.84, "text": " is very familiar.", "tokens": [307, 588, 4963, 13], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 424, "seek": 119076, "start": 1196.84, "end": 1197.76, "text": " And that's by design.", "tokens": [400, 300, 311, 538, 1715, 13], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 425, "seek": 119076, "start": 1197.76, "end": 1202.2, "text": " And so this is an example layer built in Swift.", "tokens": [400, 370, 341, 307, 364, 1365, 4583, 3094, 294, 25539, 13], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 426, "seek": 119076, "start": 1202.2, "end": 1204.4, "text": " This is an example layer built in PyTorch.", "tokens": [639, 307, 364, 1365, 4583, 3094, 294, 9953, 51, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 427, "seek": 119076, "start": 1204.4, "end": 1205.72, "text": " And it looks basically the same.", "tokens": [400, 309, 1542, 1936, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 428, "seek": 119076, "start": 1205.72, "end": 1206.48, "text": " There's differences.", "tokens": [821, 311, 7300, 13], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 429, "seek": 119076, "start": 1206.48, "end": 1208.44, "text": " And we're working to reduce the difference even more.", "tokens": [400, 321, 434, 1364, 281, 5407, 264, 2649, 754, 544, 13], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 430, "seek": 119076, "start": 1208.44, "end": 1210.24, "text": " We'd love all those floats to be.", "tokens": [492, 1116, 959, 439, 729, 37878, 281, 312, 13], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 431, "seek": 119076, "start": 1210.24, "end": 1211.6, "text": " Some of the differences are very nice,", "tokens": [2188, 295, 264, 7300, 366, 588, 1481, 11], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 432, "seek": 119076, "start": 1211.6, "end": 1215.68, "text": " the fact that you don't have to pass self all the time.", "tokens": [264, 1186, 300, 291, 500, 380, 362, 281, 1320, 2698, 439, 264, 565, 13], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 433, "seek": 119076, "start": 1215.68, "end": 1218.16, "text": " There are things where you're just like, oh, finally.", "tokens": [821, 366, 721, 689, 291, 434, 445, 411, 11, 1954, 11, 2721, 13], "temperature": 0.0, "avg_logprob": -0.17285509557531983, "compression_ratio": 1.7568493150684932, "no_speech_prob": 1.3208272321207915e-05}, {"id": 434, "seek": 121816, "start": 1218.16, "end": 1222.44, "text": " So it's actually getting to the point where the boilerplate", "tokens": [407, 309, 311, 767, 1242, 281, 264, 935, 689, 264, 39228, 37008], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 435, "seek": 121816, "start": 1222.44, "end": 1224.3200000000002, "text": " in the Python code, there's more boilerplate", "tokens": [294, 264, 15329, 3089, 11, 456, 311, 544, 39228, 37008], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 436, "seek": 121816, "start": 1224.3200000000002, "end": 1227.28, "text": " of like all this self.conv and self.pool and self,", "tokens": [295, 411, 439, 341, 2698, 13, 1671, 85, 293, 2698, 13, 17374, 293, 2698, 11], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 437, "seek": 121816, "start": 1227.28, "end": 1229.1200000000001, "text": " comma, and get rid of a lot of that.", "tokens": [22117, 11, 293, 483, 3973, 295, 257, 688, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 438, "seek": 121816, "start": 1229.1200000000001, "end": 1232.68, "text": " Yeah, so we're going to start very deep and very low level.", "tokens": [865, 11, 370, 321, 434, 516, 281, 722, 588, 2452, 293, 588, 2295, 1496, 13], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 439, "seek": 121816, "start": 1232.68, "end": 1235.24, "text": " So I just want to give you a high-level view of what things", "tokens": [407, 286, 445, 528, 281, 976, 291, 257, 1090, 12, 12418, 1910, 295, 437, 721], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 440, "seek": 121816, "start": 1235.24, "end": 1237.44, "text": " look like and where we'll end up.", "tokens": [574, 411, 293, 689, 321, 603, 917, 493, 13], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 441, "seek": 121816, "start": 1237.44, "end": 1238.92, "text": " And so this is a layer.", "tokens": [400, 370, 341, 307, 257, 4583, 13], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 442, "seek": 121816, "start": 1238.92, "end": 1240.88, "text": " And so in Swift, this is implemented with a struct.", "tokens": [400, 370, 294, 25539, 11, 341, 307, 12270, 365, 257, 6594, 13], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 443, "seek": 121816, "start": 1240.88, "end": 1242.68, "text": " We'll talk about those a little bit later.", "tokens": [492, 603, 751, 466, 729, 257, 707, 857, 1780, 13], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 444, "seek": 121816, "start": 1242.68, "end": 1244.2, "text": " And it says, I'm defining my model.", "tokens": [400, 309, 1619, 11, 286, 478, 17827, 452, 2316, 13], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 445, "seek": 121816, "start": 1244.2, "end": 1246.0800000000002, "text": " And it's a layer.", "tokens": [400, 309, 311, 257, 4583, 13], "temperature": 0.0, "avg_logprob": -0.16928331157829188, "compression_ratio": 1.7242524916943522, "no_speech_prob": 4.494884251471376e-06}, {"id": 446, "seek": 124608, "start": 1246.08, "end": 1248.24, "text": " We use layers just like you would normally.", "tokens": [492, 764, 7914, 445, 411, 291, 576, 5646, 13], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 447, "seek": 124608, "start": 1248.24, "end": 1252.1599999999999, "text": " And so you have conv2d, maxpool, flatten.", "tokens": [400, 370, 291, 362, 3754, 17, 67, 11, 11469, 17374, 11, 24183, 13], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 448, "seek": 124608, "start": 1252.1599999999999, "end": 1253.52, "text": " Things are callable in Swift.", "tokens": [9514, 366, 818, 712, 294, 25539, 13], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 449, "seek": 124608, "start": 1253.52, "end": 1255.76, "text": " And we use call instead of underbar underbar call.", "tokens": [400, 321, 764, 818, 2602, 295, 833, 5356, 833, 5356, 818, 13], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 450, "seek": 124608, "start": 1255.76, "end": 1258.1999999999998, "text": " You'll see a lot less underbars.", "tokens": [509, 603, 536, 257, 688, 1570, 833, 42162, 13], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 451, "seek": 124608, "start": 1258.1999999999998, "end": 1260.04, "text": " And otherwise, it looks basically the same.", "tokens": [400, 5911, 11, 309, 1542, 1936, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 452, "seek": 124608, "start": 1260.04, "end": 1262.3999999999999, "text": " You just compose these things together.", "tokens": [509, 445, 35925, 613, 721, 1214, 13], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 453, "seek": 124608, "start": 1262.3999999999999, "end": 1265.0, "text": " One major difference is this differentiable thing.", "tokens": [1485, 2563, 2649, 307, 341, 819, 9364, 551, 13], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 454, "seek": 124608, "start": 1265.0, "end": 1267.36, "text": " And you may be wondering, why do we have differentiable?", "tokens": [400, 291, 815, 312, 6359, 11, 983, 360, 321, 362, 819, 9364, 30], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 455, "seek": 124608, "start": 1267.36, "end": 1268.6399999999999, "text": " Well, this is just telling the compiler", "tokens": [1042, 11, 341, 307, 445, 3585, 264, 31958], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 456, "seek": 124608, "start": 1268.6399999999999, "end": 1270.52, "text": " that it should be able to differentiate this.", "tokens": [300, 309, 820, 312, 1075, 281, 23203, 341, 13], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 457, "seek": 124608, "start": 1270.52, "end": 1273.28, "text": " And one of the cool things about compiler integration", "tokens": [400, 472, 295, 264, 1627, 721, 466, 31958, 10980], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 458, "seek": 124608, "start": 1273.28, "end": 1275.6399999999999, "text": " is that when you say, hey, compiler,", "tokens": [307, 300, 562, 291, 584, 11, 4177, 11, 31958, 11], "temperature": 0.0, "avg_logprob": -0.1365311396749396, "compression_ratio": 1.8263665594855305, "no_speech_prob": 3.1872987165115774e-06}, {"id": 459, "seek": 127564, "start": 1275.64, "end": 1279.4, "text": " give me the gradient of some function,", "tokens": [976, 385, 264, 16235, 295, 512, 2445, 11], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 460, "seek": 127564, "start": 1279.4, "end": 1281.6000000000001, "text": " in the happy path, when everything is good, it just does.", "tokens": [294, 264, 2055, 3100, 11, 562, 1203, 307, 665, 11, 309, 445, 775, 13], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 461, "seek": 127564, "start": 1281.6000000000001, "end": 1282.96, "text": " And that's what you'd expect.", "tokens": [400, 300, 311, 437, 291, 1116, 2066, 13], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 462, "seek": 127564, "start": 1282.96, "end": 1284.72, "text": " But the unhappy path matters as well.", "tokens": [583, 264, 22172, 3100, 7001, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 463, "seek": 127564, "start": 1284.72, "end": 1287.44, "text": " I don't know if anybody here makes mistakes.", "tokens": [286, 500, 380, 458, 498, 4472, 510, 1669, 8038, 13], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 464, "seek": 127564, "start": 1287.44, "end": 1288.2800000000002, "text": " I do.", "tokens": [286, 360, 13], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 465, "seek": 127564, "start": 1288.2800000000002, "end": 1290.76, "text": " And so one of the cool things about having proper language", "tokens": [400, 370, 472, 295, 264, 1627, 721, 466, 1419, 2296, 2856], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 466, "seek": 127564, "start": 1290.76, "end": 1293.16, "text": " support is you can get an error message that says, hey,", "tokens": [1406, 307, 291, 393, 483, 364, 6713, 3636, 300, 1619, 11, 4177, 11], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 467, "seek": 127564, "start": 1293.16, "end": 1295.44, "text": " that function can't be differentiated.", "tokens": [300, 2445, 393, 380, 312, 27372, 770, 13], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 468, "seek": 127564, "start": 1295.44, "end": 1296.48, "text": " That's useful.", "tokens": [663, 311, 4420, 13], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 469, "seek": 127564, "start": 1296.48, "end": 1297.5200000000002, "text": " But you go farther.", "tokens": [583, 291, 352, 20344, 13], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 470, "seek": 127564, "start": 1297.5200000000002, "end": 1299.3600000000001, "text": " You say, oh, well, it can't be differentiated", "tokens": [509, 584, 11, 1954, 11, 731, 11, 309, 393, 380, 312, 27372, 770], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 471, "seek": 127564, "start": 1299.3600000000001, "end": 1302.44, "text": " because integers and this int cast that you have", "tokens": [570, 41674, 293, 341, 560, 4193, 300, 291, 362], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 472, "seek": 127564, "start": 1302.44, "end": 1303.96, "text": " can't be differentiated.", "tokens": [393, 380, 312, 27372, 770, 13], "temperature": 0.0, "avg_logprob": -0.1709270731608073, "compression_ratio": 1.776271186440678, "no_speech_prob": 7.295959676412167e-06}, {"id": 473, "seek": 130396, "start": 1303.96, "end": 1306.64, "text": " And then it says, even farther, well, it's actually,", "tokens": [400, 550, 309, 1619, 11, 754, 20344, 11, 731, 11, 309, 311, 767, 11], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 474, "seek": 130396, "start": 1306.64, "end": 1308.56, "text": " this is several levels deep in function calls.", "tokens": [341, 307, 2940, 4358, 2452, 294, 2445, 5498, 13], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 475, "seek": 130396, "start": 1308.56, "end": 1309.8, "text": " And this is exactly the path.", "tokens": [400, 341, 307, 2293, 264, 3100, 13], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 476, "seek": 130396, "start": 1309.8, "end": 1311.8, "text": " And this is exactly what went wrong.", "tokens": [400, 341, 307, 2293, 437, 1437, 2085, 13], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 477, "seek": 130396, "start": 1311.8, "end": 1313.8400000000001, "text": " And it's really cool to get this in your workbook", "tokens": [400, 309, 311, 534, 1627, 281, 483, 341, 294, 428, 589, 2939], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 478, "seek": 130396, "start": 1313.8400000000001, "end": 1316.16, "text": " without even having to run something.", "tokens": [1553, 754, 1419, 281, 1190, 746, 13], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 479, "seek": 130396, "start": 1316.16, "end": 1319.4, "text": " And so this is the kind of, when you build things for IDEs", "tokens": [400, 370, 341, 307, 264, 733, 295, 11, 562, 291, 1322, 721, 337, 7348, 20442], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 480, "seek": 130396, "start": 1319.4, "end": 1321.3600000000001, "text": " and you build things for usability,", "tokens": [293, 291, 1322, 721, 337, 46878, 11], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 481, "seek": 130396, "start": 1321.3600000000001, "end": 1326.2, "text": " you get really nice behavior that the compiler's helping you.", "tokens": [291, 483, 534, 1481, 5223, 300, 264, 31958, 311, 4315, 291, 13], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 482, "seek": 130396, "start": 1326.2, "end": 1327.48, "text": " So what is Swift for TensorFlow?", "tokens": [407, 437, 307, 25539, 337, 37624, 30], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 483, "seek": 130396, "start": 1327.48, "end": 1328.6000000000001, "text": " And how does it stack up?", "tokens": [400, 577, 775, 309, 8630, 493, 30], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 484, "seek": 130396, "start": 1328.6000000000001, "end": 1330.56, "text": " And how does it relate to TensorFlow?", "tokens": [400, 577, 775, 309, 10961, 281, 37624, 30], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 485, "seek": 130396, "start": 1330.56, "end": 1333.28, "text": " So TensorFlow, one way to think about classic TensorFlow", "tokens": [407, 37624, 11, 472, 636, 281, 519, 466, 7230, 37624], "temperature": 0.0, "avg_logprob": -0.12292188682303523, "compression_ratio": 1.8646864686468647, "no_speech_prob": 1.4144180795483408e-06}, {"id": 486, "seek": 133328, "start": 1333.28, "end": 1335.8, "text": " is that you have a tremendous amount of infrastructure.", "tokens": [307, 300, 291, 362, 257, 10048, 2372, 295, 6896, 13], "temperature": 0.0, "avg_logprob": -0.16190731619286725, "compression_ratio": 1.7035714285714285, "no_speech_prob": 2.4438779746560613e-06}, {"id": 487, "seek": 133328, "start": 1335.8, "end": 1341.2, "text": " And TensorFlow has this really mature distribution, scale out,", "tokens": [400, 37624, 575, 341, 534, 14442, 7316, 11, 4373, 484, 11], "temperature": 0.0, "avg_logprob": -0.16190731619286725, "compression_ratio": 1.7035714285714285, "no_speech_prob": 2.4438779746560613e-06}, {"id": 488, "seek": 133328, "start": 1341.2, "end": 1344.84, "text": " end-to-end training, inference with mobile devices,", "tokens": [917, 12, 1353, 12, 521, 3097, 11, 38253, 365, 6013, 5759, 11], "temperature": 0.0, "avg_logprob": -0.16190731619286725, "compression_ratio": 1.7035714285714285, "no_speech_prob": 2.4438779746560613e-06}, {"id": 489, "seek": 133328, "start": 1344.84, "end": 1347.36, "text": " like all this cool stuff in the ecosystem.", "tokens": [411, 439, 341, 1627, 1507, 294, 264, 11311, 13], "temperature": 0.0, "avg_logprob": -0.16190731619286725, "compression_ratio": 1.7035714285714285, "no_speech_prob": 2.4438779746560613e-06}, {"id": 490, "seek": 133328, "start": 1347.36, "end": 1349.24, "text": " And then it has this thing called Python.", "tokens": [400, 550, 309, 575, 341, 551, 1219, 15329, 13], "temperature": 0.0, "avg_logprob": -0.16190731619286725, "compression_ratio": 1.7035714285714285, "no_speech_prob": 2.4438779746560613e-06}, {"id": 491, "seek": 133328, "start": 1349.24, "end": 1351.96, "text": " I call it Python for TF.", "tokens": [286, 818, 309, 15329, 337, 40964, 13], "temperature": 0.0, "avg_logprob": -0.16190731619286725, "compression_ratio": 1.7035714285714285, "no_speech_prob": 2.4438779746560613e-06}, {"id": 492, "seek": 133328, "start": 1351.96, "end": 1354.8, "text": " And Python for TF includes its autodiff system.", "tokens": [400, 15329, 337, 40964, 5974, 1080, 1476, 378, 3661, 1185, 13], "temperature": 0.0, "avg_logprob": -0.16190731619286725, "compression_ratio": 1.7035714285714285, "no_speech_prob": 2.4438779746560613e-06}, {"id": 493, "seek": 133328, "start": 1354.8, "end": 1357.6399999999999, "text": " And then it has a bunch of APIs like Keras and Estimator", "tokens": [400, 550, 309, 575, 257, 3840, 295, 21445, 411, 591, 6985, 293, 4410, 332, 1639], "temperature": 0.0, "avg_logprob": -0.16190731619286725, "compression_ratio": 1.7035714285714285, "no_speech_prob": 2.4438779746560613e-06}, {"id": 494, "seek": 133328, "start": 1357.6399999999999, "end": 1358.8799999999999, "text": " and other things built on top.", "tokens": [293, 661, 721, 3094, 322, 1192, 13], "temperature": 0.0, "avg_logprob": -0.16190731619286725, "compression_ratio": 1.7035714285714285, "no_speech_prob": 2.4438779746560613e-06}, {"id": 495, "seek": 133328, "start": 1358.8799999999999, "end": 1360.8799999999999, "text": " And so what we've done is we've built a parallel stack where", "tokens": [400, 370, 437, 321, 600, 1096, 307, 321, 600, 3094, 257, 8952, 8630, 689], "temperature": 0.0, "avg_logprob": -0.16190731619286725, "compression_ratio": 1.7035714285714285, "no_speech_prob": 2.4438779746560613e-06}, {"id": 496, "seek": 136088, "start": 1360.88, "end": 1363.3200000000002, "text": " we're using a lot of the same infrastructure", "tokens": [321, 434, 1228, 257, 688, 295, 264, 912, 6896], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 497, "seek": 136088, "start": 1363.3200000000002, "end": 1364.5600000000002, "text": " underneath the covers.", "tokens": [7223, 264, 10538, 13], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 498, "seek": 136088, "start": 1364.5600000000002, "end": 1367.2800000000002, "text": " And then we're building a new fast AI framework on top.", "tokens": [400, 550, 321, 434, 2390, 257, 777, 2370, 7318, 8388, 322, 1192, 13], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 499, "seek": 136088, "start": 1367.2800000000002, "end": 1369.3200000000002, "text": " Now, one of the things we'll talk about more later", "tokens": [823, 11, 472, 295, 264, 721, 321, 603, 751, 466, 544, 1780], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 500, "seek": 136088, "start": 1369.3200000000002, "end": 1372.16, "text": " is that TensorFlow itself is undergoing radical change", "tokens": [307, 300, 37624, 2564, 307, 40033, 12001, 1319], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 501, "seek": 136088, "start": 1372.16, "end": 1372.96, "text": " in the internals.", "tokens": [294, 264, 2154, 1124, 13], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 502, "seek": 136088, "start": 1372.96, "end": 1375.8400000000001, "text": " And one example of this is the XLA compiler.", "tokens": [400, 472, 1365, 295, 341, 307, 264, 1783, 11435, 31958, 13], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 503, "seek": 136088, "start": 1375.8400000000001, "end": 1377.2800000000002, "text": " And one of the things you'll find out", "tokens": [400, 472, 295, 264, 721, 291, 603, 915, 484], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 504, "seek": 136088, "start": 1377.2800000000002, "end": 1380.7600000000002, "text": " is that TensorFlow is compilerizing itself", "tokens": [307, 300, 37624, 307, 31958, 3319, 2564], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 505, "seek": 136088, "start": 1380.7600000000002, "end": 1384.6000000000001, "text": " as new accelerators and new technologies and lots of things", "tokens": [382, 777, 10172, 3391, 293, 777, 7943, 293, 3195, 295, 721], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 506, "seek": 136088, "start": 1384.6000000000001, "end": 1385.8000000000002, "text": " are coming into play.", "tokens": [366, 1348, 666, 862, 13], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 507, "seek": 136088, "start": 1385.8000000000002, "end": 1387.92, "text": " And so TensorFlow is the internals", "tokens": [400, 370, 37624, 307, 264, 2154, 1124], "temperature": 0.0, "avg_logprob": -0.12843463927742063, "compression_ratio": 1.8352059925093633, "no_speech_prob": 9.367522579850629e-06}, {"id": 508, "seek": 138792, "start": 1387.92, "end": 1391.8000000000002, "text": " are undergoing major changes, which is super exciting.", "tokens": [366, 40033, 2563, 2962, 11, 597, 307, 1687, 4670, 13], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 509, "seek": 138792, "start": 1391.8000000000002, "end": 1393.1200000000001, "text": " So let's dive into some code.", "tokens": [407, 718, 311, 9192, 666, 512, 3089, 13], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 510, "seek": 138792, "start": 1393.1200000000001, "end": 1394.5600000000002, "text": " So first, one more question.", "tokens": [407, 700, 11, 472, 544, 1168, 13], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 511, "seek": 138792, "start": 1394.5600000000002, "end": 1396.4, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 512, "seek": 138792, "start": 1396.4, "end": 1400.16, "text": " What's the roadmap relationship between Swift for TensorFlow", "tokens": [708, 311, 264, 35738, 2480, 1296, 25539, 337, 37624], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 513, "seek": 138792, "start": 1400.16, "end": 1401.8400000000001, "text": " and mainstream Swift?", "tokens": [293, 15960, 25539, 30], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 514, "seek": 138792, "start": 1401.8400000000001, "end": 1403.76, "text": " Will they eventually be the same thing?", "tokens": [3099, 436, 4728, 312, 264, 912, 551, 30], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 515, "seek": 138792, "start": 1403.76, "end": 1404.8400000000001, "text": " Yeah, that's a great question.", "tokens": [865, 11, 300, 311, 257, 869, 1168, 13], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 516, "seek": 138792, "start": 1404.8400000000001, "end": 1406.8000000000002, "text": " So right now, the Swift for TensorFlow project,", "tokens": [407, 558, 586, 11, 264, 25539, 337, 37624, 1716, 11], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 517, "seek": 138792, "start": 1406.8000000000002, "end": 1408.52, "text": " you can think of it as like a dev branch.", "tokens": [291, 393, 519, 295, 309, 382, 411, 257, 1905, 9819, 13], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 518, "seek": 138792, "start": 1408.52, "end": 1411.8000000000002, "text": " Actually, it is literally a dev branch on the Swift project.", "tokens": [5135, 11, 309, 307, 3736, 257, 1905, 9819, 322, 264, 25539, 1716, 13], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 519, "seek": 138792, "start": 1411.8000000000002, "end": 1413.3600000000001, "text": " And so what we do is we build things", "tokens": [400, 370, 437, 321, 360, 307, 321, 1322, 721], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 520, "seek": 138792, "start": 1413.3600000000001, "end": 1414.92, "text": " like automatic differentiation.", "tokens": [411, 12509, 38902, 13], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 521, "seek": 138792, "start": 1414.92, "end": 1415.48, "text": " We bake them.", "tokens": [492, 16562, 552, 13], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 522, "seek": 138792, "start": 1415.48, "end": 1416.5600000000002, "text": " We get experience.", "tokens": [492, 483, 1752, 13], "temperature": 0.0, "avg_logprob": -0.16951619661771333, "compression_ratio": 1.7022653721682848, "no_speech_prob": 1.147773855336709e-05}, {"id": 523, "seek": 141656, "start": 1416.56, "end": 1418.52, "text": " And then we propose them and merge them back", "tokens": [400, 550, 321, 17421, 552, 293, 22183, 552, 646], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 524, "seek": 141656, "start": 1418.52, "end": 1419.8799999999999, "text": " in the mainline Swift language.", "tokens": [294, 264, 2135, 1889, 25539, 2856, 13], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 525, "seek": 141656, "start": 1419.8799999999999, "end": 1422.32, "text": " And a bunch of stuff has already been done that way.", "tokens": [400, 257, 3840, 295, 1507, 575, 1217, 668, 1096, 300, 636, 13], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 526, "seek": 141656, "start": 1422.32, "end": 1427.1599999999999, "text": " So the Python integration drove new language features in Swift.", "tokens": [407, 264, 15329, 10980, 13226, 777, 2856, 4122, 294, 25539, 13], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 527, "seek": 141656, "start": 1427.1599999999999, "end": 1428.04, "text": " We propose them.", "tokens": [492, 17421, 552, 13], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 528, "seek": 141656, "start": 1428.04, "end": 1429.96, "text": " We got them integrated into the mainline compiler.", "tokens": [492, 658, 552, 10919, 666, 264, 2135, 1889, 31958, 13], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 529, "seek": 141656, "start": 1429.96, "end": 1430.96, "text": " And now they're shipping.", "tokens": [400, 586, 436, 434, 14122, 13], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 530, "seek": 141656, "start": 1430.96, "end": 1434.48, "text": " And iOS developers can use cool things because of Swift", "tokens": [400, 17430, 8849, 393, 764, 1627, 721, 570, 295, 25539], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 531, "seek": 141656, "start": 1434.48, "end": 1436.56, "text": " for TensorFlow.", "tokens": [337, 37624, 13], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 532, "seek": 141656, "start": 1436.56, "end": 1437.8799999999999, "text": " Yep.", "tokens": [7010, 13], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 533, "seek": 141656, "start": 1437.8799999999999, "end": 1439.04, "text": " So let's dive in.", "tokens": [407, 718, 311, 9192, 294, 13], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 534, "seek": 141656, "start": 1439.04, "end": 1443.36, "text": " Now, I thought I would start with some really basic things", "tokens": [823, 11, 286, 1194, 286, 576, 722, 365, 512, 534, 3875, 721], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 535, "seek": 141656, "start": 1443.36, "end": 1445.48, "text": " to just introduce the language, just so you understand", "tokens": [281, 445, 5366, 264, 2856, 11, 445, 370, 291, 1223], "temperature": 0.0, "avg_logprob": -0.17813126490666317, "compression_ratio": 1.6813559322033897, "no_speech_prob": 6.747364750481211e-06}, {"id": 536, "seek": 144548, "start": 1445.48, "end": 1447.24, "text": " you have some context of how things work.", "tokens": [291, 362, 512, 4319, 295, 577, 721, 589, 13], "temperature": 0.0, "avg_logprob": -0.12748956680297852, "compression_ratio": 1.5986842105263157, "no_speech_prob": 4.860106400883524e-06}, {"id": 537, "seek": 144548, "start": 1447.24, "end": 1449.48, "text": " And then we'll get into some more interesting stuff.", "tokens": [400, 550, 321, 603, 483, 666, 512, 544, 1880, 1507, 13], "temperature": 0.0, "avg_logprob": -0.12748956680297852, "compression_ratio": 1.5986842105263157, "no_speech_prob": 4.860106400883524e-06}, {"id": 538, "seek": 144548, "start": 1449.48, "end": 1451.96, "text": " So this is a Jupyter notebook, just like you'd expect.", "tokens": [407, 341, 307, 257, 22125, 88, 391, 21060, 11, 445, 411, 291, 1116, 2066, 13], "temperature": 0.0, "avg_logprob": -0.12748956680297852, "compression_ratio": 1.5986842105263157, "no_speech_prob": 4.860106400883524e-06}, {"id": 539, "seek": 144548, "start": 1451.96, "end": 1455.68, "text": " This is Jeremy's window machine, which I will struggle to use", "tokens": [639, 307, 17809, 311, 4910, 3479, 11, 597, 286, 486, 7799, 281, 764], "temperature": 0.0, "avg_logprob": -0.12748956680297852, "compression_ratio": 1.5986842105263157, "no_speech_prob": 4.860106400883524e-06}, {"id": 540, "seek": 144548, "start": 1455.68, "end": 1459.32, "text": " because I have not used Windows for a long time.", "tokens": [570, 286, 362, 406, 1143, 8591, 337, 257, 938, 565, 13], "temperature": 0.0, "avg_logprob": -0.12748956680297852, "compression_ratio": 1.5986842105263157, "no_speech_prob": 4.860106400883524e-06}, {"id": 541, "seek": 144548, "start": 1459.32, "end": 1460.16, "text": " It will be fine.", "tokens": [467, 486, 312, 2489, 13], "temperature": 0.0, "avg_logprob": -0.12748956680297852, "compression_ratio": 1.5986842105263157, "no_speech_prob": 4.860106400883524e-06}, {"id": 542, "seek": 144548, "start": 1460.16, "end": 1462.68, "text": " It has a Mac keyboard on it, so it's super weird.", "tokens": [467, 575, 257, 5707, 10186, 322, 309, 11, 370, 309, 311, 1687, 3657, 13], "temperature": 0.0, "avg_logprob": -0.12748956680297852, "compression_ratio": 1.5986842105263157, "no_speech_prob": 4.860106400883524e-06}, {"id": 543, "seek": 144548, "start": 1462.68, "end": 1465.32, "text": " Scrolls the wrong direction, but it will be great.", "tokens": [35395, 82, 264, 2085, 3513, 11, 457, 309, 486, 312, 869, 13], "temperature": 0.0, "avg_logprob": -0.12748956680297852, "compression_ratio": 1.5986842105263157, "no_speech_prob": 4.860106400883524e-06}, {"id": 544, "seek": 144548, "start": 1465.32, "end": 1471.04, "text": " So a lot of what Swift does looks very familiar to Python.", "tokens": [407, 257, 688, 295, 437, 25539, 775, 1542, 588, 4963, 281, 15329, 13], "temperature": 0.0, "avg_logprob": -0.12748956680297852, "compression_ratio": 1.5986842105263157, "no_speech_prob": 4.860106400883524e-06}, {"id": 545, "seek": 144548, "start": 1471.04, "end": 1474.0, "text": " So here I have some integer 6.", "tokens": [407, 510, 286, 362, 512, 24922, 1386, 13], "temperature": 0.0, "avg_logprob": -0.12748956680297852, "compression_ratio": 1.5986842105263157, "no_speech_prob": 4.860106400883524e-06}, {"id": 546, "seek": 144548, "start": 1474.0, "end": 1475.04, "text": " I have some math.", "tokens": [286, 362, 512, 5221, 13], "temperature": 0.0, "avg_logprob": -0.12748956680297852, "compression_ratio": 1.5986842105263157, "no_speech_prob": 4.860106400883524e-06}, {"id": 547, "seek": 147504, "start": 1475.04, "end": 1475.84, "text": " I have print.", "tokens": [286, 362, 4482, 13], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 548, "seek": 147504, "start": 1475.84, "end": 1478.48, "text": " It all works exactly the same as you'd expect in Python.", "tokens": [467, 439, 1985, 2293, 264, 912, 382, 291, 1116, 2066, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 549, "seek": 147504, "start": 1478.48, "end": 1480.0, "text": " One of the major differences in Swift", "tokens": [1485, 295, 264, 2563, 7300, 294, 25539], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 550, "seek": 147504, "start": 1480.0, "end": 1482.44, "text": " is that you have this let and this var thing.", "tokens": [307, 300, 291, 362, 341, 718, 293, 341, 1374, 551, 13], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 551, "seek": 147504, "start": 1482.44, "end": 1485.24, "text": " And so let in Swift means constant.", "tokens": [400, 370, 718, 294, 25539, 1355, 5754, 13], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 552, "seek": 147504, "start": 1485.24, "end": 1486.6399999999999, "text": " Var means variable.", "tokens": [14662, 1355, 7006, 13], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 553, "seek": 147504, "start": 1486.6399999999999, "end": 1487.8799999999999, "text": " And so it's super easy.", "tokens": [400, 370, 309, 311, 1687, 1858, 13], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 554, "seek": 147504, "start": 1487.8799999999999, "end": 1489.92, "text": " And as Jeremy, I think, loves to say in a workbook,", "tokens": [400, 382, 17809, 11, 286, 519, 11, 6752, 281, 584, 294, 257, 589, 2939, 11], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 555, "seek": 147504, "start": 1489.92, "end": 1491.04, "text": " just declare everything var.", "tokens": [445, 19710, 1203, 1374, 13], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 556, "seek": 147504, "start": 1491.04, "end": 1492.76, "text": " And then you don't have to worry about it.", "tokens": [400, 550, 291, 500, 380, 362, 281, 3292, 466, 309, 13], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 557, "seek": 147504, "start": 1492.76, "end": 1495.48, "text": " And then you can change it however much you want.", "tokens": [400, 550, 291, 393, 1319, 309, 4461, 709, 291, 528, 13], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 558, "seek": 147504, "start": 1495.48, "end": 1498.92, "text": " But you can see if you declare a constant, like pi,", "tokens": [583, 291, 393, 536, 498, 291, 19710, 257, 5754, 11, 411, 3895, 11], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 559, "seek": 147504, "start": 1498.92, "end": 1503.8, "text": " because pi should not change, it makes sense to use let.", "tokens": [570, 3895, 820, 406, 1319, 11, 309, 1669, 2020, 281, 764, 718, 13], "temperature": 0.0, "avg_logprob": -0.11437177022298177, "compression_ratio": 1.7525423728813558, "no_speech_prob": 2.9942775654490106e-06}, {"id": 560, "seek": 150380, "start": 1503.8, "end": 1506.08, "text": " If you try to change it, change a constant,", "tokens": [759, 291, 853, 281, 1319, 309, 11, 1319, 257, 5754, 11], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 561, "seek": 150380, "start": 1506.08, "end": 1507.24, "text": " you'll get this error message.", "tokens": [291, 603, 483, 341, 6713, 3636, 13], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 562, "seek": 150380, "start": 1507.24, "end": 1511.04, "text": " And this error message says something like cell 5, line 1.", "tokens": [400, 341, 6713, 3636, 1619, 746, 411, 2815, 1025, 11, 1622, 502, 13], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 563, "seek": 150380, "start": 1511.04, "end": 1513.8799999999999, "text": " One of the cool things about Jupyter is if you hit Shift L,", "tokens": [1485, 295, 264, 1627, 721, 466, 22125, 88, 391, 307, 498, 291, 2045, 28304, 441, 11], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 564, "seek": 150380, "start": 1513.8799999999999, "end": 1515.68, "text": " you get line numbers in here.", "tokens": [291, 483, 1622, 3547, 294, 510, 13], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 565, "seek": 150380, "start": 1515.68, "end": 1519.04, "text": " And here you can see it's referring to cell 5, line 1.", "tokens": [400, 510, 291, 393, 536, 309, 311, 13761, 281, 2815, 1025, 11, 1622, 502, 13], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 566, "seek": 150380, "start": 1519.04, "end": 1522.44, "text": " And it says, hey, if you go to cell 3, line 2, up here,", "tokens": [400, 309, 1619, 11, 4177, 11, 498, 291, 352, 281, 2815, 805, 11, 1622, 568, 11, 493, 510, 11], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 567, "seek": 150380, "start": 1522.44, "end": 1524.72, "text": " you can change this let into a var.", "tokens": [291, 393, 1319, 341, 718, 666, 257, 1374, 13], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 568, "seek": 150380, "start": 1524.72, "end": 1525.9199999999998, "text": " And now your code will work.", "tokens": [400, 586, 428, 3089, 486, 589, 13], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 569, "seek": 150380, "start": 1525.9199999999998, "end": 1528.2, "text": " And so it's trying to help you out here.", "tokens": [400, 370, 309, 311, 1382, 281, 854, 291, 484, 510, 13], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 570, "seek": 150380, "start": 1528.2, "end": 1529.56, "text": " So that's something that you'll see.", "tokens": [407, 300, 311, 746, 300, 291, 603, 536, 13], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 571, "seek": 150380, "start": 1529.56, "end": 1531.6, "text": " That's super awesome.", "tokens": [663, 311, 1687, 3476, 13], "temperature": 0.0, "avg_logprob": -0.16402845075053554, "compression_ratio": 1.8211678832116789, "no_speech_prob": 3.4800945286406204e-05}, {"id": 572, "seek": 153160, "start": 1531.6, "end": 1534.8, "text": " And I'll just mention, for people watching", "tokens": [400, 286, 603, 445, 2152, 11, 337, 561, 1976], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 573, "seek": 153160, "start": 1534.8, "end": 1538.52, "text": " that have a background in Swift programming,", "tokens": [300, 362, 257, 3678, 294, 25539, 9410, 11], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 574, "seek": 153160, "start": 1538.52, "end": 1540.48, "text": " there's a tendency in that culture", "tokens": [456, 311, 257, 18187, 294, 300, 3713], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 575, "seek": 153160, "start": 1540.48, "end": 1544.0, "text": " to kind of keep things closed, keep things constant,", "tokens": [281, 733, 295, 1066, 721, 5395, 11, 1066, 721, 5754, 11], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 576, "seek": 153160, "start": 1544.0, "end": 1545.08, "text": " keep things private.", "tokens": [1066, 721, 4551, 13], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 577, "seek": 153160, "start": 1545.08, "end": 1547.32, "text": " And there's lots of good reasons for that.", "tokens": [400, 456, 311, 3195, 295, 665, 4112, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 578, "seek": 153160, "start": 1547.32, "end": 1550.84, "text": " But when you're kind of getting into this deep learning mode,", "tokens": [583, 562, 291, 434, 733, 295, 1242, 666, 341, 2452, 2539, 4391, 11], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 579, "seek": 153160, "start": 1550.84, "end": 1553.36, "text": " we generally represent flipping everything upside down,", "tokens": [321, 5101, 2906, 26886, 1203, 14119, 760, 11], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 580, "seek": 153160, "start": 1553.36, "end": 1556.0, "text": " at least for the R&D and prototyping process.", "tokens": [412, 1935, 337, 264, 497, 5, 35, 293, 46219, 3381, 1399, 13], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 581, "seek": 153160, "start": 1556.0, "end": 1558.9199999999998, "text": " Because you want things to be infinitely hackable,", "tokens": [1436, 291, 528, 721, 281, 312, 36227, 10339, 712, 11], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 582, "seek": 153160, "start": 1558.9199999999998, "end": 1560.36, "text": " the way Chris describes.", "tokens": [264, 636, 6688, 15626, 13], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 583, "seek": 153160, "start": 1560.36, "end": 1561.28, "text": " You want them to be var.", "tokens": [509, 528, 552, 281, 312, 1374, 13], "temperature": 0.0, "avg_logprob": -0.12676844963660608, "compression_ratio": 1.6688741721854305, "no_speech_prob": 2.7956364647252485e-05}, {"id": 584, "seek": 156128, "start": 1561.28, "end": 1562.24, "text": " So you can change them.", "tokens": [407, 291, 393, 1319, 552, 13], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 585, "seek": 156128, "start": 1562.24, "end": 1564.8, "text": " You want to be public so that you can see inside them.", "tokens": [509, 528, 281, 312, 1908, 370, 300, 291, 393, 536, 1854, 552, 13], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 586, "seek": 156128, "start": 1564.8, "end": 1566.32, "text": " And so you'll actually find there's", "tokens": [400, 370, 291, 603, 767, 915, 456, 311], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 587, "seek": 156128, "start": 1566.32, "end": 1571.52, "text": " been recent PRs to Swift for TensorFlow itself,", "tokens": [668, 5162, 11568, 82, 281, 25539, 337, 37624, 2564, 11], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 588, "seek": 156128, "start": 1571.52, "end": 1574.76, "text": " where we're starting to change APIs in this way", "tokens": [689, 321, 434, 2891, 281, 1319, 21445, 294, 341, 636], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 589, "seek": 156128, "start": 1574.76, "end": 1578.92, "text": " to kind of make it so that people can look inside the covers", "tokens": [281, 733, 295, 652, 309, 370, 300, 561, 393, 574, 1854, 264, 10538], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 590, "seek": 156128, "start": 1578.92, "end": 1580.08, "text": " and change things more.", "tokens": [293, 1319, 721, 544, 13], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 591, "seek": 156128, "start": 1580.08, "end": 1580.68, "text": " Yep.", "tokens": [7010, 13], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 592, "seek": 156128, "start": 1580.68, "end": 1583.28, "text": " So you may notice that we're not using a lot of types here.", "tokens": [407, 291, 815, 3449, 300, 321, 434, 406, 1228, 257, 688, 295, 3467, 510, 13], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 593, "seek": 156128, "start": 1583.28, "end": 1584.6399999999999, "text": " But Swift is a typed language.", "tokens": [583, 25539, 307, 257, 33941, 2856, 13], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 594, "seek": 156128, "start": 1584.6399999999999, "end": 1586.8799999999999, "text": " Types are actually a very important way", "tokens": [5569, 5190, 366, 767, 257, 588, 1021, 636], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 595, "seek": 156128, "start": 1586.8799999999999, "end": 1588.6399999999999, "text": " that the compiler can help you, because you", "tokens": [300, 264, 31958, 393, 854, 291, 11, 570, 291], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 596, "seek": 156128, "start": 1588.6399999999999, "end": 1590.28, "text": " can detect errors early.", "tokens": [393, 5531, 13603, 2440, 13], "temperature": 0.0, "avg_logprob": -0.1257055406090167, "compression_ratio": 1.7123287671232876, "no_speech_prob": 2.668352499313187e-05}, {"id": 597, "seek": 159028, "start": 1590.28, "end": 1592.72, "text": " What Swift does is it has a thing called type inference.", "tokens": [708, 25539, 775, 307, 309, 575, 257, 551, 1219, 2010, 38253, 13], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 598, "seek": 159028, "start": 1592.72, "end": 1595.6399999999999, "text": " And so when you say var x equals 4,", "tokens": [400, 370, 562, 291, 584, 1374, 2031, 6915, 1017, 11], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 599, "seek": 159028, "start": 1595.6399999999999, "end": 1596.92, "text": " it knows that 4 is an int.", "tokens": [309, 3255, 300, 1017, 307, 364, 560, 13], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 600, "seek": 159028, "start": 1596.92, "end": 1598.44, "text": " And so it will default it to an int.", "tokens": [400, 370, 309, 486, 7576, 309, 281, 364, 560, 13], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 601, "seek": 159028, "start": 1598.44, "end": 1600.92, "text": " Or if you say var x is equal to 1.0,", "tokens": [1610, 498, 291, 584, 1374, 2031, 307, 2681, 281, 502, 13, 15, 11], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 602, "seek": 159028, "start": 1600.92, "end": 1603.68, "text": " it will say that, oh, that's a float or a double.", "tokens": [309, 486, 584, 300, 11, 1954, 11, 300, 311, 257, 15706, 420, 257, 3834, 13], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 603, "seek": 159028, "start": 1603.68, "end": 1605.84, "text": " And so types in Swift are written with a colon here.", "tokens": [400, 370, 3467, 294, 25539, 366, 3720, 365, 257, 8255, 510, 13], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 604, "seek": 159028, "start": 1605.84, "end": 1607.2, "text": " And so you can say, OK, well, even", "tokens": [400, 370, 291, 393, 584, 11, 2264, 11, 731, 11, 754], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 605, "seek": 159028, "start": 1607.2, "end": 1608.92, "text": " though this would normally be an integer,", "tokens": [1673, 341, 576, 5646, 312, 364, 24922, 11], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 606, "seek": 159028, "start": 1608.92, "end": 1610.84, "text": " actually make it a float.", "tokens": [767, 652, 309, 257, 15706, 13], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 607, "seek": 159028, "start": 1610.84, "end": 1613.08, "text": " Swift supports important things like emoji.", "tokens": [25539, 9346, 1021, 721, 411, 31595, 13], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 608, "seek": 159028, "start": 1613.08, "end": 1615.32, "text": " Emoji is totally better than Greek letters, Jeremy.", "tokens": [462, 3280, 4013, 307, 3879, 1101, 813, 10281, 7825, 11, 17809, 13], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 609, "seek": 159028, "start": 1615.32, "end": 1618.12, "text": " Yeah, so actually, Chris asked me last week.", "tokens": [865, 11, 370, 767, 11, 6688, 2351, 385, 1036, 1243, 13], "temperature": 0.0, "avg_logprob": -0.15126605121635953, "compression_ratio": 1.7088607594936709, "no_speech_prob": 1.75016848515952e-05}, {"id": 610, "seek": 161812, "start": 1618.12, "end": 1620.84, "text": " He goes, Jeremy, yes, Chris, what?", "tokens": [634, 1709, 11, 17809, 11, 2086, 11, 6688, 11, 437, 30], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 611, "seek": 161812, "start": 1620.84, "end": 1623.6, "text": " He's like, how do you feel like emoji,", "tokens": [634, 311, 411, 11, 577, 360, 291, 841, 411, 31595, 11], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 612, "seek": 161812, "start": 1623.6, "end": 1626.28, "text": " about emoji in notebooks in Swift code?", "tokens": [466, 31595, 294, 43782, 294, 25539, 3089, 30], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 613, "seek": 161812, "start": 1626.28, "end": 1628.2399999999998, "text": " And I literally said to him, Chris,", "tokens": [400, 286, 3736, 848, 281, 796, 11, 6688, 11], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 614, "seek": 161812, "start": 1628.2399999999998, "end": 1631.9599999999998, "text": " they're fine as long as it's the pile of poo emoji", "tokens": [436, 434, 2489, 382, 938, 382, 309, 311, 264, 14375, 295, 36743, 31595], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 615, "seek": 161812, "start": 1631.9599999999998, "end": 1633.1599999999999, "text": " and it's next to a cow.", "tokens": [293, 309, 311, 958, 281, 257, 8408, 13], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 616, "seek": 161812, "start": 1633.1599999999999, "end": 1635.7199999999998, "text": " And Chris goes, OK, it's a pile of poo emoji,", "tokens": [400, 6688, 1709, 11, 2264, 11, 309, 311, 257, 14375, 295, 36743, 31595, 11], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 617, "seek": 161812, "start": 1635.7199999999998, "end": 1636.52, "text": " but it's next to a dog.", "tokens": [457, 309, 311, 958, 281, 257, 3000, 13], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 618, "seek": 161812, "start": 1636.52, "end": 1637.1999999999998, "text": " Is that OK?", "tokens": [1119, 300, 2264, 30], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 619, "seek": 161812, "start": 1637.1999999999998, "end": 1638.28, "text": " So like, yeah, OK.", "tokens": [407, 411, 11, 1338, 11, 2264, 13], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 620, "seek": 161812, "start": 1638.28, "end": 1640.52, "text": " Yeah, we split the difference.", "tokens": [865, 11, 321, 7472, 264, 2649, 13], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 621, "seek": 161812, "start": 1640.52, "end": 1643.8799999999999, "text": " So this is great power and great responsibility.", "tokens": [407, 341, 307, 869, 1347, 293, 869, 6357, 13], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 622, "seek": 161812, "start": 1643.8799999999999, "end": 1646.08, "text": " If you name all of your variables pile of poo,", "tokens": [759, 291, 1315, 439, 295, 428, 9102, 14375, 295, 36743, 11], "temperature": 0.0, "avg_logprob": -0.1705727448334565, "compression_ratio": 1.7121212121212122, "no_speech_prob": 1.6962267181952484e-05}, {"id": 623, "seek": 164608, "start": 1646.08, "end": 1648.96, "text": " then your code is never mind.", "tokens": [550, 428, 3089, 307, 1128, 1575, 13], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 624, "seek": 164608, "start": 1648.96, "end": 1650.76, "text": " Static and fun.", "tokens": [745, 2399, 293, 1019, 13], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 625, "seek": 164608, "start": 1650.76, "end": 1652.9199999999998, "text": " Yes, yes, yes, descriptive, maybe.", "tokens": [1079, 11, 2086, 11, 2086, 11, 42585, 11, 1310, 13], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 626, "seek": 164608, "start": 1652.9199999999998, "end": 1654.6399999999999, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 627, "seek": 164608, "start": 1654.6399999999999, "end": 1656.28, "text": " So let's talk about a few other things.", "tokens": [407, 718, 311, 751, 466, 257, 1326, 661, 721, 13], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 628, "seek": 164608, "start": 1656.28, "end": 1660.1599999999999, "text": " So Python uses indentation.", "tokens": [407, 15329, 4960, 44494, 399, 13], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 629, "seek": 164608, "start": 1660.1599999999999, "end": 1661.6799999999998, "text": " Swift uses curly braces.", "tokens": [25539, 4960, 32066, 41537, 13], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 630, "seek": 164608, "start": 1661.6799999999998, "end": 1664.04, "text": " So I don't think that there's any,", "tokens": [407, 286, 500, 380, 519, 300, 456, 311, 604, 11], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 631, "seek": 164608, "start": 1664.04, "end": 1666.12, "text": " I'm not going to say one's better than the other.", "tokens": [286, 478, 406, 516, 281, 584, 472, 311, 1101, 813, 264, 661, 13], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 632, "seek": 164608, "start": 1666.12, "end": 1668.4399999999998, "text": " Curly braces are more commonly used,", "tokens": [7907, 356, 41537, 366, 544, 12719, 1143, 11], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 633, "seek": 164608, "start": 1668.4399999999998, "end": 1670.1999999999998, "text": " and so that's why Swift uses them.", "tokens": [293, 370, 300, 311, 983, 25539, 4960, 552, 13], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 634, "seek": 164608, "start": 1670.1999999999998, "end": 1672.56, "text": " But they're basically the same thing.", "tokens": [583, 436, 434, 1936, 264, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 635, "seek": 164608, "start": 1672.56, "end": 1675.52, "text": " Just you'll figure it out.", "tokens": [1449, 291, 603, 2573, 309, 484, 13], "temperature": 0.0, "avg_logprob": -0.17032189667224884, "compression_ratio": 1.6194331983805668, "no_speech_prob": 8.012417310965247e-06}, {"id": 636, "seek": 167552, "start": 1675.52, "end": 1676.44, "text": " How do functions work?", "tokens": [1012, 360, 6828, 589, 30], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 637, "seek": 167552, "start": 1676.44, "end": 1680.36, "text": " Well, in Python you use def, and Swift you use func.", "tokens": [1042, 11, 294, 15329, 291, 764, 1060, 11, 293, 25539, 291, 764, 1019, 66, 13], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 638, "seek": 167552, "start": 1680.36, "end": 1681.8, "text": " Because it's a function.", "tokens": [1436, 309, 311, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 639, "seek": 167552, "start": 1681.8, "end": 1684.24, "text": " And so what this is, this is defining a function,", "tokens": [400, 370, 437, 341, 307, 11, 341, 307, 17827, 257, 2445, 11], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 640, "seek": 167552, "start": 1684.24, "end": 1686.96, "text": " and you declare the inputs, the signature, x and y,", "tokens": [293, 291, 19710, 264, 15743, 11, 264, 13397, 11, 2031, 293, 288, 11], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 641, "seek": 167552, "start": 1686.96, "end": 1688.68, "text": " and it returns a float, and you implement it", "tokens": [293, 309, 11247, 257, 15706, 11, 293, 291, 4445, 309], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 642, "seek": 167552, "start": 1688.68, "end": 1690.6, "text": " with the thing you'd expect.", "tokens": [365, 264, 551, 291, 1116, 2066, 13], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 643, "seek": 167552, "start": 1690.6, "end": 1693.56, "text": " When you call it, you pass keyword arguments.", "tokens": [1133, 291, 818, 309, 11, 291, 1320, 20428, 12869, 13], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 644, "seek": 167552, "start": 1693.56, "end": 1695.6399999999999, "text": " Swift is very opinionated about keyword arguments.", "tokens": [25539, 307, 588, 4800, 770, 466, 20428, 12869, 13], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 645, "seek": 167552, "start": 1695.6399999999999, "end": 1698.76, "text": " And so if you say that this thing has x and y as arguments,", "tokens": [400, 370, 498, 291, 584, 300, 341, 551, 575, 2031, 293, 288, 382, 12869, 11], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 646, "seek": 167552, "start": 1698.76, "end": 1700.28, "text": " you have to pass x and y.", "tokens": [291, 362, 281, 1320, 2031, 293, 288, 13], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 647, "seek": 167552, "start": 1700.28, "end": 1701.92, "text": " And so one of the funny things you'll see", "tokens": [400, 370, 472, 295, 264, 4074, 721, 291, 603, 536], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 648, "seek": 167552, "start": 1701.92, "end": 1704.4, "text": " is you'll see this underbar thing going on right here.", "tokens": [307, 291, 603, 536, 341, 833, 5356, 551, 516, 322, 558, 510, 13], "temperature": 0.0, "avg_logprob": -0.15314708733410567, "compression_ratio": 1.8911564625850341, "no_speech_prob": 2.8129175007052254e-06}, {"id": 649, "seek": 170440, "start": 1704.4, "end": 1707.64, "text": " And this is saying that ignore, underbars ignore,", "tokens": [400, 341, 307, 1566, 300, 11200, 11, 833, 42162, 11200, 11], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 650, "seek": 170440, "start": 1707.64, "end": 1709.96, "text": " just like Python, ignore the keyword argument.", "tokens": [445, 411, 15329, 11, 11200, 264, 20428, 6770, 13], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 651, "seek": 170440, "start": 1709.96, "end": 1711.92, "text": " And so when you call it, you don't pass it.", "tokens": [400, 370, 562, 291, 818, 309, 11, 291, 500, 380, 1320, 309, 13], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 652, "seek": 170440, "start": 1711.92, "end": 1712.88, "text": " That's all that means.", "tokens": [663, 311, 439, 300, 1355, 13], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 653, "seek": 170440, "start": 1712.88, "end": 1716.8400000000001, "text": " I've got to say, I love almost everything about Swift,", "tokens": [286, 600, 658, 281, 584, 11, 286, 959, 1920, 1203, 466, 25539, 11], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 654, "seek": 170440, "start": 1716.8400000000001, "end": 1718.1200000000001, "text": " except for three things.", "tokens": [3993, 337, 1045, 721, 13], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 655, "seek": 170440, "start": 1718.1200000000001, "end": 1719.6000000000001, "text": " This is one of the three things.", "tokens": [639, 307, 472, 295, 264, 1045, 721, 13], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 656, "seek": 170440, "start": 1719.6000000000001, "end": 1724.52, "text": " So this bit I find awkward, because these positional", "tokens": [407, 341, 857, 286, 915, 11411, 11, 570, 613, 2535, 304], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 657, "seek": 170440, "start": 1724.52, "end": 1727.16, "text": " parameters, you can't even change the order of them.", "tokens": [9834, 11, 291, 393, 380, 754, 1319, 264, 1668, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 658, "seek": 170440, "start": 1727.16, "end": 1728.48, "text": " Even though they're positional, you", "tokens": [2754, 1673, 436, 434, 2535, 304, 11, 291], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 659, "seek": 170440, "start": 1728.48, "end": 1730.24, "text": " can't use them in a different order.", "tokens": [393, 380, 764, 552, 294, 257, 819, 1668, 13], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 660, "seek": 170440, "start": 1730.24, "end": 1732.76, "text": " If you do have that underscore to say", "tokens": [759, 291, 360, 362, 300, 37556, 281, 584], "temperature": 0.0, "avg_logprob": -0.15884771278436235, "compression_ratio": 1.7177700348432057, "no_speech_prob": 4.985565465176478e-05}, {"id": 661, "seek": 173276, "start": 1732.76, "end": 1736.0, "text": " you don't have to name it, then you're not allowed to name it.", "tokens": [291, 500, 380, 362, 281, 1315, 309, 11, 550, 291, 434, 406, 4350, 281, 1315, 309, 13], "temperature": 0.0, "avg_logprob": -0.16291005364779768, "compression_ratio": 1.6103896103896105, "no_speech_prob": 1.0450641639181413e-05}, {"id": 662, "seek": 173276, "start": 1736.0, "end": 1737.8, "text": " Like, it's, I don't know.", "tokens": [1743, 11, 309, 311, 11, 286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.16291005364779768, "compression_ratio": 1.6103896103896105, "no_speech_prob": 1.0450641639181413e-05}, {"id": 663, "seek": 173276, "start": 1737.8, "end": 1742.08, "text": " I find this bit nasty, but it's like almost everything else", "tokens": [286, 915, 341, 857, 17923, 11, 457, 309, 311, 411, 1920, 1203, 1646], "temperature": 0.0, "avg_logprob": -0.16291005364779768, "compression_ratio": 1.6103896103896105, "no_speech_prob": 1.0450641639181413e-05}, {"id": 664, "seek": 173276, "start": 1742.08, "end": 1744.4, "text": " I love about Swift, so I just put up with it.", "tokens": [286, 959, 466, 25539, 11, 370, 286, 445, 829, 493, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.16291005364779768, "compression_ratio": 1.6103896103896105, "no_speech_prob": 1.0450641639181413e-05}, {"id": 665, "seek": 173276, "start": 1744.4, "end": 1748.0, "text": " This is also not my opinion of the right thing.", "tokens": [639, 307, 611, 406, 452, 4800, 295, 264, 558, 551, 13], "temperature": 0.0, "avg_logprob": -0.16291005364779768, "compression_ratio": 1.6103896103896105, "no_speech_prob": 1.0450641639181413e-05}, {"id": 666, "seek": 173276, "start": 1748.0, "end": 1750.72, "text": " But the argument for that is consistency of APIs", "tokens": [583, 264, 6770, 337, 300, 307, 14416, 295, 21445], "temperature": 0.0, "avg_logprob": -0.16291005364779768, "compression_ratio": 1.6103896103896105, "no_speech_prob": 1.0450641639181413e-05}, {"id": 667, "seek": 173276, "start": 1750.72, "end": 1754.8, "text": " is important, and it works fine.", "tokens": [307, 1021, 11, 293, 309, 1985, 2489, 13], "temperature": 0.0, "avg_logprob": -0.16291005364779768, "compression_ratio": 1.6103896103896105, "no_speech_prob": 1.0450641639181413e-05}, {"id": 668, "seek": 173276, "start": 1754.8, "end": 1757.28, "text": " So tuples work pretty much the same way as they do in Python.", "tokens": [407, 2604, 2622, 589, 1238, 709, 264, 912, 636, 382, 436, 360, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.16291005364779768, "compression_ratio": 1.6103896103896105, "no_speech_prob": 1.0450641639181413e-05}, {"id": 669, "seek": 173276, "start": 1757.28, "end": 1759.8, "text": " You can use them to return multiple values, which", "tokens": [509, 393, 764, 552, 281, 2736, 3866, 4190, 11, 597], "temperature": 0.0, "avg_logprob": -0.16291005364779768, "compression_ratio": 1.6103896103896105, "no_speech_prob": 1.0450641639181413e-05}, {"id": 670, "seek": 173276, "start": 1759.8, "end": 1760.84, "text": " is what we're doing here.", "tokens": [307, 437, 321, 434, 884, 510, 13], "temperature": 0.0, "avg_logprob": -0.16291005364779768, "compression_ratio": 1.6103896103896105, "no_speech_prob": 1.0450641639181413e-05}, {"id": 671, "seek": 173276, "start": 1760.84, "end": 1762.44, "text": " So here we're turning two floats,", "tokens": [407, 510, 321, 434, 6246, 732, 37878, 11], "temperature": 0.0, "avg_logprob": -0.16291005364779768, "compression_ratio": 1.6103896103896105, "no_speech_prob": 1.0450641639181413e-05}, {"id": 672, "seek": 176244, "start": 1762.44, "end": 1764.64, "text": " and we're saying the first one is sine and the second one", "tokens": [293, 321, 434, 1566, 264, 700, 472, 307, 18609, 293, 264, 1150, 472], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 673, "seek": 176244, "start": 1764.64, "end": 1765.6000000000001, "text": " is cosine.", "tokens": [307, 23565, 13], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 674, "seek": 176244, "start": 1765.6000000000001, "end": 1766.6000000000001, "text": " You get destructuring.", "tokens": [509, 483, 2677, 1757, 1345, 13], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 675, "seek": 176244, "start": 1766.6000000000001, "end": 1769.52, "text": " You get access to the tuples, all the nice things", "tokens": [509, 483, 2105, 281, 264, 2604, 2622, 11, 439, 264, 1481, 721], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 676, "seek": 176244, "start": 1769.52, "end": 1770.6000000000001, "text": " that you'd expect.", "tokens": [300, 291, 1116, 2066, 13], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 677, "seek": 176244, "start": 1770.6000000000001, "end": 1772.4, "text": " One of the things that's different about Swift", "tokens": [1485, 295, 264, 721, 300, 311, 819, 466, 25539], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 678, "seek": 176244, "start": 1772.4, "end": 1774.56, "text": " in Python, Swift has this thing called struct.", "tokens": [294, 15329, 11, 25539, 575, 341, 551, 1219, 6594, 13], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 679, "seek": 176244, "start": 1774.56, "end": 1777.56, "text": " And the way to think about it to begin with", "tokens": [400, 264, 636, 281, 519, 466, 309, 281, 1841, 365], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 680, "seek": 176244, "start": 1777.56, "end": 1780.56, "text": " is it's just like a class in Python.", "tokens": [307, 309, 311, 445, 411, 257, 1508, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 681, "seek": 176244, "start": 1780.56, "end": 1782.52, "text": " Structs are super powerful, though.", "tokens": [745, 1757, 82, 366, 1687, 4005, 11, 1673, 13], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 682, "seek": 176244, "start": 1782.52, "end": 1783.64, "text": " They are more efficient.", "tokens": [814, 366, 544, 7148, 13], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 683, "seek": 176244, "start": 1783.64, "end": 1785.26, "text": " There's a lot of good things about them.", "tokens": [821, 311, 257, 688, 295, 665, 721, 466, 552, 13], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 684, "seek": 176244, "start": 1785.26, "end": 1786.96, "text": " They don't require memory allocation.", "tokens": [814, 500, 380, 3651, 4675, 27599, 13], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 685, "seek": 176244, "start": 1786.96, "end": 1788.56, "text": " And we'll talk about why that matters.", "tokens": [400, 321, 603, 751, 466, 983, 300, 7001, 13], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 686, "seek": 176244, "start": 1788.56, "end": 1790.8400000000001, "text": " If you've got a C programming background,", "tokens": [759, 291, 600, 658, 257, 383, 9410, 3678, 11], "temperature": 0.0, "avg_logprob": -0.17588092396094365, "compression_ratio": 1.7375, "no_speech_prob": 4.4253979467612226e-06}, {"id": 687, "seek": 179084, "start": 1790.84, "end": 1792.56, "text": " it's not much like that at all.", "tokens": [309, 311, 406, 709, 411, 300, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 688, "seek": 179084, "start": 1792.56, "end": 1795.04, "text": " So I would say think of it more like a Python class", "tokens": [407, 286, 576, 584, 519, 295, 309, 544, 411, 257, 15329, 1508], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 689, "seek": 179084, "start": 1795.04, "end": 1796.12, "text": " than a C struct.", "tokens": [813, 257, 383, 6594, 13], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 690, "seek": 179084, "start": 1796.12, "end": 1796.9599999999998, "text": " Yeah, exactly.", "tokens": [865, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 691, "seek": 179084, "start": 1796.9599999999998, "end": 1798.8, "text": " And we'll show you a little bit about that.", "tokens": [400, 321, 603, 855, 291, 257, 707, 857, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 692, "seek": 179084, "start": 1798.8, "end": 1801.6399999999999, "text": " So here I have a complex F struct,", "tokens": [407, 510, 286, 362, 257, 3997, 479, 6594, 11], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 693, "seek": 179084, "start": 1801.6399999999999, "end": 1803.12, "text": " and I've got a real and imaginary.", "tokens": [293, 286, 600, 658, 257, 957, 293, 26164, 13], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 694, "seek": 179084, "start": 1803.12, "end": 1803.9599999999998, "text": " I stick it in there.", "tokens": [286, 2897, 309, 294, 456, 13], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 695, "seek": 179084, "start": 1803.9599999999998, "end": 1805.48, "text": " I can create one of these complex Fs.", "tokens": [286, 393, 1884, 472, 295, 613, 3997, 479, 82, 13], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 696, "seek": 179084, "start": 1805.48, "end": 1808.32, "text": " By specifying these things, I print it out, and I get it back.", "tokens": [3146, 1608, 5489, 613, 721, 11, 286, 4482, 309, 484, 11, 293, 286, 483, 309, 646, 13], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 697, "seek": 179084, "start": 1808.32, "end": 1811.08, "text": " And in Python, there's this thing called data class.", "tokens": [400, 294, 15329, 11, 456, 311, 341, 551, 1219, 1412, 1508, 13], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 698, "seek": 179084, "start": 1811.08, "end": 1812.72, "text": " Yeah, so we've used data class.", "tokens": [865, 11, 370, 321, 600, 1143, 1412, 1508, 13], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 699, "seek": 179084, "start": 1812.72, "end": 1816.6399999999999, "text": " And it's interesting, when I threw in a data class here,", "tokens": [400, 309, 311, 1880, 11, 562, 286, 11918, 294, 257, 1412, 1508, 510, 11], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 700, "seek": 179084, "start": 1816.6399999999999, "end": 1818.84, "text": " it looks almost exactly the same.", "tokens": [309, 1542, 1920, 2293, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.16633195411868212, "compression_ratio": 1.7222222222222223, "no_speech_prob": 2.9479324439307675e-06}, {"id": 701, "seek": 181884, "start": 1818.84, "end": 1822.36, "text": " There's some extra boilerplate we need in the Python version.", "tokens": [821, 311, 512, 2857, 39228, 37008, 321, 643, 294, 264, 15329, 3037, 13], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 702, "seek": 181884, "start": 1822.36, "end": 1824.56, "text": " For example, we have to put the two things on different lines.", "tokens": [1171, 1365, 11, 321, 362, 281, 829, 264, 732, 721, 322, 819, 3876, 13], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 703, "seek": 181884, "start": 1824.56, "end": 1827.04, "text": " We can't put them on the same line.", "tokens": [492, 393, 380, 829, 552, 322, 264, 912, 1622, 13], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 704, "seek": 181884, "start": 1827.04, "end": 1830.6, "text": " But overall, like a lot of things between Swift and Python,", "tokens": [583, 4787, 11, 411, 257, 688, 295, 721, 1296, 25539, 293, 15329, 11], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 705, "seek": 181884, "start": 1830.6, "end": 1833.08, "text": " ends up looking extremely comfortable.", "tokens": [5314, 493, 1237, 4664, 4619, 13], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 706, "seek": 181884, "start": 1833.08, "end": 1833.8799999999999, "text": " Yeah, OK.", "tokens": [865, 11, 2264, 13], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 707, "seek": 181884, "start": 1833.8799999999999, "end": 1835.72, "text": " So now one of the bad things about this thing", "tokens": [407, 586, 472, 295, 264, 1578, 721, 466, 341, 551], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 708, "seek": 181884, "start": 1835.72, "end": 1837.1999999999998, "text": " is you notice it's defined with floats.", "tokens": [307, 291, 3449, 309, 311, 7642, 365, 37878, 13], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 709, "seek": 181884, "start": 1837.1999999999998, "end": 1839.1599999999999, "text": " But complex numbers work with integers as well.", "tokens": [583, 3997, 3547, 589, 365, 41674, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 710, "seek": 181884, "start": 1839.1599999999999, "end": 1841.36, "text": " And they work with doubles and lots of other things.", "tokens": [400, 436, 589, 365, 31634, 293, 3195, 295, 661, 721, 13], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 711, "seek": 181884, "start": 1841.36, "end": 1842.82, "text": " So the way that Swift handles this", "tokens": [407, 264, 636, 300, 25539, 18722, 341], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 712, "seek": 181884, "start": 1842.82, "end": 1844.12, "text": " is this thing called generics.", "tokens": [307, 341, 551, 1219, 1337, 1167, 13], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 713, "seek": 181884, "start": 1844.12, "end": 1846.6399999999999, "text": " And we'll talk more about the details of generics later.", "tokens": [400, 321, 603, 751, 544, 466, 264, 4365, 295, 1337, 1167, 1780, 13], "temperature": 0.0, "avg_logprob": -0.18023942972158458, "compression_ratio": 1.7335329341317365, "no_speech_prob": 2.3920645617181435e-05}, {"id": 714, "seek": 184664, "start": 1846.64, "end": 1849.0800000000002, "text": " But basically, what we can do is we can say,", "tokens": [583, 1936, 11, 437, 321, 393, 360, 307, 321, 393, 584, 11], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 715, "seek": 184664, "start": 1849.0800000000002, "end": 1851.3200000000002, "text": " let's define a complex type.", "tokens": [718, 311, 6964, 257, 3997, 2010, 13], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 716, "seek": 184664, "start": 1851.3200000000002, "end": 1856.6000000000001, "text": " And complex works with any type T and anything that has signed.", "tokens": [400, 3997, 1985, 365, 604, 2010, 314, 293, 1340, 300, 575, 8175, 13], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 717, "seek": 184664, "start": 1856.6000000000001, "end": 1857.68, "text": " And that's a number.", "tokens": [400, 300, 311, 257, 1230, 13], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 718, "seek": 184664, "start": 1857.68, "end": 1859.88, "text": " And that's what the sign numeric thing says.", "tokens": [400, 300, 311, 437, 264, 1465, 7866, 299, 551, 1619, 13], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 719, "seek": 184664, "start": 1859.88, "end": 1862.8000000000002, "text": " And so now what I can do is I can define the struct.", "tokens": [400, 370, 586, 437, 286, 393, 360, 307, 286, 393, 6964, 264, 6594, 13], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 720, "seek": 184664, "start": 1862.8000000000002, "end": 1865.8000000000002, "text": " And I can use it down here with integers and with floating", "tokens": [400, 286, 393, 764, 309, 760, 510, 365, 41674, 293, 365, 12607], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 721, "seek": 184664, "start": 1865.8000000000002, "end": 1866.5600000000002, "text": " point.", "tokens": [935, 13], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 722, "seek": 184664, "start": 1866.5600000000002, "end": 1869.16, "text": " And it just figures out that T is enter, T is float,", "tokens": [400, 309, 445, 9624, 484, 300, 314, 307, 3242, 11, 314, 307, 15706, 11], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 723, "seek": 184664, "start": 1869.16, "end": 1870.6000000000001, "text": " depending on what you use it with.", "tokens": [5413, 322, 437, 291, 764, 309, 365, 13], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 724, "seek": 184664, "start": 1870.6000000000001, "end": 1873.64, "text": " And this is something that Python can't do, right?", "tokens": [400, 341, 307, 746, 300, 15329, 393, 380, 360, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 725, "seek": 184664, "start": 1873.64, "end": 1876.48, "text": " So with Python, if we remove the data class,", "tokens": [407, 365, 15329, 11, 498, 321, 4159, 264, 1412, 1508, 11], "temperature": 0.0, "avg_logprob": -0.13439420751623204, "compression_ratio": 1.8467153284671534, "no_speech_prob": 1.75011718965834e-05}, {"id": 726, "seek": 187648, "start": 1876.48, "end": 1878.16, "text": " we could certainly then remove the float.", "tokens": [321, 727, 3297, 550, 4159, 264, 15706, 13], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 727, "seek": 187648, "start": 1878.16, "end": 1879.68, "text": " And then we could have it untyped.", "tokens": [400, 550, 321, 727, 362, 309, 517, 874, 3452, 13], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 728, "seek": 187648, "start": 1879.68, "end": 1881.88, "text": " But we can't say in Python, these two", "tokens": [583, 321, 393, 380, 584, 294, 15329, 11, 613, 732], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 729, "seek": 187648, "start": 1881.88, "end": 1883.64, "text": " have to be of the same type.", "tokens": [362, 281, 312, 295, 264, 912, 2010, 13], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 730, "seek": 187648, "start": 1883.64, "end": 1885.48, "text": " But I don't know what type it is yet.", "tokens": [583, 286, 500, 380, 458, 437, 2010, 309, 307, 1939, 13], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 731, "seek": 187648, "start": 1885.48, "end": 1887.3600000000001, "text": " So this ability to use generics lets", "tokens": [407, 341, 3485, 281, 764, 1337, 1167, 6653], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 732, "seek": 187648, "start": 1887.3600000000001, "end": 1889.72, "text": " us do some pretty powerful stuff right out of the box.", "tokens": [505, 360, 512, 1238, 4005, 1507, 558, 484, 295, 264, 2424, 13], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 733, "seek": 187648, "start": 1889.72, "end": 1891.6, "text": " Yeah, and we'll talk about some of the really cool things", "tokens": [865, 11, 293, 321, 603, 751, 466, 512, 295, 264, 534, 1627, 721], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 734, "seek": 187648, "start": 1891.6, "end": 1895.2, "text": " that you can do that make it super flexible and super,", "tokens": [300, 291, 393, 360, 300, 652, 309, 1687, 11358, 293, 1687, 11], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 735, "seek": 187648, "start": 1895.2, "end": 1897.88, "text": " I mean, there's some really powerful things you can do.", "tokens": [286, 914, 11, 456, 311, 512, 534, 4005, 721, 291, 393, 360, 13], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 736, "seek": 187648, "start": 1897.88, "end": 1899.56, "text": " So we've got our complex here.", "tokens": [407, 321, 600, 658, 527, 3997, 510, 13], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 737, "seek": 187648, "start": 1899.56, "end": 1901.28, "text": " One of the things you can see we're doing", "tokens": [1485, 295, 264, 721, 291, 393, 536, 321, 434, 884], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 738, "seek": 187648, "start": 1901.28, "end": 1903.64, "text": " is that just like in Python, you have computed properties", "tokens": [307, 300, 445, 411, 294, 15329, 11, 291, 362, 40610, 7221], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 739, "seek": 187648, "start": 1903.64, "end": 1904.72, "text": " and stored properties.", "tokens": [293, 12187, 7221, 13], "temperature": 0.0, "avg_logprob": -0.15421168009440103, "compression_ratio": 1.8395061728395061, "no_speech_prob": 1.4063441085454542e-05}, {"id": 740, "seek": 190472, "start": 1904.72, "end": 1906.56, "text": " And here we have a computed property.", "tokens": [400, 510, 321, 362, 257, 40610, 4707, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 741, "seek": 190472, "start": 1906.56, "end": 1908.56, "text": " We can define a getter just in line.", "tokens": [492, 393, 6964, 257, 483, 391, 445, 294, 1622, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 742, "seek": 190472, "start": 1908.56, "end": 1909.98, "text": " And so it's just a stored property.", "tokens": [400, 370, 309, 311, 445, 257, 12187, 4707, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 743, "seek": 190472, "start": 1909.98, "end": 1911.2, "text": " But you provide a body.", "tokens": [583, 291, 2893, 257, 1772, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 744, "seek": 190472, "start": 1911.2, "end": 1912.52, "text": " It's quite simple.", "tokens": [467, 311, 1596, 2199, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 745, "seek": 190472, "start": 1912.52, "end": 1914.92, "text": " Here's a computed property doing a weird thing.", "tokens": [1692, 311, 257, 40610, 4707, 884, 257, 3657, 551, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 746, "seek": 190472, "start": 1914.92, "end": 1917.52, "text": " But here I just have a computed getter and a setter.", "tokens": [583, 510, 286, 445, 362, 257, 40610, 483, 391, 293, 257, 992, 391, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 747, "seek": 190472, "start": 1917.52, "end": 1919.04, "text": " And it's pretty straightforward.", "tokens": [400, 309, 311, 1238, 15325, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 748, "seek": 190472, "start": 1919.04, "end": 1920.96, "text": " This is very similar to C Sharp.", "tokens": [639, 307, 588, 2531, 281, 383, 31654, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 749, "seek": 190472, "start": 1920.96, "end": 1922.3, "text": " When you've got one of these, you", "tokens": [1133, 291, 600, 658, 472, 295, 613, 11, 291], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 750, "seek": 190472, "start": 1922.3, "end": 1924.3600000000001, "text": " can create some of these things.", "tokens": [393, 1884, 512, 295, 613, 721, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 751, "seek": 190472, "start": 1924.3600000000001, "end": 1925.88, "text": " You can use the computed property.", "tokens": [509, 393, 764, 264, 40610, 4707, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 752, "seek": 190472, "start": 1925.88, "end": 1928.24, "text": " And it works just like a normal property.", "tokens": [400, 309, 1985, 445, 411, 257, 2710, 4707, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 753, "seek": 190472, "start": 1928.24, "end": 1930.08, "text": " It's all very simple.", "tokens": [467, 311, 439, 588, 2199, 13], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 754, "seek": 190472, "start": 1930.08, "end": 1932.32, "text": " Now, one of the cool things about Swift", "tokens": [823, 11, 472, 295, 264, 1627, 721, 466, 25539], "temperature": 0.0, "avg_logprob": -0.1430465329077936, "compression_ratio": 1.8652482269503545, "no_speech_prob": 7.07138951838715e-06}, {"id": 755, "seek": 193232, "start": 1932.32, "end": 1935.4399999999998, "text": " is that after you define a type, you can add methods to it.", "tokens": [307, 300, 934, 291, 6964, 257, 2010, 11, 291, 393, 909, 7150, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 756, "seek": 193232, "start": 1935.4399999999998, "end": 1938.9199999999998, "text": " And this is something that might make you feel weird.", "tokens": [400, 341, 307, 746, 300, 1062, 652, 291, 841, 3657, 13], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 757, "seek": 193232, "start": 1938.9199999999998, "end": 1941.36, "text": " But you can add methods on anybody's type.", "tokens": [583, 291, 393, 909, 7150, 322, 4472, 311, 2010, 13], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 758, "seek": 193232, "start": 1941.36, "end": 1943.36, "text": " You can add it on your own, like we're doing here.", "tokens": [509, 393, 909, 309, 322, 428, 1065, 11, 411, 321, 434, 884, 510, 13], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 759, "seek": 193232, "start": 1943.36, "end": 1944.8999999999999, "text": " Or you can add it on standard library types.", "tokens": [1610, 291, 393, 909, 309, 322, 3832, 6405, 3467, 13], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 760, "seek": 193232, "start": 1944.8999999999999, "end": 1946.24, "text": " Or you can add it on anybody's.", "tokens": [1610, 291, 393, 909, 309, 322, 4472, 311, 13], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 761, "seek": 193232, "start": 1946.24, "end": 1947.76, "text": " I mean, it doesn't make us feel weird.", "tokens": [286, 914, 11, 309, 1177, 380, 652, 505, 841, 3657, 13], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 762, "seek": 193232, "start": 1947.76, "end": 1949.6399999999999, "text": " It doesn't make me feel weird, Chris, because we", "tokens": [467, 1177, 380, 652, 385, 841, 3657, 11, 6688, 11, 570, 321], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 763, "seek": 193232, "start": 1949.6399999999999, "end": 1951.2, "text": " do it in fast AI all the time.", "tokens": [360, 309, 294, 2370, 7318, 439, 264, 565, 13], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 764, "seek": 193232, "start": 1951.2, "end": 1953.0, "text": " It's called monkey patching.", "tokens": [467, 311, 1219, 17847, 9972, 278, 13], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 765, "seek": 193232, "start": 1953.0, "end": 1955.1599999999999, "text": " But it's kind of something that we're told to avoid,", "tokens": [583, 309, 311, 733, 295, 746, 300, 321, 434, 1907, 281, 5042, 11], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 766, "seek": 193232, "start": 1955.1599999999999, "end": 1958.9199999999998, "text": " because monkey patching has weird, dangerous, undefined,", "tokens": [570, 17847, 9972, 278, 575, 3657, 11, 5795, 11, 674, 5666, 2001, 11], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 767, "seek": 193232, "start": 1958.9199999999998, "end": 1962.04, "text": " strange behavior and things combined in weird ways.", "tokens": [5861, 5223, 293, 721, 9354, 294, 3657, 2098, 13], "temperature": 0.0, "avg_logprob": -0.16462186623735037, "compression_ratio": 1.973421926910299, "no_speech_prob": 5.4217048273130786e-06}, {"id": 768, "seek": 196204, "start": 1962.04, "end": 1963.68, "text": " So is this monkey patching?", "tokens": [407, 307, 341, 17847, 9972, 278, 30], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 769, "seek": 196204, "start": 1963.68, "end": 1965.28, "text": " Should we be avoiding this in Swift?", "tokens": [6454, 321, 312, 20220, 341, 294, 25539, 30], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 770, "seek": 196204, "start": 1965.28, "end": 1967.48, "text": " So this works in a very highly principled way", "tokens": [407, 341, 1985, 294, 257, 588, 5405, 3681, 15551, 636], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 771, "seek": 196204, "start": 1967.48, "end": 1968.96, "text": " that actually composes.", "tokens": [300, 767, 715, 4201, 13], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 772, "seek": 196204, "start": 1968.96, "end": 1971.1599999999999, "text": " And if you get a conflict, the compiler", "tokens": [400, 498, 291, 483, 257, 6596, 11, 264, 31958], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 773, "seek": 196204, "start": 1971.1599999999999, "end": 1973.36, "text": " will ask you which one you want.", "tokens": [486, 1029, 291, 597, 472, 291, 528, 13], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 774, "seek": 196204, "start": 1973.36, "end": 1975.32, "text": " This is not something you should feel bad about.", "tokens": [639, 307, 406, 746, 291, 820, 841, 1578, 466, 13], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 775, "seek": 196204, "start": 1975.32, "end": 1976.92, "text": " Now, here I'm defining an add method.", "tokens": [823, 11, 510, 286, 478, 17827, 364, 909, 3170, 13], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 776, "seek": 196204, "start": 1976.92, "end": 1980.08, "text": " And so I'm using this to add two complex numbers.", "tokens": [400, 370, 286, 478, 1228, 341, 281, 909, 732, 3997, 3547, 13], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 777, "seek": 196204, "start": 1980.08, "end": 1983.2, "text": " I feel bad about this, because there's a way to spell add.", "tokens": [286, 841, 1578, 466, 341, 11, 570, 456, 311, 257, 636, 281, 9827, 909, 13], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 778, "seek": 196204, "start": 1983.2, "end": 1985.48, "text": " And yes, it's ADD, I guess.", "tokens": [400, 2086, 11, 309, 311, 9135, 35, 11, 286, 2041, 13], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 779, "seek": 196204, "start": 1985.48, "end": 1988.48, "text": " But I would rather spell it with plus.", "tokens": [583, 286, 576, 2831, 9827, 309, 365, 1804, 13], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 780, "seek": 196204, "start": 1988.48, "end": 1990.32, "text": " And so you can call a method on this,", "tokens": [400, 370, 291, 393, 818, 257, 3170, 322, 341, 11], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 781, "seek": 196204, "start": 1990.32, "end": 1991.56, "text": " just like any other method.", "tokens": [445, 411, 604, 661, 3170, 13], "temperature": 0.0, "avg_logprob": -0.11865234375, "compression_ratio": 1.7124600638977636, "no_speech_prob": 7.888543223089073e-06}, {"id": 782, "seek": 199156, "start": 1991.56, "end": 1993.8799999999999, "text": " But if you want to add an operator, what you do", "tokens": [583, 498, 291, 528, 281, 909, 364, 12973, 11, 437, 291, 360], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 783, "seek": 199156, "start": 1993.8799999999999, "end": 1996.6399999999999, "text": " is you just define func plus.", "tokens": [307, 291, 445, 6964, 1019, 66, 1804, 13], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 784, "seek": 199156, "start": 1996.6399999999999, "end": 1999.56, "text": " And so instead of underbar, underbar, add, and all that jazz,", "tokens": [400, 370, 2602, 295, 833, 5356, 11, 833, 5356, 11, 909, 11, 293, 439, 300, 15066, 11], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 785, "seek": 199156, "start": 1999.56, "end": 2001.0, "text": " you just find the operators you want", "tokens": [291, 445, 915, 264, 19077, 291, 528], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 786, "seek": 199156, "start": 2001.0, "end": 2002.76, "text": " and spell them the way you expect.", "tokens": [293, 9827, 552, 264, 636, 291, 2066, 13], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 787, "seek": 199156, "start": 2002.76, "end": 2004.72, "text": " And they're just functions like anything else.", "tokens": [400, 436, 434, 445, 6828, 411, 1340, 1646, 13], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 788, "seek": 199156, "start": 2004.72, "end": 2006.96, "text": " And this already is getting at something", "tokens": [400, 341, 1217, 307, 1242, 412, 746], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 789, "seek": 199156, "start": 2006.96, "end": 2009.56, "text": " that would be really nice to be able to do in Python,", "tokens": [300, 576, 312, 534, 1481, 281, 312, 1075, 281, 360, 294, 15329, 11], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 790, "seek": 199156, "start": 2009.56, "end": 2010.9199999999998, "text": " would be able to say, oh, there's", "tokens": [576, 312, 1075, 281, 584, 11, 1954, 11, 456, 311], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 791, "seek": 199156, "start": 2010.9199999999998, "end": 2014.52, "text": " a whole bunch of different functions or operators", "tokens": [257, 1379, 3840, 295, 819, 6828, 420, 19077], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 792, "seek": 199156, "start": 2014.52, "end": 2015.8799999999999, "text": " with the same name.", "tokens": [365, 264, 912, 1315, 13], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 793, "seek": 199156, "start": 2015.8799999999999, "end": 2017.48, "text": " And they behave differently depending", "tokens": [400, 436, 15158, 7614, 5413], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 794, "seek": 199156, "start": 2017.48, "end": 2020.52, "text": " on what type I pass to them.", "tokens": [322, 437, 2010, 286, 1320, 281, 552, 13], "temperature": 0.0, "avg_logprob": -0.15640102254933325, "compression_ratio": 1.8450704225352113, "no_speech_prob": 1.0952706361422315e-05}, {"id": 795, "seek": 202052, "start": 2020.52, "end": 2024.96, "text": " Now, Python does have a standard library decorator", "tokens": [823, 11, 15329, 775, 362, 257, 3832, 6405, 7919, 1639], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 796, "seek": 202052, "start": 2024.96, "end": 2026.96, "text": " you can use called single dispatch.", "tokens": [291, 393, 764, 1219, 2167, 36729, 13], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 797, "seek": 202052, "start": 2026.96, "end": 2028.8799999999999, "text": " We almost never use it, because every time we've", "tokens": [492, 1920, 1128, 764, 309, 11, 570, 633, 565, 321, 600], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 798, "seek": 202052, "start": 2028.8799999999999, "end": 2031.6, "text": " tried to use it, it reacts in weird ways", "tokens": [3031, 281, 764, 309, 11, 309, 33305, 294, 3657, 2098], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 799, "seek": 202052, "start": 2031.6, "end": 2032.76, "text": " with everything else.", "tokens": [365, 1203, 1646, 13], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 800, "seek": 202052, "start": 2032.76, "end": 2035.56, "text": " But it's super nice that in Swift,", "tokens": [583, 309, 311, 1687, 1481, 300, 294, 25539, 11], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 801, "seek": 202052, "start": 2035.56, "end": 2038.72, "text": " as in many typed languages like this,", "tokens": [382, 294, 867, 33941, 8650, 411, 341, 11], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 802, "seek": 202052, "start": 2038.72, "end": 2041.6, "text": " it's very much designed for us to be able to say,", "tokens": [309, 311, 588, 709, 4761, 337, 505, 281, 312, 1075, 281, 584, 11], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 803, "seek": 202052, "start": 2041.6, "end": 2043.24, "text": " oh, here's lots of different types.", "tokens": [1954, 11, 510, 311, 3195, 295, 819, 3467, 13], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 804, "seek": 202052, "start": 2043.24, "end": 2046.68, "text": " And they all have different meanings of what, for example,", "tokens": [400, 436, 439, 362, 819, 28138, 295, 437, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 805, "seek": 202052, "start": 2046.68, "end": 2047.56, "text": " plus means.", "tokens": [1804, 1355, 13], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 806, "seek": 202052, "start": 2047.56, "end": 2048.24, "text": " And it just works.", "tokens": [400, 309, 445, 1985, 13], "temperature": 0.0, "avg_logprob": -0.13068226191002552, "compression_ratio": 1.6137184115523466, "no_speech_prob": 1.6700376363587566e-05}, {"id": 807, "seek": 204824, "start": 2048.24, "end": 2050.9199999999996, "text": " And so here, we're implementing plus on complex in terms", "tokens": [400, 370, 510, 11, 321, 434, 18114, 1804, 322, 3997, 294, 2115], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 808, "seek": 204824, "start": 2050.9199999999996, "end": 2052.2, "text": " of plus of its elements.", "tokens": [295, 1804, 295, 1080, 4959, 13], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 809, "seek": 204824, "start": 2052.2, "end": 2054.4399999999996, "text": " And so we're just adding together the real and imaginary.", "tokens": [400, 370, 321, 434, 445, 5127, 1214, 264, 957, 293, 26164, 13], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 810, "seek": 204824, "start": 2054.4399999999996, "end": 2057.12, "text": " And these are different pluses.", "tokens": [400, 613, 366, 819, 1804, 279, 13], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 811, "seek": 204824, "start": 2057.12, "end": 2059.9599999999996, "text": " One of the mind-blowing things that's", "tokens": [1485, 295, 264, 1575, 12, 43788, 721, 300, 311], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 812, "seek": 204824, "start": 2059.9599999999996, "end": 2061.64, "text": " very different than Python is that you", "tokens": [588, 819, 813, 15329, 307, 300, 291], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 813, "seek": 204824, "start": 2061.64, "end": 2063.3999999999996, "text": " can define your own operators.", "tokens": [393, 6964, 428, 1065, 19077, 13], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 814, "seek": 204824, "start": 2063.3999999999996, "end": 2066.8399999999997, "text": " And so some of us do lots of math, us not including me.", "tokens": [400, 370, 512, 295, 505, 360, 3195, 295, 5221, 11, 505, 406, 3009, 385, 13], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 815, "seek": 204824, "start": 2066.8399999999997, "end": 2069.9599999999996, "text": " But some of you all do a lot of math.", "tokens": [583, 512, 295, 291, 439, 360, 257, 688, 295, 5221, 13], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 816, "seek": 204824, "start": 2069.9599999999996, "end": 2071.64, "text": " Or you're working in a domain where", "tokens": [1610, 291, 434, 1364, 294, 257, 9274, 689], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 817, "seek": 204824, "start": 2071.64, "end": 2073.7999999999997, "text": " you're doing quaternions or other cool things like that.", "tokens": [291, 434, 884, 421, 771, 77, 626, 420, 661, 1627, 721, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 818, "seek": 204824, "start": 2073.7999999999997, "end": 2075.4399999999996, "text": " And it's really nice to be able to use operators that", "tokens": [400, 309, 311, 534, 1481, 281, 312, 1075, 281, 764, 19077, 300], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 819, "seek": 204824, "start": 2075.4399999999996, "end": 2076.8799999999997, "text": " are familiar to your domain.", "tokens": [366, 4963, 281, 428, 9274, 13], "temperature": 0.0, "avg_logprob": -0.13838138455658958, "compression_ratio": 1.83, "no_speech_prob": 7.410399575746851e-06}, {"id": 820, "seek": 207688, "start": 2076.88, "end": 2078.52, "text": " And so if you want to find a square root operator,", "tokens": [400, 370, 498, 291, 528, 281, 915, 257, 3732, 5593, 12973, 11], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 821, "seek": 207688, "start": 2078.52, "end": 2080.28, "text": " then you can define a square root operator.", "tokens": [550, 291, 393, 6964, 257, 3732, 5593, 12973, 13], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 822, "seek": 207688, "start": 2080.28, "end": 2081.48, "text": " And these just work.", "tokens": [400, 613, 445, 589, 13], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 823, "seek": 207688, "start": 2081.48, "end": 2083.12, "text": " And now you can use a square root operator", "tokens": [400, 586, 291, 393, 764, 257, 3732, 5593, 12973], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 824, "seek": 207688, "start": 2083.12, "end": 2084.28, "text": " just like anything else.", "tokens": [445, 411, 1340, 1646, 13], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 825, "seek": 207688, "start": 2084.28, "end": 2088.88, "text": " And this is one of the examples of Swift being hackable.", "tokens": [400, 341, 307, 472, 295, 264, 5110, 295, 25539, 885, 10339, 712, 13], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 826, "seek": 207688, "start": 2088.88, "end": 2092.28, "text": " There's a standard library that has a bunch of stuff built in", "tokens": [821, 311, 257, 3832, 6405, 300, 575, 257, 3840, 295, 1507, 3094, 294], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 827, "seek": 207688, "start": 2092.28, "end": 2094.4, "text": " and provided in the box.", "tokens": [293, 5649, 294, 264, 2424, 13], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 828, "seek": 207688, "start": 2094.4, "end": 2097.6800000000003, "text": " But the stuff the standard library does, you can do too.", "tokens": [583, 264, 1507, 264, 3832, 6405, 775, 11, 291, 393, 360, 886, 13], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 829, "seek": 207688, "start": 2097.6800000000003, "end": 2100.4, "text": " And so we try very hard to not make the standard library", "tokens": [400, 370, 321, 853, 588, 1152, 281, 406, 652, 264, 3832, 6405], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 830, "seek": 207688, "start": 2100.4, "end": 2101.76, "text": " be privileged.", "tokens": [312, 25293, 13], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 831, "seek": 207688, "start": 2101.76, "end": 2104.04, "text": " So that's the super quick introduction", "tokens": [407, 300, 311, 264, 1687, 1702, 9339], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 832, "seek": 207688, "start": 2104.04, "end": 2105.7200000000003, "text": " to some random stuff in Swift.", "tokens": [281, 512, 4974, 1507, 294, 25539, 13], "temperature": 0.0, "avg_logprob": -0.1370663307082485, "compression_ratio": 1.8718861209964412, "no_speech_prob": 2.5611388991819695e-06}, {"id": 833, "seek": 210572, "start": 2105.72, "end": 2108.12, "text": " There's this guided tour here, which is really cool.", "tokens": [821, 311, 341, 19663, 3512, 510, 11, 597, 307, 534, 1627, 13], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 834, "seek": 210572, "start": 2108.12, "end": 2109.64, "text": " It goes into other random stuff.", "tokens": [467, 1709, 666, 661, 4974, 1507, 13], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 835, "seek": 210572, "start": 2109.64, "end": 2112.14, "text": " And so if you want just a high level introduction like this,", "tokens": [400, 370, 498, 291, 528, 445, 257, 1090, 1496, 9339, 411, 341, 11], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 836, "seek": 210572, "start": 2112.14, "end": 2113.24, "text": " you can go there.", "tokens": [291, 393, 352, 456, 13], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 837, "seek": 210572, "start": 2113.24, "end": 2115.3599999999997, "text": " But let's dive into some more relevant pieces.", "tokens": [583, 718, 311, 9192, 666, 512, 544, 7340, 3755, 13], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 838, "seek": 210572, "start": 2115.3599999999997, "end": 2117.48, "text": " First, we have two questions.", "tokens": [2386, 11, 321, 362, 732, 1651, 13], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 839, "seek": 210572, "start": 2117.48, "end": 2120.3199999999997, "text": " The first is, does Swift support any debugger within Jupyter", "tokens": [440, 700, 307, 11, 775, 25539, 1406, 604, 24083, 1321, 1951, 22125, 88, 391], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 840, "seek": 210572, "start": 2120.3199999999997, "end": 2123.9199999999996, "text": " similar to IPDB for Python to set breakpoints?", "tokens": [2531, 281, 8671, 27735, 337, 15329, 281, 992, 1821, 20552, 30], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 841, "seek": 210572, "start": 2123.9199999999996, "end": 2125.72, "text": " So we don't have that yet.", "tokens": [407, 321, 500, 380, 362, 300, 1939, 13], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 842, "seek": 210572, "start": 2125.72, "end": 2128.2, "text": " We have all the mechanics under the covers.", "tokens": [492, 362, 439, 264, 12939, 833, 264, 10538, 13], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 843, "seek": 210572, "start": 2128.2, "end": 2130.24, "text": " So Jupyter is actually talking to a debugger.", "tokens": [407, 22125, 88, 391, 307, 767, 1417, 281, 257, 24083, 1321, 13], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 844, "seek": 210572, "start": 2130.24, "end": 2131.64, "text": " We just haven't wired it up yet.", "tokens": [492, 445, 2378, 380, 27415, 309, 493, 1939, 13], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 845, "seek": 210572, "start": 2131.64, "end": 2133.2799999999997, "text": " But that's one of the things we're interested in.", "tokens": [583, 300, 311, 472, 295, 264, 721, 321, 434, 3102, 294, 13], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 846, "seek": 210572, "start": 2133.2799999999997, "end": 2134.8799999999997, "text": " OK, so that's probably coming.", "tokens": [2264, 11, 370, 300, 311, 1391, 1348, 13], "temperature": 0.0, "avg_logprob": -0.165151025006871, "compression_ratio": 1.6201117318435754, "no_speech_prob": 2.0460060113691725e-05}, {"id": 847, "seek": 213488, "start": 2134.88, "end": 2136.08, "text": " I can't promise that.", "tokens": [286, 393, 380, 6228, 300, 13], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 848, "seek": 213488, "start": 2136.08, "end": 2139.1600000000003, "text": " But the guy in the front row that built it all is smiling.", "tokens": [583, 264, 2146, 294, 264, 1868, 5386, 300, 3094, 309, 439, 307, 16005, 13], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 849, "seek": 213488, "start": 2139.1600000000003, "end": 2141.36, "text": " So maybe.", "tokens": [407, 1310, 13], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 850, "seek": 213488, "start": 2141.36, "end": 2144.28, "text": " And does Swift have something similar to Python's args", "tokens": [400, 775, 25539, 362, 746, 2531, 281, 15329, 311, 3882, 82], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 851, "seek": 213488, "start": 2144.28, "end": 2147.2400000000002, "text": " and KW args?", "tokens": [293, 591, 54, 3882, 82, 30], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 852, "seek": 213488, "start": 2147.2400000000002, "end": 2147.88, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 853, "seek": 213488, "start": 2147.88, "end": 2149.32, "text": " In fact, we'll talk about that when", "tokens": [682, 1186, 11, 321, 603, 751, 466, 300, 562], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 854, "seek": 213488, "start": 2149.32, "end": 2150.2400000000002, "text": " we get to the Python section.", "tokens": [321, 483, 281, 264, 15329, 3541, 13], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 855, "seek": 213488, "start": 2150.2400000000002, "end": 2150.7200000000003, "text": " Oh, great.", "tokens": [876, 11, 869, 13], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 856, "seek": 213488, "start": 2150.7200000000003, "end": 2151.56, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 857, "seek": 213488, "start": 2151.56, "end": 2154.7200000000003, "text": " So it works a little bit differently.", "tokens": [407, 309, 1985, 257, 707, 857, 7614, 13], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 858, "seek": 213488, "start": 2154.7200000000003, "end": 2156.08, "text": " So let's talk about Python now.", "tokens": [407, 718, 311, 751, 466, 15329, 586, 13], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 859, "seek": 213488, "start": 2156.08, "end": 2157.6400000000003, "text": " Because we love Python, right?", "tokens": [1436, 321, 959, 15329, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 860, "seek": 213488, "start": 2157.6400000000003, "end": 2159.0, "text": " Well, Swift loves Python too.", "tokens": [1042, 11, 25539, 6752, 15329, 886, 13], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 861, "seek": 213488, "start": 2159.0, "end": 2161.76, "text": " And as Jeremy healthily pointed out,", "tokens": [400, 382, 17809, 1585, 953, 10932, 484, 11], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 862, "seek": 213488, "start": 2161.76, "end": 2164.52, "text": " Swift's data science ecosystem is kind of pathetic.", "tokens": [25539, 311, 1412, 3497, 11311, 307, 733, 295, 35506, 13], "temperature": 0.0, "avg_logprob": -0.190553431608239, "compression_ratio": 1.5966101694915253, "no_speech_prob": 1.8920729417004623e-05}, {"id": 863, "seek": 216452, "start": 2164.52, "end": 2167.04, "text": " So Python is really important.", "tokens": [407, 15329, 307, 534, 1021, 13], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 864, "seek": 216452, "start": 2167.04, "end": 2168.84, "text": " And beyond the data science ecosystem", "tokens": [400, 4399, 264, 1412, 3497, 11311], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 865, "seek": 216452, "start": 2168.84, "end": 2171.44, "text": " and Swift being pathetic, you all know Python.", "tokens": [293, 25539, 885, 35506, 11, 291, 439, 458, 15329, 13], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 866, "seek": 216452, "start": 2171.44, "end": 2173.92, "text": " And so you all know important APIs", "tokens": [400, 370, 291, 439, 458, 1021, 21445], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 867, "seek": 216452, "start": 2173.92, "end": 2175.36, "text": " that are pervasively available.", "tokens": [300, 366, 680, 7967, 3413, 2435, 13], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 868, "seek": 216452, "start": 2175.36, "end": 2177.92, "text": " And there's no reason for you to relearn new APIs.", "tokens": [400, 456, 311, 572, 1778, 337, 291, 281, 2951, 1083, 777, 21445, 13], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 869, "seek": 216452, "start": 2177.92, "end": 2180.16, "text": " If you know the APIs in Python, just use them.", "tokens": [759, 291, 458, 264, 21445, 294, 15329, 11, 445, 764, 552, 13], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 870, "seek": 216452, "start": 2180.16, "end": 2181.62, "text": " So let's talk about how that works,", "tokens": [407, 718, 311, 751, 466, 577, 300, 1985, 11], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 871, "seek": 216452, "start": 2181.62, "end": 2183.78, "text": " because I think it might blow your mind a little bit.", "tokens": [570, 286, 519, 309, 1062, 6327, 428, 1575, 257, 707, 857, 13], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 872, "seek": 216452, "start": 2183.78, "end": 2187.24, "text": " So to use Python in Swift, you first import Python.", "tokens": [407, 281, 764, 15329, 294, 25539, 11, 291, 700, 974, 15329, 13], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 873, "seek": 216452, "start": 2187.24, "end": 2190.52, "text": " This is just a library in Swift called Python.", "tokens": [639, 307, 445, 257, 6405, 294, 25539, 1219, 15329, 13], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 874, "seek": 216452, "start": 2190.52, "end": 2193.08, "text": " And then you use Python to import whatever Python", "tokens": [400, 550, 291, 764, 15329, 281, 974, 2035, 15329], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 875, "seek": 216452, "start": 2193.08, "end": 2194.32, "text": " libraries you want.", "tokens": [15148, 291, 528, 13], "temperature": 0.0, "avg_logprob": -0.1184766045932112, "compression_ratio": 1.820945945945946, "no_speech_prob": 2.0259039956727065e-06}, {"id": 876, "seek": 219432, "start": 2194.32, "end": 2195.6000000000004, "text": " And there's no wrappers.", "tokens": [400, 456, 311, 572, 7843, 15226, 13], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 877, "seek": 219432, "start": 2195.6000000000004, "end": 2196.8, "text": " There's no build steps.", "tokens": [821, 311, 572, 1322, 4439, 13], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 878, "seek": 219432, "start": 2196.8, "end": 2200.48, "text": " There's no wrapper generator thingies.", "tokens": [821, 311, 572, 46906, 19265, 551, 530, 13], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 879, "seek": 219432, "start": 2200.48, "end": 2202.04, "text": " You just literally import NumPy.", "tokens": [509, 445, 3736, 974, 22592, 47, 88, 13], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 880, "seek": 219432, "start": 2202.04, "end": 2204.96, "text": " We're here importing Matplotlib.", "tokens": [492, 434, 510, 43866, 6789, 564, 310, 38270, 13], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 881, "seek": 219432, "start": 2204.96, "end": 2205.88, "text": " What does this give you?", "tokens": [708, 775, 341, 976, 291, 30], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 882, "seek": 219432, "start": 2205.88, "end": 2206.7200000000003, "text": " This gives you NP.", "tokens": [639, 2709, 291, 38611, 13], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 883, "seek": 219432, "start": 2206.7200000000003, "end": 2209.6400000000003, "text": " This gives you PLT, just like you would do in Python.", "tokens": [639, 2709, 291, 6999, 51, 11, 445, 411, 291, 576, 360, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 884, "seek": 219432, "start": 2209.6400000000003, "end": 2211.52, "text": " And now you use it just like in Python.", "tokens": [400, 586, 291, 764, 309, 445, 411, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 885, "seek": 219432, "start": 2211.52, "end": 2213.76, "text": " And so here I'm calling NP array.", "tokens": [400, 370, 510, 286, 478, 5141, 38611, 10225, 13], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 886, "seek": 219432, "start": 2213.76, "end": 2216.7200000000003, "text": " And except for the let, this is literally", "tokens": [400, 3993, 337, 264, 718, 11, 341, 307, 3736], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 887, "seek": 219432, "start": 2216.7200000000003, "end": 2219.44, "text": " what you write in Python.", "tokens": [437, 291, 2464, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 888, "seek": 219432, "start": 2219.44, "end": 2221.88, "text": " So we can now use this to do some cool stuff.", "tokens": [407, 321, 393, 586, 764, 341, 281, 360, 512, 1627, 1507, 13], "temperature": 0.0, "avg_logprob": -0.14514678064053946, "compression_ratio": 1.7630522088353413, "no_speech_prob": 1.983054607990198e-05}, {"id": 889, "seek": 222188, "start": 2221.88, "end": 2224.28, "text": " And so here, actually, we're going", "tokens": [400, 370, 510, 11, 767, 11, 321, 434, 516], "temperature": 0.0, "avg_logprob": -0.17530553991144354, "compression_ratio": 1.6928571428571428, "no_speech_prob": 1.1124492630187888e-05}, {"id": 890, "seek": 222188, "start": 2224.28, "end": 2226.2400000000002, "text": " to use this load mnist function.", "tokens": [281, 764, 341, 3677, 275, 77, 468, 2445, 13], "temperature": 0.0, "avg_logprob": -0.17530553991144354, "compression_ratio": 1.6928571428571428, "no_speech_prob": 1.1124492630187888e-05}, {"id": 891, "seek": 222188, "start": 2226.2400000000002, "end": 2227.7400000000002, "text": " And we'll see it a little bit later.", "tokens": [400, 321, 603, 536, 309, 257, 707, 857, 1780, 13], "temperature": 0.0, "avg_logprob": -0.17530553991144354, "compression_ratio": 1.6928571428571428, "no_speech_prob": 1.1124492630187888e-05}, {"id": 892, "seek": 222188, "start": 2227.7400000000002, "end": 2229.44, "text": " It's in the 00 notebook.", "tokens": [467, 311, 294, 264, 7143, 21060, 13], "temperature": 0.0, "avg_logprob": -0.17530553991144354, "compression_ratio": 1.6928571428571428, "no_speech_prob": 1.1124492630187888e-05}, {"id": 893, "seek": 222188, "start": 2229.44, "end": 2232.6, "text": " This is firing up TensorFlow and loading the mnist data set", "tokens": [639, 307, 16045, 493, 37624, 293, 15114, 264, 275, 77, 468, 1412, 992], "temperature": 0.0, "avg_logprob": -0.17530553991144354, "compression_ratio": 1.6928571428571428, "no_speech_prob": 1.1124492630187888e-05}, {"id": 894, "seek": 222188, "start": 2232.6, "end": 2234.84, "text": " and plopping it into a tensor for us.", "tokens": [293, 499, 32799, 309, 666, 257, 40863, 337, 505, 13], "temperature": 0.0, "avg_logprob": -0.17530553991144354, "compression_ratio": 1.6928571428571428, "no_speech_prob": 1.1124492630187888e-05}, {"id": 895, "seek": 222188, "start": 2234.84, "end": 2237.08, "text": " Once that comes back, now we can use Matplotlib.", "tokens": [3443, 300, 1487, 646, 11, 586, 321, 393, 764, 6789, 564, 310, 38270, 13], "temperature": 0.0, "avg_logprob": -0.17530553991144354, "compression_ratio": 1.6928571428571428, "no_speech_prob": 1.1124492630187888e-05}, {"id": 896, "seek": 222188, "start": 2237.08, "end": 2240.52, "text": " And Matplotlib, we can use this magic accantation.", "tokens": [400, 6789, 564, 310, 38270, 11, 321, 393, 764, 341, 5585, 1317, 394, 399, 13], "temperature": 0.0, "avg_logprob": -0.17530553991144354, "compression_ratio": 1.6928571428571428, "no_speech_prob": 1.1124492630187888e-05}, {"id": 897, "seek": 222188, "start": 2240.52, "end": 2243.12, "text": " This is kind of like the Matplotlib inline.", "tokens": [639, 307, 733, 295, 411, 264, 6789, 564, 310, 38270, 294, 1889, 13], "temperature": 0.0, "avg_logprob": -0.17530553991144354, "compression_ratio": 1.6928571428571428, "no_speech_prob": 1.1124492630187888e-05}, {"id": 898, "seek": 222188, "start": 2243.12, "end": 2246.8, "text": " We can then load, take the tensor the TensorFlow gave us,", "tokens": [492, 393, 550, 3677, 11, 747, 264, 40863, 264, 37624, 2729, 505, 11], "temperature": 0.0, "avg_logprob": -0.17530553991144354, "compression_ratio": 1.6928571428571428, "no_speech_prob": 1.1124492630187888e-05}, {"id": 899, "seek": 222188, "start": 2246.8, "end": 2251.2400000000002, "text": " do all the NumPy stuff with a NumPy ndarray,", "tokens": [360, 439, 264, 22592, 47, 88, 1507, 365, 257, 22592, 47, 88, 220, 273, 2284, 320, 11], "temperature": 0.0, "avg_logprob": -0.17530553991144354, "compression_ratio": 1.6928571428571428, "no_speech_prob": 1.1124492630187888e-05}, {"id": 900, "seek": 225124, "start": 2251.24, "end": 2253.12, "text": " reshape it, and plot it out.", "tokens": [725, 42406, 309, 11, 293, 7542, 309, 484, 13], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 901, "seek": 225124, "start": 2253.12, "end": 2255.7599999999998, "text": " And this all just works the way you would normally", "tokens": [400, 341, 439, 445, 1985, 264, 636, 291, 576, 5646], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 902, "seek": 225124, "start": 2255.7599999999998, "end": 2256.68, "text": " use Matplotlib.", "tokens": [764, 6789, 564, 310, 38270, 13], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 903, "seek": 225124, "start": 2256.68, "end": 2259.04, "text": " And the cool thing about this is that Swift", "tokens": [400, 264, 1627, 551, 466, 341, 307, 300, 25539], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 904, "seek": 225124, "start": 2259.04, "end": 2260.8799999999997, "text": " knows nothing about Matplotlib.", "tokens": [3255, 1825, 466, 6789, 564, 310, 38270, 13], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 905, "seek": 225124, "start": 2260.8799999999997, "end": 2262.2799999999997, "text": " It knows nothing about NumPy.", "tokens": [467, 3255, 1825, 466, 22592, 47, 88, 13], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 906, "seek": 225124, "start": 2262.2799999999997, "end": 2265.08, "text": " It knows nothing about any of the particular libraries", "tokens": [467, 3255, 1825, 466, 604, 295, 264, 1729, 15148], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 907, "seek": 225124, "start": 2265.08, "end": 2266.4399999999996, "text": " you're using.", "tokens": [291, 434, 1228, 13], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 908, "seek": 225124, "start": 2266.4399999999996, "end": 2271.0, "text": " We literally just imported some random thing with strings.", "tokens": [492, 3736, 445, 25524, 512, 4974, 551, 365, 13985, 13], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 909, "seek": 225124, "start": 2271.0, "end": 2274.2799999999997, "text": " And Swift doesn't know anything about what you imported here.", "tokens": [400, 25539, 1177, 380, 458, 1340, 466, 437, 291, 25524, 510, 13], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 910, "seek": 225124, "start": 2274.2799999999997, "end": 2274.7999999999997, "text": " OK?", "tokens": [2264, 30], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 911, "seek": 225124, "start": 2274.7999999999997, "end": 2277.4399999999996, "text": " Yeah, and so you may be wondering how this works,", "tokens": [865, 11, 293, 370, 291, 815, 312, 6359, 577, 341, 1985, 11], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 912, "seek": 225124, "start": 2277.4399999999996, "end": 2280.52, "text": " because we're just using Python right from Swift.", "tokens": [570, 321, 434, 445, 1228, 15329, 558, 490, 25539, 13], "temperature": 0.0, "avg_logprob": -0.15566945598073248, "compression_ratio": 1.8265682656826567, "no_speech_prob": 4.936559889756609e-06}, {"id": 913, "seek": 228052, "start": 2280.52, "end": 2282.32, "text": " And how does Swift know what Python is?", "tokens": [400, 577, 775, 25539, 458, 437, 15329, 307, 30], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 914, "seek": 228052, "start": 2282.32, "end": 2283.96, "text": " Well, the way to think about this", "tokens": [1042, 11, 264, 636, 281, 519, 466, 341], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 915, "seek": 228052, "start": 2283.96, "end": 2286.88, "text": " is that we think about Python as though it has no types.", "tokens": [307, 300, 321, 519, 466, 15329, 382, 1673, 309, 575, 572, 3467, 13], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 916, "seek": 228052, "start": 2286.88, "end": 2289.2, "text": " But really, Python has one type.", "tokens": [583, 534, 11, 15329, 575, 472, 2010, 13], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 917, "seek": 228052, "start": 2289.2, "end": 2291.12, "text": " And that type is Python object.", "tokens": [400, 300, 2010, 307, 15329, 2657, 13], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 918, "seek": 228052, "start": 2291.12, "end": 2293.32, "text": " And Python has an internal representation of objects.", "tokens": [400, 15329, 575, 364, 6920, 10290, 295, 6565, 13], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 919, "seek": 228052, "start": 2293.32, "end": 2294.64, "text": " And you can use dot on them.", "tokens": [400, 291, 393, 764, 5893, 322, 552, 13], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 920, "seek": 228052, "start": 2294.64, "end": 2296.0, "text": " And you can call them.", "tokens": [400, 291, 393, 818, 552, 13], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 921, "seek": 228052, "start": 2296.0, "end": 2297.56, "text": " And so the way it works in Swift is", "tokens": [400, 370, 264, 636, 309, 1985, 294, 25539, 307], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 922, "seek": 228052, "start": 2297.56, "end": 2300.2, "text": " that you have one type called Python object.", "tokens": [300, 291, 362, 472, 2010, 1219, 15329, 2657, 13], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 923, "seek": 228052, "start": 2300.2, "end": 2303.7599999999998, "text": " So here, when we use the type of, that's just like type", "tokens": [407, 510, 11, 562, 321, 764, 264, 2010, 295, 11, 300, 311, 445, 411, 2010], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 924, "seek": 228052, "start": 2303.7599999999998, "end": 2306.6, "text": " in Python, says give me the type of np,", "tokens": [294, 15329, 11, 1619, 976, 385, 264, 2010, 295, 33808, 11], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 925, "seek": 228052, "start": 2306.6, "end": 2308.7599999999998, "text": " or give me the type of np.array, or give me", "tokens": [420, 976, 385, 264, 2010, 295, 33808, 13, 2284, 320, 11, 420, 976, 385], "temperature": 0.0, "avg_logprob": -0.10156061122943828, "compression_ratio": 2.0076923076923077, "no_speech_prob": 1.6962731024250388e-05}, {"id": 926, "seek": 230876, "start": 2308.76, "end": 2313.5600000000004, "text": " a type of the array that we got, or whatever,", "tokens": [257, 2010, 295, 264, 10225, 300, 321, 658, 11, 420, 2035, 11], "temperature": 0.0, "avg_logprob": -0.09449989220191693, "compression_ratio": 1.849785407725322, "no_speech_prob": 3.668731551442761e-06}, {"id": 927, "seek": 230876, "start": 2313.5600000000004, "end": 2316.6000000000004, "text": " what it actually shows you is the type is Python object.", "tokens": [437, 309, 767, 3110, 291, 307, 264, 2010, 307, 15329, 2657, 13], "temperature": 0.0, "avg_logprob": -0.09449989220191693, "compression_ratio": 1.849785407725322, "no_speech_prob": 3.668731551442761e-06}, {"id": 928, "seek": 230876, "start": 2316.6000000000004, "end": 2320.96, "text": " And so Python values are Python object types in Swift.", "tokens": [400, 370, 15329, 4190, 366, 15329, 2657, 3467, 294, 25539, 13], "temperature": 0.0, "avg_logprob": -0.09449989220191693, "compression_ratio": 1.849785407725322, "no_speech_prob": 3.668731551442761e-06}, {"id": 929, "seek": 230876, "start": 2320.96, "end": 2322.92, "text": " And when you dot them, when you call them,", "tokens": [400, 562, 291, 5893, 552, 11, 562, 291, 818, 552, 11], "temperature": 0.0, "avg_logprob": -0.09449989220191693, "compression_ratio": 1.849785407725322, "no_speech_prob": 3.668731551442761e-06}, {"id": 930, "seek": 230876, "start": 2322.92, "end": 2324.48, "text": " it's just using the interpreter.", "tokens": [309, 311, 445, 1228, 264, 34132, 13], "temperature": 0.0, "avg_logprob": -0.09449989220191693, "compression_ratio": 1.849785407725322, "no_speech_prob": 3.668731551442761e-06}, {"id": 931, "seek": 230876, "start": 2324.48, "end": 2328.5600000000004, "text": " And so it just works in Swift, because you are literally", "tokens": [400, 370, 309, 445, 1985, 294, 25539, 11, 570, 291, 366, 3736], "temperature": 0.0, "avg_logprob": -0.09449989220191693, "compression_ratio": 1.849785407725322, "no_speech_prob": 3.668731551442761e-06}, {"id": 932, "seek": 230876, "start": 2328.5600000000004, "end": 2332.92, "text": " using Python as dynamically as Python is designed to be used.", "tokens": [1228, 15329, 382, 43492, 382, 15329, 307, 4761, 281, 312, 1143, 13], "temperature": 0.0, "avg_logprob": -0.09449989220191693, "compression_ratio": 1.849785407725322, "no_speech_prob": 3.668731551442761e-06}, {"id": 933, "seek": 230876, "start": 2332.92, "end": 2334.2400000000002, "text": " And you can actually go and look.", "tokens": [400, 291, 393, 767, 352, 293, 574, 13], "temperature": 0.0, "avg_logprob": -0.09449989220191693, "compression_ratio": 1.849785407725322, "no_speech_prob": 3.668731551442761e-06}, {"id": 934, "seek": 230876, "start": 2334.2400000000002, "end": 2336.8, "text": " And one of the totally brain-twisting things", "tokens": [400, 472, 295, 264, 3879, 3567, 12, 20270, 468, 278, 721], "temperature": 0.0, "avg_logprob": -0.09449989220191693, "compression_ratio": 1.849785407725322, "no_speech_prob": 3.668731551442761e-06}, {"id": 935, "seek": 233680, "start": 2336.8, "end": 2340.84, "text": " that you can do is you can import Python into Swift,", "tokens": [300, 291, 393, 360, 307, 291, 393, 974, 15329, 666, 25539, 11], "temperature": 0.0, "avg_logprob": -0.1375328641419017, "compression_ratio": 1.6488888888888888, "no_speech_prob": 2.1109863155288622e-05}, {"id": 936, "seek": 233680, "start": 2340.84, "end": 2344.4, "text": " import FastAIs, Python libraries into Swift,", "tokens": [974, 15968, 32, 6802, 11, 15329, 15148, 666, 25539, 11], "temperature": 0.0, "avg_logprob": -0.1375328641419017, "compression_ratio": 1.6488888888888888, "no_speech_prob": 2.1109863155288622e-05}, {"id": 937, "seek": 233680, "start": 2344.4, "end": 2349.52, "text": " and now go to town and just use all the standard FastAI cool", "tokens": [293, 586, 352, 281, 3954, 293, 445, 764, 439, 264, 3832, 15968, 48698, 1627], "temperature": 0.0, "avg_logprob": -0.1375328641419017, "compression_ratio": 1.6488888888888888, "no_speech_prob": 2.1109863155288622e-05}, {"id": 938, "seek": 233680, "start": 2349.52, "end": 2351.48, "text": " stuff right from Swift.", "tokens": [1507, 558, 490, 25539, 13], "temperature": 0.0, "avg_logprob": -0.1375328641419017, "compression_ratio": 1.6488888888888888, "no_speech_prob": 2.1109863155288622e-05}, {"id": 939, "seek": 233680, "start": 2351.48, "end": 2353.92, "text": " And it all just works.", "tokens": [400, 309, 439, 445, 1985, 13], "temperature": 0.0, "avg_logprob": -0.1375328641419017, "compression_ratio": 1.6488888888888888, "no_speech_prob": 2.1109863155288622e-05}, {"id": 940, "seek": 233680, "start": 2353.92, "end": 2356.36, "text": " So thank you to Omar SF for trying this.", "tokens": [407, 1309, 291, 281, 33784, 31095, 337, 1382, 341, 13], "temperature": 0.0, "avg_logprob": -0.1375328641419017, "compression_ratio": 1.6488888888888888, "no_speech_prob": 2.1109863155288622e-05}, {"id": 941, "seek": 233680, "start": 2356.36, "end": 2357.88, "text": " It's a crazy thing to try.", "tokens": [467, 311, 257, 3219, 551, 281, 853, 13], "temperature": 0.0, "avg_logprob": -0.1375328641419017, "compression_ratio": 1.6488888888888888, "no_speech_prob": 2.1109863155288622e-05}, {"id": 942, "seek": 233680, "start": 2357.88, "end": 2362.0800000000004, "text": " And it's interesting how, when you look at the resulting code,", "tokens": [400, 309, 311, 1880, 577, 11, 562, 291, 574, 412, 264, 16505, 3089, 11], "temperature": 0.0, "avg_logprob": -0.1375328641419017, "compression_ratio": 1.6488888888888888, "no_speech_prob": 2.1109863155288622e-05}, {"id": 943, "seek": 233680, "start": 2362.0800000000004, "end": 2365.0, "text": " it's the same code that we'd like.", "tokens": [309, 311, 264, 912, 3089, 300, 321, 1116, 411, 13], "temperature": 0.0, "avg_logprob": -0.1375328641419017, "compression_ratio": 1.6488888888888888, "no_speech_prob": 2.1109863155288622e-05}, {"id": 944, "seek": 236500, "start": 2365.0, "end": 2370.96, "text": " At this point, you can't tell, other than some slightly", "tokens": [1711, 341, 935, 11, 291, 393, 380, 980, 11, 661, 813, 512, 4748], "temperature": 0.0, "avg_logprob": -0.1406394863128662, "compression_ratio": 1.6026785714285714, "no_speech_prob": 2.3550190235255286e-05}, {"id": 945, "seek": 236500, "start": 2370.96, "end": 2372.36, "text": " different syntax here and there.", "tokens": [819, 28431, 510, 293, 456, 13], "temperature": 0.0, "avg_logprob": -0.1406394863128662, "compression_ratio": 1.6026785714285714, "no_speech_prob": 2.3550190235255286e-05}, {"id": 946, "seek": 236500, "start": 2372.36, "end": 2373.96, "text": " But it's all the same.", "tokens": [583, 309, 311, 439, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.1406394863128662, "compression_ratio": 1.6026785714285714, "no_speech_prob": 2.3550190235255286e-05}, {"id": 947, "seek": 236500, "start": 2373.96, "end": 2375.84, "text": " It's like Python with Latin.", "tokens": [467, 311, 411, 15329, 365, 10803, 13], "temperature": 0.0, "avg_logprob": -0.1406394863128662, "compression_ratio": 1.6026785714285714, "no_speech_prob": 2.3550190235255286e-05}, {"id": 948, "seek": 236500, "start": 2375.84, "end": 2382.28, "text": " One thing I'll say about this is this is a super cool feature", "tokens": [1485, 551, 286, 603, 584, 466, 341, 307, 341, 307, 257, 1687, 1627, 4111], "temperature": 0.0, "avg_logprob": -0.1406394863128662, "compression_ratio": 1.6026785714285714, "no_speech_prob": 2.3550190235255286e-05}, {"id": 949, "seek": 236500, "start": 2382.28, "end": 2384.8, "text": " that you should totally use to fill in the gaps that", "tokens": [300, 291, 820, 3879, 764, 281, 2836, 294, 264, 15031, 300], "temperature": 0.0, "avg_logprob": -0.1406394863128662, "compression_ratio": 1.6026785714285714, "no_speech_prob": 2.3550190235255286e-05}, {"id": 950, "seek": 236500, "start": 2384.8, "end": 2387.84, "text": " need to be filled in while this ecosystem doesn't exist.", "tokens": [643, 281, 312, 6412, 294, 1339, 341, 11311, 1177, 380, 2514, 13], "temperature": 0.0, "avg_logprob": -0.1406394863128662, "compression_ratio": 1.6026785714285714, "no_speech_prob": 2.3550190235255286e-05}, {"id": 951, "seek": 236500, "start": 2387.84, "end": 2391.52, "text": " But then as soon as possible, fill in the gap.", "tokens": [583, 550, 382, 2321, 382, 1944, 11, 2836, 294, 264, 7417, 13], "temperature": 0.0, "avg_logprob": -0.1406394863128662, "compression_ratio": 1.6026785714285714, "no_speech_prob": 2.3550190235255286e-05}, {"id": 952, "seek": 239152, "start": 2391.52, "end": 2396.2, "text": " Because I don't want us, as a Swift for TensorFlow community,", "tokens": [1436, 286, 500, 380, 528, 505, 11, 382, 257, 25539, 337, 37624, 1768, 11], "temperature": 0.0, "avg_logprob": -0.15774112896327555, "compression_ratio": 1.707070707070707, "no_speech_prob": 2.0777615645783953e-05}, {"id": 953, "seek": 239152, "start": 2396.2, "end": 2398.88, "text": " to use this as such a crutch that we never", "tokens": [281, 764, 341, 382, 1270, 257, 941, 9349, 300, 321, 1128], "temperature": 0.0, "avg_logprob": -0.15774112896327555, "compression_ratio": 1.707070707070707, "no_speech_prob": 2.0777615645783953e-05}, {"id": 954, "seek": 239152, "start": 2398.88, "end": 2401.12, "text": " write our own even better data frames library,", "tokens": [2464, 527, 1065, 754, 1101, 1412, 12083, 6405, 11], "temperature": 0.0, "avg_logprob": -0.15774112896327555, "compression_ratio": 1.707070707070707, "no_speech_prob": 2.0777615645783953e-05}, {"id": 955, "seek": 239152, "start": 2401.12, "end": 2402.8, "text": " because we're always using pandas.", "tokens": [570, 321, 434, 1009, 1228, 4565, 296, 13], "temperature": 0.0, "avg_logprob": -0.15774112896327555, "compression_ratio": 1.707070707070707, "no_speech_prob": 2.0777615645783953e-05}, {"id": 956, "seek": 239152, "start": 2402.8, "end": 2404.56, "text": " And we always use map plotlib.", "tokens": [400, 321, 1009, 764, 4471, 7542, 38270, 13], "temperature": 0.0, "avg_logprob": -0.15774112896327555, "compression_ratio": 1.707070707070707, "no_speech_prob": 2.0777615645783953e-05}, {"id": 957, "seek": 239152, "start": 2404.56, "end": 2407.64, "text": " So we never create an even better plotting library.", "tokens": [407, 321, 1128, 1884, 364, 754, 1101, 41178, 6405, 13], "temperature": 0.0, "avg_logprob": -0.15774112896327555, "compression_ratio": 1.707070707070707, "no_speech_prob": 2.0777615645783953e-05}, {"id": 958, "seek": 239152, "start": 2407.64, "end": 2409.8, "text": " We should use the crutch to allow", "tokens": [492, 820, 764, 264, 941, 9349, 281, 2089], "temperature": 0.0, "avg_logprob": -0.15774112896327555, "compression_ratio": 1.707070707070707, "no_speech_prob": 2.0777615645783953e-05}, {"id": 959, "seek": 239152, "start": 2409.8, "end": 2411.6, "text": " us to get all our work done end to end", "tokens": [505, 281, 483, 439, 527, 589, 1096, 917, 281, 917], "temperature": 0.0, "avg_logprob": -0.15774112896327555, "compression_ratio": 1.707070707070707, "no_speech_prob": 2.0777615645783953e-05}, {"id": 960, "seek": 239152, "start": 2411.6, "end": 2414.88, "text": " and then gradually replace it with bits that are more Swifty.", "tokens": [293, 550, 13145, 7406, 309, 365, 9239, 300, 366, 544, 25539, 88, 13], "temperature": 0.0, "avg_logprob": -0.15774112896327555, "compression_ratio": 1.707070707070707, "no_speech_prob": 2.0777615645783953e-05}, {"id": 961, "seek": 239152, "start": 2414.88, "end": 2416.72, "text": " I mean, one of the awesome things about Swift", "tokens": [286, 914, 11, 472, 295, 264, 3476, 721, 466, 25539], "temperature": 0.0, "avg_logprob": -0.15774112896327555, "compression_ratio": 1.707070707070707, "no_speech_prob": 2.0777615645783953e-05}, {"id": 962, "seek": 239152, "start": 2416.72, "end": 2420.48, "text": " is that it supports really well-considered and beautiful", "tokens": [307, 300, 309, 9346, 534, 731, 12, 21190, 1438, 292, 293, 2238], "temperature": 0.0, "avg_logprob": -0.15774112896327555, "compression_ratio": 1.707070707070707, "no_speech_prob": 2.0777615645783953e-05}, {"id": 963, "seek": 242048, "start": 2420.48, "end": 2421.48, "text": " APIs.", "tokens": [21445, 13], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 964, "seek": 242048, "start": 2421.48, "end": 2424.68, "text": " And it was really designed for building APIs.", "tokens": [400, 309, 390, 534, 4761, 337, 2390, 21445, 13], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 965, "seek": 242048, "start": 2424.68, "end": 2426.8, "text": " But particularly when you're new to Swift,", "tokens": [583, 4098, 562, 291, 434, 777, 281, 25539, 11], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 966, "seek": 242048, "start": 2426.8, "end": 2428.08, "text": " don't worry about that stuff.", "tokens": [500, 380, 3292, 466, 300, 1507, 13], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 967, "seek": 242048, "start": 2428.08, "end": 2429.48, "text": " That's a problem for a different day.", "tokens": [663, 311, 257, 1154, 337, 257, 819, 786, 13], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 968, "seek": 242048, "start": 2429.48, "end": 2432.2, "text": " If you want to open a file, open a file the way you know how.", "tokens": [759, 291, 528, 281, 1269, 257, 3991, 11, 1269, 257, 3991, 264, 636, 291, 458, 577, 13], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 969, "seek": 242048, "start": 2432.2, "end": 2434.36, "text": " Just use the Python file IO library.", "tokens": [1449, 764, 264, 15329, 3991, 39839, 6405, 13], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 970, "seek": 242048, "start": 2434.36, "end": 2435.12, "text": " That's fine.", "tokens": [663, 311, 2489, 13], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 971, "seek": 242048, "start": 2435.12, "end": 2438.08, "text": " Don't waste your brain cycles on that kind of stuff.", "tokens": [1468, 380, 5964, 428, 3567, 17796, 322, 300, 733, 295, 1507, 13], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 972, "seek": 242048, "start": 2438.08, "end": 2442.08, "text": " So let's now talk about the idea of Jeremy's course here,", "tokens": [407, 718, 311, 586, 751, 466, 264, 1558, 295, 17809, 311, 1164, 510, 11], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 973, "seek": 242048, "start": 2442.08, "end": 2444.44, "text": " which is building a machine learning library from scratch.", "tokens": [597, 307, 2390, 257, 3479, 2539, 6405, 490, 8459, 13], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 974, "seek": 242048, "start": 2444.44, "end": 2449.68, "text": " And I think it's very quaint that Jeremy tried so hard", "tokens": [400, 286, 519, 309, 311, 588, 421, 5114, 300, 17809, 3031, 370, 1152], "temperature": 0.0, "avg_logprob": -0.13842154911586216, "compression_ratio": 1.646864686468647, "no_speech_prob": 3.905080120603088e-06}, {"id": 975, "seek": 244968, "start": 2449.68, "end": 2452.3599999999997, "text": " to go down to the foundation and teach you", "tokens": [281, 352, 760, 281, 264, 7030, 293, 2924, 291], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 976, "seek": 244968, "start": 2452.3599999999997, "end": 2458.04, "text": " how to build a matmul with a few loops and looping over an array", "tokens": [577, 281, 1322, 257, 3803, 76, 425, 365, 257, 1326, 16121, 293, 6367, 278, 670, 364, 10225], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 977, "seek": 244968, "start": 2458.04, "end": 2460.3199999999997, "text": " and adding and multiplying floating point numbers.", "tokens": [293, 5127, 293, 30955, 12607, 935, 3547, 13], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 978, "seek": 244968, "start": 2460.3199999999997, "end": 2463.0, "text": " And I think that it's very nice how", "tokens": [400, 286, 519, 300, 309, 311, 588, 1481, 577], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 979, "seek": 244968, "start": 2463.0, "end": 2465.72, "text": " that he thinks that this is going down to the foundation.", "tokens": [300, 415, 7309, 300, 341, 307, 516, 760, 281, 264, 7030, 13], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 980, "seek": 244968, "start": 2465.72, "end": 2466.2, "text": " No, Chris.", "tokens": [883, 11, 6688, 13], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 981, "seek": 244968, "start": 2466.2, "end": 2467.48, "text": " It's matmul from scratch.", "tokens": [467, 311, 3803, 76, 425, 490, 8459, 13], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 982, "seek": 244968, "start": 2467.48, "end": 2468.3199999999997, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 983, "seek": 244968, "start": 2468.3199999999997, "end": 2469.8999999999996, "text": " Well, so if that's matmul from scratch,", "tokens": [1042, 11, 370, 498, 300, 311, 3803, 76, 425, 490, 8459, 11], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 984, "seek": 244968, "start": 2469.8999999999996, "end": 2473.0, "text": " then I think we should go down to the bedrock", "tokens": [550, 286, 519, 321, 820, 352, 760, 281, 264, 2901, 17799], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 985, "seek": 244968, "start": 2473.0, "end": 2476.0, "text": " and actually talk about where float and arrays come from.", "tokens": [293, 767, 751, 466, 689, 15706, 293, 41011, 808, 490, 13], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 986, "seek": 244968, "start": 2476.0, "end": 2478.2, "text": " But before we do that, I want to dive in and geek out", "tokens": [583, 949, 321, 360, 300, 11, 286, 528, 281, 9192, 294, 293, 36162, 484], "temperature": 0.0, "avg_logprob": -0.16248340206546383, "compression_ratio": 1.789090909090909, "no_speech_prob": 7.1818985816207714e-06}, {"id": 987, "seek": 247820, "start": 2478.2, "end": 2480.0, "text": " just a little bit about compilers,", "tokens": [445, 257, 707, 857, 466, 715, 388, 433, 11], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 988, "seek": 247820, "start": 2480.0, "end": 2481.7599999999998, "text": " because I think you need to understand,", "tokens": [570, 286, 519, 291, 643, 281, 1223, 11], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 989, "seek": 247820, "start": 2481.7599999999998, "end": 2485.12, "text": " or it's useful to understand what LVM and Swift", "tokens": [420, 309, 311, 4420, 281, 1223, 437, 441, 53, 44, 293, 25539], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 990, "seek": 247820, "start": 2485.12, "end": 2486.2799999999997, "text": " and things like this are.", "tokens": [293, 721, 411, 341, 366, 13], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 991, "seek": 247820, "start": 2486.2799999999997, "end": 2488.48, "text": " So Chris, what you're saying is that I cheated.", "tokens": [407, 6688, 11, 437, 291, 434, 1566, 307, 300, 286, 28079, 13], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 992, "seek": 247820, "start": 2488.48, "end": 2490.3599999999997, "text": " I used array without implementing array.", "tokens": [286, 1143, 10225, 1553, 18114, 10225, 13], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 993, "seek": 247820, "start": 2490.3599999999997, "end": 2490.8399999999997, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 994, "seek": 247820, "start": 2490.8399999999997, "end": 2493.2, "text": " I used float without implementing float.", "tokens": [286, 1143, 15706, 1553, 18114, 15706, 13], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 995, "seek": 247820, "start": 2493.2, "end": 2494.48, "text": " So let's fix that.", "tokens": [407, 718, 311, 3191, 300, 13], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 996, "seek": 247820, "start": 2494.48, "end": 2497.24, "text": " OK, I'm sorry.", "tokens": [2264, 11, 286, 478, 2597, 13], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 997, "seek": 247820, "start": 2497.24, "end": 2501.96, "text": " So what is a compiler?", "tokens": [407, 437, 307, 257, 31958, 30], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 998, "seek": 247820, "start": 2501.96, "end": 2503.96, "text": " Actually, we can do bonk.", "tokens": [5135, 11, 321, 393, 360, 4428, 74, 13], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 999, "seek": 247820, "start": 2503.96, "end": 2504.68, "text": " Touchscreens.", "tokens": [20029, 4417, 9098, 13], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 1000, "seek": 247820, "start": 2504.68, "end": 2505.8399999999997, "text": " Wow, crazy.", "tokens": [3153, 11, 3219, 13], "temperature": 0.0, "avg_logprob": -0.21986306558443805, "compression_ratio": 1.6097560975609757, "no_speech_prob": 4.42500686403946e-06}, {"id": 1001, "seek": 250584, "start": 2505.84, "end": 2508.2400000000002, "text": " OK, so what is a compiler anyways?", "tokens": [2264, 11, 370, 437, 307, 257, 31958, 13448, 30], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1002, "seek": 250584, "start": 2508.2400000000002, "end": 2509.44, "text": " And what is a language?", "tokens": [400, 437, 307, 257, 2856, 30], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1003, "seek": 250584, "start": 2509.44, "end": 2512.2000000000003, "text": " So the way I think about this is that there's actually", "tokens": [407, 264, 636, 286, 519, 466, 341, 307, 300, 456, 311, 767], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1004, "seek": 250584, "start": 2512.2000000000003, "end": 2514.32, "text": " two unmovable obstacles in the universe.", "tokens": [732, 517, 3280, 17915, 17735, 294, 264, 6445, 13], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1005, "seek": 250584, "start": 2514.32, "end": 2517.48, "text": " There's humans, which we're all kind of a pain to work with,", "tokens": [821, 311, 6255, 11, 597, 321, 434, 439, 733, 295, 257, 1822, 281, 589, 365, 11], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1006, "seek": 250584, "start": 2517.48, "end": 2518.2000000000003, "text": " right?", "tokens": [558, 30], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1007, "seek": 250584, "start": 2518.2000000000003, "end": 2520.0, "text": " Highly opinionated sometimes.", "tokens": [5229, 356, 4800, 770, 2171, 13], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1008, "seek": 250584, "start": 2520.0, "end": 2521.1600000000003, "text": " And then there's computers.", "tokens": [400, 550, 456, 311, 10807, 13], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1009, "seek": 250584, "start": 2521.1600000000003, "end": 2522.96, "text": " And they're really a pain, because they", "tokens": [400, 436, 434, 534, 257, 1822, 11, 570, 436], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1010, "seek": 250584, "start": 2522.96, "end": 2524.48, "text": " are super opinionated.", "tokens": [366, 1687, 4800, 770, 13], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1011, "seek": 250584, "start": 2524.48, "end": 2527.32, "text": " And so what languages are is they're a point in between.", "tokens": [400, 370, 437, 8650, 366, 307, 436, 434, 257, 935, 294, 1296, 13], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1012, "seek": 250584, "start": 2527.32, "end": 2529.8, "text": " And different languages are different points in between.", "tokens": [400, 819, 8650, 366, 819, 2793, 294, 1296, 13], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1013, "seek": 250584, "start": 2529.8, "end": 2532.52, "text": " And some are optimized for working with humans better.", "tokens": [400, 512, 366, 26941, 337, 1364, 365, 6255, 1101, 13], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1014, "seek": 250584, "start": 2532.52, "end": 2534.88, "text": " Some are optimized for working with computers better.", "tokens": [2188, 366, 26941, 337, 1364, 365, 10807, 1101, 13], "temperature": 0.0, "avg_logprob": -0.12711123283335704, "compression_ratio": 1.9517241379310344, "no_speech_prob": 1.5777990256538033e-06}, {"id": 1015, "seek": 253488, "start": 2534.88, "end": 2538.2400000000002, "text": " But good languages work well with both.", "tokens": [583, 665, 8650, 589, 731, 365, 1293, 13], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1016, "seek": 253488, "start": 2538.2400000000002, "end": 2539.84, "text": " And so how do compilers work?", "tokens": [400, 370, 577, 360, 715, 388, 433, 589, 30], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1017, "seek": 253488, "start": 2539.84, "end": 2542.1600000000003, "text": " Well, the way that it used to work in the bad old days", "tokens": [1042, 11, 264, 636, 300, 309, 1143, 281, 589, 294, 264, 1578, 1331, 1708], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1018, "seek": 253488, "start": 2542.1600000000003, "end": 2544.6, "text": " is that if somebody wanted to build a compiler for x86,", "tokens": [307, 300, 498, 2618, 1415, 281, 1322, 257, 31958, 337, 2031, 22193, 11], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1019, "seek": 253488, "start": 2544.6, "end": 2547.92, "text": " they would build a parser, the front end part of a compiler.", "tokens": [436, 576, 1322, 257, 21156, 260, 11, 264, 1868, 917, 644, 295, 257, 31958, 13], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1020, "seek": 253488, "start": 2547.92, "end": 2550.12, "text": " They'd then build an optimizer to make the code go fast.", "tokens": [814, 1116, 550, 1322, 364, 5028, 6545, 281, 652, 264, 3089, 352, 2370, 13], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1021, "seek": 253488, "start": 2550.12, "end": 2552.76, "text": " And they'd build a code generator for the Intel PC", "tokens": [400, 436, 1116, 1322, 257, 3089, 19265, 337, 264, 19762, 6465], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1022, "seek": 253488, "start": 2552.76, "end": 2554.8, "text": " or whatever it is that they want to target.", "tokens": [420, 2035, 309, 307, 300, 436, 528, 281, 3779, 13], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1023, "seek": 253488, "start": 2554.8, "end": 2555.88, "text": " Somebody else would come along and say,", "tokens": [13463, 1646, 576, 808, 2051, 293, 584, 11], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1024, "seek": 253488, "start": 2555.88, "end": 2556.92, "text": " hey, I want a different compiler.", "tokens": [4177, 11, 286, 528, 257, 819, 31958, 13], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1025, "seek": 253488, "start": 2556.92, "end": 2558.2000000000003, "text": " I want a C++ compiler.", "tokens": [286, 528, 257, 383, 25472, 31958, 13], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1026, "seek": 253488, "start": 2558.2000000000003, "end": 2559.48, "text": " And they would build a parser.", "tokens": [400, 436, 576, 1322, 257, 21156, 260, 13], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1027, "seek": 253488, "start": 2559.48, "end": 2560.6800000000003, "text": " They would build an optimizer.", "tokens": [814, 576, 1322, 364, 5028, 6545, 13], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1028, "seek": 253488, "start": 2560.6800000000003, "end": 2563.12, "text": " They'd build a back end for PowerPC.", "tokens": [814, 1116, 1322, 257, 646, 917, 337, 7086, 12986, 13], "temperature": 0.0, "avg_logprob": -0.1385398465533589, "compression_ratio": 1.9311475409836065, "no_speech_prob": 2.9942693799966946e-06}, {"id": 1029, "seek": 256312, "start": 2563.12, "end": 2565.08, "text": " Somebody else would say, hey, APL is really cool.", "tokens": [13463, 1646, 576, 584, 11, 4177, 11, 5372, 43, 307, 534, 1627, 13], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1030, "seek": 256312, "start": 2565.08, "end": 2568.08, "text": " Let's build a parser for APL, an optimizer for APL,", "tokens": [961, 311, 1322, 257, 21156, 260, 337, 5372, 43, 11, 364, 5028, 6545, 337, 5372, 43, 11], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1031, "seek": 256312, "start": 2568.08, "end": 2570.24, "text": " and then a back end for ARM.", "tokens": [293, 550, 257, 646, 917, 337, 45209, 13], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1032, "seek": 256312, "start": 2570.24, "end": 2572.08, "text": " And if you've noticed the trend here,", "tokens": [400, 498, 291, 600, 5694, 264, 6028, 510, 11], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1033, "seek": 256312, "start": 2572.08, "end": 2573.3199999999997, "text": " there's a lot of re-implementation", "tokens": [456, 311, 257, 688, 295, 319, 12, 332, 781, 19631], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1034, "seek": 256312, "start": 2573.3199999999997, "end": 2574.88, "text": " of all the things going on.", "tokens": [295, 439, 264, 721, 516, 322, 13], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1035, "seek": 256312, "start": 2574.88, "end": 2576.44, "text": " And so what compilers have done is", "tokens": [400, 370, 437, 715, 388, 433, 362, 1096, 307], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1036, "seek": 256312, "start": 2576.44, "end": 2578.72, "text": " they've created funnel points.", "tokens": [436, 600, 2942, 24515, 2793, 13], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1037, "seek": 256312, "start": 2578.72, "end": 2580.72, "text": " LLVM is one of these funnel points", "tokens": [441, 43, 53, 44, 307, 472, 295, 613, 24515, 2793], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1038, "seek": 256312, "start": 2580.72, "end": 2584.2799999999997, "text": " where you can make it so that lots of different language", "tokens": [689, 291, 393, 652, 309, 370, 300, 3195, 295, 819, 2856], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1039, "seek": 256312, "start": 2584.2799999999997, "end": 2586.56, "text": " people can implement lots of different front ends.", "tokens": [561, 393, 4445, 3195, 295, 819, 1868, 5314, 13], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1040, "seek": 256312, "start": 2586.56, "end": 2588.02, "text": " And lots of different hardware people", "tokens": [400, 3195, 295, 819, 8837, 561], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1041, "seek": 256312, "start": 2588.02, "end": 2590.68, "text": " can implement what's called the back end or the code generator.", "tokens": [393, 4445, 437, 311, 1219, 264, 646, 917, 420, 264, 3089, 19265, 13], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1042, "seek": 256312, "start": 2590.68, "end": 2592.72, "text": " And now they can share a tremendous amount of code.", "tokens": [400, 586, 436, 393, 2073, 257, 10048, 2372, 295, 3089, 13], "temperature": 0.0, "avg_logprob": -0.11542630618845923, "compression_ratio": 1.8504672897196262, "no_speech_prob": 1.994625790757709e-06}, {"id": 1043, "seek": 259272, "start": 2592.72, "end": 2594.48, "text": " And now you can get all the permutations", "tokens": [400, 586, 291, 393, 483, 439, 264, 4784, 325, 763], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1044, "seek": 259272, "start": 2594.48, "end": 2595.52, "text": " that you want out of this.", "tokens": [300, 291, 528, 484, 295, 341, 13], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1045, "seek": 259272, "start": 2595.52, "end": 2598.72, "text": " And we should all thank Chris Latner's master's thesis", "tokens": [400, 321, 820, 439, 1309, 6688, 7354, 1193, 311, 4505, 311, 22288], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1046, "seek": 259272, "start": 2598.72, "end": 2601.48, "text": " supervisor for forcing him to write his damn thesis", "tokens": [24610, 337, 19030, 796, 281, 2464, 702, 8151, 22288], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1047, "seek": 259272, "start": 2601.48, "end": 2604.72, "text": " and getting him to actually write LLVM version 1 in 1", "tokens": [293, 1242, 796, 281, 767, 2464, 441, 43, 53, 44, 3037, 502, 294, 502], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1048, "seek": 259272, "start": 2604.72, "end": 2609.2799999999997, "text": " and 1 1 half weeks of DietKurk fueled coding activity.", "tokens": [293, 502, 502, 1922, 3259, 295, 29606, 42, 374, 74, 45446, 17720, 5191, 13], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1049, "seek": 259272, "start": 2609.2799999999997, "end": 2610.8799999999997, "text": " This is the way we get things done,", "tokens": [639, 307, 264, 636, 321, 483, 721, 1096, 11], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1050, "seek": 259272, "start": 2610.8799999999997, "end": 2612.6, "text": " is give people a ridiculous deadline.", "tokens": [307, 976, 561, 257, 11083, 20615, 13], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1051, "seek": 259272, "start": 2612.6, "end": 2613.48, "text": " And it happens.", "tokens": [400, 309, 2314, 13], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1052, "seek": 259272, "start": 2613.48, "end": 2614.8799999999997, "text": " Yeah, absolutely.", "tokens": [865, 11, 3122, 13], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1053, "seek": 259272, "start": 2614.8799999999997, "end": 2617.8799999999997, "text": " And so the details of what LLVM is is not really important.", "tokens": [400, 370, 264, 4365, 295, 437, 441, 43, 53, 44, 307, 307, 406, 534, 1021, 13], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1054, "seek": 259272, "start": 2617.8799999999997, "end": 2622.52, "text": " But LLVM is what powers Julia and Rust and Swift and Clang", "tokens": [583, 441, 43, 53, 44, 307, 437, 8674, 18551, 293, 34952, 293, 25539, 293, 2033, 656], "temperature": 0.0, "avg_logprob": -0.23714091326739337, "compression_ratio": 1.6504854368932038, "no_speech_prob": 3.726096110767685e-06}, {"id": 1055, "seek": 262252, "start": 2622.52, "end": 2623.92, "text": " that does C and C++.", "tokens": [300, 775, 383, 293, 383, 25472, 13], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1056, "seek": 262252, "start": 2623.92, "end": 2626.48, "text": " It's like a very common set of infrastructure", "tokens": [467, 311, 411, 257, 588, 2689, 992, 295, 6896], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1057, "seek": 262252, "start": 2626.48, "end": 2628.16, "text": " that lots of things use these days.", "tokens": [300, 3195, 295, 721, 764, 613, 1708, 13], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1058, "seek": 262252, "start": 2628.16, "end": 2629.72, "text": " And if you're not very familiar with compilers", "tokens": [400, 498, 291, 434, 406, 588, 4963, 365, 715, 388, 433], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1059, "seek": 262252, "start": 2629.72, "end": 2631.16, "text": " and what optimizations are, there's", "tokens": [293, 437, 5028, 14455, 366, 11, 456, 311], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1060, "seek": 262252, "start": 2631.16, "end": 2633.12, "text": " a bunch of standard stuff that LLVM does,", "tokens": [257, 3840, 295, 3832, 1507, 300, 441, 43, 53, 44, 775, 11], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1061, "seek": 262252, "start": 2633.12, "end": 2636.44, "text": " including constant folding, removing dead code,", "tokens": [3009, 5754, 25335, 11, 12720, 3116, 3089, 11], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1062, "seek": 262252, "start": 2636.44, "end": 2638.24, "text": " other things like the example I show here", "tokens": [661, 721, 411, 264, 1365, 286, 855, 510], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1063, "seek": 262252, "start": 2638.24, "end": 2641.6, "text": " of taking an expression and pulling it out of a loop.", "tokens": [295, 1940, 364, 6114, 293, 8407, 309, 484, 295, 257, 6367, 13], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1064, "seek": 262252, "start": 2641.6, "end": 2643.72, "text": " This is something that in PyTorch, for example,", "tokens": [639, 307, 746, 300, 294, 9953, 51, 284, 339, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1065, "seek": 262252, "start": 2643.72, "end": 2646.4, "text": " if you do a multiply inside of a loop of two tensors,", "tokens": [498, 291, 360, 257, 12972, 1854, 295, 257, 6367, 295, 732, 10688, 830, 11], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1066, "seek": 262252, "start": 2646.4, "end": 2648.48, "text": " it's going to run that multiply every single time", "tokens": [309, 311, 516, 281, 1190, 300, 12972, 633, 2167, 565], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1067, "seek": 262252, "start": 2648.48, "end": 2649.48, "text": " you go through the loop.", "tokens": [291, 352, 807, 264, 6367, 13], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1068, "seek": 262252, "start": 2649.48, "end": 2651.96, "text": " But reasonable, more modern languages", "tokens": [583, 10585, 11, 544, 4363, 8650], "temperature": 0.0, "avg_logprob": -0.12530572914782864, "compression_ratio": 1.6839080459770115, "no_speech_prob": 9.664772733231075e-06}, {"id": 1069, "seek": 265196, "start": 2651.96, "end": 2653.88, "text": " actually pull these things out for you.", "tokens": [767, 2235, 613, 721, 484, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.1375179434181156, "compression_ratio": 1.59, "no_speech_prob": 8.800408068054821e-06}, {"id": 1070, "seek": 265196, "start": 2653.88, "end": 2656.56, "text": " So this is a fascinating example, right?", "tokens": [407, 341, 307, 257, 10343, 1365, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1375179434181156, "compression_ratio": 1.59, "no_speech_prob": 8.800408068054821e-06}, {"id": 1071, "seek": 265196, "start": 2656.56, "end": 2659.28, "text": " Because normally, if we're writing Python and you see,", "tokens": [1436, 5646, 11, 498, 321, 434, 3579, 15329, 293, 291, 536, 11], "temperature": 0.0, "avg_logprob": -0.1375179434181156, "compression_ratio": 1.59, "no_speech_prob": 8.800408068054821e-06}, {"id": 1072, "seek": 265196, "start": 2659.28, "end": 2662.44, "text": " oh, I'm doing this work inside the loop redundantly,", "tokens": [1954, 11, 286, 478, 884, 341, 589, 1854, 264, 6367, 27830, 3627, 11], "temperature": 0.0, "avg_logprob": -0.1375179434181156, "compression_ratio": 1.59, "no_speech_prob": 8.800408068054821e-06}, {"id": 1073, "seek": 265196, "start": 2662.44, "end": 2663.32, "text": " I can pull it out.", "tokens": [286, 393, 2235, 309, 484, 13], "temperature": 0.0, "avg_logprob": -0.1375179434181156, "compression_ratio": 1.59, "no_speech_prob": 8.800408068054821e-06}, {"id": 1074, "seek": 265196, "start": 2663.32, "end": 2665.2, "text": " That's something that I, as a programmer,", "tokens": [663, 311, 746, 300, 286, 11, 382, 257, 32116, 11], "temperature": 0.0, "avg_logprob": -0.1375179434181156, "compression_ratio": 1.59, "no_speech_prob": 8.800408068054821e-06}, {"id": 1075, "seek": 265196, "start": 2665.2, "end": 2666.68, "text": " have to figure out, right?", "tokens": [362, 281, 2573, 484, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1375179434181156, "compression_ratio": 1.59, "no_speech_prob": 8.800408068054821e-06}, {"id": 1076, "seek": 265196, "start": 2666.68, "end": 2670.88, "text": " And the fact that LLVM can do this for you", "tokens": [400, 264, 1186, 300, 441, 43, 53, 44, 393, 360, 341, 337, 291], "temperature": 0.0, "avg_logprob": -0.1375179434181156, "compression_ratio": 1.59, "no_speech_prob": 8.800408068054821e-06}, {"id": 1077, "seek": 265196, "start": 2670.88, "end": 2675.44, "text": " and other optimization systems in GCC or whatever,", "tokens": [293, 661, 19618, 3652, 294, 460, 11717, 420, 2035, 11], "temperature": 0.0, "avg_logprob": -0.1375179434181156, "compression_ratio": 1.59, "no_speech_prob": 8.800408068054821e-06}, {"id": 1078, "seek": 265196, "start": 2675.44, "end": 2678.68, "text": " it suddenly makes you realize that compilers are something", "tokens": [309, 5800, 1669, 291, 4325, 300, 715, 388, 433, 366, 746], "temperature": 0.0, "avg_logprob": -0.1375179434181156, "compression_ratio": 1.59, "no_speech_prob": 8.800408068054821e-06}, {"id": 1079, "seek": 265196, "start": 2678.68, "end": 2680.76, "text": " different to at least what I thought they were.", "tokens": [819, 281, 412, 1935, 437, 286, 1194, 436, 645, 13], "temperature": 0.0, "avg_logprob": -0.1375179434181156, "compression_ratio": 1.59, "no_speech_prob": 8.800408068054821e-06}, {"id": 1080, "seek": 268076, "start": 2680.76, "end": 2683.84, "text": " I thought compilers were things that got in your way", "tokens": [286, 1194, 715, 388, 433, 645, 721, 300, 658, 294, 428, 636], "temperature": 0.0, "avg_logprob": -0.11822533157636535, "compression_ratio": 1.6528301886792454, "no_speech_prob": 7.1826912062533665e-06}, {"id": 1081, "seek": 268076, "start": 2683.84, "end": 2687.32, "text": " and complained until you did things the way they expected", "tokens": [293, 33951, 1826, 291, 630, 721, 264, 636, 436, 5176], "temperature": 0.0, "avg_logprob": -0.11822533157636535, "compression_ratio": 1.6528301886792454, "no_speech_prob": 7.1826912062533665e-06}, {"id": 1082, "seek": 268076, "start": 2687.32, "end": 2689.92, "text": " you to do them and took forever to run code", "tokens": [291, 281, 360, 552, 293, 1890, 5680, 281, 1190, 3089], "temperature": 0.0, "avg_logprob": -0.11822533157636535, "compression_ratio": 1.6528301886792454, "no_speech_prob": 7.1826912062533665e-06}, {"id": 1083, "seek": 268076, "start": 2689.92, "end": 2694.1200000000003, "text": " that I would have finished yesterday if it was Python.", "tokens": [300, 286, 576, 362, 4335, 5186, 498, 309, 390, 15329, 13], "temperature": 0.0, "avg_logprob": -0.11822533157636535, "compression_ratio": 1.6528301886792454, "no_speech_prob": 7.1826912062533665e-06}, {"id": 1084, "seek": 268076, "start": 2694.1200000000003, "end": 2697.44, "text": " But actually, working with Swift,", "tokens": [583, 767, 11, 1364, 365, 25539, 11], "temperature": 0.0, "avg_logprob": -0.11822533157636535, "compression_ratio": 1.6528301886792454, "no_speech_prob": 7.1826912062533665e-06}, {"id": 1085, "seek": 268076, "start": 2697.44, "end": 2699.2400000000002, "text": " and particularly with Swift for TensorFlow,", "tokens": [293, 4098, 365, 25539, 337, 37624, 11], "temperature": 0.0, "avg_logprob": -0.11822533157636535, "compression_ratio": 1.6528301886792454, "no_speech_prob": 7.1826912062533665e-06}, {"id": 1086, "seek": 268076, "start": 2699.2400000000002, "end": 2702.48, "text": " has made me realize that these optimizations actually", "tokens": [575, 1027, 385, 4325, 300, 613, 5028, 14455, 767], "temperature": 0.0, "avg_logprob": -0.11822533157636535, "compression_ratio": 1.6528301886792454, "no_speech_prob": 7.1826912062533665e-06}, {"id": 1087, "seek": 268076, "start": 2702.48, "end": 2705.48, "text": " allow us to write code in different ways", "tokens": [2089, 505, 281, 2464, 3089, 294, 819, 2098], "temperature": 0.0, "avg_logprob": -0.11822533157636535, "compression_ratio": 1.6528301886792454, "no_speech_prob": 7.1826912062533665e-06}, {"id": 1088, "seek": 268076, "start": 2705.48, "end": 2708.96, "text": " and actually be much more lazy about how we write code.", "tokens": [293, 767, 312, 709, 544, 14847, 466, 577, 321, 2464, 3089, 13], "temperature": 0.0, "avg_logprob": -0.11822533157636535, "compression_ratio": 1.6528301886792454, "no_speech_prob": 7.1826912062533665e-06}, {"id": 1089, "seek": 270896, "start": 2708.96, "end": 2710.92, "text": " And this is, as you think about, a point in the space", "tokens": [400, 341, 307, 11, 382, 291, 519, 466, 11, 257, 935, 294, 264, 1901], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1090, "seek": 270896, "start": 2710.92, "end": 2712.4, "text": " between the human and the computer.", "tokens": [1296, 264, 1952, 293, 264, 3820, 13], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1091, "seek": 270896, "start": 2712.4, "end": 2714.2400000000002, "text": " Yeah, so we're actually going to show you something", "tokens": [865, 11, 370, 321, 434, 767, 516, 281, 855, 291, 746], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1092, "seek": 270896, "start": 2714.2400000000002, "end": 2717.88, "text": " really mind-blowing next week, where this is actually", "tokens": [534, 1575, 12, 43788, 958, 1243, 11, 689, 341, 307, 767], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1093, "seek": 270896, "start": 2717.88, "end": 2721.68, "text": " going to be used to basically make autodiff work.", "tokens": [516, 281, 312, 1143, 281, 1936, 652, 1476, 378, 3661, 589, 13], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1094, "seek": 270896, "start": 2721.68, "end": 2724.88, "text": " And it's like, it blew my mind when I found out about it.", "tokens": [400, 309, 311, 411, 11, 309, 19075, 452, 1575, 562, 286, 1352, 484, 466, 309, 13], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1095, "seek": 270896, "start": 2724.88, "end": 2725.56, "text": " Yep.", "tokens": [7010, 13], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1096, "seek": 270896, "start": 2725.56, "end": 2727.2, "text": " And so now, if you think about languages", "tokens": [400, 370, 586, 11, 498, 291, 519, 466, 8650], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1097, "seek": 270896, "start": 2727.2, "end": 2728.4, "text": " and different points in the space,", "tokens": [293, 819, 2793, 294, 264, 1901, 11], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1098, "seek": 270896, "start": 2728.4, "end": 2730.48, "text": " there's a couple of different ways to look at this.", "tokens": [456, 311, 257, 1916, 295, 819, 2098, 281, 574, 412, 341, 13], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1099, "seek": 270896, "start": 2730.48, "end": 2733.08, "text": " One of the ways I think about it, ignoring the syntax pieces,", "tokens": [1485, 295, 264, 2098, 286, 519, 466, 309, 11, 26258, 264, 28431, 3755, 11], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1100, "seek": 270896, "start": 2733.08, "end": 2735.7200000000003, "text": " which the syntax is always the first thing people talk about,", "tokens": [597, 264, 28431, 307, 1009, 264, 700, 551, 561, 751, 466, 11], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1101, "seek": 270896, "start": 2735.7200000000003, "end": 2737.88, "text": " is what are the atoms of the universe", "tokens": [307, 437, 366, 264, 16871, 295, 264, 6445], "temperature": 0.0, "avg_logprob": -0.130038138547558, "compression_ratio": 1.8629283489096573, "no_speech_prob": 2.7103427783004008e-05}, {"id": 1102, "seek": 273788, "start": 2737.88, "end": 2739.6400000000003, "text": " and how do they get composed and how do you", "tokens": [293, 577, 360, 436, 483, 18204, 293, 577, 360, 291], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1103, "seek": 273788, "start": 2739.6400000000003, "end": 2740.6800000000003, "text": " build things out of them?", "tokens": [1322, 721, 484, 295, 552, 30], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1104, "seek": 273788, "start": 2740.6800000000003, "end": 2742.6, "text": " And so if you look at Python, for example,", "tokens": [400, 370, 498, 291, 574, 412, 15329, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1105, "seek": 273788, "start": 2742.6, "end": 2745.84, "text": " if you boil everything down in Python, boil a dictionary down,", "tokens": [498, 291, 13329, 1203, 760, 294, 15329, 11, 13329, 257, 25890, 760, 11], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1106, "seek": 273788, "start": 2745.84, "end": 2747.12, "text": " it's a bunch of C functions.", "tokens": [309, 311, 257, 3840, 295, 383, 6828, 13], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1107, "seek": 273788, "start": 2747.12, "end": 2748.48, "text": " And then what the interpreter does,", "tokens": [400, 550, 437, 264, 34132, 775, 11], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1108, "seek": 273788, "start": 2748.48, "end": 2751.6400000000003, "text": " the Python interpreter does, is it decides what C functions", "tokens": [264, 15329, 34132, 775, 11, 307, 309, 14898, 437, 383, 6828], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1109, "seek": 273788, "start": 2751.6400000000003, "end": 2753.92, "text": " to call in what order and on what data.", "tokens": [281, 818, 294, 437, 1668, 293, 322, 437, 1412, 13], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1110, "seek": 273788, "start": 2753.92, "end": 2756.32, "text": " And so the Python interpreter is slow.", "tokens": [400, 370, 264, 15329, 34132, 307, 2964, 13], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1111, "seek": 273788, "start": 2756.32, "end": 2759.1600000000003, "text": " And so the Python program ends up being slow,", "tokens": [400, 370, 264, 15329, 1461, 5314, 493, 885, 2964, 11], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1112, "seek": 273788, "start": 2759.1600000000003, "end": 2761.8, "text": " even if the C pieces are fast.", "tokens": [754, 498, 264, 383, 3755, 366, 2370, 13], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1113, "seek": 273788, "start": 2761.8, "end": 2763.04, "text": " C++ is another language.", "tokens": [383, 25472, 307, 1071, 2856, 13], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1114, "seek": 273788, "start": 2763.04, "end": 2764.96, "text": " C++ is a little bit different.", "tokens": [383, 25472, 307, 257, 707, 857, 819, 13], "temperature": 0.0, "avg_logprob": -0.13783733050028482, "compression_ratio": 1.8823529411764706, "no_speech_prob": 1.9523560695233755e-05}, {"id": 1115, "seek": 276496, "start": 2764.96, "end": 2768.4, "text": " C++, the atoms are built in things like integers and floats", "tokens": [383, 25472, 11, 264, 16871, 366, 3094, 294, 721, 411, 41674, 293, 37878], "temperature": 0.0, "avg_logprob": -0.14306893967490159, "compression_ratio": 1.7537313432835822, "no_speech_prob": 4.222595634928439e-06}, {"id": 1116, "seek": 276496, "start": 2768.4, "end": 2770.84, "text": " and arrays and pointers and things like that.", "tokens": [293, 41011, 293, 44548, 293, 721, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.14306893967490159, "compression_ratio": 1.7537313432835822, "no_speech_prob": 4.222595634928439e-06}, {"id": 1117, "seek": 276496, "start": 2770.84, "end": 2773.52, "text": " And then a C++ programmer can use structs and classes", "tokens": [400, 550, 257, 383, 25472, 32116, 393, 764, 6594, 82, 293, 5359], "temperature": 0.0, "avg_logprob": -0.14306893967490159, "compression_ratio": 1.7537313432835822, "no_speech_prob": 4.222595634928439e-06}, {"id": 1118, "seek": 276496, "start": 2773.52, "end": 2776.0, "text": " to build complex numbers or strings", "tokens": [281, 1322, 3997, 3547, 420, 13985], "temperature": 0.0, "avg_logprob": -0.14306893967490159, "compression_ratio": 1.7537313432835822, "no_speech_prob": 4.222595634928439e-06}, {"id": 1119, "seek": 276496, "start": 2776.0, "end": 2780.64, "text": " or its variable size array thing out of in the library.", "tokens": [420, 1080, 7006, 2744, 10225, 551, 484, 295, 294, 264, 6405, 13], "temperature": 0.0, "avg_logprob": -0.14306893967490159, "compression_ratio": 1.7537313432835822, "no_speech_prob": 4.222595634928439e-06}, {"id": 1120, "seek": 276496, "start": 2780.64, "end": 2783.04, "text": " It could do this because C++ is a fast language.", "tokens": [467, 727, 360, 341, 570, 383, 25472, 307, 257, 2370, 2856, 13], "temperature": 0.0, "avg_logprob": -0.14306893967490159, "compression_ratio": 1.7537313432835822, "no_speech_prob": 4.222595634928439e-06}, {"id": 1121, "seek": 276496, "start": 2783.04, "end": 2786.56, "text": " It's also not a super well-considered language.", "tokens": [467, 311, 611, 406, 257, 1687, 731, 12, 21190, 1438, 292, 2856, 13], "temperature": 0.0, "avg_logprob": -0.14306893967490159, "compression_ratio": 1.7537313432835822, "no_speech_prob": 4.222595634928439e-06}, {"id": 1122, "seek": 276496, "start": 2786.56, "end": 2790.12, "text": " But it's weird to me in C++ that array", "tokens": [583, 309, 311, 3657, 281, 385, 294, 383, 25472, 300, 10225], "temperature": 0.0, "avg_logprob": -0.14306893967490159, "compression_ratio": 1.7537313432835822, "no_speech_prob": 4.222595634928439e-06}, {"id": 1123, "seek": 276496, "start": 2790.12, "end": 2793.56, "text": " is hard-coded into the compiler, but string is a library feature.", "tokens": [307, 1152, 12, 66, 12340, 666, 264, 31958, 11, 457, 6798, 307, 257, 6405, 4111, 13], "temperature": 0.0, "avg_logprob": -0.14306893967490159, "compression_ratio": 1.7537313432835822, "no_speech_prob": 4.222595634928439e-06}, {"id": 1124, "seek": 276496, "start": 2793.56, "end": 2794.7200000000003, "text": " And why is that?", "tokens": [400, 983, 307, 300, 30], "temperature": 0.0, "avg_logprob": -0.14306893967490159, "compression_ratio": 1.7537313432835822, "no_speech_prob": 4.222595634928439e-06}, {"id": 1125, "seek": 279472, "start": 2794.72, "end": 2796.2799999999997, "text": " That doesn't really make sense to me,", "tokens": [663, 1177, 380, 534, 652, 2020, 281, 385, 11], "temperature": 0.0, "avg_logprob": -0.10580487383736505, "compression_ratio": 1.726643598615917, "no_speech_prob": 1.9333297132106964e-06}, {"id": 1126, "seek": 279472, "start": 2796.2799999999997, "end": 2798.7999999999997, "text": " because strings and arrays are so similar.", "tokens": [570, 13985, 293, 41011, 366, 370, 2531, 13], "temperature": 0.0, "avg_logprob": -0.10580487383736505, "compression_ratio": 1.726643598615917, "no_speech_prob": 1.9333297132106964e-06}, {"id": 1127, "seek": 279472, "start": 2798.7999999999997, "end": 2802.6, "text": " What Swift is is it says, let's rethink all this.", "tokens": [708, 25539, 307, 307, 309, 1619, 11, 718, 311, 34595, 439, 341, 13], "temperature": 0.0, "avg_logprob": -0.10580487383736505, "compression_ratio": 1.726643598615917, "no_speech_prob": 1.9333297132106964e-06}, {"id": 1128, "seek": 279472, "start": 2802.6, "end": 2806.08, "text": " And so the primitives, the low-level atoms of the universe", "tokens": [400, 370, 264, 2886, 38970, 11, 264, 2295, 12, 12418, 16871, 295, 264, 6445], "temperature": 0.0, "avg_logprob": -0.10580487383736505, "compression_ratio": 1.726643598615917, "no_speech_prob": 1.9333297132106964e-06}, {"id": 1129, "seek": 279472, "start": 2806.08, "end": 2808.9599999999996, "text": " are now things that LLVM, the compiler, knows about.", "tokens": [366, 586, 721, 300, 441, 43, 53, 44, 11, 264, 31958, 11, 3255, 466, 13], "temperature": 0.0, "avg_logprob": -0.10580487383736505, "compression_ratio": 1.726643598615917, "no_speech_prob": 1.9333297132106964e-06}, {"id": 1130, "seek": 279472, "start": 2808.9599999999996, "end": 2810.72, "text": " And then all the abstractions you build,", "tokens": [400, 550, 439, 264, 12649, 626, 291, 1322, 11], "temperature": 0.0, "avg_logprob": -0.10580487383736505, "compression_ratio": 1.726643598615917, "no_speech_prob": 1.9333297132106964e-06}, {"id": 1131, "seek": 279472, "start": 2810.72, "end": 2813.7599999999998, "text": " including floats, arrays, dictionaries, of course,", "tokens": [3009, 37878, 11, 41011, 11, 22352, 4889, 11, 295, 1164, 11], "temperature": 0.0, "avg_logprob": -0.10580487383736505, "compression_ratio": 1.726643598615917, "no_speech_prob": 1.9333297132106964e-06}, {"id": 1132, "seek": 279472, "start": 2813.7599999999998, "end": 2815.3999999999996, "text": " the high-level stuff too, like layers,", "tokens": [264, 1090, 12, 12418, 1507, 886, 11, 411, 7914, 11], "temperature": 0.0, "avg_logprob": -0.10580487383736505, "compression_ratio": 1.726643598615917, "no_speech_prob": 1.9333297132106964e-06}, {"id": 1133, "seek": 279472, "start": 2815.3999999999996, "end": 2817.68, "text": " those are all defined in the library.", "tokens": [729, 366, 439, 7642, 294, 264, 6405, 13], "temperature": 0.0, "avg_logprob": -0.10580487383736505, "compression_ratio": 1.726643598615917, "no_speech_prob": 1.9333297132106964e-06}, {"id": 1134, "seek": 279472, "start": 2817.68, "end": 2821.2799999999997, "text": " And so a float is not a magic built-in thing.", "tokens": [400, 370, 257, 15706, 307, 406, 257, 5585, 3094, 12, 259, 551, 13], "temperature": 0.0, "avg_logprob": -0.10580487383736505, "compression_ratio": 1.726643598615917, "no_speech_prob": 1.9333297132106964e-06}, {"id": 1135, "seek": 279472, "start": 2821.2799999999997, "end": 2823.3199999999997, "text": " Swift doesn't like magic built-in things.", "tokens": [25539, 1177, 380, 411, 5585, 3094, 12, 259, 721, 13], "temperature": 0.0, "avg_logprob": -0.10580487383736505, "compression_ratio": 1.726643598615917, "no_speech_prob": 1.9333297132106964e-06}, {"id": 1136, "seek": 282332, "start": 2823.32, "end": 2824.84, "text": " Swift likes things that are hackable.", "tokens": [25539, 5902, 721, 300, 366, 10339, 712, 13], "temperature": 0.0, "avg_logprob": -0.10670415617579179, "compression_ratio": 1.7006802721088434, "no_speech_prob": 1.0676687907107407e-06}, {"id": 1137, "seek": 282332, "start": 2824.84, "end": 2829.0800000000004, "text": " And if something is interesting for a library developer to do,", "tokens": [400, 498, 746, 307, 1880, 337, 257, 6405, 10754, 281, 360, 11], "temperature": 0.0, "avg_logprob": -0.10670415617579179, "compression_ratio": 1.7006802721088434, "no_speech_prob": 1.0676687907107407e-06}, {"id": 1138, "seek": 282332, "start": 2829.0800000000004, "end": 2831.1200000000003, "text": " maybe you want to do it in your workbook.", "tokens": [1310, 291, 528, 281, 360, 309, 294, 428, 589, 2939, 13], "temperature": 0.0, "avg_logprob": -0.10670415617579179, "compression_ratio": 1.7006802721088434, "no_speech_prob": 1.0676687907107407e-06}, {"id": 1139, "seek": 282332, "start": 2831.1200000000003, "end": 2835.0800000000004, "text": " And so having an open ecosystem is very powerful.", "tokens": [400, 370, 1419, 364, 1269, 11311, 307, 588, 4005, 13], "temperature": 0.0, "avg_logprob": -0.10670415617579179, "compression_ratio": 1.7006802721088434, "no_speech_prob": 1.0676687907107407e-06}, {"id": 1140, "seek": 282332, "start": 2835.0800000000004, "end": 2837.7200000000003, "text": " And so if you actually go look at the library that implements", "tokens": [400, 370, 498, 291, 767, 352, 574, 412, 264, 6405, 300, 704, 17988], "temperature": 0.0, "avg_logprob": -0.10670415617579179, "compression_ratio": 1.7006802721088434, "no_speech_prob": 1.0676687907107407e-06}, {"id": 1141, "seek": 282332, "start": 2837.7200000000003, "end": 2841.44, "text": " float, float is just a struct, just like the complex thing we", "tokens": [15706, 11, 15706, 307, 445, 257, 6594, 11, 445, 411, 264, 3997, 551, 321], "temperature": 0.0, "avg_logprob": -0.10670415617579179, "compression_ratio": 1.7006802721088434, "no_speech_prob": 1.0676687907107407e-06}, {"id": 1142, "seek": 282332, "start": 2841.44, "end": 2842.84, "text": " were talking about before.", "tokens": [645, 1417, 466, 949, 13], "temperature": 0.0, "avg_logprob": -0.10670415617579179, "compression_ratio": 1.7006802721088434, "no_speech_prob": 1.0676687907107407e-06}, {"id": 1143, "seek": 282332, "start": 2842.84, "end": 2846.2000000000003, "text": " And the middle, the inside of it is this built-in weird thing.", "tokens": [400, 264, 2808, 11, 264, 1854, 295, 309, 307, 341, 3094, 12, 259, 3657, 551, 13], "temperature": 0.0, "avg_logprob": -0.10670415617579179, "compression_ratio": 1.7006802721088434, "no_speech_prob": 1.0676687907107407e-06}, {"id": 1144, "seek": 282332, "start": 2846.2000000000003, "end": 2847.7200000000003, "text": " That's an LLVM thing.", "tokens": [663, 311, 364, 441, 43, 53, 44, 551, 13], "temperature": 0.0, "avg_logprob": -0.10670415617579179, "compression_ratio": 1.7006802721088434, "no_speech_prob": 1.0676687907107407e-06}, {"id": 1145, "seek": 282332, "start": 2847.7200000000003, "end": 2850.48, "text": " And plus, on floats, isn't a magic thing", "tokens": [400, 1804, 11, 322, 37878, 11, 1943, 380, 257, 5585, 551], "temperature": 0.0, "avg_logprob": -0.10670415617579179, "compression_ratio": 1.7006802721088434, "no_speech_prob": 1.0676687907107407e-06}, {"id": 1146, "seek": 282332, "start": 2850.48, "end": 2851.84, "text": " that the compiler knows about.", "tokens": [300, 264, 31958, 3255, 466, 13], "temperature": 0.0, "avg_logprob": -0.10670415617579179, "compression_ratio": 1.7006802721088434, "no_speech_prob": 1.0676687907107407e-06}, {"id": 1147, "seek": 285184, "start": 2851.84, "end": 2853.6400000000003, "text": " Plus is just an operator, just like we were talking about", "tokens": [7721, 307, 445, 364, 12973, 11, 445, 411, 321, 645, 1417, 466], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1148, "seek": 285184, "start": 2853.6400000000003, "end": 2855.32, "text": " before when we defined square root.", "tokens": [949, 562, 321, 7642, 3732, 5593, 13], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1149, "seek": 285184, "start": 2855.32, "end": 2857.6400000000003, "text": " Just this one happens to be named plus or plus equals.", "tokens": [1449, 341, 472, 2314, 281, 312, 4926, 1804, 420, 1804, 6915, 13], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1150, "seek": 285184, "start": 2857.6400000000003, "end": 2859.52, "text": " And it's implemented with LLVM magic.", "tokens": [400, 309, 311, 12270, 365, 441, 43, 53, 44, 5585, 13], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1151, "seek": 285184, "start": 2859.52, "end": 2861.88, "text": " So we're allowed to use float now, Chris?", "tokens": [407, 321, 434, 4350, 281, 764, 15706, 586, 11, 6688, 30], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1152, "seek": 285184, "start": 2861.88, "end": 2864.92, "text": " Well, let's go look at the implementation.", "tokens": [1042, 11, 718, 311, 352, 574, 412, 264, 11420, 13], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1153, "seek": 285184, "start": 2864.92, "end": 2867.44, "text": " And so if you actually go look at this,", "tokens": [400, 370, 498, 291, 767, 352, 574, 412, 341, 11], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1154, "seek": 285184, "start": 2867.44, "end": 2870.1200000000003, "text": " this is the standard library that comes with Swift.", "tokens": [341, 307, 264, 3832, 6405, 300, 1487, 365, 25539, 13], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1155, "seek": 285184, "start": 2870.1200000000003, "end": 2872.08, "text": " Here you can see it implements infinity.", "tokens": [1692, 291, 393, 536, 309, 704, 17988, 13202, 13], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1156, "seek": 285184, "start": 2872.08, "end": 2873.76, "text": " It implements not a number.", "tokens": [467, 704, 17988, 406, 257, 1230, 13], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1157, "seek": 285184, "start": 2873.76, "end": 2875.6000000000004, "text": " It implements add, pi.", "tokens": [467, 704, 17988, 909, 11, 3895, 13], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1158, "seek": 285184, "start": 2875.6000000000004, "end": 2878.0, "text": " Like all the things that are in float", "tokens": [1743, 439, 264, 721, 300, 366, 294, 15706], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1159, "seek": 285184, "start": 2878.0, "end": 2880.52, "text": " is just a gigantic pile of Swift code.", "tokens": [307, 445, 257, 26800, 14375, 295, 25539, 3089, 13], "temperature": 0.0, "avg_logprob": -0.14164430731969163, "compression_ratio": 1.7161290322580645, "no_speech_prob": 8.664166671223938e-06}, {"id": 1160, "seek": 288052, "start": 2880.52, "end": 2882.6, "text": " And the cool thing about this is that this", "tokens": [400, 264, 1627, 551, 466, 341, 307, 300, 341], "temperature": 0.0, "avg_logprob": -0.12239425350921322, "compression_ratio": 1.591743119266055, "no_speech_prob": 3.7844797589059453e-06}, {"id": 1161, "seek": 288052, "start": 2882.6, "end": 2886.52, "text": " means that you can implement low-level stuff like this, too,", "tokens": [1355, 300, 291, 393, 4445, 2295, 12, 12418, 1507, 411, 341, 11, 886, 11], "temperature": 0.0, "avg_logprob": -0.12239425350921322, "compression_ratio": 1.591743119266055, "no_speech_prob": 3.7844797589059453e-06}, {"id": 1162, "seek": 288052, "start": 2886.52, "end": 2889.08, "text": " right in the workbook.", "tokens": [558, 294, 264, 589, 2939, 13], "temperature": 0.0, "avg_logprob": -0.12239425350921322, "compression_ratio": 1.591743119266055, "no_speech_prob": 3.7844797589059453e-06}, {"id": 1163, "seek": 288052, "start": 2889.08, "end": 2895.16, "text": " And to be clear, we don't expect you to implement float yourself.", "tokens": [400, 281, 312, 1850, 11, 321, 500, 380, 2066, 291, 281, 4445, 15706, 1803, 13], "temperature": 0.0, "avg_logprob": -0.12239425350921322, "compression_ratio": 1.591743119266055, "no_speech_prob": 3.7844797589059453e-06}, {"id": 1164, "seek": 288052, "start": 2895.16, "end": 2898.32, "text": " But the fact that you can is actually", "tokens": [583, 264, 1186, 300, 291, 393, 307, 767], "temperature": 0.0, "avg_logprob": -0.12239425350921322, "compression_ratio": 1.591743119266055, "no_speech_prob": 3.7844797589059453e-06}, {"id": 1165, "seek": 288052, "start": 2898.32, "end": 2900.16, "text": " important for data scientists.", "tokens": [1021, 337, 1412, 7708, 13], "temperature": 0.0, "avg_logprob": -0.12239425350921322, "compression_ratio": 1.591743119266055, "no_speech_prob": 3.7844797589059453e-06}, {"id": 1166, "seek": 288052, "start": 2900.16, "end": 2902.68, "text": " And so let me explain.", "tokens": [400, 370, 718, 385, 2903, 13], "temperature": 0.0, "avg_logprob": -0.12239425350921322, "compression_ratio": 1.591743119266055, "no_speech_prob": 3.7844797589059453e-06}, {"id": 1167, "seek": 288052, "start": 2902.68, "end": 2908.24, "text": " When I was starting out, and I did a lot of stuff with Delphi,", "tokens": [1133, 286, 390, 2891, 484, 11, 293, 286, 630, 257, 688, 295, 1507, 365, 5831, 950, 72, 11], "temperature": 0.0, "avg_logprob": -0.12239425350921322, "compression_ratio": 1.591743119266055, "no_speech_prob": 3.7844797589059453e-06}, {"id": 1168, "seek": 290824, "start": 2908.24, "end": 2910.7599999999998, "text": " I guess 20-something years ago, which", "tokens": [286, 2041, 945, 12, 31681, 924, 2057, 11, 597], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1169, "seek": 290824, "start": 2910.7599999999998, "end": 2913.16, "text": " is like a very fast Pascal system,", "tokens": [307, 411, 257, 588, 2370, 41723, 1185, 11], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1170, "seek": 290824, "start": 2913.16, "end": 2915.16, "text": " and I was writing a lot of numeric code,", "tokens": [293, 286, 390, 3579, 257, 688, 295, 7866, 299, 3089, 11], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1171, "seek": 290824, "start": 2915.16, "end": 2918.4799999999996, "text": " and I very often hit this floor where things", "tokens": [293, 286, 588, 2049, 2045, 341, 4123, 689, 721], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1172, "seek": 290824, "start": 2918.4799999999996, "end": 2920.3599999999997, "text": " weren't working the way I wanted them to,", "tokens": [4999, 380, 1364, 264, 636, 286, 1415, 552, 281, 11], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1173, "seek": 290824, "start": 2920.3599999999997, "end": 2924.08, "text": " so I had to use assembler, which nobody should ever have to do.", "tokens": [370, 286, 632, 281, 764, 8438, 1918, 11, 597, 5079, 820, 1562, 362, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1174, "seek": 290824, "start": 2924.08, "end": 2925.4399999999996, "text": " But that was the floor I hit.", "tokens": [583, 300, 390, 264, 4123, 286, 2045, 13], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1175, "seek": 290824, "start": 2925.4399999999996, "end": 2927.3999999999996, "text": " I had work that needed to be done,", "tokens": [286, 632, 589, 300, 2978, 281, 312, 1096, 11], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1176, "seek": 290824, "start": 2927.3999999999996, "end": 2930.2799999999997, "text": " and I couldn't do it in Delphi, so I had to use assembler.", "tokens": [293, 286, 2809, 380, 360, 309, 294, 5831, 950, 72, 11, 370, 286, 632, 281, 764, 8438, 1918, 13], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1177, "seek": 290824, "start": 2930.2799999999997, "end": 2931.9199999999996, "text": " But at least I could.", "tokens": [583, 412, 1935, 286, 727, 13], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1178, "seek": 290824, "start": 2931.9199999999996, "end": 2934.6, "text": " And over the last 25 years, we've", "tokens": [400, 670, 264, 1036, 3552, 924, 11, 321, 600], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1179, "seek": 290824, "start": 2934.6, "end": 2937.6, "text": " gradually filled in more and more of the things", "tokens": [13145, 6412, 294, 544, 293, 544, 295, 264, 721], "temperature": 0.0, "avg_logprob": -0.11337797433737941, "compression_ratio": 1.7385159010600706, "no_speech_prob": 2.429138112347573e-05}, {"id": 1180, "seek": 293760, "start": 2937.6, "end": 2941.64, "text": " that numeric programmers use.", "tokens": [300, 7866, 299, 41504, 764, 13], "temperature": 0.0, "avg_logprob": -0.13974063135996587, "compression_ratio": 1.7248062015503876, "no_speech_prob": 1.9831913959933445e-05}, {"id": 1181, "seek": 293760, "start": 2941.64, "end": 2943.4, "text": " But what I'm finding is happening now", "tokens": [583, 437, 286, 478, 5006, 307, 2737, 586], "temperature": 0.0, "avg_logprob": -0.13974063135996587, "compression_ratio": 1.7248062015503876, "no_speech_prob": 1.9831913959933445e-05}, {"id": 1182, "seek": 293760, "start": 2943.4, "end": 2945.2, "text": " is as numeric programming is becoming", "tokens": [307, 382, 7866, 299, 9410, 307, 5617], "temperature": 0.0, "avg_logprob": -0.13974063135996587, "compression_ratio": 1.7248062015503876, "no_speech_prob": 1.9831913959933445e-05}, {"id": 1183, "seek": 293760, "start": 2945.2, "end": 2948.7999999999997, "text": " differentiable programming, I'm hitting the bottom of the stack", "tokens": [819, 9364, 9410, 11, 286, 478, 8850, 264, 2767, 295, 264, 8630], "temperature": 0.0, "avg_logprob": -0.13974063135996587, "compression_ratio": 1.7248062015503876, "no_speech_prob": 1.9831913959933445e-05}, {"id": 1184, "seek": 293760, "start": 2948.7999999999997, "end": 2952.88, "text": " again, and there aren't things that I want to do.", "tokens": [797, 11, 293, 456, 3212, 380, 721, 300, 286, 528, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.13974063135996587, "compression_ratio": 1.7248062015503876, "no_speech_prob": 1.9831913959933445e-05}, {"id": 1185, "seek": 293760, "start": 2952.88, "end": 2955.12, "text": " Or there are things I want to do a little bit differently.", "tokens": [1610, 456, 366, 721, 286, 528, 281, 360, 257, 707, 857, 7614, 13], "temperature": 0.0, "avg_logprob": -0.13974063135996587, "compression_ratio": 1.7248062015503876, "no_speech_prob": 1.9831913959933445e-05}, {"id": 1186, "seek": 293760, "start": 2955.12, "end": 2958.04, "text": " So I feel like we're at this point in history,", "tokens": [407, 286, 841, 411, 321, 434, 412, 341, 935, 294, 2503, 11], "temperature": 0.0, "avg_logprob": -0.13974063135996587, "compression_ratio": 1.7248062015503876, "no_speech_prob": 1.9831913959933445e-05}, {"id": 1187, "seek": 293760, "start": 2958.04, "end": 2961.52, "text": " and we might be for the next five or 10 years or more,", "tokens": [293, 321, 1062, 312, 337, 264, 958, 1732, 420, 1266, 924, 420, 544, 11], "temperature": 0.0, "avg_logprob": -0.13974063135996587, "compression_ratio": 1.7248062015503876, "no_speech_prob": 1.9831913959933445e-05}, {"id": 1188, "seek": 293760, "start": 2961.52, "end": 2965.36, "text": " where data scientists don't need to know how to write assembler,", "tokens": [689, 1412, 7708, 500, 380, 643, 281, 458, 577, 281, 2464, 8438, 1918, 11], "temperature": 0.0, "avg_logprob": -0.13974063135996587, "compression_ratio": 1.7248062015503876, "no_speech_prob": 1.9831913959933445e-05}, {"id": 1189, "seek": 296536, "start": 2965.36, "end": 2968.48, "text": " but they do need a system where they can go under the surface", "tokens": [457, 436, 360, 643, 257, 1185, 689, 436, 393, 352, 833, 264, 3753], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1190, "seek": 296536, "start": 2968.48, "end": 2973.2400000000002, "text": " and actually change things that people don't normally change.", "tokens": [293, 767, 1319, 721, 300, 561, 500, 380, 5646, 1319, 13], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1191, "seek": 296536, "start": 2973.2400000000002, "end": 2973.7200000000003, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1192, "seek": 296536, "start": 2973.7200000000003, "end": 2975.6400000000003, "text": " Well, and again, to me, I think the goal here", "tokens": [1042, 11, 293, 797, 11, 281, 385, 11, 286, 519, 264, 3387, 510], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1193, "seek": 296536, "start": 2975.6400000000003, "end": 2977.1600000000003, "text": " is an infinitely hackable platform.", "tokens": [307, 364, 36227, 10339, 712, 3663, 13], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1194, "seek": 296536, "start": 2977.1600000000003, "end": 2980.2000000000003, "text": " So in the box are all the nice things you'd expect.", "tokens": [407, 294, 264, 2424, 366, 439, 264, 1481, 721, 291, 1116, 2066, 13], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1195, "seek": 296536, "start": 2980.2000000000003, "end": 2981.6600000000003, "text": " You don't have to write matmols.", "tokens": [509, 500, 380, 362, 281, 2464, 3803, 76, 19385, 13], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1196, "seek": 296536, "start": 2981.6600000000003, "end": 2983.56, "text": " You don't have to write floats.", "tokens": [509, 500, 380, 362, 281, 2464, 37878, 13], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1197, "seek": 296536, "start": 2983.56, "end": 2986.2000000000003, "text": " But if you want to go change it and do your own, you can.", "tokens": [583, 498, 291, 528, 281, 352, 1319, 309, 293, 360, 428, 1065, 11, 291, 393, 13], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1198, "seek": 296536, "start": 2986.2000000000003, "end": 2987.88, "text": " Or if you want to take somebody else's,", "tokens": [1610, 498, 291, 528, 281, 747, 2618, 1646, 311, 11], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1199, "seek": 296536, "start": 2987.88, "end": 2989.6800000000003, "text": " you can drop it in your workbook.", "tokens": [291, 393, 3270, 309, 294, 428, 589, 2939, 13], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1200, "seek": 296536, "start": 2989.6800000000003, "end": 2991.84, "text": " You don't have to recompile the whole stack.", "tokens": [509, 500, 380, 362, 281, 48000, 794, 264, 1379, 8630, 13], "temperature": 0.0, "avg_logprob": -0.1419114362473456, "compression_ratio": 1.8035714285714286, "no_speech_prob": 3.445723450568039e-06}, {"id": 1201, "seek": 299184, "start": 2991.84, "end": 2998.1600000000003, "text": " Now, we talked about structure a little bit like classes in Python.", "tokens": [823, 11, 321, 2825, 466, 3877, 257, 707, 857, 411, 5359, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.1497655293298146, "compression_ratio": 1.5782747603833867, "no_speech_prob": 8.990380138129694e-07}, {"id": 1202, "seek": 299184, "start": 2998.1600000000003, "end": 3000.36, "text": " The major difference is that these are actually fast.", "tokens": [440, 2563, 2649, 307, 300, 613, 366, 767, 2370, 13], "temperature": 0.0, "avg_logprob": -0.1497655293298146, "compression_ratio": 1.5782747603833867, "no_speech_prob": 8.990380138129694e-07}, {"id": 1203, "seek": 299184, "start": 3000.36, "end": 3004.36, "text": " So here's our square add that multiplies two things together", "tokens": [407, 510, 311, 527, 3732, 909, 300, 12788, 530, 732, 721, 1214], "temperature": 0.0, "avg_logprob": -0.1497655293298146, "compression_ratio": 1.5782747603833867, "no_speech_prob": 8.990380138129694e-07}, {"id": 1204, "seek": 299184, "start": 3004.36, "end": 3006.52, "text": " and adds it.", "tokens": [293, 10860, 309, 13], "temperature": 0.0, "avg_logprob": -0.1497655293298146, "compression_ratio": 1.5782747603833867, "no_speech_prob": 8.990380138129694e-07}, {"id": 1205, "seek": 299184, "start": 3006.52, "end": 3008.84, "text": " If this was Python, these would be allocating objects.", "tokens": [759, 341, 390, 15329, 11, 613, 576, 312, 12660, 990, 6565, 13], "temperature": 0.0, "avg_logprob": -0.1497655293298146, "compression_ratio": 1.5782747603833867, "no_speech_prob": 8.990380138129694e-07}, {"id": 1206, "seek": 299184, "start": 3008.84, "end": 3011.1600000000003, "text": " This would be doing lots of crazy stuff.", "tokens": [639, 576, 312, 884, 3195, 295, 3219, 1507, 13], "temperature": 0.0, "avg_logprob": -0.1497655293298146, "compression_ratio": 1.5782747603833867, "no_speech_prob": 8.990380138129694e-07}, {"id": 1207, "seek": 299184, "start": 3011.1600000000003, "end": 3014.1200000000003, "text": " This thing I'm showing you now is called the Compiler Explorer.", "tokens": [639, 551, 286, 478, 4099, 291, 586, 307, 1219, 264, 6620, 5441, 31895, 13], "temperature": 0.0, "avg_logprob": -0.1497655293298146, "compression_ratio": 1.5782747603833867, "no_speech_prob": 8.990380138129694e-07}, {"id": 1208, "seek": 299184, "start": 3014.1200000000003, "end": 3016.2400000000002, "text": " And you thought you came to learn machine learning?", "tokens": [400, 291, 1194, 291, 1361, 281, 1466, 3479, 2539, 30], "temperature": 0.0, "avg_logprob": -0.1497655293298146, "compression_ratio": 1.5782747603833867, "no_speech_prob": 8.990380138129694e-07}, {"id": 1209, "seek": 299184, "start": 3016.2400000000002, "end": 3019.6000000000004, "text": " Here's some assembly language, which we're going to get away", "tokens": [1692, 311, 512, 12103, 2856, 11, 597, 321, 434, 516, 281, 483, 1314], "temperature": 0.0, "avg_logprob": -0.1497655293298146, "compression_ratio": 1.5782747603833867, "no_speech_prob": 8.990380138129694e-07}, {"id": 1210, "seek": 299184, "start": 3019.6000000000004, "end": 3020.7200000000003, "text": " from as soon as possible.", "tokens": [490, 382, 2321, 382, 1944, 13], "temperature": 0.0, "avg_logprob": -0.1497655293298146, "compression_ratio": 1.5782747603833867, "no_speech_prob": 8.990380138129694e-07}, {"id": 1211, "seek": 302072, "start": 3020.72, "end": 3023.12, "text": " But the point is you're writing a reasonable Swift code.", "tokens": [583, 264, 935, 307, 291, 434, 3579, 257, 10585, 25539, 3089, 13], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1212, "seek": 302072, "start": 3023.12, "end": 3025.2799999999997, "text": " And you're getting literally the same code", "tokens": [400, 291, 434, 1242, 3736, 264, 912, 3089], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1213, "seek": 302072, "start": 3025.2799999999997, "end": 3028.8799999999997, "text": " you would get from Clang if you wrote C++.", "tokens": [291, 576, 483, 490, 2033, 656, 498, 291, 4114, 383, 25472, 13], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1214, "seek": 302072, "start": 3028.8799999999997, "end": 3031.4399999999996, "text": " Even though float is implemented in the standard library,", "tokens": [2754, 1673, 15706, 307, 12270, 294, 264, 3832, 6405, 11], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1215, "seek": 302072, "start": 3031.4399999999996, "end": 3032.64, "text": " there's no tricks here.", "tokens": [456, 311, 572, 11733, 510, 13], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1216, "seek": 302072, "start": 3032.64, "end": 3035.48, "text": " You're getting the lowest level optimized fast code that's", "tokens": [509, 434, 1242, 264, 12437, 1496, 26941, 2370, 3089, 300, 311], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1217, "seek": 302072, "start": 3035.48, "end": 3038.68, "text": " turning to multiply instruction and add instruction on Intel.", "tokens": [6246, 281, 12972, 10951, 293, 909, 10951, 322, 19762, 13], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1218, "seek": 302072, "start": 3038.68, "end": 3040.3599999999997, "text": " And I'll go away from this very quickly,", "tokens": [400, 286, 603, 352, 1314, 490, 341, 588, 2661, 11], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1219, "seek": 302072, "start": 3040.3599999999997, "end": 3044.7999999999997, "text": " because we're not here to learn about Intel assembly.", "tokens": [570, 321, 434, 406, 510, 281, 1466, 466, 19762, 12103, 13], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1220, "seek": 302072, "start": 3044.7999999999997, "end": 3046.3199999999997, "text": " Now, the thing about float, again,", "tokens": [823, 11, 264, 551, 466, 15706, 11, 797, 11], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1221, "seek": 302072, "start": 3046.3199999999997, "end": 3048.3999999999996, "text": " is not really about something you should want to do.", "tokens": [307, 406, 534, 466, 746, 291, 820, 528, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1222, "seek": 302072, "start": 3048.3999999999996, "end": 3049.8599999999997, "text": " But you can poke at it if you want.", "tokens": [583, 291, 393, 19712, 412, 309, 498, 291, 528, 13], "temperature": 0.0, "avg_logprob": -0.15967721808446597, "compression_ratio": 1.70392749244713, "no_speech_prob": 1.568809057062026e-05}, {"id": 1223, "seek": 304986, "start": 3049.86, "end": 3051.52, "text": " You can see what's inside of it.", "tokens": [509, 393, 536, 437, 311, 1854, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1224, "seek": 304986, "start": 3051.52, "end": 3054.52, "text": " One of the things we've at least so far chosen not to do", "tokens": [1485, 295, 264, 721, 321, 600, 412, 1935, 370, 1400, 8614, 406, 281, 360], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1225, "seek": 304986, "start": 3054.52, "end": 3057.28, "text": " is we don't export the built-in to workbooks.", "tokens": [307, 321, 500, 380, 10725, 264, 3094, 12, 259, 281, 589, 15170, 13], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1226, "seek": 304986, "start": 3057.28, "end": 3059.44, "text": " And so you have to write a standalone file to use it.", "tokens": [400, 370, 291, 362, 281, 2464, 257, 37454, 3991, 281, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1227, "seek": 304986, "start": 3059.44, "end": 3061.2000000000003, "text": " We could change that if we wanted to.", "tokens": [492, 727, 1319, 300, 498, 321, 1415, 281, 13], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1228, "seek": 304986, "start": 3061.2000000000003, "end": 3063.2400000000002, "text": " But one of the really powerful things about this", "tokens": [583, 472, 295, 264, 534, 4005, 721, 466, 341], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1229, "seek": 304986, "start": 3063.2400000000002, "end": 3066.08, "text": " is because these types are defined in the library,", "tokens": [307, 570, 613, 3467, 366, 7642, 294, 264, 6405, 11], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1230, "seek": 304986, "start": 3066.08, "end": 3067.4, "text": " they're not magic.", "tokens": [436, 434, 406, 5585, 13], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1231, "seek": 304986, "start": 3067.4, "end": 3069.6, "text": " Well, now all the other things we talked about", "tokens": [1042, 11, 586, 439, 264, 661, 721, 321, 2825, 466], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1232, "seek": 304986, "start": 3069.6, "end": 3070.6400000000003, "text": " before work with these.", "tokens": [949, 589, 365, 613, 13], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1233, "seek": 304986, "start": 3070.6400000000003, "end": 3073.6400000000003, "text": " And so we can add a method to int or to bool.", "tokens": [400, 370, 321, 393, 909, 257, 3170, 281, 560, 420, 281, 748, 401, 13], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1234, "seek": 304986, "start": 3073.6400000000003, "end": 3077.8, "text": " So here we add a little isOdd method that's just saying,", "tokens": [407, 510, 321, 909, 257, 707, 307, 46, 24810, 3170, 300, 311, 445, 1566, 11], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1235, "seek": 304986, "start": 3077.8, "end": 3079.8, "text": " is the low bit set or clear?", "tokens": [307, 264, 2295, 857, 992, 420, 1850, 30], "temperature": 0.0, "avg_logprob": -0.12653607497980565, "compression_ratio": 1.7102803738317758, "no_speech_prob": 2.4059816041699378e-06}, {"id": 1236, "seek": 307980, "start": 3079.8, "end": 3080.6000000000004, "text": " That's cool.", "tokens": [663, 311, 1627, 13], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1237, "seek": 307980, "start": 3080.6000000000004, "end": 3081.52, "text": " That's fine.", "tokens": [663, 311, 2489, 13], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1238, "seek": 307980, "start": 3081.52, "end": 3082.6400000000003, "text": " This is not monkey patching.", "tokens": [639, 307, 406, 17847, 9972, 278, 13], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1239, "seek": 307980, "start": 3082.6400000000003, "end": 3085.44, "text": " This is just super low level int is a struct.", "tokens": [639, 307, 445, 1687, 2295, 1496, 560, 307, 257, 6594, 13], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1240, "seek": 307980, "start": 3085.44, "end": 3087.36, "text": " Sure, you can add a method to it, no problem.", "tokens": [4894, 11, 291, 393, 909, 257, 3170, 281, 309, 11, 572, 1154, 13], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1241, "seek": 307980, "start": 3087.36, "end": 3090.2000000000003, "text": " We can add a symbol that turns a boolean into an emoji,", "tokens": [492, 393, 909, 257, 5986, 300, 4523, 257, 748, 4812, 282, 666, 364, 31595, 11], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1242, "seek": 307980, "start": 3090.2000000000003, "end": 3092.48, "text": " because emojis are cool.", "tokens": [570, 19611, 40371, 366, 1627, 13], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1243, "seek": 307980, "start": 3092.48, "end": 3094.6400000000003, "text": " And so now you can just use these things.", "tokens": [400, 370, 586, 291, 393, 445, 764, 613, 721, 13], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1244, "seek": 307980, "start": 3094.6400000000003, "end": 3097.7200000000003, "text": " And we can say, hey, four, are you odd?", "tokens": [400, 321, 393, 584, 11, 4177, 11, 1451, 11, 366, 291, 7401, 30], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1245, "seek": 307980, "start": 3097.7200000000003, "end": 3098.52, "text": " A four, are you odd?", "tokens": [316, 1451, 11, 366, 291, 7401, 30], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1246, "seek": 307980, "start": 3098.52, "end": 3099.6000000000004, "text": " Turn yourself into a symbol.", "tokens": [7956, 1803, 666, 257, 5986, 13], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1247, "seek": 307980, "start": 3099.6000000000004, "end": 3100.6400000000003, "text": " And we get true, false.", "tokens": [400, 321, 483, 2074, 11, 7908, 13], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1248, "seek": 307980, "start": 3100.6400000000003, "end": 3101.98, "text": " We get thumbs up, thumbs down.", "tokens": [492, 483, 8838, 493, 11, 8838, 760, 13], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1249, "seek": 307980, "start": 3101.98, "end": 3103.32, "text": " And it all just kind of works.", "tokens": [400, 309, 439, 445, 733, 295, 1985, 13], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1250, "seek": 307980, "start": 3103.32, "end": 3105.0800000000004, "text": " Yeah, I mean, this is particularly", "tokens": [865, 11, 286, 914, 11, 341, 307, 4098], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1251, "seek": 307980, "start": 3105.0800000000004, "end": 3107.92, "text": " important for all of us at this stage,", "tokens": [1021, 337, 439, 295, 505, 412, 341, 3233, 11], "temperature": 0.0, "avg_logprob": -0.17342231974882238, "compression_ratio": 1.759322033898305, "no_speech_prob": 8.012532816792373e-06}, {"id": 1252, "seek": 310792, "start": 3107.92, "end": 3110.84, "text": " because as we discussed, Swift hasn't been widely", "tokens": [570, 382, 321, 7152, 11, 25539, 6132, 380, 668, 13371], "temperature": 0.0, "avg_logprob": -0.15587738457076047, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.5200818779703695e-05}, {"id": 1253, "seek": 310792, "start": 3110.84, "end": 3112.08, "text": " used for numeric programming.", "tokens": [1143, 337, 7866, 299, 9410, 13], "temperature": 0.0, "avg_logprob": -0.15587738457076047, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.5200818779703695e-05}, {"id": 1254, "seek": 310792, "start": 3112.08, "end": 3113.6800000000003, "text": " So a lot of stuff doesn't exist.", "tokens": [407, 257, 688, 295, 1507, 1177, 380, 2514, 13], "temperature": 0.0, "avg_logprob": -0.15587738457076047, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.5200818779703695e-05}, {"id": 1255, "seek": 310792, "start": 3113.6800000000003, "end": 3116.76, "text": " And so when I started playing with it in December,", "tokens": [400, 370, 562, 286, 1409, 2433, 365, 309, 294, 7687, 11], "temperature": 0.0, "avg_logprob": -0.15587738457076047, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.5200818779703695e-05}, {"id": 1256, "seek": 310792, "start": 3116.76, "end": 3120.0, "text": " and I realized, oh, I'm missing stuff.", "tokens": [293, 286, 5334, 11, 1954, 11, 286, 478, 5361, 1507, 13], "temperature": 0.0, "avg_logprob": -0.15587738457076047, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.5200818779703695e-05}, {"id": 1257, "seek": 310792, "start": 3120.0, "end": 3123.08, "text": " So yeah, so I created this library called BaseMath,", "tokens": [407, 1338, 11, 370, 286, 2942, 341, 6405, 1219, 21054, 44, 998, 11], "temperature": 0.0, "avg_logprob": -0.15587738457076047, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.5200818779703695e-05}, {"id": 1258, "seek": 310792, "start": 3123.08, "end": 3128.6800000000003, "text": " where I literally was defining things on float", "tokens": [689, 286, 3736, 390, 17827, 721, 322, 15706], "temperature": 0.0, "avg_logprob": -0.15587738457076047, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.5200818779703695e-05}, {"id": 1259, "seek": 310792, "start": 3128.6800000000003, "end": 3130.2400000000002, "text": " that I needed to exist.", "tokens": [300, 286, 2978, 281, 2514, 13], "temperature": 0.0, "avg_logprob": -0.15587738457076047, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.5200818779703695e-05}, {"id": 1260, "seek": 310792, "start": 3130.2400000000002, "end": 3136.0, "text": " And not only did they then exist, but they ran at C speed.", "tokens": [400, 406, 787, 630, 436, 550, 2514, 11, 457, 436, 5872, 412, 383, 3073, 13], "temperature": 0.0, "avg_logprob": -0.15587738457076047, "compression_ratio": 1.5483870967741935, "no_speech_prob": 1.5200818779703695e-05}, {"id": 1261, "seek": 313600, "start": 3136.0, "end": 3140.52, "text": " And then from then on, I had all the math stuff", "tokens": [400, 550, 490, 550, 322, 11, 286, 632, 439, 264, 5221, 1507], "temperature": 0.0, "avg_logprob": -0.10446537865532769, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.7775066226022318e-05}, {"id": 1262, "seek": 313600, "start": 3140.52, "end": 3142.76, "text": " that I wanted in the language.", "tokens": [300, 286, 1415, 294, 264, 2856, 13], "temperature": 0.0, "avg_logprob": -0.10446537865532769, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.7775066226022318e-05}, {"id": 1263, "seek": 313600, "start": 3142.76, "end": 3147.12, "text": " And so if you're hacking around over the coming months,", "tokens": [400, 370, 498, 291, 434, 31422, 926, 670, 264, 1348, 2493, 11], "temperature": 0.0, "avg_logprob": -0.10446537865532769, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.7775066226022318e-05}, {"id": 1264, "seek": 313600, "start": 3147.12, "end": 3150.24, "text": " and you find things not quite the way you want,", "tokens": [293, 291, 915, 721, 406, 1596, 264, 636, 291, 528, 11], "temperature": 0.0, "avg_logprob": -0.10446537865532769, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.7775066226022318e-05}, {"id": 1265, "seek": 313600, "start": 3150.24, "end": 3153.56, "text": " you can and should change it.", "tokens": [291, 393, 293, 820, 1319, 309, 13], "temperature": 0.0, "avg_logprob": -0.10446537865532769, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.7775066226022318e-05}, {"id": 1266, "seek": 313600, "start": 3153.56, "end": 3158.92, "text": " And it's really, really, really common in Swift code", "tokens": [400, 309, 311, 534, 11, 534, 11, 534, 2689, 294, 25539, 3089], "temperature": 0.0, "avg_logprob": -0.10446537865532769, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.7775066226022318e-05}, {"id": 1267, "seek": 313600, "start": 3158.92, "end": 3161.24, "text": " to add extensions to basic types.", "tokens": [281, 909, 25129, 281, 3875, 3467, 13], "temperature": 0.0, "avg_logprob": -0.10446537865532769, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.7775066226022318e-05}, {"id": 1268, "seek": 313600, "start": 3161.24, "end": 3163.28, "text": " It's not at all unusual or weird.", "tokens": [467, 311, 406, 412, 439, 10901, 420, 3657, 13], "temperature": 0.0, "avg_logprob": -0.10446537865532769, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.7775066226022318e-05}, {"id": 1269, "seek": 313600, "start": 3163.28, "end": 3165.68, "text": " It's just part of how you write Swift code.", "tokens": [467, 311, 445, 644, 295, 577, 291, 2464, 25539, 3089, 13], "temperature": 0.0, "avg_logprob": -0.10446537865532769, "compression_ratio": 1.6462882096069869, "no_speech_prob": 1.7775066226022318e-05}, {"id": 1270, "seek": 316568, "start": 3165.68, "end": 3167.52, "text": " And you can make it feel the way you want.", "tokens": [400, 291, 393, 652, 309, 841, 264, 636, 291, 528, 13], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1271, "seek": 316568, "start": 3167.52, "end": 3169.2, "text": " So we're not going to dive in too deep.", "tokens": [407, 321, 434, 406, 516, 281, 9192, 294, 886, 2452, 13], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1272, "seek": 316568, "start": 3169.2, "end": 3171.72, "text": " But there's lots of interesting things in the system.", "tokens": [583, 456, 311, 3195, 295, 1880, 721, 294, 264, 1185, 13], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1273, "seek": 316568, "start": 3171.72, "end": 3174.52, "text": " So if you say, well, how does and-and work?", "tokens": [407, 498, 291, 584, 11, 731, 11, 577, 775, 293, 12, 474, 589, 30], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1274, "seek": 316568, "start": 3174.52, "end": 3177.3199999999997, "text": " And-and only evaluates one side of itself", "tokens": [400, 12, 474, 787, 6133, 1024, 472, 1252, 295, 2564], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1275, "seek": 316568, "start": 3177.3199999999997, "end": 3178.7599999999998, "text": " if the other side is true.", "tokens": [498, 264, 661, 1252, 307, 2074, 13], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1276, "seek": 316568, "start": 3178.7599999999998, "end": 3180.3599999999997, "text": " Well, that's implemented in our library.", "tokens": [1042, 11, 300, 311, 12270, 294, 527, 6405, 13], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1277, "seek": 316568, "start": 3180.3599999999997, "end": 3181.16, "text": " It's three lines of code.", "tokens": [467, 311, 1045, 3876, 295, 3089, 13], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1278, "seek": 316568, "start": 3181.16, "end": 3181.96, "text": " You can go dive in.", "tokens": [509, 393, 352, 9192, 294, 13], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1279, "seek": 316568, "start": 3181.96, "end": 3183.64, "text": " There's a couple of links.", "tokens": [821, 311, 257, 1916, 295, 6123, 13], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1280, "seek": 316568, "start": 3183.64, "end": 3185.68, "text": " Let's talk about array, because we need arrays", "tokens": [961, 311, 751, 466, 10225, 11, 570, 321, 643, 41011], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1281, "seek": 316568, "start": 3185.68, "end": 3188.04, "text": " to implement MatMul.", "tokens": [281, 4445, 6789, 44, 425, 13], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1282, "seek": 316568, "start": 3188.04, "end": 3189.8399999999997, "text": " Before we talk about how array works,", "tokens": [4546, 321, 751, 466, 577, 10225, 1985, 11], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1283, "seek": 316568, "start": 3189.8399999999997, "end": 3192.2799999999997, "text": " let's look at how you use it as a Swift programmer.", "tokens": [718, 311, 574, 412, 577, 291, 764, 309, 382, 257, 25539, 32116, 13], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1284, "seek": 316568, "start": 3192.2799999999997, "end": 3194.0, "text": " Arrays in Swift are super simple.", "tokens": [1587, 36212, 294, 25539, 366, 1687, 2199, 13], "temperature": 0.0, "avg_logprob": -0.14399731579948874, "compression_ratio": 1.7236024844720497, "no_speech_prob": 2.3919385057524778e-05}, {"id": 1285, "seek": 319400, "start": 3194.0, "end": 3197.88, "text": " You just define them with square brackets like you'd expect.", "tokens": [509, 445, 6964, 552, 365, 3732, 26179, 411, 291, 1116, 2066, 13], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1286, "seek": 319400, "start": 3197.88, "end": 3198.96, "text": " Swift is type-inferred.", "tokens": [25539, 307, 2010, 12, 259, 612, 986, 13], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1287, "seek": 319400, "start": 3198.96, "end": 3200.76, "text": " And so what you'll end up seeing is", "tokens": [400, 370, 437, 291, 603, 917, 493, 2577, 307], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1288, "seek": 319400, "start": 3200.76, "end": 3202.6, "text": " there's two different syntaxes for the types.", "tokens": [456, 311, 732, 819, 28431, 279, 337, 264, 3467, 13], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1289, "seek": 319400, "start": 3202.6, "end": 3204.28, "text": " There's int and square brackets, which", "tokens": [821, 311, 560, 293, 3732, 26179, 11, 597], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1290, "seek": 319400, "start": 3204.28, "end": 3206.92, "text": " is the way you'd normally write it if it's not inferred.", "tokens": [307, 264, 636, 291, 1116, 5646, 2464, 309, 498, 309, 311, 406, 13596, 986, 13], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1291, "seek": 319400, "start": 3206.92, "end": 3210.4, "text": " But that is actually just sugar for this array.", "tokens": [583, 300, 307, 767, 445, 5076, 337, 341, 10225, 13], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1292, "seek": 319400, "start": 3210.4, "end": 3212.68, "text": " And if you print out the types of these things,", "tokens": [400, 498, 291, 4482, 484, 264, 3467, 295, 613, 721, 11], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1293, "seek": 319400, "start": 3212.68, "end": 3215.0, "text": " you'll see that they're all just array event, array event,", "tokens": [291, 603, 536, 300, 436, 434, 439, 445, 10225, 2280, 11, 10225, 2280, 11], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1294, "seek": 319400, "start": 3215.0, "end": 3216.08, "text": " array event.", "tokens": [10225, 2280, 13], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1295, "seek": 319400, "start": 3216.08, "end": 3218.96, "text": " Well, arrays can be iterated over.", "tokens": [1042, 11, 41011, 393, 312, 17138, 770, 670, 13], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1296, "seek": 319400, "start": 3218.96, "end": 3220.08, "text": " So you can have a for loop.", "tokens": [407, 291, 393, 362, 257, 337, 6367, 13], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1297, "seek": 319400, "start": 3220.08, "end": 3222.28, "text": " It just goes over all the elements of the array.", "tokens": [467, 445, 1709, 670, 439, 264, 4959, 295, 264, 10225, 13], "temperature": 0.0, "avg_logprob": -0.11695760335677709, "compression_ratio": 1.8187919463087248, "no_speech_prob": 7.1825875238573644e-06}, {"id": 1298, "seek": 322228, "start": 3222.28, "end": 3224.1600000000003, "text": " Pretty simple.", "tokens": [10693, 2199, 13], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1299, "seek": 322228, "start": 3224.1600000000003, "end": 3225.1200000000003, "text": " You can slice them.", "tokens": [509, 393, 13153, 552, 13], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1300, "seek": 322228, "start": 3225.1200000000003, "end": 3227.2400000000002, "text": " Swift has two ways to slice based on whether you", "tokens": [25539, 575, 732, 2098, 281, 13153, 2361, 322, 1968, 291], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1301, "seek": 322228, "start": 3227.2400000000002, "end": 3228.6400000000003, "text": " want the endpoint or not.", "tokens": [528, 264, 35795, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1302, "seek": 322228, "start": 3228.6400000000003, "end": 3230.28, "text": " And if you want an inclusive range, which", "tokens": [400, 498, 291, 528, 364, 13429, 3613, 11, 597], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1303, "seek": 322228, "start": 3230.28, "end": 3232.6800000000003, "text": " includes that endpoint, you use dot, dot, dot.", "tokens": [5974, 300, 35795, 11, 291, 764, 5893, 11, 5893, 11, 5893, 13], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1304, "seek": 322228, "start": 3232.6800000000003, "end": 3234.76, "text": " In an exclusive range, you use dot, dot, lesson.", "tokens": [682, 364, 13005, 3613, 11, 291, 764, 5893, 11, 5893, 11, 6898, 13], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1305, "seek": 322228, "start": 3234.76, "end": 3238.28, "text": " And the lesson says, but not the last one.", "tokens": [400, 264, 6898, 1619, 11, 457, 406, 264, 1036, 472, 13], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1306, "seek": 322228, "start": 3238.28, "end": 3240.2400000000002, "text": " Swift supports functional programming things.", "tokens": [25539, 9346, 11745, 9410, 721, 13], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1307, "seek": 322228, "start": 3240.2400000000002, "end": 3245.0400000000004, "text": " And so here what we do is we use this functional map algorithm.", "tokens": [400, 370, 510, 437, 321, 360, 307, 321, 764, 341, 11745, 4471, 9284, 13], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1308, "seek": 322228, "start": 3245.0400000000004, "end": 3247.1200000000003, "text": " And it's using a closure.", "tokens": [400, 309, 311, 1228, 257, 24653, 13], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1309, "seek": 322228, "start": 3247.1200000000003, "end": 3249.7200000000003, "text": " Closures are the same thing as lambdas in Python", "tokens": [2033, 329, 1303, 366, 264, 912, 551, 382, 10097, 27476, 294, 15329], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1310, "seek": 322228, "start": 3249.7200000000003, "end": 3251.5600000000004, "text": " with slightly nicer syntax.", "tokens": [365, 4748, 22842, 28431, 13], "temperature": 0.0, "avg_logprob": -0.14693859452051475, "compression_ratio": 1.790035587188612, "no_speech_prob": 2.2958465706324205e-06}, {"id": 1311, "seek": 325156, "start": 3251.56, "end": 3254.4, "text": " And so here what we're doing is we're saying, give me an array,", "tokens": [400, 370, 510, 437, 321, 434, 884, 307, 321, 434, 1566, 11, 976, 385, 364, 10225, 11], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1312, "seek": 325156, "start": 3254.4, "end": 3257.2799999999997, "text": " but run a function that takes all the elements", "tokens": [457, 1190, 257, 2445, 300, 2516, 439, 264, 4959], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1313, "seek": 325156, "start": 3257.2799999999997, "end": 3258.84, "text": " and adds 10 to them.", "tokens": [293, 10860, 1266, 281, 552, 13], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1314, "seek": 325156, "start": 3258.84, "end": 3259.88, "text": " And it's very simple.", "tokens": [400, 309, 311, 588, 2199, 13], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1315, "seek": 325156, "start": 3259.88, "end": 3261.2, "text": " You can just do this right in line.", "tokens": [509, 393, 445, 360, 341, 558, 294, 1622, 13], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1316, "seek": 325156, "start": 3261.2, "end": 3262.16, "text": " And it's nice and fast.", "tokens": [400, 309, 311, 1481, 293, 2370, 13], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1317, "seek": 325156, "start": 3262.16, "end": 3264.0, "text": " And so here we get our array where everything", "tokens": [400, 370, 510, 321, 483, 527, 10225, 689, 1203], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1318, "seek": 325156, "start": 3264.0, "end": 3266.32, "text": " has 10 added to it.", "tokens": [575, 1266, 3869, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1319, "seek": 325156, "start": 3266.32, "end": 3269.0, "text": " It has filter and reduce as well.", "tokens": [467, 575, 6608, 293, 5407, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1320, "seek": 325156, "start": 3269.0, "end": 3271.48, "text": " So filter just takes a predicate where you say,", "tokens": [407, 6608, 445, 2516, 257, 3852, 8700, 689, 291, 584, 11], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1321, "seek": 325156, "start": 3271.48, "end": 3274.64, "text": " filter and only include the things that are odd.", "tokens": [6608, 293, 787, 4090, 264, 721, 300, 366, 7401, 13], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1322, "seek": 325156, "start": 3274.64, "end": 3276.56, "text": " And we just added is odd.", "tokens": [400, 321, 445, 3869, 307, 7401, 13], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1323, "seek": 325156, "start": 3276.56, "end": 3279.12, "text": " And now we get an array that just has odd things in it.", "tokens": [400, 586, 321, 483, 364, 10225, 300, 445, 575, 7401, 721, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1324, "seek": 325156, "start": 3279.12, "end": 3280.0, "text": " It's super easy.", "tokens": [467, 311, 1687, 1858, 13], "temperature": 0.0, "avg_logprob": -0.15355544895320744, "compression_ratio": 1.8243727598566308, "no_speech_prob": 1.118914838116325e-06}, {"id": 1325, "seek": 328000, "start": 3280.0, "end": 3281.68, "text": " And one of the other things you'll notice", "tokens": [400, 472, 295, 264, 661, 721, 291, 603, 3449], "temperature": 0.0, "avg_logprob": -0.14533955804232893, "compression_ratio": 1.781758957654723, "no_speech_prob": 1.777749821485486e-05}, {"id": 1326, "seek": 328000, "start": 3281.68, "end": 3284.0, "text": " is that Swift has lots of nice syntactic shortcuts.", "tokens": [307, 300, 25539, 575, 3195, 295, 1481, 23980, 19892, 34620, 13], "temperature": 0.0, "avg_logprob": -0.14533955804232893, "compression_ratio": 1.781758957654723, "no_speech_prob": 1.777749821485486e-05}, {"id": 1327, "seek": 328000, "start": 3284.0, "end": 3286.72, "text": " And so instead of naming our argument like we did in map,", "tokens": [400, 370, 2602, 295, 25290, 527, 6770, 411, 321, 630, 294, 4471, 11], "temperature": 0.0, "avg_logprob": -0.14533955804232893, "compression_ratio": 1.781758957654723, "no_speech_prob": 1.777749821485486e-05}, {"id": 1328, "seek": 328000, "start": 3286.72, "end": 3288.96, "text": " we just use the default name, which is $0.", "tokens": [321, 445, 764, 264, 7576, 1315, 11, 597, 307, 1848, 15, 13], "temperature": 0.0, "avg_logprob": -0.14533955804232893, "compression_ratio": 1.781758957654723, "no_speech_prob": 1.777749821485486e-05}, {"id": 1329, "seek": 328000, "start": 3288.96, "end": 3294.44, "text": " So the top one is equivalent to lambda arg colon arg plus 10.", "tokens": [407, 264, 1192, 472, 307, 10344, 281, 13607, 3882, 8255, 3882, 1804, 1266, 13], "temperature": 0.0, "avg_logprob": -0.14533955804232893, "compression_ratio": 1.781758957654723, "no_speech_prob": 1.777749821485486e-05}, {"id": 1330, "seek": 328000, "start": 3294.44, "end": 3297.4, "text": " And so then we can get rid of both the lambda and the arg", "tokens": [400, 370, 550, 321, 393, 483, 3973, 295, 1293, 264, 13607, 293, 264, 3882], "temperature": 0.0, "avg_logprob": -0.14533955804232893, "compression_ratio": 1.781758957654723, "no_speech_prob": 1.777749821485486e-05}, {"id": 1331, "seek": 328000, "start": 3297.4, "end": 3299.2, "text": " colon by sticking it in curly brackets", "tokens": [8255, 538, 13465, 309, 294, 32066, 26179], "temperature": 0.0, "avg_logprob": -0.14533955804232893, "compression_ratio": 1.781758957654723, "no_speech_prob": 1.777749821485486e-05}, {"id": 1332, "seek": 328000, "start": 3299.2, "end": 3302.04, "text": " and just using $0 to refer to the first argument.", "tokens": [293, 445, 1228, 1848, 15, 281, 2864, 281, 264, 700, 6770, 13], "temperature": 0.0, "avg_logprob": -0.14533955804232893, "compression_ratio": 1.781758957654723, "no_speech_prob": 1.777749821485486e-05}, {"id": 1333, "seek": 328000, "start": 3302.04, "end": 3304.56, "text": " Another super common thing is that often these closures end up", "tokens": [3996, 1687, 2689, 551, 307, 300, 2049, 613, 2611, 1303, 917, 493], "temperature": 0.0, "avg_logprob": -0.14533955804232893, "compression_ratio": 1.781758957654723, "no_speech_prob": 1.777749821485486e-05}, {"id": 1334, "seek": 328000, "start": 3304.56, "end": 3306.32, "text": " being the last argument to a function.", "tokens": [885, 264, 1036, 6770, 281, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.14533955804232893, "compression_ratio": 1.781758957654723, "no_speech_prob": 1.777749821485486e-05}, {"id": 1335, "seek": 328000, "start": 3306.32, "end": 3308.08, "text": " If they're the last argument of function,", "tokens": [759, 436, 434, 264, 1036, 6770, 295, 2445, 11], "temperature": 0.0, "avg_logprob": -0.14533955804232893, "compression_ratio": 1.781758957654723, "no_speech_prob": 1.777749821485486e-05}, {"id": 1336, "seek": 330808, "start": 3308.08, "end": 3310.08, "text": " you can just put them outside the parentheses.", "tokens": [291, 393, 445, 829, 552, 2380, 264, 34153, 13], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1337, "seek": 330808, "start": 3310.08, "end": 3311.84, "text": " And if that's the only thing in the parentheses,", "tokens": [400, 498, 300, 311, 264, 787, 551, 294, 264, 34153, 11], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1338, "seek": 330808, "start": 3311.84, "end": 3313.72, "text": " you can just get rid of the parentheses as well.", "tokens": [291, 393, 445, 483, 3973, 295, 264, 34153, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1339, "seek": 330808, "start": 3313.72, "end": 3315.0, "text": " And so you get these really nice things", "tokens": [400, 370, 291, 483, 613, 534, 1481, 721], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1340, "seek": 330808, "start": 3315.0, "end": 3316.84, "text": " that are kind of like list comprehensions", "tokens": [300, 366, 733, 295, 411, 1329, 10753, 8302], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1341, "seek": 330808, "start": 3316.84, "end": 3319.36, "text": " where you can say, map and multiply all the elements", "tokens": [689, 291, 393, 584, 11, 4471, 293, 12972, 439, 264, 4959], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1342, "seek": 330808, "start": 3319.36, "end": 3322.88, "text": " by 3 and then filter them and only keep the odd ones.", "tokens": [538, 805, 293, 550, 6608, 552, 293, 787, 1066, 264, 7401, 2306, 13], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1343, "seek": 330808, "start": 3322.88, "end": 3324.88, "text": " And you get very nice, fluent things.", "tokens": [400, 291, 483, 588, 1481, 11, 40799, 721, 13], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1344, "seek": 330808, "start": 3324.88, "end": 3330.4, "text": " Or here's a map where I'm saying,", "tokens": [1610, 510, 311, 257, 4471, 689, 286, 478, 1566, 11], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1345, "seek": 330808, "start": 3330.4, "end": 3332.6, "text": " decide whether it's odd and then turn it into a symbol.", "tokens": [4536, 1968, 309, 311, 7401, 293, 550, 1261, 309, 666, 257, 5986, 13], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1346, "seek": 330808, "start": 3332.6, "end": 3334.44, "text": " And I get very nice, simple.", "tokens": [400, 286, 483, 588, 1481, 11, 2199, 13], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1347, "seek": 330808, "start": 3334.44, "end": 3337.84, "text": " Yeah, so just come back and have a look at this map filter", "tokens": [865, 11, 370, 445, 808, 646, 293, 362, 257, 574, 412, 341, 4471, 6608], "temperature": 0.0, "avg_logprob": -0.15531592969073366, "compression_ratio": 1.8996539792387543, "no_speech_prob": 1.2217272342240904e-05}, {"id": 1348, "seek": 333784, "start": 3337.84, "end": 3339.1600000000003, "text": " again at the end of the lesson", "tokens": [797, 412, 264, 917, 295, 264, 6898], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1349, "seek": 333784, "start": 3339.1600000000003, "end": 3341.76, "text": " because this is how you do list comprehensions in Swift.", "tokens": [570, 341, 307, 577, 291, 360, 1329, 10753, 8302, 294, 25539, 13], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1350, "seek": 333784, "start": 3341.76, "end": 3343.32, "text": " You don't need special syntax for it", "tokens": [509, 500, 380, 643, 2121, 28431, 337, 309], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1351, "seek": 333784, "start": 3343.32, "end": 3346.56, "text": " because the stuff that's already built in very elegantly", "tokens": [570, 264, 1507, 300, 311, 1217, 3094, 294, 588, 14459, 3627], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1352, "seek": 333784, "start": 3346.56, "end": 3348.76, "text": " gives us list comprehensions for free.", "tokens": [2709, 505, 1329, 10753, 8302, 337, 1737, 13], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1353, "seek": 333784, "start": 3348.76, "end": 3350.84, "text": " Yep, and all these things are just library features.", "tokens": [7010, 11, 293, 439, 613, 721, 366, 445, 6405, 4122, 13], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1354, "seek": 333784, "start": 3350.84, "end": 3353.2400000000002, "text": " Reduce is a reduction.", "tokens": [4477, 4176, 307, 257, 11004, 13], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1355, "seek": 333784, "start": 3353.2400000000002, "end": 3354.48, "text": " So you give it the first element.", "tokens": [407, 291, 976, 309, 264, 700, 4478, 13], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1356, "seek": 333784, "start": 3354.48, "end": 3357.2400000000002, "text": " And then in this case, we're just adding all the elements", "tokens": [400, 550, 294, 341, 1389, 11, 321, 434, 445, 5127, 439, 264, 4959], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1357, "seek": 333784, "start": 3357.2400000000002, "end": 3358.6800000000003, "text": " of the array to 0.", "tokens": [295, 264, 10225, 281, 1958, 13], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1358, "seek": 333784, "start": 3358.6800000000003, "end": 3359.88, "text": " And plus is a function.", "tokens": [400, 1804, 307, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1359, "seek": 333784, "start": 3359.88, "end": 3361.2400000000002, "text": " We saw it already.", "tokens": [492, 1866, 309, 1217, 13], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1360, "seek": 333784, "start": 3361.2400000000002, "end": 3364.6000000000004, "text": " And so this just uses the plus function to do a reduction.", "tokens": [400, 370, 341, 445, 4960, 264, 1804, 2445, 281, 360, 257, 11004, 13], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1361, "seek": 333784, "start": 3364.6000000000004, "end": 3366.1600000000003, "text": " It's super simple.", "tokens": [467, 311, 1687, 2199, 13], "temperature": 0.0, "avg_logprob": -0.11148374672704095, "compression_ratio": 1.7959183673469388, "no_speech_prob": 1.0289081728842575e-05}, {"id": 1362, "seek": 336616, "start": 3366.16, "end": 3368.0, "text": " Now, we're talking about array.", "tokens": [823, 11, 321, 434, 1417, 466, 10225, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1363, "seek": 336616, "start": 3368.0, "end": 3368.7999999999997, "text": " Array is a type.", "tokens": [1587, 3458, 307, 257, 2010, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1364, "seek": 336616, "start": 3368.7999999999997, "end": 3371.6, "text": " And that means you can do an extension on a type.", "tokens": [400, 300, 1355, 291, 393, 360, 364, 10320, 322, 257, 2010, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1365, "seek": 336616, "start": 3371.6, "end": 3373.56, "text": " So you can add methods to arrays.", "tokens": [407, 291, 393, 909, 7150, 281, 41011, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1366, "seek": 336616, "start": 3373.56, "end": 3374.3599999999997, "text": " That's super easy.", "tokens": [663, 311, 1687, 1858, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1367, "seek": 336616, "start": 3374.3599999999997, "end": 3376.8799999999997, "text": " So here we defined a double elements method", "tokens": [407, 510, 321, 7642, 257, 3834, 4959, 3170], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1368, "seek": 336616, "start": 3376.8799999999997, "end": 3378.3599999999997, "text": " that returns a new array.", "tokens": [300, 11247, 257, 777, 10225, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1369, "seek": 336616, "start": 3378.3599999999997, "end": 3379.8399999999997, "text": " And we just map.", "tokens": [400, 321, 445, 4471, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1370, "seek": 336616, "start": 3379.8399999999997, "end": 3382.52, "text": " So double elements just multiplies all the elements by 2.", "tokens": [407, 3834, 4959, 445, 12788, 530, 439, 264, 4959, 538, 568, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1371, "seek": 336616, "start": 3382.52, "end": 3385.3199999999997, "text": " And like the self thing we don't actually need.", "tokens": [400, 411, 264, 2698, 551, 321, 500, 380, 767, 643, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1372, "seek": 336616, "start": 3385.3199999999997, "end": 3386.24, "text": " Oh, thank you.", "tokens": [876, 11, 1309, 291, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1373, "seek": 336616, "start": 3386.24, "end": 3387.24, "text": " Right, Jeremy?", "tokens": [1779, 11, 17809, 30], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1374, "seek": 336616, "start": 3387.24, "end": 3388.52, "text": " Too much self in Python.", "tokens": [11395, 709, 2698, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1375, "seek": 336616, "start": 3388.52, "end": 3389.52, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1376, "seek": 336616, "start": 3389.52, "end": 3391.3599999999997, "text": " And now one of the other things you may wonder about is,", "tokens": [400, 586, 472, 295, 264, 661, 721, 291, 815, 2441, 466, 307, 11], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1377, "seek": 336616, "start": 3391.3599999999997, "end": 3394.04, "text": " why do we need this where element is numeric?", "tokens": [983, 360, 321, 643, 341, 689, 4478, 307, 7866, 299, 30], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1378, "seek": 336616, "start": 3394.04, "end": 3395.7599999999998, "text": " And what this is talking about is it's saying,", "tokens": [400, 437, 341, 307, 1417, 466, 307, 309, 311, 1566, 11], "temperature": 0.0, "avg_logprob": -0.16745191495094072, "compression_ratio": 1.7619047619047619, "no_speech_prob": 2.9478139822458616e-06}, {"id": 1379, "seek": 339576, "start": 3395.76, "end": 3397.84, "text": " well, we're taking all the elements out of this thing", "tokens": [731, 11, 321, 434, 1940, 439, 264, 4959, 484, 295, 341, 551], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1380, "seek": 339576, "start": 3397.84, "end": 3399.28, "text": " and multiplying it by 2.", "tokens": [293, 30955, 309, 538, 568, 13], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1381, "seek": 339576, "start": 3399.28, "end": 3401.0800000000004, "text": " This is helping us catch errors.", "tokens": [639, 307, 4315, 505, 3745, 13603, 13], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1382, "seek": 339576, "start": 3401.0800000000004, "end": 3404.6000000000004, "text": " So if I have an array of Booleans,", "tokens": [407, 498, 286, 362, 364, 10225, 295, 23351, 24008, 11], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1383, "seek": 339576, "start": 3404.6000000000004, "end": 3406.6800000000003, "text": " I get an error message that says, hey,", "tokens": [286, 483, 364, 6713, 3636, 300, 1619, 11, 4177, 11], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1384, "seek": 339576, "start": 3406.6800000000003, "end": 3409.76, "text": " I can't double all the elements of a Boolean array", "tokens": [286, 393, 380, 3834, 439, 264, 4959, 295, 257, 23351, 28499, 10225], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1385, "seek": 339576, "start": 3409.76, "end": 3412.0, "text": " because bool is not a number.", "tokens": [570, 748, 401, 307, 406, 257, 1230, 13], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1386, "seek": 339576, "start": 3412.0, "end": 3414.0, "text": " And so in Python, what would end up happening", "tokens": [400, 370, 294, 15329, 11, 437, 576, 917, 493, 2737], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1387, "seek": 339576, "start": 3414.0, "end": 3416.28, "text": " is if you accidentally pass the wrong thing in,", "tokens": [307, 498, 291, 15715, 1320, 264, 2085, 551, 294, 11], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1388, "seek": 339576, "start": 3416.28, "end": 3417.8, "text": " you would pass in your bools.", "tokens": [291, 576, 1320, 294, 428, 748, 19385, 13], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1389, "seek": 339576, "start": 3417.8, "end": 3419.28, "text": " And then they'd get multiplied by 2.", "tokens": [400, 550, 436, 1116, 483, 17207, 538, 568, 13], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1390, "seek": 339576, "start": 3419.28, "end": 3421.8, "text": " And then sometime in a far distant API call,", "tokens": [400, 550, 15053, 294, 257, 1400, 17275, 9362, 818, 11], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1391, "seek": 339576, "start": 3421.8, "end": 3425.5200000000004, "text": " somewhere later you find out you have 2s in your Booleans.", "tokens": [4079, 1780, 291, 915, 484, 291, 362, 568, 82, 294, 428, 23351, 24008, 13], "temperature": 0.0, "avg_logprob": -0.11819730486188616, "compression_ratio": 1.7524752475247525, "no_speech_prob": 1.473699558118824e-05}, {"id": 1392, "seek": 342552, "start": 3425.52, "end": 3426.64, "text": " Like what just happened?", "tokens": [1743, 437, 445, 2011, 30], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1393, "seek": 342552, "start": 3426.64, "end": 3428.2, "text": " And so Swift helps catch these errors early.", "tokens": [400, 370, 25539, 3665, 3745, 613, 13603, 2440, 13], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1394, "seek": 342552, "start": 3428.2, "end": 3429.56, "text": " And talking of what just happened,", "tokens": [400, 1417, 295, 437, 445, 2011, 11], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1395, "seek": 342552, "start": 3429.56, "end": 3432.08, "text": " this is the point where if you've used a few languages", "tokens": [341, 307, 264, 935, 689, 498, 291, 600, 1143, 257, 1326, 8650], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1396, "seek": 342552, "start": 3432.08, "end": 3435.16, "text": " before, you're thinking, oh, Swift is actually", "tokens": [949, 11, 291, 434, 1953, 11, 1954, 11, 25539, 307, 767], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1397, "seek": 342552, "start": 3435.16, "end": 3437.36, "text": " pretty different in a pretty interesting way.", "tokens": [1238, 819, 294, 257, 1238, 1880, 636, 13], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1398, "seek": 342552, "start": 3437.36, "end": 3439.12, "text": " Because look what we've just done.", "tokens": [1436, 574, 437, 321, 600, 445, 1096, 13], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1399, "seek": 342552, "start": 3439.12, "end": 3443.16, "text": " We've just said, here is some functionality", "tokens": [492, 600, 445, 848, 11, 510, 307, 512, 14980], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1400, "seek": 342552, "start": 3443.16, "end": 3448.04, "text": " which applies to some type which has some particular", "tokens": [597, 13165, 281, 512, 2010, 597, 575, 512, 1729], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1401, "seek": 342552, "start": 3448.04, "end": 3449.56, "text": " properties to it.", "tokens": [7221, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1402, "seek": 342552, "start": 3449.56, "end": 3452.56, "text": " So we've defined functionality in a way", "tokens": [407, 321, 600, 7642, 14980, 294, 257, 636], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1403, "seek": 342552, "start": 3452.56, "end": 3455.0, "text": " that's going to be looked up in this really nuanced", "tokens": [300, 311, 516, 281, 312, 2956, 493, 294, 341, 534, 45115], "temperature": 0.0, "avg_logprob": -0.15116708109697957, "compression_ratio": 1.7394366197183098, "no_speech_prob": 2.9769533284706995e-05}, {"id": 1404, "seek": 345500, "start": 3455.0, "end": 3456.04, "text": " and interesting way.", "tokens": [293, 1880, 636, 13], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1405, "seek": 345500, "start": 3456.04, "end": 3457.96, "text": " And so we're not going to go into the details now,", "tokens": [400, 370, 321, 434, 406, 516, 281, 352, 666, 264, 4365, 586, 11], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1406, "seek": 345500, "start": 3457.96, "end": 3461.44, "text": " but just take a look at this after the lesson", "tokens": [457, 445, 747, 257, 574, 412, 341, 934, 264, 6898], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1407, "seek": 345500, "start": 3461.44, "end": 3463.84, "text": " and think, wow, what's going on here?", "tokens": [293, 519, 11, 6076, 11, 437, 311, 516, 322, 510, 30], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1408, "seek": 345500, "start": 3463.84, "end": 3466.6, "text": " Because this is something really interesting.", "tokens": [1436, 341, 307, 746, 534, 1880, 13], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1409, "seek": 345500, "start": 3466.6, "end": 3467.96, "text": " And again, one of the cool things about this", "tokens": [400, 797, 11, 472, 295, 264, 1627, 721, 466, 341], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1410, "seek": 345500, "start": 3467.96, "end": 3469.52, "text": " is because it's all built in the library,", "tokens": [307, 570, 309, 311, 439, 3094, 294, 264, 6405, 11], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1411, "seek": 345500, "start": 3469.52, "end": 3470.72, "text": " it's all open to you.", "tokens": [309, 311, 439, 1269, 281, 291, 13], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1412, "seek": 345500, "start": 3470.72, "end": 3473.0, "text": " And you can do cool things like add methods", "tokens": [400, 291, 393, 360, 1627, 721, 411, 909, 7150], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1413, "seek": 345500, "start": 3473.0, "end": 3474.12, "text": " or do other things.", "tokens": [420, 360, 661, 721, 13], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1414, "seek": 345500, "start": 3474.12, "end": 3477.6, "text": " So I'm not going to go into the full details of array.", "tokens": [407, 286, 478, 406, 516, 281, 352, 666, 264, 1577, 4365, 295, 10225, 13], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1415, "seek": 345500, "start": 3477.6, "end": 3480.96, "text": " Array is implemented right here in array.swift.", "tokens": [1587, 3458, 307, 12270, 558, 510, 294, 10225, 13, 25884, 2008, 13], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1416, "seek": 345500, "start": 3480.96, "end": 3482.08, "text": " This is the standard library.", "tokens": [639, 307, 264, 3832, 6405, 13], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1417, "seek": 345500, "start": 3482.08, "end": 3483.92, "text": " Array is a struct.", "tokens": [1587, 3458, 307, 257, 6594, 13], "temperature": 0.0, "avg_logprob": -0.11710721796209161, "compression_ratio": 1.8652482269503545, "no_speech_prob": 1.983034235308878e-05}, {"id": 1418, "seek": 348392, "start": 3483.92, "end": 3487.08, "text": " It has a buffer inside of it, the elements.", "tokens": [467, 575, 257, 21762, 1854, 295, 309, 11, 264, 4959, 13], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1419, "seek": 348392, "start": 3487.08, "end": 3489.48, "text": " You can go through and you can see all the different", "tokens": [509, 393, 352, 807, 293, 291, 393, 536, 439, 264, 819], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1420, "seek": 348392, "start": 3489.48, "end": 3492.16, "text": " gory details of things that go into array.", "tokens": [290, 827, 4365, 295, 721, 300, 352, 666, 10225, 13], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1421, "seek": 348392, "start": 3492.16, "end": 3493.96, "text": " And instead of coding this in workbook,", "tokens": [400, 2602, 295, 17720, 341, 294, 589, 2939, 11], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1422, "seek": 348392, "start": 3493.96, "end": 3495.76, "text": " I think that we will just consider it", "tokens": [286, 519, 300, 321, 486, 445, 1949, 309], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1423, "seek": 348392, "start": 3495.76, "end": 3496.88, "text": " that we implemented this.", "tokens": [300, 321, 12270, 341, 13], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1424, "seek": 348392, "start": 3496.88, "end": 3497.8, "text": " Is that okay with you, Jeremy?", "tokens": [1119, 300, 1392, 365, 291, 11, 17809, 30], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1425, "seek": 348392, "start": 3497.8, "end": 3498.64, "text": " Absolutely.", "tokens": [7021, 13], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1426, "seek": 348392, "start": 3498.64, "end": 3500.12, "text": " Okay, so now we can use arrays.", "tokens": [1033, 11, 370, 586, 321, 393, 764, 41011, 13], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1427, "seek": 348392, "start": 3501.2400000000002, "end": 3503.8, "text": " Okay, so let's move on to Matmul.", "tokens": [1033, 11, 370, 718, 311, 1286, 322, 281, 6789, 76, 425, 13], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1428, "seek": 348392, "start": 3503.8, "end": 3506.32, "text": " Okay, so what I'm going to suggest is we might be", "tokens": [1033, 11, 370, 437, 286, 478, 516, 281, 3402, 307, 321, 1062, 312], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1429, "seek": 348392, "start": 3506.32, "end": 3508.0, "text": " a good time to take a break.", "tokens": [257, 665, 565, 281, 747, 257, 1821, 13], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1430, "seek": 348392, "start": 3508.0, "end": 3509.4, "text": " So let's take a six minute break", "tokens": [407, 718, 311, 747, 257, 2309, 3456, 1821], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1431, "seek": 348392, "start": 3509.4, "end": 3512.4, "text": " and we'll see you back here at 6.47.", "tokens": [293, 321, 603, 536, 291, 646, 510, 412, 1386, 13, 14060, 13], "temperature": 0.0, "avg_logprob": -0.13243052898309168, "compression_ratio": 1.6812080536912752, "no_speech_prob": 4.156962859269697e-06}, {"id": 1432, "seek": 351240, "start": 3512.4, "end": 3516.2000000000003, "text": " Now that we've invented Swift and float and array,", "tokens": [823, 300, 321, 600, 14479, 25539, 293, 15706, 293, 10225, 11], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1433, "seek": 351240, "start": 3516.2000000000003, "end": 3518.44, "text": " we will actually implement matrix multiplication.", "tokens": [321, 486, 767, 4445, 8141, 27290, 13], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1434, "seek": 351240, "start": 3518.44, "end": 3520.36, "text": " So we'll see you back here at 7.47.", "tokens": [407, 321, 603, 536, 291, 646, 510, 412, 1614, 13, 14060, 13], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1435, "seek": 351240, "start": 3521.4, "end": 3524.0, "text": " Okay, any questions before we keep going, Rachel?", "tokens": [1033, 11, 604, 1651, 949, 321, 1066, 516, 11, 14246, 30], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1436, "seek": 351240, "start": 3524.0, "end": 3526.0, "text": " Yes, we have two questions.", "tokens": [1079, 11, 321, 362, 732, 1651, 13], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1437, "seek": 351240, "start": 3526.0, "end": 3529.76, "text": " The first is that in keyword is very unintuitive", "tokens": [440, 700, 307, 300, 294, 20428, 307, 588, 29466, 48314], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1438, "seek": 351240, "start": 3529.76, "end": 3531.48, "text": " for arg and arg plus 10.", "tokens": [337, 3882, 293, 3882, 1804, 1266, 13], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1439, "seek": 351240, "start": 3531.48, "end": 3532.32, "text": " In closures, yeah.", "tokens": [682, 2611, 1303, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1440, "seek": 351240, "start": 3532.32, "end": 3533.92, "text": " Oh, can we point at that?", "tokens": [876, 11, 393, 321, 935, 412, 300, 30], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1441, "seek": 351240, "start": 3533.92, "end": 3536.0, "text": " So yeah, the in keyword.", "tokens": [407, 1338, 11, 264, 294, 20428, 13], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1442, "seek": 351240, "start": 3536.92, "end": 3537.76, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1443, "seek": 351240, "start": 3539.44, "end": 3540.84, "text": " Up here, in.", "tokens": [5858, 510, 11, 294, 13], "temperature": 0.0, "avg_logprob": -0.19784981863839285, "compression_ratio": 1.508, "no_speech_prob": 4.003709545941092e-05}, {"id": 1444, "seek": 354084, "start": 3540.84, "end": 3541.6800000000003, "text": " Yep.", "tokens": [7010, 13], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1445, "seek": 354084, "start": 3542.6800000000003, "end": 3544.28, "text": " So that's the question, why is it so weird?", "tokens": [407, 300, 311, 264, 1168, 11, 983, 307, 309, 370, 3657, 30], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1446, "seek": 354084, "start": 3544.28, "end": 3546.44, "text": " Why is arg in arg plus 10?", "tokens": [1545, 307, 3882, 294, 3882, 1804, 1266, 30], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1447, "seek": 354084, "start": 3546.44, "end": 3550.36, "text": " Yeah, so we carefully considered the name of this keyword", "tokens": [865, 11, 370, 321, 7500, 4888, 264, 1315, 295, 341, 20428], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1448, "seek": 354084, "start": 3550.36, "end": 3551.7200000000003, "text": " and we didn't have anything better to use,", "tokens": [293, 321, 994, 380, 362, 1340, 1101, 281, 764, 11], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1449, "seek": 354084, "start": 3551.7200000000003, "end": 3552.96, "text": " so we got stuck with this.", "tokens": [370, 321, 658, 5541, 365, 341, 13], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1450, "seek": 354084, "start": 3552.96, "end": 3557.96, "text": " In Python, I guess that would be a colon.", "tokens": [682, 15329, 11, 286, 2041, 300, 576, 312, 257, 8255, 13], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1451, "seek": 354084, "start": 3558.04, "end": 3561.2400000000002, "text": " Yeah, so there's no good answer.", "tokens": [865, 11, 370, 456, 311, 572, 665, 1867, 13], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1452, "seek": 354084, "start": 3561.2400000000002, "end": 3563.1600000000003, "text": " Nobody knows what it means.", "tokens": [9297, 3255, 437, 309, 1355, 13], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1453, "seek": 354084, "start": 3563.1600000000003, "end": 3566.56, "text": " There's historical reasons, but they're not good reasons.", "tokens": [821, 311, 8584, 4112, 11, 457, 436, 434, 406, 665, 4112, 13], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1454, "seek": 354084, "start": 3566.56, "end": 3567.4, "text": " So we just do it and it's.", "tokens": [407, 321, 445, 360, 309, 293, 309, 311, 13], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1455, "seek": 354084, "start": 3567.4, "end": 3569.6800000000003, "text": " So the answer is because Chris says so.", "tokens": [407, 264, 1867, 307, 570, 6688, 1619, 370, 13], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1456, "seek": 354084, "start": 3569.6800000000003, "end": 3570.52, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2719450557933134, "compression_ratio": 1.5833333333333333, "no_speech_prob": 5.681588845618535e-06}, {"id": 1457, "seek": 357052, "start": 3570.52, "end": 3572.08, "text": " Thanks for your honesty.", "tokens": [2561, 337, 428, 26839, 13], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1458, "seek": 357052, "start": 3572.08, "end": 3572.96, "text": " Why do we use colon?", "tokens": [1545, 360, 321, 764, 8255, 30], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1459, "seek": 357052, "start": 3572.96, "end": 3574.6, "text": " Well, that's what Python says.", "tokens": [1042, 11, 300, 311, 437, 15329, 1619, 13], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1460, "seek": 357052, "start": 3575.52, "end": 3576.44, "text": " And the second question,", "tokens": [400, 264, 1150, 1168, 11], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1461, "seek": 357052, "start": 3576.44, "end": 3580.84, "text": " can Swift LLVM implement instructions to execute on the GPU?", "tokens": [393, 25539, 441, 43, 53, 44, 4445, 9415, 281, 14483, 322, 264, 18407, 30], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1462, "seek": 357052, "start": 3580.84, "end": 3582.08, "text": " Would this be a good idea?", "tokens": [6068, 341, 312, 257, 665, 1558, 30], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1463, "seek": 357052, "start": 3582.08, "end": 3583.7599999999998, "text": " Yeah, this is a really exciting direction.", "tokens": [865, 11, 341, 307, 257, 534, 4670, 3513, 13], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1464, "seek": 357052, "start": 3583.7599999999998, "end": 3585.28, "text": " This is one of the things we're investing a lot", "tokens": [639, 307, 472, 295, 264, 721, 321, 434, 10978, 257, 688], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1465, "seek": 357052, "start": 3585.28, "end": 3587.36, "text": " in TensorFlow and the infrastructure pieces,", "tokens": [294, 37624, 293, 264, 6896, 3755, 11], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1466, "seek": 357052, "start": 3587.36, "end": 3589.72, "text": " and we'll be talking about that a little bit next time.", "tokens": [293, 321, 603, 312, 1417, 466, 300, 257, 707, 857, 958, 565, 13], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1467, "seek": 357052, "start": 3589.72, "end": 3592.68, "text": " Yeah, but I mean, the short answer is that LLVM", "tokens": [865, 11, 457, 286, 914, 11, 264, 2099, 1867, 307, 300, 441, 43, 53, 44], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1468, "seek": 357052, "start": 3592.68, "end": 3594.16, "text": " has a number of backends.", "tokens": [575, 257, 1230, 295, 646, 2581, 13], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1469, "seek": 357052, "start": 3594.16, "end": 3595.0, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1470, "seek": 357052, "start": 3595.0, "end": 3597.8, "text": " And one of the backends it has is a PTX backend,", "tokens": [400, 472, 295, 264, 646, 2581, 309, 575, 307, 257, 35460, 55, 38087, 11], "temperature": 0.0, "avg_logprob": -0.11716468661439185, "compression_ratio": 1.6261980830670926, "no_speech_prob": 1.0952425327559467e-05}, {"id": 1471, "seek": 359780, "start": 3597.8, "end": 3601.96, "text": " which is the lower level Nvidia kind of instruction set.", "tokens": [597, 307, 264, 3126, 1496, 46284, 733, 295, 10951, 992, 13], "temperature": 0.0, "avg_logprob": -0.1527140547589558, "compression_ratio": 1.544, "no_speech_prob": 9.367398888571188e-06}, {"id": 1472, "seek": 359780, "start": 3601.96, "end": 3604.7200000000003, "text": " And so like right now you can compile stuff with LLVM", "tokens": [400, 370, 411, 558, 586, 291, 393, 31413, 1507, 365, 441, 43, 53, 44], "temperature": 0.0, "avg_logprob": -0.1527140547589558, "compression_ratio": 1.544, "no_speech_prob": 9.367398888571188e-06}, {"id": 1473, "seek": 359780, "start": 3604.7200000000003, "end": 3606.92, "text": " and have it run as CUDA kernels.", "tokens": [293, 362, 309, 1190, 382, 29777, 7509, 23434, 1625, 13], "temperature": 0.0, "avg_logprob": -0.1527140547589558, "compression_ratio": 1.544, "no_speech_prob": 9.367398888571188e-06}, {"id": 1474, "seek": 359780, "start": 3606.92, "end": 3607.76, "text": " Yep.", "tokens": [7010, 13], "temperature": 0.0, "avg_logprob": -0.1527140547589558, "compression_ratio": 1.544, "no_speech_prob": 9.367398888571188e-06}, {"id": 1475, "seek": 359780, "start": 3607.76, "end": 3608.6000000000004, "text": " So the answer is yes, absolutely.", "tokens": [407, 264, 1867, 307, 2086, 11, 3122, 13], "temperature": 0.0, "avg_logprob": -0.1527140547589558, "compression_ratio": 1.544, "no_speech_prob": 9.367398888571188e-06}, {"id": 1476, "seek": 359780, "start": 3608.6000000000004, "end": 3611.1600000000003, "text": " Yeah, and in fact, like every pixel on the iPhone", "tokens": [865, 11, 293, 294, 1186, 11, 411, 633, 19261, 322, 264, 7252], "temperature": 0.0, "avg_logprob": -0.1527140547589558, "compression_ratio": 1.544, "no_speech_prob": 9.367398888571188e-06}, {"id": 1477, "seek": 359780, "start": 3611.1600000000003, "end": 3616.1600000000003, "text": " goes through LLVM, not through Swift in a workbook.", "tokens": [1709, 807, 441, 43, 53, 44, 11, 406, 807, 25539, 294, 257, 589, 2939, 13], "temperature": 0.0, "avg_logprob": -0.1527140547589558, "compression_ratio": 1.544, "no_speech_prob": 9.367398888571188e-06}, {"id": 1478, "seek": 359780, "start": 3616.1600000000003, "end": 3617.4, "text": " That's not bad.", "tokens": [663, 311, 406, 1578, 13], "temperature": 0.0, "avg_logprob": -0.1527140547589558, "compression_ratio": 1.544, "no_speech_prob": 9.367398888571188e-06}, {"id": 1479, "seek": 359780, "start": 3617.4, "end": 3620.76, "text": " Yeah, so LLVM is used for lots of cool stuff", "tokens": [865, 11, 370, 441, 43, 53, 44, 307, 1143, 337, 3195, 295, 1627, 1507], "temperature": 0.0, "avg_logprob": -0.1527140547589558, "compression_ratio": 1.544, "no_speech_prob": 9.367398888571188e-06}, {"id": 1480, "seek": 359780, "start": 3620.76, "end": 3623.48, "text": " and using it for more cool stuff is fun.", "tokens": [293, 1228, 309, 337, 544, 1627, 1507, 307, 1019, 13], "temperature": 0.0, "avg_logprob": -0.1527140547589558, "compression_ratio": 1.544, "no_speech_prob": 9.367398888571188e-06}, {"id": 1481, "seek": 362348, "start": 3623.48, "end": 3628.4, "text": " So now that we have our bedrock of floats and arrays,", "tokens": [407, 586, 300, 321, 362, 527, 2901, 17799, 295, 37878, 293, 41011, 11], "temperature": 0.0, "avg_logprob": -0.1306059457422272, "compression_ratio": 1.7259259259259259, "no_speech_prob": 5.50710819879896e-06}, {"id": 1482, "seek": 362348, "start": 3628.4, "end": 3629.76, "text": " let's build something a little bit higher level.", "tokens": [718, 311, 1322, 746, 257, 707, 857, 2946, 1496, 13], "temperature": 0.0, "avg_logprob": -0.1306059457422272, "compression_ratio": 1.7259259259259259, "no_speech_prob": 5.50710819879896e-06}, {"id": 1483, "seek": 362348, "start": 3629.76, "end": 3632.64, "text": " Let's talk about matrix multiplication.", "tokens": [961, 311, 751, 466, 8141, 27290, 13], "temperature": 0.0, "avg_logprob": -0.1306059457422272, "compression_ratio": 1.7259259259259259, "no_speech_prob": 5.50710819879896e-06}, {"id": 1484, "seek": 362348, "start": 3632.64, "end": 3636.36, "text": " So here what we're gonna do is we're actually gonna", "tokens": [407, 510, 437, 321, 434, 799, 360, 307, 321, 434, 767, 799], "temperature": 0.0, "avg_logprob": -0.1306059457422272, "compression_ratio": 1.7259259259259259, "no_speech_prob": 5.50710819879896e-06}, {"id": 1485, "seek": 362348, "start": 3636.36, "end": 3638.72, "text": " load up a few tensors, and here we're playing", "tokens": [3677, 493, 257, 1326, 10688, 830, 11, 293, 510, 321, 434, 2433], "temperature": 0.0, "avg_logprob": -0.1306059457422272, "compression_ratio": 1.7259259259259259, "no_speech_prob": 5.50710819879896e-06}, {"id": 1486, "seek": 362348, "start": 3638.72, "end": 3641.48, "text": " by the same rules that we played with in Python", "tokens": [538, 264, 912, 4474, 300, 321, 3737, 365, 294, 15329], "temperature": 0.0, "avg_logprob": -0.1306059457422272, "compression_ratio": 1.7259259259259259, "no_speech_prob": 5.50710819879896e-06}, {"id": 1487, "seek": 362348, "start": 3641.48, "end": 3643.48, "text": " where we could use the random number generation", "tokens": [689, 321, 727, 764, 264, 4974, 1230, 5125], "temperature": 0.0, "avg_logprob": -0.1306059457422272, "compression_ratio": 1.7259259259259259, "no_speech_prob": 5.50710819879896e-06}, {"id": 1488, "seek": 362348, "start": 3643.48, "end": 3646.32, "text": " and things like this, but we're not gonna use", "tokens": [293, 721, 411, 341, 11, 457, 321, 434, 406, 799, 764], "temperature": 0.0, "avg_logprob": -0.1306059457422272, "compression_ratio": 1.7259259259259259, "no_speech_prob": 5.50710819879896e-06}, {"id": 1489, "seek": 362348, "start": 3646.32, "end": 3648.6, "text": " the matrix multiplication operator quite yet.", "tokens": [264, 8141, 27290, 12973, 1596, 1939, 13], "temperature": 0.0, "avg_logprob": -0.1306059457422272, "compression_ratio": 1.7259259259259259, "no_speech_prob": 5.50710819879896e-06}, {"id": 1490, "seek": 362348, "start": 3650.76, "end": 3652.56, "text": " So there's lots of ways, there we go,", "tokens": [407, 456, 311, 3195, 295, 2098, 11, 456, 321, 352, 11], "temperature": 0.0, "avg_logprob": -0.1306059457422272, "compression_ratio": 1.7259259259259259, "no_speech_prob": 5.50710819879896e-06}, {"id": 1491, "seek": 365256, "start": 3652.56, "end": 3655.32, "text": " there's lots of ways to create tensors in Swift", "tokens": [456, 311, 3195, 295, 2098, 281, 1884, 10688, 830, 294, 25539], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1492, "seek": 365256, "start": 3655.32, "end": 3658.24, "text": " for TensorFlow, it has this tensor type,", "tokens": [337, 37624, 11, 309, 575, 341, 40863, 2010, 11], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1493, "seek": 365256, "start": 3658.24, "end": 3660.2799999999997, "text": " this little float thing we wanna go away eventually,", "tokens": [341, 707, 15706, 551, 321, 1948, 352, 1314, 4728, 11], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1494, "seek": 365256, "start": 3660.2799999999997, "end": 3662.72, "text": " we hope, but right now you say tensor of float", "tokens": [321, 1454, 11, 457, 558, 586, 291, 584, 40863, 295, 15706], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1495, "seek": 365256, "start": 3662.72, "end": 3665.32, "text": " to say that I want a tensor of floats.", "tokens": [281, 584, 300, 286, 528, 257, 40863, 295, 37878, 13], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1496, "seek": 365256, "start": 3665.32, "end": 3667.32, "text": " Use a shape, you can get zeros, ones,", "tokens": [8278, 257, 3909, 11, 291, 393, 483, 35193, 11, 2306, 11], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1497, "seek": 365256, "start": 3667.32, "end": 3669.2799999999997, "text": " you can repeat a thing, you can get random,", "tokens": [291, 393, 7149, 257, 551, 11, 291, 393, 483, 4974, 11], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1498, "seek": 365256, "start": 3669.2799999999997, "end": 3671.84, "text": " there's lots of different things you can play with.", "tokens": [456, 311, 3195, 295, 819, 721, 291, 393, 862, 365, 13], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1499, "seek": 365256, "start": 3671.84, "end": 3674.7599999999998, "text": " I highly recommend you type tab in Jupyter", "tokens": [286, 5405, 2748, 291, 2010, 4421, 294, 22125, 88, 391], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1500, "seek": 365256, "start": 3674.7599999999998, "end": 3677.0, "text": " and it will tell you all the things that you can do", "tokens": [293, 309, 486, 980, 291, 439, 264, 721, 300, 291, 393, 360], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1501, "seek": 365256, "start": 3677.0, "end": 3678.16, "text": " with completion.", "tokens": [365, 19372, 13], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1502, "seek": 365256, "start": 3678.16, "end": 3679.68, "text": " So let's build a matrix multiply.", "tokens": [407, 718, 311, 1322, 257, 8141, 12972, 13], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1503, "seek": 365256, "start": 3679.68, "end": 3681.48, "text": " So here what we're doing is we're doing something", "tokens": [407, 510, 437, 321, 434, 884, 307, 321, 434, 884, 746], "temperature": 0.0, "avg_logprob": -0.09985631551498021, "compression_ratio": 1.8443708609271523, "no_speech_prob": 2.4679711714270525e-05}, {"id": 1504, "seek": 368148, "start": 3681.48, "end": 3683.72, "text": " kind of similar to what Jeremy did", "tokens": [733, 295, 2531, 281, 437, 17809, 630], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1505, "seek": 368148, "start": 3683.72, "end": 3685.44, "text": " in the Python version of this,", "tokens": [294, 264, 15329, 3037, 295, 341, 11], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1506, "seek": 368148, "start": 3685.44, "end": 3687.36, "text": " but here we're starting a little bit lower level.", "tokens": [457, 510, 321, 434, 2891, 257, 707, 857, 3126, 1496, 13], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1507, "seek": 368148, "start": 3687.36, "end": 3689.16, "text": " We only have one dimensional arrays,", "tokens": [492, 787, 362, 472, 18795, 41011, 11], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1508, "seek": 368148, "start": 3689.16, "end": 3691.56, "text": " that's how the Swift array works.", "tokens": [300, 311, 577, 264, 25539, 10225, 1985, 13], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1509, "seek": 368148, "start": 3691.56, "end": 3693.96, "text": " And so what we need to do is we need to pass in two arrays", "tokens": [400, 370, 437, 321, 643, 281, 360, 307, 321, 643, 281, 1320, 294, 732, 41011], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1510, "seek": 368148, "start": 3693.96, "end": 3696.44, "text": " of floats and then we're doing a two dimensional", "tokens": [295, 37878, 293, 550, 321, 434, 884, 257, 732, 18795], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1511, "seek": 368148, "start": 3696.44, "end": 3698.56, "text": " matrix multiplication so we need to know the number of rows", "tokens": [8141, 27290, 370, 321, 643, 281, 458, 264, 1230, 295, 13241], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1512, "seek": 368148, "start": 3698.56, "end": 3700.48, "text": " and number of columns for A and B.", "tokens": [293, 1230, 295, 13766, 337, 316, 293, 363, 13], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1513, "seek": 368148, "start": 3700.48, "end": 3703.0, "text": " So that's a definition of a tuple parameter, Chris?", "tokens": [407, 300, 311, 257, 7123, 295, 257, 2604, 781, 13075, 11, 6688, 30], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1514, "seek": 368148, "start": 3703.0, "end": 3703.84, "text": " Yep.", "tokens": [7010, 13], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1515, "seek": 368148, "start": 3703.84, "end": 3704.92, "text": " So they're two ints.", "tokens": [407, 436, 434, 732, 560, 82, 13], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1516, "seek": 368148, "start": 3704.92, "end": 3708.08, "text": " Yep, so A dims is two ints and B dims is two ints.", "tokens": [7010, 11, 370, 316, 5013, 82, 307, 732, 560, 82, 293, 363, 5013, 82, 307, 732, 560, 82, 13], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1517, "seek": 368148, "start": 3708.08, "end": 3710.88, "text": " And so what we do is we create an array full of zeros", "tokens": [400, 370, 437, 321, 360, 307, 321, 1884, 364, 10225, 1577, 295, 35193], "temperature": 0.0, "avg_logprob": -0.11465354784000555, "compression_ratio": 1.8392282958199357, "no_speech_prob": 2.0783147192560136e-05}, {"id": 1518, "seek": 371088, "start": 3710.88, "end": 3713.08, "text": " and then we write the same three loops you saw before", "tokens": [293, 550, 321, 2464, 264, 912, 1045, 16121, 291, 1866, 949], "temperature": 0.0, "avg_logprob": -0.12085450849225444, "compression_ratio": 1.7427385892116183, "no_speech_prob": 3.478252256172709e-05}, {"id": 1519, "seek": 371088, "start": 3713.08, "end": 3715.36, "text": " and because we have a one dimensional array,", "tokens": [293, 570, 321, 362, 257, 472, 18795, 10225, 11], "temperature": 0.0, "avg_logprob": -0.12085450849225444, "compression_ratio": 1.7427385892116183, "no_speech_prob": 3.478252256172709e-05}, {"id": 1520, "seek": 371088, "start": 3715.36, "end": 3719.92, "text": " we have to do manual arithmetic to get into it.", "tokens": [321, 362, 281, 360, 9688, 42973, 281, 483, 666, 309, 13], "temperature": 0.0, "avg_logprob": -0.12085450849225444, "compression_ratio": 1.7427385892116183, "no_speech_prob": 3.478252256172709e-05}, {"id": 1521, "seek": 371088, "start": 3719.92, "end": 3722.2400000000002, "text": " Now, one of the things that you'll see is like,", "tokens": [823, 11, 472, 295, 264, 721, 300, 291, 603, 536, 307, 411, 11], "temperature": 0.0, "avg_logprob": -0.12085450849225444, "compression_ratio": 1.7427385892116183, "no_speech_prob": 3.478252256172709e-05}, {"id": 1522, "seek": 371088, "start": 3722.2400000000002, "end": 3725.32, "text": " if you actually try this out and you run this,", "tokens": [498, 291, 767, 853, 341, 484, 293, 291, 1190, 341, 11], "temperature": 0.0, "avg_logprob": -0.12085450849225444, "compression_ratio": 1.7427385892116183, "no_speech_prob": 3.478252256172709e-05}, {"id": 1523, "seek": 371088, "start": 3725.32, "end": 3726.84, "text": " I didn't actually run the cell,", "tokens": [286, 994, 380, 767, 1190, 264, 2815, 11], "temperature": 0.0, "avg_logprob": -0.12085450849225444, "compression_ratio": 1.7427385892116183, "no_speech_prob": 3.478252256172709e-05}, {"id": 1524, "seek": 371088, "start": 3726.84, "end": 3730.6, "text": " this is why you say don't do things and I don't listen", "tokens": [341, 307, 983, 291, 584, 500, 380, 360, 721, 293, 286, 500, 380, 2140], "temperature": 0.0, "avg_logprob": -0.12085450849225444, "compression_ratio": 1.7427385892116183, "no_speech_prob": 3.478252256172709e-05}, {"id": 1525, "seek": 371088, "start": 3730.6, "end": 3732.7200000000003, "text": " and then I make a fool out of myself.", "tokens": [293, 550, 286, 652, 257, 7979, 484, 295, 2059, 13], "temperature": 0.0, "avg_logprob": -0.12085450849225444, "compression_ratio": 1.7427385892116183, "no_speech_prob": 3.478252256172709e-05}, {"id": 1526, "seek": 371088, "start": 3734.44, "end": 3736.7200000000003, "text": " Okay, so then you run this,", "tokens": [1033, 11, 370, 550, 291, 1190, 341, 11], "temperature": 0.0, "avg_logprob": -0.12085450849225444, "compression_ratio": 1.7427385892116183, "no_speech_prob": 3.478252256172709e-05}, {"id": 1527, "seek": 371088, "start": 3736.7200000000003, "end": 3738.2400000000002, "text": " you get the tensors here,", "tokens": [291, 483, 264, 10688, 830, 510, 11], "temperature": 0.0, "avg_logprob": -0.12085450849225444, "compression_ratio": 1.7427385892116183, "no_speech_prob": 3.478252256172709e-05}, {"id": 1528, "seek": 373824, "start": 3738.24, "end": 3741.8799999999997, "text": " we're just using the MNIST data set because it's fun to use.", "tokens": [321, 434, 445, 1228, 264, 376, 45, 19756, 1412, 992, 570, 309, 311, 1019, 281, 764, 13], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1529, "seek": 373824, "start": 3741.8799999999997, "end": 3743.7999999999997, "text": " Now we can run this and we can time it", "tokens": [823, 321, 393, 1190, 341, 293, 321, 393, 565, 309], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1530, "seek": 373824, "start": 3743.7999999999997, "end": 3745.12, "text": " and one of the major differences you'll see", "tokens": [293, 472, 295, 264, 2563, 7300, 291, 603, 536], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1531, "seek": 373824, "start": 3745.12, "end": 3750.12, "text": " is we just wrote three loops and it takes.132 milliseconds.", "tokens": [307, 321, 445, 4114, 1045, 16121, 293, 309, 2516, 2411, 7668, 17, 34184, 13], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1532, "seek": 373824, "start": 3750.3199999999997, "end": 3753.2, "text": " The Python version of this took 835 milliseconds.", "tokens": [440, 15329, 3037, 295, 341, 1890, 1649, 8794, 34184, 13], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1533, "seek": 373824, "start": 3753.2, "end": 3754.04, "text": " Just have a look.", "tokens": [1449, 362, 257, 574, 13], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1534, "seek": 373824, "start": 3755.72, "end": 3757.0, "text": " So Chris, I just wanted to compare.", "tokens": [407, 6688, 11, 286, 445, 1415, 281, 6794, 13], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1535, "seek": 373824, "start": 3757.0, "end": 3758.72, "text": " So, I mean the first thing I want to compare", "tokens": [407, 11, 286, 914, 264, 700, 551, 286, 528, 281, 6794], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1536, "seek": 373824, "start": 3758.72, "end": 3761.04, "text": " is to look at the code, so that's the Swift code", "tokens": [307, 281, 574, 412, 264, 3089, 11, 370, 300, 311, 264, 25539, 3089], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1537, "seek": 373824, "start": 3761.04, "end": 3763.4399999999996, "text": " and in Python, there's the Python code.", "tokens": [293, 294, 15329, 11, 456, 311, 264, 15329, 3089, 13], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1538, "seek": 373824, "start": 3763.4399999999996, "end": 3766.2, "text": " So it's basically exactly the same code, as you said.", "tokens": [407, 309, 311, 1936, 2293, 264, 912, 3089, 11, 382, 291, 848, 13], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1539, "seek": 373824, "start": 3766.2, "end": 3767.3599999999997, "text": " Here you have two D arrays.", "tokens": [1692, 291, 362, 732, 413, 41011, 13], "temperature": 0.0, "avg_logprob": -0.17249107360839844, "compression_ratio": 1.7091503267973855, "no_speech_prob": 4.133174297749065e-05}, {"id": 1540, "seek": 376736, "start": 3767.36, "end": 3768.7200000000003, "text": " Which we'll get to.", "tokens": [3013, 321, 603, 483, 281, 13], "temperature": 0.0, "avg_logprob": -0.16323582331339517, "compression_ratio": 1.5770750988142292, "no_speech_prob": 4.7571953473379835e-05}, {"id": 1541, "seek": 376736, "start": 3768.7200000000003, "end": 3771.8, "text": " And so, yeah, we kind of found with the Python version,", "tokens": [400, 370, 11, 1338, 11, 321, 733, 295, 1352, 365, 264, 15329, 3037, 11], "temperature": 0.0, "avg_logprob": -0.16323582331339517, "compression_ratio": 1.5770750988142292, "no_speech_prob": 4.7571953473379835e-05}, {"id": 1542, "seek": 376736, "start": 3771.8, "end": 3776.8, "text": " it took about a second to do a five by 784 matrix multiply", "tokens": [309, 1890, 466, 257, 1150, 281, 360, 257, 1732, 538, 1614, 25494, 8141, 12972], "temperature": 0.0, "avg_logprob": -0.16323582331339517, "compression_ratio": 1.5770750988142292, "no_speech_prob": 4.7571953473379835e-05}, {"id": 1543, "seek": 376736, "start": 3777.32, "end": 3778.76, "text": " with a 784 by 10.", "tokens": [365, 257, 1614, 25494, 538, 1266, 13], "temperature": 0.0, "avg_logprob": -0.16323582331339517, "compression_ratio": 1.5770750988142292, "no_speech_prob": 4.7571953473379835e-05}, {"id": 1544, "seek": 376736, "start": 3778.76, "end": 3780.76, "text": " So we kind of did the math and said like,", "tokens": [407, 321, 733, 295, 630, 264, 5221, 293, 848, 411, 11], "temperature": 0.0, "avg_logprob": -0.16323582331339517, "compression_ratio": 1.5770750988142292, "no_speech_prob": 4.7571953473379835e-05}, {"id": 1545, "seek": 376736, "start": 3781.8, "end": 3785.2000000000003, "text": " we can't use this because it's just not fast enough.", "tokens": [321, 393, 380, 764, 341, 570, 309, 311, 445, 406, 2370, 1547, 13], "temperature": 0.0, "avg_logprob": -0.16323582331339517, "compression_ratio": 1.5770750988142292, "no_speech_prob": 4.7571953473379835e-05}, {"id": 1546, "seek": 376736, "start": 3785.2000000000003, "end": 3787.84, "text": " But something very different is going on here", "tokens": [583, 746, 588, 819, 307, 516, 322, 510], "temperature": 0.0, "avg_logprob": -0.16323582331339517, "compression_ratio": 1.5770750988142292, "no_speech_prob": 4.7571953473379835e-05}, {"id": 1547, "seek": 376736, "start": 3787.84, "end": 3792.6400000000003, "text": " because this is about 9,000 times faster.", "tokens": [570, 341, 307, 466, 1722, 11, 1360, 1413, 4663, 13], "temperature": 0.0, "avg_logprob": -0.16323582331339517, "compression_ratio": 1.5770750988142292, "no_speech_prob": 4.7571953473379835e-05}, {"id": 1548, "seek": 376736, "start": 3792.6400000000003, "end": 3795.36, "text": " Yeah, so this is not super fast,", "tokens": [865, 11, 370, 341, 307, 406, 1687, 2370, 11], "temperature": 0.0, "avg_logprob": -0.16323582331339517, "compression_ratio": 1.5770750988142292, "no_speech_prob": 4.7571953473379835e-05}, {"id": 1549, "seek": 376736, "start": 3795.36, "end": 3796.48, "text": " but this is pretty reasonable.", "tokens": [457, 341, 307, 1238, 10585, 13], "temperature": 0.0, "avg_logprob": -0.16323582331339517, "compression_ratio": 1.5770750988142292, "no_speech_prob": 4.7571953473379835e-05}, {"id": 1550, "seek": 379648, "start": 3796.48, "end": 3800.16, "text": " And this is what you get from roughly C, right?", "tokens": [400, 341, 307, 437, 291, 483, 490, 9810, 383, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.12566108703613282, "compression_ratio": 1.8673835125448028, "no_speech_prob": 1.496947788837133e-05}, {"id": 1551, "seek": 379648, "start": 3800.16, "end": 3801.64, "text": " And that's because again, we talked about,", "tokens": [400, 300, 311, 570, 797, 11, 321, 2825, 466, 11], "temperature": 0.0, "avg_logprob": -0.12566108703613282, "compression_ratio": 1.8673835125448028, "no_speech_prob": 1.496947788837133e-05}, {"id": 1552, "seek": 379648, "start": 3801.64, "end": 3804.32, "text": " it's primitives that are principled, that are fast.", "tokens": [309, 311, 2886, 38970, 300, 366, 3681, 15551, 11, 300, 366, 2370, 13], "temperature": 0.0, "avg_logprob": -0.12566108703613282, "compression_ratio": 1.8673835125448028, "no_speech_prob": 1.496947788837133e-05}, {"id": 1553, "seek": 379648, "start": 3804.32, "end": 3807.08, "text": " And when you build things out of principled fast primitives,", "tokens": [400, 562, 291, 1322, 721, 484, 295, 3681, 15551, 2370, 2886, 38970, 11], "temperature": 0.0, "avg_logprob": -0.12566108703613282, "compression_ratio": 1.8673835125448028, "no_speech_prob": 1.496947788837133e-05}, {"id": 1554, "seek": 379648, "start": 3807.08, "end": 3809.44, "text": " you get new things that are principled and fast.", "tokens": [291, 483, 777, 721, 300, 366, 3681, 15551, 293, 2370, 13], "temperature": 0.0, "avg_logprob": -0.12566108703613282, "compression_ratio": 1.8673835125448028, "no_speech_prob": 1.496947788837133e-05}, {"id": 1555, "seek": 379648, "start": 3809.44, "end": 3810.96, "text": " Okay, so this is no big deal for you,", "tokens": [1033, 11, 370, 341, 307, 572, 955, 2028, 337, 291, 11], "temperature": 0.0, "avg_logprob": -0.12566108703613282, "compression_ratio": 1.8673835125448028, "no_speech_prob": 1.496947788837133e-05}, {"id": 1556, "seek": 379648, "start": 3810.96, "end": 3812.2400000000002, "text": " but for a Python programmer,", "tokens": [457, 337, 257, 15329, 32116, 11], "temperature": 0.0, "avg_logprob": -0.12566108703613282, "compression_ratio": 1.8673835125448028, "no_speech_prob": 1.496947788837133e-05}, {"id": 1557, "seek": 379648, "start": 3812.2400000000002, "end": 3814.92, "text": " this is like, this is a whole mind shift change.", "tokens": [341, 307, 411, 11, 341, 307, 257, 1379, 1575, 5513, 1319, 13], "temperature": 0.0, "avg_logprob": -0.12566108703613282, "compression_ratio": 1.8673835125448028, "no_speech_prob": 1.496947788837133e-05}, {"id": 1558, "seek": 379648, "start": 3814.92, "end": 3817.64, "text": " Because at this point, the fact that you can write this", "tokens": [1436, 412, 341, 935, 11, 264, 1186, 300, 291, 393, 2464, 341], "temperature": 0.0, "avg_logprob": -0.12566108703613282, "compression_ratio": 1.8673835125448028, "no_speech_prob": 1.496947788837133e-05}, {"id": 1559, "seek": 379648, "start": 3817.64, "end": 3820.16, "text": " and have it run this fast means like,", "tokens": [293, 362, 309, 1190, 341, 2370, 1355, 411, 11], "temperature": 0.0, "avg_logprob": -0.12566108703613282, "compression_ratio": 1.8673835125448028, "no_speech_prob": 1.496947788837133e-05}, {"id": 1560, "seek": 379648, "start": 3820.16, "end": 3824.64, "text": " I can now write anything I can think of doing with numbers", "tokens": [286, 393, 586, 2464, 1340, 286, 393, 519, 295, 884, 365, 3547], "temperature": 0.0, "avg_logprob": -0.12566108703613282, "compression_ratio": 1.8673835125448028, "no_speech_prob": 1.496947788837133e-05}, {"id": 1561, "seek": 382464, "start": 3824.64, "end": 3827.3599999999997, "text": " in the most obvious way possible", "tokens": [294, 264, 881, 6322, 636, 1944], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1562, "seek": 382464, "start": 3827.3599999999997, "end": 3830.08, "text": " and have it work pretty damn well.", "tokens": [293, 362, 309, 589, 1238, 8151, 731, 13], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1563, "seek": 382464, "start": 3830.08, "end": 3831.6, "text": " So this is kind of like a superpower", "tokens": [407, 341, 307, 733, 295, 411, 257, 45765], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1564, "seek": 382464, "start": 3831.6, "end": 3833.3599999999997, "text": " that Python programmers don't have.", "tokens": [300, 15329, 41504, 500, 380, 362, 13], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1565, "seek": 382464, "start": 3833.3599999999997, "end": 3834.8399999999997, "text": " Well, and if you think about it,", "tokens": [1042, 11, 293, 498, 291, 519, 466, 309, 11], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1566, "seek": 382464, "start": 3834.8399999999997, "end": 3836.48, "text": " so one way to think about it for TensorFlow", "tokens": [370, 472, 636, 281, 519, 466, 309, 337, 37624], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1567, "seek": 382464, "start": 3836.48, "end": 3839.7599999999998, "text": " is we're trying to subtract C and C++ out of the picture, right?", "tokens": [307, 321, 434, 1382, 281, 16390, 383, 293, 383, 25472, 484, 295, 264, 3036, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1568, "seek": 382464, "start": 3839.7599999999998, "end": 3843.2, "text": " Because if you think about working with Python,", "tokens": [1436, 498, 291, 519, 466, 1364, 365, 15329, 11], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1569, "seek": 382464, "start": 3843.2, "end": 3845.64, "text": " a lot of it ends up being, if you care about performance,", "tokens": [257, 688, 295, 309, 5314, 493, 885, 11, 498, 291, 1127, 466, 3389, 11], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1570, "seek": 382464, "start": 3845.64, "end": 3846.64, "text": " working around the gill.", "tokens": [1364, 926, 264, 290, 373, 13], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1571, "seek": 382464, "start": 3846.64, "end": 3847.48, "text": " And how do you do that?", "tokens": [400, 577, 360, 291, 360, 300, 30], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1572, "seek": 382464, "start": 3847.48, "end": 3851.6, "text": " You go on to do C stuff or working around writing,", "tokens": [509, 352, 322, 281, 360, 383, 1507, 420, 1364, 926, 3579, 11], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1573, "seek": 382464, "start": 3851.6, "end": 3853.3599999999997, "text": " oh, I need a new kind of data structure.", "tokens": [1954, 11, 286, 643, 257, 777, 733, 295, 1412, 3877, 13], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1574, "seek": 382464, "start": 3853.3599999999997, "end": 3854.2, "text": " What do I do?", "tokens": [708, 360, 286, 360, 30], "temperature": 0.0, "avg_logprob": -0.11212997195086902, "compression_ratio": 1.702194357366771, "no_speech_prob": 2.9942707442387473e-06}, {"id": 1575, "seek": 385420, "start": 3854.2, "end": 3855.12, "text": " I can write a bunch of stuff in C", "tokens": [286, 393, 2464, 257, 3840, 295, 1507, 294, 383], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1576, "seek": 385420, "start": 3855.12, "end": 3857.48, "text": " because writing in Python wouldn't be fast enough.", "tokens": [570, 3579, 294, 15329, 2759, 380, 312, 2370, 1547, 13], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1577, "seek": 385420, "start": 3857.48, "end": 3859.12, "text": " And that's problematic for lots of reasons,", "tokens": [400, 300, 311, 19011, 337, 3195, 295, 4112, 11], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1578, "seek": 385420, "start": 3859.12, "end": 3860.2, "text": " one of which is it's just really hard", "tokens": [472, 295, 597, 307, 309, 311, 445, 534, 1152], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1579, "seek": 385420, "start": 3860.2, "end": 3862.04, "text": " to do things in workbooks.", "tokens": [281, 360, 721, 294, 589, 15170, 13], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1580, "seek": 385420, "start": 3862.04, "end": 3864.6, "text": " But here, we're implementing basic stuff in workbooks", "tokens": [583, 510, 11, 321, 434, 18114, 3875, 1507, 294, 589, 15170], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1581, "seek": 385420, "start": 3864.6, "end": 3865.6, "text": " and it goes fast.", "tokens": [293, 309, 1709, 2370, 13], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1582, "seek": 385420, "start": 3865.6, "end": 3867.3999999999996, "text": " Yeah, and I can ship something", "tokens": [865, 11, 293, 286, 393, 5374, 746], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1583, "seek": 385420, "start": 3867.3999999999996, "end": 3870.2799999999997, "text": " that's like a compiled program that I just ship it.", "tokens": [300, 311, 411, 257, 36548, 1461, 300, 286, 445, 5374, 309, 13], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1584, "seek": 385420, "start": 3870.2799999999997, "end": 3873.8799999999997, "text": " I don't have to figure out how to put the C library over here", "tokens": [286, 500, 380, 362, 281, 2573, 484, 577, 281, 829, 264, 383, 6405, 670, 510], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1585, "seek": 385420, "start": 3873.8799999999997, "end": 3875.8799999999997, "text": " and compile it and put it together with this header.", "tokens": [293, 31413, 309, 293, 829, 309, 1214, 365, 341, 23117, 13], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1586, "seek": 385420, "start": 3875.8799999999997, "end": 3878.64, "text": " So Jeremy, what is this built-in called time?", "tokens": [407, 17809, 11, 437, 307, 341, 3094, 12, 259, 1219, 565, 30], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1587, "seek": 385420, "start": 3878.64, "end": 3879.8799999999997, "text": " Is that built in a language?", "tokens": [1119, 300, 3094, 294, 257, 2856, 30], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1588, "seek": 385420, "start": 3879.8799999999997, "end": 3881.7999999999997, "text": " No, well, so Chris.", "tokens": [883, 11, 731, 11, 370, 6688, 13], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1589, "seek": 385420, "start": 3881.7999999999997, "end": 3882.7599999999998, "text": " Can you show me what that is?", "tokens": [1664, 291, 855, 385, 437, 300, 307, 30], "temperature": 0.0, "avg_logprob": -0.15543388902095326, "compression_ratio": 1.6704545454545454, "no_speech_prob": 5.5073105613701046e-06}, {"id": 1590, "seek": 388276, "start": 3882.76, "end": 3884.76, "text": " Absolutely, so we're not using percent time", "tokens": [7021, 11, 370, 321, 434, 406, 1228, 3043, 565], "temperature": 0.0, "avg_logprob": -0.10609088509769762, "compression_ratio": 1.75, "no_speech_prob": 2.9768014428555034e-05}, {"id": 1591, "seek": 388276, "start": 3884.76, "end": 3886.6000000000004, "text": " because percent time is a magic.", "tokens": [570, 3043, 565, 307, 257, 5585, 13], "temperature": 0.0, "avg_logprob": -0.10609088509769762, "compression_ratio": 1.75, "no_speech_prob": 2.9768014428555034e-05}, {"id": 1592, "seek": 388276, "start": 3886.6000000000004, "end": 3889.5200000000004, "text": " And under your new rules,", "tokens": [400, 833, 428, 777, 4474, 11], "temperature": 0.0, "avg_logprob": -0.10609088509769762, "compression_ratio": 1.75, "no_speech_prob": 2.9768014428555034e-05}, {"id": 1593, "seek": 388276, "start": 3889.5200000000004, "end": 3891.48, "text": " we shouldn't be allowed to use things that are magic.", "tokens": [321, 4659, 380, 312, 4350, 281, 764, 721, 300, 366, 5585, 13], "temperature": 0.0, "avg_logprob": -0.10609088509769762, "compression_ratio": 1.75, "no_speech_prob": 2.9768014428555034e-05}, {"id": 1594, "seek": 388276, "start": 3891.48, "end": 3892.84, "text": " We should write them ourselves.", "tokens": [492, 820, 2464, 552, 4175, 13], "temperature": 0.0, "avg_logprob": -0.10609088509769762, "compression_ratio": 1.75, "no_speech_prob": 2.9768014428555034e-05}, {"id": 1595, "seek": 388276, "start": 3892.84, "end": 3895.6400000000003, "text": " So time is written ourselves", "tokens": [407, 565, 307, 3720, 4175], "temperature": 0.0, "avg_logprob": -0.10609088509769762, "compression_ratio": 1.75, "no_speech_prob": 2.9768014428555034e-05}, {"id": 1596, "seek": 388276, "start": 3895.6400000000003, "end": 3899.76, "text": " and it's actually written in this notebook called zero zero.", "tokens": [293, 309, 311, 767, 3720, 294, 341, 21060, 1219, 4018, 4018, 13], "temperature": 0.0, "avg_logprob": -0.10609088509769762, "compression_ratio": 1.75, "no_speech_prob": 2.9768014428555034e-05}, {"id": 1597, "seek": 388276, "start": 3899.76, "end": 3903.6000000000004, "text": " So yeah, so when we started out,", "tokens": [407, 1338, 11, 370, 562, 321, 1409, 484, 11], "temperature": 0.0, "avg_logprob": -0.10609088509769762, "compression_ratio": 1.75, "no_speech_prob": 2.9768014428555034e-05}, {"id": 1598, "seek": 388276, "start": 3903.6000000000004, "end": 3906.4, "text": " we started out with a blank slate.", "tokens": [321, 1409, 484, 365, 257, 8247, 39118, 13], "temperature": 0.0, "avg_logprob": -0.10609088509769762, "compression_ratio": 1.75, "no_speech_prob": 2.9768014428555034e-05}, {"id": 1599, "seek": 388276, "start": 3906.4, "end": 3909.44, "text": " And so we had to start out with things like,", "tokens": [400, 370, 321, 632, 281, 722, 484, 365, 721, 411, 11], "temperature": 0.0, "avg_logprob": -0.10609088509769762, "compression_ratio": 1.75, "no_speech_prob": 2.9768014428555034e-05}, {"id": 1600, "seek": 388276, "start": 3909.44, "end": 3911.28, "text": " how do I time a cell, right?", "tokens": [577, 360, 286, 565, 257, 2815, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.10609088509769762, "compression_ratio": 1.75, "no_speech_prob": 2.9768014428555034e-05}, {"id": 1601, "seek": 391128, "start": 3911.28, "end": 3913.6000000000004, "text": " So the answer is, this is the nice thing", "tokens": [407, 264, 1867, 307, 11, 341, 307, 264, 1481, 551], "temperature": 0.0, "avg_logprob": -0.08896367733295148, "compression_ratio": 1.7857142857142858, "no_speech_prob": 1.1841463674500119e-05}, {"id": 1602, "seek": 391128, "start": 3913.6000000000004, "end": 3916.36, "text": " about working with Swift is we can build everything", "tokens": [466, 1364, 365, 25539, 307, 321, 393, 1322, 1203], "temperature": 0.0, "avg_logprob": -0.08896367733295148, "compression_ratio": 1.7857142857142858, "no_speech_prob": 1.1841463674500119e-05}, {"id": 1603, "seek": 391128, "start": 3916.36, "end": 3917.6800000000003, "text": " from scratch, right?", "tokens": [490, 8459, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.08896367733295148, "compression_ratio": 1.7857142857142858, "no_speech_prob": 1.1841463674500119e-05}, {"id": 1604, "seek": 391128, "start": 3917.6800000000003, "end": 3920.2400000000002, "text": " So here's the timing section, right?", "tokens": [407, 510, 311, 264, 10822, 3541, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.08896367733295148, "compression_ratio": 1.7857142857142858, "no_speech_prob": 1.1841463674500119e-05}, {"id": 1605, "seek": 391128, "start": 3920.2400000000002, "end": 3922.96, "text": " And the details don't matter, but basically you can see,", "tokens": [400, 264, 4365, 500, 380, 1871, 11, 457, 1936, 291, 393, 536, 11], "temperature": 0.0, "avg_logprob": -0.08896367733295148, "compression_ratio": 1.7857142857142858, "no_speech_prob": 1.1841463674500119e-05}, {"id": 1606, "seek": 391128, "start": 3922.96, "end": 3925.92, "text": " we can grab some stuff from the Swift standard library,", "tokens": [321, 393, 4444, 512, 1507, 490, 264, 25539, 3832, 6405, 11], "temperature": 0.0, "avg_logprob": -0.08896367733295148, "compression_ratio": 1.7857142857142858, "no_speech_prob": 1.1841463674500119e-05}, {"id": 1607, "seek": 391128, "start": 3925.92, "end": 3928.48, "text": " for example, a function that tells the time,", "tokens": [337, 1365, 11, 257, 2445, 300, 5112, 264, 565, 11], "temperature": 0.0, "avg_logprob": -0.08896367733295148, "compression_ratio": 1.7857142857142858, "no_speech_prob": 1.1841463674500119e-05}, {"id": 1608, "seek": 391128, "start": 3928.48, "end": 3931.6800000000003, "text": " and we can run some function and see how long it takes.", "tokens": [293, 321, 393, 1190, 512, 2445, 293, 536, 577, 938, 309, 2516, 13], "temperature": 0.0, "avg_logprob": -0.08896367733295148, "compression_ratio": 1.7857142857142858, "no_speech_prob": 1.1841463674500119e-05}, {"id": 1609, "seek": 391128, "start": 3931.6800000000003, "end": 3934.36, "text": " And the nice thing is that we can end up", "tokens": [400, 264, 1481, 551, 307, 300, 321, 393, 917, 493], "temperature": 0.0, "avg_logprob": -0.08896367733295148, "compression_ratio": 1.7857142857142858, "no_speech_prob": 1.1841463674500119e-05}, {"id": 1610, "seek": 391128, "start": 3934.36, "end": 3937.44, "text": " with some very neat syntax, right?", "tokens": [365, 512, 588, 10654, 28431, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.08896367733295148, "compression_ratio": 1.7857142857142858, "no_speech_prob": 1.1841463674500119e-05}, {"id": 1611, "seek": 391128, "start": 3937.44, "end": 3939.6000000000004, "text": " Because the thing that we pass in,", "tokens": [1436, 264, 551, 300, 321, 1320, 294, 11], "temperature": 0.0, "avg_logprob": -0.08896367733295148, "compression_ratio": 1.7857142857142858, "no_speech_prob": 1.1841463674500119e-05}, {"id": 1612, "seek": 393960, "start": 3939.6, "end": 3942.2, "text": " the function we pass in is a closure, right?", "tokens": [264, 2445, 321, 1320, 294, 307, 257, 24653, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.0836190594971635, "compression_ratio": 1.7727272727272727, "no_speech_prob": 9.222249900631141e-06}, {"id": 1613, "seek": 393960, "start": 3942.2, "end": 3944.3199999999997, "text": " And this is how you say, pass in some closure", "tokens": [400, 341, 307, 577, 291, 584, 11, 1320, 294, 512, 24653], "temperature": 0.0, "avg_logprob": -0.0836190594971635, "compression_ratio": 1.7727272727272727, "no_speech_prob": 9.222249900631141e-06}, {"id": 1614, "seek": 393960, "start": 3944.3199999999997, "end": 3947.08, "text": " that takes no arguments and returns nothing at all.", "tokens": [300, 2516, 572, 12869, 293, 11247, 1825, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.0836190594971635, "compression_ratio": 1.7727272727272727, "no_speech_prob": 9.222249900631141e-06}, {"id": 1615, "seek": 393960, "start": 3947.08, "end": 3950.7999999999997, "text": " And so for example, we can give it a default value,", "tokens": [400, 370, 337, 1365, 11, 321, 393, 976, 309, 257, 7576, 2158, 11], "temperature": 0.0, "avg_logprob": -0.0836190594971635, "compression_ratio": 1.7727272727272727, "no_speech_prob": 9.222249900631141e-06}, {"id": 1616, "seek": 393960, "start": 3950.7999999999997, "end": 3952.7599999999998, "text": " which means if we wanna time something", "tokens": [597, 1355, 498, 321, 1948, 565, 746], "temperature": 0.0, "avg_logprob": -0.0836190594971635, "compression_ratio": 1.7727272727272727, "no_speech_prob": 9.222249900631141e-06}, {"id": 1617, "seek": 393960, "start": 3952.7599999999998, "end": 3956.88, "text": " and just run it once, we can just do that, right?", "tokens": [293, 445, 1190, 309, 1564, 11, 321, 393, 445, 360, 300, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.0836190594971635, "compression_ratio": 1.7727272727272727, "no_speech_prob": 9.222249900631141e-06}, {"id": 1618, "seek": 393960, "start": 3956.88, "end": 3959.52, "text": " So we can create syntax, you know,", "tokens": [407, 321, 393, 1884, 28431, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.0836190594971635, "compression_ratio": 1.7727272727272727, "no_speech_prob": 9.222249900631141e-06}, {"id": 1619, "seek": 393960, "start": 3959.52, "end": 3961.56, "text": " we can create APIs that are really nice", "tokens": [321, 393, 1884, 21445, 300, 366, 534, 1481], "temperature": 0.0, "avg_logprob": -0.0836190594971635, "compression_ratio": 1.7727272727272727, "no_speech_prob": 9.222249900631141e-06}, {"id": 1620, "seek": 393960, "start": 3961.56, "end": 3963.24, "text": " and elegant and simple to use.", "tokens": [293, 21117, 293, 2199, 281, 764, 13], "temperature": 0.0, "avg_logprob": -0.0836190594971635, "compression_ratio": 1.7727272727272727, "no_speech_prob": 9.222249900631141e-06}, {"id": 1621, "seek": 393960, "start": 3963.24, "end": 3967.52, "text": " And so this version of time actually is both time it", "tokens": [400, 370, 341, 3037, 295, 565, 767, 307, 1293, 565, 309], "temperature": 0.0, "avg_logprob": -0.0836190594971635, "compression_ratio": 1.7727272727272727, "no_speech_prob": 9.222249900631141e-06}, {"id": 1622, "seek": 393960, "start": 3967.52, "end": 3969.56, "text": " and time together, right?", "tokens": [293, 565, 1214, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.0836190594971635, "compression_ratio": 1.7727272727272727, "no_speech_prob": 9.222249900631141e-06}, {"id": 1623, "seek": 396956, "start": 3969.56, "end": 3972.2, "text": " So if you give it repeating, it'll do that, right?", "tokens": [407, 498, 291, 976, 309, 18617, 11, 309, 603, 360, 300, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1005647628287959, "compression_ratio": 1.7304347826086957, "no_speech_prob": 1.2805097867385484e-05}, {"id": 1624, "seek": 396956, "start": 3972.2, "end": 3974.6, "text": " And actually this zero zero notebook", "tokens": [400, 767, 341, 4018, 4018, 21060], "temperature": 0.0, "avg_logprob": -0.1005647628287959, "compression_ratio": 1.7304347826086957, "no_speech_prob": 1.2805097867385484e-05}, {"id": 1625, "seek": 396956, "start": 3974.6, "end": 3979.2799999999997, "text": " is worth flicking through because it's the only notebook", "tokens": [307, 3163, 932, 10401, 807, 570, 309, 311, 264, 787, 21060], "temperature": 0.0, "avg_logprob": -0.1005647628287959, "compression_ratio": 1.7304347826086957, "no_speech_prob": 1.2805097867385484e-05}, {"id": 1626, "seek": 396956, "start": 3979.2799999999997, "end": 3981.72, "text": " where there's no tensors in it,", "tokens": [689, 456, 311, 572, 10688, 830, 294, 309, 11], "temperature": 0.0, "avg_logprob": -0.1005647628287959, "compression_ratio": 1.7304347826086957, "no_speech_prob": 1.2805097867385484e-05}, {"id": 1627, "seek": 396956, "start": 3981.72, "end": 3984.68, "text": " there's no tensor flow in it, there's no tf.data in it.", "tokens": [456, 311, 572, 40863, 3095, 294, 309, 11, 456, 311, 572, 256, 69, 13, 67, 3274, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.1005647628287959, "compression_ratio": 1.7304347826086957, "no_speech_prob": 1.2805097867385484e-05}, {"id": 1628, "seek": 396956, "start": 3984.68, "end": 3988.92, "text": " So if you just wanna see like just Swift, right?", "tokens": [407, 498, 291, 445, 1948, 536, 411, 445, 25539, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1005647628287959, "compression_ratio": 1.7304347826086957, "no_speech_prob": 1.2805097867385484e-05}, {"id": 1629, "seek": 396956, "start": 3988.92, "end": 3990.4, "text": " This is a good way to learn to Swift.", "tokens": [639, 307, 257, 665, 636, 281, 1466, 281, 25539, 13], "temperature": 0.0, "avg_logprob": -0.1005647628287959, "compression_ratio": 1.7304347826086957, "no_speech_prob": 1.2805097867385484e-05}, {"id": 1630, "seek": 396956, "start": 3990.4, "end": 3994.2799999999997, "text": " So for example, you can see how we built this thing", "tokens": [407, 337, 1365, 11, 291, 393, 536, 577, 321, 3094, 341, 551], "temperature": 0.0, "avg_logprob": -0.1005647628287959, "compression_ratio": 1.7304347826086957, "no_speech_prob": 1.2805097867385484e-05}, {"id": 1631, "seek": 396956, "start": 3994.2799999999997, "end": 3997.7999999999997, "text": " where you can go ls.shell.", "tokens": [689, 291, 393, 352, 287, 82, 13, 9611, 285, 13], "temperature": 0.0, "avg_logprob": -0.1005647628287959, "compression_ratio": 1.7304347826086957, "no_speech_prob": 1.2805097867385484e-05}, {"id": 1632, "seek": 399780, "start": 3997.8, "end": 4000.6800000000003, "text": " So we've actually added something to string", "tokens": [407, 321, 600, 767, 3869, 746, 281, 6798], "temperature": 0.0, "avg_logprob": -0.11399323231465108, "compression_ratio": 1.6986899563318778, "no_speech_prob": 7.766716407786589e-06}, {"id": 1633, "seek": 399780, "start": 4000.6800000000003, "end": 4003.88, "text": " that will run a task, right?", "tokens": [300, 486, 1190, 257, 5633, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.11399323231465108, "compression_ratio": 1.6986899563318778, "no_speech_prob": 7.766716407786589e-06}, {"id": 1634, "seek": 399780, "start": 4003.88, "end": 4006.84, "text": " And you can kind of see how to write these things", "tokens": [400, 291, 393, 733, 295, 536, 577, 281, 2464, 613, 721], "temperature": 0.0, "avg_logprob": -0.11399323231465108, "compression_ratio": 1.6986899563318778, "no_speech_prob": 7.766716407786589e-06}, {"id": 1635, "seek": 399780, "start": 4006.84, "end": 4009.44, "text": " in just nice neat little concise packages.", "tokens": [294, 445, 1481, 10654, 707, 44882, 17401, 13], "temperature": 0.0, "avg_logprob": -0.11399323231465108, "compression_ratio": 1.6986899563318778, "no_speech_prob": 7.766716407786589e-06}, {"id": 1636, "seek": 399780, "start": 4009.44, "end": 4010.92, "text": " And now we can export this.", "tokens": [400, 586, 321, 393, 10725, 341, 13], "temperature": 0.0, "avg_logprob": -0.11399323231465108, "compression_ratio": 1.6986899563318778, "no_speech_prob": 7.766716407786589e-06}, {"id": 1637, "seek": 399780, "start": 4010.92, "end": 4015.92, "text": " And now anytime you wanna run a process through the shell,", "tokens": [400, 586, 13038, 291, 1948, 1190, 257, 1399, 807, 264, 8720, 11], "temperature": 0.0, "avg_logprob": -0.11399323231465108, "compression_ratio": 1.6986899563318778, "no_speech_prob": 7.766716407786589e-06}, {"id": 1638, "seek": 399780, "start": 4016.44, "end": 4018.32, "text": " you can just go blah.shell.", "tokens": [291, 393, 445, 352, 12288, 13, 9611, 285, 13], "temperature": 0.0, "avg_logprob": -0.11399323231465108, "compression_ratio": 1.6986899563318778, "no_speech_prob": 7.766716407786589e-06}, {"id": 1639, "seek": 399780, "start": 4020.0, "end": 4022.32, "text": " You can see how to download a file.", "tokens": [509, 393, 536, 577, 281, 5484, 257, 3991, 13], "temperature": 0.0, "avg_logprob": -0.11399323231465108, "compression_ratio": 1.6986899563318778, "no_speech_prob": 7.766716407786589e-06}, {"id": 1640, "seek": 399780, "start": 4022.32, "end": 4023.6400000000003, "text": " And one of the nice things here", "tokens": [400, 472, 295, 264, 1481, 721, 510], "temperature": 0.0, "avg_logprob": -0.11399323231465108, "compression_ratio": 1.6986899563318778, "no_speech_prob": 7.766716407786589e-06}, {"id": 1641, "seek": 399780, "start": 4023.6400000000003, "end": 4025.84, "text": " is that you'll see that download a file,", "tokens": [307, 300, 291, 603, 536, 300, 5484, 257, 3991, 11], "temperature": 0.0, "avg_logprob": -0.11399323231465108, "compression_ratio": 1.6986899563318778, "no_speech_prob": 7.766716407786589e-06}, {"id": 1642, "seek": 402584, "start": 4025.84, "end": 4030.2400000000002, "text": " we've actually using this path library", "tokens": [321, 600, 767, 1228, 341, 3100, 6405], "temperature": 0.0, "avg_logprob": -0.12173934209914435, "compression_ratio": 1.583011583011583, "no_speech_prob": 3.7630932638421655e-05}, {"id": 1643, "seek": 402584, "start": 4030.2400000000002, "end": 4032.76, "text": " that looks almost identical to pathlib.", "tokens": [300, 1542, 1920, 14800, 281, 3100, 38270, 13], "temperature": 0.0, "avg_logprob": -0.12173934209914435, "compression_ratio": 1.583011583011583, "no_speech_prob": 3.7630932638421655e-05}, {"id": 1644, "seek": 402584, "start": 4032.76, "end": 4036.96, "text": " And that's because there's a wonderful programmer,", "tokens": [400, 300, 311, 570, 456, 311, 257, 3715, 32116, 11], "temperature": 0.0, "avg_logprob": -0.12173934209914435, "compression_ratio": 1.583011583011583, "no_speech_prob": 3.7630932638421655e-05}, {"id": 1645, "seek": 402584, "start": 4036.96, "end": 4038.84, "text": " wonderful person called Max Howell.", "tokens": [3715, 954, 1219, 7402, 1012, 898, 13], "temperature": 0.0, "avg_logprob": -0.12173934209914435, "compression_ratio": 1.583011583011583, "no_speech_prob": 3.7630932638421655e-05}, {"id": 1646, "seek": 402584, "start": 4038.84, "end": 4041.44, "text": " This is Max's username on GitHub.", "tokens": [639, 307, 7402, 311, 30351, 322, 23331, 13], "temperature": 0.0, "avg_logprob": -0.12173934209914435, "compression_ratio": 1.583011583011583, "no_speech_prob": 3.7630932638421655e-05}, {"id": 1647, "seek": 402584, "start": 4041.44, "end": 4043.88, "text": " And I mentioned he's actually an open source programmer", "tokens": [400, 286, 2835, 415, 311, 767, 364, 1269, 4009, 32116], "temperature": 0.0, "avg_logprob": -0.12173934209914435, "compression_ratio": 1.583011583011583, "no_speech_prob": 3.7630932638421655e-05}, {"id": 1648, "seek": 402584, "start": 4043.88, "end": 4046.32, "text": " who entirely relies on sponsorship for his work.", "tokens": [567, 7696, 30910, 322, 42922, 337, 702, 589, 13], "temperature": 0.0, "avg_logprob": -0.12173934209914435, "compression_ratio": 1.583011583011583, "no_speech_prob": 3.7630932638421655e-05}, {"id": 1649, "seek": 402584, "start": 4046.32, "end": 4049.84, "text": " So if you like Max's work, which I certainly do,", "tokens": [407, 498, 291, 411, 7402, 311, 589, 11, 597, 286, 3297, 360, 11], "temperature": 0.0, "avg_logprob": -0.12173934209914435, "compression_ratio": 1.583011583011583, "no_speech_prob": 3.7630932638421655e-05}, {"id": 1650, "seek": 402584, "start": 4049.84, "end": 4052.6000000000004, "text": " you should go to his Patreon and give him a few dollars.", "tokens": [291, 820, 352, 281, 702, 15692, 293, 976, 796, 257, 1326, 3808, 13], "temperature": 0.0, "avg_logprob": -0.12173934209914435, "compression_ratio": 1.583011583011583, "no_speech_prob": 3.7630932638421655e-05}, {"id": 1651, "seek": 405260, "start": 4052.6, "end": 4057.6, "text": " So thanks to Max, we have something that's really", "tokens": [407, 3231, 281, 7402, 11, 321, 362, 746, 300, 311, 534], "temperature": 0.0, "avg_logprob": -0.13762695070296999, "compression_ratio": 1.6771929824561405, "no_speech_prob": 2.0460598534555174e-05}, {"id": 1652, "seek": 405260, "start": 4057.68, "end": 4060.4, "text": " just like pathlib, but actually even almost a bit better.", "tokens": [445, 411, 3100, 38270, 11, 457, 767, 754, 1920, 257, 857, 1101, 13], "temperature": 0.0, "avg_logprob": -0.13762695070296999, "compression_ratio": 1.6771929824561405, "no_speech_prob": 2.0460598534555174e-05}, {"id": 1653, "seek": 405260, "start": 4060.4, "end": 4063.12, "text": " There's something that's almost exactly like requests.", "tokens": [821, 311, 746, 300, 311, 1920, 2293, 411, 12475, 13], "temperature": 0.0, "avg_logprob": -0.13762695070296999, "compression_ratio": 1.6771929824561405, "no_speech_prob": 2.0460598534555174e-05}, {"id": 1654, "seek": 405260, "start": 4063.12, "end": 4064.2, "text": " It's called Just, right?", "tokens": [467, 311, 1219, 1449, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.13762695070296999, "compression_ratio": 1.6771929824561405, "no_speech_prob": 2.0460598534555174e-05}, {"id": 1655, "seek": 405260, "start": 4064.2, "end": 4067.04, "text": " So in the Swift ecosystem, thanks to the fact", "tokens": [407, 294, 264, 25539, 11311, 11, 3231, 281, 264, 1186], "temperature": 0.0, "avg_logprob": -0.13762695070296999, "compression_ratio": 1.6771929824561405, "no_speech_prob": 2.0460598534555174e-05}, {"id": 1656, "seek": 405260, "start": 4067.04, "end": 4069.4, "text": " that you've got all these millions of iOS programmers", "tokens": [300, 291, 600, 658, 439, 613, 6803, 295, 17430, 41504], "temperature": 0.0, "avg_logprob": -0.13762695070296999, "compression_ratio": 1.6771929824561405, "no_speech_prob": 2.0460598534555174e-05}, {"id": 1657, "seek": 405260, "start": 4069.4, "end": 4071.0, "text": " that's been, who have been using this language", "tokens": [300, 311, 668, 11, 567, 362, 668, 1228, 341, 2856], "temperature": 0.0, "avg_logprob": -0.13762695070296999, "compression_ratio": 1.6771929824561405, "no_speech_prob": 2.0460598534555174e-05}, {"id": 1658, "seek": 405260, "start": 4071.0, "end": 4073.04, "text": " for five years to build cool stuff,", "tokens": [337, 1732, 924, 281, 1322, 1627, 1507, 11], "temperature": 0.0, "avg_logprob": -0.13762695070296999, "compression_ratio": 1.6771929824561405, "no_speech_prob": 2.0460598534555174e-05}, {"id": 1659, "seek": 405260, "start": 4073.04, "end": 4076.8399999999997, "text": " there's actually a nice non-data science ecosystem.", "tokens": [456, 311, 767, 257, 1481, 2107, 12, 67, 3274, 3497, 11311, 13], "temperature": 0.0, "avg_logprob": -0.13762695070296999, "compression_ratio": 1.6771929824561405, "no_speech_prob": 2.0460598534555174e-05}, {"id": 1660, "seek": 405260, "start": 4076.8399999999997, "end": 4080.3199999999997, "text": " And while we're talking about a non-data science Python", "tokens": [400, 1339, 321, 434, 1417, 466, 257, 2107, 12, 67, 3274, 3497, 15329], "temperature": 0.0, "avg_logprob": -0.13762695070296999, "compression_ratio": 1.6771929824561405, "no_speech_prob": 2.0460598534555174e-05}, {"id": 1661, "seek": 408032, "start": 4080.32, "end": 4083.2000000000003, "text": " similar packages, is there any web framework", "tokens": [2531, 17401, 11, 307, 456, 604, 3670, 8388], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1662, "seek": 408032, "start": 4083.2000000000003, "end": 4085.6000000000004, "text": " similar to Flask or Django for Swift?", "tokens": [2531, 281, 3235, 3863, 420, 33464, 17150, 337, 25539, 30], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1663, "seek": 408032, "start": 4085.6000000000004, "end": 4086.88, "text": " Yeah, absolutely.", "tokens": [865, 11, 3122, 13], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1664, "seek": 408032, "start": 4086.88, "end": 4089.6000000000004, "text": " Yeah, actually the Swift on the server community", "tokens": [865, 11, 767, 264, 25539, 322, 264, 7154, 1768], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1665, "seek": 408032, "start": 4089.6000000000004, "end": 4091.0, "text": " is a really vibrant community.", "tokens": [307, 257, 534, 21571, 1768, 13], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1666, "seek": 408032, "start": 4091.0, "end": 4093.8, "text": " And there's the equivalent of Ruby on Rails", "tokens": [400, 456, 311, 264, 10344, 295, 19907, 322, 48526], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1667, "seek": 408032, "start": 4093.8, "end": 4096.0, "text": " and a bunch of these different frameworks", "tokens": [293, 257, 3840, 295, 613, 819, 29834], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1668, "seek": 408032, "start": 4096.0, "end": 4097.2, "text": " have Swift versions.", "tokens": [362, 25539, 9606, 13], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1669, "seek": 408032, "start": 4097.2, "end": 4099.12, "text": " And that's actually one of the biggest", "tokens": [400, 300, 311, 767, 472, 295, 264, 3880], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1670, "seek": 408032, "start": 4099.12, "end": 4101.52, "text": " non-iOS communities that exist.", "tokens": [2107, 12, 72, 4367, 4456, 300, 2514, 13], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1671, "seek": 408032, "start": 4101.52, "end": 4103.84, "text": " The one I've seen a lot of love for is Vapor.", "tokens": [440, 472, 286, 600, 1612, 257, 688, 295, 959, 337, 307, 691, 13345, 13], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1672, "seek": 408032, "start": 4103.84, "end": 4106.64, "text": " Yeah, Vapor, IBM is investing.", "tokens": [865, 11, 691, 13345, 11, 23487, 307, 10978, 13], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1673, "seek": 408032, "start": 4106.64, "end": 4108.360000000001, "text": " They have a framework called Couture", "tokens": [814, 362, 257, 8388, 1219, 383, 346, 540], "temperature": 0.0, "avg_logprob": -0.17398834228515625, "compression_ratio": 1.673758865248227, "no_speech_prob": 5.7335910241818056e-05}, {"id": 1674, "seek": 410836, "start": 4108.36, "end": 4111.92, "text": " and they're putting a lot of time and thought into that.", "tokens": [293, 436, 434, 3372, 257, 688, 295, 565, 293, 1194, 666, 300, 13], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1675, "seek": 410836, "start": 4111.92, "end": 4114.599999999999, "text": " Apple has a low level thing that's like NETI,", "tokens": [6373, 575, 257, 2295, 1496, 551, 300, 311, 411, 426, 4850, 40, 11], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1676, "seek": 410836, "start": 4114.599999999999, "end": 4115.799999999999, "text": " the NETI library on Java.", "tokens": [264, 426, 4850, 40, 6405, 322, 10745, 13], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1677, "seek": 410836, "start": 4115.799999999999, "end": 4118.719999999999, "text": " And there's a Swift version of that called Swift Neo.", "tokens": [400, 456, 311, 257, 25539, 3037, 295, 300, 1219, 25539, 24458, 13], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1678, "seek": 410836, "start": 4118.719999999999, "end": 4122.2, "text": " So there's a bunch of these fairly infrastructural things", "tokens": [407, 456, 311, 257, 3840, 295, 613, 6457, 6534, 1757, 1807, 721], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1679, "seek": 410836, "start": 4122.2, "end": 4124.08, "text": " that exist that are part of the Swift ecosystem.", "tokens": [300, 2514, 300, 366, 644, 295, 264, 25539, 11311, 13], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1680, "seek": 410836, "start": 4124.08, "end": 4126.0, "text": " And Swift is really great on servers too.", "tokens": [400, 25539, 307, 534, 869, 322, 15909, 886, 13], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1681, "seek": 410836, "start": 4126.0, "end": 4129.36, "text": " Okay, so here you can see how we can download a file.", "tokens": [1033, 11, 370, 510, 291, 393, 536, 577, 321, 393, 5484, 257, 3991, 13], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1682, "seek": 410836, "start": 4129.36, "end": 4130.44, "text": " It's all pretty straightforward.", "tokens": [467, 311, 439, 1238, 15325, 13], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1683, "seek": 410836, "start": 4130.44, "end": 4132.679999999999, "text": " You've got try catch blocks a lot like we're used to,", "tokens": [509, 600, 658, 853, 3745, 8474, 257, 688, 411, 321, 434, 1143, 281, 11], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1684, "seek": 410836, "start": 4132.679999999999, "end": 4134.5599999999995, "text": " but they're kind of do try catch.", "tokens": [457, 436, 434, 733, 295, 360, 853, 3745, 13], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1685, "seek": 410836, "start": 4134.5599999999995, "end": 4136.28, "text": " The details are a bit different.", "tokens": [440, 4365, 366, 257, 857, 819, 13], "temperature": 0.0, "avg_logprob": -0.11765886443892336, "compression_ratio": 1.6896551724137931, "no_speech_prob": 1.8628561520017684e-05}, {"id": 1686, "seek": 413628, "start": 4136.28, "end": 4141.28, "text": " So in this case, we wanna download Mlist and load it up.", "tokens": [407, 294, 341, 1389, 11, 321, 1948, 5484, 376, 8264, 293, 3677, 309, 493, 13], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1687, "seek": 413628, "start": 4141.4, "end": 4144.2, "text": " One thing to be aware of is that things,", "tokens": [1485, 551, 281, 312, 3650, 295, 307, 300, 721, 11], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1688, "seek": 413628, "start": 4144.2, "end": 4145.92, "text": " and we'll talk a lot more about this next week,", "tokens": [293, 321, 603, 751, 257, 688, 544, 466, 341, 958, 1243, 11], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1689, "seek": 413628, "start": 4145.92, "end": 4149.08, "text": " but things can get a little bit complicated when,", "tokens": [457, 721, 393, 483, 257, 707, 857, 6179, 562, 11], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1690, "seek": 413628, "start": 4149.08, "end": 4150.679999999999, "text": " like for example, for Mlist,", "tokens": [411, 337, 1365, 11, 337, 376, 8264, 11], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1691, "seek": 413628, "start": 4150.679999999999, "end": 4152.5599999999995, "text": " we've got a file containing labels", "tokens": [321, 600, 658, 257, 3991, 19273, 16949], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1692, "seek": 413628, "start": 4152.5599999999995, "end": 4154.599999999999, "text": " and we've got a file containing images.", "tokens": [293, 321, 600, 658, 257, 3991, 19273, 5267, 13], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1693, "seek": 413628, "start": 4154.599999999999, "end": 4155.5199999999995, "text": " They're different types.", "tokens": [814, 434, 819, 3467, 13], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1694, "seek": 413628, "start": 4155.5199999999995, "end": 4157.88, "text": " The labels are ints, the images are floats.", "tokens": [440, 16949, 366, 560, 82, 11, 264, 5267, 366, 37878, 13], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1695, "seek": 413628, "start": 4157.88, "end": 4159.8, "text": " So we kind of want two functions,", "tokens": [407, 321, 733, 295, 528, 732, 6828, 11], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1696, "seek": 413628, "start": 4159.8, "end": 4161.28, "text": " one that returns a tensor of floats,", "tokens": [472, 300, 11247, 257, 40863, 295, 37878, 11], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1697, "seek": 413628, "start": 4161.28, "end": 4163.24, "text": " one that returns a tensor of images.", "tokens": [472, 300, 11247, 257, 40863, 295, 5267, 13], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1698, "seek": 413628, "start": 4163.24, "end": 4164.48, "text": " That's duplicate code.", "tokens": [663, 311, 23976, 3089, 13], "temperature": 0.0, "avg_logprob": -0.10408255789015028, "compression_ratio": 1.8619402985074627, "no_speech_prob": 9.07991034182487e-06}, {"id": 1699, "seek": 416448, "start": 4164.48, "end": 4166.36, "text": " I hate duplicate code, right?", "tokens": [286, 4700, 23976, 3089, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.0950424380418731, "compression_ratio": 1.5931558935361216, "no_speech_prob": 2.9943805657239864e-06}, {"id": 1700, "seek": 416448, "start": 4166.36, "end": 4169.959999999999, "text": " So here's a version where we actually tell it,", "tokens": [407, 510, 311, 257, 3037, 689, 321, 767, 980, 309, 11], "temperature": 0.0, "avg_logprob": -0.0950424380418731, "compression_ratio": 1.5931558935361216, "no_speech_prob": 2.9943805657239864e-06}, {"id": 1701, "seek": 416448, "start": 4169.959999999999, "end": 4173.959999999999, "text": " oh, you could load up different types of Mlist data,", "tokens": [1954, 11, 291, 727, 3677, 493, 819, 3467, 295, 376, 8264, 1412, 11], "temperature": 0.0, "avg_logprob": -0.0950424380418731, "compression_ratio": 1.5931558935361216, "no_speech_prob": 2.9943805657239864e-06}, {"id": 1702, "seek": 416448, "start": 4173.959999999999, "end": 4177.639999999999, "text": " and it's gonna return a tensor of that type.", "tokens": [293, 309, 311, 799, 2736, 257, 40863, 295, 300, 2010, 13], "temperature": 0.0, "avg_logprob": -0.0950424380418731, "compression_ratio": 1.5931558935361216, "no_speech_prob": 2.9943805657239864e-06}, {"id": 1703, "seek": 416448, "start": 4177.639999999999, "end": 4179.719999999999, "text": " Okay, and unfortunately, if I try to use this,", "tokens": [1033, 11, 293, 7015, 11, 498, 286, 853, 281, 764, 341, 11], "temperature": 0.0, "avg_logprob": -0.0950424380418731, "compression_ratio": 1.5931558935361216, "no_speech_prob": 2.9943805657239864e-06}, {"id": 1704, "seek": 416448, "start": 4179.719999999999, "end": 4181.48, "text": " I get an error, right?", "tokens": [286, 483, 364, 6713, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.0950424380418731, "compression_ratio": 1.5931558935361216, "no_speech_prob": 2.9943805657239864e-06}, {"id": 1705, "seek": 416448, "start": 4181.48, "end": 4183.639999999999, "text": " And I really wanted to show you this error", "tokens": [400, 286, 534, 1415, 281, 855, 291, 341, 6713], "temperature": 0.0, "avg_logprob": -0.0950424380418731, "compression_ratio": 1.5931558935361216, "no_speech_prob": 2.9943805657239864e-06}, {"id": 1706, "seek": 416448, "start": 4183.639999999999, "end": 4187.08, "text": " because for the first week as a Swift programmer,", "tokens": [570, 337, 264, 700, 1243, 382, 257, 25539, 32116, 11], "temperature": 0.0, "avg_logprob": -0.0950424380418731, "compression_ratio": 1.5931558935361216, "no_speech_prob": 2.9943805657239864e-06}, {"id": 1707, "seek": 416448, "start": 4187.08, "end": 4190.08, "text": " I kind of, I've never felt so stupid.", "tokens": [286, 733, 295, 11, 286, 600, 1128, 2762, 370, 6631, 13], "temperature": 0.0, "avg_logprob": -0.0950424380418731, "compression_ratio": 1.5931558935361216, "no_speech_prob": 2.9943805657239864e-06}, {"id": 1708, "seek": 416448, "start": 4190.08, "end": 4193.5199999999995, "text": " Like I felt like everything I wanted to do,", "tokens": [1743, 286, 2762, 411, 1203, 286, 1415, 281, 360, 11], "temperature": 0.0, "avg_logprob": -0.0950424380418731, "compression_ratio": 1.5931558935361216, "no_speech_prob": 2.9943805657239864e-06}, {"id": 1709, "seek": 419352, "start": 4193.52, "end": 4196.360000000001, "text": " Swift hated me, and it told me these things", "tokens": [25539, 17398, 385, 11, 293, 309, 1907, 385, 613, 721], "temperature": 0.0, "avg_logprob": -0.15835513873976104, "compression_ratio": 1.5695652173913044, "no_speech_prob": 2.368700734223239e-06}, {"id": 1710, "seek": 419352, "start": 4196.360000000001, "end": 4200.88, "text": " like cannot invoke map with a, what the hell is all this?", "tokens": [411, 2644, 41117, 4471, 365, 257, 11, 437, 264, 4921, 307, 439, 341, 30], "temperature": 0.0, "avg_logprob": -0.15835513873976104, "compression_ratio": 1.5695652173913044, "no_speech_prob": 2.368700734223239e-06}, {"id": 1711, "seek": 419352, "start": 4200.88, "end": 4203.56, "text": " And I just gotta say, that's totally fine, right?", "tokens": [400, 286, 445, 3428, 584, 11, 300, 311, 3879, 2489, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.15835513873976104, "compression_ratio": 1.5695652173913044, "no_speech_prob": 2.368700734223239e-06}, {"id": 1712, "seek": 419352, "start": 4203.56, "end": 4208.56, "text": " Because the Swift type system is very new", "tokens": [1436, 264, 25539, 2010, 1185, 307, 588, 777], "temperature": 0.0, "avg_logprob": -0.15835513873976104, "compression_ratio": 1.5695652173913044, "no_speech_prob": 2.368700734223239e-06}, {"id": 1713, "seek": 419352, "start": 4208.56, "end": 4210.84, "text": " to somebody like me and probably most", "tokens": [281, 2618, 411, 385, 293, 1391, 881], "temperature": 0.0, "avg_logprob": -0.15835513873976104, "compression_ratio": 1.5695652173913044, "no_speech_prob": 2.368700734223239e-06}, {"id": 1714, "seek": 419352, "start": 4210.84, "end": 4212.320000000001, "text": " of the people watching this.", "tokens": [295, 264, 561, 1976, 341, 13], "temperature": 0.0, "avg_logprob": -0.15835513873976104, "compression_ratio": 1.5695652173913044, "no_speech_prob": 2.368700734223239e-06}, {"id": 1715, "seek": 419352, "start": 4212.320000000001, "end": 4215.8, "text": " The messages are helpful for people", "tokens": [440, 7897, 366, 4961, 337, 561], "temperature": 0.0, "avg_logprob": -0.15835513873976104, "compression_ratio": 1.5695652173913044, "no_speech_prob": 2.368700734223239e-06}, {"id": 1716, "seek": 419352, "start": 4215.8, "end": 4218.4400000000005, "text": " who understand it pretty well,", "tokens": [567, 1223, 309, 1238, 731, 11], "temperature": 0.0, "avg_logprob": -0.15835513873976104, "compression_ratio": 1.5695652173913044, "no_speech_prob": 2.368700734223239e-06}, {"id": 1717, "seek": 419352, "start": 4218.4400000000005, "end": 4220.88, "text": " and it's totally normal to think,", "tokens": [293, 309, 311, 3879, 2710, 281, 519, 11], "temperature": 0.0, "avg_logprob": -0.15835513873976104, "compression_ratio": 1.5695652173913044, "no_speech_prob": 2.368700734223239e-06}, {"id": 1718, "seek": 422088, "start": 4220.88, "end": 4224.64, "text": " for a week or two, Swift hates me.", "tokens": [337, 257, 1243, 420, 732, 11, 25539, 23000, 385, 13], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1719, "seek": 422088, "start": 4224.64, "end": 4226.64, "text": " To be stubbing your toe on every new thing", "tokens": [1407, 312, 20266, 4324, 428, 13976, 322, 633, 777, 551], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1720, "seek": 422088, "start": 4226.64, "end": 4228.0, "text": " and feeling like you'll never.", "tokens": [293, 2633, 411, 291, 603, 1128, 13], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1721, "seek": 422088, "start": 4228.0, "end": 4230.24, "text": " And particularly this generic stuff, you know?", "tokens": [400, 4098, 341, 19577, 1507, 11, 291, 458, 30], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1722, "seek": 422088, "start": 4230.24, "end": 4232.4800000000005, "text": " And I would say, look, a couple of suggestions.", "tokens": [400, 286, 576, 584, 11, 574, 11, 257, 1916, 295, 13396, 13], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1723, "seek": 422088, "start": 4232.4800000000005, "end": 4235.72, "text": " The first is just write the two separate versions", "tokens": [440, 700, 307, 445, 2464, 264, 732, 4994, 9606], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1724, "seek": 422088, "start": 4235.72, "end": 4237.0, "text": " so that you don't get frustrated,", "tokens": [370, 300, 291, 500, 380, 483, 15751, 11], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1725, "seek": 422088, "start": 4237.0, "end": 4240.08, "text": " and then come back and try again a few times yourself.", "tokens": [293, 550, 808, 646, 293, 853, 797, 257, 1326, 1413, 1803, 13], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1726, "seek": 422088, "start": 4240.08, "end": 4241.96, "text": " Ask on the forum.", "tokens": [12320, 322, 264, 17542, 13], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1727, "seek": 422088, "start": 4241.96, "end": 4243.16, "text": " Stack overflow's great.", "tokens": [37649, 37772, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1728, "seek": 422088, "start": 4243.16, "end": 4245.92, "text": " Yeah, but quite often, quite often the kinds of errors", "tokens": [865, 11, 457, 1596, 2049, 11, 1596, 2049, 264, 3685, 295, 13603], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1729, "seek": 422088, "start": 4245.92, "end": 4247.96, "text": " you get from the site system are,", "tokens": [291, 483, 490, 264, 3621, 1185, 366, 11], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1730, "seek": 422088, "start": 4247.96, "end": 4249.8, "text": " sometimes they're even like a long way away", "tokens": [2171, 436, 434, 754, 411, 257, 938, 636, 1314], "temperature": 0.0, "avg_logprob": -0.11434333854251438, "compression_ratio": 1.6517571884984026, "no_speech_prob": 1.5445637473021634e-05}, {"id": 1731, "seek": 424980, "start": 4249.8, "end": 4251.72, "text": " from really where the problem was.", "tokens": [490, 534, 689, 264, 1154, 390, 13], "temperature": 0.0, "avg_logprob": -0.09020319851962003, "compression_ratio": 1.7863636363636364, "no_speech_prob": 8.664375855005346e-06}, {"id": 1732, "seek": 424980, "start": 4251.72, "end": 4253.08, "text": " It can be quite difficult", "tokens": [467, 393, 312, 1596, 2252], "temperature": 0.0, "avg_logprob": -0.09020319851962003, "compression_ratio": 1.7863636363636364, "no_speech_prob": 8.664375855005346e-06}, {"id": 1733, "seek": 424980, "start": 4253.08, "end": 4255.16, "text": " because it's a powerful type system", "tokens": [570, 309, 311, 257, 4005, 2010, 1185], "temperature": 0.0, "avg_logprob": -0.09020319851962003, "compression_ratio": 1.7863636363636364, "no_speech_prob": 8.664375855005346e-06}, {"id": 1734, "seek": 424980, "start": 4255.16, "end": 4257.52, "text": " for it to really know where the problem is.", "tokens": [337, 309, 281, 534, 458, 689, 264, 1154, 307, 13], "temperature": 0.0, "avg_logprob": -0.09020319851962003, "compression_ratio": 1.7863636363636364, "no_speech_prob": 8.664375855005346e-06}, {"id": 1735, "seek": 424980, "start": 4257.52, "end": 4260.64, "text": " Now, in this case, the issue basically is", "tokens": [823, 11, 294, 341, 1389, 11, 264, 2734, 1936, 307], "temperature": 0.0, "avg_logprob": -0.09020319851962003, "compression_ratio": 1.7863636363636364, "no_speech_prob": 8.664375855005346e-06}, {"id": 1736, "seek": 424980, "start": 4260.64, "end": 4263.0, "text": " that we are trying to call,", "tokens": [300, 321, 366, 1382, 281, 818, 11], "temperature": 0.0, "avg_logprob": -0.09020319851962003, "compression_ratio": 1.7863636363636364, "no_speech_prob": 8.664375855005346e-06}, {"id": 1737, "seek": 424980, "start": 4264.400000000001, "end": 4269.400000000001, "text": " we're trying to initialize either floats or bytes.", "tokens": [321, 434, 1382, 281, 5883, 1125, 2139, 37878, 420, 36088, 13], "temperature": 0.0, "avg_logprob": -0.09020319851962003, "compression_ratio": 1.7863636363636364, "no_speech_prob": 8.664375855005346e-06}, {"id": 1738, "seek": 424980, "start": 4270.12, "end": 4272.4800000000005, "text": " And so it basically needs to know", "tokens": [400, 370, 309, 1936, 2203, 281, 458], "temperature": 0.0, "avg_logprob": -0.09020319851962003, "compression_ratio": 1.7863636363636364, "no_speech_prob": 8.664375855005346e-06}, {"id": 1739, "seek": 424980, "start": 4272.4800000000005, "end": 4275.28, "text": " that the type we're creating can initialize", "tokens": [300, 264, 2010, 321, 434, 4084, 393, 5883, 1125], "temperature": 0.0, "avg_logprob": -0.09020319851962003, "compression_ratio": 1.7863636363636364, "no_speech_prob": 8.664375855005346e-06}, {"id": 1740, "seek": 424980, "start": 4275.28, "end": 4277.12, "text": " either floats or bytes.", "tokens": [2139, 37878, 420, 36088, 13], "temperature": 0.0, "avg_logprob": -0.09020319851962003, "compression_ratio": 1.7863636363636364, "no_speech_prob": 8.664375855005346e-06}, {"id": 1741, "seek": 424980, "start": 4277.12, "end": 4278.84, "text": " So as you'll learn next week,", "tokens": [407, 382, 291, 603, 1466, 958, 1243, 11], "temperature": 0.0, "avg_logprob": -0.09020319851962003, "compression_ratio": 1.7863636363636364, "no_speech_prob": 8.664375855005346e-06}, {"id": 1742, "seek": 427884, "start": 4278.84, "end": 4281.16, "text": " you could do that by creating something called a protocol.", "tokens": [291, 727, 360, 300, 538, 4084, 746, 1219, 257, 10336, 13], "temperature": 0.0, "avg_logprob": -0.12162710585684147, "compression_ratio": 1.6820083682008369, "no_speech_prob": 1.4062946320336778e-05}, {"id": 1743, "seek": 427884, "start": 4281.16, "end": 4283.8, "text": " You do it by saying that these things conform", "tokens": [509, 360, 309, 538, 1566, 300, 613, 721, 18975], "temperature": 0.0, "avg_logprob": -0.12162710585684147, "compression_ratio": 1.6820083682008369, "no_speech_prob": 1.4062946320336778e-05}, {"id": 1744, "seek": 427884, "start": 4283.8, "end": 4285.12, "text": " to that protocol.", "tokens": [281, 300, 10336, 13], "temperature": 0.0, "avg_logprob": -0.12162710585684147, "compression_ratio": 1.6820083682008369, "no_speech_prob": 1.4062946320336778e-05}, {"id": 1745, "seek": 427884, "start": 4285.12, "end": 4287.16, "text": " You then use that protocol.", "tokens": [509, 550, 764, 300, 10336, 13], "temperature": 0.0, "avg_logprob": -0.12162710585684147, "compression_ratio": 1.6820083682008369, "no_speech_prob": 1.4062946320336778e-05}, {"id": 1746, "seek": 427884, "start": 4287.16, "end": 4292.16, "text": " And so now this version of load MNIST works totally fine.", "tokens": [400, 370, 586, 341, 3037, 295, 3677, 376, 45, 19756, 1985, 3879, 2489, 13], "temperature": 0.0, "avg_logprob": -0.12162710585684147, "compression_ratio": 1.6820083682008369, "no_speech_prob": 1.4062946320336778e-05}, {"id": 1747, "seek": 427884, "start": 4294.08, "end": 4299.08, "text": " So this is a nice little package that you can look through.", "tokens": [407, 341, 307, 257, 1481, 707, 7372, 300, 291, 393, 574, 807, 13], "temperature": 0.0, "avg_logprob": -0.12162710585684147, "compression_ratio": 1.6820083682008369, "no_speech_prob": 1.4062946320336778e-05}, {"id": 1748, "seek": 427884, "start": 4299.4400000000005, "end": 4301.72, "text": " The last piece that we had to build in 0.0", "tokens": [440, 1036, 2522, 300, 321, 632, 281, 1322, 294, 1958, 13, 15], "temperature": 0.0, "avg_logprob": -0.12162710585684147, "compression_ratio": 1.6820083682008369, "no_speech_prob": 1.4062946320336778e-05}, {"id": 1749, "seek": 427884, "start": 4301.72, "end": 4304.92, "text": " was the thing that makes slash slash export works.", "tokens": [390, 264, 551, 300, 1669, 17330, 17330, 10725, 1985, 13], "temperature": 0.0, "avg_logprob": -0.12162710585684147, "compression_ratio": 1.6820083682008369, "no_speech_prob": 1.4062946320336778e-05}, {"id": 1750, "seek": 427884, "start": 4304.92, "end": 4307.4800000000005, "text": " So kind of delightful writing the thing", "tokens": [407, 733, 295, 35194, 3579, 264, 551], "temperature": 0.0, "avg_logprob": -0.12162710585684147, "compression_ratio": 1.6820083682008369, "no_speech_prob": 1.4062946320336778e-05}, {"id": 1751, "seek": 430748, "start": 4307.48, "end": 4309.12, "text": " that makes slash slash export work", "tokens": [300, 1669, 17330, 17330, 10725, 589], "temperature": 0.0, "avg_logprob": -0.07876539707183838, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.2216504728712607e-05}, {"id": 1752, "seek": 430748, "start": 4309.12, "end": 4310.799999999999, "text": " by typing slash slash export.", "tokens": [538, 18444, 17330, 17330, 10725, 13], "temperature": 0.0, "avg_logprob": -0.07876539707183838, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.2216504728712607e-05}, {"id": 1753, "seek": 430748, "start": 4312.36, "end": 4316.799999999999, "text": " One of the things that I needed to do here was to check", "tokens": [1485, 295, 264, 721, 300, 286, 2978, 281, 360, 510, 390, 281, 1520], "temperature": 0.0, "avg_logprob": -0.07876539707183838, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.2216504728712607e-05}, {"id": 1754, "seek": 430748, "start": 4316.799999999999, "end": 4320.28, "text": " whether something matches a regular expression or not.", "tokens": [1968, 746, 10676, 257, 3890, 6114, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.07876539707183838, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.2216504728712607e-05}, {"id": 1755, "seek": 430748, "start": 4321.32, "end": 4324.36, "text": " I found it extremely weird that the way to do that", "tokens": [286, 1352, 309, 4664, 3657, 300, 264, 636, 281, 360, 300], "temperature": 0.0, "avg_logprob": -0.07876539707183838, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.2216504728712607e-05}, {"id": 1756, "seek": 430748, "start": 4324.36, "end": 4329.12, "text": " in Swift is called range of options regular expression.", "tokens": [294, 25539, 307, 1219, 3613, 295, 3956, 3890, 6114, 13], "temperature": 0.0, "avg_logprob": -0.07876539707183838, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.2216504728712607e-05}, {"id": 1757, "seek": 430748, "start": 4329.12, "end": 4331.5599999999995, "text": " So I created something called find in string.", "tokens": [407, 286, 2942, 746, 1219, 915, 294, 6798, 13], "temperature": 0.0, "avg_logprob": -0.07876539707183838, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.2216504728712607e-05}, {"id": 1758, "seek": 430748, "start": 4331.5599999999995, "end": 4332.799999999999, "text": " So now I never have to worry", "tokens": [407, 586, 286, 1128, 362, 281, 3292], "temperature": 0.0, "avg_logprob": -0.07876539707183838, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.2216504728712607e-05}, {"id": 1759, "seek": 430748, "start": 4332.799999999999, "end": 4336.12, "text": " about the weird and clunky Swift syntax.", "tokens": [466, 264, 3657, 293, 596, 25837, 25539, 28431, 13], "temperature": 0.0, "avg_logprob": -0.07876539707183838, "compression_ratio": 1.761061946902655, "no_speech_prob": 1.2216504728712607e-05}, {"id": 1760, "seek": 433612, "start": 4336.12, "end": 4337.5199999999995, "text": " Most of the time I'm just looking to see", "tokens": [4534, 295, 264, 565, 286, 478, 445, 1237, 281, 536], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1761, "seek": 433612, "start": 4337.5199999999995, "end": 4339.2, "text": " whether something does exist or not.", "tokens": [1968, 746, 775, 2514, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1762, "seek": 433612, "start": 4339.2, "end": 4340.88, "text": " So I just created something called has match", "tokens": [407, 286, 445, 2942, 746, 1219, 575, 2995], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1763, "seek": 433612, "start": 4340.88, "end": 4342.76, "text": " that checks whether something exists or not.", "tokens": [300, 13834, 1968, 746, 8198, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1764, "seek": 433612, "start": 4342.76, "end": 4346.4, "text": " So I make Swift work the way I want it to.", "tokens": [407, 286, 652, 25539, 589, 264, 636, 286, 528, 309, 281, 13], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1765, "seek": 433612, "start": 4346.4, "end": 4349.64, "text": " And to give you a sense of like, when I say clunky APIs,", "tokens": [400, 281, 976, 291, 257, 2020, 295, 411, 11, 562, 286, 584, 596, 25837, 21445, 11], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1766, "seek": 433612, "start": 4349.64, "end": 4352.88, "text": " that in particular, you'll see here", "tokens": [300, 294, 1729, 11, 291, 603, 536, 510], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1767, "seek": 433612, "start": 4352.88, "end": 4356.12, "text": " we're using Max's beautiful path library.", "tokens": [321, 434, 1228, 7402, 311, 2238, 3100, 6405, 13], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1768, "seek": 433612, "start": 4356.12, "end": 4357.92, "text": " Before we realized that the path library", "tokens": [4546, 321, 5334, 300, 264, 3100, 6405], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1769, "seek": 433612, "start": 4357.92, "end": 4359.32, "text": " does everything we wanted,", "tokens": [775, 1203, 321, 1415, 11], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1770, "seek": 433612, "start": 4359.32, "end": 4361.24, "text": " we use the thing that Apple provides,", "tokens": [321, 764, 264, 551, 300, 6373, 6417, 11], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1771, "seek": 433612, "start": 4361.24, "end": 4362.64, "text": " which is called the foundation library.", "tokens": [597, 307, 1219, 264, 7030, 6405, 13], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1772, "seek": 433612, "start": 4362.64, "end": 4364.12, "text": " And that comes with Swift.", "tokens": [400, 300, 1487, 365, 25539, 13], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1773, "seek": 433612, "start": 4364.12, "end": 4364.96, "text": " These two lines-", "tokens": [1981, 732, 3876, 12], "temperature": 0.0, "avg_logprob": -0.10041364472487878, "compression_ratio": 1.7313915857605178, "no_speech_prob": 2.2825714040664025e-05}, {"id": 1774, "seek": 436496, "start": 4364.96, "end": 4366.84, "text": " It also works great on Linux.", "tokens": [467, 611, 1985, 869, 322, 18734, 13], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1775, "seek": 436496, "start": 4366.84, "end": 4368.28, "text": " It's a standard thing that's available.", "tokens": [467, 311, 257, 3832, 551, 300, 311, 2435, 13], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1776, "seek": 436496, "start": 4368.28, "end": 4371.28, "text": " Yeah, so those two lines of code", "tokens": [865, 11, 370, 729, 732, 3876, 295, 3089], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1777, "seek": 436496, "start": 4371.28, "end": 4373.2, "text": " in Apple's foundation library looks like,", "tokens": [294, 6373, 311, 7030, 6405, 1542, 411, 11], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1778, "seek": 436496, "start": 4373.2, "end": 4375.6, "text": " oh my God, it looks like this.", "tokens": [1954, 452, 1265, 11, 309, 1542, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1779, "seek": 436496, "start": 4375.6, "end": 4380.32, "text": " Okay, so to me, a lot of Swift APIs look like", "tokens": [1033, 11, 370, 281, 385, 11, 257, 688, 295, 25539, 21445, 574, 411], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1780, "seek": 436496, "start": 4380.32, "end": 4382.4800000000005, "text": " deleting path component, appending path component,", "tokens": [48946, 3100, 6542, 11, 724, 2029, 3100, 6542, 11], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1781, "seek": 436496, "start": 4382.4800000000005, "end": 4385.0, "text": " la la la la, appending path extension, ah!", "tokens": [635, 635, 635, 635, 11, 724, 2029, 3100, 10320, 11, 3716, 0], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1782, "seek": 436496, "start": 4385.0, "end": 4385.84, "text": " Right?", "tokens": [1779, 30], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1783, "seek": 436496, "start": 4385.84, "end": 4389.12, "text": " I don't know why, but a lot of Swift programmers", "tokens": [286, 500, 380, 458, 983, 11, 457, 257, 688, 295, 25539, 41504], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1784, "seek": 436496, "start": 4389.12, "end": 4391.76, "text": " seem to like writing this kind of code.", "tokens": [1643, 281, 411, 3579, 341, 733, 295, 3089, 13], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1785, "seek": 436496, "start": 4391.76, "end": 4394.12, "text": " I like writing this kind of code.", "tokens": [286, 411, 3579, 341, 733, 295, 3089, 13], "temperature": 0.0, "avg_logprob": -0.17358739448316168, "compression_ratio": 1.7729083665338645, "no_speech_prob": 1.2804445759684313e-05}, {"id": 1786, "seek": 439412, "start": 4394.12, "end": 4396.0, "text": " But I think foundation is not necessarily", "tokens": [583, 286, 519, 7030, 307, 406, 4725], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1787, "seek": 439412, "start": 4396.0, "end": 4398.5199999999995, "text": " your favorite API design, Chris.", "tokens": [428, 2954, 9362, 1715, 11, 6688, 13], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1788, "seek": 439412, "start": 4398.5199999999995, "end": 4399.44, "text": " Would that be fair to say?", "tokens": [6068, 300, 312, 3143, 281, 584, 30], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1789, "seek": 439412, "start": 4399.44, "end": 4401.0, "text": " I think it's fair to say that the thing", "tokens": [286, 519, 309, 311, 3143, 281, 584, 300, 264, 551], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1790, "seek": 439412, "start": 4401.0, "end": 4403.28, "text": " that's great about foundation is it has a lot of", "tokens": [300, 311, 869, 466, 7030, 307, 309, 575, 257, 688, 295], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1791, "seek": 439412, "start": 4403.28, "end": 4405.0, "text": " interesting and useful stuff,", "tokens": [1880, 293, 4420, 1507, 11], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1792, "seek": 439412, "start": 4405.0, "end": 4406.5199999999995, "text": " URLs and other stuff like that.", "tokens": [43267, 293, 661, 1507, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1793, "seek": 439412, "start": 4406.5199999999995, "end": 4411.08, "text": " But its design is not all great.", "tokens": [583, 1080, 1715, 307, 406, 439, 869, 13], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1794, "seek": 439412, "start": 4411.08, "end": 4412.44, "text": " It's great that it's there.", "tokens": [467, 311, 869, 300, 309, 311, 456, 13], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1795, "seek": 439412, "start": 4412.44, "end": 4415.0, "text": " And it's amazing that it's all been ported to Linux, right?", "tokens": [400, 309, 311, 2243, 300, 309, 311, 439, 668, 2436, 292, 281, 18734, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1796, "seek": 439412, "start": 4415.0, "end": 4415.84, "text": " So quite often you'll find-", "tokens": [407, 1596, 2049, 291, 603, 915, 12], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1797, "seek": 439412, "start": 4415.84, "end": 4417.2, "text": " It's got a tremendous amount of function.", "tokens": [467, 311, 658, 257, 10048, 2372, 295, 2445, 13], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1798, "seek": 439412, "start": 4417.2, "end": 4420.4, "text": " I need something like the ability to tell the time", "tokens": [286, 643, 746, 411, 264, 3485, 281, 980, 264, 565], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1799, "seek": 439412, "start": 4420.4, "end": 4423.72, "text": " it's in dispatch, or the ability to work with URLs.", "tokens": [309, 311, 294, 36729, 11, 420, 264, 3485, 281, 589, 365, 43267, 13], "temperature": 0.0, "avg_logprob": -0.12911013941611013, "compression_ratio": 1.766990291262136, "no_speech_prob": 3.119082248304039e-05}, {"id": 1800, "seek": 442372, "start": 4423.72, "end": 4426.16, "text": " And so know that foundation is there.", "tokens": [400, 370, 458, 300, 7030, 307, 456, 13], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1801, "seek": 442372, "start": 4426.16, "end": 4428.72, "text": " And generally speaking, I always just import it", "tokens": [400, 5101, 4124, 11, 286, 1009, 445, 974, 309], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1802, "seek": 442372, "start": 4428.72, "end": 4430.12, "text": " first thing, right?", "tokens": [700, 551, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1803, "seek": 442372, "start": 4430.12, "end": 4431.320000000001, "text": " Because there's a lot of stuff you want,", "tokens": [1436, 456, 311, 257, 688, 295, 1507, 291, 528, 11], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1804, "seek": 442372, "start": 4431.320000000001, "end": 4433.360000000001, "text": " we'll live there, and if you forget to import it,", "tokens": [321, 603, 1621, 456, 11, 293, 498, 291, 2870, 281, 974, 309, 11], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1805, "seek": 442372, "start": 4433.360000000001, "end": 4434.92, "text": " it won't appear in your tab completion,", "tokens": [309, 1582, 380, 4204, 294, 428, 4421, 19372, 11], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1806, "seek": 442372, "start": 4434.92, "end": 4436.76, "text": " and you'll get errors.", "tokens": [293, 291, 603, 483, 13603, 13], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1807, "seek": 442372, "start": 4436.76, "end": 4440.12, "text": " But also, when you find clunky foundation APIs,", "tokens": [583, 611, 11, 562, 291, 915, 596, 25837, 7030, 21445, 11], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1808, "seek": 442372, "start": 4440.12, "end": 4440.96, "text": " which is most of them-", "tokens": [597, 307, 881, 295, 552, 12], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1809, "seek": 442372, "start": 4440.96, "end": 4442.360000000001, "text": " There's usually a better one out there.", "tokens": [821, 311, 2673, 257, 1101, 472, 484, 456, 13], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1810, "seek": 442372, "start": 4442.360000000001, "end": 4444.72, "text": " Or write your own little wrapper on top.", "tokens": [1610, 2464, 428, 1065, 707, 46906, 322, 1192, 13], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1811, "seek": 442372, "start": 4444.72, "end": 4445.84, "text": " Anyway, so once you've done that,", "tokens": [5684, 11, 370, 1564, 291, 600, 1096, 300, 11], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1812, "seek": 442372, "start": 4445.84, "end": 4448.96, "text": " now we've got our own JSON serialization thing.", "tokens": [586, 321, 600, 658, 527, 1065, 31828, 17436, 2144, 551, 13], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1813, "seek": 442372, "start": 4448.96, "end": 4451.08, "text": " We can grab our Drupal notebook,", "tokens": [492, 393, 4444, 527, 413, 11976, 304, 21060, 11], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1814, "seek": 442372, "start": 4451.08, "end": 4453.08, "text": " we can find ourselves, we can export them.", "tokens": [321, 393, 915, 4175, 11, 321, 393, 10725, 552, 13], "temperature": 0.0, "avg_logprob": -0.10880859788641872, "compression_ratio": 1.683431952662722, "no_speech_prob": 4.538379653240554e-05}, {"id": 1815, "seek": 445308, "start": 4453.08, "end": 4456.5199999999995, "text": " And now, we can just do the same thing that we do in Python.", "tokens": [400, 586, 11, 321, 393, 445, 360, 264, 912, 551, 300, 321, 360, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.1335511292730059, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0284536074323114e-05}, {"id": 1816, "seek": 445308, "start": 4456.5199999999995, "end": 4459.2, "text": " And we now have a nice little module exporter", "tokens": [400, 321, 586, 362, 257, 1481, 707, 10088, 1278, 6122], "temperature": 0.0, "avg_logprob": -0.1335511292730059, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0284536074323114e-05}, {"id": 1817, "seek": 445308, "start": 4459.2, "end": 4460.16, "text": " that we can use.", "tokens": [300, 321, 393, 764, 13], "temperature": 0.0, "avg_logprob": -0.1335511292730059, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0284536074323114e-05}, {"id": 1818, "seek": 445308, "start": 4460.16, "end": 4461.0, "text": " That's cool.", "tokens": [663, 311, 1627, 13], "temperature": 0.0, "avg_logprob": -0.1335511292730059, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0284536074323114e-05}, {"id": 1819, "seek": 445308, "start": 4461.0, "end": 4464.24, "text": " We have a question on the time function.", "tokens": [492, 362, 257, 1168, 322, 264, 565, 2445, 13], "temperature": 0.0, "avg_logprob": -0.1335511292730059, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0284536074323114e-05}, {"id": 1820, "seek": 445308, "start": 4464.24, "end": 4467.08, "text": " How do we know that calling F parentheses", "tokens": [1012, 360, 321, 458, 300, 5141, 479, 34153], "temperature": 0.0, "avg_logprob": -0.1335511292730059, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0284536074323114e-05}, {"id": 1821, "seek": 445308, "start": 4467.08, "end": 4469.08, "text": " is not optimized away in this case,", "tokens": [307, 406, 26941, 1314, 294, 341, 1389, 11], "temperature": 0.0, "avg_logprob": -0.1335511292730059, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0284536074323114e-05}, {"id": 1822, "seek": 445308, "start": 4469.08, "end": 4472.2, "text": " because of a lack of side effects detected by the compiler?", "tokens": [570, 295, 257, 5011, 295, 1252, 5065, 21896, 538, 264, 31958, 30], "temperature": 0.0, "avg_logprob": -0.1335511292730059, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0284536074323114e-05}, {"id": 1823, "seek": 445308, "start": 4474.76, "end": 4479.24, "text": " Generally, so that's actually a great question.", "tokens": [21082, 11, 370, 300, 311, 767, 257, 869, 1168, 13], "temperature": 0.0, "avg_logprob": -0.1335511292730059, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0284536074323114e-05}, {"id": 1824, "seek": 445308, "start": 4480.72, "end": 4481.5599999999995, "text": " In the case of the workbook,", "tokens": [682, 264, 1389, 295, 264, 589, 2939, 11], "temperature": 0.0, "avg_logprob": -0.1335511292730059, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.0284536074323114e-05}, {"id": 1825, "seek": 448156, "start": 4481.56, "end": 4484.64, "text": " I don't think there's no cross workbook optimization", "tokens": [286, 500, 380, 519, 456, 311, 572, 3278, 589, 2939, 19618], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1826, "seek": 448156, "start": 4484.64, "end": 4486.080000000001, "text": " going on, so that's one thing.", "tokens": [516, 322, 11, 370, 300, 311, 472, 551, 13], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1827, "seek": 448156, "start": 4487.96, "end": 4489.56, "text": " I don't know if there's a really good,", "tokens": [286, 500, 380, 458, 498, 456, 311, 257, 534, 665, 11], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1828, "seek": 448156, "start": 4489.56, "end": 4490.96, "text": " wait, that's a good question.", "tokens": [1699, 11, 300, 311, 257, 665, 1168, 13], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1829, "seek": 448156, "start": 4492.080000000001, "end": 4493.400000000001, "text": " What I recommend doing is put something", "tokens": [708, 286, 2748, 884, 307, 829, 746], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1830, "seek": 448156, "start": 4493.400000000001, "end": 4495.400000000001, "text": " that's not trivial inside the thing you're timing.", "tokens": [300, 311, 406, 26703, 1854, 264, 551, 291, 434, 10822, 13], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1831, "seek": 448156, "start": 4495.400000000001, "end": 4497.88, "text": " And so if you're doing, we'll show you later,", "tokens": [400, 370, 498, 291, 434, 884, 11, 321, 603, 855, 291, 1780, 11], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1832, "seek": 448156, "start": 4497.88, "end": 4500.280000000001, "text": " launching a CUDA kernel to do a matrix multiplication,", "tokens": [18354, 257, 29777, 7509, 28256, 281, 360, 257, 8141, 27290, 11], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1833, "seek": 448156, "start": 4500.280000000001, "end": 4501.52, "text": " for example, and that's not something", "tokens": [337, 1365, 11, 293, 300, 311, 406, 746], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1834, "seek": 448156, "start": 4501.52, "end": 4503.160000000001, "text": " that gets optimized away.", "tokens": [300, 2170, 26941, 1314, 13], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1835, "seek": 448156, "start": 4503.160000000001, "end": 4505.400000000001, "text": " You can also get the value into the closure", "tokens": [509, 393, 611, 483, 264, 2158, 666, 264, 24653], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1836, "seek": 448156, "start": 4505.400000000001, "end": 4506.96, "text": " and then take the value back out.", "tokens": [293, 550, 747, 264, 2158, 646, 484, 13], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1837, "seek": 448156, "start": 4506.96, "end": 4508.76, "text": " So there's different things that you can do like that.", "tokens": [407, 456, 311, 819, 721, 300, 291, 393, 360, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1838, "seek": 448156, "start": 4508.76, "end": 4510.8, "text": " Yeah, sometimes when I was doing this stuff for base math,", "tokens": [865, 11, 2171, 562, 286, 390, 884, 341, 1507, 337, 3096, 5221, 11], "temperature": 0.0, "avg_logprob": -0.1400582876550146, "compression_ratio": 1.7647058823529411, "no_speech_prob": 9.815275006985757e-06}, {"id": 1839, "seek": 451080, "start": 4510.8, "end": 4512.320000000001, "text": " I would just add a print inside the thing", "tokens": [286, 576, 445, 909, 257, 4482, 1854, 264, 551], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1840, "seek": 451080, "start": 4512.320000000001, "end": 4514.84, "text": " that I was timing to force it to be calculated.", "tokens": [300, 286, 390, 10822, 281, 3464, 309, 281, 312, 15598, 13], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1841, "seek": 451080, "start": 4514.84, "end": 4516.64, "text": " And one of the other things that will happen with GPUs", "tokens": [400, 472, 295, 264, 661, 721, 300, 486, 1051, 365, 18407, 82], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1842, "seek": 451080, "start": 4516.64, "end": 4518.320000000001, "text": " is GPUs run asynchronously,", "tokens": [307, 18407, 82, 1190, 42642, 5098, 11], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1843, "seek": 451080, "start": 4518.320000000001, "end": 4520.24, "text": " and so you need to force a GPU sync.", "tokens": [293, 370, 291, 643, 281, 3464, 257, 18407, 20271, 13], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1844, "seek": 451080, "start": 4520.24, "end": 4522.400000000001, "text": " We'll show you how to do that in a minute.", "tokens": [492, 603, 855, 291, 577, 281, 360, 300, 294, 257, 3456, 13], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1845, "seek": 451080, "start": 4523.56, "end": 4525.76, "text": " So anyway, so coming back to this,", "tokens": [407, 4033, 11, 370, 1348, 646, 281, 341, 11], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1846, "seek": 451080, "start": 4525.76, "end": 4527.64, "text": " so we showed you how to build Matmul,", "tokens": [370, 321, 4712, 291, 577, 281, 1322, 6789, 76, 425, 11], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1847, "seek": 451080, "start": 4527.64, "end": 4529.2, "text": " we showed you how to build time.", "tokens": [321, 4712, 291, 577, 281, 1322, 565, 13], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1848, "seek": 451080, "start": 4529.2, "end": 4530.8, "text": " So this Matmul is working on arrays,", "tokens": [407, 341, 6789, 76, 425, 307, 1364, 322, 41011, 11], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1849, "seek": 451080, "start": 4530.8, "end": 4532.56, "text": " and this is pretty fast, we talked about,", "tokens": [293, 341, 307, 1238, 2370, 11, 321, 2825, 466, 11], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1850, "seek": 451080, "start": 4532.56, "end": 4536.68, "text": " it's 0.13 seconds, but array in Swift is safe.", "tokens": [309, 311, 1958, 13, 7668, 3949, 11, 457, 10225, 294, 25539, 307, 3273, 13], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1851, "seek": 451080, "start": 4536.68, "end": 4540.0, "text": " And so what's happening is that every time you index", "tokens": [400, 370, 437, 311, 2737, 307, 300, 633, 565, 291, 8186], "temperature": 0.0, "avg_logprob": -0.1373013037222403, "compression_ratio": 1.7722772277227723, "no_speech_prob": 2.6685000193538144e-05}, {"id": 1852, "seek": 454000, "start": 4540.0, "end": 4542.0, "text": " into an array, it does a check to make sure", "tokens": [666, 364, 10225, 11, 309, 775, 257, 1520, 281, 652, 988], "temperature": 0.0, "avg_logprob": -0.09934707398110247, "compression_ratio": 1.7288732394366197, "no_speech_prob": 2.6841230464924593e-06}, {"id": 1853, "seek": 454000, "start": 4542.0, "end": 4544.52, "text": " that the index that you're computing is in bounds.", "tokens": [300, 264, 8186, 300, 291, 434, 15866, 307, 294, 29905, 13], "temperature": 0.0, "avg_logprob": -0.09934707398110247, "compression_ratio": 1.7288732394366197, "no_speech_prob": 2.6841230464924593e-06}, {"id": 1854, "seek": 454000, "start": 4544.52, "end": 4546.2, "text": " And so this is actually doing a lot of work", "tokens": [400, 370, 341, 307, 767, 884, 257, 688, 295, 589], "temperature": 0.0, "avg_logprob": -0.09934707398110247, "compression_ratio": 1.7288732394366197, "no_speech_prob": 2.6841230464924593e-06}, {"id": 1855, "seek": 454000, "start": 4546.2, "end": 4549.32, "text": " that you would not need to do if you're in C.", "tokens": [300, 291, 576, 406, 643, 281, 360, 498, 291, 434, 294, 383, 13], "temperature": 0.0, "avg_logprob": -0.09934707398110247, "compression_ratio": 1.7288732394366197, "no_speech_prob": 2.6841230464924593e-06}, {"id": 1856, "seek": 454000, "start": 4549.32, "end": 4551.48, "text": " And so one of the other really cool things about Swift", "tokens": [400, 370, 472, 295, 264, 661, 534, 1627, 721, 466, 25539], "temperature": 0.0, "avg_logprob": -0.09934707398110247, "compression_ratio": 1.7288732394366197, "no_speech_prob": 2.6841230464924593e-06}, {"id": 1857, "seek": 454000, "start": 4551.48, "end": 4554.48, "text": " is that you can actually go all the way down", "tokens": [307, 300, 291, 393, 767, 352, 439, 264, 636, 760], "temperature": 0.0, "avg_logprob": -0.09934707398110247, "compression_ratio": 1.7288732394366197, "no_speech_prob": 2.6841230464924593e-06}, {"id": 1858, "seek": 454000, "start": 4554.48, "end": 4556.32, "text": " to the bare metal and do things,", "tokens": [281, 264, 6949, 5760, 293, 360, 721, 11], "temperature": 0.0, "avg_logprob": -0.09934707398110247, "compression_ratio": 1.7288732394366197, "no_speech_prob": 2.6841230464924593e-06}, {"id": 1859, "seek": 454000, "start": 4556.32, "end": 4561.32, "text": " the unsafe, nasty, awesome C way if you want to,", "tokens": [264, 35948, 11, 17923, 11, 3476, 383, 636, 498, 291, 528, 281, 11], "temperature": 0.0, "avg_logprob": -0.09934707398110247, "compression_ratio": 1.7288732394366197, "no_speech_prob": 2.6841230464924593e-06}, {"id": 1860, "seek": 454000, "start": 4561.4, "end": 4562.96, "text": " to get even a little bit more performance.", "tokens": [281, 483, 754, 257, 707, 857, 544, 3389, 13], "temperature": 0.0, "avg_logprob": -0.09934707398110247, "compression_ratio": 1.7288732394366197, "no_speech_prob": 2.6841230464924593e-06}, {"id": 1861, "seek": 454000, "start": 4562.96, "end": 4565.96, "text": " And so here, sorry, I forgot to change this back,", "tokens": [400, 370, 510, 11, 2597, 11, 286, 5298, 281, 1319, 341, 646, 11], "temperature": 0.0, "avg_logprob": -0.09934707398110247, "compression_ratio": 1.7288732394366197, "no_speech_prob": 2.6841230464924593e-06}, {"id": 1862, "seek": 454000, "start": 4565.96, "end": 4567.96, "text": " but we have a couple of arrays,", "tokens": [457, 321, 362, 257, 1916, 295, 41011, 11], "temperature": 0.0, "avg_logprob": -0.09934707398110247, "compression_ratio": 1.7288732394366197, "no_speech_prob": 2.6841230464924593e-06}, {"id": 1863, "seek": 456796, "start": 4567.96, "end": 4570.8, "text": " and so we have the exact same signature that we did before", "tokens": [293, 370, 321, 362, 264, 1900, 912, 13397, 300, 321, 630, 949], "temperature": 0.0, "avg_logprob": -0.10013784567515055, "compression_ratio": 1.764, "no_speech_prob": 5.682157279807143e-06}, {"id": 1864, "seek": 456796, "start": 4570.8, "end": 4573.24, "text": " where we take in two arrays and we have our dimensions.", "tokens": [689, 321, 747, 294, 732, 41011, 293, 321, 362, 527, 12819, 13], "temperature": 0.0, "avg_logprob": -0.10013784567515055, "compression_ratio": 1.764, "no_speech_prob": 5.682157279807143e-06}, {"id": 1865, "seek": 456796, "start": 4573.24, "end": 4576.16, "text": " And so what we're going to do is to optimize storing", "tokens": [400, 370, 437, 321, 434, 516, 281, 360, 307, 281, 19719, 26085], "temperature": 0.0, "avg_logprob": -0.10013784567515055, "compression_ratio": 1.764, "no_speech_prob": 5.682157279807143e-06}, {"id": 1866, "seek": 456796, "start": 4576.16, "end": 4578.6, "text": " into that result array, we're gonna say,", "tokens": [666, 300, 1874, 10225, 11, 321, 434, 799, 584, 11], "temperature": 0.0, "avg_logprob": -0.10013784567515055, "compression_ratio": 1.764, "no_speech_prob": 5.682157279807143e-06}, {"id": 1867, "seek": 456796, "start": 4578.6, "end": 4582.92, "text": " give me an unsafe mutable buffer pointer into that array.", "tokens": [976, 385, 364, 35948, 5839, 712, 21762, 23918, 666, 300, 10225, 13], "temperature": 0.0, "avg_logprob": -0.10013784567515055, "compression_ratio": 1.764, "no_speech_prob": 5.682157279807143e-06}, {"id": 1868, "seek": 456796, "start": 4582.92, "end": 4585.24, "text": " And it's unsafe, it's verbose,", "tokens": [400, 309, 311, 35948, 11, 309, 311, 9595, 541, 11], "temperature": 0.0, "avg_logprob": -0.10013784567515055, "compression_ratio": 1.764, "no_speech_prob": 5.682157279807143e-06}, {"id": 1869, "seek": 456796, "start": 4585.24, "end": 4589.28, "text": " it has red warning signs all over because it's unsafe,", "tokens": [309, 575, 2182, 9164, 7880, 439, 670, 570, 309, 311, 35948, 11], "temperature": 0.0, "avg_logprob": -0.10013784567515055, "compression_ratio": 1.764, "no_speech_prob": 5.682157279807143e-06}, {"id": 1870, "seek": 456796, "start": 4589.28, "end": 4592.84, "text": " but with almost no code change,", "tokens": [457, 365, 1920, 572, 3089, 1319, 11], "temperature": 0.0, "avg_logprob": -0.10013784567515055, "compression_ratio": 1.764, "no_speech_prob": 5.682157279807143e-06}, {"id": 1871, "seek": 456796, "start": 4592.84, "end": 4595.56, "text": " now we're able to get something that runs twice as fast.", "tokens": [586, 321, 434, 1075, 281, 483, 746, 300, 6676, 6091, 382, 2370, 13], "temperature": 0.0, "avg_logprob": -0.10013784567515055, "compression_ratio": 1.764, "no_speech_prob": 5.682157279807143e-06}, {"id": 1872, "seek": 459556, "start": 4595.56, "end": 4600.200000000001, "text": " And so here's MatMul, and now it runs at 0.07 milliseconds,", "tokens": [400, 370, 510, 311, 6789, 44, 425, 11, 293, 586, 309, 6676, 412, 1958, 13, 16231, 34184, 11], "temperature": 0.0, "avg_logprob": -0.15464958651312466, "compression_ratio": 1.6130268199233717, "no_speech_prob": 7.182889021351002e-06}, {"id": 1873, "seek": 459556, "start": 4600.200000000001, "end": 4602.92, "text": " which is even faster, which really is a performance of C.", "tokens": [597, 307, 754, 4663, 11, 597, 534, 307, 257, 3389, 295, 383, 13], "temperature": 0.0, "avg_logprob": -0.15464958651312466, "compression_ratio": 1.6130268199233717, "no_speech_prob": 7.182889021351002e-06}, {"id": 1874, "seek": 459556, "start": 4602.92, "end": 4604.200000000001, "text": " And this is pretty cool.", "tokens": [400, 341, 307, 1238, 1627, 13], "temperature": 0.0, "avg_logprob": -0.15464958651312466, "compression_ratio": 1.6130268199233717, "no_speech_prob": 7.182889021351002e-06}, {"id": 1875, "seek": 459556, "start": 4604.200000000001, "end": 4607.72, "text": " And something I found with BaseMath is,", "tokens": [400, 746, 286, 1352, 365, 21054, 44, 998, 307, 11], "temperature": 0.0, "avg_logprob": -0.15464958651312466, "compression_ratio": 1.6130268199233717, "no_speech_prob": 7.182889021351002e-06}, {"id": 1876, "seek": 459556, "start": 4607.72, "end": 4611.84, "text": " sometimes these differences are four or five times faster", "tokens": [2171, 613, 7300, 366, 1451, 420, 1732, 1413, 4663], "temperature": 0.0, "avg_logprob": -0.15464958651312466, "compression_ratio": 1.6130268199233717, "no_speech_prob": 7.182889021351002e-06}, {"id": 1877, "seek": 459556, "start": 4611.84, "end": 4613.280000000001, "text": " because making something a pointer", "tokens": [570, 1455, 746, 257, 23918], "temperature": 0.0, "avg_logprob": -0.15464958651312466, "compression_ratio": 1.6130268199233717, "no_speech_prob": 7.182889021351002e-06}, {"id": 1878, "seek": 459556, "start": 4613.280000000001, "end": 4615.72, "text": " allows it to use 70 vectorization.", "tokens": [4045, 309, 281, 764, 5285, 8062, 2144, 13], "temperature": 0.0, "avg_logprob": -0.15464958651312466, "compression_ratio": 1.6130268199233717, "no_speech_prob": 7.182889021351002e-06}, {"id": 1879, "seek": 459556, "start": 4615.72, "end": 4618.04, "text": " So it's not a minor tweak,", "tokens": [407, 309, 311, 406, 257, 6696, 29879, 11], "temperature": 0.0, "avg_logprob": -0.15464958651312466, "compression_ratio": 1.6130268199233717, "no_speech_prob": 7.182889021351002e-06}, {"id": 1880, "seek": 459556, "start": 4618.04, "end": 4619.92, "text": " you can get super fast performance.", "tokens": [291, 393, 483, 1687, 2370, 3389, 13], "temperature": 0.0, "avg_logprob": -0.15464958651312466, "compression_ratio": 1.6130268199233717, "no_speech_prob": 7.182889021351002e-06}, {"id": 1881, "seek": 459556, "start": 4619.92, "end": 4621.360000000001, "text": " But the thing I want to emphasize at this point", "tokens": [583, 264, 551, 286, 528, 281, 16078, 412, 341, 935], "temperature": 0.0, "avg_logprob": -0.15464958651312466, "compression_ratio": 1.6130268199233717, "no_speech_prob": 7.182889021351002e-06}, {"id": 1882, "seek": 462136, "start": 4621.36, "end": 4625.639999999999, "text": " is that this is like a super low level geeky thing", "tokens": [307, 300, 341, 307, 411, 257, 1687, 2295, 1496, 36162, 88, 551], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1883, "seek": 462136, "start": 4625.639999999999, "end": 4627.5199999999995, "text": " that not everybody should do.", "tokens": [300, 406, 2201, 820, 360, 13], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1884, "seek": 462136, "start": 4627.5199999999995, "end": 4631.08, "text": " This is something that exists because at certain points", "tokens": [639, 307, 746, 300, 8198, 570, 412, 1629, 2793], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1885, "seek": 462136, "start": 4631.08, "end": 4632.5199999999995, "text": " in your career or your journey,", "tokens": [294, 428, 3988, 420, 428, 4671, 11], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1886, "seek": 462136, "start": 4632.5199999999995, "end": 4634.16, "text": " you may find that it's useful,", "tokens": [291, 815, 915, 300, 309, 311, 4420, 11], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1887, "seek": 462136, "start": 4634.16, "end": 4636.96, "text": " or you may find something that somebody else wrote", "tokens": [420, 291, 815, 915, 746, 300, 2618, 1646, 4114], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1888, "seek": 462136, "start": 4636.96, "end": 4639.08, "text": " and it going twice as fast as otherwise would", "tokens": [293, 309, 516, 6091, 382, 2370, 382, 5911, 576], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1889, "seek": 462136, "start": 4639.08, "end": 4640.36, "text": " is a pretty big deal,", "tokens": [307, 257, 1238, 955, 2028, 11], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1890, "seek": 462136, "start": 4640.36, "end": 4641.92, "text": " because it makes you twice as productive.", "tokens": [570, 309, 1669, 291, 6091, 382, 13304, 13], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1891, "seek": 462136, "start": 4641.92, "end": 4644.28, "text": " But usually you're not working at this level,", "tokens": [583, 2673, 291, 434, 406, 1364, 412, 341, 1496, 11], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1892, "seek": 462136, "start": 4644.28, "end": 4645.48, "text": " layers are a good thing.", "tokens": [7914, 366, 257, 665, 551, 13], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1893, "seek": 462136, "start": 4646.88, "end": 4650.12, "text": " If you want to go like super deep down the rabbit hole,", "tokens": [759, 291, 528, 281, 352, 411, 1687, 2452, 760, 264, 19509, 5458, 11], "temperature": 0.0, "avg_logprob": -0.1307803604953973, "compression_ratio": 1.7581227436823104, "no_speech_prob": 9.72131488197192e-07}, {"id": 1894, "seek": 465012, "start": 4650.12, "end": 4652.92, "text": " unsafe pointer and unsafe mutable buffer pointer", "tokens": [35948, 23918, 293, 35948, 5839, 712, 21762, 23918], "temperature": 0.0, "avg_logprob": -0.11559962309323825, "compression_ratio": 1.6224066390041494, "no_speech_prob": 1.8921427908935584e-05}, {"id": 1895, "seek": 465012, "start": 4652.92, "end": 4654.599999999999, "text": " and all these things are also Swift libraries", "tokens": [293, 439, 613, 721, 366, 611, 25539, 15148], "temperature": 0.0, "avg_logprob": -0.11559962309323825, "compression_ratio": 1.6224066390041494, "no_speech_prob": 1.8921427908935584e-05}, {"id": 1896, "seek": 465012, "start": 4654.599999999999, "end": 4656.16, "text": " and you can go see their implementations too.", "tokens": [293, 291, 393, 352, 536, 641, 4445, 763, 886, 13], "temperature": 0.0, "avg_logprob": -0.11559962309323825, "compression_ratio": 1.6224066390041494, "no_speech_prob": 1.8921427908935584e-05}, {"id": 1897, "seek": 465012, "start": 4656.16, "end": 4658.04, "text": " And those are implemented in terms of the LLV magic,", "tokens": [400, 729, 366, 12270, 294, 2115, 295, 264, 441, 43, 53, 5585, 11], "temperature": 0.0, "avg_logprob": -0.11559962309323825, "compression_ratio": 1.6224066390041494, "no_speech_prob": 1.8921427908935584e-05}, {"id": 1898, "seek": 465012, "start": 4658.04, "end": 4658.96, "text": " just like float is.", "tokens": [445, 411, 15706, 307, 13], "temperature": 0.0, "avg_logprob": -0.11559962309323825, "compression_ratio": 1.6224066390041494, "no_speech_prob": 1.8921427908935584e-05}, {"id": 1899, "seek": 465012, "start": 4660.32, "end": 4665.32, "text": " So at this point, let's skip over more C stuff", "tokens": [407, 412, 341, 935, 11, 718, 311, 10023, 670, 544, 383, 1507], "temperature": 0.0, "avg_logprob": -0.11559962309323825, "compression_ratio": 1.6224066390041494, "no_speech_prob": 1.8921427908935584e-05}, {"id": 1900, "seek": 465012, "start": 4665.32, "end": 4667.8, "text": " and jump down to working with tensor.", "tokens": [293, 3012, 760, 281, 1364, 365, 40863, 13], "temperature": 0.0, "avg_logprob": -0.11559962309323825, "compression_ratio": 1.6224066390041494, "no_speech_prob": 1.8921427908935584e-05}, {"id": 1901, "seek": 465012, "start": 4667.8, "end": 4672.24, "text": " So we've got a matrix multiplication working on arrays", "tokens": [407, 321, 600, 658, 257, 8141, 27290, 1364, 322, 41011], "temperature": 0.0, "avg_logprob": -0.11559962309323825, "compression_ratio": 1.6224066390041494, "no_speech_prob": 1.8921427908935584e-05}, {"id": 1902, "seek": 465012, "start": 4672.24, "end": 4676.08, "text": " and floats, but we also have tensors.", "tokens": [293, 37878, 11, 457, 321, 611, 362, 10688, 830, 13], "temperature": 0.0, "avg_logprob": -0.11559962309323825, "compression_ratio": 1.6224066390041494, "no_speech_prob": 1.8921427908935584e-05}, {"id": 1903, "seek": 467608, "start": 4676.08, "end": 4680.24, "text": " And so when we talked about tensor and matmul", "tokens": [400, 370, 562, 321, 2825, 466, 40863, 293, 3803, 76, 425], "temperature": 0.0, "avg_logprob": -0.13414575245754778, "compression_ratio": 1.694980694980695, "no_speech_prob": 2.930057053163182e-05}, {"id": 1904, "seek": 467608, "start": 4680.24, "end": 4681.5599999999995, "text": " in the PyTorch context,", "tokens": [294, 264, 9953, 51, 284, 339, 4319, 11], "temperature": 0.0, "avg_logprob": -0.13414575245754778, "compression_ratio": 1.694980694980695, "no_speech_prob": 2.930057053163182e-05}, {"id": 1905, "seek": 467608, "start": 4681.5599999999995, "end": 4685.16, "text": " you start out by using the tensor abstraction", "tokens": [291, 722, 484, 538, 1228, 264, 40863, 37765], "temperature": 0.0, "avg_logprob": -0.13414575245754778, "compression_ratio": 1.694980694980695, "no_speech_prob": 2.930057053163182e-05}, {"id": 1906, "seek": 467608, "start": 4685.16, "end": 4689.0, "text": " as the thing that was the container for the matmul.", "tokens": [382, 264, 551, 300, 390, 264, 10129, 337, 264, 3803, 76, 425, 13], "temperature": 0.0, "avg_logprob": -0.13414575245754778, "compression_ratio": 1.694980694980695, "no_speech_prob": 2.930057053163182e-05}, {"id": 1907, "seek": 467608, "start": 4689.0, "end": 4690.64, "text": " So let's talk a little bit about how tensor works,", "tokens": [407, 718, 311, 751, 257, 707, 857, 466, 577, 40863, 1985, 11], "temperature": 0.0, "avg_logprob": -0.13414575245754778, "compression_ratio": 1.694980694980695, "no_speech_prob": 2.930057053163182e-05}, {"id": 1908, "seek": 467608, "start": 4690.64, "end": 4692.32, "text": " because this is the first really", "tokens": [570, 341, 307, 264, 700, 534], "temperature": 0.0, "avg_logprob": -0.13414575245754778, "compression_ratio": 1.694980694980695, "no_speech_prob": 2.930057053163182e-05}, {"id": 1909, "seek": 467608, "start": 4692.32, "end": 4693.88, "text": " so for TensorFlow piece of this.", "tokens": [370, 337, 37624, 2522, 295, 341, 13], "temperature": 0.0, "avg_logprob": -0.13414575245754778, "compression_ratio": 1.694980694980695, "no_speech_prob": 2.930057053163182e-05}, {"id": 1910, "seek": 467608, "start": 4694.76, "end": 4697.44, "text": " Tensors are type and tensor can have multiple", "tokens": [314, 694, 830, 366, 2010, 293, 40863, 393, 362, 3866], "temperature": 0.0, "avg_logprob": -0.13414575245754778, "compression_ratio": 1.694980694980695, "no_speech_prob": 2.930057053163182e-05}, {"id": 1911, "seek": 467608, "start": 4697.44, "end": 4698.92, "text": " different elements in it.", "tokens": [819, 4959, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.13414575245754778, "compression_ratio": 1.694980694980695, "no_speech_prob": 2.930057053163182e-05}, {"id": 1912, "seek": 467608, "start": 4698.92, "end": 4699.84, "text": " Like we talked about before,", "tokens": [1743, 321, 2825, 466, 949, 11], "temperature": 0.0, "avg_logprob": -0.13414575245754778, "compression_ratio": 1.694980694980695, "no_speech_prob": 2.930057053163182e-05}, {"id": 1913, "seek": 467608, "start": 4699.84, "end": 4703.0, "text": " you can create one with zeros or with random numbers.", "tokens": [291, 393, 1884, 472, 365, 35193, 420, 365, 4974, 3547, 13], "temperature": 0.0, "avg_logprob": -0.13414575245754778, "compression_ratio": 1.694980694980695, "no_speech_prob": 2.930057053163182e-05}, {"id": 1914, "seek": 470300, "start": 4703.0, "end": 4706.48, "text": " And the nice thing about tensors is that they carry a shape", "tokens": [400, 264, 1481, 551, 466, 10688, 830, 307, 300, 436, 3985, 257, 3909], "temperature": 0.0, "avg_logprob": -0.10211730359205559, "compression_ratio": 1.8688524590163935, "no_speech_prob": 6.747248335159384e-06}, {"id": 1915, "seek": 470300, "start": 4706.48, "end": 4707.32, "text": " just like you'd expect.", "tokens": [445, 411, 291, 1116, 2066, 13], "temperature": 0.0, "avg_logprob": -0.10211730359205559, "compression_ratio": 1.8688524590163935, "no_speech_prob": 6.747248335159384e-06}, {"id": 1916, "seek": 470300, "start": 4707.32, "end": 4709.48, "text": " And so you can get it with a dot shape.", "tokens": [400, 370, 291, 393, 483, 309, 365, 257, 5893, 3909, 13], "temperature": 0.0, "avg_logprob": -0.10211730359205559, "compression_ratio": 1.8688524590163935, "no_speech_prob": 6.747248335159384e-06}, {"id": 1917, "seek": 470300, "start": 4709.48, "end": 4712.12, "text": " So here you can see we have a five by seven 84,", "tokens": [407, 510, 291, 393, 536, 321, 362, 257, 1732, 538, 3407, 29018, 11], "temperature": 0.0, "avg_logprob": -0.10211730359205559, "compression_ratio": 1.8688524590163935, "no_speech_prob": 6.747248335159384e-06}, {"id": 1918, "seek": 470300, "start": 4712.12, "end": 4713.6, "text": " just like you might expect.", "tokens": [445, 411, 291, 1062, 2066, 13], "temperature": 0.0, "avg_logprob": -0.10211730359205559, "compression_ratio": 1.8688524590163935, "no_speech_prob": 6.747248335159384e-06}, {"id": 1919, "seek": 470300, "start": 4713.6, "end": 4716.72, "text": " And here we have a two dimensional tensor", "tokens": [400, 510, 321, 362, 257, 732, 18795, 40863], "temperature": 0.0, "avg_logprob": -0.10211730359205559, "compression_ratio": 1.8688524590163935, "no_speech_prob": 6.747248335159384e-06}, {"id": 1920, "seek": 470300, "start": 4716.72, "end": 4718.92, "text": " and you can print it out and it's a two dimensional tensor,", "tokens": [293, 291, 393, 4482, 309, 484, 293, 309, 311, 257, 732, 18795, 40863, 11], "temperature": 0.0, "avg_logprob": -0.10211730359205559, "compression_ratio": 1.8688524590163935, "no_speech_prob": 6.747248335159384e-06}, {"id": 1921, "seek": 470300, "start": 4718.92, "end": 4721.24, "text": " just like you would kind of expect.", "tokens": [445, 411, 291, 576, 733, 295, 2066, 13], "temperature": 0.0, "avg_logprob": -0.10211730359205559, "compression_ratio": 1.8688524590163935, "no_speech_prob": 6.747248335159384e-06}, {"id": 1922, "seek": 470300, "start": 4722.24, "end": 4726.6, "text": " Python has the at operator to do matmuls of two tensors.", "tokens": [15329, 575, 264, 412, 12973, 281, 360, 3803, 76, 9468, 295, 732, 10688, 830, 13], "temperature": 0.0, "avg_logprob": -0.10211730359205559, "compression_ratio": 1.8688524590163935, "no_speech_prob": 6.747248335159384e-06}, {"id": 1923, "seek": 470300, "start": 4726.6, "end": 4727.64, "text": " Swift has the same thing,", "tokens": [25539, 575, 264, 912, 551, 11], "temperature": 0.0, "avg_logprob": -0.10211730359205559, "compression_ratio": 1.8688524590163935, "no_speech_prob": 6.747248335159384e-06}, {"id": 1924, "seek": 470300, "start": 4727.64, "end": 4729.96, "text": " but it uses the nice Unicode thing.", "tokens": [457, 309, 4960, 264, 1481, 1156, 299, 1429, 551, 13], "temperature": 0.0, "avg_logprob": -0.10211730359205559, "compression_ratio": 1.8688524590163935, "no_speech_prob": 6.747248335159384e-06}, {"id": 1925, "seek": 472996, "start": 4729.96, "end": 4732.52, "text": " There's a easy way to type this if you're on a Mac", "tokens": [821, 311, 257, 1858, 636, 281, 2010, 341, 498, 291, 434, 322, 257, 5707], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1926, "seek": 472996, "start": 4732.52, "end": 4735.24, "text": " or if you're using the compose key on windows,", "tokens": [420, 498, 291, 434, 1228, 264, 35925, 2141, 322, 9309, 11], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1927, "seek": 472996, "start": 4735.24, "end": 4737.96, "text": " or if you don't like Unicode, that's also totally cool.", "tokens": [420, 498, 291, 500, 380, 411, 1156, 299, 1429, 11, 300, 311, 611, 3879, 1627, 13], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1928, "seek": 472996, "start": 4737.96, "end": 4740.52, "text": " You can just use the matmul function and just spell it out.", "tokens": [509, 393, 445, 764, 264, 3803, 76, 425, 2445, 293, 445, 9827, 309, 484, 13], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1929, "seek": 472996, "start": 4740.52, "end": 4743.4, "text": " And so, this is an example of Swift just wanting to work", "tokens": [400, 370, 11, 341, 307, 364, 1365, 295, 25539, 445, 7935, 281, 589], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1930, "seek": 472996, "start": 4743.4, "end": 4744.68, "text": " the way you want to work.", "tokens": [264, 636, 291, 528, 281, 589, 13], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1931, "seek": 472996, "start": 4744.68, "end": 4747.72, "text": " And if you like math, then you can add math.", "tokens": [400, 498, 291, 411, 5221, 11, 550, 291, 393, 909, 5221, 13], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1932, "seek": 472996, "start": 4747.72, "end": 4750.04, "text": " If you want to type things out, you can do that too.", "tokens": [759, 291, 528, 281, 2010, 721, 484, 11, 291, 393, 360, 300, 886, 13], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1933, "seek": 472996, "start": 4750.04, "end": 4751.08, "text": " And they're both great.", "tokens": [400, 436, 434, 1293, 869, 13], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1934, "seek": 472996, "start": 4752.92, "end": 4755.32, "text": " Tensors do all the basic stuff you'd expect.", "tokens": [314, 694, 830, 360, 439, 264, 3875, 1507, 291, 1116, 2066, 13], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1935, "seek": 472996, "start": 4755.32, "end": 4757.64, "text": " You can reshape them with the reshape function.", "tokens": [509, 393, 725, 42406, 552, 365, 264, 725, 42406, 2445, 13], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1936, "seek": 472996, "start": 4757.64, "end": 4759.88, "text": " They support square root and all the other math functions.", "tokens": [814, 1406, 3732, 5593, 293, 439, 264, 661, 5221, 6828, 13], "temperature": 0.0, "avg_logprob": -0.20727514085315524, "compression_ratio": 1.8627450980392157, "no_speech_prob": 4.8601673370285425e-06}, {"id": 1937, "seek": 475988, "start": 4759.88, "end": 4760.72, "text": " It's all math stuff.", "tokens": [467, 311, 439, 5221, 1507, 13], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1938, "seek": 475988, "start": 4760.72, "end": 4761.56, "text": " It all works the way you'd expect.", "tokens": [467, 439, 1985, 264, 636, 291, 1116, 2066, 13], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1939, "seek": 475988, "start": 4761.56, "end": 4764.52, "text": " It has element wise operations like add and multiply", "tokens": [467, 575, 4478, 10829, 7705, 411, 909, 293, 12972], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1940, "seek": 475988, "start": 4764.52, "end": 4765.96, "text": " and square root and pow.", "tokens": [293, 3732, 5593, 293, 3388, 13], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1941, "seek": 475988, "start": 4767.24, "end": 4769.8, "text": " Oh, we have a question from earlier.", "tokens": [876, 11, 321, 362, 257, 1168, 490, 3071, 13], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1942, "seek": 475988, "start": 4769.8, "end": 4772.28, "text": " Why was it unsafe, what you did?", "tokens": [1545, 390, 309, 35948, 11, 437, 291, 630, 30], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1943, "seek": 475988, "start": 4772.28, "end": 4775.24, "text": " Ah, so what we did was we turned off bounds checking.", "tokens": [2438, 11, 370, 437, 321, 630, 390, 321, 3574, 766, 29905, 8568, 13], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1944, "seek": 475988, "start": 4775.24, "end": 4777.08, "text": " And so, if I write code that,", "tokens": [400, 370, 11, 498, 286, 2464, 3089, 300, 11], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1945, "seek": 475988, "start": 4777.08, "end": 4778.84, "text": " if I have an array of 10 numbers,", "tokens": [498, 286, 362, 364, 10225, 295, 1266, 3547, 11], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1946, "seek": 475988, "start": 4778.84, "end": 4781.96, "text": " and in Swift if I access the 11th element,", "tokens": [293, 294, 25539, 498, 286, 2105, 264, 2975, 392, 4478, 11], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1947, "seek": 475988, "start": 4781.96, "end": 4784.56, "text": " it will explode and tell me that that's invalid.", "tokens": [309, 486, 21411, 293, 980, 385, 300, 300, 311, 34702, 13], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1948, "seek": 475988, "start": 4784.56, "end": 4787.96, "text": " If you use unsafe, then it will let you do that.", "tokens": [759, 291, 764, 35948, 11, 550, 309, 486, 718, 291, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.15604474203927177, "compression_ratio": 1.6210526315789473, "no_speech_prob": 3.905148787453072e-06}, {"id": 1949, "seek": 478796, "start": 4787.96, "end": 4789.96, "text": " And so, whatever happens to be in memory", "tokens": [400, 370, 11, 2035, 2314, 281, 312, 294, 4675], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1950, "seek": 478796, "start": 4789.96, "end": 4792.16, "text": " beyond the end of your array, you're now poking it.", "tokens": [4399, 264, 917, 295, 428, 10225, 11, 291, 434, 586, 42684, 309, 13], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1951, "seek": 478796, "start": 4792.16, "end": 4794.8, "text": " And you should not do that,", "tokens": [400, 291, 820, 406, 360, 300, 11], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1952, "seek": 478796, "start": 4794.8, "end": 4797.32, "text": " but you're taking the guardrails off.", "tokens": [457, 291, 434, 1940, 264, 6290, 424, 4174, 766, 13], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1953, "seek": 478796, "start": 4797.32, "end": 4801.68, "text": " And so, this is, Swift is trying to be by default safe", "tokens": [400, 370, 11, 341, 307, 11, 25539, 307, 1382, 281, 312, 538, 7576, 3273], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1954, "seek": 478796, "start": 4801.68, "end": 4802.84, "text": " and it's trying to help you.", "tokens": [293, 309, 311, 1382, 281, 854, 291, 13], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1955, "seek": 478796, "start": 4802.84, "end": 4803.8, "text": " It's trying to check things for you.", "tokens": [467, 311, 1382, 281, 1520, 721, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1956, "seek": 478796, "start": 4803.8, "end": 4806.08, "text": " But if you want to, you can just rip off all the guardrails.", "tokens": [583, 498, 291, 528, 281, 11, 291, 393, 445, 12782, 766, 439, 264, 6290, 424, 4174, 13], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1957, "seek": 478796, "start": 4806.08, "end": 4808.32, "text": " And just like we showed you with Python,", "tokens": [400, 445, 411, 321, 4712, 291, 365, 15329, 11], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1958, "seek": 478796, "start": 4808.32, "end": 4810.4800000000005, "text": " like you can literally do things as dynamic as Python", "tokens": [411, 291, 393, 3736, 360, 721, 382, 8546, 382, 15329], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1959, "seek": 478796, "start": 4810.4800000000005, "end": 4811.44, "text": " if that's what you'd like.", "tokens": [498, 300, 311, 437, 291, 1116, 411, 13], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1960, "seek": 478796, "start": 4811.44, "end": 4814.72, "text": " But the defaults are there to help you out.", "tokens": [583, 264, 7576, 82, 366, 456, 281, 854, 291, 484, 13], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1961, "seek": 478796, "start": 4814.72, "end": 4816.08, "text": " Yeah, so Python programmers,", "tokens": [865, 11, 370, 15329, 41504, 11], "temperature": 0.0, "avg_logprob": -0.11181220768382714, "compression_ratio": 1.8135593220338984, "no_speech_prob": 2.9765296858386137e-05}, {"id": 1962, "seek": 481608, "start": 4816.08, "end": 4818.12, "text": " a lot of them won't be familiar with this idea,", "tokens": [257, 688, 295, 552, 1582, 380, 312, 4963, 365, 341, 1558, 11], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1963, "seek": 481608, "start": 4818.12, "end": 4821.5599999999995, "text": " but in things like C, unsafe code is code", "tokens": [457, 294, 721, 411, 383, 11, 35948, 3089, 307, 3089], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1964, "seek": 481608, "start": 4821.5599999999995, "end": 4823.0, "text": " where you're working with memory", "tokens": [689, 291, 434, 1364, 365, 4675], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1965, "seek": 481608, "start": 4823.0, "end": 4825.6, "text": " that hasn't been initialized or it's been freed.", "tokens": [300, 6132, 380, 668, 5883, 1602, 420, 309, 311, 668, 21796, 13], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1966, "seek": 481608, "start": 4825.6, "end": 4827.6, "text": " And it's a really big problem if you're using it", "tokens": [400, 309, 311, 257, 534, 955, 1154, 498, 291, 434, 1228, 309], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1967, "seek": 481608, "start": 4827.6, "end": 4829.08, "text": " like in production or something,", "tokens": [411, 294, 4265, 420, 746, 11], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1968, "seek": 481608, "start": 4829.08, "end": 4831.6, "text": " because that kind of thing is how people can like", "tokens": [570, 300, 733, 295, 551, 307, 577, 561, 393, 411], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1969, "seek": 481608, "start": 4831.6, "end": 4834.08, "text": " inject shell code into your server and", "tokens": [10711, 8720, 3089, 666, 428, 7154, 293], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1970, "seek": 481608, "start": 4834.08, "end": 4836.6, "text": " security over and steal your users and whatever.", "tokens": [3825, 670, 293, 11009, 428, 5022, 293, 2035, 13], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1971, "seek": 481608, "start": 4836.6, "end": 4838.36, "text": " So, you know, you should,", "tokens": [407, 11, 291, 458, 11, 291, 820, 11], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1972, "seek": 481608, "start": 4838.36, "end": 4840.32, "text": " I think it's fine to now drip it in a notebook though.", "tokens": [286, 519, 309, 311, 2489, 281, 586, 29376, 309, 294, 257, 21060, 1673, 13], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1973, "seek": 481608, "start": 4840.32, "end": 4841.36, "text": " Yeah, yeah.", "tokens": [865, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1974, "seek": 481608, "start": 4841.36, "end": 4844.96, "text": " So, coming back to tensor, you know, you can add them,", "tokens": [407, 11, 1348, 646, 281, 40863, 11, 291, 458, 11, 291, 393, 909, 552, 11], "temperature": 0.0, "avg_logprob": -0.1657363417880987, "compression_ratio": 1.744336569579288, "no_speech_prob": 2.28221615543589e-05}, {"id": 1975, "seek": 484496, "start": 4844.96, "end": 4847.16, "text": " you can multiply them, you can square root power,", "tokens": [291, 393, 12972, 552, 11, 291, 393, 3732, 5593, 1347, 11], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1976, "seek": 484496, "start": 4847.16, "end": 4849.64, "text": " like all the normal stuff you'd expect is on tensor.", "tokens": [411, 439, 264, 2710, 1507, 291, 1116, 2066, 307, 322, 40863, 13], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1977, "seek": 484496, "start": 4849.64, "end": 4852.24, "text": " Tensor also, if I run the right cell,", "tokens": [34306, 611, 11, 498, 286, 1190, 264, 558, 2815, 11], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1978, "seek": 484496, "start": 4852.24, "end": 4855.52, "text": " tensors also have a bunch of methods that do cool things", "tokens": [10688, 830, 611, 362, 257, 3840, 295, 7150, 300, 360, 1627, 721], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1979, "seek": 484496, "start": 4855.52, "end": 4857.2, "text": " like convolutions and other stuff like that", "tokens": [411, 3754, 15892, 293, 661, 1507, 411, 300], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1980, "seek": 484496, "start": 4857.2, "end": 4859.04, "text": " that we'll talk about later.", "tokens": [300, 321, 603, 751, 466, 1780, 13], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1981, "seek": 484496, "start": 4859.04, "end": 4862.36, "text": " One of the interesting things about Swift is that it likes", "tokens": [1485, 295, 264, 1880, 721, 466, 25539, 307, 300, 309, 5902], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1982, "seek": 484496, "start": 4862.36, "end": 4863.84, "text": " comparisons to return Booleans.", "tokens": [33157, 281, 2736, 23351, 24008, 13], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1983, "seek": 484496, "start": 4863.84, "end": 4866.04, "text": " And so you'll see that if you compare two tensors,", "tokens": [400, 370, 291, 603, 536, 300, 498, 291, 6794, 732, 10688, 830, 11], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1984, "seek": 484496, "start": 4866.04, "end": 4869.2, "text": " it will see if it will give you an ordering", "tokens": [309, 486, 536, 498, 309, 486, 976, 291, 364, 21739], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1985, "seek": 484496, "start": 4869.2, "end": 4870.4800000000005, "text": " of the two tensors,", "tokens": [295, 264, 732, 10688, 830, 11], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1986, "seek": 484496, "start": 4870.4800000000005, "end": 4873.44, "text": " but sometimes you want to get a tensor of Booleans back.", "tokens": [457, 2171, 291, 528, 281, 483, 257, 40863, 295, 23351, 24008, 646, 13], "temperature": 0.0, "avg_logprob": -0.12384012156519397, "compression_ratio": 1.7885906040268456, "no_speech_prob": 5.0932089834532235e-06}, {"id": 1987, "seek": 487344, "start": 4873.44, "end": 4877.639999999999, "text": " And so Swift calls these the point-wise operators.", "tokens": [400, 370, 25539, 5498, 613, 264, 935, 12, 3711, 19077, 13], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1988, "seek": 487344, "start": 4877.639999999999, "end": 4879.5599999999995, "text": " And so if you put a dot before the less than", "tokens": [400, 370, 498, 291, 829, 257, 5893, 949, 264, 1570, 813], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1989, "seek": 487344, "start": 4879.5599999999995, "end": 4882.04, "text": " or the greater than or the equals or whatever,", "tokens": [420, 264, 5044, 813, 420, 264, 6915, 420, 2035, 11], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1990, "seek": 487344, "start": 4882.04, "end": 4884.16, "text": " it will do a tensor comparison.", "tokens": [309, 486, 360, 257, 40863, 9660, 13], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1991, "seek": 487344, "start": 4884.16, "end": 4886.12, "text": " Yeah, and I get burnt by this all the time", "tokens": [865, 11, 293, 286, 483, 18901, 538, 341, 439, 264, 565], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1992, "seek": 487344, "start": 4886.12, "end": 4888.04, "text": " in NumPy and PyTorch that doesn't have", "tokens": [294, 22592, 47, 88, 293, 9953, 51, 284, 339, 300, 1177, 380, 362], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1993, "seek": 487344, "start": 4888.04, "end": 4889.32, "text": " this level of consistency.", "tokens": [341, 1496, 295, 14416, 13], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1994, "seek": 487344, "start": 4889.32, "end": 4891.96, "text": " So I think that this design call is awesome.", "tokens": [407, 286, 519, 300, 341, 1715, 818, 307, 3476, 13], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1995, "seek": 487344, "start": 4891.96, "end": 4896.4, "text": " This idea that Boolean operations always return Booleans", "tokens": [639, 1558, 300, 23351, 28499, 7705, 1009, 2736, 23351, 24008], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1996, "seek": 487344, "start": 4896.4, "end": 4900.04, "text": " and point-wise operations return point-wise Booleans.", "tokens": [293, 935, 12, 3711, 7705, 2736, 935, 12, 3711, 23351, 24008, 13], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1997, "seek": 487344, "start": 4900.04, "end": 4900.879999999999, "text": " It's a good idea.", "tokens": [467, 311, 257, 665, 1558, 13], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1998, "seek": 487344, "start": 4900.879999999999, "end": 4903.24, "text": " And then you have reductions like any and all that say,", "tokens": [400, 550, 291, 362, 40296, 411, 604, 293, 439, 300, 584, 11], "temperature": 0.0, "avg_logprob": -0.09697374370363024, "compression_ratio": 1.7628865979381443, "no_speech_prob": 1.1124426237074658e-05}, {"id": 1999, "seek": 490324, "start": 4903.24, "end": 4905.36, "text": " hey, if I have a tensor of Booleans,", "tokens": [4177, 11, 498, 286, 362, 257, 40863, 295, 23351, 24008, 11], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2000, "seek": 490324, "start": 4905.36, "end": 4907.32, "text": " I can check to see if they're all set", "tokens": [286, 393, 1520, 281, 536, 498, 436, 434, 439, 992], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2001, "seek": 490324, "start": 4907.32, "end": 4908.88, "text": " or if any of them are set.", "tokens": [420, 498, 604, 295, 552, 366, 992, 13], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2002, "seek": 490324, "start": 4908.88, "end": 4911.28, "text": " So basically then, I mean,", "tokens": [407, 1936, 550, 11, 286, 914, 11], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2003, "seek": 490324, "start": 4911.28, "end": 4912.92, "text": " the next part of the notebook is just saying,", "tokens": [264, 958, 644, 295, 264, 21060, 307, 445, 1566, 11], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2004, "seek": 490324, "start": 4912.92, "end": 4915.8, "text": " hey, look, all the stuff that you've seen before", "tokens": [4177, 11, 574, 11, 439, 264, 1507, 300, 291, 600, 1612, 949], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2005, "seek": 490324, "start": 4915.8, "end": 4917.76, "text": " looks exactly the same as what you've seen before.", "tokens": [1542, 2293, 264, 912, 382, 437, 291, 600, 1612, 949, 13], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2006, "seek": 490324, "start": 4917.76, "end": 4919.4, "text": " Sometimes the words change,", "tokens": [4803, 264, 2283, 1319, 11], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2007, "seek": 490324, "start": 4919.4, "end": 4922.599999999999, "text": " like unsqueeze is called expanding shape at,", "tokens": [411, 2693, 1077, 10670, 307, 1219, 14702, 3909, 412, 11], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2008, "seek": 490324, "start": 4922.599999999999, "end": 4924.96, "text": " which is a rather Swifty way of saying things.", "tokens": [597, 307, 257, 2831, 3926, 37177, 636, 295, 1566, 721, 13], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2009, "seek": 490324, "start": 4926.2, "end": 4928.4, "text": " But in a lot of these notebooks,", "tokens": [583, 294, 257, 688, 295, 613, 43782, 11], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2010, "seek": 490324, "start": 4928.4, "end": 4931.679999999999, "text": " you'll find that there's like lots of details", "tokens": [291, 603, 915, 300, 456, 311, 411, 3195, 295, 4365], "temperature": 0.0, "avg_logprob": -0.10965396002899828, "compression_ratio": 1.72, "no_speech_prob": 1.1124731827294454e-05}, {"id": 2011, "seek": 493168, "start": 4931.68, "end": 4933.8, "text": " where we've just basically copied the Python code", "tokens": [689, 321, 600, 445, 1936, 25365, 264, 15329, 3089], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2012, "seek": 493168, "start": 4933.8, "end": 4935.96, "text": " and we're not gonna show you all those details", "tokens": [293, 321, 434, 406, 799, 855, 291, 439, 729, 4365], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2013, "seek": 493168, "start": 4935.96, "end": 4937.72, "text": " because they're the same.", "tokens": [570, 436, 434, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2014, "seek": 493168, "start": 4937.72, "end": 4940.92, "text": " Yep, now let's talk about matmul on tensor.", "tokens": [7010, 11, 586, 718, 311, 751, 466, 3803, 76, 425, 322, 40863, 13], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2015, "seek": 493168, "start": 4940.92, "end": 4942.4800000000005, "text": " So what we've done here is we've defined", "tokens": [407, 437, 321, 600, 1096, 510, 307, 321, 600, 7642], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2016, "seek": 493168, "start": 4942.4800000000005, "end": 4944.320000000001, "text": " the same matmul that we had before.", "tokens": [264, 912, 3803, 76, 425, 300, 321, 632, 949, 13], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2017, "seek": 493168, "start": 4944.320000000001, "end": 4948.04, "text": " And before we took two arrays and we took two dimensions.", "tokens": [400, 949, 321, 1890, 732, 41011, 293, 321, 1890, 732, 12819, 13], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2018, "seek": 493168, "start": 4948.04, "end": 4949.240000000001, "text": " But tensor carries a shape.", "tokens": [583, 40863, 16402, 257, 3909, 13], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2019, "seek": 493168, "start": 4949.240000000001, "end": 4952.200000000001, "text": " And so here we implemented matmul on tensor.", "tokens": [400, 370, 510, 321, 12270, 3803, 76, 425, 322, 40863, 13], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2020, "seek": 493168, "start": 4952.200000000001, "end": 4954.400000000001, "text": " We start by creating a zero tensor, we loop over it all.", "tokens": [492, 722, 538, 4084, 257, 4018, 40863, 11, 321, 6367, 670, 309, 439, 13], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2021, "seek": 493168, "start": 4954.400000000001, "end": 4956.04, "text": " Now we have our two-dimensional indexing,", "tokens": [823, 321, 362, 527, 732, 12, 18759, 8186, 278, 11], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2022, "seek": 493168, "start": 4956.04, "end": 4958.360000000001, "text": " just like you saw before with NumPy.", "tokens": [445, 411, 291, 1866, 949, 365, 22592, 47, 88, 13], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2023, "seek": 493168, "start": 4958.360000000001, "end": 4959.200000000001, "text": " When you run this,", "tokens": [1133, 291, 1190, 341, 11], "temperature": 0.0, "avg_logprob": -0.08601108154693207, "compression_ratio": 1.7458745874587458, "no_speech_prob": 2.8854145057266578e-05}, {"id": 2024, "seek": 495920, "start": 4959.2, "end": 4962.24, "text": " what you'll see is this is a lot slower.", "tokens": [437, 291, 603, 536, 307, 341, 307, 257, 688, 14009, 13], "temperature": 0.0, "avg_logprob": -0.23994149707612536, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.3210938959673513e-05}, {"id": 2025, "seek": 495920, "start": 4962.24, "end": 4964.48, "text": " This takes seven seconds to do one matmul,", "tokens": [639, 2516, 3407, 3949, 281, 360, 472, 3803, 76, 425, 11], "temperature": 0.0, "avg_logprob": -0.23994149707612536, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.3210938959673513e-05}, {"id": 2026, "seek": 495920, "start": 4964.48, "end": 4969.48, "text": " where before it was taking 0.07 milliseconds.", "tokens": [689, 949, 309, 390, 1940, 1958, 13, 16231, 34184, 13], "temperature": 0.0, "avg_logprob": -0.23994149707612536, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.3210938959673513e-05}, {"id": 2027, "seek": 495920, "start": 4969.5599999999995, "end": 4971.92, "text": " So why?", "tokens": [407, 983, 30], "temperature": 0.0, "avg_logprob": -0.23994149707612536, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.3210938959673513e-05}, {"id": 2028, "seek": 495920, "start": 4971.92, "end": 4972.76, "text": " So what is this?", "tokens": [407, 437, 307, 341, 30], "temperature": 0.0, "avg_logprob": -0.23994149707612536, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.3210938959673513e-05}, {"id": 2029, "seek": 495920, "start": 4972.76, "end": 4975.36, "text": " This is about 10,000 times faster.", "tokens": [639, 307, 466, 1266, 11, 1360, 1413, 4663, 13], "temperature": 0.0, "avg_logprob": -0.23994149707612536, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.3210938959673513e-05}, {"id": 2030, "seek": 495920, "start": 4975.36, "end": 4978.08, "text": " Yeah, so why is that, Jeremy?", "tokens": [865, 11, 370, 983, 307, 300, 11, 17809, 30], "temperature": 0.0, "avg_logprob": -0.23994149707612536, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.3210938959673513e-05}, {"id": 2031, "seek": 495920, "start": 4978.08, "end": 4978.92, "text": " Why is that?", "tokens": [1545, 307, 300, 30], "temperature": 0.0, "avg_logprob": -0.23994149707612536, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.3210938959673513e-05}, {"id": 2032, "seek": 495920, "start": 4978.92, "end": 4980.8, "text": " Well, the first thing I wanna say is that", "tokens": [1042, 11, 264, 700, 551, 286, 1948, 584, 307, 300], "temperature": 0.0, "avg_logprob": -0.23994149707612536, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.3210938959673513e-05}, {"id": 2033, "seek": 495920, "start": 4982.32, "end": 4986.44, "text": " hopefully at this point you're thinking this is a problem", "tokens": [4696, 412, 341, 935, 291, 434, 1953, 341, 307, 257, 1154], "temperature": 0.0, "avg_logprob": -0.23994149707612536, "compression_ratio": 1.5809523809523809, "no_speech_prob": 1.3210938959673513e-05}, {"id": 2034, "seek": 498644, "start": 4986.44, "end": 4989.679999999999, "text": " because it's kind of like the exact opposite of everything", "tokens": [570, 309, 311, 733, 295, 411, 264, 1900, 6182, 295, 1203], "temperature": 0.0, "avg_logprob": -0.11333840843138655, "compression_ratio": 1.6702127659574468, "no_speech_prob": 9.97231290966738e-06}, {"id": 2035, "seek": 498644, "start": 4989.679999999999, "end": 4990.879999999999, "text": " that Chris has been telling us", "tokens": [300, 6688, 575, 668, 3585, 505], "temperature": 0.0, "avg_logprob": -0.11333840843138655, "compression_ratio": 1.6702127659574468, "no_speech_prob": 9.97231290966738e-06}, {"id": 2036, "seek": 498644, "start": 4990.879999999999, "end": 4993.5599999999995, "text": " and I've been telling you about why this is good.", "tokens": [293, 286, 600, 668, 3585, 291, 466, 983, 341, 307, 665, 13], "temperature": 0.0, "avg_logprob": -0.11333840843138655, "compression_ratio": 1.6702127659574468, "no_speech_prob": 9.97231290966738e-06}, {"id": 2037, "seek": 498644, "start": 4993.5599999999995, "end": 4995.96, "text": " What's the point of something that's infinitely hackable", "tokens": [708, 311, 264, 935, 295, 746, 300, 311, 36227, 10339, 712], "temperature": 0.0, "avg_logprob": -0.11333840843138655, "compression_ratio": 1.6702127659574468, "no_speech_prob": 9.97231290966738e-06}, {"id": 2038, "seek": 498644, "start": 4995.96, "end": 4998.919999999999, "text": " if there's this tensor flow layer we can't go beneath", "tokens": [498, 456, 311, 341, 40863, 3095, 4583, 321, 393, 380, 352, 17149], "temperature": 0.0, "avg_logprob": -0.11333840843138655, "compression_ratio": 1.6702127659574468, "no_speech_prob": 9.97231290966738e-06}, {"id": 2039, "seek": 498644, "start": 4998.919999999999, "end": 5001.44, "text": " and that it's so slow that we can't really actually write", "tokens": [293, 300, 309, 311, 370, 2964, 300, 321, 393, 380, 534, 767, 2464], "temperature": 0.0, "avg_logprob": -0.11333840843138655, "compression_ratio": 1.6702127659574468, "no_speech_prob": 9.97231290966738e-06}, {"id": 2040, "seek": 498644, "start": 5001.44, "end": 5003.799999999999, "text": " things that run, I mean, seven seconds", "tokens": [721, 300, 1190, 11, 286, 914, 11, 3407, 3949], "temperature": 0.0, "avg_logprob": -0.11333840843138655, "compression_ratio": 1.6702127659574468, "no_speech_prob": 9.97231290966738e-06}, {"id": 2041, "seek": 498644, "start": 5003.799999999999, "end": 5006.08, "text": " through a small matrix multiplication?", "tokens": [807, 257, 1359, 8141, 27290, 30], "temperature": 0.0, "avg_logprob": -0.11333840843138655, "compression_ratio": 1.6702127659574468, "no_speech_prob": 9.97231290966738e-06}, {"id": 2042, "seek": 498644, "start": 5006.08, "end": 5006.919999999999, "text": " Extraordinary.", "tokens": [29429, 765, 4066, 13], "temperature": 0.0, "avg_logprob": -0.11333840843138655, "compression_ratio": 1.6702127659574468, "no_speech_prob": 9.97231290966738e-06}, {"id": 2043, "seek": 498644, "start": 5010.08, "end": 5012.48, "text": " We would not be running this course", "tokens": [492, 576, 406, 312, 2614, 341, 1164], "temperature": 0.0, "avg_logprob": -0.11333840843138655, "compression_ratio": 1.6702127659574468, "no_speech_prob": 9.97231290966738e-06}, {"id": 2044, "seek": 498644, "start": 5012.48, "end": 5015.04, "text": " if this is where we were heading.", "tokens": [498, 341, 307, 689, 321, 645, 9864, 13], "temperature": 0.0, "avg_logprob": -0.11333840843138655, "compression_ratio": 1.6702127659574468, "no_speech_prob": 9.97231290966738e-06}, {"id": 2045, "seek": 501504, "start": 5015.04, "end": 5020.04, "text": " This is where we are now and it's a temporary situation", "tokens": [639, 307, 689, 321, 366, 586, 293, 309, 311, 257, 13413, 2590], "temperature": 0.0, "avg_logprob": -0.13134998458999772, "compression_ratio": 1.572072072072072, "no_speech_prob": 6.3390712057298515e-06}, {"id": 2046, "seek": 501504, "start": 5020.32, "end": 5021.68, "text": " that we're fixing.", "tokens": [300, 321, 434, 19442, 13], "temperature": 0.0, "avg_logprob": -0.13134998458999772, "compression_ratio": 1.572072072072072, "no_speech_prob": 6.3390712057298515e-06}, {"id": 2047, "seek": 501504, "start": 5021.68, "end": 5023.84, "text": " And so let me explain what's going on", "tokens": [400, 370, 718, 385, 2903, 437, 311, 516, 322], "temperature": 0.0, "avg_logprob": -0.13134998458999772, "compression_ratio": 1.572072072072072, "no_speech_prob": 6.3390712057298515e-06}, {"id": 2048, "seek": 501504, "start": 5023.84, "end": 5025.2, "text": " and how it's being fixed.", "tokens": [293, 577, 309, 311, 885, 6806, 13], "temperature": 0.0, "avg_logprob": -0.13134998458999772, "compression_ratio": 1.572072072072072, "no_speech_prob": 6.3390712057298515e-06}, {"id": 2049, "seek": 501504, "start": 5026.96, "end": 5028.76, "text": " So the first thing to point out is that", "tokens": [407, 264, 700, 551, 281, 935, 484, 307, 300], "temperature": 0.0, "avg_logprob": -0.13134998458999772, "compression_ratio": 1.572072072072072, "no_speech_prob": 6.3390712057298515e-06}, {"id": 2050, "seek": 501504, "start": 5028.76, "end": 5033.76, "text": " when you work with PyTorch, we have a similar issue.", "tokens": [562, 291, 589, 365, 9953, 51, 284, 339, 11, 321, 362, 257, 2531, 2734, 13], "temperature": 0.0, "avg_logprob": -0.13134998458999772, "compression_ratio": 1.572072072072072, "no_speech_prob": 6.3390712057298515e-06}, {"id": 2051, "seek": 501504, "start": 5034.5199999999995, "end": 5039.5199999999995, "text": " Is like we don't write PyTorch triply nested for loops", "tokens": [1119, 411, 321, 500, 380, 2464, 9953, 51, 284, 339, 1376, 2724, 15646, 292, 337, 16121], "temperature": 0.0, "avg_logprob": -0.13134998458999772, "compression_ratio": 1.572072072072072, "no_speech_prob": 6.3390712057298515e-06}, {"id": 2052, "seek": 501504, "start": 5041.12, "end": 5042.36, "text": " either, right?", "tokens": [2139, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.13134998458999772, "compression_ratio": 1.572072072072072, "no_speech_prob": 6.3390712057298515e-06}, {"id": 2053, "seek": 501504, "start": 5042.36, "end": 5044.72, "text": " And the reason we don't is that we need PyTorch", "tokens": [400, 264, 1778, 321, 500, 380, 307, 300, 321, 643, 9953, 51, 284, 339], "temperature": 0.0, "avg_logprob": -0.13134998458999772, "compression_ratio": 1.572072072072072, "no_speech_prob": 6.3390712057298515e-06}, {"id": 2054, "seek": 504472, "start": 5044.72, "end": 5047.4800000000005, "text": " to have a reasonable amount of work to do", "tokens": [281, 362, 257, 10585, 2372, 295, 589, 281, 360], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2055, "seek": 504472, "start": 5047.4800000000005, "end": 5049.68, "text": " each time we get it to do something, right?", "tokens": [1184, 565, 321, 483, 309, 281, 360, 746, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2056, "seek": 504472, "start": 5049.68, "end": 5052.92, "text": " So we kind of say, here's a whole matrix A,", "tokens": [407, 321, 733, 295, 584, 11, 510, 311, 257, 1379, 8141, 316, 11], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2057, "seek": 504472, "start": 5052.92, "end": 5056.0, "text": " here's a whole matrix B, there it all is,", "tokens": [510, 311, 257, 1379, 8141, 363, 11, 456, 309, 439, 307, 11], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2058, "seek": 504472, "start": 5056.0, "end": 5058.04, "text": " multiply them together and then it says,", "tokens": [12972, 552, 1214, 293, 550, 309, 1619, 11], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2059, "seek": 504472, "start": 5058.04, "end": 5060.12, "text": " here's the whole thing multiplied together.", "tokens": [510, 311, 264, 1379, 551, 17207, 1214, 13], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2060, "seek": 504472, "start": 5060.12, "end": 5061.360000000001, "text": " And that's what we do.", "tokens": [400, 300, 311, 437, 321, 360, 13], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2061, "seek": 504472, "start": 5061.360000000001, "end": 5064.280000000001, "text": " So it's like if PyTorch was an airplane, right?", "tokens": [407, 309, 311, 411, 498, 9953, 51, 284, 339, 390, 364, 17130, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2062, "seek": 504472, "start": 5064.280000000001, "end": 5066.280000000001, "text": " And we want to send our stuff off to China,", "tokens": [400, 321, 528, 281, 2845, 527, 1507, 766, 281, 3533, 11], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2063, "seek": 504472, "start": 5066.280000000001, "end": 5069.68, "text": " we pack it all in a bag and we put the bag in the airplane", "tokens": [321, 2844, 309, 439, 294, 257, 3411, 293, 321, 829, 264, 3411, 294, 264, 17130], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2064, "seek": 504472, "start": 5069.68, "end": 5071.92, "text": " and it gets sent off to China.", "tokens": [293, 309, 2170, 2279, 766, 281, 3533, 13], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2065, "seek": 504472, "start": 5071.92, "end": 5074.4800000000005, "text": " As opposed to the triply nested for loop version", "tokens": [1018, 8851, 281, 264, 1376, 2724, 15646, 292, 337, 6367, 3037], "temperature": 0.0, "avg_logprob": -0.08878571027285093, "compression_ratio": 1.8279569892473118, "no_speech_prob": 5.771668838860933e-06}, {"id": 2066, "seek": 507448, "start": 5074.48, "end": 5078.08, "text": " which is where I take a sock and I put it in an airplane", "tokens": [597, 307, 689, 286, 747, 257, 35302, 293, 286, 829, 309, 294, 364, 17130], "temperature": 0.0, "avg_logprob": -0.10754938507080078, "compression_ratio": 1.6795366795366795, "no_speech_prob": 7.0716678237658925e-06}, {"id": 2067, "seek": 507448, "start": 5078.08, "end": 5079.36, "text": " and it flies to China and back", "tokens": [293, 309, 17414, 281, 3533, 293, 646], "temperature": 0.0, "avg_logprob": -0.10754938507080078, "compression_ratio": 1.6795366795366795, "no_speech_prob": 7.0716678237658925e-06}, {"id": 2068, "seek": 507448, "start": 5079.36, "end": 5080.839999999999, "text": " and then I put it in my next sock", "tokens": [293, 550, 286, 829, 309, 294, 452, 958, 35302], "temperature": 0.0, "avg_logprob": -0.10754938507080078, "compression_ratio": 1.6795366795366795, "no_speech_prob": 7.0716678237658925e-06}, {"id": 2069, "seek": 507448, "start": 5080.839999999999, "end": 5082.2, "text": " and it flies there and back.", "tokens": [293, 309, 17414, 456, 293, 646, 13], "temperature": 0.0, "avg_logprob": -0.10754938507080078, "compression_ratio": 1.6795366795366795, "no_speech_prob": 7.0716678237658925e-06}, {"id": 2070, "seek": 507448, "start": 5082.2, "end": 5086.04, "text": " And it's gonna take, that's a fast airplane, right?", "tokens": [400, 309, 311, 799, 747, 11, 300, 311, 257, 2370, 17130, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.10754938507080078, "compression_ratio": 1.6795366795366795, "no_speech_prob": 7.0716678237658925e-06}, {"id": 2071, "seek": 507448, "start": 5086.04, "end": 5090.32, "text": " But it's just not an efficient way to use it, right?", "tokens": [583, 309, 311, 445, 406, 364, 7148, 636, 281, 764, 309, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.10754938507080078, "compression_ratio": 1.6795366795366795, "no_speech_prob": 7.0716678237658925e-06}, {"id": 2072, "seek": 507448, "start": 5090.32, "end": 5094.28, "text": " So we already have this issue which is you gotta give", "tokens": [407, 321, 1217, 362, 341, 2734, 597, 307, 291, 3428, 976], "temperature": 0.0, "avg_logprob": -0.10754938507080078, "compression_ratio": 1.6795366795366795, "no_speech_prob": 7.0716678237658925e-06}, {"id": 2073, "seek": 507448, "start": 5094.28, "end": 5098.08, "text": " PyTorch enough work to do to make this latency,", "tokens": [9953, 51, 284, 339, 1547, 589, 281, 360, 281, 652, 341, 27043, 11], "temperature": 0.0, "avg_logprob": -0.10754938507080078, "compression_ratio": 1.6795366795366795, "no_speech_prob": 7.0716678237658925e-06}, {"id": 2074, "seek": 507448, "start": 5098.08, "end": 5100.36, "text": " this overhead worthwhile.", "tokens": [341, 19922, 28159, 13], "temperature": 0.0, "avg_logprob": -0.10754938507080078, "compression_ratio": 1.6795366795366795, "no_speech_prob": 7.0716678237658925e-06}, {"id": 2075, "seek": 507448, "start": 5100.36, "end": 5103.5199999999995, "text": " Now, TensorFlow is designed in a very different way", "tokens": [823, 11, 37624, 307, 4761, 294, 257, 588, 819, 636], "temperature": 0.0, "avg_logprob": -0.10754938507080078, "compression_ratio": 1.6795366795366795, "no_speech_prob": 7.0716678237658925e-06}, {"id": 2076, "seek": 510352, "start": 5103.52, "end": 5105.200000000001, "text": " to PyTorch.", "tokens": [281, 9953, 51, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.0993990606191207, "compression_ratio": 1.5191489361702128, "no_speech_prob": 3.446514483584906e-06}, {"id": 2077, "seek": 510352, "start": 5105.200000000001, "end": 5108.360000000001, "text": " And for those of you that did the earliest courses", "tokens": [400, 337, 729, 295, 291, 300, 630, 264, 20573, 7712], "temperature": 0.0, "avg_logprob": -0.0993990606191207, "compression_ratio": 1.5191489361702128, "no_speech_prob": 3.446514483584906e-06}, {"id": 2078, "seek": 510352, "start": 5108.360000000001, "end": 5110.72, "text": " with fast AI, this will look very familiar, right?", "tokens": [365, 2370, 7318, 11, 341, 486, 574, 588, 4963, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.0993990606191207, "compression_ratio": 1.5191489361702128, "no_speech_prob": 3.446514483584906e-06}, {"id": 2079, "seek": 510352, "start": 5110.72, "end": 5114.0, "text": " It's actually a really fascinating programming model.", "tokens": [467, 311, 767, 257, 534, 10343, 9410, 2316, 13], "temperature": 0.0, "avg_logprob": -0.0993990606191207, "compression_ratio": 1.5191489361702128, "no_speech_prob": 3.446514483584906e-06}, {"id": 2080, "seek": 510352, "start": 5114.0, "end": 5119.0, "text": " You say there will be later on a float called X", "tokens": [509, 584, 456, 486, 312, 1780, 322, 257, 15706, 1219, 1783], "temperature": 0.0, "avg_logprob": -0.0993990606191207, "compression_ratio": 1.5191489361702128, "no_speech_prob": 3.446514483584906e-06}, {"id": 2081, "seek": 510352, "start": 5119.200000000001, "end": 5124.200000000001, "text": " and later on I will want to multiply that float by two.", "tokens": [293, 1780, 322, 286, 486, 528, 281, 12972, 300, 15706, 538, 732, 13], "temperature": 0.0, "avg_logprob": -0.0993990606191207, "compression_ratio": 1.5191489361702128, "no_speech_prob": 3.446514483584906e-06}, {"id": 2082, "seek": 510352, "start": 5125.400000000001, "end": 5128.88, "text": " Now, set up a session where we're gonna do some stuff", "tokens": [823, 11, 992, 493, 257, 5481, 689, 321, 434, 799, 360, 512, 1507], "temperature": 0.0, "avg_logprob": -0.0993990606191207, "compression_ratio": 1.5191489361702128, "no_speech_prob": 3.446514483584906e-06}, {"id": 2083, "seek": 510352, "start": 5128.88, "end": 5132.040000000001, "text": " and run this computation graph,", "tokens": [293, 1190, 341, 24903, 4295, 11], "temperature": 0.0, "avg_logprob": -0.0993990606191207, "compression_ratio": 1.5191489361702128, "no_speech_prob": 3.446514483584906e-06}, {"id": 2084, "seek": 513204, "start": 5132.04, "end": 5134.64, "text": " which could have lots of things going on in it", "tokens": [597, 727, 362, 3195, 295, 721, 516, 322, 294, 309], "temperature": 0.0, "avg_logprob": -0.11376838491420553, "compression_ratio": 1.5973451327433628, "no_speech_prob": 8.139254532579798e-06}, {"id": 2085, "seek": 513204, "start": 5134.64, "end": 5137.92, "text": " and run it in these things.", "tokens": [293, 1190, 309, 294, 613, 721, 13], "temperature": 0.0, "avg_logprob": -0.11376838491420553, "compression_ratio": 1.5973451327433628, "no_speech_prob": 8.139254532579798e-06}, {"id": 2086, "seek": 513204, "start": 5137.92, "end": 5140.32, "text": " So I basically kind of set up this whole series", "tokens": [407, 286, 1936, 733, 295, 992, 493, 341, 1379, 2638], "temperature": 0.0, "avg_logprob": -0.11376838491420553, "compression_ratio": 1.5973451327433628, "no_speech_prob": 8.139254532579798e-06}, {"id": 2087, "seek": 513204, "start": 5140.32, "end": 5143.12, "text": " of computations and then I pass in some data.", "tokens": [295, 2807, 763, 293, 550, 286, 1320, 294, 512, 1412, 13], "temperature": 0.0, "avg_logprob": -0.11376838491420553, "compression_ratio": 1.5973451327433628, "no_speech_prob": 8.139254532579798e-06}, {"id": 2088, "seek": 513204, "start": 5143.98, "end": 5148.98, "text": " So this is a very different feel to PyTorch, right?", "tokens": [407, 341, 307, 257, 588, 819, 841, 281, 9953, 51, 284, 339, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.11376838491420553, "compression_ratio": 1.5973451327433628, "no_speech_prob": 8.139254532579798e-06}, {"id": 2089, "seek": 513204, "start": 5149.2, "end": 5151.88, "text": " And because TensorFlow was built this way,", "tokens": [400, 570, 37624, 390, 3094, 341, 636, 11], "temperature": 0.0, "avg_logprob": -0.11376838491420553, "compression_ratio": 1.5973451327433628, "no_speech_prob": 8.139254532579798e-06}, {"id": 2090, "seek": 513204, "start": 5151.88, "end": 5156.88, "text": " TensorFlow to me does not behave like a plane.", "tokens": [37624, 281, 385, 775, 406, 15158, 411, 257, 5720, 13], "temperature": 0.0, "avg_logprob": -0.11376838491420553, "compression_ratio": 1.5973451327433628, "no_speech_prob": 8.139254532579798e-06}, {"id": 2091, "seek": 513204, "start": 5157.16, "end": 5161.24, "text": " It behaves like a ship or actually a ship designed", "tokens": [467, 36896, 411, 257, 5374, 420, 767, 257, 5374, 4761], "temperature": 0.0, "avg_logprob": -0.11376838491420553, "compression_ratio": 1.5973451327433628, "no_speech_prob": 8.139254532579798e-06}, {"id": 2092, "seek": 516124, "start": 5161.24, "end": 5164.92, "text": " for shipping ships or actually a shipping ship designed", "tokens": [337, 14122, 11434, 420, 767, 257, 14122, 5374, 4761], "temperature": 0.0, "avg_logprob": -0.1330465087890625, "compression_ratio": 1.982532751091703, "no_speech_prob": 7.029311382211745e-05}, {"id": 2093, "seek": 516124, "start": 5164.92, "end": 5166.76, "text": " for shipping shipping ships,", "tokens": [337, 14122, 14122, 11434, 11], "temperature": 0.0, "avg_logprob": -0.1330465087890625, "compression_ratio": 1.982532751091703, "no_speech_prob": 7.029311382211745e-05}, {"id": 2094, "seek": 516124, "start": 5166.76, "end": 5169.76, "text": " which is this particular one, the MV Blue Marlin.", "tokens": [597, 307, 341, 1729, 472, 11, 264, 17663, 8510, 2039, 5045, 13], "temperature": 0.0, "avg_logprob": -0.1330465087890625, "compression_ratio": 1.982532751091703, "no_speech_prob": 7.029311382211745e-05}, {"id": 2095, "seek": 516124, "start": 5169.76, "end": 5174.76, "text": " So if you have a shipping ship, shipping ships ship,", "tokens": [407, 498, 291, 362, 257, 14122, 5374, 11, 14122, 11434, 5374, 11], "temperature": 0.0, "avg_logprob": -0.1330465087890625, "compression_ratio": 1.982532751091703, "no_speech_prob": 7.029311382211745e-05}, {"id": 2096, "seek": 516124, "start": 5175.16, "end": 5177.0, "text": " then you need to use it in a different way,", "tokens": [550, 291, 643, 281, 764, 309, 294, 257, 819, 636, 11], "temperature": 0.0, "avg_logprob": -0.1330465087890625, "compression_ratio": 1.982532751091703, "no_speech_prob": 7.029311382211745e-05}, {"id": 2097, "seek": 516124, "start": 5177.0, "end": 5179.12, "text": " which is if you wanna get all of your socks,", "tokens": [597, 307, 498, 291, 1948, 483, 439, 295, 428, 17564, 11], "temperature": 0.0, "avg_logprob": -0.1330465087890625, "compression_ratio": 1.982532751091703, "no_speech_prob": 7.029311382211745e-05}, {"id": 2098, "seek": 516124, "start": 5179.12, "end": 5182.719999999999, "text": " all of the socks in America to China,", "tokens": [439, 295, 264, 17564, 294, 3374, 281, 3533, 11], "temperature": 0.0, "avg_logprob": -0.1330465087890625, "compression_ratio": 1.982532751091703, "no_speech_prob": 7.029311382211745e-05}, {"id": 2099, "seek": 516124, "start": 5182.719999999999, "end": 5185.5199999999995, "text": " you send them all, send all of your ships off", "tokens": [291, 2845, 552, 439, 11, 2845, 439, 295, 428, 11434, 766], "temperature": 0.0, "avg_logprob": -0.1330465087890625, "compression_ratio": 1.982532751091703, "no_speech_prob": 7.029311382211745e-05}, {"id": 2100, "seek": 516124, "start": 5185.5199999999995, "end": 5186.94, "text": " to all of the ports in America,", "tokens": [281, 439, 295, 264, 18160, 294, 3374, 11], "temperature": 0.0, "avg_logprob": -0.1330465087890625, "compression_ratio": 1.982532751091703, "no_speech_prob": 7.029311382211745e-05}, {"id": 2101, "seek": 516124, "start": 5186.94, "end": 5188.8, "text": " everybody dumps their socks on", "tokens": [2201, 11430, 82, 641, 17564, 322], "temperature": 0.0, "avg_logprob": -0.1330465087890625, "compression_ratio": 1.982532751091703, "no_speech_prob": 7.029311382211745e-05}, {"id": 2102, "seek": 516124, "start": 5188.8, "end": 5190.5, "text": " and they all get sent to China", "tokens": [293, 436, 439, 483, 2279, 281, 3533], "temperature": 0.0, "avg_logprob": -0.1330465087890625, "compression_ratio": 1.982532751091703, "no_speech_prob": 7.029311382211745e-05}, {"id": 2103, "seek": 519050, "start": 5190.5, "end": 5192.0, "text": " and we're all happy, right?", "tokens": [293, 321, 434, 439, 2055, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.12143367106520285, "compression_ratio": 1.6168582375478928, "no_speech_prob": 9.368465725856367e-06}, {"id": 2104, "seek": 519050, "start": 5192.0, "end": 5195.48, "text": " Now to take advantage of this extraordinary power,", "tokens": [823, 281, 747, 5002, 295, 341, 10581, 1347, 11], "temperature": 0.0, "avg_logprob": -0.12143367106520285, "compression_ratio": 1.6168582375478928, "no_speech_prob": 9.368465725856367e-06}, {"id": 2105, "seek": 519050, "start": 5195.48, "end": 5196.8, "text": " you have to use it in a certain way", "tokens": [291, 362, 281, 764, 309, 294, 257, 1629, 636], "temperature": 0.0, "avg_logprob": -0.12143367106520285, "compression_ratio": 1.6168582375478928, "no_speech_prob": 9.368465725856367e-06}, {"id": 2106, "seek": 519050, "start": 5196.8, "end": 5198.12, "text": " and you have to have certain things", "tokens": [293, 291, 362, 281, 362, 1629, 721], "temperature": 0.0, "avg_logprob": -0.12143367106520285, "compression_ratio": 1.6168582375478928, "no_speech_prob": 9.368465725856367e-06}, {"id": 2107, "seek": 519050, "start": 5198.12, "end": 5199.68, "text": " that you need to be able to do.", "tokens": [300, 291, 643, 281, 312, 1075, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.12143367106520285, "compression_ratio": 1.6168582375478928, "no_speech_prob": 9.368465725856367e-06}, {"id": 2108, "seek": 519050, "start": 5199.68, "end": 5204.36, "text": " So like if you're Google and you wanna run", "tokens": [407, 411, 498, 291, 434, 3329, 293, 291, 1948, 1190], "temperature": 0.0, "avg_logprob": -0.12143367106520285, "compression_ratio": 1.6168582375478928, "no_speech_prob": 9.368465725856367e-06}, {"id": 2109, "seek": 519050, "start": 5204.36, "end": 5206.72, "text": " all the world's search engine queries,", "tokens": [439, 264, 1002, 311, 3164, 2848, 24109, 11], "temperature": 0.0, "avg_logprob": -0.12143367106520285, "compression_ratio": 1.6168582375478928, "no_speech_prob": 9.368465725856367e-06}, {"id": 2110, "seek": 519050, "start": 5206.72, "end": 5208.48, "text": " this makes a hell of a lot of sense.", "tokens": [341, 1669, 257, 4921, 295, 257, 688, 295, 2020, 13], "temperature": 0.0, "avg_logprob": -0.12143367106520285, "compression_ratio": 1.6168582375478928, "no_speech_prob": 9.368465725856367e-06}, {"id": 2111, "seek": 519050, "start": 5209.46, "end": 5214.0, "text": " Now, TF Eager is the kind of the new hot thing", "tokens": [823, 11, 40964, 462, 3557, 307, 264, 733, 295, 264, 777, 2368, 551], "temperature": 0.0, "avg_logprob": -0.12143367106520285, "compression_ratio": 1.6168582375478928, "no_speech_prob": 9.368465725856367e-06}, {"id": 2112, "seek": 519050, "start": 5214.0, "end": 5216.44, "text": " for TensorFlow and it's designed to,", "tokens": [337, 37624, 293, 309, 311, 4761, 281, 11], "temperature": 0.0, "avg_logprob": -0.12143367106520285, "compression_ratio": 1.6168582375478928, "no_speech_prob": 9.368465725856367e-06}, {"id": 2113, "seek": 519050, "start": 5216.44, "end": 5220.24, "text": " or it does look like PyTorch, right?", "tokens": [420, 309, 775, 574, 411, 9953, 51, 284, 339, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.12143367106520285, "compression_ratio": 1.6168582375478928, "no_speech_prob": 9.368465725856367e-06}, {"id": 2114, "seek": 522024, "start": 5220.24, "end": 5221.639999999999, "text": " So this is what happens when you say", "tokens": [407, 341, 307, 437, 2314, 562, 291, 584], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2115, "seek": 522024, "start": 5221.639999999999, "end": 5223.44, "text": " tf.enableEagerExecution,", "tokens": [256, 69, 13, 268, 712, 36, 3557, 11149, 3045, 1448, 11], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2116, "seek": 522024, "start": 5223.44, "end": 5226.28, "text": " that's becoming the default in TensorFlow,", "tokens": [300, 311, 5617, 264, 7576, 294, 37624, 11], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2117, "seek": 522024, "start": 5226.28, "end": 5227.8, "text": " you can say here's my number.", "tokens": [291, 393, 584, 510, 311, 452, 1230, 13], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2118, "seek": 522024, "start": 5227.8, "end": 5229.5199999999995, "text": " I'm not saying there will be a number later,", "tokens": [286, 478, 406, 1566, 456, 486, 312, 257, 1230, 1780, 11], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2119, "seek": 522024, "start": 5229.5199999999995, "end": 5231.0, "text": " I say this is my number", "tokens": [286, 584, 341, 307, 452, 1230], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2120, "seek": 522024, "start": 5231.0, "end": 5233.24, "text": " and this is my matrix multiplication, right?", "tokens": [293, 341, 307, 452, 8141, 27290, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2121, "seek": 522024, "start": 5233.24, "end": 5235.179999999999, "text": " And I can print it.", "tokens": [400, 286, 393, 4482, 309, 13], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2122, "seek": 522024, "start": 5236.599999999999, "end": 5237.96, "text": " The thing about this is though,", "tokens": [440, 551, 466, 341, 307, 1673, 11], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2123, "seek": 522024, "start": 5237.96, "end": 5242.719999999999, "text": " is that this is kind of syntax sugar", "tokens": [307, 300, 341, 307, 733, 295, 28431, 5076], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2124, "seek": 522024, "start": 5242.719999999999, "end": 5245.88, "text": " on top of the ship shipping ship, shipping ship ship, right?", "tokens": [322, 1192, 295, 264, 5374, 14122, 5374, 11, 14122, 5374, 5374, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2125, "seek": 522024, "start": 5245.88, "end": 5247.16, "text": " Or whatever the hell the thing is,", "tokens": [1610, 2035, 264, 4921, 264, 551, 307, 11], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2126, "seek": 522024, "start": 5247.16, "end": 5249.639999999999, "text": " because we're still using the same,", "tokens": [570, 321, 434, 920, 1228, 264, 912, 11], "temperature": 0.0, "avg_logprob": -0.15480785369873046, "compression_ratio": 1.737037037037037, "no_speech_prob": 5.771624728367897e-06}, {"id": 2127, "seek": 524964, "start": 5249.64, "end": 5251.92, "text": " a lot of the same kind of foundations", "tokens": [257, 688, 295, 264, 912, 733, 295, 22467], "temperature": 0.0, "avg_logprob": -0.1230837644728939, "compression_ratio": 1.4979757085020242, "no_speech_prob": 1.061579223460285e-05}, {"id": 2128, "seek": 524964, "start": 5251.92, "end": 5255.200000000001, "text": " and some of it's been optimized, but only a bit, right?", "tokens": [293, 512, 295, 309, 311, 668, 26941, 11, 457, 787, 257, 857, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1230837644728939, "compression_ratio": 1.4979757085020242, "no_speech_prob": 1.061579223460285e-05}, {"id": 2129, "seek": 524964, "start": 5255.200000000001, "end": 5258.68, "text": " So as I say this today, as of April 2019,", "tokens": [407, 382, 286, 584, 341, 965, 11, 382, 295, 6929, 6071, 11], "temperature": 0.0, "avg_logprob": -0.1230837644728939, "compression_ratio": 1.4979757085020242, "no_speech_prob": 1.061579223460285e-05}, {"id": 2130, "seek": 524964, "start": 5259.76, "end": 5261.780000000001, "text": " a like five by five matrix,", "tokens": [257, 411, 1732, 538, 1732, 8141, 11], "temperature": 0.0, "avg_logprob": -0.1230837644728939, "compression_ratio": 1.4979757085020242, "no_speech_prob": 1.061579223460285e-05}, {"id": 2131, "seek": 524964, "start": 5261.780000000001, "end": 5264.52, "text": " like a tiny matrix multiply on a GPU", "tokens": [411, 257, 5870, 8141, 12972, 322, 257, 18407], "temperature": 0.0, "avg_logprob": -0.1230837644728939, "compression_ratio": 1.4979757085020242, "no_speech_prob": 1.061579223460285e-05}, {"id": 2132, "seek": 524964, "start": 5264.52, "end": 5268.8, "text": " with TF Eager takes 0.28 milliseconds,", "tokens": [365, 40964, 462, 3557, 2516, 1958, 13, 11205, 34184, 11], "temperature": 0.0, "avg_logprob": -0.1230837644728939, "compression_ratio": 1.4979757085020242, "no_speech_prob": 1.061579223460285e-05}, {"id": 2133, "seek": 524964, "start": 5268.8, "end": 5271.56, "text": " which is 10 times longer than PyTorch takes, right?", "tokens": [597, 307, 1266, 1413, 2854, 813, 9953, 51, 284, 339, 2516, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1230837644728939, "compression_ratio": 1.4979757085020242, "no_speech_prob": 1.061579223460285e-05}, {"id": 2134, "seek": 524964, "start": 5271.56, "end": 5274.42, "text": " And so we still just have a lot of overhead.", "tokens": [400, 370, 321, 920, 445, 362, 257, 688, 295, 19922, 13], "temperature": 0.0, "avg_logprob": -0.1230837644728939, "compression_ratio": 1.4979757085020242, "no_speech_prob": 1.061579223460285e-05}, {"id": 2135, "seek": 527442, "start": 5274.42, "end": 5279.42, "text": " And so TF Eager is not a solution to writing the kind of,", "tokens": [400, 370, 40964, 462, 3557, 307, 406, 257, 3827, 281, 3579, 264, 733, 295, 11], "temperature": 0.0, "avg_logprob": -0.2138970953519227, "compression_ratio": 1.5568627450980392, "no_speech_prob": 8.397419151151553e-06}, {"id": 2136, "seek": 527442, "start": 5281.76, "end": 5284.04, "text": " low level, get down to the bottom stuff", "tokens": [2295, 1496, 11, 483, 760, 281, 264, 2767, 1507], "temperature": 0.0, "avg_logprob": -0.2138970953519227, "compression_ratio": 1.5568627450980392, "no_speech_prob": 8.397419151151553e-06}, {"id": 2137, "seek": 527442, "start": 5284.04, "end": 5287.88, "text": " that Chris is saying you can do with Swift.", "tokens": [300, 6688, 307, 1566, 291, 393, 360, 365, 25539, 13], "temperature": 0.0, "avg_logprob": -0.2138970953519227, "compression_ratio": 1.5568627450980392, "no_speech_prob": 8.397419151151553e-06}, {"id": 2138, "seek": 527442, "start": 5287.88, "end": 5290.32, "text": " Yeah, but also neither GPUs.", "tokens": [865, 11, 457, 611, 9662, 18407, 82, 13], "temperature": 0.0, "avg_logprob": -0.2138970953519227, "compression_ratio": 1.5568627450980392, "no_speech_prob": 8.397419151151553e-06}, {"id": 2139, "seek": 527442, "start": 5290.32, "end": 5291.42, "text": " GPU is not gonna be fast", "tokens": [18407, 307, 406, 799, 312, 2370], "temperature": 0.0, "avg_logprob": -0.2138970953519227, "compression_ratio": 1.5568627450980392, "no_speech_prob": 8.397419151151553e-06}, {"id": 2140, "seek": 527442, "start": 5291.42, "end": 5293.4400000000005, "text": " at a five by five matrix multiply either.", "tokens": [412, 257, 1732, 538, 1732, 8141, 12972, 2139, 13], "temperature": 0.0, "avg_logprob": -0.2138970953519227, "compression_ratio": 1.5568627450980392, "no_speech_prob": 8.397419151151553e-06}, {"id": 2141, "seek": 527442, "start": 5293.4400000000005, "end": 5294.34, "text": " Right, right.", "tokens": [1779, 11, 558, 13], "temperature": 0.0, "avg_logprob": -0.2138970953519227, "compression_ratio": 1.5568627450980392, "no_speech_prob": 8.397419151151553e-06}, {"id": 2142, "seek": 527442, "start": 5294.34, "end": 5296.4800000000005, "text": " So, I mean, it's, but it's not,", "tokens": [407, 11, 286, 914, 11, 309, 311, 11, 457, 309, 311, 406, 11], "temperature": 0.0, "avg_logprob": -0.2138970953519227, "compression_ratio": 1.5568627450980392, "no_speech_prob": 8.397419151151553e-06}, {"id": 2143, "seek": 527442, "start": 5296.4800000000005, "end": 5299.4800000000005, "text": " you know, we want something, we want something better.", "tokens": [291, 458, 11, 321, 528, 746, 11, 321, 528, 746, 1101, 13], "temperature": 0.0, "avg_logprob": -0.2138970953519227, "compression_ratio": 1.5568627450980392, "no_speech_prob": 8.397419151151553e-06}, {"id": 2144, "seek": 527442, "start": 5299.4800000000005, "end": 5300.32, "text": " Yes. Right?", "tokens": [1079, 13, 1779, 30], "temperature": 0.0, "avg_logprob": -0.2138970953519227, "compression_ratio": 1.5568627450980392, "no_speech_prob": 8.397419151151553e-06}, {"id": 2145, "seek": 527442, "start": 5301.2, "end": 5304.4, "text": " So TensorFlow has this big ecosystem of things", "tokens": [407, 37624, 575, 341, 955, 11311, 295, 721], "temperature": 0.0, "avg_logprob": -0.2138970953519227, "compression_ratio": 1.5568627450980392, "no_speech_prob": 8.397419151151553e-06}, {"id": 2146, "seek": 530440, "start": 5304.4, "end": 5308.28, "text": " to try and kind of fill in around this issue", "tokens": [281, 853, 293, 733, 295, 2836, 294, 926, 341, 2734], "temperature": 0.0, "avg_logprob": -0.11873606479529178, "compression_ratio": 1.7475728155339805, "no_speech_prob": 1.5934287148411386e-05}, {"id": 2147, "seek": 530440, "start": 5308.28, "end": 5310.08, "text": " of having this huge kind of mechanism", "tokens": [295, 1419, 341, 2603, 733, 295, 7513], "temperature": 0.0, "avg_logprob": -0.11873606479529178, "compression_ratio": 1.7475728155339805, "no_speech_prob": 1.5934287148411386e-05}, {"id": 2148, "seek": 530440, "start": 5310.08, "end": 5311.679999999999, "text": " that works in a particular way", "tokens": [300, 1985, 294, 257, 1729, 636], "temperature": 0.0, "avg_logprob": -0.11873606479529178, "compression_ratio": 1.7475728155339805, "no_speech_prob": 1.5934287148411386e-05}, {"id": 2149, "seek": 530440, "start": 5311.679999999999, "end": 5313.96, "text": " to make sure that, you know, you can put it on mobile phones", "tokens": [281, 652, 988, 300, 11, 291, 458, 11, 291, 393, 829, 309, 322, 6013, 10216], "temperature": 0.0, "avg_logprob": -0.11873606479529178, "compression_ratio": 1.7475728155339805, "no_speech_prob": 1.5934287148411386e-05}, {"id": 2150, "seek": 530440, "start": 5313.96, "end": 5317.32, "text": " or that you can do it on web servers or whatever, right?", "tokens": [420, 300, 291, 393, 360, 309, 322, 3670, 15909, 420, 2035, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.11873606479529178, "compression_ratio": 1.7475728155339805, "no_speech_prob": 1.5934287148411386e-05}, {"id": 2151, "seek": 530440, "start": 5318.28, "end": 5323.28, "text": " But the good news is that what's happening at the moment", "tokens": [583, 264, 665, 2583, 307, 300, 437, 311, 2737, 412, 264, 1623], "temperature": 0.0, "avg_logprob": -0.11873606479529178, "compression_ratio": 1.7475728155339805, "no_speech_prob": 1.5934287148411386e-05}, {"id": 2152, "seek": 530440, "start": 5323.44, "end": 5325.0199999999995, "text": " and the reason we're seeing,", "tokens": [293, 264, 1778, 321, 434, 2577, 11], "temperature": 0.0, "avg_logprob": -0.11873606479529178, "compression_ratio": 1.7475728155339805, "no_speech_prob": 1.5934287148411386e-05}, {"id": 2153, "seek": 530440, "start": 5328.28, "end": 5331.0, "text": " the reason we're seeing this speed, right?", "tokens": [264, 1778, 321, 434, 2577, 341, 3073, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.11873606479529178, "compression_ratio": 1.7475728155339805, "no_speech_prob": 1.5934287148411386e-05}, {"id": 2154, "seek": 533100, "start": 5331.0, "end": 5335.18, "text": " Is that behind the scenes, Swift for TensorFlow", "tokens": [1119, 300, 2261, 264, 8026, 11, 25539, 337, 37624], "temperature": 0.0, "avg_logprob": -0.12156173049426469, "compression_ratio": 1.7283464566929134, "no_speech_prob": 4.565674771583872e-06}, {"id": 2155, "seek": 533100, "start": 5335.18, "end": 5337.8, "text": " is using TF Eager.", "tokens": [307, 1228, 40964, 462, 3557, 13], "temperature": 0.0, "avg_logprob": -0.12156173049426469, "compression_ratio": 1.7283464566929134, "no_speech_prob": 4.565674771583872e-06}, {"id": 2156, "seek": 533100, "start": 5337.8, "end": 5339.24, "text": " And this is like a great choice", "tokens": [400, 341, 307, 411, 257, 869, 3922], "temperature": 0.0, "avg_logprob": -0.12156173049426469, "compression_ratio": 1.7283464566929134, "no_speech_prob": 4.565674771583872e-06}, {"id": 2157, "seek": 533100, "start": 5339.24, "end": 5341.28, "text": " because it lets us like do this course.", "tokens": [570, 309, 6653, 505, 411, 360, 341, 1164, 13], "temperature": 0.0, "avg_logprob": -0.12156173049426469, "compression_ratio": 1.7283464566929134, "no_speech_prob": 4.565674771583872e-06}, {"id": 2158, "seek": 533100, "start": 5341.28, "end": 5343.44, "text": " It lets us say like, here's how you use it.", "tokens": [467, 6653, 505, 584, 411, 11, 510, 311, 577, 291, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.12156173049426469, "compression_ratio": 1.7283464566929134, "no_speech_prob": 4.565674771583872e-06}, {"id": 2159, "seek": 533100, "start": 5343.44, "end": 5345.72, "text": " We can build things on top of it", "tokens": [492, 393, 1322, 721, 322, 1192, 295, 309], "temperature": 0.0, "avg_logprob": -0.12156173049426469, "compression_ratio": 1.7283464566929134, "no_speech_prob": 4.565674771583872e-06}, {"id": 2160, "seek": 533100, "start": 5345.72, "end": 5349.16, "text": " whilst the real stuff is being built behind the scenes.", "tokens": [18534, 264, 957, 1507, 307, 885, 3094, 2261, 264, 8026, 13], "temperature": 0.0, "avg_logprob": -0.12156173049426469, "compression_ratio": 1.7283464566929134, "no_speech_prob": 4.565674771583872e-06}, {"id": 2161, "seek": 533100, "start": 5349.16, "end": 5353.48, "text": " And the real stuff, which is to sit on top of this thing", "tokens": [400, 264, 957, 1507, 11, 597, 307, 281, 1394, 322, 1192, 295, 341, 551], "temperature": 0.0, "avg_logprob": -0.12156173049426469, "compression_ratio": 1.7283464566929134, "no_speech_prob": 4.565674771583872e-06}, {"id": 2162, "seek": 533100, "start": 5353.48, "end": 5356.28, "text": " called MLIR, which Chris can tell us a little bit about,", "tokens": [1219, 21601, 7740, 11, 597, 6688, 393, 980, 505, 257, 707, 857, 466, 11], "temperature": 0.0, "avg_logprob": -0.12156173049426469, "compression_ratio": 1.7283464566929134, "no_speech_prob": 4.565674771583872e-06}, {"id": 2163, "seek": 533100, "start": 5357.28, "end": 5360.32, "text": " which is basically gets all of that compiler goodness", "tokens": [597, 307, 1936, 2170, 439, 295, 300, 31958, 8387], "temperature": 0.0, "avg_logprob": -0.12156173049426469, "compression_ratio": 1.7283464566929134, "no_speech_prob": 4.565674771583872e-06}, {"id": 2164, "seek": 536032, "start": 5360.32, "end": 5364.639999999999, "text": " that you've seen and allow that to work with the GPU", "tokens": [300, 291, 600, 1612, 293, 2089, 300, 281, 589, 365, 264, 18407], "temperature": 0.0, "avg_logprob": -0.09940323282460697, "compression_ratio": 1.6370656370656371, "no_speech_prob": 1.7061458947864594e-06}, {"id": 2165, "seek": 536032, "start": 5364.639999999999, "end": 5367.92, "text": " and the CPU and different types of accelerators", "tokens": [293, 264, 13199, 293, 819, 3467, 295, 10172, 3391], "temperature": 0.0, "avg_logprob": -0.09940323282460697, "compression_ratio": 1.6370656370656371, "no_speech_prob": 1.7061458947864594e-06}, {"id": 2166, "seek": 536032, "start": 5367.92, "end": 5371.12, "text": " and let you write Swift, right?", "tokens": [293, 718, 291, 2464, 25539, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.09940323282460697, "compression_ratio": 1.6370656370656371, "no_speech_prob": 1.7061458947864594e-06}, {"id": 2167, "seek": 536032, "start": 5371.12, "end": 5373.08, "text": " So the reason I mention this is that", "tokens": [407, 264, 1778, 286, 2152, 341, 307, 300], "temperature": 0.0, "avg_logprob": -0.09940323282460697, "compression_ratio": 1.6370656370656371, "no_speech_prob": 1.7061458947864594e-06}, {"id": 2168, "seek": 536032, "start": 5373.08, "end": 5376.08, "text": " for probably as long as this course is relevant,", "tokens": [337, 1391, 382, 938, 382, 341, 1164, 307, 7340, 11], "temperature": 0.0, "avg_logprob": -0.09940323282460697, "compression_ratio": 1.6370656370656371, "no_speech_prob": 1.7061458947864594e-06}, {"id": 2169, "seek": 536032, "start": 5376.08, "end": 5378.84, "text": " you know, like the next year,", "tokens": [291, 458, 11, 411, 264, 958, 1064, 11], "temperature": 0.0, "avg_logprob": -0.09940323282460697, "compression_ratio": 1.6370656370656371, "no_speech_prob": 1.7061458947864594e-06}, {"id": 2170, "seek": 536032, "start": 5378.84, "end": 5381.719999999999, "text": " the true potential of what we're talking about,", "tokens": [264, 2074, 3995, 295, 437, 321, 434, 1417, 466, 11], "temperature": 0.0, "avg_logprob": -0.09940323282460697, "compression_ratio": 1.6370656370656371, "no_speech_prob": 1.7061458947864594e-06}, {"id": 2171, "seek": 536032, "start": 5381.719999999999, "end": 5384.12, "text": " you kind of won't be able to see it, right?", "tokens": [291, 733, 295, 1582, 380, 312, 1075, 281, 536, 309, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.09940323282460697, "compression_ratio": 1.6370656370656371, "no_speech_prob": 1.7061458947864594e-06}, {"id": 2172, "seek": 536032, "start": 5384.12, "end": 5385.84, "text": " We're actually building for a future", "tokens": [492, 434, 767, 2390, 337, 257, 2027], "temperature": 0.0, "avg_logprob": -0.09940323282460697, "compression_ratio": 1.6370656370656371, "no_speech_prob": 1.7061458947864594e-06}, {"id": 2173, "seek": 536032, "start": 5385.84, "end": 5386.759999999999, "text": " that's not here yet.", "tokens": [300, 311, 406, 510, 1939, 13], "temperature": 0.0, "avg_logprob": -0.09940323282460697, "compression_ratio": 1.6370656370656371, "no_speech_prob": 1.7061458947864594e-06}, {"id": 2174, "seek": 536032, "start": 5386.759999999999, "end": 5388.36, "text": " This is like a year away.", "tokens": [639, 307, 411, 257, 1064, 1314, 13], "temperature": 0.0, "avg_logprob": -0.09940323282460697, "compression_ratio": 1.6370656370656371, "no_speech_prob": 1.7061458947864594e-06}, {"id": 2175, "seek": 538836, "start": 5388.36, "end": 5390.679999999999, "text": " But when we get there,", "tokens": [583, 562, 321, 483, 456, 11], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2176, "seek": 538836, "start": 5390.679999999999, "end": 5392.92, "text": " all the stuff that Chris is showing you,", "tokens": [439, 264, 1507, 300, 6688, 307, 4099, 291, 11], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2177, "seek": 538836, "start": 5394.5599999999995, "end": 5398.0, "text": " it will be able to write stuff that looks,", "tokens": [309, 486, 312, 1075, 281, 2464, 1507, 300, 1542, 11], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2178, "seek": 538836, "start": 5399.679999999999, "end": 5401.639999999999, "text": " that could even look like this.", "tokens": [300, 727, 754, 574, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2179, "seek": 538836, "start": 5401.639999999999, "end": 5402.96, "text": " Yeah, so if I were,", "tokens": [865, 11, 370, 498, 286, 645, 11], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2180, "seek": 538836, "start": 5402.96, "end": 5404.4, "text": " a different way to explain it,", "tokens": [257, 819, 636, 281, 2903, 309, 11], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2181, "seek": 538836, "start": 5404.4, "end": 5407.08, "text": " a year from now it's gonna be mind blowing.", "tokens": [257, 1064, 490, 586, 309, 311, 799, 312, 1575, 15068, 13], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2182, "seek": 538836, "start": 5407.08, "end": 5408.839999999999, "text": " Like the future, you're gonna be able to do stuff", "tokens": [1743, 264, 2027, 11, 291, 434, 799, 312, 1075, 281, 360, 1507], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2183, "seek": 538836, "start": 5408.839999999999, "end": 5411.0, "text": " you've never even thought that was possible", "tokens": [291, 600, 1128, 754, 1194, 300, 390, 1944], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2184, "seek": 538836, "start": 5411.0, "end": 5412.5199999999995, "text": " and use these accelerators in ways", "tokens": [293, 764, 613, 10172, 3391, 294, 2098], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2185, "seek": 538836, "start": 5412.5199999999995, "end": 5414.12, "text": " that are just completely unthinkable", "tokens": [300, 366, 445, 2584, 517, 21074, 712], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2186, "seek": 538836, "start": 5414.12, "end": 5416.719999999999, "text": " unless you're writing low level CUDA today.", "tokens": [5969, 291, 434, 3579, 2295, 1496, 29777, 7509, 965, 13], "temperature": 0.0, "avg_logprob": -0.14322366489200142, "compression_ratio": 1.6468401486988848, "no_speech_prob": 1.8445736031935667e-06}, {"id": 2187, "seek": 541672, "start": 5416.72, "end": 5418.6, "text": " Like there are certain humans in the world,", "tokens": [1743, 456, 366, 1629, 6255, 294, 264, 1002, 11], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2188, "seek": 541672, "start": 5418.6, "end": 5420.12, "text": " like Scott Gray is one of these people", "tokens": [411, 6659, 22668, 307, 472, 295, 613, 561], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2189, "seek": 541672, "start": 5420.12, "end": 5422.88, "text": " who can make an accelerator do crazy things", "tokens": [567, 393, 652, 364, 39889, 360, 3219, 721], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2190, "seek": 541672, "start": 5422.88, "end": 5424.56, "text": " that nobody even thought was possible.", "tokens": [300, 5079, 754, 1194, 390, 1944, 13], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2191, "seek": 541672, "start": 5424.56, "end": 5426.08, "text": " And that's what we're trying to do,", "tokens": [400, 300, 311, 437, 321, 434, 1382, 281, 360, 11], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2192, "seek": 541672, "start": 5426.08, "end": 5427.04, "text": " but in a workbook.", "tokens": [457, 294, 257, 589, 2939, 13], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2193, "seek": 541672, "start": 5427.04, "end": 5428.88, "text": " Right, and the reason this matters", "tokens": [1779, 11, 293, 264, 1778, 341, 7001], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2194, "seek": 541672, "start": 5428.88, "end": 5431.04, "text": " is that there are vast areas", "tokens": [307, 300, 456, 366, 8369, 3179], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2195, "seek": 541672, "start": 5431.04, "end": 5433.64, "text": " of unexplored research territory,", "tokens": [295, 11572, 564, 2769, 2132, 11360, 11], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2196, "seek": 541672, "start": 5433.64, "end": 5437.92, "text": " because I mean, most people can't write the CUDA code,", "tokens": [570, 286, 914, 11, 881, 561, 393, 380, 2464, 264, 29777, 7509, 3089, 11], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2197, "seek": 541672, "start": 5437.92, "end": 5439.280000000001, "text": " and even those that can,", "tokens": [293, 754, 729, 300, 393, 11], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2198, "seek": 541672, "start": 5439.280000000001, "end": 5442.240000000001, "text": " it takes so long and it has so many errors,", "tokens": [309, 2516, 370, 938, 293, 309, 575, 370, 867, 13603, 11], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2199, "seek": 541672, "start": 5442.240000000001, "end": 5444.0, "text": " you just don't, right?", "tokens": [291, 445, 500, 380, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2200, "seek": 541672, "start": 5444.0, "end": 5445.16, "text": " So in a year's time,", "tokens": [407, 294, 257, 1064, 311, 565, 11], "temperature": 0.0, "avg_logprob": -0.12246848153067635, "compression_ratio": 1.5986842105263157, "no_speech_prob": 1.0781530363601632e-05}, {"id": 2201, "seek": 544516, "start": 5445.16, "end": 5447.48, "text": " we'll be able to do stuff that people", "tokens": [321, 603, 312, 1075, 281, 360, 1507, 300, 561], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2202, "seek": 544516, "start": 5447.48, "end": 5448.96, "text": " just aren't even trying to do yet.", "tokens": [445, 3212, 380, 754, 1382, 281, 360, 1939, 13], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2203, "seek": 544516, "start": 5448.96, "end": 5450.639999999999, "text": " But one of the cool things about this", "tokens": [583, 472, 295, 264, 1627, 721, 466, 341], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2204, "seek": 544516, "start": 5450.639999999999, "end": 5451.76, "text": " is you don't have to wait a year.", "tokens": [307, 291, 500, 380, 362, 281, 1699, 257, 1064, 13], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2205, "seek": 544516, "start": 5451.76, "end": 5455.16, "text": " So next lesson, we'll show you that XLA is here today.", "tokens": [407, 958, 6898, 11, 321, 603, 855, 291, 300, 1783, 11435, 307, 510, 965, 13], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2206, "seek": 544516, "start": 5455.16, "end": 5456.4, "text": " XLA is super awesome,", "tokens": [1783, 11435, 307, 1687, 3476, 11], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2207, "seek": 544516, "start": 5456.4, "end": 5458.44, "text": " it's a really important part of the TensorFlow ecosystem,", "tokens": [309, 311, 257, 534, 1021, 644, 295, 264, 37624, 11311, 11], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2208, "seek": 544516, "start": 5458.44, "end": 5461.0, "text": " and it's way better than the torched shit.", "tokens": [293, 309, 311, 636, 1101, 813, 264, 3930, 19318, 4611, 13], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2209, "seek": 544516, "start": 5461.0, "end": 5462.44, "text": " Right, so just to explain, yeah.", "tokens": [1779, 11, 370, 445, 281, 2903, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2210, "seek": 544516, "start": 5462.44, "end": 5464.96, "text": " So we wanna like completely jump over the industry", "tokens": [407, 321, 1948, 411, 2584, 3012, 670, 264, 3518], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2211, "seek": 544516, "start": 5464.96, "end": 5467.88, "text": " and do something that is mind expanding.", "tokens": [293, 360, 746, 300, 307, 1575, 14702, 13], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2212, "seek": 544516, "start": 5467.88, "end": 5470.28, "text": " But even today, TensorFlow has a lot of power", "tokens": [583, 754, 965, 11, 37624, 575, 257, 688, 295, 1347], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2213, "seek": 544516, "start": 5470.28, "end": 5474.36, "text": " and XLA allows you to express and build really cool things", "tokens": [293, 1783, 11435, 4045, 291, 281, 5109, 293, 1322, 534, 1627, 721], "temperature": 0.0, "avg_logprob": -0.0998558598179971, "compression_ratio": 1.7358490566037736, "no_speech_prob": 7.2958055170602165e-06}, {"id": 2214, "seek": 547436, "start": 5474.36, "end": 5475.32, "text": " with super high performance.", "tokens": [365, 1687, 1090, 3389, 13], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2215, "seek": 547436, "start": 5475.32, "end": 5477.719999999999, "text": " Exactly, so XLA is this really nice kind of", "tokens": [7587, 11, 370, 1783, 11435, 307, 341, 534, 1481, 733, 295], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2216, "seek": 547436, "start": 5477.719999999999, "end": 5480.0, "text": " intermediate thing where it's much more mature", "tokens": [19376, 551, 689, 309, 311, 709, 544, 14442], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2217, "seek": 547436, "start": 5480.0, "end": 5480.92, "text": " than the PyTorch JIT,", "tokens": [813, 264, 9953, 51, 284, 339, 508, 3927, 11], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2218, "seek": 547436, "start": 5480.92, "end": 5483.5599999999995, "text": " it's been around for a couple of years now.", "tokens": [309, 311, 668, 926, 337, 257, 1916, 295, 924, 586, 13], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2219, "seek": 547436, "start": 5483.5599999999995, "end": 5487.08, "text": " It's a compiler that will turn your code into stuff", "tokens": [467, 311, 257, 31958, 300, 486, 1261, 428, 3089, 666, 1507], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2220, "seek": 547436, "start": 5487.08, "end": 5489.639999999999, "text": " that's kind of similar-ish performance", "tokens": [300, 311, 733, 295, 2531, 12, 742, 3389], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2221, "seek": 547436, "start": 5489.639999999999, "end": 5491.48, "text": " to what you might see from PyTorch JIT,", "tokens": [281, 437, 291, 1062, 536, 490, 9953, 51, 284, 339, 508, 3927, 11], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2222, "seek": 547436, "start": 5491.48, "end": 5493.16, "text": " probably a lot less rough edges.", "tokens": [1391, 257, 688, 1570, 5903, 8819, 13], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2223, "seek": 547436, "start": 5493.16, "end": 5494.92, "text": " Doesn't generate blobs of C++", "tokens": [12955, 380, 8460, 1749, 929, 295, 383, 25472], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2224, "seek": 547436, "start": 5494.92, "end": 5497.0, "text": " and try to compile them again.", "tokens": [293, 853, 281, 31413, 552, 797, 13], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2225, "seek": 547436, "start": 5497.0, "end": 5498.5599999999995, "text": " Yeah, it's a principled compiler.", "tokens": [865, 11, 309, 311, 257, 3681, 15551, 31958, 13], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2226, "seek": 547436, "start": 5498.5599999999995, "end": 5500.04, "text": " So it's a really neat path", "tokens": [407, 309, 311, 257, 534, 10654, 3100], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2227, "seek": 547436, "start": 5500.04, "end": 5502.0, "text": " because it allows us to do this course now,", "tokens": [570, 309, 4045, 505, 281, 360, 341, 1164, 586, 11], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2228, "seek": 547436, "start": 5502.0, "end": 5504.2, "text": " it allows you to start playing with this now,", "tokens": [309, 4045, 291, 281, 722, 2433, 365, 341, 586, 11], "temperature": 0.0, "avg_logprob": -0.12705413404717503, "compression_ratio": 1.6897590361445782, "no_speech_prob": 4.399748286232352e-05}, {"id": 2229, "seek": 550420, "start": 5504.2, "end": 5505.24, "text": " in a couple of months,", "tokens": [294, 257, 1916, 295, 2493, 11], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2230, "seek": 550420, "start": 5505.24, "end": 5507.0, "text": " it allows you to get a lot of performance", "tokens": [309, 4045, 291, 281, 483, 257, 688, 295, 3389], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2231, "seek": 550420, "start": 5507.0, "end": 5508.92, "text": " for a lot of things that you might wanna play with.", "tokens": [337, 257, 688, 295, 721, 300, 291, 1062, 1948, 862, 365, 13], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2232, "seek": 550420, "start": 5508.92, "end": 5513.48, "text": " And it means that by the time that MLIR comes,", "tokens": [400, 309, 1355, 300, 538, 264, 565, 300, 21601, 7740, 1487, 11], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2233, "seek": 550420, "start": 5513.48, "end": 5515.5599999999995, "text": " we'll be all ready to hit the ground running.", "tokens": [321, 603, 312, 439, 1919, 281, 2045, 264, 2727, 2614, 13], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2234, "seek": 550420, "start": 5515.5599999999995, "end": 5516.76, "text": " Yeah, cool.", "tokens": [865, 11, 1627, 13], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2235, "seek": 550420, "start": 5516.76, "end": 5519.76, "text": " Shin, is there a way to make sure the matmul", "tokens": [17347, 11, 307, 456, 257, 636, 281, 652, 988, 264, 3803, 76, 425], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2236, "seek": 550420, "start": 5519.76, "end": 5521.5599999999995, "text": " or other functions are correctly using", "tokens": [420, 661, 6828, 366, 8944, 1228], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2237, "seek": 550420, "start": 5521.5599999999995, "end": 5523.5599999999995, "text": " shared memory on the GPO?", "tokens": [5507, 4675, 322, 264, 26039, 46, 30], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2238, "seek": 550420, "start": 5523.5599999999995, "end": 5525.44, "text": " For example, using tiling to make sure", "tokens": [1171, 1365, 11, 1228, 256, 4883, 281, 652, 988], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2239, "seek": 550420, "start": 5525.44, "end": 5527.2, "text": " you aren't constantly busting the cache", "tokens": [291, 3212, 380, 6460, 272, 11712, 264, 19459], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2240, "seek": 550420, "start": 5527.2, "end": 5528.5199999999995, "text": " of shared memory on the GPO.", "tokens": [295, 5507, 4675, 322, 264, 26039, 46, 13], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2241, "seek": 550420, "start": 5528.5199999999995, "end": 5529.96, "text": " Yeah, we're not gonna talk about this next week,", "tokens": [865, 11, 321, 434, 406, 799, 751, 466, 341, 958, 1243, 11], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2242, "seek": 550420, "start": 5529.96, "end": 5531.679999999999, "text": " so maybe we could bring that to the end.", "tokens": [370, 1310, 321, 727, 1565, 300, 281, 264, 917, 13], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2243, "seek": 550420, "start": 5531.679999999999, "end": 5533.639999999999, "text": " Well, so I think that the thing to know", "tokens": [1042, 11, 370, 286, 519, 300, 264, 551, 281, 458], "temperature": 0.0, "avg_logprob": -0.1769925969592213, "compression_ratio": 1.7294832826747721, "no_speech_prob": 9.452157974010333e-05}, {"id": 2244, "seek": 553364, "start": 5533.64, "end": 5535.4800000000005, "text": " is that this is not something you would write", "tokens": [307, 300, 341, 307, 406, 746, 291, 576, 2464], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2245, "seek": 553364, "start": 5535.4800000000005, "end": 5536.8, "text": " in Swift for TensorFlow.", "tokens": [294, 25539, 337, 37624, 13], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2246, "seek": 553364, "start": 5536.8, "end": 5539.64, "text": " You would not poke a tensor one float at a time,", "tokens": [509, 576, 406, 19712, 257, 40863, 472, 15706, 412, 257, 565, 11], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2247, "seek": 553364, "start": 5539.64, "end": 5541.160000000001, "text": " it was just not designed for that.", "tokens": [309, 390, 445, 406, 4761, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2248, "seek": 553364, "start": 5541.160000000001, "end": 5542.84, "text": " And so you can go through all the steps,", "tokens": [400, 370, 291, 393, 352, 807, 439, 264, 4439, 11], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2249, "seek": 553364, "start": 5542.84, "end": 5544.84, "text": " this is very similar to the Python workbook,", "tokens": [341, 307, 588, 2531, 281, 264, 15329, 589, 2939, 11], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2250, "seek": 553364, "start": 5544.84, "end": 5546.84, "text": " but what you end up wanting to write is,", "tokens": [457, 437, 291, 917, 493, 7935, 281, 2464, 307, 11], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2251, "seek": 553364, "start": 5548.0, "end": 5548.84, "text": " let's see here.", "tokens": [718, 311, 536, 510, 13], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2252, "seek": 553364, "start": 5548.84, "end": 5549.68, "text": " What's the name of the word?", "tokens": [708, 311, 264, 1315, 295, 264, 1349, 30], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2253, "seek": 553364, "start": 5549.68, "end": 5550.88, "text": " You just write this.", "tokens": [509, 445, 2464, 341, 13], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2254, "seek": 553364, "start": 5551.96, "end": 5554.160000000001, "text": " Where you write something where you take two matrices", "tokens": [2305, 291, 2464, 746, 689, 291, 747, 732, 32284], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2255, "seek": 553364, "start": 5554.160000000001, "end": 5555.4400000000005, "text": " and you multiply them together.", "tokens": [293, 291, 12972, 552, 1214, 13], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2256, "seek": 553364, "start": 5555.4400000000005, "end": 5557.6, "text": " Or you use the Unicode one or the Matmul one", "tokens": [1610, 291, 764, 264, 1156, 299, 1429, 472, 420, 264, 6789, 76, 425, 472], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2257, "seek": 553364, "start": 5557.6, "end": 5560.6, "text": " and it goes fast and it takes 0.02 seconds,", "tokens": [293, 309, 1709, 2370, 293, 309, 2516, 1958, 13, 12756, 3949, 11], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2258, "seek": 553364, "start": 5560.6, "end": 5562.200000000001, "text": " which is faster than the Swift version", "tokens": [597, 307, 4663, 813, 264, 25539, 3037], "temperature": 0.0, "avg_logprob": -0.20441872396586855, "compression_ratio": 1.7208588957055215, "no_speech_prob": 1.5442959920619614e-05}, {"id": 2259, "seek": 556220, "start": 5562.2, "end": 5566.0, "text": " because it's using the GPU, it's properly tile blocked,", "tokens": [570, 309, 311, 1228, 264, 18407, 11, 309, 311, 6108, 20590, 15470, 11], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2260, "seek": 556220, "start": 5566.0, "end": 5567.8, "text": " if you run on the CPU it uses all the threads", "tokens": [498, 291, 1190, 322, 264, 13199, 309, 4960, 439, 264, 19314], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2261, "seek": 556220, "start": 5567.8, "end": 5570.24, "text": " on your computer and it goes really fast.", "tokens": [322, 428, 3820, 293, 309, 1709, 534, 2370, 13], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2262, "seek": 556220, "start": 5570.24, "end": 5572.08, "text": " And so the way to think about tensor", "tokens": [400, 370, 264, 636, 281, 519, 466, 40863], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2263, "seek": 556220, "start": 5572.08, "end": 5575.639999999999, "text": " is that it's meant for these big operations.", "tokens": [307, 300, 309, 311, 4140, 337, 613, 955, 7705, 13], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2264, "seek": 556220, "start": 5575.639999999999, "end": 5578.04, "text": " It's not meant for one float at a time.", "tokens": [467, 311, 406, 4140, 337, 472, 15706, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2265, "seek": 556220, "start": 5578.04, "end": 5580.48, "text": " And we will see next week some really interesting stuff", "tokens": [400, 321, 486, 536, 958, 1243, 512, 534, 1880, 1507], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2266, "seek": 556220, "start": 5580.48, "end": 5582.36, "text": " coming down the line.", "tokens": [1348, 760, 264, 1622, 13], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2267, "seek": 556220, "start": 5582.36, "end": 5583.2, "text": " Excellent.", "tokens": [16723, 13], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2268, "seek": 556220, "start": 5583.2, "end": 5586.04, "text": " Yeah, with stuff where you can write", "tokens": [865, 11, 365, 1507, 689, 291, 393, 2464], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2269, "seek": 556220, "start": 5586.04, "end": 5588.08, "text": " kind of tiled algorithms in ways", "tokens": [733, 295, 256, 7292, 14642, 294, 2098], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2270, "seek": 556220, "start": 5588.08, "end": 5591.0, "text": " that are much more concise than the triply nested for loops", "tokens": [300, 366, 709, 544, 44882, 813, 264, 1376, 2724, 15646, 292, 337, 16121], "temperature": 0.0, "avg_logprob": -0.14321626935686385, "compression_ratio": 1.6575342465753424, "no_speech_prob": 1.8055774489766918e-05}, {"id": 2271, "seek": 559100, "start": 5591.0, "end": 5593.72, "text": " but much more flexible than the Matmul.", "tokens": [457, 709, 544, 11358, 813, 264, 6789, 76, 425, 13], "temperature": 0.0, "avg_logprob": -0.11828590284848044, "compression_ratio": 1.5384615384615385, "no_speech_prob": 4.0035698475549e-05}, {"id": 2272, "seek": 559100, "start": 5593.72, "end": 5595.68, "text": " Yeah, join.", "tokens": [865, 11, 3917, 13], "temperature": 0.0, "avg_logprob": -0.11828590284848044, "compression_ratio": 1.5384615384615385, "no_speech_prob": 4.0035698475549e-05}, {"id": 2273, "seek": 559100, "start": 5595.68, "end": 5597.28, "text": " Sorry, another question just came in.", "tokens": [4919, 11, 1071, 1168, 445, 1361, 294, 13], "temperature": 0.0, "avg_logprob": -0.11828590284848044, "compression_ratio": 1.5384615384615385, "no_speech_prob": 4.0035698475549e-05}, {"id": 2274, "seek": 559100, "start": 5597.28, "end": 5601.6, "text": " How do LLVM, MLIR and XLA relate to each other?", "tokens": [1012, 360, 441, 43, 53, 44, 11, 21601, 7740, 293, 1783, 11435, 10961, 281, 1184, 661, 30], "temperature": 0.0, "avg_logprob": -0.11828590284848044, "compression_ratio": 1.5384615384615385, "no_speech_prob": 4.0035698475549e-05}, {"id": 2275, "seek": 559100, "start": 5602.76, "end": 5604.76, "text": " That would be better explained with slides,", "tokens": [663, 576, 312, 1101, 8825, 365, 9788, 11], "temperature": 0.0, "avg_logprob": -0.11828590284848044, "compression_ratio": 1.5384615384615385, "no_speech_prob": 4.0035698475549e-05}, {"id": 2276, "seek": 559100, "start": 5604.76, "end": 5606.56, "text": " which we'll go into on the next time I think.", "tokens": [597, 321, 603, 352, 666, 322, 264, 958, 565, 286, 519, 13], "temperature": 0.0, "avg_logprob": -0.11828590284848044, "compression_ratio": 1.5384615384615385, "no_speech_prob": 4.0035698475549e-05}, {"id": 2277, "seek": 559100, "start": 5606.56, "end": 5610.08, "text": " But LLVM, the simple way to explain it", "tokens": [583, 441, 43, 53, 44, 11, 264, 2199, 636, 281, 2903, 309], "temperature": 0.0, "avg_logprob": -0.11828590284848044, "compression_ratio": 1.5384615384615385, "no_speech_prob": 4.0035698475549e-05}, {"id": 2278, "seek": 559100, "start": 5610.08, "end": 5612.52, "text": " is that it is really good at CPUs.", "tokens": [307, 300, 309, 307, 534, 665, 412, 13199, 82, 13], "temperature": 0.0, "avg_logprob": -0.11828590284848044, "compression_ratio": 1.5384615384615385, "no_speech_prob": 4.0035698475549e-05}, {"id": 2279, "seek": 559100, "start": 5613.48, "end": 5614.8, "text": " It's a little bit of an oversimplification", "tokens": [467, 311, 257, 707, 857, 295, 364, 15488, 332, 564, 3774], "temperature": 0.0, "avg_logprob": -0.11828590284848044, "compression_ratio": 1.5384615384615385, "no_speech_prob": 4.0035698475549e-05}, {"id": 2280, "seek": 559100, "start": 5614.8, "end": 5617.16, "text": " because we do use it for some GPU stuff.", "tokens": [570, 321, 360, 764, 309, 337, 512, 18407, 1507, 13], "temperature": 0.0, "avg_logprob": -0.11828590284848044, "compression_ratio": 1.5384615384615385, "no_speech_prob": 4.0035698475549e-05}, {"id": 2281, "seek": 559100, "start": 5617.16, "end": 5620.48, "text": " But LLVM really helps you with the one float at a time", "tokens": [583, 441, 43, 53, 44, 534, 3665, 291, 365, 264, 472, 15706, 412, 257, 565], "temperature": 0.0, "avg_logprob": -0.11828590284848044, "compression_ratio": 1.5384615384615385, "no_speech_prob": 4.0035698475549e-05}, {"id": 2282, "seek": 562048, "start": 5620.48, "end": 5623.5599999999995, "text": " kind of a thing if you're going to a simpler processor.", "tokens": [733, 295, 257, 551, 498, 291, 434, 516, 281, 257, 18587, 15321, 13], "temperature": 0.0, "avg_logprob": -0.0780311243874686, "compression_ratio": 1.8192307692307692, "no_speech_prob": 2.0459876395761967e-05}, {"id": 2283, "seek": 562048, "start": 5625.04, "end": 5626.4, "text": " XLA is really good at tensors.", "tokens": [1783, 11435, 307, 534, 665, 412, 10688, 830, 13], "temperature": 0.0, "avg_logprob": -0.0780311243874686, "compression_ratio": 1.8192307692307692, "no_speech_prob": 2.0459876395761967e-05}, {"id": 2284, "seek": 562048, "start": 5626.4, "end": 5628.0, "text": " And so it's a tensor compiler.", "tokens": [400, 370, 309, 311, 257, 40863, 31958, 13], "temperature": 0.0, "avg_logprob": -0.0780311243874686, "compression_ratio": 1.8192307692307692, "no_speech_prob": 2.0459876395761967e-05}, {"id": 2285, "seek": 562048, "start": 5628.0, "end": 5629.799999999999, "text": " And so it's really good at saying,", "tokens": [400, 370, 309, 311, 534, 665, 412, 1566, 11], "temperature": 0.0, "avg_logprob": -0.0780311243874686, "compression_ratio": 1.8192307692307692, "no_speech_prob": 2.0459876395761967e-05}, {"id": 2286, "seek": 562048, "start": 5629.799999999999, "end": 5633.16, "text": " I have these big tensor operations, I have convolutions.", "tokens": [286, 362, 613, 955, 40863, 7705, 11, 286, 362, 3754, 15892, 13], "temperature": 0.0, "avg_logprob": -0.0780311243874686, "compression_ratio": 1.8192307692307692, "no_speech_prob": 2.0459876395761967e-05}, {"id": 2287, "seek": 562048, "start": 5633.16, "end": 5636.0, "text": " To get maximum performance out of a CPU or a GPU", "tokens": [1407, 483, 6674, 3389, 484, 295, 257, 13199, 420, 257, 18407], "temperature": 0.0, "avg_logprob": -0.0780311243874686, "compression_ratio": 1.8192307692307692, "no_speech_prob": 2.0459876395761967e-05}, {"id": 2288, "seek": 562048, "start": 5636.0, "end": 5639.48, "text": " or a TPU, for example, you have to know about tiling,", "tokens": [420, 257, 314, 8115, 11, 337, 1365, 11, 291, 362, 281, 458, 466, 256, 4883, 11], "temperature": 0.0, "avg_logprob": -0.0780311243874686, "compression_ratio": 1.8192307692307692, "no_speech_prob": 2.0459876395761967e-05}, {"id": 2289, "seek": 562048, "start": 5639.48, "end": 5640.919999999999, "text": " you have to know about fusion,", "tokens": [291, 362, 281, 458, 466, 23100, 11], "temperature": 0.0, "avg_logprob": -0.0780311243874686, "compression_ratio": 1.8192307692307692, "no_speech_prob": 2.0459876395761967e-05}, {"id": 2290, "seek": 562048, "start": 5640.919999999999, "end": 5643.959999999999, "text": " you have to know about a lot of these low level systems", "tokens": [291, 362, 281, 458, 466, 257, 688, 295, 613, 2295, 1496, 3652], "temperature": 0.0, "avg_logprob": -0.0780311243874686, "compression_ratio": 1.8192307692307692, "no_speech_prob": 2.0459876395761967e-05}, {"id": 2291, "seek": 562048, "start": 5643.959999999999, "end": 5647.639999999999, "text": " things before you then hand it off to LLVM", "tokens": [721, 949, 291, 550, 1011, 309, 766, 281, 441, 43, 53, 44], "temperature": 0.0, "avg_logprob": -0.0780311243874686, "compression_ratio": 1.8192307692307692, "no_speech_prob": 2.0459876395761967e-05}, {"id": 2292, "seek": 562048, "start": 5647.639999999999, "end": 5649.44, "text": " that does the low level stuff.", "tokens": [300, 775, 264, 2295, 1496, 1507, 13], "temperature": 0.0, "avg_logprob": -0.0780311243874686, "compression_ratio": 1.8192307692307692, "no_speech_prob": 2.0459876395761967e-05}, {"id": 2293, "seek": 564944, "start": 5649.44, "end": 5653.5199999999995, "text": " And so XLA talks to LLVM for GPUs, for example,", "tokens": [400, 370, 1783, 11435, 6686, 281, 441, 43, 53, 44, 337, 18407, 82, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.11999148616084346, "compression_ratio": 1.6823104693140793, "no_speech_prob": 4.288692252885085e-06}, {"id": 2294, "seek": 564944, "start": 5653.5199999999995, "end": 5654.36, "text": " and for CPUs.", "tokens": [293, 337, 13199, 82, 13], "temperature": 0.0, "avg_logprob": -0.11999148616084346, "compression_ratio": 1.6823104693140793, "no_speech_prob": 4.288692252885085e-06}, {"id": 2295, "seek": 564944, "start": 5654.36, "end": 5656.36, "text": " And there's the way to think about it is", "tokens": [400, 456, 311, 264, 636, 281, 519, 466, 309, 307], "temperature": 0.0, "avg_logprob": -0.11999148616084346, "compression_ratio": 1.6823104693140793, "no_speech_prob": 4.288692252885085e-06}, {"id": 2296, "seek": 564944, "start": 5656.36, "end": 5657.679999999999, "text": " XLA does all the tensor stuff", "tokens": [1783, 11435, 775, 439, 264, 40863, 1507], "temperature": 0.0, "avg_logprob": -0.11999148616084346, "compression_ratio": 1.6823104693140793, "no_speech_prob": 4.288692252885085e-06}, {"id": 2297, "seek": 564944, "start": 5657.679999999999, "end": 5661.32, "text": " and LLVM does all the float and small vector stuff.", "tokens": [293, 441, 43, 53, 44, 775, 439, 264, 15706, 293, 1359, 8062, 1507, 13], "temperature": 0.0, "avg_logprob": -0.11999148616084346, "compression_ratio": 1.6823104693140793, "no_speech_prob": 4.288692252885085e-06}, {"id": 2298, "seek": 564944, "start": 5661.32, "end": 5663.599999999999, "text": " MLR is like XLA in a certain way,", "tokens": [21601, 49, 307, 411, 1783, 11435, 294, 257, 1629, 636, 11], "temperature": 0.0, "avg_logprob": -0.11999148616084346, "compression_ratio": 1.6823104693140793, "no_speech_prob": 4.288692252885085e-06}, {"id": 2299, "seek": 564944, "start": 5663.599999999999, "end": 5666.639999999999, "text": " but it's tackling graph level optimizations and tensor flow", "tokens": [457, 309, 311, 34415, 4295, 1496, 5028, 14455, 293, 40863, 3095], "temperature": 0.0, "avg_logprob": -0.11999148616084346, "compression_ratio": 1.6823104693140793, "no_speech_prob": 4.288692252885085e-06}, {"id": 2300, "seek": 564944, "start": 5666.639999999999, "end": 5671.5599999999995, "text": " and kind of expanding XLA beyond just dense linear algebra", "tokens": [293, 733, 295, 14702, 1783, 11435, 4399, 445, 18011, 8213, 21989], "temperature": 0.0, "avg_logprob": -0.11999148616084346, "compression_ratio": 1.6823104693140793, "no_speech_prob": 4.288692252885085e-06}, {"id": 2301, "seek": 564944, "start": 5671.5599999999995, "end": 5673.879999999999, "text": " because there's a lot of interesting,", "tokens": [570, 456, 311, 257, 688, 295, 1880, 11], "temperature": 0.0, "avg_logprob": -0.11999148616084346, "compression_ratio": 1.6823104693140793, "no_speech_prob": 4.288692252885085e-06}, {"id": 2302, "seek": 564944, "start": 5673.879999999999, "end": 5675.879999999999, "text": " sparse things and other things that are coming down", "tokens": [637, 11668, 721, 293, 661, 721, 300, 366, 1348, 760], "temperature": 0.0, "avg_logprob": -0.11999148616084346, "compression_ratio": 1.6823104693140793, "no_speech_prob": 4.288692252885085e-06}, {"id": 2303, "seek": 564944, "start": 5675.879999999999, "end": 5678.4, "text": " the pipeline that are really exciting.", "tokens": [264, 15517, 300, 366, 534, 4670, 13], "temperature": 0.0, "avg_logprob": -0.11999148616084346, "compression_ratio": 1.6823104693140793, "no_speech_prob": 4.288692252885085e-06}, {"id": 2304, "seek": 567840, "start": 5678.4, "end": 5680.839999999999, "text": " So, yeah, so basically, I mean,", "tokens": [407, 11, 1338, 11, 370, 1936, 11, 286, 914, 11], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2305, "seek": 567840, "start": 5680.839999999999, "end": 5682.639999999999, "text": " we won't look at the rest of this notebook", "tokens": [321, 1582, 380, 574, 412, 264, 1472, 295, 341, 21060], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2306, "seek": 567840, "start": 5682.639999999999, "end": 5685.04, "text": " other than to say that the broadcasting stuff", "tokens": [661, 813, 281, 584, 300, 264, 30024, 1507], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2307, "seek": 567840, "start": 5685.04, "end": 5687.96, "text": " that we saw is all here.", "tokens": [300, 321, 1866, 307, 439, 510, 13], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2308, "seek": 567840, "start": 5687.96, "end": 5690.799999999999, "text": " So you can kind of see how that all looks at the moment.", "tokens": [407, 291, 393, 733, 295, 536, 577, 300, 439, 1542, 412, 264, 1623, 13], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2309, "seek": 567840, "start": 5690.799999999999, "end": 5693.28, "text": " You can run ops on the CPU or the GPU,", "tokens": [509, 393, 1190, 44663, 322, 264, 13199, 420, 264, 18407, 11], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2310, "seek": 567840, "start": 5693.28, "end": 5694.879999999999, "text": " I mean, all that stuff is all here.", "tokens": [286, 914, 11, 439, 300, 1507, 307, 439, 510, 13], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2311, "seek": 567840, "start": 5694.879999999999, "end": 5697.16, "text": " And don't worry about the performance,", "tokens": [400, 500, 380, 3292, 466, 264, 3389, 11], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2312, "seek": 567840, "start": 5697.16, "end": 5699.12, "text": " it's really slow at the moment for the reason we mentioned,", "tokens": [309, 311, 534, 2964, 412, 264, 1623, 337, 264, 1778, 321, 2835, 11], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2313, "seek": 567840, "start": 5699.12, "end": 5700.639999999999, "text": " but it totally won't be.", "tokens": [457, 309, 3879, 1582, 380, 312, 13], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2314, "seek": 567840, "start": 5701.799999999999, "end": 5703.48, "text": " And you can also see matrix modifications", "tokens": [400, 291, 393, 611, 536, 8141, 26881], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2315, "seek": 567840, "start": 5703.48, "end": 5706.799999999999, "text": " at different sizes and how to take its timing and so forth.", "tokens": [412, 819, 11602, 293, 577, 281, 747, 1080, 10822, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.18322479724884033, "compression_ratio": 1.7587412587412588, "no_speech_prob": 0.00010384758934378624}, {"id": 2316, "seek": 570680, "start": 5706.8, "end": 5710.2, "text": " So did you want to go to raw now?", "tokens": [407, 630, 291, 528, 281, 352, 281, 8936, 586, 30], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2317, "seek": 570680, "start": 5710.2, "end": 5712.0, "text": " Well, do you want to do this or do you want to go to 11?", "tokens": [1042, 11, 360, 291, 528, 281, 360, 341, 420, 360, 291, 528, 281, 352, 281, 2975, 30], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2318, "seek": 570680, "start": 5712.0, "end": 5713.0, "text": " Do we have time?", "tokens": [1144, 321, 362, 565, 30], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2319, "seek": 570680, "start": 5713.0, "end": 5714.360000000001, "text": " We have time to do this now.", "tokens": [492, 362, 565, 281, 360, 341, 586, 13], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2320, "seek": 570680, "start": 5714.360000000001, "end": 5715.360000000001, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2321, "seek": 570680, "start": 5715.360000000001, "end": 5716.96, "text": " Maybe five to 10 minutes.", "tokens": [2704, 1732, 281, 1266, 2077, 13], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2322, "seek": 570680, "start": 5716.96, "end": 5717.96, "text": " Okay, cool.", "tokens": [1033, 11, 1627, 13], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2323, "seek": 570680, "start": 5717.96, "end": 5720.400000000001, "text": " So one of the really cool things about the stack", "tokens": [407, 472, 295, 264, 534, 1627, 721, 466, 264, 8630], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2324, "seek": 570680, "start": 5720.400000000001, "end": 5722.6, "text": " is that TensorFlow is a really mature ecosystem.", "tokens": [307, 300, 37624, 307, 257, 534, 14442, 11311, 13], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2325, "seek": 570680, "start": 5722.6, "end": 5725.0, "text": " It has hundreds of different operators available.", "tokens": [467, 575, 6779, 295, 819, 19077, 2435, 13], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2326, "seek": 570680, "start": 5726.320000000001, "end": 5727.56, "text": " There's pros and cons of this.", "tokens": [821, 311, 6267, 293, 1014, 295, 341, 13], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2327, "seek": 570680, "start": 5727.56, "end": 5730.4400000000005, "text": " So TensorFlow kind of grew organically over time a little bit", "tokens": [407, 37624, 733, 295, 6109, 1798, 984, 670, 565, 257, 707, 857], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2328, "seek": 570680, "start": 5730.4400000000005, "end": 5734.72, "text": " and so it has a lot of things in its toolbox.", "tokens": [293, 370, 309, 575, 257, 688, 295, 721, 294, 1080, 44593, 13], "temperature": 0.0, "avg_logprob": -0.3164065244386522, "compression_ratio": 1.6981818181818182, "no_speech_prob": 6.853235845483141e-06}, {"id": 2329, "seek": 573472, "start": 5734.72, "end": 5737.64, "text": " What Swift for TensorFlow does is it tries to curate that", "tokens": [708, 25539, 337, 37624, 775, 307, 309, 9898, 281, 1262, 473, 300], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2330, "seek": 573472, "start": 5737.64, "end": 5739.4400000000005, "text": " and it has tensor.", "tokens": [293, 309, 575, 40863, 13], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2331, "seek": 573472, "start": 5739.4400000000005, "end": 5741.92, "text": " And the way tensor works is it's the struct", "tokens": [400, 264, 636, 40863, 1985, 307, 309, 311, 264, 6594], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2332, "seek": 573472, "start": 5741.92, "end": 5744.92, "text": " and the struct is implemented in terms of those", "tokens": [293, 264, 6594, 307, 12270, 294, 2115, 295, 729], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2333, "seek": 573472, "start": 5744.92, "end": 5746.2, "text": " low-level tensor operations.", "tokens": [2295, 12, 12418, 40863, 7705, 13], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2334, "seek": 573472, "start": 5746.2, "end": 5748.12, "text": " And so if you look inside tensor,", "tokens": [400, 370, 498, 291, 574, 1854, 40863, 11], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2335, "seek": 573472, "start": 5748.12, "end": 5750.0, "text": " and here there's a link so you can go click on it", "tokens": [293, 510, 456, 311, 257, 2113, 370, 291, 393, 352, 2052, 322, 309], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2336, "seek": 573472, "start": 5750.0, "end": 5751.4800000000005, "text": " and see the implementation,", "tokens": [293, 536, 264, 11420, 11], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2337, "seek": 573472, "start": 5751.4800000000005, "end": 5753.76, "text": " tensor has this thing called tensor handle", "tokens": [40863, 575, 341, 551, 1219, 40863, 4813], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2338, "seek": 573472, "start": 5753.76, "end": 5755.12, "text": " that is under the covers,", "tokens": [300, 307, 833, 264, 10538, 11], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2339, "seek": 573472, "start": 5755.12, "end": 5759.16, "text": " basically the TensorFlow low-level thing", "tokens": [1936, 264, 37624, 2295, 12, 12418, 551], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2340, "seek": 573472, "start": 5759.16, "end": 5760.56, "text": " that Eager mode uses.", "tokens": [300, 462, 3557, 4391, 4960, 13], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2341, "seek": 573472, "start": 5760.56, "end": 5761.96, "text": " And then if you look at plus,", "tokens": [400, 550, 498, 291, 574, 412, 1804, 11], "temperature": 0.0, "avg_logprob": -0.30019070551945615, "compression_ratio": 1.8616600790513833, "no_speech_prob": 1.9830025848932564e-05}, {"id": 2342, "seek": 576196, "start": 5761.96, "end": 5767.96, "text": " what plus does on two tensors is it calls this raw add operation.", "tokens": [437, 1804, 775, 322, 732, 10688, 830, 307, 309, 5498, 341, 8936, 909, 6916, 13], "temperature": 0.0, "avg_logprob": -0.24158898989359537, "compression_ratio": 1.7991967871485943, "no_speech_prob": 6.475574991782196e-07}, {"id": 2343, "seek": 576196, "start": 5767.96, "end": 5772.6, "text": " And the way that this works is this is just directly talking", "tokens": [400, 264, 636, 300, 341, 1985, 307, 341, 307, 445, 3838, 1417], "temperature": 0.0, "avg_logprob": -0.24158898989359537, "compression_ratio": 1.7991967871485943, "no_speech_prob": 6.475574991782196e-07}, {"id": 2344, "seek": 576196, "start": 5772.6, "end": 5775.44, "text": " to the add op in TensorFlow.", "tokens": [281, 264, 909, 999, 294, 37624, 13], "temperature": 0.0, "avg_logprob": -0.24158898989359537, "compression_ratio": 1.7991967871485943, "no_speech_prob": 6.475574991782196e-07}, {"id": 2345, "seek": 576196, "start": 5775.44, "end": 5777.72, "text": " And the add op is implemented with cuDNN", "tokens": [400, 264, 909, 999, 307, 12270, 365, 2702, 35, 45, 45], "temperature": 0.0, "avg_logprob": -0.24158898989359537, "compression_ratio": 1.7991967871485943, "no_speech_prob": 6.475574991782196e-07}, {"id": 2346, "seek": 576196, "start": 5777.72, "end": 5778.92, "text": " or it's implemented with XLA", "tokens": [420, 309, 311, 12270, 365, 1783, 11435], "temperature": 0.0, "avg_logprob": -0.24158898989359537, "compression_ratio": 1.7991967871485943, "no_speech_prob": 6.475574991782196e-07}, {"id": 2347, "seek": 576196, "start": 5778.92, "end": 5780.2, "text": " or it's implemented in different ways", "tokens": [420, 309, 311, 12270, 294, 819, 2098], "temperature": 0.0, "avg_logprob": -0.24158898989359537, "compression_ratio": 1.7991967871485943, "no_speech_prob": 6.475574991782196e-07}, {"id": 2348, "seek": 576196, "start": 5780.2, "end": 5782.2, "text": " for different pieces of hardware.", "tokens": [337, 819, 3755, 295, 8837, 13], "temperature": 0.0, "avg_logprob": -0.24158898989359537, "compression_ratio": 1.7991967871485943, "no_speech_prob": 6.475574991782196e-07}, {"id": 2349, "seek": 576196, "start": 5782.2, "end": 5785.44, "text": " But this is just a simple syntactic sugar thing", "tokens": [583, 341, 307, 445, 257, 2199, 23980, 19892, 5076, 551], "temperature": 0.0, "avg_logprob": -0.24158898989359537, "compression_ratio": 1.7991967871485943, "no_speech_prob": 6.475574991782196e-07}, {"id": 2350, "seek": 576196, "start": 5785.44, "end": 5788.76, "text": " where we're saying, hey, plus turns into TensorFlow add.", "tokens": [689, 321, 434, 1566, 11, 4177, 11, 1804, 4523, 666, 37624, 909, 13], "temperature": 0.0, "avg_logprob": -0.24158898989359537, "compression_ratio": 1.7991967871485943, "no_speech_prob": 6.475574991782196e-07}, {"id": 2351, "seek": 576196, "start": 5788.76, "end": 5790.96, "text": " Now, again, TensorFlow has tons of cool stuff", "tokens": [823, 11, 797, 11, 37624, 575, 9131, 295, 1627, 1507], "temperature": 0.0, "avg_logprob": -0.24158898989359537, "compression_ratio": 1.7991967871485943, "no_speech_prob": 6.475574991782196e-07}, {"id": 2352, "seek": 579096, "start": 5790.96, "end": 5794.28, "text": " and it has stuff that I barely understand", "tokens": [293, 309, 575, 1507, 300, 286, 10268, 1223], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2353, "seek": 579096, "start": 5794.28, "end": 5796.64, "text": " with lots of mathy things and triangular", "tokens": [365, 3195, 295, 5221, 88, 721, 293, 38190], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2354, "seek": 579096, "start": 5796.64, "end": 5801.4800000000005, "text": " LU decompositional things and like Bayesian propagation", "tokens": [31851, 48356, 304, 721, 293, 411, 7840, 42434, 38377], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2355, "seek": 579096, "start": 5801.4800000000005, "end": 5802.64, "text": " of things that I've...", "tokens": [295, 721, 300, 286, 600, 485], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2356, "seek": 579096, "start": 5802.64, "end": 5804.8, "text": " We have an excellent course about triangular decomposition", "tokens": [492, 362, 364, 7103, 1164, 466, 38190, 48356], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2357, "seek": 579096, "start": 5804.8, "end": 5805.8, "text": " if you check that.", "tokens": [498, 291, 1520, 300, 13], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2358, "seek": 579096, "start": 5805.8, "end": 5807.2, "text": " Awesome.", "tokens": [10391, 13], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2359, "seek": 579096, "start": 5807.2, "end": 5812.28, "text": " I'm going to try to survive next week and then I'll take it.", "tokens": [286, 478, 516, 281, 853, 281, 7867, 958, 1243, 293, 550, 286, 603, 747, 309, 13], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2360, "seek": 579096, "start": 5812.28, "end": 5815.52, "text": " And so we haven't curated all of the things", "tokens": [400, 370, 321, 2378, 380, 47851, 439, 295, 264, 721], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2361, "seek": 579096, "start": 5815.52, "end": 5817.04, "text": " that are potentially interesting.", "tokens": [300, 366, 7263, 1880, 13], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2362, "seek": 579096, "start": 5817.04, "end": 5819.8, "text": " And so what you can do is you can actually add new things", "tokens": [400, 370, 437, 291, 393, 360, 307, 291, 393, 767, 909, 777, 721], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2363, "seek": 579096, "start": 5819.8, "end": 5820.72, "text": " to tensor.", "tokens": [281, 40863, 13], "temperature": 0.0, "avg_logprob": -0.2189558974835051, "compression_ratio": 1.7471264367816093, "no_speech_prob": 1.4060888133826666e-05}, {"id": 2364, "seek": 582072, "start": 5820.72, "end": 5825.16, "text": " And so one example of that right here is...", "tokens": [400, 370, 472, 1365, 295, 300, 558, 510, 307, 485], "temperature": 0.0, "avg_logprob": -0.2458434538407759, "compression_ratio": 1.83, "no_speech_prob": 0.00010712546645663679}, {"id": 2365, "seek": 582072, "start": 5825.16, "end": 5826.96, "text": " So you can get like zeros like.", "tokens": [407, 291, 393, 483, 411, 35193, 411, 13], "temperature": 0.0, "avg_logprob": -0.2458434538407759, "compression_ratio": 1.83, "no_speech_prob": 0.00010712546645663679}, {"id": 2366, "seek": 582072, "start": 5828.0, "end": 5830.76, "text": " If you go into here, let's see if this is...", "tokens": [759, 291, 352, 666, 510, 11, 718, 311, 536, 498, 341, 307, 485], "temperature": 0.0, "avg_logprob": -0.2458434538407759, "compression_ratio": 1.83, "no_speech_prob": 0.00010712546645663679}, {"id": 2367, "seek": 582072, "start": 5831.8, "end": 5836.8, "text": " So with tab completion, you can see all of the interesting", "tokens": [407, 365, 4421, 19372, 11, 291, 393, 536, 439, 295, 264, 1880], "temperature": 0.0, "avg_logprob": -0.2458434538407759, "compression_ratio": 1.83, "no_speech_prob": 0.00010712546645663679}, {"id": 2368, "seek": 582072, "start": 5837.400000000001, "end": 5841.0, "text": " things, add many sparse to tensor map, add n,", "tokens": [721, 11, 909, 867, 637, 11668, 281, 40863, 4471, 11, 909, 297, 11], "temperature": 0.0, "avg_logprob": -0.2458434538407759, "compression_ratio": 1.83, "no_speech_prob": 0.00010712546645663679}, {"id": 2369, "seek": 582072, "start": 5841.0, "end": 5845.0, "text": " adjust contrast, a sign, like it's got lots and lots", "tokens": [4369, 8712, 11, 257, 1465, 11, 411, 309, 311, 658, 3195, 293, 3195], "temperature": 0.0, "avg_logprob": -0.2458434538407759, "compression_ratio": 1.83, "no_speech_prob": 0.00010712546645663679}, {"id": 2370, "seek": 582072, "start": 5845.0, "end": 5847.84, "text": " and lots and lots and lots and lots and lots and lots", "tokens": [293, 3195, 293, 3195, 293, 3195, 293, 3195, 293, 3195, 293, 3195], "temperature": 0.0, "avg_logprob": -0.2458434538407759, "compression_ratio": 1.83, "no_speech_prob": 0.00010712546645663679}, {"id": 2371, "seek": 582072, "start": 5847.84, "end": 5848.68, "text": " of stuff.", "tokens": [295, 1507, 13], "temperature": 0.0, "avg_logprob": -0.2458434538407759, "compression_ratio": 1.83, "no_speech_prob": 0.00010712546645663679}, {"id": 2372, "seek": 582072, "start": 5848.68, "end": 5849.52, "text": " And this is super cool.", "tokens": [400, 341, 307, 1687, 1627, 13], "temperature": 0.0, "avg_logprob": -0.2458434538407759, "compression_ratio": 1.83, "no_speech_prob": 0.00010712546645663679}, {"id": 2373, "seek": 584952, "start": 5849.52, "end": 5852.0, "text": " Particularly if you're watching this between like about", "tokens": [32281, 498, 291, 434, 1976, 341, 1296, 411, 466], "temperature": 0.0, "avg_logprob": -0.19137069582939148, "compression_ratio": 1.7240143369175627, "no_speech_prob": 4.127115971641615e-05}, {"id": 2374, "seek": 584952, "start": 5852.0, "end": 5855.96, "text": " April and about September, like in the period where maybe", "tokens": [6929, 293, 466, 7216, 11, 411, 294, 264, 2896, 689, 1310], "temperature": 0.0, "avg_logprob": -0.19137069582939148, "compression_ratio": 1.7240143369175627, "no_speech_prob": 4.127115971641615e-05}, {"id": 2375, "seek": 584952, "start": 5855.96, "end": 5859.68, "text": " the XLA stuff isn't as fully fleshed out,", "tokens": [264, 1783, 11435, 1507, 1943, 380, 382, 4498, 12497, 292, 484, 11], "temperature": 0.0, "avg_logprob": -0.19137069582939148, "compression_ratio": 1.7240143369175627, "no_speech_prob": 4.127115971641615e-05}, {"id": 2376, "seek": 584952, "start": 5859.68, "end": 5863.96, "text": " you probably care about this because there's stuff", "tokens": [291, 1391, 1127, 466, 341, 570, 456, 311, 1507], "temperature": 0.0, "avg_logprob": -0.19137069582939148, "compression_ratio": 1.7240143369175627, "no_speech_prob": 4.127115971641615e-05}, {"id": 2377, "seek": 584952, "start": 5863.96, "end": 5864.8, "text": " you can do.", "tokens": [291, 393, 360, 13], "temperature": 0.0, "avg_logprob": -0.19137069582939148, "compression_ratio": 1.7240143369175627, "no_speech_prob": 4.127115971641615e-05}, {"id": 2378, "seek": 584952, "start": 5864.8, "end": 5866.56, "text": " Lots and lots and lots and lots and lots and lots and lots", "tokens": [15908, 293, 3195, 293, 3195, 293, 3195, 293, 3195, 293, 3195, 293, 3195], "temperature": 0.0, "avg_logprob": -0.19137069582939148, "compression_ratio": 1.7240143369175627, "no_speech_prob": 4.127115971641615e-05}, {"id": 2379, "seek": 584952, "start": 5866.56, "end": 5867.400000000001, "text": " and lots of stuff.", "tokens": [293, 3195, 295, 1507, 13], "temperature": 0.0, "avg_logprob": -0.19137069582939148, "compression_ratio": 1.7240143369175627, "no_speech_prob": 4.127115971641615e-05}, {"id": 2380, "seek": 584952, "start": 5867.400000000001, "end": 5868.92, "text": " Which we haven't necessarily surfaced yet.", "tokens": [3013, 321, 2378, 380, 4725, 9684, 3839, 1939, 13], "temperature": 0.0, "avg_logprob": -0.19137069582939148, "compression_ratio": 1.7240143369175627, "no_speech_prob": 4.127115971641615e-05}, {"id": 2381, "seek": 584952, "start": 5868.92, "end": 5870.68, "text": " So for example, somebody today was saying,", "tokens": [407, 337, 1365, 11, 2618, 965, 390, 1566, 11], "temperature": 0.0, "avg_logprob": -0.19137069582939148, "compression_ratio": 1.7240143369175627, "no_speech_prob": 4.127115971641615e-05}, {"id": 2382, "seek": 584952, "start": 5870.68, "end": 5875.68, "text": " how do I can switch from RGB to BGR format?", "tokens": [577, 360, 286, 393, 3679, 490, 31231, 281, 363, 23971, 7877, 30], "temperature": 0.0, "avg_logprob": -0.19137069582939148, "compression_ratio": 1.7240143369175627, "no_speech_prob": 4.127115971641615e-05}, {"id": 2383, "seek": 584952, "start": 5876.68, "end": 5878.84, "text": " And somebody said, oh, there's something in TensorFlow", "tokens": [400, 2618, 848, 11, 1954, 11, 456, 311, 746, 294, 37624], "temperature": 0.0, "avg_logprob": -0.19137069582939148, "compression_ratio": 1.7240143369175627, "no_speech_prob": 4.127115971641615e-05}, {"id": 2384, "seek": 587884, "start": 5878.84, "end": 5880.400000000001, "text": " called reversed.", "tokens": [1219, 30563, 13], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2385, "seek": 587884, "start": 5880.400000000001, "end": 5883.12, "text": " And so here's the answer, raw.reversed.", "tokens": [400, 370, 510, 311, 264, 1867, 11, 8936, 13, 265, 840, 292, 13], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2386, "seek": 587884, "start": 5883.12, "end": 5884.360000000001, "text": " So that's what I'm knowing about this.", "tokens": [407, 300, 311, 437, 286, 478, 5276, 466, 341, 13], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2387, "seek": 587884, "start": 5884.360000000001, "end": 5886.64, "text": " Yeah, and so one of the things we'll use for Xresonet", "tokens": [865, 11, 293, 370, 472, 295, 264, 721, 321, 603, 764, 337, 1783, 495, 266, 302], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2388, "seek": 587884, "start": 5886.64, "end": 5888.84, "text": " and other image models in this course is,", "tokens": [293, 661, 3256, 5245, 294, 341, 1164, 307, 11], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2389, "seek": 587884, "start": 5888.84, "end": 5890.4800000000005, "text": " hey, we need to be able to load a file.", "tokens": [4177, 11, 321, 643, 281, 312, 1075, 281, 3677, 257, 3991, 13], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2390, "seek": 587884, "start": 5890.4800000000005, "end": 5892.32, "text": " And you could do that with Python, that's fine.", "tokens": [400, 291, 727, 360, 300, 365, 15329, 11, 300, 311, 2489, 13], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2391, "seek": 587884, "start": 5892.32, "end": 5894.12, "text": " TensorFlow has great stuff for doing this.", "tokens": [37624, 575, 869, 1507, 337, 884, 341, 13], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2392, "seek": 587884, "start": 5894.12, "end": 5896.76, "text": " And so here we just use raw read file.", "tokens": [400, 370, 510, 321, 445, 764, 8936, 1401, 3991, 13], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2393, "seek": 587884, "start": 5896.76, "end": 5899.0, "text": " And so all we're doing is we're adding a method", "tokens": [400, 370, 439, 321, 434, 884, 307, 321, 434, 5127, 257, 3170], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2394, "seek": 587884, "start": 5899.0, "end": 5900.92, "text": " to string tensor.", "tokens": [281, 6798, 40863, 13], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2395, "seek": 587884, "start": 5900.92, "end": 5903.76, "text": " And we're saying, hey, if you want to create a string tensor", "tokens": [400, 321, 434, 1566, 11, 4177, 11, 498, 291, 528, 281, 1884, 257, 6798, 40863], "temperature": 0.0, "avg_logprob": -0.1770422206902356, "compression_ratio": 1.8013698630136987, "no_speech_prob": 3.119304892607033e-05}, {"id": 2396, "seek": 590376, "start": 5903.76, "end": 5908.76, "text": " from a file, we can have read tensor, we can just use read", "tokens": [490, 257, 3991, 11, 321, 393, 362, 1401, 40863, 11, 321, 393, 445, 764, 1401], "temperature": 0.0, "avg_logprob": -0.1395282896738204, "compression_ratio": 1.7210300429184548, "no_speech_prob": 4.936656296194997e-06}, {"id": 2397, "seek": 590376, "start": 5910.64, "end": 5915.64, "text": " file and now I can say, give me string tensor, read file,", "tokens": [3991, 293, 586, 286, 393, 584, 11, 976, 385, 6798, 40863, 11, 1401, 3991, 11], "temperature": 0.0, "avg_logprob": -0.1395282896738204, "compression_ratio": 1.7210300429184548, "no_speech_prob": 4.936656296194997e-06}, {"id": 2398, "seek": 590376, "start": 5915.88, "end": 5919.96, "text": " foo, and I added a decode JPEG method on here too.", "tokens": [726, 78, 11, 293, 286, 3869, 257, 979, 1429, 508, 5208, 38, 3170, 322, 510, 886, 13], "temperature": 0.0, "avg_logprob": -0.1395282896738204, "compression_ratio": 1.7210300429184548, "no_speech_prob": 4.936656296194997e-06}, {"id": 2399, "seek": 590376, "start": 5919.96, "end": 5924.96, "text": " So now I can say decode JPEG, JPEG, and I got my file.", "tokens": [407, 586, 286, 393, 584, 979, 1429, 508, 5208, 38, 11, 508, 5208, 38, 11, 293, 286, 658, 452, 3991, 13], "temperature": 0.0, "avg_logprob": -0.1395282896738204, "compression_ratio": 1.7210300429184548, "no_speech_prob": 4.936656296194997e-06}, {"id": 2400, "seek": 590376, "start": 5926.64, "end": 5929.280000000001, "text": " And so this is one of the cool things about this platform", "tokens": [400, 370, 341, 307, 472, 295, 264, 1627, 721, 466, 341, 3663], "temperature": 0.0, "avg_logprob": -0.1395282896738204, "compression_ratio": 1.7210300429184548, "no_speech_prob": 4.936656296194997e-06}, {"id": 2401, "seek": 590376, "start": 5929.280000000001, "end": 5931.4800000000005, "text": " is that TensorFlow has all this functionality.", "tokens": [307, 300, 37624, 575, 439, 341, 14980, 13], "temperature": 0.0, "avg_logprob": -0.1395282896738204, "compression_ratio": 1.7210300429184548, "no_speech_prob": 4.936656296194997e-06}, {"id": 2402, "seek": 590376, "start": 5931.4800000000005, "end": 5932.400000000001, "text": " We're not trying to hide it.", "tokens": [492, 434, 406, 1382, 281, 6479, 309, 13], "temperature": 0.0, "avg_logprob": -0.1395282896738204, "compression_ratio": 1.7210300429184548, "no_speech_prob": 4.936656296194997e-06}, {"id": 2403, "seek": 590376, "start": 5932.400000000001, "end": 5933.68, "text": " We're just trying to curate it a little bit.", "tokens": [492, 434, 445, 1382, 281, 1262, 473, 309, 257, 707, 857, 13], "temperature": 0.0, "avg_logprob": -0.1395282896738204, "compression_ratio": 1.7210300429184548, "no_speech_prob": 4.936656296194997e-06}, {"id": 2404, "seek": 593368, "start": 5933.68, "end": 5936.64, "text": " But again, you can just go add whatever you need.", "tokens": [583, 797, 11, 291, 393, 445, 352, 909, 2035, 291, 643, 13], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2405, "seek": 593368, "start": 5936.64, "end": 5938.320000000001, "text": " Yeah, so one of the people in the study group today", "tokens": [865, 11, 370, 472, 295, 264, 561, 294, 264, 2979, 1594, 965], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2406, "seek": 593368, "start": 5938.320000000001, "end": 5941.200000000001, "text": " was building an audio library with Swift for TensorFlow.", "tokens": [390, 2390, 364, 6278, 6405, 365, 25539, 337, 37624, 13], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2407, "seek": 593368, "start": 5941.200000000001, "end": 5943.200000000001, "text": " And we haven't surfaced any of that.", "tokens": [400, 321, 2378, 380, 9684, 3839, 604, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2408, "seek": 593368, "start": 5943.200000000001, "end": 5947.4400000000005, "text": " So they were grabbing raw.decodeWAV or something", "tokens": [407, 436, 645, 23771, 8936, 13, 42821, 1429, 21449, 53, 420, 746], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2409, "seek": 593368, "start": 5947.4400000000005, "end": 5949.08, "text": " and they had it all up and running.", "tokens": [293, 436, 632, 309, 439, 493, 293, 2614, 13], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2410, "seek": 593368, "start": 5949.08, "end": 5950.360000000001, "text": " Yeah, and it's super cool.", "tokens": [865, 11, 293, 309, 311, 1687, 1627, 13], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2411, "seek": 593368, "start": 5950.360000000001, "end": 5952.84, "text": " And again, Swift gives you nice ways to build these things", "tokens": [400, 797, 11, 25539, 2709, 291, 1481, 2098, 281, 1322, 613, 721], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2412, "seek": 593368, "start": 5952.84, "end": 5955.320000000001, "text": " as APIs with default arguments and all this nice stuff.", "tokens": [382, 21445, 365, 7576, 12869, 293, 439, 341, 1481, 1507, 13], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2413, "seek": 593368, "start": 5955.320000000001, "end": 5957.320000000001, "text": " And so you get a lot of design space to do things", "tokens": [400, 370, 291, 483, 257, 688, 295, 1715, 1901, 281, 360, 721], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2414, "seek": 593368, "start": 5957.320000000001, "end": 5959.360000000001, "text": " that work the way you'd like them to work.", "tokens": [300, 589, 264, 636, 291, 1116, 411, 552, 281, 589, 13], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2415, "seek": 593368, "start": 5959.360000000001, "end": 5963.360000000001, "text": " Cool, so the way we're gonna do this", "tokens": [8561, 11, 370, 264, 636, 321, 434, 799, 360, 341], "temperature": 0.0, "avg_logprob": -0.12037623005528604, "compression_ratio": 1.688073394495413, "no_speech_prob": 3.0705021345056593e-05}, {"id": 2416, "seek": 596336, "start": 5963.36, "end": 5967.12, "text": " is we've kind of gone like super, super bottom up.", "tokens": [307, 321, 600, 733, 295, 2780, 411, 1687, 11, 1687, 2767, 493, 13], "temperature": 0.0, "avg_logprob": -0.1356925880699827, "compression_ratio": 1.6611570247933884, "no_speech_prob": 4.682719736592844e-05}, {"id": 2417, "seek": 596336, "start": 5967.12, "end": 5969.2, "text": " I must admit, I thought we had done bottom up before,", "tokens": [286, 1633, 9796, 11, 286, 1194, 321, 632, 1096, 2767, 493, 949, 11], "temperature": 0.0, "avg_logprob": -0.1356925880699827, "compression_ratio": 1.6611570247933884, "no_speech_prob": 4.682719736592844e-05}, {"id": 2418, "seek": 596336, "start": 5969.2, "end": 5971.839999999999, "text": " but this is another level of bottom up.", "tokens": [457, 341, 307, 1071, 1496, 295, 2767, 493, 13], "temperature": 0.0, "avg_logprob": -0.1356925880699827, "compression_ratio": 1.6611570247933884, "no_speech_prob": 4.682719736592844e-05}, {"id": 2419, "seek": 596336, "start": 5971.839999999999, "end": 5973.04, "text": " Then he brought a compiler guy.", "tokens": [1396, 415, 3038, 257, 31958, 2146, 13], "temperature": 0.0, "avg_logprob": -0.1356925880699827, "compression_ratio": 1.6611570247933884, "no_speech_prob": 4.682719736592844e-05}, {"id": 2420, "seek": 596336, "start": 5973.04, "end": 5975.4, "text": " Yeah, then we brought a compiler guy", "tokens": [865, 11, 550, 321, 3038, 257, 31958, 2146], "temperature": 0.0, "avg_logprob": -0.1356925880699827, "compression_ratio": 1.6611570247933884, "no_speech_prob": 4.682719736592844e-05}, {"id": 2421, "seek": 596336, "start": 5975.4, "end": 5979.24, "text": " who is always good at making me feel small and insignificant.", "tokens": [567, 307, 1009, 665, 412, 1455, 385, 841, 1359, 293, 43685, 13], "temperature": 0.0, "avg_logprob": -0.1356925880699827, "compression_ratio": 1.6611570247933884, "no_speech_prob": 4.682719736592844e-05}, {"id": 2422, "seek": 596336, "start": 5981.28, "end": 5984.719999999999, "text": " But now let's jump back up to the top again", "tokens": [583, 586, 718, 311, 3012, 646, 493, 281, 264, 1192, 797], "temperature": 0.0, "avg_logprob": -0.1356925880699827, "compression_ratio": 1.6611570247933884, "no_speech_prob": 4.682719736592844e-05}, {"id": 2423, "seek": 596336, "start": 5984.719999999999, "end": 5986.88, "text": " to see where we're gonna end up.", "tokens": [281, 536, 689, 321, 434, 799, 917, 493, 13], "temperature": 0.0, "avg_logprob": -0.1356925880699827, "compression_ratio": 1.6611570247933884, "no_speech_prob": 4.682719736592844e-05}, {"id": 2424, "seek": 596336, "start": 5988.679999999999, "end": 5992.16, "text": " And then next week, we're gonna kind of flesh out", "tokens": [400, 550, 958, 1243, 11, 321, 434, 799, 733, 295, 12497, 484], "temperature": 0.0, "avg_logprob": -0.1356925880699827, "compression_ratio": 1.6611570247933884, "no_speech_prob": 4.682719736592844e-05}, {"id": 2425, "seek": 599216, "start": 5992.16, "end": 5994.639999999999, "text": " all the stuff between the middle.", "tokens": [439, 264, 1507, 1296, 264, 2808, 13], "temperature": 0.0, "avg_logprob": -0.14851858905542678, "compression_ratio": 1.6478260869565218, "no_speech_prob": 3.4464931104594143e-06}, {"id": 2426, "seek": 599216, "start": 5994.639999999999, "end": 5996.72, "text": " So I'm gonna jump to notebook 11.", "tokens": [407, 286, 478, 799, 3012, 281, 21060, 2975, 13], "temperature": 0.0, "avg_logprob": -0.14851858905542678, "compression_ratio": 1.6478260869565218, "no_speech_prob": 3.4464931104594143e-06}, {"id": 2427, "seek": 599216, "start": 5996.72, "end": 5998.76, "text": " And notebook 11 is interesting", "tokens": [400, 21060, 2975, 307, 1880], "temperature": 0.0, "avg_logprob": -0.14851858905542678, "compression_ratio": 1.6478260869565218, "no_speech_prob": 3.4464931104594143e-06}, {"id": 2428, "seek": 599216, "start": 5998.76, "end": 6001.12, "text": " because this is the one where we train", "tokens": [570, 341, 307, 264, 472, 689, 321, 3847], "temperature": 0.0, "avg_logprob": -0.14851858905542678, "compression_ratio": 1.6478260869565218, "no_speech_prob": 3.4464931104594143e-06}, {"id": 2429, "seek": 599216, "start": 6001.12, "end": 6003.5599999999995, "text": " an Xresnet on ImageNet.", "tokens": [364, 1783, 495, 7129, 322, 29903, 31890, 13], "temperature": 0.0, "avg_logprob": -0.14851858905542678, "compression_ratio": 1.6478260869565218, "no_speech_prob": 3.4464931104594143e-06}, {"id": 2430, "seek": 599216, "start": 6005.36, "end": 6007.0, "text": " So this is where we're heading.", "tokens": [407, 341, 307, 689, 321, 434, 9864, 13], "temperature": 0.0, "avg_logprob": -0.14851858905542678, "compression_ratio": 1.6478260869565218, "no_speech_prob": 3.4464931104594143e-06}, {"id": 2431, "seek": 599216, "start": 6007.0, "end": 6012.0, "text": " So every time we import the previous notebook,", "tokens": [407, 633, 565, 321, 974, 264, 3894, 21060, 11], "temperature": 0.0, "avg_logprob": -0.14851858905542678, "compression_ratio": 1.6478260869565218, "no_speech_prob": 3.4464931104594143e-06}, {"id": 2432, "seek": 599216, "start": 6012.12, "end": 6016.04, "text": " just like we do in Python, the previous notebooks,", "tokens": [445, 411, 321, 360, 294, 15329, 11, 264, 3894, 43782, 11], "temperature": 0.0, "avg_logprob": -0.14851858905542678, "compression_ratio": 1.6478260869565218, "no_speech_prob": 3.4464931104594143e-06}, {"id": 2433, "seek": 599216, "start": 6016.04, "end": 6018.4, "text": " however, aren't just numbered, but they also have the name.", "tokens": [4461, 11, 3212, 380, 445, 40936, 11, 457, 436, 611, 362, 264, 1315, 13], "temperature": 0.0, "avg_logprob": -0.14851858905542678, "compression_ratio": 1.6478260869565218, "no_speech_prob": 3.4464931104594143e-06}, {"id": 2434, "seek": 599216, "start": 6018.4, "end": 6019.76, "text": " That's the only difference.", "tokens": [663, 311, 264, 787, 2649, 13], "temperature": 0.0, "avg_logprob": -0.14851858905542678, "compression_ratio": 1.6478260869565218, "no_speech_prob": 3.4464931104594143e-06}, {"id": 2435, "seek": 601976, "start": 6019.76, "end": 6022.92, "text": " And then this is just the equivalent", "tokens": [400, 550, 341, 307, 445, 264, 10344], "temperature": 0.0, "avg_logprob": -0.21093651417935833, "compression_ratio": 1.475770925110132, "no_speech_prob": 2.6015029561676783e-06}, {"id": 2436, "seek": 601976, "start": 6022.92, "end": 6026.4800000000005, "text": " of percent map plot lib inline in this environment.", "tokens": [295, 3043, 4471, 7542, 22854, 294, 1889, 294, 341, 2823, 13], "temperature": 0.0, "avg_logprob": -0.21093651417935833, "compression_ratio": 1.475770925110132, "no_speech_prob": 2.6015029561676783e-06}, {"id": 2437, "seek": 601976, "start": 6030.04, "end": 6032.64, "text": " So here, load data.", "tokens": [407, 510, 11, 3677, 1412, 13], "temperature": 0.0, "avg_logprob": -0.21093651417935833, "compression_ratio": 1.475770925110132, "no_speech_prob": 2.6015029561676783e-06}, {"id": 2438, "seek": 601976, "start": 6035.88, "end": 6037.56, "text": " We'll show you how we built something", "tokens": [492, 603, 855, 291, 577, 321, 3094, 746], "temperature": 0.0, "avg_logprob": -0.21093651417935833, "compression_ratio": 1.475770925110132, "no_speech_prob": 2.6015029561676783e-06}, {"id": 2439, "seek": 601976, "start": 6037.56, "end": 6039.0, "text": " that downloads ImageNet,", "tokens": [300, 36553, 29903, 31890, 11], "temperature": 0.0, "avg_logprob": -0.21093651417935833, "compression_ratio": 1.475770925110132, "no_speech_prob": 2.6015029561676783e-06}, {"id": 2440, "seek": 601976, "start": 6039.0, "end": 6041.8, "text": " but it basically looks almost exactly like the,", "tokens": [457, 309, 1936, 1542, 1920, 2293, 411, 264, 11], "temperature": 0.0, "avg_logprob": -0.21093651417935833, "compression_ratio": 1.475770925110132, "no_speech_prob": 2.6015029561676783e-06}, {"id": 2441, "seek": 601976, "start": 6041.8, "end": 6044.96, "text": " very similar to the download MNIST thing you've already seen.", "tokens": [588, 2531, 281, 264, 5484, 376, 45, 19756, 551, 291, 600, 1217, 1612, 13], "temperature": 0.0, "avg_logprob": -0.21093651417935833, "compression_ratio": 1.475770925110132, "no_speech_prob": 2.6015029561676783e-06}, {"id": 2442, "seek": 604496, "start": 6044.96, "end": 6049.76, "text": " And we've created an item list, which has extensions.", "tokens": [400, 321, 600, 2942, 364, 3174, 1329, 11, 597, 575, 25129, 13], "temperature": 0.0, "avg_logprob": -0.15274030668241484, "compression_ratio": 1.702127659574468, "no_speech_prob": 6.643157576036174e-06}, {"id": 2443, "seek": 604496, "start": 6049.76, "end": 6054.36, "text": " And we've created a split data, which takes an item list.", "tokens": [400, 321, 600, 2942, 257, 7472, 1412, 11, 597, 2516, 364, 3174, 1329, 13], "temperature": 0.0, "avg_logprob": -0.15274030668241484, "compression_ratio": 1.702127659574468, "no_speech_prob": 6.643157576036174e-06}, {"id": 2444, "seek": 604496, "start": 6054.36, "end": 6057.64, "text": " Now, one of the nice things here is that", "tokens": [823, 11, 472, 295, 264, 1481, 721, 510, 307, 300], "temperature": 0.0, "avg_logprob": -0.15274030668241484, "compression_ratio": 1.702127659574468, "no_speech_prob": 6.643157576036174e-06}, {"id": 2445, "seek": 604496, "start": 6057.64, "end": 6061.24, "text": " we don't really need something like functools.partial", "tokens": [321, 500, 380, 534, 643, 746, 411, 1019, 349, 29298, 13, 6971, 831], "temperature": 0.0, "avg_logprob": -0.15274030668241484, "compression_ratio": 1.702127659574468, "no_speech_prob": 6.643157576036174e-06}, {"id": 2446, "seek": 604496, "start": 6061.24, "end": 6065.56, "text": " in Swift because now we can just pass in a trailing closure,", "tokens": [294, 25539, 570, 586, 321, 393, 445, 1320, 294, 257, 944, 4883, 24653, 11], "temperature": 0.0, "avg_logprob": -0.15274030668241484, "compression_ratio": 1.702127659574468, "no_speech_prob": 6.643157576036174e-06}, {"id": 2447, "seek": 604496, "start": 6065.56, "end": 6069.04, "text": " which as Chris described, if the last thing is,", "tokens": [597, 382, 6688, 7619, 11, 498, 264, 1036, 551, 307, 11], "temperature": 0.0, "avg_logprob": -0.15274030668241484, "compression_ratio": 1.702127659574468, "no_speech_prob": 6.643157576036174e-06}, {"id": 2448, "seek": 604496, "start": 6069.04, "end": 6072.16, "text": " is in the last parameter is a closure,", "tokens": [307, 294, 264, 1036, 13075, 307, 257, 24653, 11], "temperature": 0.0, "avg_logprob": -0.15274030668241484, "compression_ratio": 1.702127659574468, "no_speech_prob": 6.643157576036174e-06}, {"id": 2449, "seek": 604496, "start": 6072.16, "end": 6074.28, "text": " then you can just whack it in curly brackets.", "tokens": [550, 291, 393, 445, 42877, 309, 294, 32066, 26179, 13], "temperature": 0.0, "avg_logprob": -0.15274030668241484, "compression_ratio": 1.702127659574468, "no_speech_prob": 6.643157576036174e-06}, {"id": 2450, "seek": 607428, "start": 6074.28, "end": 6077.36, "text": " You don't even need a return or anything.", "tokens": [509, 500, 380, 754, 643, 257, 2736, 420, 1340, 13], "temperature": 0.0, "avg_logprob": -0.10944967582577565, "compression_ratio": 1.6943396226415095, "no_speech_prob": 6.540233243867988e-06}, {"id": 2451, "seek": 607428, "start": 6077.36, "end": 6079.0, "text": " And you don't even have to give it an argument name", "tokens": [400, 291, 500, 380, 754, 362, 281, 976, 309, 364, 6770, 1315], "temperature": 0.0, "avg_logprob": -0.10944967582577565, "compression_ratio": 1.6943396226415095, "no_speech_prob": 6.540233243867988e-06}, {"id": 2452, "seek": 607428, "start": 6079.0, "end": 6081.08, "text": " because you can use the default ones.", "tokens": [570, 291, 393, 764, 264, 7576, 2306, 13], "temperature": 0.0, "avg_logprob": -0.10944967582577565, "compression_ratio": 1.6943396226415095, "no_speech_prob": 6.540233243867988e-06}, {"id": 2453, "seek": 607428, "start": 6081.08, "end": 6085.4, "text": " So we're saying split this item list by grandparent.", "tokens": [407, 321, 434, 1566, 7472, 341, 3174, 1329, 538, 2697, 38321, 13], "temperature": 0.0, "avg_logprob": -0.10944967582577565, "compression_ratio": 1.6943396226415095, "no_speech_prob": 6.540233243867988e-06}, {"id": 2454, "seek": 607428, "start": 6086.8, "end": 6088.4, "text": " This is the file name that you're gonna get.", "tokens": [639, 307, 264, 3991, 1315, 300, 291, 434, 799, 483, 13], "temperature": 0.0, "avg_logprob": -0.10944967582577565, "compression_ratio": 1.6943396226415095, "no_speech_prob": 6.540233243867988e-06}, {"id": 2455, "seek": 607428, "start": 6088.4, "end": 6090.759999999999, "text": " So this is basically like the equivalent of doing partial,", "tokens": [407, 341, 307, 1936, 411, 264, 10344, 295, 884, 14641, 11], "temperature": 0.0, "avg_logprob": -0.10944967582577565, "compression_ratio": 1.6943396226415095, "no_speech_prob": 6.540233243867988e-06}, {"id": 2456, "seek": 607428, "start": 6090.759999999999, "end": 6094.24, "text": " right, and it's gonna be some different validation set.", "tokens": [558, 11, 293, 309, 311, 799, 312, 512, 819, 24071, 992, 13], "temperature": 0.0, "avg_logprob": -0.10944967582577565, "compression_ratio": 1.6943396226415095, "no_speech_prob": 6.540233243867988e-06}, {"id": 2457, "seek": 607428, "start": 6094.24, "end": 6098.08, "text": " And so now we can create our label data", "tokens": [400, 370, 586, 321, 393, 1884, 527, 7645, 1412], "temperature": 0.0, "avg_logprob": -0.10944967582577565, "compression_ratio": 1.6943396226415095, "no_speech_prob": 6.540233243867988e-06}, {"id": 2458, "seek": 607428, "start": 6099.28, "end": 6100.5199999999995, "text": " and we need a processor.", "tokens": [293, 321, 643, 257, 15321, 13], "temperature": 0.0, "avg_logprob": -0.10944967582577565, "compression_ratio": 1.6943396226415095, "no_speech_prob": 6.540233243867988e-06}, {"id": 2459, "seek": 607428, "start": 6100.5199999999995, "end": 6102.28, "text": " So we have again, a category processor.", "tokens": [407, 321, 362, 797, 11, 257, 7719, 15321, 13], "temperature": 0.0, "avg_logprob": -0.10944967582577565, "compression_ratio": 1.6943396226415095, "no_speech_prob": 6.540233243867988e-06}, {"id": 2460, "seek": 610228, "start": 6102.28, "end": 6104.88, "text": " So you can see we've got a whole data blocks API here.", "tokens": [407, 291, 393, 536, 321, 600, 658, 257, 1379, 1412, 8474, 9362, 510, 13], "temperature": 0.0, "avg_logprob": -0.166344059838189, "compression_ratio": 1.6058091286307055, "no_speech_prob": 6.048228442523396e-06}, {"id": 2461, "seek": 610228, "start": 6105.84, "end": 6108.84, "text": " One of the things that I guess you're gonna talk about", "tokens": [1485, 295, 264, 721, 300, 286, 2041, 291, 434, 799, 751, 466], "temperature": 0.0, "avg_logprob": -0.166344059838189, "compression_ratio": 1.6058091286307055, "no_speech_prob": 6.048228442523396e-06}, {"id": 2462, "seek": 610228, "start": 6108.84, "end": 6112.32, "text": " next week, Chris, is end and mutation and stuff.", "tokens": [958, 1243, 11, 6688, 11, 307, 917, 293, 27960, 293, 1507, 13], "temperature": 0.0, "avg_logprob": -0.166344059838189, "compression_ratio": 1.6058091286307055, "no_speech_prob": 6.048228442523396e-06}, {"id": 2463, "seek": 610228, "start": 6112.32, "end": 6117.32, "text": " Yeah, okay, so basically in Swift, as Chris mentioned,", "tokens": [865, 11, 1392, 11, 370, 1936, 294, 25539, 11, 382, 6688, 2835, 11], "temperature": 0.0, "avg_logprob": -0.166344059838189, "compression_ratio": 1.6058091286307055, "no_speech_prob": 6.048228442523396e-06}, {"id": 2464, "seek": 610228, "start": 6120.96, "end": 6122.92, "text": " most of the time we use structs.", "tokens": [881, 295, 264, 565, 321, 764, 6594, 82, 13], "temperature": 0.0, "avg_logprob": -0.166344059838189, "compression_ratio": 1.6058091286307055, "no_speech_prob": 6.048228442523396e-06}, {"id": 2465, "seek": 610228, "start": 6122.92, "end": 6124.4, "text": " And as Chris will describe to you,", "tokens": [400, 382, 6688, 486, 6786, 281, 291, 11], "temperature": 0.0, "avg_logprob": -0.166344059838189, "compression_ratio": 1.6058091286307055, "no_speech_prob": 6.048228442523396e-06}, {"id": 2466, "seek": 610228, "start": 6124.4, "end": 6128.24, "text": " structs are things that normally don't change,", "tokens": [6594, 82, 366, 721, 300, 5646, 500, 380, 1319, 11], "temperature": 0.0, "avg_logprob": -0.166344059838189, "compression_ratio": 1.6058091286307055, "no_speech_prob": 6.048228442523396e-06}, {"id": 2467, "seek": 610228, "start": 6128.24, "end": 6131.2, "text": " but you can create something that kind of feels a lot like", "tokens": [457, 291, 393, 1884, 746, 300, 733, 295, 3417, 257, 688, 411], "temperature": 0.0, "avg_logprob": -0.166344059838189, "compression_ratio": 1.6058091286307055, "no_speech_prob": 6.048228442523396e-06}, {"id": 2468, "seek": 613120, "start": 6131.2, "end": 6133.5599999999995, "text": " a C++ reference or a C pointer,", "tokens": [257, 383, 25472, 6408, 420, 257, 383, 23918, 11], "temperature": 0.0, "avg_logprob": -0.09922469337031527, "compression_ratio": 1.5708333333333333, "no_speech_prob": 1.341926781606162e-05}, {"id": 2469, "seek": 613120, "start": 6133.5599999999995, "end": 6136.16, "text": " but it's much cooler by adding an ampersand.", "tokens": [457, 309, 311, 709, 15566, 538, 5127, 364, 18648, 433, 474, 13], "temperature": 0.0, "avg_logprob": -0.09922469337031527, "compression_ratio": 1.5708333333333333, "no_speech_prob": 1.341926781606162e-05}, {"id": 2470, "seek": 613120, "start": 6136.16, "end": 6140.599999999999, "text": " Because remember, processes actually change their state", "tokens": [1436, 1604, 11, 7555, 767, 1319, 641, 1785], "temperature": 0.0, "avg_logprob": -0.09922469337031527, "compression_ratio": 1.5708333333333333, "no_speech_prob": 1.341926781606162e-05}, {"id": 2471, "seek": 613120, "start": 6140.599999999999, "end": 6143.04, "text": " because we get like a vocabulary, for example,", "tokens": [570, 321, 483, 411, 257, 19864, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.09922469337031527, "compression_ratio": 1.5708333333333333, "no_speech_prob": 1.341926781606162e-05}, {"id": 2472, "seek": 613120, "start": 6143.04, "end": 6146.5599999999995, "text": " the first time we use a processor on the training set.", "tokens": [264, 700, 565, 321, 764, 257, 15321, 322, 264, 3097, 992, 13], "temperature": 0.0, "avg_logprob": -0.09922469337031527, "compression_ratio": 1.5708333333333333, "no_speech_prob": 1.341926781606162e-05}, {"id": 2473, "seek": 613120, "start": 6146.5599999999995, "end": 6149.599999999999, "text": " So now we've got a split label data set.", "tokens": [407, 586, 321, 600, 658, 257, 7472, 7645, 1412, 992, 13], "temperature": 0.0, "avg_logprob": -0.09922469337031527, "compression_ratio": 1.5708333333333333, "no_speech_prob": 1.341926781606162e-05}, {"id": 2474, "seek": 613120, "start": 6149.599999999999, "end": 6152.4, "text": " And then we've added a to data bunch", "tokens": [400, 550, 321, 600, 3869, 257, 281, 1412, 3840], "temperature": 0.0, "avg_logprob": -0.09922469337031527, "compression_ratio": 1.5708333333333333, "no_speech_prob": 1.341926781606162e-05}, {"id": 2475, "seek": 613120, "start": 6152.4, "end": 6155.5599999999995, "text": " and we can pass in all the normal stuff,", "tokens": [293, 321, 393, 1320, 294, 439, 264, 2710, 1507, 11], "temperature": 0.0, "avg_logprob": -0.09922469337031527, "compression_ratio": 1.5708333333333333, "no_speech_prob": 1.341926781606162e-05}, {"id": 2476, "seek": 613120, "start": 6155.5599999999995, "end": 6156.84, "text": " including a batch size.", "tokens": [3009, 257, 15245, 2744, 13], "temperature": 0.0, "avg_logprob": -0.09922469337031527, "compression_ratio": 1.5708333333333333, "no_speech_prob": 1.341926781606162e-05}, {"id": 2477, "seek": 615684, "start": 6156.84, "end": 6161.84, "text": " So next thing we can do is we can do transformations.", "tokens": [407, 958, 551, 321, 393, 360, 307, 321, 393, 360, 34852, 13], "temperature": 0.0, "avg_logprob": -0.279426732014135, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.4823539206408896e-06}, {"id": 2478, "seek": 615684, "start": 6162.16, "end": 6165.2, "text": " And again, here, we can use a trailing closure", "tokens": [400, 797, 11, 510, 11, 321, 393, 764, 257, 944, 4883, 24653], "temperature": 0.0, "avg_logprob": -0.279426732014135, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.4823539206408896e-06}, {"id": 2479, "seek": 615684, "start": 6165.2, "end": 6166.92, "text": " to basically do a partial,", "tokens": [281, 1936, 360, 257, 14641, 11], "temperature": 0.0, "avg_logprob": -0.279426732014135, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.4823539206408896e-06}, {"id": 2480, "seek": 615684, "start": 6166.92, "end": 6170.88, "text": " to say that we're gonna do resize in our transformations.", "tokens": [281, 584, 300, 321, 434, 799, 360, 50069, 294, 527, 34852, 13], "temperature": 0.0, "avg_logprob": -0.279426732014135, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.4823539206408896e-06}, {"id": 2481, "seek": 615684, "start": 6172.84, "end": 6175.6, "text": " So then we'll grab a batch.", "tokens": [407, 550, 321, 603, 4444, 257, 15245, 13], "temperature": 0.0, "avg_logprob": -0.279426732014135, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.4823539206408896e-06}, {"id": 2482, "seek": 615684, "start": 6175.6, "end": 6177.360000000001, "text": " Something that I think Chris will probably talk about", "tokens": [6595, 300, 286, 519, 6688, 486, 1391, 751, 466], "temperature": 0.0, "avg_logprob": -0.279426732014135, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.4823539206408896e-06}, {"id": 2483, "seek": 615684, "start": 6177.360000000001, "end": 6180.12, "text": " next week more is this thing.", "tokens": [958, 1243, 544, 307, 341, 551, 13], "temperature": 0.0, "avg_logprob": -0.279426732014135, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.4823539206408896e-06}, {"id": 2484, "seek": 615684, "start": 6180.12, "end": 6185.12, "text": " But basically in Swift, very often you wanna be able to set", "tokens": [583, 1936, 294, 25539, 11, 588, 2049, 291, 1948, 312, 1075, 281, 992], "temperature": 0.0, "avg_logprob": -0.279426732014135, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.4823539206408896e-06}, {"id": 2485, "seek": 618512, "start": 6185.12, "end": 6187.12, "text": " very often you wanna be able to say,", "tokens": [588, 2049, 291, 1948, 312, 1075, 281, 584, 11], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2486, "seek": 618512, "start": 6187.12, "end": 6190.5199999999995, "text": " hey, this is gonna return either a batch of data", "tokens": [4177, 11, 341, 307, 799, 2736, 2139, 257, 15245, 295, 1412], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2487, "seek": 618512, "start": 6190.5199999999995, "end": 6193.44, "text": " or maybe it was gonna return nothing at all.", "tokens": [420, 1310, 309, 390, 799, 2736, 1825, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2488, "seek": 618512, "start": 6193.44, "end": 6198.44, "text": " Which in Python, we use the optional type for that", "tokens": [3013, 294, 15329, 11, 321, 764, 264, 17312, 2010, 337, 300], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2489, "seek": 618512, "start": 6198.68, "end": 6201.04, "text": " and it's called the same thing in Swift.", "tokens": [293, 309, 311, 1219, 264, 912, 551, 294, 25539, 13], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2490, "seek": 618512, "start": 6201.04, "end": 6201.88, "text": " None.", "tokens": [14492, 13], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2491, "seek": 618512, "start": 6201.88, "end": 6202.72, "text": " None.", "tokens": [14492, 13], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2492, "seek": 618512, "start": 6202.72, "end": 6207.5599999999995, "text": " Yeah, so basically what happens is if you have something", "tokens": [865, 11, 370, 1936, 437, 2314, 307, 498, 291, 362, 746], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2493, "seek": 618512, "start": 6207.5599999999995, "end": 6208.66, "text": " that might not return anything,", "tokens": [300, 1062, 406, 2736, 1340, 11], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2494, "seek": 618512, "start": 6208.66, "end": 6210.68, "text": " so one batch might not return anything", "tokens": [370, 472, 15245, 1062, 406, 2736, 1340], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2495, "seek": 618512, "start": 6210.68, "end": 6212.24, "text": " because there might be nothing to return,", "tokens": [570, 456, 1062, 312, 1825, 281, 2736, 11], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2496, "seek": 618512, "start": 6212.24, "end": 6214.66, "text": " it can return nothing and then exclamation mark", "tokens": [309, 393, 2736, 1825, 293, 550, 1624, 43233, 1491], "temperature": 0.0, "avg_logprob": -0.20003809694383964, "compression_ratio": 1.8373983739837398, "no_speech_prob": 0.00011407526471884921}, {"id": 2497, "seek": 621466, "start": 6214.66, "end": 6216.94, "text": " just says assume that it's something.", "tokens": [445, 1619, 6552, 300, 309, 311, 746, 13], "temperature": 0.0, "avg_logprob": -0.20155982029290848, "compression_ratio": 1.5248618784530388, "no_speech_prob": 1.2027973752992693e-05}, {"id": 2498, "seek": 621466, "start": 6219.5599999999995, "end": 6221.88, "text": " So we can look at the shapes of that batch", "tokens": [407, 321, 393, 574, 412, 264, 10854, 295, 300, 15245], "temperature": 0.0, "avg_logprob": -0.20155982029290848, "compression_ratio": 1.5248618784530388, "no_speech_prob": 1.2027973752992693e-05}, {"id": 2499, "seek": 621466, "start": 6221.88, "end": 6225.76, "text": " and look, we've even got show batch.", "tokens": [293, 574, 11, 321, 600, 754, 658, 855, 15245, 13], "temperature": 0.0, "avg_logprob": -0.20155982029290848, "compression_ratio": 1.5248618784530388, "no_speech_prob": 1.2027973752992693e-05}, {"id": 2500, "seek": 621466, "start": 6225.76, "end": 6229.639999999999, "text": " So it's been really fun this process of,", "tokens": [407, 309, 311, 668, 534, 1019, 341, 1399, 295, 11], "temperature": 0.0, "avg_logprob": -0.20155982029290848, "compression_ratio": 1.5248618784530388, "no_speech_prob": 1.2027973752992693e-05}, {"id": 2501, "seek": 621466, "start": 6229.639999999999, "end": 6232.72, "text": " in the last couple of weeks of basically saying", "tokens": [294, 264, 1036, 1916, 295, 3259, 295, 1936, 1566], "temperature": 0.0, "avg_logprob": -0.20155982029290848, "compression_ratio": 1.5248618784530388, "no_speech_prob": 1.2027973752992693e-05}, {"id": 2502, "seek": 621466, "start": 6232.72, "end": 6237.72, "text": " what does fast AI look like on Swift?", "tokens": [437, 775, 2370, 7318, 574, 411, 322, 25539, 30], "temperature": 0.0, "avg_logprob": -0.20155982029290848, "compression_ratio": 1.5248618784530388, "no_speech_prob": 1.2027973752992693e-05}, {"id": 2503, "seek": 621466, "start": 6239.08, "end": 6240.92, "text": " And one thing I'll say is like,", "tokens": [400, 472, 551, 286, 603, 584, 307, 411, 11], "temperature": 0.0, "avg_logprob": -0.20155982029290848, "compression_ratio": 1.5248618784530388, "no_speech_prob": 1.2027973752992693e-05}, {"id": 2504, "seek": 624092, "start": 6240.92, "end": 6245.92, "text": " a lot of these notebooks have been written by Sylvia", "tokens": [257, 688, 295, 613, 43782, 362, 668, 3720, 538, 33349, 11617], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2505, "seek": 624092, "start": 6246.64, "end": 6248.84, "text": " in particular and by me a little bit", "tokens": [294, 1729, 293, 538, 385, 257, 707, 857], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2506, "seek": 624092, "start": 6248.84, "end": 6250.84, "text": " and we don't know Swift at all well.", "tokens": [293, 321, 500, 380, 458, 25539, 412, 439, 731, 13], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2507, "seek": 624092, "start": 6250.84, "end": 6253.12, "text": " So any good Swift programmers looking through", "tokens": [407, 604, 665, 25539, 41504, 1237, 807], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2508, "seek": 624092, "start": 6253.12, "end": 6255.76, "text": " those notebooks thinking, oh, this is nice", "tokens": [729, 43782, 1953, 11, 1954, 11, 341, 307, 1481], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2509, "seek": 624092, "start": 6255.76, "end": 6258.5, "text": " but it'd be even more Swiftie if you did blah,", "tokens": [457, 309, 1116, 312, 754, 544, 25539, 414, 498, 291, 630, 12288, 11], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2510, "seek": 624092, "start": 6258.5, "end": 6259.66, "text": " please let us know in the forum", "tokens": [1767, 718, 505, 458, 294, 264, 17542], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2511, "seek": 624092, "start": 6259.66, "end": 6261.4400000000005, "text": " because we're super interested to learn", "tokens": [570, 321, 434, 1687, 3102, 281, 1466], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2512, "seek": 624092, "start": 6261.4400000000005, "end": 6263.12, "text": " how to write better Swift.", "tokens": [577, 281, 2464, 1101, 25539, 13], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2513, "seek": 624092, "start": 6263.12, "end": 6265.4400000000005, "text": " And I've been super interested to learn all the ML.", "tokens": [400, 286, 600, 668, 1687, 3102, 281, 1466, 439, 264, 21601, 13], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2514, "seek": 624092, "start": 6265.4400000000005, "end": 6266.6, "text": " It's been great.", "tokens": [467, 311, 668, 869, 13], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2515, "seek": 624092, "start": 6266.6, "end": 6267.4400000000005, "text": " It has been great.", "tokens": [467, 575, 668, 869, 13], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2516, "seek": 624092, "start": 6267.4400000000005, "end": 6268.4800000000005, "text": " I mean it's been great working with each other.", "tokens": [286, 914, 309, 311, 668, 869, 1364, 365, 1184, 661, 13], "temperature": 0.0, "avg_logprob": -0.19603825301575145, "compression_ratio": 1.756183745583039, "no_speech_prob": 2.2470894691650756e-05}, {"id": 2517, "seek": 626848, "start": 6268.48, "end": 6272.48, "text": " I mean, in one sense it's a good sign", "tokens": [286, 914, 11, 294, 472, 2020, 309, 311, 257, 665, 1465], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2518, "seek": 626848, "start": 6272.48, "end": 6275.839999999999, "text": " that you're learning fast AI for Swift", "tokens": [300, 291, 434, 2539, 2370, 7318, 337, 25539], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2519, "seek": 626848, "start": 6275.839999999999, "end": 6277.879999999999, "text": " from the people who started the fast AI", "tokens": [490, 264, 561, 567, 1409, 264, 2370, 7318], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2520, "seek": 626848, "start": 6277.879999999999, "end": 6278.759999999999, "text": " and Swift projects.", "tokens": [293, 25539, 4455, 13], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2521, "seek": 626848, "start": 6278.759999999999, "end": 6281.719999999999, "text": " But on another sense, I know nothing about Swift", "tokens": [583, 322, 1071, 2020, 11, 286, 458, 1825, 466, 25539], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2522, "seek": 626848, "start": 6281.719999999999, "end": 6283.5599999999995, "text": " and Chris doesn't know much about deep learning", "tokens": [293, 6688, 1177, 380, 458, 709, 466, 2452, 2539], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2523, "seek": 626848, "start": 6283.5599999999995, "end": 6285.459999999999, "text": " so maybe it's the worst of all possible worlds.", "tokens": [370, 1310, 309, 311, 264, 5855, 295, 439, 1944, 13401, 13], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2524, "seek": 626848, "start": 6285.459999999999, "end": 6286.299999999999, "text": " I don't know.", "tokens": [286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2525, "seek": 626848, "start": 6286.299999999999, "end": 6287.839999999999, "text": " No, I think we're all learning together.", "tokens": [883, 11, 286, 519, 321, 434, 439, 2539, 1214, 13], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2526, "seek": 626848, "start": 6287.839999999999, "end": 6288.679999999999, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2527, "seek": 626848, "start": 6290.16, "end": 6291.719999999999, "text": " So anyway, yeah, it's been super fun.", "tokens": [407, 4033, 11, 1338, 11, 309, 311, 668, 1687, 1019, 13], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2528, "seek": 626848, "start": 6291.719999999999, "end": 6294.459999999999, "text": " So as you can see, we've got a data blocks API", "tokens": [407, 382, 291, 393, 536, 11, 321, 600, 658, 257, 1412, 8474, 9362], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2529, "seek": 626848, "start": 6294.459999999999, "end": 6296.639999999999, "text": " that's now working.", "tokens": [300, 311, 586, 1364, 13], "temperature": 0.0, "avg_logprob": -0.15889290703667536, "compression_ratio": 1.661710037174721, "no_speech_prob": 2.7524989491212182e-05}, {"id": 2530, "seek": 629664, "start": 6296.64, "end": 6299.52, "text": " The other thing I mentioned as you'll see next week", "tokens": [440, 661, 551, 286, 2835, 382, 291, 603, 536, 958, 1243], "temperature": 0.0, "avg_logprob": -0.1463594196223411, "compression_ratio": 1.6297709923664123, "no_speech_prob": 1.921886178024579e-05}, {"id": 2531, "seek": 629664, "start": 6299.52, "end": 6301.200000000001, "text": " is the way we've got this working", "tokens": [307, 264, 636, 321, 600, 658, 341, 1364], "temperature": 0.0, "avg_logprob": -0.1463594196223411, "compression_ratio": 1.6297709923664123, "no_speech_prob": 1.921886178024579e-05}, {"id": 2532, "seek": 629664, "start": 6302.200000000001, "end": 6305.240000000001, "text": " is it's using a TensorFlow API called tf.data", "tokens": [307, 309, 311, 1228, 257, 37624, 9362, 1219, 256, 69, 13, 67, 3274], "temperature": 0.0, "avg_logprob": -0.1463594196223411, "compression_ratio": 1.6297709923664123, "no_speech_prob": 1.921886178024579e-05}, {"id": 2533, "seek": 629664, "start": 6306.400000000001, "end": 6311.12, "text": " which is actually a lot better than a lot of data APIs", "tokens": [597, 307, 767, 257, 688, 1101, 813, 257, 688, 295, 1412, 21445], "temperature": 0.0, "avg_logprob": -0.1463594196223411, "compression_ratio": 1.6297709923664123, "no_speech_prob": 1.921886178024579e-05}, {"id": 2534, "seek": 629664, "start": 6311.12, "end": 6314.160000000001, "text": " but it's still not nearly as good as I would like.", "tokens": [457, 309, 311, 920, 406, 6217, 382, 665, 382, 286, 576, 411, 13], "temperature": 0.0, "avg_logprob": -0.1463594196223411, "compression_ratio": 1.6297709923664123, "no_speech_prob": 1.921886178024579e-05}, {"id": 2535, "seek": 629664, "start": 6314.160000000001, "end": 6316.200000000001, "text": " And I would love to, as a community,", "tokens": [400, 286, 576, 959, 281, 11, 382, 257, 1768, 11], "temperature": 0.0, "avg_logprob": -0.1463594196223411, "compression_ratio": 1.6297709923664123, "no_speech_prob": 1.921886178024579e-05}, {"id": 2536, "seek": 629664, "start": 6316.200000000001, "end": 6318.72, "text": " start building out the next version", "tokens": [722, 2390, 484, 264, 958, 3037], "temperature": 0.0, "avg_logprob": -0.1463594196223411, "compression_ratio": 1.6297709923664123, "no_speech_prob": 1.921886178024579e-05}, {"id": 2537, "seek": 629664, "start": 6318.72, "end": 6322.04, "text": " that uses like Swift's dispatch to do the threading", "tokens": [300, 4960, 411, 25539, 311, 36729, 281, 360, 264, 7207, 278], "temperature": 0.0, "avg_logprob": -0.1463594196223411, "compression_ratio": 1.6297709923664123, "no_speech_prob": 1.921886178024579e-05}, {"id": 2538, "seek": 629664, "start": 6322.04, "end": 6325.04, "text": " and maybe open CV to do the transformations", "tokens": [293, 1310, 1269, 22995, 281, 360, 264, 34852], "temperature": 0.0, "avg_logprob": -0.1463594196223411, "compression_ratio": 1.6297709923664123, "no_speech_prob": 1.921886178024579e-05}, {"id": 2539, "seek": 629664, "start": 6325.04, "end": 6325.92, "text": " and stuff like that.", "tokens": [293, 1507, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.1463594196223411, "compression_ratio": 1.6297709923664123, "no_speech_prob": 1.921886178024579e-05}, {"id": 2540, "seek": 632592, "start": 6325.92, "end": 6329.36, "text": " Like we can build, I think, a data blocks", "tokens": [1743, 321, 393, 1322, 11, 286, 519, 11, 257, 1412, 8474], "temperature": 0.0, "avg_logprob": -0.12004344774329144, "compression_ratio": 1.5677966101694916, "no_speech_prob": 1.2605190022441093e-05}, {"id": 2541, "seek": 632592, "start": 6329.36, "end": 6332.28, "text": " something like the Python data blocks API", "tokens": [746, 411, 264, 15329, 1412, 8474, 9362], "temperature": 0.0, "avg_logprob": -0.12004344774329144, "compression_ratio": 1.5677966101694916, "no_speech_prob": 1.2605190022441093e-05}, {"id": 2542, "seek": 632592, "start": 6332.28, "end": 6334.28, "text": " but that is like native.", "tokens": [457, 300, 307, 411, 8470, 13], "temperature": 0.0, "avg_logprob": -0.12004344774329144, "compression_ratio": 1.5677966101694916, "no_speech_prob": 1.2605190022441093e-05}, {"id": 2543, "seek": 632592, "start": 6334.28, "end": 6336.24, "text": " It's not talking to anything else.", "tokens": [467, 311, 406, 1417, 281, 1340, 1646, 13], "temperature": 0.0, "avg_logprob": -0.12004344774329144, "compression_ratio": 1.5677966101694916, "no_speech_prob": 1.2605190022441093e-05}, {"id": 2544, "seek": 632592, "start": 6337.36, "end": 6339.88, "text": " Anyway, so now we've got batches of data.", "tokens": [5684, 11, 370, 586, 321, 600, 658, 15245, 279, 295, 1412, 13], "temperature": 0.0, "avg_logprob": -0.12004344774329144, "compression_ratio": 1.5677966101694916, "no_speech_prob": 1.2605190022441093e-05}, {"id": 2545, "seek": 632592, "start": 6339.88, "end": 6343.0, "text": " We can train a model as soon as we have one.", "tokens": [492, 393, 3847, 257, 2316, 382, 2321, 382, 321, 362, 472, 13], "temperature": 0.0, "avg_logprob": -0.12004344774329144, "compression_ratio": 1.5677966101694916, "no_speech_prob": 1.2605190022441093e-05}, {"id": 2546, "seek": 632592, "start": 6343.0, "end": 6345.36, "text": " So let's create a Xresnet model.", "tokens": [407, 718, 311, 1884, 257, 1783, 495, 7129, 2316, 13], "temperature": 0.0, "avg_logprob": -0.12004344774329144, "compression_ratio": 1.5677966101694916, "no_speech_prob": 1.2605190022441093e-05}, {"id": 2547, "seek": 632592, "start": 6345.36, "end": 6348.24, "text": " And as you've already seen in the slides,", "tokens": [400, 382, 291, 600, 1217, 1612, 294, 264, 9788, 11], "temperature": 0.0, "avg_logprob": -0.12004344774329144, "compression_ratio": 1.5677966101694916, "no_speech_prob": 1.2605190022441093e-05}, {"id": 2548, "seek": 632592, "start": 6348.24, "end": 6351.2, "text": " it ends up looking very, very familiar.", "tokens": [309, 5314, 493, 1237, 588, 11, 588, 4963, 13], "temperature": 0.0, "avg_logprob": -0.12004344774329144, "compression_ratio": 1.5677966101694916, "no_speech_prob": 1.2605190022441093e-05}, {"id": 2549, "seek": 632592, "start": 6351.2, "end": 6353.36, "text": " So here's our conflayer.", "tokens": [407, 510, 311, 527, 1497, 75, 11167, 13], "temperature": 0.0, "avg_logprob": -0.12004344774329144, "compression_ratio": 1.5677966101694916, "no_speech_prob": 1.2605190022441093e-05}, {"id": 2550, "seek": 635336, "start": 6353.36, "end": 6356.719999999999, "text": " Just one thing to mention, at the moment,", "tokens": [1449, 472, 551, 281, 2152, 11, 412, 264, 1623, 11], "temperature": 0.0, "avg_logprob": -0.12834054280102739, "compression_ratio": 1.7211155378486056, "no_speech_prob": 5.014174803363858e-06}, {"id": 2551, "seek": 635336, "start": 6356.719999999999, "end": 6357.96, "text": " and this will probably only be true", "tokens": [293, 341, 486, 1391, 787, 312, 2074], "temperature": 0.0, "avg_logprob": -0.12834054280102739, "compression_ratio": 1.7211155378486056, "no_speech_prob": 5.014174803363858e-06}, {"id": 2552, "seek": 635336, "start": 6357.96, "end": 6359.4, "text": " for a couple more weeks,", "tokens": [337, 257, 1916, 544, 3259, 11], "temperature": 0.0, "avg_logprob": -0.12834054280102739, "compression_ratio": 1.7211155378486056, "no_speech_prob": 5.014174803363858e-06}, {"id": 2553, "seek": 635336, "start": 6359.4, "end": 6361.88, "text": " there are kind of two versions of all the layers.", "tokens": [456, 366, 733, 295, 732, 9606, 295, 439, 264, 7914, 13], "temperature": 0.0, "avg_logprob": -0.12834054280102739, "compression_ratio": 1.7211155378486056, "no_speech_prob": 5.014174803363858e-06}, {"id": 2554, "seek": 635336, "start": 6361.88, "end": 6364.24, "text": " There's the versions in the FastAI repo", "tokens": [821, 311, 264, 9606, 294, 264, 15968, 48698, 49040], "temperature": 0.0, "avg_logprob": -0.12834054280102739, "compression_ratio": 1.7211155378486056, "no_speech_prob": 5.014174803363858e-06}, {"id": 2555, "seek": 635336, "start": 6364.24, "end": 6366.12, "text": " which all start with fa", "tokens": [597, 439, 722, 365, 2050], "temperature": 0.0, "avg_logprob": -0.12834054280102739, "compression_ratio": 1.7211155378486056, "no_speech_prob": 5.014174803363858e-06}, {"id": 2556, "seek": 635336, "start": 6366.12, "end": 6368.719999999999, "text": " and there are versions in the Swift repo that don't.", "tokens": [293, 456, 366, 9606, 294, 264, 25539, 49040, 300, 500, 380, 13], "temperature": 0.0, "avg_logprob": -0.12834054280102739, "compression_ratio": 1.7211155378486056, "no_speech_prob": 5.014174803363858e-06}, {"id": 2557, "seek": 635336, "start": 6368.719999999999, "end": 6370.2, "text": " So just ignore these fa's.", "tokens": [407, 445, 11200, 613, 2050, 311, 13], "temperature": 0.0, "avg_logprob": -0.12834054280102739, "compression_ratio": 1.7211155378486056, "no_speech_prob": 5.014174803363858e-06}, {"id": 2558, "seek": 635336, "start": 6371.08, "end": 6376.08, "text": " So a conflayer has a batch norm and it has a convolution.", "tokens": [407, 257, 1497, 75, 11167, 575, 257, 15245, 2026, 293, 309, 575, 257, 45216, 13], "temperature": 0.0, "avg_logprob": -0.12834054280102739, "compression_ratio": 1.7211155378486056, "no_speech_prob": 5.014174803363858e-06}, {"id": 2559, "seek": 635336, "start": 6376.799999999999, "end": 6379.0, "text": " Another thing that's slightly awkward at the moment", "tokens": [3996, 551, 300, 311, 4748, 11411, 412, 264, 1623], "temperature": 0.0, "avg_logprob": -0.12834054280102739, "compression_ratio": 1.7211155378486056, "no_speech_prob": 5.014174803363858e-06}, {"id": 2560, "seek": 635336, "start": 6379.0, "end": 6382.5199999999995, "text": " is that we, so you'll see", "tokens": [307, 300, 321, 11, 370, 291, 603, 536], "temperature": 0.0, "avg_logprob": -0.12834054280102739, "compression_ratio": 1.7211155378486056, "no_speech_prob": 5.014174803363858e-06}, {"id": 2561, "seek": 638252, "start": 6382.52, "end": 6385.96, "text": " in right now, some of our code looks weird", "tokens": [294, 558, 586, 11, 512, 295, 527, 3089, 1542, 3657], "temperature": 0.0, "avg_logprob": -0.139758056640625, "compression_ratio": 1.6789667896678966, "no_speech_prob": 2.178076101699844e-05}, {"id": 2562, "seek": 638252, "start": 6385.96, "end": 6390.040000000001, "text": " because auto diff in Swift doesn't support flow control.", "tokens": [570, 8399, 7593, 294, 25539, 1177, 380, 1406, 3095, 1969, 13], "temperature": 0.0, "avg_logprob": -0.139758056640625, "compression_ratio": 1.6789667896678966, "no_speech_prob": 2.178076101699844e-05}, {"id": 2563, "seek": 638252, "start": 6390.040000000001, "end": 6394.68, "text": " So if or for loops, that'll change soon enough.", "tokens": [407, 498, 420, 337, 16121, 11, 300, 603, 1319, 2321, 1547, 13], "temperature": 0.0, "avg_logprob": -0.139758056640625, "compression_ratio": 1.6789667896678966, "no_speech_prob": 2.178076101699844e-05}, {"id": 2564, "seek": 638252, "start": 6394.68, "end": 6397.84, "text": " So when you see something like no bias convolution,", "tokens": [407, 562, 291, 536, 746, 411, 572, 12577, 45216, 11], "temperature": 0.0, "avg_logprob": -0.139758056640625, "compression_ratio": 1.6789667896678966, "no_speech_prob": 2.178076101699844e-05}, {"id": 2565, "seek": 638252, "start": 6397.84, "end": 6401.240000000001, "text": " that's because we can't write a convolution layer", "tokens": [300, 311, 570, 321, 393, 380, 2464, 257, 45216, 4583], "temperature": 0.0, "avg_logprob": -0.139758056640625, "compression_ratio": 1.6789667896678966, "no_speech_prob": 2.178076101699844e-05}, {"id": 2566, "seek": 638252, "start": 6401.240000000001, "end": 6402.84, "text": " that has an if statement saying,", "tokens": [300, 575, 364, 498, 5629, 1566, 11], "temperature": 0.0, "avg_logprob": -0.139758056640625, "compression_ratio": 1.6789667896678966, "no_speech_prob": 2.178076101699844e-05}, {"id": 2567, "seek": 638252, "start": 6402.84, "end": 6406.320000000001, "text": " if the person asked for bias, use it, otherwise don't.", "tokens": [498, 264, 954, 2351, 337, 12577, 11, 764, 309, 11, 5911, 500, 380, 13], "temperature": 0.0, "avg_logprob": -0.139758056640625, "compression_ratio": 1.6789667896678966, "no_speech_prob": 2.178076101699844e-05}, {"id": 2568, "seek": 638252, "start": 6406.320000000001, "end": 6408.96, "text": " So don't worry too much about those workarounds either.", "tokens": [407, 500, 380, 3292, 886, 709, 466, 729, 589, 289, 4432, 2139, 13], "temperature": 0.0, "avg_logprob": -0.139758056640625, "compression_ratio": 1.6789667896678966, "no_speech_prob": 2.178076101699844e-05}, {"id": 2569, "seek": 638252, "start": 6408.96, "end": 6411.0, "text": " They'll go away soon enough.", "tokens": [814, 603, 352, 1314, 2321, 1547, 13], "temperature": 0.0, "avg_logprob": -0.139758056640625, "compression_ratio": 1.6789667896678966, "no_speech_prob": 2.178076101699844e-05}, {"id": 2570, "seek": 638252, "start": 6411.0, "end": 6412.320000000001, "text": " So we've got a batch norm layer.", "tokens": [407, 321, 600, 658, 257, 15245, 2026, 4583, 13], "temperature": 0.0, "avg_logprob": -0.139758056640625, "compression_ratio": 1.6789667896678966, "no_speech_prob": 2.178076101699844e-05}, {"id": 2571, "seek": 641232, "start": 6412.32, "end": 6414.719999999999, "text": " We've got a conf layer and we can go through them", "tokens": [492, 600, 658, 257, 1497, 4583, 293, 321, 393, 352, 807, 552], "temperature": 0.0, "avg_logprob": -0.12916885860382565, "compression_ratio": 1.6821428571428572, "no_speech_prob": 7.182983154052636e-06}, {"id": 2572, "seek": 641232, "start": 6414.719999999999, "end": 6417.5599999999995, "text": " and the zero bn is the stuff that you're used to.", "tokens": [293, 264, 4018, 272, 77, 307, 264, 1507, 300, 291, 434, 1143, 281, 13], "temperature": 0.0, "avg_logprob": -0.12916885860382565, "compression_ratio": 1.6821428571428572, "no_speech_prob": 7.182983154052636e-06}, {"id": 2573, "seek": 641232, "start": 6417.5599999999995, "end": 6422.08, "text": " And as Chris said, dunder call is built without the dunder", "tokens": [400, 382, 6688, 848, 11, 274, 6617, 818, 307, 3094, 1553, 264, 274, 6617], "temperature": 0.0, "avg_logprob": -0.12916885860382565, "compression_ratio": 1.6821428571428572, "no_speech_prob": 7.182983154052636e-06}, {"id": 2574, "seek": 641232, "start": 6422.08, "end": 6424.639999999999, "text": " but otherwise everything looks the same as usual.", "tokens": [457, 5911, 1203, 1542, 264, 912, 382, 7713, 13], "temperature": 0.0, "avg_logprob": -0.12916885860382565, "compression_ratio": 1.6821428571428572, "no_speech_prob": 7.182983154052636e-06}, {"id": 2575, "seek": 641232, "start": 6426.12, "end": 6429.36, "text": " Because we don't have the ability right now,", "tokens": [1436, 321, 500, 380, 362, 264, 3485, 558, 586, 11], "temperature": 0.0, "avg_logprob": -0.12916885860382565, "compression_ratio": 1.6821428571428572, "no_speech_prob": 7.182983154052636e-06}, {"id": 2576, "seek": 641232, "start": 6429.36, "end": 6433.28, "text": " this will change soon, to use if in differentiable code", "tokens": [341, 486, 1319, 2321, 11, 281, 764, 498, 294, 819, 9364, 3089], "temperature": 0.0, "avg_logprob": -0.12916885860382565, "compression_ratio": 1.6821428571428572, "no_speech_prob": 7.182983154052636e-06}, {"id": 2577, "seek": 641232, "start": 6433.28, "end": 6435.0, "text": " that needs to be differentiated.", "tokens": [300, 2203, 281, 312, 27372, 770, 13], "temperature": 0.0, "avg_logprob": -0.12916885860382565, "compression_ratio": 1.6821428571428572, "no_speech_prob": 7.182983154052636e-06}, {"id": 2578, "seek": 641232, "start": 6435.0, "end": 6437.28, "text": " We've basically added something called a switchable layer", "tokens": [492, 600, 1936, 3869, 746, 1219, 257, 3679, 712, 4583], "temperature": 0.0, "avg_logprob": -0.12916885860382565, "compression_ratio": 1.6821428571428572, "no_speech_prob": 7.182983154052636e-06}, {"id": 2579, "seek": 641232, "start": 6437.28, "end": 6439.04, "text": " which is something you can turn on or off", "tokens": [597, 307, 746, 291, 393, 1261, 322, 420, 766], "temperature": 0.0, "avg_logprob": -0.12916885860382565, "compression_ratio": 1.6821428571428572, "no_speech_prob": 7.182983154052636e-06}, {"id": 2580, "seek": 641232, "start": 6439.04, "end": 6440.44, "text": " so the details don't matter.", "tokens": [370, 264, 4365, 500, 380, 1871, 13], "temperature": 0.0, "avg_logprob": -0.12916885860382565, "compression_ratio": 1.6821428571428572, "no_speech_prob": 7.182983154052636e-06}, {"id": 2581, "seek": 644044, "start": 6440.44, "end": 6442.5199999999995, "text": " Chris will describe next week however,", "tokens": [6688, 486, 6786, 958, 1243, 4461, 11], "temperature": 0.0, "avg_logprob": -0.25840433712663324, "compression_ratio": 1.725868725868726, "no_speech_prob": 2.3185202735476196e-05}, {"id": 2582, "seek": 644044, "start": 6442.5199999999995, "end": 6447.5199999999995, "text": " how we actually wrote our own kind of custom gradients", "tokens": [577, 321, 767, 4114, 527, 1065, 733, 295, 2375, 2771, 2448], "temperature": 0.0, "avg_logprob": -0.25840433712663324, "compression_ratio": 1.725868725868726, "no_speech_prob": 2.3185202735476196e-05}, {"id": 2583, "seek": 644044, "start": 6447.599999999999, "end": 6451.04, "text": " for this kind of layer and that'll be fun to learn about.", "tokens": [337, 341, 733, 295, 4583, 293, 300, 603, 312, 1019, 281, 1466, 466, 13], "temperature": 0.0, "avg_logprob": -0.25840433712663324, "compression_ratio": 1.725868725868726, "no_speech_prob": 2.3185202735476196e-05}, {"id": 2584, "seek": 644044, "start": 6451.04, "end": 6454.639999999999, "text": " So then we use that to basically have something where,", "tokens": [407, 550, 321, 764, 300, 281, 1936, 362, 746, 689, 11], "temperature": 0.0, "avg_logprob": -0.25840433712663324, "compression_ratio": 1.725868725868726, "no_speech_prob": 2.3185202735476196e-05}, {"id": 2585, "seek": 644044, "start": 6454.639999999999, "end": 6458.36, "text": " because remember in Xresnet in the identity path,", "tokens": [570, 1604, 294, 1783, 495, 7129, 294, 264, 6575, 3100, 11], "temperature": 0.0, "avg_logprob": -0.25840433712663324, "compression_ratio": 1.725868725868726, "no_speech_prob": 2.3185202735476196e-05}, {"id": 2586, "seek": 644044, "start": 6458.36, "end": 6460.28, "text": " it's not always an identity path.", "tokens": [309, 311, 406, 1009, 364, 6575, 3100, 13], "temperature": 0.0, "avg_logprob": -0.25840433712663324, "compression_ratio": 1.725868725868726, "no_speech_prob": 2.3185202735476196e-05}, {"id": 2587, "seek": 644044, "start": 6460.28, "end": 6462.16, "text": " Sometimes you down sample in that path.", "tokens": [4803, 291, 760, 6889, 294, 300, 3100, 13], "temperature": 0.0, "avg_logprob": -0.25840433712663324, "compression_ratio": 1.725868725868726, "no_speech_prob": 2.3185202735476196e-05}, {"id": 2588, "seek": 644044, "start": 6462.16, "end": 6464.639999999999, "text": " Sometimes you change the number of channels in that path.", "tokens": [4803, 291, 1319, 264, 1230, 295, 9235, 294, 300, 3100, 13], "temperature": 0.0, "avg_logprob": -0.25840433712663324, "compression_ratio": 1.725868725868726, "no_speech_prob": 2.3185202735476196e-05}, {"id": 2589, "seek": 644044, "start": 6464.639999999999, "end": 6469.4, "text": " If you down sample, then you maybe add an average pool 2D.", "tokens": [759, 291, 760, 6889, 11, 550, 291, 1310, 909, 364, 4274, 7005, 568, 35, 13], "temperature": 0.0, "avg_logprob": -0.25840433712663324, "compression_ratio": 1.725868725868726, "no_speech_prob": 2.3185202735476196e-05}, {"id": 2590, "seek": 646940, "start": 6469.4, "end": 6472.639999999999, "text": " So because again, we don't have the ability to have if,", "tokens": [407, 570, 797, 11, 321, 500, 380, 362, 264, 3485, 281, 362, 498, 11], "temperature": 0.0, "avg_logprob": -0.29727827299625503, "compression_ratio": 1.628099173553719, "no_speech_prob": 2.078249781334307e-05}, {"id": 2591, "seek": 646940, "start": 6472.639999999999, "end": 6474.5199999999995, "text": " we just use this switchable layer", "tokens": [321, 445, 764, 341, 3679, 712, 4583], "temperature": 0.0, "avg_logprob": -0.29727827299625503, "compression_ratio": 1.628099173553719, "no_speech_prob": 2.078249781334307e-05}, {"id": 2592, "seek": 646940, "start": 6474.5199999999995, "end": 6479.5199999999995, "text": " and maybe you change the number of channels", "tokens": [293, 1310, 291, 1319, 264, 1230, 295, 9235], "temperature": 0.0, "avg_logprob": -0.29727827299625503, "compression_ratio": 1.628099173553719, "no_speech_prob": 2.078249781334307e-05}, {"id": 2593, "seek": 646940, "start": 6479.599999999999, "end": 6482.839999999999, "text": " by adding a one by one conv, that's all that is.", "tokens": [538, 5127, 257, 472, 538, 472, 3754, 11, 300, 311, 439, 300, 307, 13], "temperature": 0.0, "avg_logprob": -0.29727827299625503, "compression_ratio": 1.628099173553719, "no_speech_prob": 2.078249781334307e-05}, {"id": 2594, "seek": 646940, "start": 6483.799999999999, "end": 6486.799999999999, "text": " So most of this stuff, if you're watching this", "tokens": [407, 881, 295, 341, 1507, 11, 498, 291, 434, 1976, 341], "temperature": 0.0, "avg_logprob": -0.29727827299625503, "compression_ratio": 1.628099173553719, "no_speech_prob": 2.078249781334307e-05}, {"id": 2595, "seek": 646940, "start": 6486.799999999999, "end": 6490.0, "text": " much later than kind of July or something,", "tokens": [709, 1780, 813, 733, 295, 7370, 420, 746, 11], "temperature": 0.0, "avg_logprob": -0.29727827299625503, "compression_ratio": 1.628099173553719, "no_speech_prob": 2.078249781334307e-05}, {"id": 2596, "seek": 646940, "start": 6490.0, "end": 6491.24, "text": " this will probably all have gone away", "tokens": [341, 486, 1391, 439, 362, 2780, 1314], "temperature": 0.0, "avg_logprob": -0.29727827299625503, "compression_ratio": 1.628099173553719, "no_speech_prob": 2.078249781334307e-05}, {"id": 2597, "seek": 646940, "start": 6491.24, "end": 6493.24, "text": " and been replaced by some if statements.", "tokens": [293, 668, 10772, 538, 512, 498, 12363, 13], "temperature": 0.0, "avg_logprob": -0.29727827299625503, "compression_ratio": 1.628099173553719, "no_speech_prob": 2.078249781334307e-05}, {"id": 2598, "seek": 646940, "start": 6495.44, "end": 6497.759999999999, "text": " But once we've got all that, the res block", "tokens": [583, 1564, 321, 600, 658, 439, 300, 11, 264, 725, 3461], "temperature": 0.0, "avg_logprob": -0.29727827299625503, "compression_ratio": 1.628099173553719, "no_speech_prob": 2.078249781334307e-05}, {"id": 2599, "seek": 649776, "start": 6497.76, "end": 6502.0, "text": " res block, there's really nothing to mention, is there?", "tokens": [725, 3461, 11, 456, 311, 534, 1825, 281, 2152, 11, 307, 456, 30], "temperature": 0.0, "avg_logprob": -0.144226354711196, "compression_ratio": 1.5279187817258884, "no_speech_prob": 1.644139592826832e-05}, {"id": 2600, "seek": 649776, "start": 6502.0, "end": 6503.56, "text": " I mean, it's basically identical.", "tokens": [286, 914, 11, 309, 311, 1936, 14800, 13], "temperature": 0.0, "avg_logprob": -0.144226354711196, "compression_ratio": 1.5279187817258884, "no_speech_prob": 1.644139592826832e-05}, {"id": 2601, "seek": 649776, "start": 6503.56, "end": 6508.56, "text": " If you look back at the version in 11", "tokens": [759, 291, 574, 646, 412, 264, 3037, 294, 2975], "temperature": 0.0, "avg_logprob": -0.144226354711196, "compression_ratio": 1.5279187817258884, "no_speech_prob": 1.644139592826832e-05}, {"id": 2602, "seek": 649776, "start": 6512.280000000001, "end": 6513.64, "text": " in the Python versions", "tokens": [294, 264, 15329, 9606], "temperature": 0.0, "avg_logprob": -0.144226354711196, "compression_ratio": 1.5279187817258884, "no_speech_prob": 1.644139592826832e-05}, {"id": 2603, "seek": 649776, "start": 6517.360000000001, "end": 6519.08, "text": " and kind of switch between them,", "tokens": [293, 733, 295, 3679, 1296, 552, 11], "temperature": 0.0, "avg_logprob": -0.144226354711196, "compression_ratio": 1.5279187817258884, "no_speech_prob": 1.644139592826832e-05}, {"id": 2604, "seek": 649776, "start": 6520.16, "end": 6522.2, "text": " you almost need like a strobe light thing", "tokens": [291, 1920, 643, 411, 257, 8959, 650, 1442, 551], "temperature": 0.0, "avg_logprob": -0.144226354711196, "compression_ratio": 1.5279187817258884, "no_speech_prob": 1.644139592826832e-05}, {"id": 2605, "seek": 649776, "start": 6522.2, "end": 6523.320000000001, "text": " to see that they're different.", "tokens": [281, 536, 300, 436, 434, 819, 13], "temperature": 0.0, "avg_logprob": -0.144226354711196, "compression_ratio": 1.5279187817258884, "no_speech_prob": 1.644139592826832e-05}, {"id": 2606, "seek": 649776, "start": 6523.320000000001, "end": 6527.4400000000005, "text": " Like it's the same layers equals conv layer,", "tokens": [1743, 309, 311, 264, 912, 7914, 6915, 3754, 4583, 11], "temperature": 0.0, "avg_logprob": -0.144226354711196, "compression_ratio": 1.5279187817258884, "no_speech_prob": 1.644139592826832e-05}, {"id": 2607, "seek": 652744, "start": 6527.44, "end": 6529.12, "text": " layers equals conv layer,", "tokens": [7914, 6915, 3754, 4583, 11], "temperature": 0.0, "avg_logprob": -0.20681874135906778, "compression_ratio": 1.5076142131979695, "no_speech_prob": 1.2027572665829211e-05}, {"id": 2608, "seek": 652744, "start": 6529.12, "end": 6530.5199999999995, "text": " don't know why we changed the name.", "tokens": [500, 380, 458, 983, 321, 3105, 264, 1315, 13], "temperature": 0.0, "avg_logprob": -0.20681874135906778, "compression_ratio": 1.5076142131979695, "no_speech_prob": 1.2027572665829211e-05}, {"id": 2609, "seek": 652744, "start": 6530.5199999999995, "end": 6532.08, "text": " Got this ternary here.", "tokens": [5803, 341, 256, 1248, 822, 510, 13], "temperature": 0.0, "avg_logprob": -0.20681874135906778, "compression_ratio": 1.5076142131979695, "no_speech_prob": 1.2027572665829211e-05}, {"id": 2610, "seek": 652744, "start": 6532.08, "end": 6537.08, "text": " This question mark and colon is identical to if", "tokens": [639, 1168, 1491, 293, 8255, 307, 14800, 281, 498], "temperature": 0.0, "avg_logprob": -0.20681874135906778, "compression_ratio": 1.5076142131979695, "no_speech_prob": 1.2027572665829211e-05}, {"id": 2611, "seek": 652744, "start": 6538.82, "end": 6542.799999999999, "text": " and else as an operator in Python comes from C.", "tokens": [293, 1646, 382, 364, 12973, 294, 15329, 1487, 490, 383, 13], "temperature": 0.0, "avg_logprob": -0.20681874135906778, "compression_ratio": 1.5076142131979695, "no_speech_prob": 1.2027572665829211e-05}, {"id": 2612, "seek": 652744, "start": 6544.799999999999, "end": 6548.5199999999995, "text": " And then, yeah, and then finally in the call,", "tokens": [400, 550, 11, 1338, 11, 293, 550, 2721, 294, 264, 818, 11], "temperature": 0.0, "avg_logprob": -0.20681874135906778, "compression_ratio": 1.5076142131979695, "no_speech_prob": 1.2027572665829211e-05}, {"id": 2613, "seek": 652744, "start": 6548.5199999999995, "end": 6553.5199999999995, "text": " that and that look exactly the same.", "tokens": [300, 293, 300, 574, 2293, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.20681874135906778, "compression_ratio": 1.5076142131979695, "no_speech_prob": 1.2027572665829211e-05}, {"id": 2614, "seek": 652744, "start": 6553.919999999999, "end": 6555.36, "text": " Pure selves.", "tokens": [29474, 41900, 13], "temperature": 0.0, "avg_logprob": -0.20681874135906778, "compression_ratio": 1.5076142131979695, "no_speech_prob": 1.2027572665829211e-05}, {"id": 2615, "seek": 652744, "start": 6555.36, "end": 6556.719999999999, "text": " Yeah, thank heavens.", "tokens": [865, 11, 1309, 26011, 13], "temperature": 0.0, "avg_logprob": -0.20681874135906778, "compression_ratio": 1.5076142131979695, "no_speech_prob": 1.2027572665829211e-05}, {"id": 2616, "seek": 655672, "start": 6556.72, "end": 6557.56, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.14560174440082752, "compression_ratio": 1.6080402010050252, "no_speech_prob": 6.438398486352526e-06}, {"id": 2617, "seek": 655672, "start": 6559.52, "end": 6561.8, "text": " Make layer looks basically the same.", "tokens": [4387, 4583, 1542, 1936, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.14560174440082752, "compression_ratio": 1.6080402010050252, "no_speech_prob": 6.438398486352526e-06}, {"id": 2618, "seek": 655672, "start": 6561.8, "end": 6564.360000000001, "text": " This is the make layer we had before.", "tokens": [639, 307, 264, 652, 4583, 321, 632, 949, 13], "temperature": 0.0, "avg_logprob": -0.14560174440082752, "compression_ratio": 1.6080402010050252, "no_speech_prob": 6.438398486352526e-06}, {"id": 2619, "seek": 655672, "start": 6564.360000000001, "end": 6566.12, "text": " This is the make layer we have now.", "tokens": [639, 307, 264, 652, 4583, 321, 362, 586, 13], "temperature": 0.0, "avg_logprob": -0.14560174440082752, "compression_ratio": 1.6080402010050252, "no_speech_prob": 6.438398486352526e-06}, {"id": 2620, "seek": 655672, "start": 6568.56, "end": 6569.400000000001, "text": " Don't need that.", "tokens": [1468, 380, 643, 300, 13], "temperature": 0.0, "avg_logprob": -0.14560174440082752, "compression_ratio": 1.6080402010050252, "no_speech_prob": 6.438398486352526e-06}, {"id": 2621, "seek": 655672, "start": 6570.56, "end": 6574.72, "text": " And so it's interesting to see how some swift things", "tokens": [400, 370, 309, 311, 1880, 281, 536, 577, 512, 29184, 721], "temperature": 0.0, "avg_logprob": -0.14560174440082752, "compression_ratio": 1.6080402010050252, "no_speech_prob": 6.438398486352526e-06}, {"id": 2622, "seek": 655672, "start": 6574.72, "end": 6576.240000000001, "text": " kind of come out quite neatly, right?", "tokens": [733, 295, 808, 484, 1596, 36634, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.14560174440082752, "compression_ratio": 1.6080402010050252, "no_speech_prob": 6.438398486352526e-06}, {"id": 2623, "seek": 655672, "start": 6576.240000000001, "end": 6580.04, "text": " So this use of map, so this is generating,", "tokens": [407, 341, 764, 295, 4471, 11, 370, 341, 307, 17746, 11], "temperature": 0.0, "avg_logprob": -0.14560174440082752, "compression_ratio": 1.6080402010050252, "no_speech_prob": 6.438398486352526e-06}, {"id": 2624, "seek": 655672, "start": 6580.04, "end": 6584.68, "text": " this is the same as range and blocks in Python.", "tokens": [341, 307, 264, 912, 382, 3613, 293, 8474, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.14560174440082752, "compression_ratio": 1.6080402010050252, "no_speech_prob": 6.438398486352526e-06}, {"id": 2625, "seek": 658468, "start": 6584.68, "end": 6588.52, "text": " So this is basically saying map, range and blocks,", "tokens": [407, 341, 307, 1936, 1566, 4471, 11, 3613, 293, 8474, 11], "temperature": 0.0, "avg_logprob": -0.2096259109373015, "compression_ratio": 1.6264591439688716, "no_speech_prob": 3.237488044760539e-06}, {"id": 2626, "seek": 658468, "start": 6588.52, "end": 6590.72, "text": " and then passing in disclosure,", "tokens": [293, 550, 8437, 294, 30392, 11], "temperature": 0.0, "avg_logprob": -0.2096259109373015, "compression_ratio": 1.6264591439688716, "no_speech_prob": 3.237488044760539e-06}, {"id": 2627, "seek": 658468, "start": 6590.72, "end": 6593.08, "text": " which generates the res block, right?", "tokens": [597, 23815, 264, 725, 3461, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2096259109373015, "compression_ratio": 1.6264591439688716, "no_speech_prob": 3.237488044760539e-06}, {"id": 2628, "seek": 658468, "start": 6593.08, "end": 6594.6, "text": " So I think it's kind of, I don't know,", "tokens": [407, 286, 519, 309, 311, 733, 295, 11, 286, 500, 380, 458, 11], "temperature": 0.0, "avg_logprob": -0.2096259109373015, "compression_ratio": 1.6264591439688716, "no_speech_prob": 3.237488044760539e-06}, {"id": 2629, "seek": 658468, "start": 6594.6, "end": 6598.200000000001, "text": " I find it more clear the swift way,", "tokens": [286, 915, 309, 544, 1850, 264, 29184, 636, 11], "temperature": 0.0, "avg_logprob": -0.2096259109373015, "compression_ratio": 1.6264591439688716, "no_speech_prob": 3.237488044760539e-06}, {"id": 2630, "seek": 658468, "start": 6598.200000000001, "end": 6599.64, "text": " but very, very similar.", "tokens": [457, 588, 11, 588, 2531, 13], "temperature": 0.0, "avg_logprob": -0.2096259109373015, "compression_ratio": 1.6264591439688716, "no_speech_prob": 3.237488044760539e-06}, {"id": 2631, "seek": 658468, "start": 6599.64, "end": 6601.92, "text": " The idea of swift is to have simpler primitives", "tokens": [440, 1558, 295, 29184, 307, 281, 362, 18587, 2886, 38970], "temperature": 0.0, "avg_logprob": -0.2096259109373015, "compression_ratio": 1.6264591439688716, "no_speech_prob": 3.237488044760539e-06}, {"id": 2632, "seek": 658468, "start": 6601.92, "end": 6604.38, "text": " that compose instead of having special cases", "tokens": [300, 35925, 2602, 295, 1419, 2121, 3331], "temperature": 0.0, "avg_logprob": -0.2096259109373015, "compression_ratio": 1.6264591439688716, "no_speech_prob": 3.237488044760539e-06}, {"id": 2633, "seek": 658468, "start": 6604.38, "end": 6605.52, "text": " for the important things.", "tokens": [337, 264, 1021, 721, 13], "temperature": 0.0, "avg_logprob": -0.2096259109373015, "compression_ratio": 1.6264591439688716, "no_speech_prob": 3.237488044760539e-06}, {"id": 2634, "seek": 658468, "start": 6605.52, "end": 6606.360000000001, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2096259109373015, "compression_ratio": 1.6264591439688716, "no_speech_prob": 3.237488044760539e-06}, {"id": 2635, "seek": 658468, "start": 6607.240000000001, "end": 6608.84, "text": " So now we've got all that.", "tokens": [407, 586, 321, 600, 658, 439, 300, 13], "temperature": 0.0, "avg_logprob": -0.2096259109373015, "compression_ratio": 1.6264591439688716, "no_speech_prob": 3.237488044760539e-06}, {"id": 2636, "seek": 660884, "start": 6608.84, "end": 6613.84, "text": " The xresnet looks very similar to what we would expect.", "tokens": [440, 2031, 495, 7129, 1542, 588, 2531, 281, 437, 321, 576, 2066, 13], "temperature": 0.0, "avg_logprob": -0.13824708482860465, "compression_ratio": 1.6203703703703705, "no_speech_prob": 2.078345642075874e-05}, {"id": 2637, "seek": 660884, "start": 6617.04, "end": 6620.6, "text": " We've still got our number of filters thing going on,", "tokens": [492, 600, 920, 658, 527, 1230, 295, 15995, 551, 516, 322, 11], "temperature": 0.0, "avg_logprob": -0.13824708482860465, "compression_ratio": 1.6203703703703705, "no_speech_prob": 2.078345642075874e-05}, {"id": 2638, "seek": 660884, "start": 6620.6, "end": 6624.16, "text": " the stem, so now we've got that array map thing.", "tokens": [264, 12312, 11, 370, 586, 321, 600, 658, 300, 10225, 4471, 551, 13], "temperature": 0.0, "avg_logprob": -0.13824708482860465, "compression_ratio": 1.6203703703703705, "no_speech_prob": 2.078345642075874e-05}, {"id": 2639, "seek": 660884, "start": 6624.16, "end": 6625.8, "text": " You kind of get a start to get a feel", "tokens": [509, 733, 295, 483, 257, 722, 281, 483, 257, 841], "temperature": 0.0, "avg_logprob": -0.13824708482860465, "compression_ratio": 1.6203703703703705, "no_speech_prob": 2.078345642075874e-05}, {"id": 2640, "seek": 660884, "start": 6625.8, "end": 6628.4800000000005, "text": " for these kind of idioms in swift.", "tokens": [337, 613, 733, 295, 18014, 4785, 294, 29184, 13], "temperature": 0.0, "avg_logprob": -0.13824708482860465, "compression_ratio": 1.6203703703703705, "no_speech_prob": 2.078345642075874e-05}, {"id": 2641, "seek": 660884, "start": 6628.4800000000005, "end": 6632.28, "text": " So kind of range.map is a useful kind of idiom", "tokens": [407, 733, 295, 3613, 13, 24223, 307, 257, 4420, 733, 295, 18014, 298], "temperature": 0.0, "avg_logprob": -0.13824708482860465, "compression_ratio": 1.6203703703703705, "no_speech_prob": 2.078345642075874e-05}, {"id": 2642, "seek": 660884, "start": 6632.28, "end": 6634.16, "text": " to be aware of.", "tokens": [281, 312, 3650, 295, 13], "temperature": 0.0, "avg_logprob": -0.13824708482860465, "compression_ratio": 1.6203703703703705, "no_speech_prob": 2.078345642075874e-05}, {"id": 2643, "seek": 660884, "start": 6634.16, "end": 6635.28, "text": " You can also use a for loop.", "tokens": [509, 393, 611, 764, 257, 337, 6367, 13], "temperature": 0.0, "avg_logprob": -0.13824708482860465, "compression_ratio": 1.6203703703703705, "no_speech_prob": 2.078345642075874e-05}, {"id": 2644, "seek": 660884, "start": 6635.28, "end": 6638.0, "text": " You can say for i and 0.3.", "tokens": [509, 393, 584, 337, 741, 293, 1958, 13, 18, 13], "temperature": 0.0, "avg_logprob": -0.13824708482860465, "compression_ratio": 1.6203703703703705, "no_speech_prob": 2.078345642075874e-05}, {"id": 2645, "seek": 663800, "start": 6638.0, "end": 6639.6, "text": " That's also fine too.", "tokens": [663, 311, 611, 2489, 886, 13], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2646, "seek": 663800, "start": 6639.6, "end": 6642.1, "text": " Just depends on how you wanna write the code.", "tokens": [1449, 5946, 322, 577, 291, 1948, 2464, 264, 3089, 13], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2647, "seek": 663800, "start": 6642.1, "end": 6642.94, "text": " There's an enumerate,", "tokens": [821, 311, 364, 465, 15583, 473, 11], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2648, "seek": 663800, "start": 6642.94, "end": 6644.72, "text": " but rather than enumerate bracket something,", "tokens": [457, 2831, 813, 465, 15583, 473, 16904, 746, 11], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2649, "seek": 663800, "start": 6644.72, "end": 6646.68, "text": " it's dot enumerated, but it works the same way.", "tokens": [309, 311, 5893, 465, 15583, 770, 11, 457, 309, 1985, 264, 912, 636, 13], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2650, "seek": 663800, "start": 6646.68, "end": 6649.16, "text": " When you map to it, you get back an index and an object,", "tokens": [1133, 291, 4471, 281, 309, 11, 291, 483, 646, 364, 8186, 293, 364, 2657, 11], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2651, "seek": 663800, "start": 6649.16, "end": 6651.44, "text": " just like in Python, so very familiar.", "tokens": [445, 411, 294, 15329, 11, 370, 588, 4963, 13], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2652, "seek": 663800, "start": 6651.44, "end": 6655.38, "text": " So in this case, because we've gone dot map", "tokens": [407, 294, 341, 1389, 11, 570, 321, 600, 2780, 5893, 4471], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2653, "seek": 663800, "start": 6655.38, "end": 6659.08, "text": " and then dot reduce with plus on a list,", "tokens": [293, 550, 5893, 5407, 365, 1804, 322, 257, 1329, 11], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2654, "seek": 663800, "start": 6659.08, "end": 6661.24, "text": " this is a list comprehension now, right?", "tokens": [341, 307, 257, 1329, 44991, 586, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2655, "seek": 663800, "start": 6661.24, "end": 6663.34, "text": " Because this is spitting out a bunch of lists", "tokens": [1436, 341, 307, 637, 2414, 484, 257, 3840, 295, 14511], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2656, "seek": 663800, "start": 6663.34, "end": 6665.88, "text": " that we're joining all together.", "tokens": [300, 321, 434, 5549, 439, 1214, 13], "temperature": 0.0, "avg_logprob": -0.11697659792599978, "compression_ratio": 1.6372881355932203, "no_speech_prob": 1.0952451702905819e-05}, {"id": 2657, "seek": 666588, "start": 6665.88, "end": 6669.16, "text": " So no special cases there.", "tokens": [407, 572, 2121, 3331, 456, 13], "temperature": 0.0, "avg_logprob": -0.10535837102819372, "compression_ratio": 1.6302521008403361, "no_speech_prob": 2.1907103473495226e-06}, {"id": 2658, "seek": 666588, "start": 6670.8, "end": 6672.88, "text": " This is one of those cases where you're asking", "tokens": [639, 307, 472, 295, 729, 3331, 689, 291, 434, 3365], "temperature": 0.0, "avg_logprob": -0.10535837102819372, "compression_ratio": 1.6302521008403361, "no_speech_prob": 2.1907103473495226e-06}, {"id": 2659, "seek": 666588, "start": 6672.88, "end": 6674.8, "text": " for the last element of a list.", "tokens": [337, 264, 1036, 4478, 295, 257, 1329, 13], "temperature": 0.0, "avg_logprob": -0.10535837102819372, "compression_ratio": 1.6302521008403361, "no_speech_prob": 2.1907103473495226e-06}, {"id": 2660, "seek": 666588, "start": 6674.8, "end": 6676.76, "text": " List could be empty, so there might be nothing in it.", "tokens": [17668, 727, 312, 6707, 11, 370, 456, 1062, 312, 1825, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.10535837102819372, "compression_ratio": 1.6302521008403361, "no_speech_prob": 2.1907103473495226e-06}, {"id": 2661, "seek": 666588, "start": 6676.76, "end": 6678.72, "text": " So exclamation mark says,", "tokens": [407, 1624, 43233, 1491, 1619, 11], "temperature": 0.0, "avg_logprob": -0.10535837102819372, "compression_ratio": 1.6302521008403361, "no_speech_prob": 2.1907103473495226e-06}, {"id": 2662, "seek": 666588, "start": 6678.72, "end": 6681.0, "text": " just assume that there is something there.", "tokens": [445, 6552, 300, 456, 307, 746, 456, 13], "temperature": 0.0, "avg_logprob": -0.10535837102819372, "compression_ratio": 1.6302521008403361, "no_speech_prob": 2.1907103473495226e-06}, {"id": 2663, "seek": 666588, "start": 6681.0, "end": 6683.92, "text": " And we've written a little compose,", "tokens": [400, 321, 600, 3720, 257, 707, 35925, 11], "temperature": 0.0, "avg_logprob": -0.10535837102819372, "compression_ratio": 1.6302521008403361, "no_speech_prob": 2.1907103473495226e-06}, {"id": 2664, "seek": 666588, "start": 6683.92, "end": 6688.92, "text": " so we can compose this list of layers on our input.", "tokens": [370, 321, 393, 35925, 341, 1329, 295, 7914, 322, 527, 4846, 13], "temperature": 0.0, "avg_logprob": -0.10535837102819372, "compression_ratio": 1.6302521008403361, "no_speech_prob": 2.1907103473495226e-06}, {"id": 2665, "seek": 666588, "start": 6689.76, "end": 6692.52, "text": " So again, we've got kind of similar concepts", "tokens": [407, 797, 11, 321, 600, 658, 733, 295, 2531, 10392], "temperature": 0.0, "avg_logprob": -0.10535837102819372, "compression_ratio": 1.6302521008403361, "no_speech_prob": 2.1907103473495226e-06}, {"id": 2666, "seek": 666588, "start": 6692.52, "end": 6694.62, "text": " expressed in similar ways.", "tokens": [12675, 294, 2531, 2098, 13], "temperature": 0.0, "avg_logprob": -0.10535837102819372, "compression_ratio": 1.6302521008403361, "no_speech_prob": 2.1907103473495226e-06}, {"id": 2667, "seek": 669462, "start": 6694.62, "end": 6696.2, "text": " So we can now put all that together", "tokens": [407, 321, 393, 586, 829, 439, 300, 1214], "temperature": 0.0, "avg_logprob": -0.13012390621637893, "compression_ratio": 1.9170506912442395, "no_speech_prob": 1.112493009713944e-05}, {"id": 2668, "seek": 669462, "start": 6696.2, "end": 6699.48, "text": " and we've got all our different ResNets.", "tokens": [293, 321, 600, 658, 439, 527, 819, 5015, 45, 1385, 13], "temperature": 0.0, "avg_logprob": -0.13012390621637893, "compression_ratio": 1.9170506912442395, "no_speech_prob": 1.112493009713944e-05}, {"id": 2669, "seek": 669462, "start": 6701.88, "end": 6704.44, "text": " So now we create the various functions", "tokens": [407, 586, 321, 1884, 264, 3683, 6828], "temperature": 0.0, "avg_logprob": -0.13012390621637893, "compression_ratio": 1.9170506912442395, "no_speech_prob": 1.112493009713944e-05}, {"id": 2670, "seek": 669462, "start": 6704.44, "end": 6707.04, "text": " that we need to pass into our ladder.", "tokens": [300, 321, 643, 281, 1320, 666, 527, 18325, 13], "temperature": 0.0, "avg_logprob": -0.13012390621637893, "compression_ratio": 1.9170506912442395, "no_speech_prob": 1.112493009713944e-05}, {"id": 2671, "seek": 669462, "start": 6707.04, "end": 6709.64, "text": " So one is a function that's gonna create a model.", "tokens": [407, 472, 307, 257, 2445, 300, 311, 799, 1884, 257, 2316, 13], "temperature": 0.0, "avg_logprob": -0.13012390621637893, "compression_ratio": 1.9170506912442395, "no_speech_prob": 1.112493009713944e-05}, {"id": 2672, "seek": 669462, "start": 6709.64, "end": 6712.88, "text": " So it's gonna be something that creates an X ResNet,", "tokens": [407, 309, 311, 799, 312, 746, 300, 7829, 364, 1783, 5015, 31890, 11], "temperature": 0.0, "avg_logprob": -0.13012390621637893, "compression_ratio": 1.9170506912442395, "no_speech_prob": 1.112493009713944e-05}, {"id": 2673, "seek": 669462, "start": 6712.88, "end": 6715.48, "text": " and that's the function that's gonna create a model.", "tokens": [293, 300, 311, 264, 2445, 300, 311, 799, 1884, 257, 2316, 13], "temperature": 0.0, "avg_logprob": -0.13012390621637893, "compression_ratio": 1.9170506912442395, "no_speech_prob": 1.112493009713944e-05}, {"id": 2674, "seek": 669462, "start": 6716.54, "end": 6719.86, "text": " We're gonna have a function that creates our optimizer,", "tokens": [492, 434, 799, 362, 257, 2445, 300, 7829, 527, 5028, 6545, 11], "temperature": 0.0, "avg_logprob": -0.13012390621637893, "compression_ratio": 1.9170506912442395, "no_speech_prob": 1.112493009713944e-05}, {"id": 2675, "seek": 669462, "start": 6719.86, "end": 6723.32, "text": " which as you'll see, we have a stateful optimizer,", "tokens": [597, 382, 291, 603, 536, 11, 321, 362, 257, 1785, 906, 5028, 6545, 11], "temperature": 0.0, "avg_logprob": -0.13012390621637893, "compression_ratio": 1.9170506912442395, "no_speech_prob": 1.112493009713944e-05}, {"id": 2676, "seek": 672332, "start": 6723.32, "end": 6725.0199999999995, "text": " just like we had in Python.", "tokens": [445, 411, 321, 632, 294, 15329, 13], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2677, "seek": 672332, "start": 6726.5, "end": 6729.24, "text": " We have a learner, just like we had in Python,", "tokens": [492, 362, 257, 33347, 11, 445, 411, 321, 632, 294, 15329, 11], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2678, "seek": 672332, "start": 6729.24, "end": 6732.32, "text": " and it has very, very similar look to it.", "tokens": [293, 309, 575, 588, 11, 588, 2531, 574, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2679, "seek": 672332, "start": 6732.32, "end": 6733.719999999999, "text": " And again, next time we'll talk about", "tokens": [400, 797, 11, 958, 565, 321, 603, 751, 466], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2680, "seek": 672332, "start": 6733.719999999999, "end": 6734.5599999999995, "text": " how all these are built.", "tokens": [577, 439, 613, 366, 3094, 13], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2681, "seek": 672332, "start": 6734.5599999999995, "end": 6736.099999999999, "text": " And so atom optimizer, of course,", "tokens": [400, 370, 12018, 5028, 6545, 11, 295, 1164, 11], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2682, "seek": 672332, "start": 6736.099999999999, "end": 6738.24, "text": " is just a thing that's hackable.", "tokens": [307, 445, 257, 551, 300, 311, 10339, 712, 13], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2683, "seek": 672332, "start": 6738.24, "end": 6739.08, "text": " Yep.", "tokens": [7010, 13], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2684, "seek": 672332, "start": 6739.08, "end": 6739.9, "text": " You can change it.", "tokens": [509, 393, 1319, 309, 13], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2685, "seek": 672332, "start": 6739.9, "end": 6741.12, "text": " Exactly.", "tokens": [7587, 13], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2686, "seek": 672332, "start": 6741.12, "end": 6744.38, "text": " We have recorder callbacks, just like we're familiar with.", "tokens": [492, 362, 37744, 818, 17758, 11, 445, 411, 321, 434, 4963, 365, 13], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2687, "seek": 672332, "start": 6745.5199999999995, "end": 6747.92, "text": " We have one cycle training, just like we're familiar with.", "tokens": [492, 362, 472, 6586, 3097, 11, 445, 411, 321, 434, 4963, 365, 13], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2688, "seek": 672332, "start": 6747.92, "end": 6751.5199999999995, "text": " This add one cycle delegates and make default delegates", "tokens": [639, 909, 472, 6586, 45756, 293, 652, 7576, 45756], "temperature": 0.0, "avg_logprob": -0.14865312929506655, "compression_ratio": 1.812, "no_speech_prob": 1.4509278116747737e-05}, {"id": 2689, "seek": 675152, "start": 6751.52, "end": 6753.6, "text": " is probably gonna go away pretty soon,", "tokens": [307, 1391, 799, 352, 1314, 1238, 2321, 11], "temperature": 0.0, "avg_logprob": -0.133465975522995, "compression_ratio": 1.582375478927203, "no_speech_prob": 5.337812581274193e-06}, {"id": 2690, "seek": 675152, "start": 6753.6, "end": 6756.040000000001, "text": " and we'll have some slightly neater ways to do this.", "tokens": [293, 321, 603, 362, 512, 4748, 408, 771, 2098, 281, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.133465975522995, "compression_ratio": 1.582375478927203, "no_speech_prob": 5.337812581274193e-06}, {"id": 2691, "seek": 675152, "start": 6756.040000000001, "end": 6758.0, "text": " So by the time you see this notebook,", "tokens": [407, 538, 264, 565, 291, 536, 341, 21060, 11], "temperature": 0.0, "avg_logprob": -0.133465975522995, "compression_ratio": 1.582375478927203, "no_speech_prob": 5.337812581274193e-06}, {"id": 2692, "seek": 675152, "start": 6758.0, "end": 6759.400000000001, "text": " this might have changed a bit.", "tokens": [341, 1062, 362, 3105, 257, 857, 13], "temperature": 0.0, "avg_logprob": -0.133465975522995, "compression_ratio": 1.582375478927203, "no_speech_prob": 5.337812581274193e-06}, {"id": 2693, "seek": 675152, "start": 6759.400000000001, "end": 6762.4400000000005, "text": " And then we train it with a ResNet 18 for a few minutes,", "tokens": [400, 550, 321, 3847, 309, 365, 257, 5015, 31890, 2443, 337, 257, 1326, 2077, 11], "temperature": 0.0, "avg_logprob": -0.133465975522995, "compression_ratio": 1.582375478927203, "no_speech_prob": 5.337812581274193e-06}, {"id": 2694, "seek": 675152, "start": 6762.4400000000005, "end": 6764.0, "text": " and we're at.81.", "tokens": [293, 321, 434, 412, 2411, 32875, 13], "temperature": 0.0, "avg_logprob": -0.133465975522995, "compression_ratio": 1.582375478927203, "no_speech_prob": 5.337812581274193e-06}, {"id": 2695, "seek": 675152, "start": 6765.120000000001, "end": 6769.46, "text": " Couple of things to mention as I go through this", "tokens": [38266, 295, 721, 281, 2152, 382, 286, 352, 807, 341], "temperature": 0.0, "avg_logprob": -0.133465975522995, "compression_ratio": 1.582375478927203, "no_speech_prob": 5.337812581274193e-06}, {"id": 2696, "seek": 675152, "start": 6769.46, "end": 6770.6, "text": " end of April.", "tokens": [917, 295, 6929, 13], "temperature": 0.0, "avg_logprob": -0.133465975522995, "compression_ratio": 1.582375478927203, "no_speech_prob": 5.337812581274193e-06}, {"id": 2697, "seek": 675152, "start": 6771.620000000001, "end": 6775.280000000001, "text": " Right now, this uses about twice as much memory", "tokens": [1779, 586, 11, 341, 4960, 466, 6091, 382, 709, 4675], "temperature": 0.0, "avg_logprob": -0.133465975522995, "compression_ratio": 1.582375478927203, "no_speech_prob": 5.337812581274193e-06}, {"id": 2698, "seek": 675152, "start": 6775.280000000001, "end": 6779.0, "text": " as PyTorch, and it's about three to four times slower", "tokens": [382, 9953, 51, 284, 339, 11, 293, 309, 311, 466, 1045, 281, 1451, 1413, 14009], "temperature": 0.0, "avg_logprob": -0.133465975522995, "compression_ratio": 1.582375478927203, "no_speech_prob": 5.337812581274193e-06}, {"id": 2699, "seek": 675152, "start": 6779.0, "end": 6780.3, "text": " than PyTorch.", "tokens": [813, 9953, 51, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.133465975522995, "compression_ratio": 1.582375478927203, "no_speech_prob": 5.337812581274193e-06}, {"id": 2700, "seek": 678030, "start": 6780.3, "end": 6783.0, "text": " No fundamental reason why this need be the case.", "tokens": [883, 8088, 1778, 983, 341, 643, 312, 264, 1389, 13], "temperature": 0.0, "avg_logprob": -0.18880635216122582, "compression_ratio": 1.6716981132075472, "no_speech_prob": 1.147666171164019e-05}, {"id": 2701, "seek": 678030, "start": 6783.0, "end": 6784.8, "text": " We've just started.", "tokens": [492, 600, 445, 1409, 13], "temperature": 0.0, "avg_logprob": -0.18880635216122582, "compression_ratio": 1.6716981132075472, "no_speech_prob": 1.147666171164019e-05}, {"id": 2702, "seek": 678030, "start": 6784.8, "end": 6786.320000000001, "text": " And so the fact that within...", "tokens": [400, 370, 264, 1186, 300, 1951, 485], "temperature": 0.0, "avg_logprob": -0.18880635216122582, "compression_ratio": 1.6716981132075472, "no_speech_prob": 1.147666171164019e-05}, {"id": 2703, "seek": 678030, "start": 6786.320000000001, "end": 6787.4400000000005, "text": " It's not bad for three weeks.", "tokens": [467, 311, 406, 1578, 337, 1045, 3259, 13], "temperature": 0.0, "avg_logprob": -0.18880635216122582, "compression_ratio": 1.6716981132075472, "no_speech_prob": 1.147666171164019e-05}, {"id": 2704, "seek": 678030, "start": 6787.4400000000005, "end": 6788.4400000000005, "text": " Not bad for three weeks.", "tokens": [1726, 1578, 337, 1045, 3259, 13], "temperature": 0.0, "avg_logprob": -0.18880635216122582, "compression_ratio": 1.6716981132075472, "no_speech_prob": 1.147666171164019e-05}, {"id": 2705, "seek": 678030, "start": 6788.4400000000005, "end": 6791.2, "text": " I mean, and all the work that you guys did", "tokens": [286, 914, 11, 293, 439, 264, 589, 300, 291, 1074, 630], "temperature": 0.0, "avg_logprob": -0.18880635216122582, "compression_ratio": 1.6716981132075472, "no_speech_prob": 1.147666171164019e-05}, {"id": 2706, "seek": 678030, "start": 6791.2, "end": 6792.52, "text": " to build the auto diff in the first place.", "tokens": [281, 1322, 264, 8399, 7593, 294, 264, 700, 1081, 13], "temperature": 0.0, "avg_logprob": -0.18880635216122582, "compression_ratio": 1.6716981132075472, "no_speech_prob": 1.147666171164019e-05}, {"id": 2707, "seek": 678030, "start": 6792.52, "end": 6795.16, "text": " And three weeks ago, it really didn't work.", "tokens": [400, 1045, 3259, 2057, 11, 309, 534, 994, 380, 589, 13], "temperature": 0.0, "avg_logprob": -0.18880635216122582, "compression_ratio": 1.6716981132075472, "no_speech_prob": 1.147666171164019e-05}, {"id": 2708, "seek": 678030, "start": 6797.16, "end": 6800.0, "text": " Yeah, so it's pretty cool that we're at a point", "tokens": [865, 11, 370, 309, 311, 1238, 1627, 300, 321, 434, 412, 257, 935], "temperature": 0.0, "avg_logprob": -0.18880635216122582, "compression_ratio": 1.6716981132075472, "no_speech_prob": 1.147666171164019e-05}, {"id": 2709, "seek": 678030, "start": 6800.0, "end": 6803.02, "text": " where we can actually train proper models like this", "tokens": [689, 321, 393, 767, 3847, 2296, 5245, 411, 341], "temperature": 0.0, "avg_logprob": -0.18880635216122582, "compression_ratio": 1.6716981132075472, "no_speech_prob": 1.147666171164019e-05}, {"id": 2710, "seek": 678030, "start": 6803.02, "end": 6808.02, "text": " from scratch in not too slow and not too memory intensive.", "tokens": [490, 8459, 294, 406, 886, 2964, 293, 406, 886, 4675, 18957, 13], "temperature": 0.0, "avg_logprob": -0.18880635216122582, "compression_ratio": 1.6716981132075472, "no_speech_prob": 1.147666171164019e-05}, {"id": 2711, "seek": 680802, "start": 6808.02, "end": 6811.22, "text": " And if you're interested in kind of getting into the weights,", "tokens": [400, 498, 291, 434, 3102, 294, 733, 295, 1242, 666, 264, 17443, 11], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2712, "seek": 680802, "start": 6811.22, "end": 6814.5, "text": " we would certainly love help with fixing the performance", "tokens": [321, 576, 3297, 959, 854, 365, 19442, 264, 3389], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2713, "seek": 680802, "start": 6814.5, "end": 6816.780000000001, "text": " and fixing the amount of memory.", "tokens": [293, 19442, 264, 2372, 295, 4675, 13], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2714, "seek": 680802, "start": 6816.780000000001, "end": 6817.620000000001, "text": " So that's a...", "tokens": [407, 300, 311, 257, 485], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2715, "seek": 680802, "start": 6817.620000000001, "end": 6818.580000000001, "text": " There's a related question.", "tokens": [821, 311, 257, 4077, 1168, 13], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2716, "seek": 680802, "start": 6818.580000000001, "end": 6820.14, "text": " What would be the best way to contribute", "tokens": [708, 576, 312, 264, 1151, 636, 281, 10586], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2717, "seek": 680802, "start": 6820.14, "end": 6822.080000000001, "text": " to the Swift for TensorFlow ecosystem", "tokens": [281, 264, 25539, 337, 37624, 11311], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2718, "seek": 680802, "start": 6822.080000000001, "end": 6824.700000000001, "text": " as someone who's now using Swift for the first time?", "tokens": [382, 1580, 567, 311, 586, 1228, 25539, 337, 264, 700, 565, 30], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2719, "seek": 680802, "start": 6824.700000000001, "end": 6825.9800000000005, "text": " Yeah, that's a great question.", "tokens": [865, 11, 300, 311, 257, 869, 1168, 13], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2720, "seek": 680802, "start": 6825.9800000000005, "end": 6828.660000000001, "text": " So the best place to go is github.com", "tokens": [407, 264, 1151, 1081, 281, 352, 307, 290, 355, 836, 13, 1112], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2721, "seek": 680802, "start": 6828.660000000001, "end": 6830.5, "text": " slash tensorflow slash Swift.", "tokens": [17330, 40863, 10565, 17330, 25539, 13], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2722, "seek": 680802, "start": 6830.5, "end": 6831.72, "text": " That's our landing page.", "tokens": [663, 311, 527, 11202, 3028, 13], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2723, "seek": 680802, "start": 6831.72, "end": 6833.620000000001, "text": " There's also a bunch of tutorials there.", "tokens": [821, 311, 611, 257, 3840, 295, 17616, 456, 13], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2724, "seek": 680802, "start": 6833.620000000001, "end": 6835.620000000001, "text": " It explains how to get and build things.", "tokens": [467, 13948, 577, 281, 483, 293, 1322, 721, 13], "temperature": 0.0, "avg_logprob": -0.12559067713071223, "compression_ratio": 1.705128205128205, "no_speech_prob": 1.0950100659101736e-05}, {"id": 2725, "seek": 683562, "start": 6835.62, "end": 6837.94, "text": " One of the things that we're doing", "tokens": [1485, 295, 264, 721, 300, 321, 434, 884], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2726, "seek": 683562, "start": 6837.94, "end": 6840.74, "text": " is that we're building everything in the open.", "tokens": [307, 300, 321, 434, 2390, 1203, 294, 264, 1269, 13], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2727, "seek": 683562, "start": 6840.74, "end": 6842.42, "text": " And so we do our development in the open.", "tokens": [400, 370, 321, 360, 527, 3250, 294, 264, 1269, 13], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2728, "seek": 683562, "start": 6842.42, "end": 6844.58, "text": " We use GitHub.", "tokens": [492, 764, 23331, 13], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2729, "seek": 683562, "start": 6844.58, "end": 6846.74, "text": " We have our discussions on a mailing list", "tokens": [492, 362, 527, 11088, 322, 257, 41612, 1329], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2730, "seek": 683562, "start": 6846.74, "end": 6848.62, "text": " you'll find linked off our GitHub page.", "tokens": [291, 603, 915, 9408, 766, 527, 23331, 3028, 13], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2731, "seek": 683562, "start": 6848.62, "end": 6850.58, "text": " And so we try to have a really inclusive", "tokens": [400, 370, 321, 853, 281, 362, 257, 534, 13429], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2732, "seek": 683562, "start": 6850.58, "end": 6851.62, "text": " and welcoming community.", "tokens": [293, 17378, 1768, 13], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2733, "seek": 683562, "start": 6851.62, "end": 6855.58, "text": " And there's a ton of resources available and a lot to do.", "tokens": [400, 456, 311, 257, 2952, 295, 3593, 2435, 293, 257, 688, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2734, "seek": 683562, "start": 6855.58, "end": 6857.48, "text": " Yeah, and I would...", "tokens": [865, 11, 293, 286, 576, 485], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2735, "seek": 683562, "start": 6857.48, "end": 6858.38, "text": " That's one way to do it.", "tokens": [663, 311, 472, 636, 281, 360, 309, 13], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2736, "seek": 683562, "start": 6858.38, "end": 6859.98, "text": " I would like to suggest another way,", "tokens": [286, 576, 411, 281, 3402, 1071, 636, 11], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2737, "seek": 683562, "start": 6859.98, "end": 6862.46, "text": " which is to come to the Hair, Brain Forum", "tokens": [597, 307, 281, 808, 281, 264, 27957, 11, 29783, 29704], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2738, "seek": 683562, "start": 6862.46, "end": 6864.0599999999995, "text": " on the Fast AI forums.", "tokens": [322, 264, 15968, 7318, 26998, 13], "temperature": 0.0, "avg_logprob": -0.17819125122494167, "compression_ratio": 1.696551724137931, "no_speech_prob": 2.3915879864944145e-05}, {"id": 2739, "seek": 686406, "start": 6864.06, "end": 6865.820000000001, "text": " Because I think for a lot of people,", "tokens": [1436, 286, 519, 337, 257, 688, 295, 561, 11], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2740, "seek": 686406, "start": 6865.820000000001, "end": 6867.9800000000005, "text": " the right way, the best way to contribute", "tokens": [264, 558, 636, 11, 264, 1151, 636, 281, 10586], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2741, "seek": 686406, "start": 6867.9800000000005, "end": 6869.34, "text": " the way that you'll get the most out of,", "tokens": [264, 636, 300, 291, 603, 483, 264, 881, 484, 295, 11], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2742, "seek": 686406, "start": 6869.34, "end": 6871.38, "text": " that it'll be most relevant to you right now,", "tokens": [300, 309, 603, 312, 881, 7340, 281, 291, 558, 586, 11], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2743, "seek": 686406, "start": 6871.38, "end": 6874.780000000001, "text": " is to pick something that you've already been using", "tokens": [307, 281, 1888, 746, 300, 291, 600, 1217, 668, 1228], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2744, "seek": 686406, "start": 6874.780000000001, "end": 6877.14, "text": " in Python and doesn't exist yet", "tokens": [294, 15329, 293, 1177, 380, 2514, 1939], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2745, "seek": 686406, "start": 6877.14, "end": 6879.9800000000005, "text": " and create the Swift version.", "tokens": [293, 1884, 264, 25539, 3037, 13], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2746, "seek": 686406, "start": 6879.9800000000005, "end": 6882.26, "text": " And you may think you have no idea how to do that.", "tokens": [400, 291, 815, 519, 291, 362, 572, 1558, 577, 281, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2747, "seek": 686406, "start": 6882.26, "end": 6883.54, "text": " And perhaps you don't,", "tokens": [400, 4317, 291, 500, 380, 11], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2748, "seek": 686406, "start": 6883.54, "end": 6887.820000000001, "text": " but like create a really crappy slim down Swift version", "tokens": [457, 411, 1884, 257, 534, 36531, 25357, 760, 25539, 3037], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2749, "seek": 686406, "start": 6887.820000000001, "end": 6888.700000000001, "text": " and build from there.", "tokens": [293, 1322, 490, 456, 13], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2750, "seek": 686406, "start": 6888.700000000001, "end": 6891.660000000001, "text": " That's the only way any of this stuff gets done.", "tokens": [663, 311, 264, 787, 636, 604, 295, 341, 1507, 2170, 1096, 13], "temperature": 0.0, "avg_logprob": -0.11590581507115931, "compression_ratio": 1.7303754266211604, "no_speech_prob": 3.425929389777593e-05}, {"id": 2751, "seek": 689166, "start": 6891.66, "end": 6896.58, "text": " Ask for help on the forum, offer help to others.", "tokens": [12320, 337, 854, 322, 264, 17542, 11, 2626, 854, 281, 2357, 13], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2752, "seek": 689166, "start": 6896.58, "end": 6899.58, "text": " And so like pick small bits or find some piece", "tokens": [400, 370, 411, 1888, 1359, 9239, 420, 915, 512, 2522], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2753, "seek": 689166, "start": 6899.58, "end": 6902.24, "text": " that hasn't been documented yet.", "tokens": [300, 6132, 380, 668, 23007, 1939, 13], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2754, "seek": 689166, "start": 6902.24, "end": 6904.62, "text": " We haven't really figured out yet where...", "tokens": [492, 2378, 380, 534, 8932, 484, 1939, 689, 485], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2755, "seek": 689166, "start": 6904.62, "end": 6905.46, "text": " To put things.", "tokens": [1407, 829, 721, 13], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2756, "seek": 689166, "start": 6905.46, "end": 6906.86, "text": " Yeah, where Fast AI lives", "tokens": [865, 11, 689, 15968, 7318, 2909], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2757, "seek": 689166, "start": 6906.86, "end": 6908.3, "text": " and where Swift for TensorFlow lives", "tokens": [293, 689, 25539, 337, 37624, 2909], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2758, "seek": 689166, "start": 6908.3, "end": 6910.0199999999995, "text": " and where different repos will be.", "tokens": [293, 689, 819, 1085, 329, 486, 312, 13], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2759, "seek": 689166, "start": 6910.0199999999995, "end": 6914.38, "text": " But in the end, between the Fast AI", "tokens": [583, 294, 264, 917, 11, 1296, 264, 15968, 7318], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2760, "seek": 689166, "start": 6914.38, "end": 6916.639999999999, "text": " and Swift for TensorFlow repos,", "tokens": [293, 25539, 337, 37624, 1085, 329, 11], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2761, "seek": 689166, "start": 6916.639999999999, "end": 6918.16, "text": " there'll be a kind of an ecosystem", "tokens": [456, 603, 312, 257, 733, 295, 364, 11311], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2762, "seek": 689166, "start": 6918.16, "end": 6920.82, "text": " that covers the same kind of ground", "tokens": [300, 10538, 264, 912, 733, 295, 2727], "temperature": 0.0, "avg_logprob": -0.11380902458639706, "compression_ratio": 1.7125506072874495, "no_speech_prob": 2.9298782465048134e-05}, {"id": 2763, "seek": 692082, "start": 6920.82, "end": 6923.34, "text": " that PyTorch plus Fast AI covers", "tokens": [300, 9953, 51, 284, 339, 1804, 15968, 7318, 10538], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2764, "seek": 692082, "start": 6923.34, "end": 6925.86, "text": " and has just as much room for you to,", "tokens": [293, 575, 445, 382, 709, 1808, 337, 291, 281, 11], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2765, "seek": 692082, "start": 6925.86, "end": 6926.98, "text": " well, much more room actually", "tokens": [731, 11, 709, 544, 1808, 767], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2766, "seek": 692082, "start": 6926.98, "end": 6928.259999999999, "text": " for you to build things on top of that", "tokens": [337, 291, 281, 1322, 721, 322, 1192, 295, 300], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2767, "seek": 692082, "start": 6928.259999999999, "end": 6931.179999999999, "text": " because you've got like entirety of scikit-learn", "tokens": [570, 291, 600, 658, 411, 31557, 295, 2180, 22681, 12, 306, 1083], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2768, "seek": 692082, "start": 6931.179999999999, "end": 6936.219999999999, "text": " and Matplotlib and pandas and all this stuff to...", "tokens": [293, 6789, 564, 310, 38270, 293, 4565, 296, 293, 439, 341, 1507, 281, 485], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2769, "seek": 692082, "start": 6936.219999999999, "end": 6938.98, "text": " And another thing is if you go on the Fast AI GitHub,", "tokens": [400, 1071, 551, 307, 498, 291, 352, 322, 264, 15968, 7318, 23331, 11], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2770, "seek": 692082, "start": 6938.98, "end": 6940.88, "text": " you'll see these workbooks.", "tokens": [291, 603, 536, 613, 589, 15170, 13], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2771, "seek": 692082, "start": 6940.88, "end": 6943.66, "text": " And we skipped from one to 11.", "tokens": [400, 321, 30193, 490, 472, 281, 2975, 13], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2772, "seek": 692082, "start": 6944.58, "end": 6945.94, "text": " And so next time we'll go back through", "tokens": [400, 370, 958, 565, 321, 603, 352, 646, 807], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2773, "seek": 692082, "start": 6945.94, "end": 6947.82, "text": " and talk about two and three and four and five.", "tokens": [293, 751, 466, 732, 293, 1045, 293, 1451, 293, 1732, 13], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2774, "seek": 692082, "start": 6947.82, "end": 6950.46, "text": " But these are all there for you now.", "tokens": [583, 613, 366, 439, 456, 337, 291, 586, 13], "temperature": 0.0, "avg_logprob": -0.1651999867045796, "compression_ratio": 1.6470588235294117, "no_speech_prob": 9.51472520682728e-06}, {"id": 2775, "seek": 695046, "start": 6950.46, "end": 6952.58, "text": " And so if you'd like to look, you can go do that.", "tokens": [400, 370, 498, 291, 1116, 411, 281, 574, 11, 291, 393, 352, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2776, "seek": 695046, "start": 6952.58, "end": 6954.46, "text": " And they'll get a little bit better by next week, I bet.", "tokens": [400, 436, 603, 483, 257, 707, 857, 1101, 538, 958, 1243, 11, 286, 778, 13], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2777, "seek": 695046, "start": 6954.46, "end": 6955.94, "text": " Yeah, and one thing to mention is", "tokens": [865, 11, 293, 472, 551, 281, 2152, 307], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2778, "seek": 695046, "start": 6955.94, "end": 6959.18, "text": " where else with the normal Fast AI notebooks,", "tokens": [689, 1646, 365, 264, 2710, 15968, 7318, 43782, 11], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2779, "seek": 695046, "start": 6959.18, "end": 6962.14, "text": " we nearly freeze them.", "tokens": [321, 6217, 15959, 552, 13], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2780, "seek": 695046, "start": 6962.14, "end": 6965.02, "text": " Once we do the course, we just fix errors", "tokens": [3443, 321, 360, 264, 1164, 11, 321, 445, 3191, 13603], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2781, "seek": 695046, "start": 6965.02, "end": 6966.46, "text": " and that's about it.", "tokens": [293, 300, 311, 466, 309, 13], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2782, "seek": 695046, "start": 6966.46, "end": 6968.34, "text": " These notebooks is gonna be very different.", "tokens": [1981, 43782, 307, 799, 312, 588, 819, 13], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2783, "seek": 695046, "start": 6968.34, "end": 6970.1, "text": " We're gonna keep them very, very up to date.", "tokens": [492, 434, 799, 1066, 552, 588, 11, 588, 493, 281, 4002, 13], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2784, "seek": 695046, "start": 6970.1, "end": 6972.3, "text": " So by the time you watch this,", "tokens": [407, 538, 264, 565, 291, 1159, 341, 11], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2785, "seek": 695046, "start": 6972.3, "end": 6973.78, "text": " they may look very different", "tokens": [436, 815, 574, 588, 819], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2786, "seek": 695046, "start": 6973.78, "end": 6975.66, "text": " because we wanna always have for you,", "tokens": [570, 321, 1948, 1009, 362, 337, 291, 11], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2787, "seek": 695046, "start": 6975.66, "end": 6978.54, "text": " showing you like, this is how we suggest you write", "tokens": [4099, 291, 411, 11, 341, 307, 577, 321, 3402, 291, 2464], "temperature": 0.0, "avg_logprob": -0.1295822504404429, "compression_ratio": 1.6612377850162867, "no_speech_prob": 3.0236513339332305e-05}, {"id": 2788, "seek": 697854, "start": 6978.54, "end": 6981.3, "text": " Swift to TensorFlow code now.", "tokens": [25539, 281, 37624, 3089, 586, 13], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2789, "seek": 697854, "start": 6981.3, "end": 6982.94, "text": " And even over the last week, we've been,", "tokens": [400, 754, 670, 264, 1036, 1243, 11, 321, 600, 668, 11], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2790, "seek": 697854, "start": 6982.94, "end": 6984.74, "text": " if you look at the GitHub history,", "tokens": [498, 291, 574, 412, 264, 23331, 2503, 11], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2791, "seek": 697854, "start": 6984.74, "end": 6986.66, "text": " you'll see we've been discovering new things", "tokens": [291, 603, 536, 321, 600, 668, 24773, 777, 721], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2792, "seek": 697854, "start": 6986.66, "end": 6988.66, "text": " like differentiable arrays and suchable layers.", "tokens": [411, 819, 9364, 41011, 293, 1270, 712, 7914, 13], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2793, "seek": 697854, "start": 6988.66, "end": 6991.78, "text": " And it allows us to delete lots of previous workarounds", "tokens": [400, 309, 4045, 505, 281, 12097, 3195, 295, 3894, 589, 289, 4432], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2794, "seek": 697854, "start": 6991.78, "end": 6993.62, "text": " and the next weeks and the next couple of months", "tokens": [293, 264, 958, 3259, 293, 264, 958, 1916, 295, 2493], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2795, "seek": 697854, "start": 6993.62, "end": 6994.46, "text": " will be similar.", "tokens": [486, 312, 2531, 13], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2796, "seek": 697854, "start": 6995.34, "end": 6996.18, "text": " So yeah.", "tokens": [407, 1338, 13], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2797, "seek": 697854, "start": 6996.18, "end": 6997.78, "text": " Do you want more questions? Sure.", "tokens": [1144, 291, 528, 544, 1651, 30, 4894, 13], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2798, "seek": 697854, "start": 6997.78, "end": 7000.26, "text": " All right, is Swift thread safe?", "tokens": [1057, 558, 11, 307, 25539, 7207, 3273, 30], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2799, "seek": 697854, "start": 7000.26, "end": 7001.9, "text": " Yes, Swift is both thread safe", "tokens": [1079, 11, 25539, 307, 1293, 7207, 3273], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2800, "seek": 697854, "start": 7001.9, "end": 7003.98, "text": " and has a really great threading abstraction", "tokens": [293, 575, 257, 534, 869, 7207, 278, 37765], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2801, "seek": 697854, "start": 7003.98, "end": 7005.22, "text": " called dispatch.", "tokens": [1219, 36729, 13], "temperature": 0.0, "avg_logprob": -0.13086452203638413, "compression_ratio": 1.652027027027027, "no_speech_prob": 1.4279316019383259e-05}, {"id": 2802, "seek": 700522, "start": 7005.22, "end": 7008.66, "text": " And so you can fire up lots of concurrent work items,", "tokens": [400, 370, 291, 393, 2610, 493, 3195, 295, 37702, 589, 4754, 11], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2803, "seek": 700522, "start": 7008.66, "end": 7011.820000000001, "text": " set up work queues,", "tokens": [992, 493, 589, 631, 1247, 11], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2804, "seek": 700522, "start": 7011.820000000001, "end": 7014.7, "text": " has a really vibrant and good API for doing that", "tokens": [575, 257, 534, 21571, 293, 665, 9362, 337, 884, 300], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2805, "seek": 700522, "start": 7014.7, "end": 7017.38, "text": " with quality of service and like all these advanced things", "tokens": [365, 3125, 295, 2643, 293, 411, 439, 613, 7339, 721], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2806, "seek": 700522, "start": 7017.38, "end": 7018.58, "text": " that are available there.", "tokens": [300, 366, 2435, 456, 13], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2807, "seek": 700522, "start": 7018.58, "end": 7023.02, "text": " Yeah, I've never used such a nice kind of threading.", "tokens": [865, 11, 286, 600, 1128, 1143, 1270, 257, 1481, 733, 295, 7207, 278, 13], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2808, "seek": 700522, "start": 7023.02, "end": 7024.26, "text": " It's like, it's a framework.", "tokens": [467, 311, 411, 11, 309, 311, 257, 8388, 13], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2809, "seek": 700522, "start": 7024.26, "end": 7025.860000000001, "text": " It feels more like more than just a language.", "tokens": [467, 3417, 544, 411, 544, 813, 445, 257, 2856, 13], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2810, "seek": 700522, "start": 7025.860000000001, "end": 7027.1, "text": " So like on the Apple side,", "tokens": [407, 411, 322, 264, 6373, 1252, 11], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2811, "seek": 700522, "start": 7027.1, "end": 7028.740000000001, "text": " they call it Grand Central Dispatch,", "tokens": [436, 818, 309, 6757, 9701, 4208, 79, 852, 11], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2812, "seek": 700522, "start": 7028.740000000001, "end": 7031.06, "text": " but they've put the whole thing over to Linux", "tokens": [457, 436, 600, 829, 264, 1379, 551, 670, 281, 18734], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2813, "seek": 700522, "start": 7031.06, "end": 7034.38, "text": " and you have this whole kind of threading library framework,", "tokens": [293, 291, 362, 341, 1379, 733, 295, 7207, 278, 6405, 8388, 11], "temperature": 0.0, "avg_logprob": -0.11961138589041574, "compression_ratio": 1.65359477124183, "no_speech_prob": 6.4381788433820475e-06}, {"id": 2814, "seek": 703438, "start": 7034.38, "end": 7037.78, "text": " which is super easy to use and extensible.", "tokens": [597, 307, 1687, 1858, 281, 764, 293, 1279, 30633, 13], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2815, "seek": 703438, "start": 7037.78, "end": 7040.02, "text": " This is one of the reasons the Swift on server community", "tokens": [639, 307, 472, 295, 264, 4112, 264, 25539, 322, 7154, 1768], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2816, "seek": 703438, "start": 7040.02, "end": 7042.38, "text": " really likes Swift is that it's efficient, yes,", "tokens": [534, 5902, 25539, 307, 300, 309, 311, 7148, 11, 2086, 11], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2817, "seek": 703438, "start": 7042.38, "end": 7044.66, "text": " but it also supports threading and other things really well", "tokens": [457, 309, 611, 9346, 7207, 278, 293, 661, 721, 534, 731], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2818, "seek": 703438, "start": 7044.66, "end": 7046.06, "text": " and very naturally.", "tokens": [293, 588, 8195, 13], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2819, "seek": 703438, "start": 7046.06, "end": 7049.66, "text": " Oh, are there any sidekit learn for Swift projects", "tokens": [876, 11, 366, 456, 604, 1252, 22681, 1466, 337, 25539, 4455], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2820, "seek": 703438, "start": 7049.66, "end": 7050.900000000001, "text": " in the works?", "tokens": [294, 264, 1985, 30], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2821, "seek": 703438, "start": 7050.900000000001, "end": 7052.42, "text": " I have no idea.", "tokens": [286, 362, 572, 1558, 13], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2822, "seek": 703438, "start": 7052.42, "end": 7053.42, "text": " There should be.", "tokens": [821, 820, 312, 13], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2823, "seek": 703438, "start": 7053.42, "end": 7055.3, "text": " Yeah, I haven't seen anything much.", "tokens": [865, 11, 286, 2378, 380, 1612, 1340, 709, 13], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2824, "seek": 703438, "start": 7056.3, "end": 7058.46, "text": " I have a random forest implementation", "tokens": [286, 362, 257, 4974, 6719, 11420], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2825, "seek": 703438, "start": 7058.46, "end": 7060.46, "text": " I would love to convert over to Swift,", "tokens": [286, 576, 959, 281, 7620, 670, 281, 25539, 11], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2826, "seek": 703438, "start": 7060.46, "end": 7062.18, "text": " which is a pretty nice one,", "tokens": [597, 307, 257, 1238, 1481, 472, 11], "temperature": 0.0, "avg_logprob": -0.1451735569880559, "compression_ratio": 1.6350877192982456, "no_speech_prob": 1.0277522051183041e-05}, {"id": 2827, "seek": 706218, "start": 7062.18, "end": 7064.5, "text": " but it would definitely be nice if you could build", "tokens": [457, 309, 576, 2138, 312, 1481, 498, 291, 727, 1322], "temperature": 0.0, "avg_logprob": -0.14918645858764648, "compression_ratio": 1.5685483870967742, "no_speech_prob": 1.4278770322562195e-05}, {"id": 2828, "seek": 706218, "start": 7064.5, "end": 7068.18, "text": " a gradient boosting machine or even simple things", "tokens": [257, 16235, 43117, 3479, 420, 754, 2199, 721], "temperature": 0.0, "avg_logprob": -0.14918645858764648, "compression_ratio": 1.5685483870967742, "no_speech_prob": 1.4278770322562195e-05}, {"id": 2829, "seek": 706218, "start": 7068.18, "end": 7071.46, "text": " like K-nearest neighbors and stuff like that.", "tokens": [411, 591, 12, 716, 17363, 12512, 293, 1507, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.14918645858764648, "compression_ratio": 1.5685483870967742, "no_speech_prob": 1.4278770322562195e-05}, {"id": 2830, "seek": 706218, "start": 7071.46, "end": 7076.46, "text": " I think though that the opportunity here", "tokens": [286, 519, 1673, 300, 264, 2650, 510], "temperature": 0.0, "avg_logprob": -0.14918645858764648, "compression_ratio": 1.5685483870967742, "no_speech_prob": 1.4278770322562195e-05}, {"id": 2831, "seek": 706218, "start": 7077.22, "end": 7079.780000000001, "text": " is to go beyond just reinventing what's already there.", "tokens": [307, 281, 352, 4399, 445, 33477, 278, 437, 311, 1217, 456, 13], "temperature": 0.0, "avg_logprob": -0.14918645858764648, "compression_ratio": 1.5685483870967742, "no_speech_prob": 1.4278770322562195e-05}, {"id": 2832, "seek": 706218, "start": 7079.780000000001, "end": 7082.34, "text": " Like sidekit learn is cool that it exists,", "tokens": [1743, 1252, 22681, 1466, 307, 1627, 300, 309, 8198, 11], "temperature": 0.0, "avg_logprob": -0.14918645858764648, "compression_ratio": 1.5685483870967742, "no_speech_prob": 1.4278770322562195e-05}, {"id": 2833, "seek": 706218, "start": 7082.34, "end": 7086.58, "text": " but it could be a lot better, particularly in Swift.", "tokens": [457, 309, 727, 312, 257, 688, 1101, 11, 4098, 294, 25539, 13], "temperature": 0.0, "avg_logprob": -0.14918645858764648, "compression_ratio": 1.5685483870967742, "no_speech_prob": 1.4278770322562195e-05}, {"id": 2834, "seek": 706218, "start": 7086.58, "end": 7091.02, "text": " So if you do decide I wanna build bits of SK learn", "tokens": [407, 498, 291, 360, 4536, 286, 1948, 1322, 9239, 295, 21483, 1466], "temperature": 0.0, "avg_logprob": -0.14918645858764648, "compression_ratio": 1.5685483870967742, "no_speech_prob": 1.4278770322562195e-05}, {"id": 2835, "seek": 709102, "start": 7091.02, "end": 7093.780000000001, "text": " or bits of pandas, jump on the forum", "tokens": [420, 9239, 295, 4565, 296, 11, 3012, 322, 264, 17542], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2836, "seek": 709102, "start": 7093.780000000001, "end": 7097.1, "text": " and talk to us about it and let's try and build something", "tokens": [293, 751, 281, 505, 466, 309, 293, 718, 311, 853, 293, 1322, 746], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2837, "seek": 709102, "start": 7097.1, "end": 7100.18, "text": " that's vastly better than what's been before,", "tokens": [300, 311, 41426, 1101, 813, 437, 311, 668, 949, 11], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2838, "seek": 709102, "start": 7100.18, "end": 7101.46, "text": " not just a copy of it.", "tokens": [406, 445, 257, 5055, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2839, "seek": 709102, "start": 7101.46, "end": 7103.46, "text": " I wouldn't suggest that being a starter project.", "tokens": [286, 2759, 380, 3402, 300, 885, 257, 22465, 1716, 13], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2840, "seek": 709102, "start": 7103.46, "end": 7104.660000000001, "text": " Like if you want a starter project,", "tokens": [1743, 498, 291, 528, 257, 22465, 1716, 11], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2841, "seek": 709102, "start": 7104.660000000001, "end": 7109.46, "text": " pick one of the lessons in the one through seven class", "tokens": [1888, 472, 295, 264, 8820, 294, 264, 472, 807, 3407, 1508], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2842, "seek": 709102, "start": 7109.46, "end": 7111.26, "text": " and implement some of those algorithms.", "tokens": [293, 4445, 512, 295, 729, 14642, 13], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2843, "seek": 709102, "start": 7111.26, "end": 7112.46, "text": " I think in terms of this framework,", "tokens": [286, 519, 294, 2115, 295, 341, 8388, 11], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2844, "seek": 709102, "start": 7112.46, "end": 7114.02, "text": " I think that'd be a really great place to start,", "tokens": [286, 519, 300, 1116, 312, 257, 534, 869, 1081, 281, 722, 11], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2845, "seek": 709102, "start": 7114.02, "end": 7115.860000000001, "text": " but as you get more experience", "tokens": [457, 382, 291, 483, 544, 1752], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2846, "seek": 709102, "start": 7115.860000000001, "end": 7117.620000000001, "text": " and you get more familiar with Swift,", "tokens": [293, 291, 483, 544, 4963, 365, 25539, 11], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2847, "seek": 709102, "start": 7117.620000000001, "end": 7119.9800000000005, "text": " then tackling something like building a big library", "tokens": [550, 34415, 746, 411, 2390, 257, 955, 6405], "temperature": 0.0, "avg_logprob": -0.09928079500590285, "compression_ratio": 1.7539936102236422, "no_speech_prob": 2.045940163952764e-05}, {"id": 2848, "seek": 711998, "start": 7119.98, "end": 7121.0199999999995, "text": " can be a lot of fun.", "tokens": [393, 312, 257, 688, 295, 1019, 13], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2849, "seek": 711998, "start": 7124.179999999999, "end": 7126.379999999999, "text": " Is there any plan to build tensor shapes", "tokens": [1119, 456, 604, 1393, 281, 1322, 40863, 10854], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2850, "seek": 711998, "start": 7126.379999999999, "end": 7128.78, "text": " into the Swift type system?", "tokens": [666, 264, 25539, 2010, 1185, 30], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2851, "seek": 711998, "start": 7128.78, "end": 7131.62, "text": " So we have a tensor shape type,", "tokens": [407, 321, 362, 257, 40863, 3909, 2010, 11], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2852, "seek": 711998, "start": 7131.62, "end": 7133.259999999999, "text": " it's a struct literally right now", "tokens": [309, 311, 257, 6594, 3736, 558, 586], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2853, "seek": 711998, "start": 7133.259999999999, "end": 7135.299999999999, "text": " and that's when you pass in shapes", "tokens": [293, 300, 311, 562, 291, 1320, 294, 10854], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2854, "seek": 711998, "start": 7135.299999999999, "end": 7137.379999999999, "text": " to create a tensor of zeros, you get that.", "tokens": [281, 1884, 257, 40863, 295, 35193, 11, 291, 483, 300, 13], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2855, "seek": 711998, "start": 7137.379999999999, "end": 7139.82, "text": " I think what they're probably asking is", "tokens": [286, 519, 437, 436, 434, 1391, 3365, 307], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2856, "seek": 711998, "start": 7139.82, "end": 7142.379999999999, "text": " will we get dimensions in the types", "tokens": [486, 321, 483, 12819, 294, 264, 3467], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2857, "seek": 711998, "start": 7142.379999999999, "end": 7144.9, "text": " or will we get names in the dimensions?", "tokens": [420, 486, 321, 483, 5288, 294, 264, 12819, 30], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2858, "seek": 711998, "start": 7144.9, "end": 7146.78, "text": " So this is something we're super interested in.", "tokens": [407, 341, 307, 746, 321, 434, 1687, 3102, 294, 13], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2859, "seek": 711998, "start": 7146.78, "end": 7148.54, "text": " We think there's a lot of opportunities there", "tokens": [492, 519, 456, 311, 257, 688, 295, 4786, 456], "temperature": 0.0, "avg_logprob": -0.08761642825218939, "compression_ratio": 1.7372549019607844, "no_speech_prob": 5.593313744611805e-06}, {"id": 2860, "seek": 714854, "start": 7148.54, "end": 7152.18, "text": " both in terms of like shape checking, for example.", "tokens": [1293, 294, 2115, 295, 411, 3909, 8568, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2861, "seek": 714854, "start": 7152.18, "end": 7153.58, "text": " The whole stack we're building", "tokens": [440, 1379, 8630, 321, 434, 2390], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2862, "seek": 714854, "start": 7153.58, "end": 7154.86, "text": " with the compiler integration", "tokens": [365, 264, 31958, 10980], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2863, "seek": 714854, "start": 7154.86, "end": 7157.0199999999995, "text": " and the good locations and stuff like that,", "tokens": [293, 264, 665, 9253, 293, 1507, 411, 300, 11], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2864, "seek": 714854, "start": 7157.0199999999995, "end": 7158.1, "text": " we think there's a ton of potential.", "tokens": [321, 519, 456, 311, 257, 2952, 295, 3995, 13], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2865, "seek": 714854, "start": 7158.1, "end": 7159.74, "text": " We haven't tapped into that yet.", "tokens": [492, 2378, 380, 38693, 666, 300, 1939, 13], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2866, "seek": 714854, "start": 7160.58, "end": 7162.42, "text": " The names on dimensions is tricky", "tokens": [440, 5288, 322, 12819, 307, 12414], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2867, "seek": 714854, "start": 7162.42, "end": 7163.66, "text": " and there's lots of space", "tokens": [293, 456, 311, 3195, 295, 1901], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2868, "seek": 714854, "start": 7163.66, "end": 7165.06, "text": " and we haven't exactly figured out", "tokens": [293, 321, 2378, 380, 2293, 8932, 484], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2869, "seek": 714854, "start": 7165.06, "end": 7166.34, "text": " how the best way to do that is", "tokens": [577, 264, 1151, 636, 281, 360, 300, 307], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2870, "seek": 714854, "start": 7166.34, "end": 7167.18, "text": " because there's trade-offs,", "tokens": [570, 456, 311, 4923, 12, 19231, 11], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2871, "seek": 714854, "start": 7167.18, "end": 7169.42, "text": " but that's exactly all the kind of like", "tokens": [457, 300, 311, 2293, 439, 264, 733, 295, 411], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2872, "seek": 714854, "start": 7169.42, "end": 7171.54, "text": " second step things we wanna do.", "tokens": [1150, 1823, 721, 321, 1948, 360, 13], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2873, "seek": 714854, "start": 7171.54, "end": 7173.34, "text": " Probably starting this fall-ish", "tokens": [9210, 2891, 341, 2100, 12, 742], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2874, "seek": 714854, "start": 7173.34, "end": 7175.62, "text": " when the basic autodiff, basic performance,", "tokens": [562, 264, 3875, 1476, 378, 3661, 11, 3875, 3389, 11], "temperature": 0.0, "avg_logprob": -0.12929850611193427, "compression_ratio": 1.7278688524590164, "no_speech_prob": 8.138780685840175e-06}, {"id": 2875, "seek": 717562, "start": 7175.62, "end": 7178.82, "text": " like scale out and a bunch of other things", "tokens": [411, 4373, 484, 293, 257, 3840, 295, 661, 721], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2876, "seek": 717562, "start": 7178.82, "end": 7182.5, "text": " are all settled and we feel good about all those basics.", "tokens": [366, 439, 14819, 293, 321, 841, 665, 466, 439, 729, 14688, 13], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2877, "seek": 717562, "start": 7182.5, "end": 7183.62, "text": " And we're trying to stay focused on", "tokens": [400, 321, 434, 1382, 281, 1754, 5178, 322], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2878, "seek": 717562, "start": 7183.62, "end": 7185.0599999999995, "text": " making sure that things are really good", "tokens": [1455, 988, 300, 721, 366, 534, 665], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2879, "seek": 717562, "start": 7185.0599999999995, "end": 7188.66, "text": " and build the basics and get them right", "tokens": [293, 1322, 264, 14688, 293, 483, 552, 558], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2880, "seek": 717562, "start": 7188.66, "end": 7189.58, "text": " and then move out.", "tokens": [293, 550, 1286, 484, 13], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2881, "seek": 717562, "start": 7191.14, "end": 7192.34, "text": " Okay, any more questions?", "tokens": [1033, 11, 604, 544, 1651, 30], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2882, "seek": 717562, "start": 7193.58, "end": 7195.3, "text": " There are a lot of people going to do this.", "tokens": [821, 366, 257, 688, 295, 561, 516, 281, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2883, "seek": 717562, "start": 7195.3, "end": 7196.58, "text": " No, I mean that's fine.", "tokens": [883, 11, 286, 914, 300, 311, 2489, 13], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2884, "seek": 717562, "start": 7196.58, "end": 7198.98, "text": " We're at a good stuff point.", "tokens": [492, 434, 412, 257, 665, 1507, 935, 13], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2885, "seek": 717562, "start": 7198.98, "end": 7202.82, "text": " How is ampersand referencing different from struct?", "tokens": [1012, 307, 18648, 433, 474, 40582, 819, 490, 6594, 30], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2886, "seek": 717562, "start": 7202.82, "end": 7205.42, "text": " Oh, we'll talk more about that next time.", "tokens": [876, 11, 321, 603, 751, 544, 466, 300, 958, 565, 13], "temperature": 0.0, "avg_logprob": -0.243369834367619, "compression_ratio": 1.6580882352941178, "no_speech_prob": 4.356459612608887e-06}, {"id": 2887, "seek": 720542, "start": 7205.42, "end": 7209.74, "text": " So Swift has a, this comes back to safety in the language.", "tokens": [407, 25539, 575, 257, 11, 341, 1487, 646, 281, 4514, 294, 264, 2856, 13], "temperature": 0.0, "avg_logprob": -0.13047303976836028, "compression_ratio": 1.5720164609053497, "no_speech_prob": 1.816001031329506e-06}, {"id": 2888, "seek": 720542, "start": 7209.74, "end": 7212.82, "text": " Swift has a completely different approach", "tokens": [25539, 575, 257, 2584, 819, 3109], "temperature": 0.0, "avg_logprob": -0.13047303976836028, "compression_ratio": 1.5720164609053497, "no_speech_prob": 1.816001031329506e-06}, {"id": 2889, "seek": 720542, "start": 7212.82, "end": 7217.26, "text": " to references like classes and structs and values.", "tokens": [281, 15400, 411, 5359, 293, 6594, 82, 293, 4190, 13], "temperature": 0.0, "avg_logprob": -0.13047303976836028, "compression_ratio": 1.5720164609053497, "no_speech_prob": 1.816001031329506e-06}, {"id": 2890, "seek": 720542, "start": 7217.26, "end": 7220.14, "text": " And so I'm gonna save that mind blowing piece", "tokens": [400, 370, 286, 478, 799, 3155, 300, 1575, 15068, 2522], "temperature": 0.0, "avg_logprob": -0.13047303976836028, "compression_ratio": 1.5720164609053497, "no_speech_prob": 1.816001031329506e-06}, {"id": 2891, "seek": 720542, "start": 7220.14, "end": 7221.06, "text": " for next time.", "tokens": [337, 958, 565, 13], "temperature": 0.0, "avg_logprob": -0.13047303976836028, "compression_ratio": 1.5720164609053497, "no_speech_prob": 1.816001031329506e-06}, {"id": 2892, "seek": 720542, "start": 7221.9, "end": 7222.9, "text": " It's really cool.", "tokens": [467, 311, 534, 1627, 13], "temperature": 0.0, "avg_logprob": -0.13047303976836028, "compression_ratio": 1.5720164609053497, "no_speech_prob": 1.816001031329506e-06}, {"id": 2893, "seek": 720542, "start": 7222.9, "end": 7223.74, "text": " It is.", "tokens": [467, 307, 13], "temperature": 0.0, "avg_logprob": -0.13047303976836028, "compression_ratio": 1.5720164609053497, "no_speech_prob": 1.816001031329506e-06}, {"id": 2894, "seek": 720542, "start": 7223.74, "end": 7225.18, "text": " It underlies a ton of,", "tokens": [467, 833, 24119, 257, 2952, 295, 11], "temperature": 0.0, "avg_logprob": -0.13047303976836028, "compression_ratio": 1.5720164609053497, "no_speech_prob": 1.816001031329506e-06}, {"id": 2895, "seek": 720542, "start": 7226.26, "end": 7228.1, "text": " I mean it's a very foundational thing", "tokens": [286, 914, 309, 311, 257, 588, 32195, 551], "temperature": 0.0, "avg_logprob": -0.13047303976836028, "compression_ratio": 1.5720164609053497, "no_speech_prob": 1.816001031329506e-06}, {"id": 2896, "seek": 720542, "start": 7228.1, "end": 7230.18, "text": " that makes a lot of stuff possible.", "tokens": [300, 1669, 257, 688, 295, 1507, 1944, 13], "temperature": 0.0, "avg_logprob": -0.13047303976836028, "compression_ratio": 1.5720164609053497, "no_speech_prob": 1.816001031329506e-06}, {"id": 2897, "seek": 720542, "start": 7231.54, "end": 7234.78, "text": " And how is Swift for probabilistic programming?", "tokens": [400, 577, 307, 25539, 337, 31959, 3142, 9410, 30], "temperature": 0.0, "avg_logprob": -0.13047303976836028, "compression_ratio": 1.5720164609053497, "no_speech_prob": 1.816001031329506e-06}, {"id": 2898, "seek": 723478, "start": 7234.78, "end": 7236.58, "text": " Ooh, so this is one of the areas", "tokens": [7951, 11, 370, 341, 307, 472, 295, 264, 3179], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2899, "seek": 723478, "start": 7236.58, "end": 7240.66, "text": " I'm both completely incapable of talking intelligently about", "tokens": [286, 478, 1293, 2584, 44174, 295, 1417, 5613, 2276, 466], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2900, "seek": 723478, "start": 7240.66, "end": 7242.0199999999995, "text": " but also very excited about", "tokens": [457, 611, 588, 2919, 466], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2901, "seek": 723478, "start": 7242.0199999999995, "end": 7243.46, "text": " because this is one of those things", "tokens": [570, 341, 307, 472, 295, 729, 721], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2902, "seek": 723478, "start": 7243.46, "end": 7246.94, "text": " that I think is really under utilized.", "tokens": [300, 286, 519, 307, 534, 833, 28158, 13], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2903, "seek": 723478, "start": 7246.94, "end": 7249.219999999999, "text": " One of the things that I think is really interesting", "tokens": [1485, 295, 264, 721, 300, 286, 519, 307, 534, 1880], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2904, "seek": 723478, "start": 7249.219999999999, "end": 7251.46, "text": " about Swift as a platform for machine learning", "tokens": [466, 25539, 382, 257, 3663, 337, 3479, 2539], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2905, "seek": 723478, "start": 7251.46, "end": 7256.42, "text": " is that you often, so with Python,", "tokens": [307, 300, 291, 2049, 11, 370, 365, 15329, 11], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2906, "seek": 723478, "start": 7256.42, "end": 7257.82, "text": " you end up in this weird situation", "tokens": [291, 917, 493, 294, 341, 3657, 2590], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2907, "seek": 723478, "start": 7257.82, "end": 7260.219999999999, "text": " where you build a machine learning model", "tokens": [689, 291, 1322, 257, 3479, 2539, 2316], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2908, "seek": 723478, "start": 7260.219999999999, "end": 7261.66, "text": " and then you have an application", "tokens": [293, 550, 291, 362, 364, 3861], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2909, "seek": 723478, "start": 7261.66, "end": 7262.82, "text": " that you eventually wanna use it in.", "tokens": [300, 291, 4728, 1948, 764, 309, 294, 13], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2910, "seek": 723478, "start": 7262.82, "end": 7264.46, "text": " And these are two different things.", "tokens": [400, 613, 366, 732, 819, 721, 13], "temperature": 0.0, "avg_logprob": -0.09134557265643925, "compression_ratio": 1.8387096774193548, "no_speech_prob": 4.637387974071316e-06}, {"id": 2911, "seek": 726446, "start": 7264.46, "end": 7266.02, "text": " Training your model and deploying your model", "tokens": [20620, 428, 2316, 293, 34198, 428, 2316], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2912, "seek": 726446, "start": 7266.02, "end": 7267.46, "text": " are different worlds.", "tokens": [366, 819, 13401, 13], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2913, "seek": 726446, "start": 7267.46, "end": 7269.54, "text": " And we can start erasing some of those boundaries", "tokens": [400, 321, 393, 722, 1189, 3349, 512, 295, 729, 13180], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2914, "seek": 726446, "start": 7269.54, "end": 7271.34, "text": " because Swift can be put in a mobile app,", "tokens": [570, 25539, 393, 312, 829, 294, 257, 6013, 724, 11], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2915, "seek": 726446, "start": 7271.34, "end": 7272.62, "text": " believe it or not, or put in a server,", "tokens": [1697, 309, 420, 406, 11, 420, 829, 294, 257, 7154, 11], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2916, "seek": 726446, "start": 7272.62, "end": 7274.82, "text": " or put in other things that you're actually deploying.", "tokens": [420, 829, 294, 661, 721, 300, 291, 434, 767, 34198, 13], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2917, "seek": 726446, "start": 7274.82, "end": 7276.22, "text": " And probabilistic programming", "tokens": [400, 31959, 3142, 9410], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2918, "seek": 726446, "start": 7276.22, "end": 7278.7, "text": " and many of these other applications", "tokens": [293, 867, 295, 613, 661, 5821], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2919, "seek": 726446, "start": 7278.7, "end": 7280.5, "text": " I think would be great to build and integrate", "tokens": [286, 519, 576, 312, 869, 281, 1322, 293, 13365], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2920, "seek": 726446, "start": 7280.5, "end": 7281.34, "text": " with the applications themselves.", "tokens": [365, 264, 5821, 2969, 13], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2921, "seek": 726446, "start": 7281.34, "end": 7284.1, "text": " So I think the answer is it'll be a great fit.", "tokens": [407, 286, 519, 264, 1867, 307, 309, 603, 312, 257, 869, 3318, 13], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2922, "seek": 726446, "start": 7285.26, "end": 7287.94, "text": " I haven't seen anything here yet.", "tokens": [286, 2378, 380, 1612, 1340, 510, 1939, 13], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2923, "seek": 726446, "start": 7287.94, "end": 7291.54, "text": " But basically with things like probabilistic programming", "tokens": [583, 1936, 365, 721, 411, 31959, 3142, 9410], "temperature": 0.0, "avg_logprob": -0.11634705671623571, "compression_ratio": 1.8327645051194539, "no_speech_prob": 4.5652836888621096e-06}, {"id": 2924, "seek": 729154, "start": 7291.54, "end": 7295.22, "text": " or things like kind of graph-based systems,", "tokens": [420, 721, 411, 733, 295, 4295, 12, 6032, 3652, 11], "temperature": 0.0, "avg_logprob": -0.13443448102032696, "compression_ratio": 1.7241379310344827, "no_speech_prob": 3.167571048834361e-05}, {"id": 2925, "seek": 729154, "start": 7296.42, "end": 7299.22, "text": " they're not a great fit for PyTorch.", "tokens": [436, 434, 406, 257, 869, 3318, 337, 9953, 51, 284, 339, 13], "temperature": 0.0, "avg_logprob": -0.13443448102032696, "compression_ratio": 1.7241379310344827, "no_speech_prob": 3.167571048834361e-05}, {"id": 2926, "seek": 729154, "start": 7299.22, "end": 7300.7, "text": " And that's not a controversial thing to say", "tokens": [400, 300, 311, 406, 257, 17323, 551, 281, 584], "temperature": 0.0, "avg_logprob": -0.13443448102032696, "compression_ratio": 1.7241379310344827, "no_speech_prob": 3.167571048834361e-05}, {"id": 2927, "seek": 729154, "start": 7300.7, "end": 7302.82, "text": " because Sumit Chintaloh who created PyTorch", "tokens": [570, 8626, 270, 761, 686, 304, 1445, 567, 2942, 9953, 51, 284, 339], "temperature": 0.0, "avg_logprob": -0.13443448102032696, "compression_ratio": 1.7241379310344827, "no_speech_prob": 3.167571048834361e-05}, {"id": 2928, "seek": 729154, "start": 7302.82, "end": 7304.86, "text": " said that on Twitter himself last week.", "tokens": [848, 300, 322, 5794, 3647, 1036, 1243, 13], "temperature": 0.0, "avg_logprob": -0.13443448102032696, "compression_ratio": 1.7241379310344827, "no_speech_prob": 3.167571048834361e-05}, {"id": 2929, "seek": 729154, "start": 7304.86, "end": 7307.82, "text": " He said if you wanna do this kind of work at the moment,", "tokens": [634, 848, 498, 291, 1948, 360, 341, 733, 295, 589, 412, 264, 1623, 11], "temperature": 0.0, "avg_logprob": -0.13443448102032696, "compression_ratio": 1.7241379310344827, "no_speech_prob": 3.167571048834361e-05}, {"id": 2930, "seek": 729154, "start": 7307.82, "end": 7309.0199999999995, "text": " you might wanna look at Julia,", "tokens": [291, 1062, 1948, 574, 412, 18551, 11], "temperature": 0.0, "avg_logprob": -0.13443448102032696, "compression_ratio": 1.7241379310344827, "no_speech_prob": 3.167571048834361e-05}, {"id": 2931, "seek": 729154, "start": 7309.0199999999995, "end": 7311.58, "text": " which is another great option for this kind of programming.", "tokens": [597, 307, 1071, 869, 3614, 337, 341, 733, 295, 9410, 13], "temperature": 0.0, "avg_logprob": -0.13443448102032696, "compression_ratio": 1.7241379310344827, "no_speech_prob": 3.167571048834361e-05}, {"id": 2932, "seek": 729154, "start": 7311.58, "end": 7315.74, "text": " Because what happens is you have these kind of", "tokens": [1436, 437, 2314, 307, 291, 362, 613, 733, 295], "temperature": 0.0, "avg_logprob": -0.13443448102032696, "compression_ratio": 1.7241379310344827, "no_speech_prob": 3.167571048834361e-05}, {"id": 2933, "seek": 729154, "start": 7315.74, "end": 7318.22, "text": " deep connections, you know, computational graphs", "tokens": [2452, 9271, 11, 291, 458, 11, 28270, 24877], "temperature": 0.0, "avg_logprob": -0.13443448102032696, "compression_ratio": 1.7241379310344827, "no_speech_prob": 3.167571048834361e-05}, {"id": 2934, "seek": 729154, "start": 7318.22, "end": 7320.1, "text": " of lots of things calling lots of other things.", "tokens": [295, 3195, 295, 721, 5141, 3195, 295, 661, 721, 13], "temperature": 0.0, "avg_logprob": -0.13443448102032696, "compression_ratio": 1.7241379310344827, "no_speech_prob": 3.167571048834361e-05}, {"id": 2935, "seek": 732010, "start": 7320.1, "end": 7322.820000000001, "text": " And so you need, and they're often kind of small.", "tokens": [400, 370, 291, 643, 11, 293, 436, 434, 2049, 733, 295, 1359, 13], "temperature": 0.0, "avg_logprob": -0.07922435792024471, "compression_ratio": 1.7015503875968991, "no_speech_prob": 3.070749153266661e-05}, {"id": 2936, "seek": 732010, "start": 7322.820000000001, "end": 7325.780000000001, "text": " So you need those things to happen super quickly.", "tokens": [407, 291, 643, 729, 721, 281, 1051, 1687, 2661, 13], "temperature": 0.0, "avg_logprob": -0.07922435792024471, "compression_ratio": 1.7015503875968991, "no_speech_prob": 3.070749153266661e-05}, {"id": 2937, "seek": 732010, "start": 7325.780000000001, "end": 7330.780000000001, "text": " So things like Julia and Swift work really well", "tokens": [407, 721, 411, 18551, 293, 25539, 589, 534, 731], "temperature": 0.0, "avg_logprob": -0.07922435792024471, "compression_ratio": 1.7015503875968991, "no_speech_prob": 3.070749153266661e-05}, {"id": 2938, "seek": 732010, "start": 7331.58, "end": 7332.42, "text": " for that kind of thing,", "tokens": [337, 300, 733, 295, 551, 11], "temperature": 0.0, "avg_logprob": -0.07922435792024471, "compression_ratio": 1.7015503875968991, "no_speech_prob": 3.070749153266661e-05}, {"id": 2939, "seek": 732010, "start": 7332.42, "end": 7333.5, "text": " particularly when you kind of add", "tokens": [4098, 562, 291, 733, 295, 909], "temperature": 0.0, "avg_logprob": -0.07922435792024471, "compression_ratio": 1.7015503875968991, "no_speech_prob": 3.070749153266661e-05}, {"id": 2940, "seek": 732010, "start": 7333.5, "end": 7336.620000000001, "text": " all the threading stuff on top as well.", "tokens": [439, 264, 7207, 278, 1507, 322, 1192, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.07922435792024471, "compression_ratio": 1.7015503875968991, "no_speech_prob": 3.070749153266661e-05}, {"id": 2941, "seek": 732010, "start": 7336.620000000001, "end": 7338.42, "text": " So if you're interested in that area,", "tokens": [407, 498, 291, 434, 3102, 294, 300, 1859, 11], "temperature": 0.0, "avg_logprob": -0.07922435792024471, "compression_ratio": 1.7015503875968991, "no_speech_prob": 3.070749153266661e-05}, {"id": 2942, "seek": 732010, "start": 7338.42, "end": 7340.9400000000005, "text": " that would certainly be one that I think", "tokens": [300, 576, 3297, 312, 472, 300, 286, 519], "temperature": 0.0, "avg_logprob": -0.07922435792024471, "compression_ratio": 1.7015503875968991, "no_speech_prob": 3.070749153266661e-05}, {"id": 2943, "seek": 732010, "start": 7340.9400000000005, "end": 7343.780000000001, "text": " you could start getting into straight away.", "tokens": [291, 727, 722, 1242, 666, 2997, 1314, 13], "temperature": 0.0, "avg_logprob": -0.07922435792024471, "compression_ratio": 1.7015503875968991, "no_speech_prob": 3.070749153266661e-05}, {"id": 2944, "seek": 732010, "start": 7343.780000000001, "end": 7345.26, "text": " Like one of the nice things about that", "tokens": [1743, 472, 295, 264, 1481, 721, 466, 300], "temperature": 0.0, "avg_logprob": -0.07922435792024471, "compression_ratio": 1.7015503875968991, "no_speech_prob": 3.070749153266661e-05}, {"id": 2945, "seek": 732010, "start": 7345.26, "end": 7347.740000000001, "text": " is you can do a lot on the CPU.", "tokens": [307, 291, 393, 360, 257, 688, 322, 264, 13199, 13], "temperature": 0.0, "avg_logprob": -0.07922435792024471, "compression_ratio": 1.7015503875968991, "no_speech_prob": 3.070749153266661e-05}, {"id": 2946, "seek": 734774, "start": 7347.74, "end": 7350.62, "text": " Like a lot of these things don't even make sense on the GPU.", "tokens": [1743, 257, 688, 295, 613, 721, 500, 380, 754, 652, 2020, 322, 264, 18407, 13], "temperature": 0.0, "avg_logprob": -0.17237970564100477, "compression_ratio": 1.616600790513834, "no_speech_prob": 5.062739728600718e-05}, {"id": 2947, "seek": 734774, "start": 7350.62, "end": 7353.62, "text": " So you can take advantage of it right now.", "tokens": [407, 291, 393, 747, 5002, 295, 309, 558, 586, 13], "temperature": 0.0, "avg_logprob": -0.17237970564100477, "compression_ratio": 1.616600790513834, "no_speech_prob": 5.062739728600718e-05}, {"id": 2948, "seek": 734774, "start": 7353.62, "end": 7357.94, "text": " And for that actually, we'll add it to the forum post,", "tokens": [400, 337, 300, 767, 11, 321, 603, 909, 309, 281, 264, 17542, 2183, 11], "temperature": 0.0, "avg_logprob": -0.17237970564100477, "compression_ratio": 1.616600790513834, "no_speech_prob": 5.062739728600718e-05}, {"id": 2949, "seek": 734774, "start": 7357.94, "end": 7362.24, "text": " but I actually have a post already about how to access", "tokens": [457, 286, 767, 362, 257, 2183, 1217, 466, 577, 281, 2105], "temperature": 0.0, "avg_logprob": -0.17237970564100477, "compression_ratio": 1.616600790513834, "no_speech_prob": 5.062739728600718e-05}, {"id": 2950, "seek": 734774, "start": 7362.24, "end": 7365.9, "text": " a variety of random number distributions from Swift,", "tokens": [257, 5673, 295, 4974, 1230, 37870, 490, 25539, 11], "temperature": 0.0, "avg_logprob": -0.17237970564100477, "compression_ratio": 1.616600790513834, "no_speech_prob": 5.062739728600718e-05}, {"id": 2951, "seek": 734774, "start": 7365.9, "end": 7368.3, "text": " C++ random number distributions.", "tokens": [383, 25472, 4974, 1230, 37870, 13], "temperature": 0.0, "avg_logprob": -0.17237970564100477, "compression_ratio": 1.616600790513834, "no_speech_prob": 5.062739728600718e-05}, {"id": 2952, "seek": 734774, "start": 7368.3, "end": 7371.0599999999995, "text": " So you could actually get started with this right away.", "tokens": [407, 291, 727, 767, 483, 1409, 365, 341, 558, 1314, 13], "temperature": 0.0, "avg_logprob": -0.17237970564100477, "compression_ratio": 1.616600790513834, "no_speech_prob": 5.062739728600718e-05}, {"id": 2953, "seek": 734774, "start": 7372.0199999999995, "end": 7372.86, "text": " Is that it?", "tokens": [1119, 300, 309, 30], "temperature": 0.0, "avg_logprob": -0.17237970564100477, "compression_ratio": 1.616600790513834, "no_speech_prob": 5.062739728600718e-05}, {"id": 2954, "seek": 734774, "start": 7372.86, "end": 7374.42, "text": " Yeah, yeah, also the TensorFlow ecosystem", "tokens": [865, 11, 1338, 11, 611, 264, 37624, 11311], "temperature": 0.0, "avg_logprob": -0.17237970564100477, "compression_ratio": 1.616600790513834, "no_speech_prob": 5.062739728600718e-05}, {"id": 2955, "seek": 737442, "start": 7374.42, "end": 7377.78, "text": " has a big mature framework called TensorFlow probability.", "tokens": [575, 257, 955, 14442, 8388, 1219, 37624, 8482, 13], "temperature": 0.0, "avg_logprob": -0.13149561575793345, "compression_ratio": 1.6360153256704981, "no_speech_prob": 1.1840545084851328e-05}, {"id": 2956, "seek": 737442, "start": 7377.78, "end": 7379.68, "text": " And so I personally don't know very much about it,", "tokens": [400, 370, 286, 5665, 500, 380, 458, 588, 709, 466, 309, 11], "temperature": 0.0, "avg_logprob": -0.13149561575793345, "compression_ratio": 1.6360153256704981, "no_speech_prob": 1.1840545084851328e-05}, {"id": 2957, "seek": 737442, "start": 7379.68, "end": 7383.82, "text": " but I expect that all the atoms you need are all there.", "tokens": [457, 286, 2066, 300, 439, 264, 16871, 291, 643, 366, 439, 456, 13], "temperature": 0.0, "avg_logprob": -0.13149561575793345, "compression_ratio": 1.6360153256704981, "no_speech_prob": 1.1840545084851328e-05}, {"id": 2958, "seek": 737442, "start": 7383.82, "end": 7385.88, "text": " And we just need somebody who knows the space really well", "tokens": [400, 321, 445, 643, 2618, 567, 3255, 264, 1901, 534, 731], "temperature": 0.0, "avg_logprob": -0.13149561575793345, "compression_ratio": 1.6360153256704981, "no_speech_prob": 1.1840545084851328e-05}, {"id": 2959, "seek": 737442, "start": 7385.88, "end": 7388.26, "text": " to build a Swift library that can expose", "tokens": [281, 1322, 257, 25539, 6405, 300, 393, 19219], "temperature": 0.0, "avg_logprob": -0.13149561575793345, "compression_ratio": 1.6360153256704981, "no_speech_prob": 1.1840545084851328e-05}, {"id": 2960, "seek": 737442, "start": 7388.26, "end": 7390.82, "text": " all the primitives that TensorFlow already has.", "tokens": [439, 264, 2886, 38970, 300, 37624, 1217, 575, 13], "temperature": 0.0, "avg_logprob": -0.13149561575793345, "compression_ratio": 1.6360153256704981, "no_speech_prob": 1.1840545084851328e-05}, {"id": 2961, "seek": 737442, "start": 7390.82, "end": 7391.66, "text": " Is that it?", "tokens": [1119, 300, 309, 30], "temperature": 0.0, "avg_logprob": -0.13149561575793345, "compression_ratio": 1.6360153256704981, "no_speech_prob": 1.1840545084851328e-05}, {"id": 2962, "seek": 737442, "start": 7394.9800000000005, "end": 7397.62, "text": " How could you deploy Swift models on Android?", "tokens": [1012, 727, 291, 7274, 25539, 5245, 322, 8853, 30], "temperature": 0.0, "avg_logprob": -0.13149561575793345, "compression_ratio": 1.6360153256704981, "no_speech_prob": 1.1840545084851328e-05}, {"id": 2963, "seek": 737442, "start": 7399.62, "end": 7401.74, "text": " Well, so I think there's two options that you have there.", "tokens": [1042, 11, 370, 286, 519, 456, 311, 732, 3956, 300, 291, 362, 456, 13], "temperature": 0.0, "avg_logprob": -0.13149561575793345, "compression_ratio": 1.6360153256704981, "no_speech_prob": 1.1840545084851328e-05}, {"id": 2964, "seek": 740174, "start": 7401.74, "end": 7404.7, "text": " So one is Swift, again, builds on the entire", "tokens": [407, 472, 307, 25539, 11, 797, 11, 15182, 322, 264, 2302], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2965, "seek": 740174, "start": 7404.7, "end": 7405.74, "text": " TensorFlow ecosystem.", "tokens": [37624, 11311, 13], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2966, "seek": 740174, "start": 7405.74, "end": 7409.219999999999, "text": " And so TensorFlow ecosystem includes graphs,", "tokens": [400, 370, 37624, 11311, 5974, 24877, 11], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2967, "seek": 740174, "start": 7409.219999999999, "end": 7412.46, "text": " and graphs are a part of what Swift talks to.", "tokens": [293, 24877, 366, 257, 644, 295, 437, 25539, 6686, 281, 13], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2968, "seek": 740174, "start": 7412.46, "end": 7414.74, "text": " So you can export a graph, you can send it through TF Lite.", "tokens": [407, 291, 393, 10725, 257, 4295, 11, 291, 393, 2845, 309, 807, 40964, 32986, 13], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2969, "seek": 740174, "start": 7414.74, "end": 7419.0199999999995, "text": " And so the whole mobile deployment situation there works.", "tokens": [400, 370, 264, 1379, 6013, 19317, 2590, 456, 1985, 13], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2970, "seek": 740174, "start": 7419.0199999999995, "end": 7421.099999999999, "text": " I feel like that's kind of the model we're trying", "tokens": [286, 841, 411, 300, 311, 733, 295, 264, 2316, 321, 434, 1382], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2971, "seek": 740174, "start": 7421.099999999999, "end": 7422.26, "text": " to get away from a little bit though.", "tokens": [281, 483, 1314, 490, 257, 707, 857, 1673, 13], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2972, "seek": 740174, "start": 7422.26, "end": 7423.099999999999, "text": " Do you feel that way?", "tokens": [1144, 291, 841, 300, 636, 30], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2973, "seek": 740174, "start": 7423.099999999999, "end": 7424.7, "text": " So the other option is like Swift actually runs", "tokens": [407, 264, 661, 3614, 307, 411, 25539, 767, 6676], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2974, "seek": 740174, "start": 7424.7, "end": 7425.54, "text": " fine on Android.", "tokens": [2489, 322, 8853, 13], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2975, "seek": 740174, "start": 7425.54, "end": 7427.3, "text": " People ship Android apps written in Swift.", "tokens": [3432, 5374, 8853, 7733, 3720, 294, 25539, 13], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2976, "seek": 740174, "start": 7427.3, "end": 7428.74, "text": " So you can do that too.", "tokens": [407, 291, 393, 360, 300, 886, 13], "temperature": 0.0, "avg_logprob": -0.17538364955357144, "compression_ratio": 1.7119205298013245, "no_speech_prob": 1.2026529475406278e-05}, {"id": 2977, "seek": 742874, "start": 7428.74, "end": 7433.44, "text": " Swift on Android isn't really awesome as far as I know.", "tokens": [25539, 322, 8853, 1943, 380, 534, 3476, 382, 1400, 382, 286, 458, 13], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2978, "seek": 742874, "start": 7433.44, "end": 7434.92, "text": " I'm not exactly an Android programmer.", "tokens": [286, 478, 406, 2293, 364, 8853, 32116, 13], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2979, "seek": 742874, "start": 7434.92, "end": 7436.04, "text": " I don't really know that.", "tokens": [286, 500, 380, 534, 458, 300, 13], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2980, "seek": 742874, "start": 7436.04, "end": 7439.179999999999, "text": " But the issue there is that Android,", "tokens": [583, 264, 2734, 456, 307, 300, 8853, 11], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2981, "seek": 742874, "start": 7439.179999999999, "end": 7441.76, "text": " you have a dual world between the Java stuff", "tokens": [291, 362, 257, 11848, 1002, 1296, 264, 10745, 1507], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2982, "seek": 742874, "start": 7441.76, "end": 7442.74, "text": " and the native stuff.", "tokens": [293, 264, 8470, 1507, 13], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2983, "seek": 742874, "start": 7442.74, "end": 7445.099999999999, "text": " And so Swift fits into the native stuff,", "tokens": [400, 370, 25539, 9001, 666, 264, 8470, 1507, 11], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2984, "seek": 742874, "start": 7445.099999999999, "end": 7446.24, "text": " is my understanding.", "tokens": [307, 452, 3701, 13], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2985, "seek": 742874, "start": 7446.24, "end": 7448.96, "text": " But I know that people are building and shipping", "tokens": [583, 286, 458, 300, 561, 366, 2390, 293, 14122], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2986, "seek": 742874, "start": 7448.96, "end": 7450.12, "text": " Android apps written in Swift.", "tokens": [8853, 7733, 3720, 294, 25539, 13], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2987, "seek": 742874, "start": 7450.12, "end": 7452.92, "text": " And so that's a totally reasonable thing to do.", "tokens": [400, 370, 300, 311, 257, 3879, 10585, 551, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2988, "seek": 742874, "start": 7453.96, "end": 7457.219999999999, "text": " The other thing to mention in terms of platforms", "tokens": [440, 661, 551, 281, 2152, 294, 2115, 295, 9473], "temperature": 0.0, "avg_logprob": -0.12286306965735651, "compression_ratio": 1.7671755725190839, "no_speech_prob": 8.662698746775277e-06}, {"id": 2989, "seek": 745722, "start": 7457.22, "end": 7460.56, "text": " is that Swift on Windows is starting to come together", "tokens": [307, 300, 25539, 322, 8591, 307, 2891, 281, 808, 1214], "temperature": 0.0, "avg_logprob": -0.17653730937412807, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.5199552763078827e-05}, {"id": 2990, "seek": 745722, "start": 7460.56, "end": 7461.400000000001, "text": " as well.", "tokens": [382, 731, 13], "temperature": 0.0, "avg_logprob": -0.17653730937412807, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.5199552763078827e-05}, {"id": 2991, "seek": 745722, "start": 7461.400000000001, "end": 7462.52, "text": " So I don't know where it'll be by the time", "tokens": [407, 286, 500, 380, 458, 689, 309, 603, 312, 538, 264, 565], "temperature": 0.0, "avg_logprob": -0.17653730937412807, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.5199552763078827e-05}, {"id": 2992, "seek": 745722, "start": 7462.52, "end": 7464.320000000001, "text": " you're watching this at home.", "tokens": [291, 434, 1976, 341, 412, 1280, 13], "temperature": 0.0, "avg_logprob": -0.17653730937412807, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.5199552763078827e-05}, {"id": 2993, "seek": 745722, "start": 7464.320000000001, "end": 7469.320000000001, "text": " But Swift is definitely making its way to worlds", "tokens": [583, 25539, 307, 2138, 1455, 1080, 636, 281, 13401], "temperature": 0.0, "avg_logprob": -0.17653730937412807, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.5199552763078827e-05}, {"id": 2994, "seek": 745722, "start": 7470.4800000000005, "end": 7472.96, "text": " outside the iOS world pretty rapidly.", "tokens": [2380, 264, 17430, 1002, 1238, 12910, 13], "temperature": 0.0, "avg_logprob": -0.17653730937412807, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.5199552763078827e-05}, {"id": 2995, "seek": 745722, "start": 7472.96, "end": 7474.12, "text": " Windows is one of them.", "tokens": [8591, 307, 472, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.17653730937412807, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.5199552763078827e-05}, {"id": 2996, "seek": 745722, "start": 7474.12, "end": 7475.6, "text": " Yeah, yeah, it's super exciting.", "tokens": [865, 11, 1338, 11, 309, 311, 1687, 4670, 13], "temperature": 0.0, "avg_logprob": -0.17653730937412807, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.5199552763078827e-05}, {"id": 2997, "seek": 745722, "start": 7475.6, "end": 7480.2, "text": " People are writing, what's the Windows MVC?", "tokens": [3432, 366, 3579, 11, 437, 311, 264, 8591, 17663, 34, 30], "temperature": 0.0, "avg_logprob": -0.17653730937412807, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.5199552763078827e-05}, {"id": 2998, "seek": 745722, "start": 7480.2, "end": 7484.4800000000005, "text": " MFC, MFC apps in Swift, which is brain twisting to me.", "tokens": [376, 18671, 11, 376, 18671, 7733, 294, 25539, 11, 597, 307, 3567, 34491, 281, 385, 13], "temperature": 0.0, "avg_logprob": -0.17653730937412807, "compression_ratio": 1.5555555555555556, "no_speech_prob": 1.5199552763078827e-05}, {"id": 2999, "seek": 748448, "start": 7484.48, "end": 7488.16, "text": " So what we're gonna close with now is a little taste", "tokens": [407, 437, 321, 434, 799, 1998, 365, 586, 307, 257, 707, 3939], "temperature": 0.0, "avg_logprob": -0.11148801261996046, "compression_ratio": 1.5825242718446602, "no_speech_prob": 1.3286399962453288e-06}, {"id": 3000, "seek": 748448, "start": 7488.16, "end": 7491.36, "text": " of where we're heading next week.", "tokens": [295, 689, 321, 434, 9864, 958, 1243, 13], "temperature": 0.0, "avg_logprob": -0.11148801261996046, "compression_ratio": 1.5825242718446602, "no_speech_prob": 1.3286399962453288e-06}, {"id": 3001, "seek": 748448, "start": 7491.36, "end": 7496.32, "text": " And this is actually something that Rachel shows", "tokens": [400, 341, 307, 767, 746, 300, 14246, 3110], "temperature": 0.0, "avg_logprob": -0.11148801261996046, "compression_ratio": 1.5825242718446602, "no_speech_prob": 1.3286399962453288e-06}, {"id": 3002, "seek": 748448, "start": 7496.32, "end": 7498.98, "text": " in her computational linear algebra course.", "tokens": [294, 720, 28270, 8213, 21989, 1164, 13], "temperature": 0.0, "avg_logprob": -0.11148801261996046, "compression_ratio": 1.5825242718446602, "no_speech_prob": 1.3286399962453288e-06}, {"id": 3003, "seek": 748448, "start": 7498.98, "end": 7503.98, "text": " And it comes from a really amazing programming language", "tokens": [400, 309, 1487, 490, 257, 534, 2243, 9410, 2856], "temperature": 0.0, "avg_logprob": -0.11148801261996046, "compression_ratio": 1.5825242718446602, "no_speech_prob": 1.3286399962453288e-06}, {"id": 3004, "seek": 748448, "start": 7505.2, "end": 7506.48, "text": " called Halide.", "tokens": [1219, 13896, 482, 13], "temperature": 0.0, "avg_logprob": -0.11148801261996046, "compression_ratio": 1.5825242718446602, "no_speech_prob": 1.3286399962453288e-06}, {"id": 3005, "seek": 748448, "start": 7506.48, "end": 7510.94, "text": " And Halide is one of these dramatic steps", "tokens": [400, 13896, 482, 307, 472, 295, 613, 12023, 4439], "temperature": 0.0, "avg_logprob": -0.11148801261996046, "compression_ratio": 1.5825242718446602, "no_speech_prob": 1.3286399962453288e-06}, {"id": 3006, "seek": 748448, "start": 7510.94, "end": 7512.82, "text": " in terms of completely rethinking", "tokens": [294, 2115, 295, 2584, 319, 39873], "temperature": 0.0, "avg_logprob": -0.11148801261996046, "compression_ratio": 1.5825242718446602, "no_speech_prob": 1.3286399962453288e-06}, {"id": 3007, "seek": 751282, "start": 7512.82, "end": 7514.799999999999, "text": " how we program computers.", "tokens": [577, 321, 1461, 10807, 13], "temperature": 0.0, "avg_logprob": -0.14340353493738656, "compression_ratio": 1.580188679245283, "no_speech_prob": 4.425305178301642e-06}, {"id": 3008, "seek": 751282, "start": 7515.679999999999, "end": 7518.719999999999, "text": " And I wanna show it to you because it gives you a sense", "tokens": [400, 286, 1948, 855, 309, 281, 291, 570, 309, 2709, 291, 257, 2020], "temperature": 0.0, "avg_logprob": -0.14340353493738656, "compression_ratio": 1.580188679245283, "no_speech_prob": 4.425305178301642e-06}, {"id": 3009, "seek": 751282, "start": 7518.719999999999, "end": 7523.719999999999, "text": " of the kinds of problems that Swift has to solve", "tokens": [295, 264, 3685, 295, 2740, 300, 25539, 575, 281, 5039], "temperature": 0.0, "avg_logprob": -0.14340353493738656, "compression_ratio": 1.580188679245283, "no_speech_prob": 4.425305178301642e-06}, {"id": 3010, "seek": 751282, "start": 7523.88, "end": 7528.32, "text": " in order to, like the goal here is to be able to get,", "tokens": [294, 1668, 281, 11, 411, 264, 3387, 510, 307, 281, 312, 1075, 281, 483, 11], "temperature": 0.0, "avg_logprob": -0.14340353493738656, "compression_ratio": 1.580188679245283, "no_speech_prob": 4.425305178301642e-06}, {"id": 3011, "seek": 751282, "start": 7529.759999999999, "end": 7531.86, "text": " the goal here is to be able to get this performance.", "tokens": [264, 3387, 510, 307, 281, 312, 1075, 281, 483, 341, 3389, 13], "temperature": 0.0, "avg_logprob": -0.14340353493738656, "compression_ratio": 1.580188679245283, "no_speech_prob": 4.425305178301642e-06}, {"id": 3012, "seek": 751282, "start": 7531.86, "end": 7534.5199999999995, "text": " Because remember that the C speed", "tokens": [1436, 1604, 300, 264, 383, 3073], "temperature": 0.0, "avg_logprob": -0.14340353493738656, "compression_ratio": 1.580188679245283, "no_speech_prob": 4.425305178301642e-06}, {"id": 3013, "seek": 751282, "start": 7534.5199999999995, "end": 7537.759999999999, "text": " triply nested for loop was 0.07.", "tokens": [1376, 2724, 15646, 292, 337, 6367, 390, 1958, 13, 16231, 13], "temperature": 0.0, "avg_logprob": -0.14340353493738656, "compression_ratio": 1.580188679245283, "no_speech_prob": 4.425305178301642e-06}, {"id": 3014, "seek": 751282, "start": 7537.759999999999, "end": 7540.5199999999995, "text": " But TensorFlow is 0.02, right?", "tokens": [583, 37624, 307, 1958, 13, 12756, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.14340353493738656, "compression_ratio": 1.580188679245283, "no_speech_prob": 4.425305178301642e-06}, {"id": 3015, "seek": 754052, "start": 7540.52, "end": 7543.68, "text": " How do we get this level of performance", "tokens": [1012, 360, 321, 483, 341, 1496, 295, 3389], "temperature": 0.0, "avg_logprob": -0.10292449364295372, "compression_ratio": 1.5421686746987953, "no_speech_prob": 2.9477816951839486e-06}, {"id": 3016, "seek": 754052, "start": 7543.68, "end": 7547.76, "text": " but you being able to write it yourself in Swift?", "tokens": [457, 291, 885, 1075, 281, 2464, 309, 1803, 294, 25539, 30], "temperature": 0.0, "avg_logprob": -0.10292449364295372, "compression_ratio": 1.5421686746987953, "no_speech_prob": 2.9477816951839486e-06}, {"id": 3017, "seek": 754052, "start": 7547.76, "end": 7549.360000000001, "text": " Now here's why it's hard, right?", "tokens": [823, 510, 311, 983, 309, 311, 1152, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.10292449364295372, "compression_ratio": 1.5421686746987953, "no_speech_prob": 2.9477816951839486e-06}, {"id": 3018, "seek": 754052, "start": 7549.360000000001, "end": 7554.360000000001, "text": " And so this video actually comes from the Halide project,", "tokens": [400, 370, 341, 960, 767, 1487, 490, 264, 13896, 482, 1716, 11], "temperature": 0.0, "avg_logprob": -0.10292449364295372, "compression_ratio": 1.5421686746987953, "no_speech_prob": 2.9477816951839486e-06}, {"id": 3019, "seek": 754052, "start": 7555.240000000001, "end": 7559.0, "text": " which is a programming language that has kind of invented", "tokens": [597, 307, 257, 9410, 2856, 300, 575, 733, 295, 14479], "temperature": 0.0, "avg_logprob": -0.10292449364295372, "compression_ratio": 1.5421686746987953, "no_speech_prob": 2.9477816951839486e-06}, {"id": 3020, "seek": 754052, "start": 7559.0, "end": 7560.76, "text": " an amazing way to think about this.", "tokens": [364, 2243, 636, 281, 519, 466, 341, 13], "temperature": 0.0, "avg_logprob": -0.10292449364295372, "compression_ratio": 1.5421686746987953, "no_speech_prob": 2.9477816951839486e-06}, {"id": 3021, "seek": 754052, "start": 7561.68, "end": 7564.280000000001, "text": " And so I'm gonna use it to describe the problems", "tokens": [400, 370, 286, 478, 799, 764, 309, 281, 6786, 264, 2740], "temperature": 0.0, "avg_logprob": -0.10292449364295372, "compression_ratio": 1.5421686746987953, "no_speech_prob": 2.9477816951839486e-06}, {"id": 3022, "seek": 754052, "start": 7564.280000000001, "end": 7565.52, "text": " that we're gonna solve.", "tokens": [300, 321, 434, 799, 5039, 13], "temperature": 0.0, "avg_logprob": -0.10292449364295372, "compression_ratio": 1.5421686746987953, "no_speech_prob": 2.9477816951839486e-06}, {"id": 3023, "seek": 754052, "start": 7565.52, "end": 7569.42, "text": " So in order to write something fast,", "tokens": [407, 294, 1668, 281, 2464, 746, 2370, 11], "temperature": 0.0, "avg_logprob": -0.10292449364295372, "compression_ratio": 1.5421686746987953, "no_speech_prob": 2.9477816951839486e-06}, {"id": 3024, "seek": 756942, "start": 7569.42, "end": 7572.6, "text": " we have to think about how everything's gonna get", "tokens": [321, 362, 281, 519, 466, 577, 1203, 311, 799, 483], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3025, "seek": 756942, "start": 7572.6, "end": 7574.16, "text": " put together.", "tokens": [829, 1214, 13], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3026, "seek": 756942, "start": 7574.16, "end": 7576.96, "text": " And so the algorithm we're gonna write here", "tokens": [400, 370, 264, 9284, 321, 434, 799, 2464, 510], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3027, "seek": 756942, "start": 7576.96, "end": 7578.56, "text": " that they wrote in this Halide video", "tokens": [300, 436, 4114, 294, 341, 13896, 482, 960], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3028, "seek": 756942, "start": 7578.56, "end": 7580.8, "text": " is one where they're doing a simple blur,", "tokens": [307, 472, 689, 436, 434, 884, 257, 2199, 14257, 11], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3029, "seek": 756942, "start": 7580.8, "end": 7582.36, "text": " a three by three blur, right?", "tokens": [257, 1045, 538, 1045, 14257, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3030, "seek": 756942, "start": 7582.36, "end": 7585.26, "text": " So we take each group of three by three pixels", "tokens": [407, 321, 747, 1184, 1594, 295, 1045, 538, 1045, 18668], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3031, "seek": 756942, "start": 7585.26, "end": 7586.56, "text": " and we take their average.", "tokens": [293, 321, 747, 641, 4274, 13], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3032, "seek": 756942, "start": 7586.56, "end": 7587.96, "text": " That's how you do a three by three blur.", "tokens": [663, 311, 577, 291, 360, 257, 1045, 538, 1045, 14257, 13], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3033, "seek": 756942, "start": 7587.96, "end": 7590.4800000000005, "text": " Now, what are some of the things we could do, right?", "tokens": [823, 11, 437, 366, 512, 295, 264, 721, 321, 727, 360, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3034, "seek": 756942, "start": 7590.4800000000005, "end": 7592.32, "text": " So how, in what order, for example,", "tokens": [407, 577, 11, 294, 437, 1668, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3035, "seek": 756942, "start": 7592.32, "end": 7595.6, "text": " do I compute the values in my three by three blur?", "tokens": [360, 286, 14722, 264, 4190, 294, 452, 1045, 538, 1045, 14257, 30], "temperature": 0.0, "avg_logprob": -0.10057660262950145, "compression_ratio": 1.7840909090909092, "no_speech_prob": 1.0952505363093223e-05}, {"id": 3036, "seek": 759560, "start": 7595.6, "end": 7599.820000000001, "text": " And one way is just go through each X one at a time,", "tokens": [400, 472, 636, 307, 445, 352, 807, 1184, 1783, 472, 412, 257, 565, 11], "temperature": 0.0, "avg_logprob": -0.13879096123480028, "compression_ratio": 1.7490494296577948, "no_speech_prob": 4.1571697693143506e-06}, {"id": 3037, "seek": 759560, "start": 7599.820000000001, "end": 7603.04, "text": " and then within that, go through each Y one at a time.", "tokens": [293, 550, 1951, 300, 11, 352, 807, 1184, 398, 472, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.13879096123480028, "compression_ratio": 1.7490494296577948, "no_speech_prob": 4.1571697693143506e-06}, {"id": 3038, "seek": 759560, "start": 7603.04, "end": 7605.08, "text": " That would be one choice.", "tokens": [663, 576, 312, 472, 3922, 13], "temperature": 0.0, "avg_logprob": -0.13879096123480028, "compression_ratio": 1.7490494296577948, "no_speech_prob": 4.1571697693143506e-06}, {"id": 3039, "seek": 759560, "start": 7605.08, "end": 7607.320000000001, "text": " A second choice I could make would be to do", "tokens": [316, 1150, 3922, 286, 727, 652, 576, 312, 281, 360], "temperature": 0.0, "avg_logprob": -0.13879096123480028, "compression_ratio": 1.7490494296577948, "no_speech_prob": 4.1571697693143506e-06}, {"id": 3040, "seek": 759560, "start": 7607.320000000001, "end": 7610.08, "text": " the exact opposite, which is to go through each column", "tokens": [264, 1900, 6182, 11, 597, 307, 281, 352, 807, 1184, 7738], "temperature": 0.0, "avg_logprob": -0.13879096123480028, "compression_ratio": 1.7490494296577948, "no_speech_prob": 4.1571697693143506e-06}, {"id": 3041, "seek": 759560, "start": 7610.9400000000005, "end": 7611.780000000001, "text": " one at a time.", "tokens": [472, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.13879096123480028, "compression_ratio": 1.7490494296577948, "no_speech_prob": 4.1571697693143506e-06}, {"id": 3042, "seek": 759560, "start": 7611.780000000001, "end": 7614.56, "text": " Now these aren't gonna have very different characteristics.", "tokens": [823, 613, 3212, 380, 799, 362, 588, 819, 10891, 13], "temperature": 0.0, "avg_logprob": -0.13879096123480028, "compression_ratio": 1.7490494296577948, "no_speech_prob": 4.1571697693143506e-06}, {"id": 3043, "seek": 759560, "start": 7614.56, "end": 7615.92, "text": " Maybe the latter might be a bit slower", "tokens": [2704, 264, 18481, 1062, 312, 257, 857, 14009], "temperature": 0.0, "avg_logprob": -0.13879096123480028, "compression_ratio": 1.7490494296577948, "no_speech_prob": 4.1571697693143506e-06}, {"id": 3044, "seek": 759560, "start": 7615.92, "end": 7618.22, "text": " because we're jumping further through memory.", "tokens": [570, 321, 434, 11233, 3052, 807, 4675, 13], "temperature": 0.0, "avg_logprob": -0.13879096123480028, "compression_ratio": 1.7490494296577948, "no_speech_prob": 4.1571697693143506e-06}, {"id": 3045, "seek": 759560, "start": 7618.22, "end": 7620.400000000001, "text": " But what we could do is we could do something called", "tokens": [583, 437, 321, 727, 360, 307, 321, 727, 360, 746, 1219], "temperature": 0.0, "avg_logprob": -0.13879096123480028, "compression_ratio": 1.7490494296577948, "no_speech_prob": 4.1571697693143506e-06}, {"id": 3046, "seek": 759560, "start": 7620.400000000001, "end": 7622.08, "text": " vectorization.", "tokens": [8062, 2144, 13], "temperature": 0.0, "avg_logprob": -0.13879096123480028, "compression_ratio": 1.7490494296577948, "no_speech_prob": 4.1571697693143506e-06}, {"id": 3047, "seek": 762208, "start": 7622.08, "end": 7626.84, "text": " And vectorization is super important because what happens", "tokens": [400, 8062, 2144, 307, 1687, 1021, 570, 437, 2314], "temperature": 0.0, "avg_logprob": -0.11125786304473877, "compression_ratio": 1.79182156133829, "no_speech_prob": 6.854033017589245e-06}, {"id": 3048, "seek": 762208, "start": 7626.84, "end": 7629.4, "text": " with vectorization is we actually take four,", "tokens": [365, 8062, 2144, 307, 321, 767, 747, 1451, 11], "temperature": 0.0, "avg_logprob": -0.11125786304473877, "compression_ratio": 1.79182156133829, "no_speech_prob": 6.854033017589245e-06}, {"id": 3049, "seek": 762208, "start": 7629.4, "end": 7631.92, "text": " or sometimes even eight, numbers at a time", "tokens": [420, 2171, 754, 3180, 11, 3547, 412, 257, 565], "temperature": 0.0, "avg_logprob": -0.11125786304473877, "compression_ratio": 1.79182156133829, "no_speech_prob": 6.854033017589245e-06}, {"id": 3050, "seek": 762208, "start": 7631.92, "end": 7635.28, "text": " and throw them all at the CPU or GPU at once", "tokens": [293, 3507, 552, 439, 412, 264, 13199, 420, 18407, 412, 1564], "temperature": 0.0, "avg_logprob": -0.11125786304473877, "compression_ratio": 1.79182156133829, "no_speech_prob": 6.854033017589245e-06}, {"id": 3051, "seek": 762208, "start": 7635.28, "end": 7636.98, "text": " and say calculate them all together.", "tokens": [293, 584, 8873, 552, 439, 1214, 13], "temperature": 0.0, "avg_logprob": -0.11125786304473877, "compression_ratio": 1.79182156133829, "no_speech_prob": 6.854033017589245e-06}, {"id": 3052, "seek": 762208, "start": 7636.98, "end": 7638.76, "text": " And so we have these things called vector units", "tokens": [400, 370, 321, 362, 613, 721, 1219, 8062, 6815], "temperature": 0.0, "avg_logprob": -0.11125786304473877, "compression_ratio": 1.79182156133829, "no_speech_prob": 6.854033017589245e-06}, {"id": 3053, "seek": 762208, "start": 7638.76, "end": 7641.2, "text": " in our computers nowadays that can do that.", "tokens": [294, 527, 10807, 13434, 300, 393, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.11125786304473877, "compression_ratio": 1.79182156133829, "no_speech_prob": 6.854033017589245e-06}, {"id": 3054, "seek": 762208, "start": 7641.2, "end": 7643.44, "text": " You can even have multiple vectorized things happening", "tokens": [509, 393, 754, 362, 3866, 8062, 1602, 721, 2737], "temperature": 0.0, "avg_logprob": -0.11125786304473877, "compression_ratio": 1.79182156133829, "no_speech_prob": 6.854033017589245e-06}, {"id": 3055, "seek": 762208, "start": 7643.44, "end": 7646.3, "text": " at the same time because you have multiple cores.", "tokens": [412, 264, 912, 565, 570, 291, 362, 3866, 24826, 13], "temperature": 0.0, "avg_logprob": -0.11125786304473877, "compression_ratio": 1.79182156133829, "no_speech_prob": 6.854033017589245e-06}, {"id": 3056, "seek": 762208, "start": 7646.3, "end": 7649.6, "text": " But in fact, in a GPU, this is what happens all the time.", "tokens": [583, 294, 1186, 11, 294, 257, 18407, 11, 341, 307, 437, 2314, 439, 264, 565, 13], "temperature": 0.0, "avg_logprob": -0.11125786304473877, "compression_ratio": 1.79182156133829, "no_speech_prob": 6.854033017589245e-06}, {"id": 3057, "seek": 764960, "start": 7649.6, "end": 7653.1, "text": " Or in order to think about better memory access,", "tokens": [1610, 294, 1668, 281, 519, 466, 1101, 4675, 2105, 11], "temperature": 0.0, "avg_logprob": -0.1229932894472216, "compression_ratio": 1.688212927756654, "no_speech_prob": 5.093584150017705e-06}, {"id": 3058, "seek": 764960, "start": 7653.1, "end": 7656.96, "text": " we could do a little block at a time like this.", "tokens": [321, 727, 360, 257, 707, 3461, 412, 257, 565, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.1229932894472216, "compression_ratio": 1.688212927756654, "no_speech_prob": 5.093584150017705e-06}, {"id": 3059, "seek": 764960, "start": 7656.96, "end": 7660.0, "text": " So there's lots of choices about how I compute my values", "tokens": [407, 456, 311, 3195, 295, 7994, 466, 577, 286, 14722, 452, 4190], "temperature": 0.0, "avg_logprob": -0.1229932894472216, "compression_ratio": 1.688212927756654, "no_speech_prob": 5.093584150017705e-06}, {"id": 3060, "seek": 764960, "start": 7660.0, "end": 7662.64, "text": " that are gonna change the performance characteristics", "tokens": [300, 366, 799, 1319, 264, 3389, 10891], "temperature": 0.0, "avg_logprob": -0.1229932894472216, "compression_ratio": 1.688212927756654, "no_speech_prob": 5.093584150017705e-06}, {"id": 3061, "seek": 764960, "start": 7662.64, "end": 7664.88, "text": " of my, in this case, a blur.", "tokens": [295, 452, 11, 294, 341, 1389, 11, 257, 14257, 13], "temperature": 0.0, "avg_logprob": -0.1229932894472216, "compression_ratio": 1.688212927756654, "no_speech_prob": 5.093584150017705e-06}, {"id": 3062, "seek": 764960, "start": 7664.88, "end": 7668.68, "text": " Another question is when should I compute my inputs?", "tokens": [3996, 1168, 307, 562, 820, 286, 14722, 452, 15743, 30], "temperature": 0.0, "avg_logprob": -0.1229932894472216, "compression_ratio": 1.688212927756654, "no_speech_prob": 5.093584150017705e-06}, {"id": 3063, "seek": 764960, "start": 7668.68, "end": 7670.02, "text": " So here's my input.", "tokens": [407, 510, 311, 452, 4846, 13], "temperature": 0.0, "avg_logprob": -0.1229932894472216, "compression_ratio": 1.688212927756654, "no_speech_prob": 5.093584150017705e-06}, {"id": 3064, "seek": 764960, "start": 7670.02, "end": 7672.92, "text": " And see how it's going through three at a time?", "tokens": [400, 536, 577, 309, 311, 516, 807, 1045, 412, 257, 565, 30], "temperature": 0.0, "avg_logprob": -0.1229932894472216, "compression_ratio": 1.688212927756654, "no_speech_prob": 5.093584150017705e-06}, {"id": 3065, "seek": 764960, "start": 7672.92, "end": 7675.96, "text": " So because I'm trying to calculate three at a time.", "tokens": [407, 570, 286, 478, 1382, 281, 8873, 1045, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.1229932894472216, "compression_ratio": 1.688212927756654, "no_speech_prob": 5.093584150017705e-06}, {"id": 3066, "seek": 764960, "start": 7675.96, "end": 7677.64, "text": " And that gives me my blurred in X.", "tokens": [400, 300, 2709, 385, 452, 43525, 294, 1783, 13], "temperature": 0.0, "avg_logprob": -0.1229932894472216, "compression_ratio": 1.688212927756654, "no_speech_prob": 5.093584150017705e-06}, {"id": 3067, "seek": 767764, "start": 7677.64, "end": 7680.320000000001, "text": " Now I have to go through all of those three at a time.", "tokens": [823, 286, 362, 281, 352, 807, 439, 295, 729, 1045, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.08210792978301303, "compression_ratio": 1.7559055118110236, "no_speech_prob": 2.4060850591922645e-06}, {"id": 3068, "seek": 767764, "start": 7680.320000000001, "end": 7682.1, "text": " And so you can see this is super slow.", "tokens": [400, 370, 291, 393, 536, 341, 307, 1687, 2964, 13], "temperature": 0.0, "avg_logprob": -0.08210792978301303, "compression_ratio": 1.7559055118110236, "no_speech_prob": 2.4060850591922645e-06}, {"id": 3069, "seek": 767764, "start": 7682.1, "end": 7684.42, "text": " It's recalculating things again and again.", "tokens": [467, 311, 850, 304, 2444, 990, 721, 797, 293, 797, 13], "temperature": 0.0, "avg_logprob": -0.08210792978301303, "compression_ratio": 1.7559055118110236, "no_speech_prob": 2.4060850591922645e-06}, {"id": 3070, "seek": 767764, "start": 7684.42, "end": 7687.280000000001, "text": " And it's not able to really use the cache well.", "tokens": [400, 309, 311, 406, 1075, 281, 534, 764, 264, 19459, 731, 13], "temperature": 0.0, "avg_logprob": -0.08210792978301303, "compression_ratio": 1.7559055118110236, "no_speech_prob": 2.4060850591922645e-06}, {"id": 3071, "seek": 767764, "start": 7687.280000000001, "end": 7691.6, "text": " Instead, I could do a whole set of nine at a time.", "tokens": [7156, 11, 286, 727, 360, 257, 1379, 992, 295, 4949, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.08210792978301303, "compression_ratio": 1.7559055118110236, "no_speech_prob": 2.4060850591922645e-06}, {"id": 3072, "seek": 767764, "start": 7691.6, "end": 7693.88, "text": " And that would then allow me to create", "tokens": [400, 300, 576, 550, 2089, 385, 281, 1884], "temperature": 0.0, "avg_logprob": -0.08210792978301303, "compression_ratio": 1.7559055118110236, "no_speech_prob": 2.4060850591922645e-06}, {"id": 3073, "seek": 767764, "start": 7693.88, "end": 7696.02, "text": " a whole blurred output at a time.", "tokens": [257, 1379, 43525, 5598, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.08210792978301303, "compression_ratio": 1.7559055118110236, "no_speech_prob": 2.4060850591922645e-06}, {"id": 3074, "seek": 767764, "start": 7697.76, "end": 7700.740000000001, "text": " Or I could go through it like this, exactly like before,", "tokens": [1610, 286, 727, 352, 807, 309, 411, 341, 11, 2293, 411, 949, 11], "temperature": 0.0, "avg_logprob": -0.08210792978301303, "compression_ratio": 1.7559055118110236, "no_speech_prob": 2.4060850591922645e-06}, {"id": 3075, "seek": 767764, "start": 7700.740000000001, "end": 7702.88, "text": " but actually save what I had before.", "tokens": [457, 767, 3155, 437, 286, 632, 949, 13], "temperature": 0.0, "avg_logprob": -0.08210792978301303, "compression_ratio": 1.7559055118110236, "no_speech_prob": 2.4060850591922645e-06}, {"id": 3076, "seek": 767764, "start": 7702.88, "end": 7705.4800000000005, "text": " And that means when I then do the next row,", "tokens": [400, 300, 1355, 562, 286, 550, 360, 264, 958, 5386, 11], "temperature": 0.0, "avg_logprob": -0.08210792978301303, "compression_ratio": 1.7559055118110236, "no_speech_prob": 2.4060850591922645e-06}, {"id": 3077, "seek": 770548, "start": 7705.48, "end": 7708.179999999999, "text": " I don't need to recompute, because it's already there.", "tokens": [286, 500, 380, 643, 281, 48000, 1169, 11, 570, 309, 311, 1217, 456, 13], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3078, "seek": 770548, "start": 7709.4, "end": 7713.0, "text": " Okay, just add a clarification that the left panel's input,", "tokens": [1033, 11, 445, 909, 257, 34449, 300, 264, 1411, 4831, 311, 4846, 11], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3079, "seek": 770548, "start": 7713.0, "end": 7715.5199999999995, "text": " the middle is the intermediate values,", "tokens": [264, 2808, 307, 264, 19376, 4190, 11], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3080, "seek": 770548, "start": 7715.5199999999995, "end": 7717.0, "text": " and the right is the final output.", "tokens": [293, 264, 558, 307, 264, 2572, 5598, 13], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3081, "seek": 770548, "start": 7717.0, "end": 7717.839999999999, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3082, "seek": 770548, "start": 7719.44, "end": 7720.959999999999, "text": " We could vectorize that.", "tokens": [492, 727, 8062, 1125, 300, 13], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3083, "seek": 770548, "start": 7720.959999999999, "end": 7722.66, "text": " So we can do vectorized input,", "tokens": [407, 321, 393, 360, 8062, 1602, 4846, 11], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3084, "seek": 770548, "start": 7722.66, "end": 7724.74, "text": " and then vectorized on the intermediate values,", "tokens": [293, 550, 8062, 1602, 322, 264, 19376, 4190, 11], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3085, "seek": 770548, "start": 7724.74, "end": 7727.54, "text": " and then calculate those to create our vectorized output", "tokens": [293, 550, 8873, 729, 281, 1884, 527, 8062, 1602, 5598], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3086, "seek": 770548, "start": 7727.54, "end": 7729.08, "text": " with parallel processing.", "tokens": [365, 8952, 9007, 13], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3087, "seek": 770548, "start": 7730.0, "end": 7731.58, "text": " Here's another way that we could combine", "tokens": [1692, 311, 1071, 636, 300, 321, 727, 10432], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3088, "seek": 770548, "start": 7731.58, "end": 7733.2, "text": " vectorization and parallel processing.", "tokens": [8062, 2144, 293, 8952, 9007, 13], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3089, "seek": 770548, "start": 7733.2, "end": 7734.759999999999, "text": " There's all these things you can do,", "tokens": [821, 311, 439, 613, 721, 291, 393, 360, 11], "temperature": 0.0, "avg_logprob": -0.16282554855920317, "compression_ratio": 1.862962962962963, "no_speech_prob": 4.784445991390385e-06}, {"id": 3090, "seek": 773476, "start": 7734.76, "end": 7735.76, "text": " and you can see they're gonna have", "tokens": [293, 291, 393, 536, 436, 434, 799, 362], "temperature": 0.0, "avg_logprob": -0.1632997703552246, "compression_ratio": 1.5589519650655022, "no_speech_prob": 4.565846666082507e-06}, {"id": 3091, "seek": 773476, "start": 7735.76, "end": 7738.88, "text": " very different performance characteristics.", "tokens": [588, 819, 3389, 10891, 13], "temperature": 0.0, "avg_logprob": -0.1632997703552246, "compression_ratio": 1.5589519650655022, "no_speech_prob": 4.565846666082507e-06}, {"id": 3092, "seek": 773476, "start": 7740.96, "end": 7745.96, "text": " At Halide, they have this neat idea,", "tokens": [1711, 13896, 482, 11, 436, 362, 341, 10654, 1558, 11], "temperature": 0.0, "avg_logprob": -0.1632997703552246, "compression_ratio": 1.5589519650655022, "no_speech_prob": 4.565846666082507e-06}, {"id": 3093, "seek": 773476, "start": 7746.16, "end": 7750.08, "text": " which is, hey, let's not write nested, nested, nested", "tokens": [597, 307, 11, 4177, 11, 718, 311, 406, 2464, 15646, 292, 11, 15646, 292, 11, 15646, 292], "temperature": 0.0, "avg_logprob": -0.1632997703552246, "compression_ratio": 1.5589519650655022, "no_speech_prob": 4.565846666082507e-06}, {"id": 3094, "seek": 773476, "start": 7750.08, "end": 7753.280000000001, "text": " for loops and tiles and looping through the memory like that.", "tokens": [337, 16121, 293, 21982, 293, 6367, 278, 807, 264, 4675, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.1632997703552246, "compression_ratio": 1.5589519650655022, "no_speech_prob": 4.565846666082507e-06}, {"id": 3095, "seek": 773476, "start": 7753.280000000001, "end": 7757.24, "text": " Let's instead describe for each value x, y", "tokens": [961, 311, 2602, 6786, 337, 1184, 2158, 2031, 11, 288], "temperature": 0.0, "avg_logprob": -0.1632997703552246, "compression_ratio": 1.5589519650655022, "no_speech_prob": 4.565846666082507e-06}, {"id": 3096, "seek": 773476, "start": 7757.24, "end": 7761.52, "text": " in my blurred output, here is how it's calculated", "tokens": [294, 452, 43525, 5598, 11, 510, 307, 577, 309, 311, 15598], "temperature": 0.0, "avg_logprob": -0.1632997703552246, "compression_ratio": 1.5589519650655022, "no_speech_prob": 4.565846666082507e-06}, {"id": 3097, "seek": 773476, "start": 7761.52, "end": 7764.6, "text": " in this kind of declarative way.", "tokens": [294, 341, 733, 295, 16694, 1166, 636, 13], "temperature": 0.0, "avg_logprob": -0.1632997703552246, "compression_ratio": 1.5589519650655022, "no_speech_prob": 4.565846666082507e-06}, {"id": 3098, "seek": 776460, "start": 7764.6, "end": 7768.6, "text": " This is literally the definition of a blur algorithm.", "tokens": [639, 307, 3736, 264, 7123, 295, 257, 14257, 9284, 13], "temperature": 0.0, "avg_logprob": -0.13402728645169004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.443962557663326e-06}, {"id": 3099, "seek": 776460, "start": 7768.6, "end": 7773.6, "text": " And so you first do that, and then, after you've done that,", "tokens": [400, 370, 291, 700, 360, 300, 11, 293, 550, 11, 934, 291, 600, 1096, 300, 11], "temperature": 0.0, "avg_logprob": -0.13402728645169004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.443962557663326e-06}, {"id": 3100, "seek": 776460, "start": 7773.76, "end": 7778.76, "text": " you can then say to Halide, what are different schedules", "tokens": [291, 393, 550, 584, 281, 13896, 482, 11, 437, 366, 819, 28078], "temperature": 0.0, "avg_logprob": -0.13402728645169004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.443962557663326e-06}, {"id": 3101, "seek": 776460, "start": 7779.02, "end": 7780.120000000001, "text": " for calculating that?", "tokens": [337, 28258, 300, 30], "temperature": 0.0, "avg_logprob": -0.13402728645169004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.443962557663326e-06}, {"id": 3102, "seek": 776460, "start": 7780.120000000001, "end": 7782.56, "text": " So what's the order in which things are done?", "tokens": [407, 437, 311, 264, 1668, 294, 597, 721, 366, 1096, 30], "temperature": 0.0, "avg_logprob": -0.13402728645169004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.443962557663326e-06}, {"id": 3103, "seek": 776460, "start": 7782.56, "end": 7786.0, "text": " And for these different schedules that are written here,", "tokens": [400, 337, 613, 819, 28078, 300, 366, 3720, 510, 11], "temperature": 0.0, "avg_logprob": -0.13402728645169004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.443962557663326e-06}, {"id": 3104, "seek": 776460, "start": 7786.0, "end": 7789.160000000001, "text": " they have all the different behaviors you just saw.", "tokens": [436, 362, 439, 264, 819, 15501, 291, 445, 1866, 13], "temperature": 0.0, "avg_logprob": -0.13402728645169004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.443962557663326e-06}, {"id": 3105, "seek": 776460, "start": 7789.160000000001, "end": 7791.14, "text": " Now, here's the thing.", "tokens": [823, 11, 510, 311, 264, 551, 13], "temperature": 0.0, "avg_logprob": -0.13402728645169004, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.443962557663326e-06}, {"id": 3106, "seek": 779114, "start": 7791.14, "end": 7796.14, "text": " When expert CUDA programmers and expert CPU programmers", "tokens": [1133, 5844, 29777, 7509, 41504, 293, 5844, 13199, 41504], "temperature": 0.0, "avg_logprob": -0.10698404095389626, "compression_ratio": 1.6311111111111112, "no_speech_prob": 1.3287532283356995e-06}, {"id": 3107, "seek": 779114, "start": 7796.4800000000005, "end": 7801.4800000000005, "text": " write code to do things like this,", "tokens": [2464, 3089, 281, 360, 721, 411, 341, 11], "temperature": 0.0, "avg_logprob": -0.10698404095389626, "compression_ratio": 1.6311111111111112, "no_speech_prob": 1.3287532283356995e-06}, {"id": 3108, "seek": 779114, "start": 7802.18, "end": 7805.660000000001, "text": " they're using the world's best knowledge available", "tokens": [436, 434, 1228, 264, 1002, 311, 1151, 3601, 2435], "temperature": 0.0, "avg_logprob": -0.10698404095389626, "compression_ratio": 1.6311111111111112, "no_speech_prob": 1.3287532283356995e-06}, {"id": 3109, "seek": 779114, "start": 7805.660000000001, "end": 7808.200000000001, "text": " across all of those things to create special versions", "tokens": [2108, 439, 295, 729, 721, 281, 1884, 2121, 9606], "temperature": 0.0, "avg_logprob": -0.10698404095389626, "compression_ratio": 1.6311111111111112, "no_speech_prob": 1.3287532283356995e-06}, {"id": 3110, "seek": 779114, "start": 7808.200000000001, "end": 7810.4800000000005, "text": " for every architecture, for every different,", "tokens": [337, 633, 9482, 11, 337, 633, 819, 11], "temperature": 0.0, "avg_logprob": -0.10698404095389626, "compression_ratio": 1.6311111111111112, "no_speech_prob": 1.3287532283356995e-06}, {"id": 3111, "seek": 779114, "start": 7810.4800000000005, "end": 7813.92, "text": " well, not every, but lots of different matrix sizes,", "tokens": [731, 11, 406, 633, 11, 457, 3195, 295, 819, 8141, 11602, 11], "temperature": 0.0, "avg_logprob": -0.10698404095389626, "compression_ratio": 1.6311111111111112, "no_speech_prob": 1.3287532283356995e-06}, {"id": 3112, "seek": 779114, "start": 7813.92, "end": 7816.76, "text": " tensors of different numbers of dimensions,", "tokens": [10688, 830, 295, 819, 3547, 295, 12819, 11], "temperature": 0.0, "avg_logprob": -0.10698404095389626, "compression_ratio": 1.6311111111111112, "no_speech_prob": 1.3287532283356995e-06}, {"id": 3113, "seek": 779114, "start": 7816.76, "end": 7820.84, "text": " so much assembly code, right?", "tokens": [370, 709, 12103, 3089, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.10698404095389626, "compression_ratio": 1.6311111111111112, "no_speech_prob": 1.3287532283356995e-06}, {"id": 3114, "seek": 782084, "start": 7820.84, "end": 7822.92, "text": " And so we can't write that, right?", "tokens": [400, 370, 321, 393, 380, 2464, 300, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.14232906699180603, "compression_ratio": 1.6135265700483092, "no_speech_prob": 7.29570456314832e-06}, {"id": 3115, "seek": 782084, "start": 7822.92, "end": 7827.92, "text": " So how are we going to be able to write", "tokens": [407, 577, 366, 321, 516, 281, 312, 1075, 281, 2464], "temperature": 0.0, "avg_logprob": -0.14232906699180603, "compression_ratio": 1.6135265700483092, "no_speech_prob": 7.29570456314832e-06}, {"id": 3116, "seek": 782084, "start": 7827.92, "end": 7829.68, "text": " the stuff that's in our head,", "tokens": [264, 1507, 300, 311, 294, 527, 1378, 11], "temperature": 0.0, "avg_logprob": -0.14232906699180603, "compression_ratio": 1.6135265700483092, "no_speech_prob": 7.29570456314832e-06}, {"id": 3117, "seek": 782084, "start": 7830.64, "end": 7834.4800000000005, "text": " but have it run reasonably quickly?", "tokens": [457, 362, 309, 1190, 23551, 2661, 30], "temperature": 0.0, "avg_logprob": -0.14232906699180603, "compression_ratio": 1.6135265700483092, "no_speech_prob": 7.29570456314832e-06}, {"id": 3118, "seek": 782084, "start": 7834.4800000000005, "end": 7839.4800000000005, "text": " And so what we're moving towards with stuff like MLIR", "tokens": [400, 370, 437, 321, 434, 2684, 3030, 365, 1507, 411, 21601, 7740], "temperature": 0.0, "avg_logprob": -0.14232906699180603, "compression_ratio": 1.6135265700483092, "no_speech_prob": 7.29570456314832e-06}, {"id": 3119, "seek": 782084, "start": 7840.52, "end": 7844.360000000001, "text": " is the ability to kind of have domain-specific languages", "tokens": [307, 264, 3485, 281, 733, 295, 362, 9274, 12, 29258, 8650], "temperature": 0.0, "avg_logprob": -0.14232906699180603, "compression_ratio": 1.6135265700483092, "no_speech_prob": 7.29570456314832e-06}, {"id": 3120, "seek": 782084, "start": 7844.360000000001, "end": 7848.0, "text": " where you could write, here's the tiling", "tokens": [689, 291, 727, 2464, 11, 510, 311, 264, 256, 4883], "temperature": 0.0, "avg_logprob": -0.14232906699180603, "compression_ratio": 1.6135265700483092, "no_speech_prob": 7.29570456314832e-06}, {"id": 3121, "seek": 782084, "start": 7848.0, "end": 7850.4800000000005, "text": " domain-specific language, and here's the,", "tokens": [9274, 12, 29258, 2856, 11, 293, 510, 311, 264, 11], "temperature": 0.0, "avg_logprob": -0.14232906699180603, "compression_ratio": 1.6135265700483092, "no_speech_prob": 7.29570456314832e-06}, {"id": 3122, "seek": 785048, "start": 7850.48, "end": 7851.32, "text": " and the-", "tokens": [293, 264, 12], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3123, "seek": 785048, "start": 7851.32, "end": 7853.08, "text": " For example, Halide directly.", "tokens": [1171, 1365, 11, 13896, 482, 3838, 13], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3124, "seek": 785048, "start": 7853.08, "end": 7854.719999999999, "text": " For example, Halide directly, right?", "tokens": [1171, 1365, 11, 13896, 482, 3838, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3125, "seek": 785048, "start": 7854.719999999999, "end": 7858.44, "text": " And so that's the hope of where we're gonna be going here", "tokens": [400, 370, 300, 311, 264, 1454, 295, 689, 321, 434, 799, 312, 516, 510], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3126, "seek": 785048, "start": 7858.44, "end": 7861.839999999999, "text": " is that Chris's team is gonna be putting", "tokens": [307, 300, 6688, 311, 1469, 307, 799, 312, 3372], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3127, "seek": 785048, "start": 7861.839999999999, "end": 7865.5199999999995, "text": " these kinds of tools in your hands via Swift.", "tokens": [613, 3685, 295, 3873, 294, 428, 2377, 5766, 25539, 13], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3128, "seek": 785048, "start": 7865.5199999999995, "end": 7866.679999999999, "text": " Is that a reasonable summary?", "tokens": [1119, 300, 257, 10585, 12691, 30], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3129, "seek": 785048, "start": 7866.679999999999, "end": 7868.679999999999, "text": " Well, and so one of the bad things about Halide,", "tokens": [1042, 11, 293, 370, 472, 295, 264, 1578, 721, 466, 13896, 482, 11], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3130, "seek": 785048, "start": 7868.679999999999, "end": 7872.24, "text": " so in this space, we have TensorFlow today,", "tokens": [370, 294, 341, 1901, 11, 321, 362, 37624, 965, 11], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3131, "seek": 785048, "start": 7872.24, "end": 7874.48, "text": " TensorFlow today, we have Exelay.", "tokens": [37624, 965, 11, 321, 362, 2111, 338, 320, 13], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3132, "seek": 785048, "start": 7874.48, "end": 7876.36, "text": " Exelay is an important part of TensorFlow right now.", "tokens": [2111, 338, 320, 307, 364, 1021, 644, 295, 37624, 558, 586, 13], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3133, "seek": 785048, "start": 7876.36, "end": 7878.08, "text": " It's just not really wired into the Swift part", "tokens": [467, 311, 445, 406, 534, 27415, 666, 264, 25539, 644], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3134, "seek": 785048, "start": 7878.08, "end": 7879.0199999999995, "text": " of TensorFlow yet.", "tokens": [295, 37624, 1939, 13], "temperature": 0.0, "avg_logprob": -0.1520992914835612, "compression_ratio": 1.7971014492753623, "no_speech_prob": 1.384486495226156e-05}, {"id": 3135, "seek": 787902, "start": 7879.02, "end": 7881.860000000001, "text": " Exelay does all this stuff right now.", "tokens": [2111, 338, 320, 775, 439, 341, 1507, 558, 586, 13], "temperature": 0.0, "avg_logprob": -0.13107778730183622, "compression_ratio": 1.7142857142857142, "no_speech_prob": 5.255089490674436e-06}, {"id": 3136, "seek": 787902, "start": 7881.860000000001, "end": 7884.46, "text": " And Exelay is really good because you don't have to", "tokens": [400, 2111, 338, 320, 307, 534, 665, 570, 291, 500, 380, 362, 281], "temperature": 0.0, "avg_logprob": -0.13107778730183622, "compression_ratio": 1.7142857142857142, "no_speech_prob": 5.255089490674436e-06}, {"id": 3137, "seek": 787902, "start": 7884.46, "end": 7886.820000000001, "text": " hand tune it, like that whole writing out schedules.", "tokens": [1011, 10864, 309, 11, 411, 300, 1379, 3579, 484, 28078, 13], "temperature": 0.0, "avg_logprob": -0.13107778730183622, "compression_ratio": 1.7142857142857142, "no_speech_prob": 5.255089490674436e-06}, {"id": 3138, "seek": 787902, "start": 7886.820000000001, "end": 7890.540000000001, "text": " Exelay does a good job of using the hardware as it is today.", "tokens": [2111, 338, 320, 775, 257, 665, 1691, 295, 1228, 264, 8837, 382, 309, 307, 965, 13], "temperature": 0.0, "avg_logprob": -0.13107778730183622, "compression_ratio": 1.7142857142857142, "no_speech_prob": 5.255089490674436e-06}, {"id": 3139, "seek": 787902, "start": 7890.540000000001, "end": 7892.740000000001, "text": " The thing we're going further with MLIR is to say,", "tokens": [440, 551, 321, 434, 516, 3052, 365, 21601, 7740, 307, 281, 584, 11], "temperature": 0.0, "avg_logprob": -0.13107778730183622, "compression_ratio": 1.7142857142857142, "no_speech_prob": 5.255089490674436e-06}, {"id": 3140, "seek": 787902, "start": 7892.740000000001, "end": 7895.580000000001, "text": " well, instead of you having to put all this blood, sweat,", "tokens": [731, 11, 2602, 295, 291, 1419, 281, 829, 439, 341, 3390, 11, 11872, 11], "temperature": 0.0, "avg_logprob": -0.13107778730183622, "compression_ratio": 1.7142857142857142, "no_speech_prob": 5.255089490674436e-06}, {"id": 3141, "seek": 787902, "start": 7895.580000000001, "end": 7897.900000000001, "text": " and tears into tune it and know the hardware", "tokens": [293, 10462, 666, 10864, 309, 293, 458, 264, 8837], "temperature": 0.0, "avg_logprob": -0.13107778730183622, "compression_ratio": 1.7142857142857142, "no_speech_prob": 5.255089490674436e-06}, {"id": 3142, "seek": 787902, "start": 7897.900000000001, "end": 7901.860000000001, "text": " and do all this stuff, we can do other things like search.", "tokens": [293, 360, 439, 341, 1507, 11, 321, 393, 360, 661, 721, 411, 3164, 13], "temperature": 0.0, "avg_logprob": -0.13107778730183622, "compression_ratio": 1.7142857142857142, "no_speech_prob": 5.255089490674436e-06}, {"id": 3143, "seek": 787902, "start": 7901.860000000001, "end": 7905.3, "text": " And in fact, there are research systems available now", "tokens": [400, 294, 1186, 11, 456, 366, 2132, 3652, 2435, 586], "temperature": 0.0, "avg_logprob": -0.13107778730183622, "compression_ratio": 1.7142857142857142, "no_speech_prob": 5.255089490674436e-06}, {"id": 3144, "seek": 787902, "start": 7905.3, "end": 7908.14, "text": " which will use genetic algorithms", "tokens": [597, 486, 764, 12462, 14642], "temperature": 0.0, "avg_logprob": -0.13107778730183622, "compression_ratio": 1.7142857142857142, "no_speech_prob": 5.255089490674436e-06}, {"id": 3145, "seek": 790814, "start": 7908.14, "end": 7910.780000000001, "text": " to auto search for their optimal schedule.", "tokens": [281, 8399, 3164, 337, 641, 16252, 7567, 13], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3146, "seek": 790814, "start": 7910.780000000001, "end": 7913.22, "text": " So you're starting to see the kind of the ideas", "tokens": [407, 291, 434, 2891, 281, 536, 264, 733, 295, 264, 3487], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3147, "seek": 790814, "start": 7913.22, "end": 7915.900000000001, "text": " that come out of the database query optimizer world", "tokens": [300, 808, 484, 295, 264, 8149, 14581, 5028, 6545, 1002], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3148, "seek": 790814, "start": 7915.900000000001, "end": 7918.34, "text": " coming into the CUDA kernel world.", "tokens": [1348, 666, 264, 29777, 7509, 28256, 1002, 13], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3149, "seek": 790814, "start": 7918.34, "end": 7920.820000000001, "text": " And this is gonna be so great for us to understand.", "tokens": [400, 341, 307, 799, 312, 370, 869, 337, 505, 281, 1223, 13], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3150, "seek": 790814, "start": 7920.820000000001, "end": 7922.18, "text": " Exactly, search can be implemented", "tokens": [7587, 11, 3164, 393, 312, 12270], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3151, "seek": 790814, "start": 7922.18, "end": 7923.02, "text": " in lots of different ways.", "tokens": [294, 3195, 295, 819, 2098, 13], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3152, "seek": 790814, "start": 7923.02, "end": 7924.900000000001, "text": " Brute force, reinforcement learning,", "tokens": [1603, 1169, 3464, 11, 29280, 2539, 11], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3153, "seek": 790814, "start": 7924.900000000001, "end": 7927.06, "text": " like lots of different genetic algorithms.", "tokens": [411, 3195, 295, 819, 12462, 14642, 13], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3154, "seek": 790814, "start": 7927.06, "end": 7928.92, "text": " There's lots of cool things that can be done here.", "tokens": [821, 311, 3195, 295, 1627, 721, 300, 393, 312, 1096, 510, 13], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3155, "seek": 790814, "start": 7928.92, "end": 7930.700000000001, "text": " And so what we're going to do over time", "tokens": [400, 370, 437, 321, 434, 516, 281, 360, 670, 565], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3156, "seek": 790814, "start": 7930.700000000001, "end": 7932.38, "text": " is crack open the compiler", "tokens": [307, 6226, 1269, 264, 31958], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3157, "seek": 790814, "start": 7932.38, "end": 7935.14, "text": " and make the internal algorithms all learned.", "tokens": [293, 652, 264, 6920, 14642, 439, 3264, 13], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3158, "seek": 790814, "start": 7935.14, "end": 7936.54, "text": " And I think that's gonna be super cool.", "tokens": [400, 286, 519, 300, 311, 799, 312, 1687, 1627, 13], "temperature": 0.0, "avg_logprob": -0.10700280507405599, "compression_ratio": 1.7530487804878048, "no_speech_prob": 3.844547336484538e-06}, {"id": 3159, "seek": 793654, "start": 7936.54, "end": 7939.9, "text": " So this is why you have a compiler guy", "tokens": [407, 341, 307, 983, 291, 362, 257, 31958, 2146], "temperature": 0.0, "avg_logprob": -0.18881532880995008, "compression_ratio": 1.5487364620938628, "no_speech_prob": 1.3415466128208209e-05}, {"id": 3160, "seek": 793654, "start": 7939.9, "end": 7942.18, "text": " and a DL guy standing next to each other, right?", "tokens": [293, 257, 413, 43, 2146, 4877, 958, 281, 1184, 661, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.18881532880995008, "compression_ratio": 1.5487364620938628, "no_speech_prob": 1.3415466128208209e-05}, {"id": 3161, "seek": 793654, "start": 7942.18, "end": 7943.0199999999995, "text": " Because it is-", "tokens": [1436, 309, 307, 12], "temperature": 0.0, "avg_logprob": -0.18881532880995008, "compression_ratio": 1.5487364620938628, "no_speech_prob": 1.3415466128208209e-05}, {"id": 3162, "seek": 793654, "start": 7943.0199999999995, "end": 7944.54, "text": " Oh, well we like each other too.", "tokens": [876, 11, 731, 321, 411, 1184, 661, 886, 13], "temperature": 0.0, "avg_logprob": -0.18881532880995008, "compression_ratio": 1.5487364620938628, "no_speech_prob": 1.3415466128208209e-05}, {"id": 3163, "seek": 793654, "start": 7944.54, "end": 7945.78, "text": " It's, oh, you're okay.", "tokens": [467, 311, 11, 1954, 11, 291, 434, 1392, 13], "temperature": 0.0, "avg_logprob": -0.18881532880995008, "compression_ratio": 1.5487364620938628, "no_speech_prob": 1.3415466128208209e-05}, {"id": 3164, "seek": 793654, "start": 7947.78, "end": 7952.3, "text": " Because we're not gonna get this kind of great outcome", "tokens": [1436, 321, 434, 406, 799, 483, 341, 733, 295, 869, 9700], "temperature": 0.0, "avg_logprob": -0.18881532880995008, "compression_ratio": 1.5487364620938628, "no_speech_prob": 1.3415466128208209e-05}, {"id": 3165, "seek": 793654, "start": 7952.3, "end": 7955.32, "text": " unless people like us are working together", "tokens": [5969, 561, 411, 505, 366, 1364, 1214], "temperature": 0.0, "avg_logprob": -0.18881532880995008, "compression_ratio": 1.5487364620938628, "no_speech_prob": 1.3415466128208209e-05}, {"id": 3166, "seek": 793654, "start": 7955.32, "end": 7957.56, "text": " with amazing teams like the folks that they have", "tokens": [365, 2243, 5491, 411, 264, 4024, 300, 436, 362], "temperature": 0.0, "avg_logprob": -0.18881532880995008, "compression_ratio": 1.5487364620938628, "no_speech_prob": 1.3415466128208209e-05}, {"id": 3167, "seek": 793654, "start": 7957.56, "end": 7959.78, "text": " in TensorFlow and XLA and so forth.", "tokens": [294, 37624, 293, 1783, 11435, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.18881532880995008, "compression_ratio": 1.5487364620938628, "no_speech_prob": 1.3415466128208209e-05}, {"id": 3168, "seek": 793654, "start": 7959.78, "end": 7964.5, "text": " So next week, come back and we will dig even deeper.", "tokens": [407, 958, 1243, 11, 808, 646, 293, 321, 486, 2528, 754, 7731, 13], "temperature": 0.0, "avg_logprob": -0.18881532880995008, "compression_ratio": 1.5487364620938628, "no_speech_prob": 1.3415466128208209e-05}, {"id": 3169, "seek": 793654, "start": 7964.5, "end": 7965.82, "text": " Thank you very much, Chris Latner.", "tokens": [1044, 291, 588, 709, 11, 6688, 7354, 1193, 13], "temperature": 0.0, "avg_logprob": -0.18881532880995008, "compression_ratio": 1.5487364620938628, "no_speech_prob": 1.3415466128208209e-05}, {"id": 3170, "seek": 796582, "start": 7965.82, "end": 7966.66, "text": " Thank you, Jeremy.", "tokens": [1044, 291, 11, 17809, 13], "temperature": 0.0, "avg_logprob": -0.42017684936523436, "compression_ratio": 1.7352941176470589, "no_speech_prob": 0.00021019803534727544}, {"id": 3171, "seek": 796582, "start": 7966.66, "end": 7967.5, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.42017684936523436, "compression_ratio": 1.7352941176470589, "no_speech_prob": 0.00021019803534727544}, {"id": 3172, "seek": 796582, "start": 7967.5, "end": 7968.32, "text": " Thank you, Jeremy.", "tokens": [1044, 291, 11, 17809, 13], "temperature": 0.0, "avg_logprob": -0.42017684936523436, "compression_ratio": 1.7352941176470589, "no_speech_prob": 0.00021019803534727544}, {"id": 3173, "seek": 796832, "start": 7968.32, "end": 7996.32, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 51764], "temperature": 0.0, "avg_logprob": -0.7158200740814209, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.0021906665060669184}], "language": "en"}