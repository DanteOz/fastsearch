{"text": " Jeremy, on the topic of learning new things, you mentioned today that your colleagues were peeved when you spent half of the time learning new things. How did you stand your ground? I don't know. Just bloody-minded. I don't know. Was it because you were so productive that it didn't matter? No, no. I mean, it matters. I mean, most of that time, I was either the manager of a management consulting team or I was the CEO of a company or whatever. So, I mean, my first two startups, I wasn't exactly CEO. Nobody had titles. I had co-founders. But yeah, in the end, it's like, this is how I do things. But I'm not going to say it didn't create friction. I mean, I don't know. What do you think, Hamil? You work with me and you see how I jump onto totally different things when we're meant to be focused on something. I actually don't see you getting distracted that much, at least for me. Like we're talking about APL right now when we're meant to actually be focused on releasing NB dev and not meant to be doing the course. I see. Okay. No, yeah. Okay. Yeah. In hindsight, it looks like it was all part of a genius plan. Oh, okay. While you're doing it, it's like, why are we doing this? That's how I feel sometimes. But then it's kind of like that thing we did with Rich. I don't know if you remember that. Oh, with GH Top, with your old CEO. We re-staged it as his thing using Rich. Yeah. Like we spent so much time doing that. And while we were doing it, I was like, why are we... At some point I was like, I don't know if this is worth it. But then Will mentioned that he started his company based upon that project. And I thought, wow, that's a really big impact. And so like... Yeah, so then I just kind of learned over time that it actually... You can pivot these things into something productive usually. Yeah. So this company, textualize.io, Will, who created it, said came out of Amel and I refactoring. There we go. Still the most recent one. So nobody's touched it since. This rather mega PR. Which yeah, it basically took Rich and made it do things that Will hadn't exactly expected it to do. This is quite funny because I think yesterday or two days ago, I went to this website, textualize.io and I was thinking, hmm, what does this do? Like how are they planning on sending it or what's the plan? I mean, the website is beautifully designed. So I thought that there must be some business entity behind it. And I just thought, yeah. Yeah. So it's basically, you know, one guy, although I think he might have... He's got some funding. So I think he's hired somebody to help now who loves building CLIs. And so what Hamel and I showed with our GH Top thing was that actually you can use another tool he's created called Rich to kind of get a long way towards building terminal user interfaces. Yeah, this is something I'm trying to take... It's come full circle now that somebody's using textualize to build a notebook in the terminal. That's true. Which is great. All right. So since I'm on the Mac today, let me just check something. If I switch to a different virtual screen, you guys can now see my terminal. Is that correct? Okay. Great. Yeah. So since I'm on the Mac, I just downloaded that Jupyter kernel and I unzipped it and ran install.sh. And it looks like I now have a dialogue APL thing here. So one thing that's happened since yesterday is we now have a GitHub repo. Which... Let's have a look. APL study. There we go. So I don't have that over here. So let's grab it. So I'll go copy. Yeah. So we've got a fastai.com.au. And really all that's in it at the moment is my notebook. And so I should be able to now get clone that. There we go. And so I should now be able to open that. Good. And there I should be able to run it. All right. Okay. Oh, and then the other thing we did was we installed that toolbar widget thingy, oh, which I've actually already got here. So that's good. So I guess I have to go bookmarks, shift, Apple B. APL. Great. So let's see if I can type that. That ticked too. Yep. That works. Okay. So I'm back up to where we were on the different computer. So let's do times and divide, shall we? And I guess I should also run dialogue. Okay. And we should also get up our help, which was called dialogue language elements. Cool. All right. Let's do times. So at first it feels a bit weird that times and divide are actually on hyphen and equals. But then you realize that like plus, minus times and divide are all kind of next to each other on the keyboard. So it's not quite that weird. I seem to have got used to it pretty quickly. So we can do two times three. So that makes sense. How did you get the APL keyboard on top of Jupyter Notebook? If you go to the forum. Oh, it's in the forums. Okay. I think, did we discuss it yesterday? I don't quite remember. I saw it. But I just didn't know where to take it from. Yeah. Okay. So specifically the steps are you do. Here we are. Here's the bookmarklet. So you click here and then you, as it says, you drag this to your bookmarks bar, this link, and then you go to the Jupyter webpage and you click that link in your bookmarks bar and it'll appear. Okay. And this thing is called, not surprisingly, times sign. And the two forms of it are, okay, direction and multiply. Oh, it's actually called times. Okay. So obviously we can multiply a scalar by a scalar. We can multiply a scalar by a list. And we can multiply a list by a list. And remember, just because there's no space here doesn't mean this is one times two. This is this list times this list. So space binds more tightly. Does that make sense so far? Yep. Yep. Okay. Now monadic times is taking us into a complex world again, which is fun. Let's see what it says. Direction. So again, we look over to the top right. Okay, that says R is the result of doing times on Y. Y is any numeric array. Okay. When an element of Y is real, the corresponding element of the result is an integer whose value indicates whether the value is negative, zero, or positive. So this is what we'd normally call the sign function in most languages. And often in math it's called that as well. And so just to check here, 3.1 is positive, so that returns 1. Negative 2 is negative, so that returns negative 1. And zero is neither, so that returns zero. Okay, so those ones okay? So this is showing us this sign, which they call direction. Complex numbers. Complex numbers. The corresponding element is a number with the same phase, but with magnitude of 1. It's equivalent to this. So let's find out what this does. I think that'll give you the absolute value. Yeah, magnitude they call it. The absolute value. So direction is... What does that mean for complex? Does that give either i or negative i? I guess we should try it. Is that just a regular bar? See. It is. Okay. So it's actually something a bit more interesting. I think this is gonna... I mean if you visualize it as a vector, it's just gonna normalize the vector to magnitude 1. Yes, that's gonna require some drawing, I think. I just want to get up the documentation to see how to describe it. Magnitude of a complex number. Okay, great. So we're gonna do some more complex number stuff, which is cool. I have a quick question. Yeah. So I think so far the glyphs for monadic and dyadic are the same for all the glyphs that we've looked at except for the minus sign, which uses a different one. Do you know why that is? No, they're always the same. Always the same. Yeah. I think what you might be getting confused about is the difference between the thing that lets you specify a negative number, which is that, versus the function, which takes the negative of an array, which is that. Oh, I see. That's not a function. This binds more tightly than a function. This is actually, this is more like... The dot here is not a function, right? It's part of the literal number 2.3. Okay. Is it the same as Jane? The negative is not a function. It's part of the number negative 2.3. Okay. Thanks. No worries. So if I do this, this is not saying apply the negative function to these four things. It's saying this is a list containing this negative number and this positive number. So if I wanted to negate those four things, I would have to do this. Yeah. So hyphen is a function. And this upper bar thing is just part of a number, not a function. Just like dot is part of a number. Just like J is part of a number. Jeremy, so this JavaScript keyboard, it's a function. It's a function. It's a function. This JavaScript keyboard, it gives, when you hover over a symbol, it gives these key bindings that work with a regular keyboard, not APL keyboard. But it would be preferred to use the APL keyboard, right? No, not at all. They're the same. The difference is an APL keyboard has pictures of those letters on them. But they produce the same things. You still have to have the same software, whatever. So the only reason to have an APL physical keyboard is so that you can look at the keyboard and see the symbols. I got it. I was thinking about the APL keyboard in Windows. Oh, in Windows? Okay. Because these things, the JavaScript applet thing here, it gives you other bindings that work with the regular keyboard. Like xx tab is for multiplication. Yeah. Oh, okay. So, I suggest not using those. Instead, use, at the very bottom, it says back tick dash. Use that one. Because those are identical to the Windows keyboard. So you just use back tick followed by the same letter you would use in the Windows keyboard. And so here, this one is back tick equals. Yeah, I would ignore those tab ones. Okay. But this also works with just a regular Windows keyboard. Should I be using the APL keyboard? Yeah, you can use the Windows APL keyboard if you want. So I'm not using that right now because I am not on Windows. But even on Windows, I actually prefer not to use it because it takes away my control key. And I like my control key. Yes. So the back tick notation, the one on the bottom here, will be the preferred one. It's what I'm liking so far. But obviously, I'm very new to this. So I don't take my word for it. But yeah, I like the back tick approach because it tends to use that as well. Let's use copy and paste and everything in the usual way. Yeah. Okay, let's talk about complex numbers some more, shall we? So yeah, this is one of those things I didn't really get into much at university. I mean, I wish somebody told me how cool they are. Turn on my... Okay, so the thing I guess we talked about yesterday is how we can create this complex number plane, right? And so along this axis, you've got the real number line. And then along this axis, you've got the imaginary number line. Okay. So you can put numbers there. For example, here's the number 2. And here's the number minus 3i. But you could also create the number here 2 plus 2i. Okay, so that's the complex number 2 plus 2i. We'll go there. And you can think of that as a vector, right? It goes from the origin and it goes up to there. There's another way of thinking of 2 plus 2i. And that vector has a length. And we can calculate its length because it is... we have here a right angle triangle. Oh, we have a right angle triangle. And its height is 2. And its base is 2. And its base is 2. So its length here we can get from the Pythagorean theorem. Does that make sense so far? So that is the magnitude of this complex number. So the magnitude of real numbers is easy, right? Because like, what's the magnitude of this number here? Well, it's how far away is it from the origin? And the answer is 3. You know, what's the magnitude of this number here? Well, that's easy. It's 1. Right? This one's also easy. 3i. What's its magnitude? What's distance from the origin is also 3. Right? But yeah, the ones where you've got a mixture of imaginary and real, you have to use the Pythagorean theorem to find out their magnitude, a single number, which is like, how big is it? And if we take a number, so this number, the number we were dealing with here was 2 plus 2i, which APL writes like this. It's the same thing. And so, APL writes like this. It's the same thing. And they have this thing called direction, which is basically saying, take a number, for example, like 3, and 3, the direction of 3 is plus 1, and the direction of negative 3 is negative 1. And basically what we're doing is we're taking the number 3 and dividing it by its magnitude. And that's another way of thinking about this sine function. So like, what do you do for a complex number? Well, you take the number and divide it by its magnitude to do the same thing. And so that's going to give you something that is going to be around about here. So it's going to be pointing. It's going to be pointing in the same direction. No, excuse me. It's going to be pointing in the same direction. But it's going to be shorter. And specifically, we can draw this really important thing, which is called the unit circle. And the unit circle is something that has a radius of 1, right? And it's centered on the origin. And so the direction, anytime we get the direction of a real, we're going to get something that points in the same direction as the original number, but is actually sits on the unit circle. Its length will be 1. Does that make sense? So we could try it, right? So what's the square root of 8? So we could do 8 to the power of negative 2. That's not right. Sorry, to the power half rather. So 2 or half, yeah. Okay. And so we thought if we took 2j2 and divide that by 8 to the power half, we get that. And if we get the direction, times of 2j2, Hooray! It's the same. So, and rather than writing 8 times 5, what I could have written here is magnitude of 2j2, because that's what magnitude means. Okay, so does that make sense, what it's doing? You'll notice that like, although complex numbers are about the i, the square root of minus 1, we don't think about that at all, right? When we're doing this complex number stuff. We just treat it as a pair of numbers, which therefore can represent a point in Cartesian space, and therefore that can represent a vector. Is that 0.7 radians? Like, what is that value? Oh, this is a complex number. It's 0.7j0.7. So it's 0.7 plus 0.7i. Because remember, 2 plus 2i is written as 2j2 in APL. So this is 0.7 plus 0.7i. So it's a complex number. And so it's this point here. It's the complex number that has the same direction as 2j2, but has a magnitude of 1. And therefore it sits on the unit circle. And like, we really like to do things on the unit circle, because on the unit circle, if we kind of draw that out a little bit more, if we stick to things that are on the unit circle, so here's 1, 1, 1, 1, minus 1, minus 1. So these points are nice because you can pick any one of those points, like here, right? And if you create that triangle, then this hypotenuse here, the length of it, is 1. Which is really convenient, right? Because if you're doing trigonometry or something, right? You've got sine, theta, circuTOWA equals opposite over hypotenuse. Well, that's always 1 on the unit circle. So we can delete that part entirely. Instead, we get sine, theta equals opposite. You know, so it's nice to deal with stuff that's on the unit circle. Things become more convenient. You can ignore the whole magnitude slash hypotenuse piece entirely. Trigonometry coming back, huh? Probably a lot of us haven't seen it since high school. All right, so what do we say about monadic times? We haven't introduced magnitude yet, so let's put that away down here for later. And for now, I guess we'll just say that the magnitude of 3j4 is equal to I guess we don't have a way of even doing a square root. So we'll just have to kind of do it with prose. So the magnitude of 3j4 is equal to the square root of 3 squared plus 4 squared. So that's 9 plus 16. Oh yeah, of course, 3, 4, 5 is a Pythagorean triple. So it's basically going to be dividing by 5. Yeah, so basically 3j4 means 3 plus 4i, which has a magnitude of 25 because 3 times 3 plus 4 times 4 equals 5 times 5. So 0.6j0.8 represents a vector in the same direction as 3j4. But with a magnitude of 5, it's 3j4 divided by 5. OK, how's that? So that's dyadic times. Now that does mean that we just use divide, and I don't want to use anything until we've introduced it. So we should probably do divide first. And divide, I think, is actually a bit of an easier one. OK, so divide, which is on the equal sign on the APL keyboard. Here we are. OK, so that's called divide sign. Divide sign. The monadic version called reciprocal. And the dyadic version is called divided by. OK, and I guess what we could do is grab all of those and paste them in here. And I wonder if this works. Can we go find times and replace with divide? Oh, lovely. There we go. OK, so divided by is easy. Does anybody here not know what reciprocal does? Maybe we don't. Oh, we can't do 0. OK, let's change this to 3. As a side note, I found the reciprocal to be kind of handy when I'm doing any square roots or cube roots or anything like that. Because then you can do, rather than doing 0.5 power, you can do 16 to the reciprocal. To the power of reciprocal 3. For example, yes, a cube root. You could do the cube root of 8 like so. And I think you need those parentheses. Yeah, exactly. I don't think we need the parentheses. Because first it does it one at a time, right? So it's going to do divide. So this is going to be the first thing it does is divide 3. It's this reciprocal of 3. And then it's going to be power of on the left will be 8 and on the right will be reciprocal 3, which is cool. So it's like function composition. Yes, it is, which is actually a great time to talk about that, because we've now got our four basic operators for math. And so we should now talk about precedence. And I think I want to change my headings a little bit. I'm going to create a section called basic math operators. Oops. What have I got here? I've got plus sign twice. Do something weird. Minus, monadic minus, plus sign, monadic plus. Minus, monadic, dyadic times, monadic, dyadic. Precedence. So here is a formula. 3 times 2 plus 1. OK, so in regular math, we would go 3 times 2 first, get 6, and then we'd add 1 and get 7. And there's a couple of reasons we do that. The first is that times is a higher precedence than plus. And even if it wasn't, we go left to right. So is this 7? No, it's not. And that's because APL makes things much simpler for us by having no concept of precedence of different functions. They all have the same precedence. And the rule is we always go right to left, not left to right. So this is the same as this. And that's good because you wouldn't want to remember precedence rules for all what are these, like 50 or 60 or whatever glyphs, right? So they all have the same precedence. That doesn't mean all symbols have the same precedence. We've learned of a few symbols that have different precedence. So, for example, space, right? 3 plus 4 space 2. Space between numbers binds more tightly. I guess this would be better to explain like this. This binds more tightly. So this is the list 3, 5 added to 4 or the array 3, 5 added to 4, which is the same as that. So when I say we're doing things right to left, I'm only talking about functions. And remember that upper bar thing is not a function. That's part of the number. And this space here is not a function. That's part of this array. So functions specifically, you can tell something's a function because you look it up in the help and I'll tell you it's a function. OK, we can see here it's listed under the section called primitive functions. So we can tell that this is a function because in the functions part of the help. Most of the things up here are going to be functions. As we'll learn shortly, some of them are operators and the rules are different for operators. Most of these of everything we've seen so far in terms of times divide plus and minus are all functions. So that's the rule. We go right to left. So in this version here, right, we go right to left. So we've got the number 3. Now we've got 3 divide. That means the reciprocal of 3. And then we keep going left. We come across this time, this power of and it has a right hand side and it has a left hand side. And that's why this is 8 to the power of a third. So make sense? So we could do that with a list. And so remember, the symbol space binds the most tightly. This is the list 1, 2, 3 multiplied by 2 plus 1 because we go right to left. So we go 1 plus 2 times this list. That'll be three times that list. And we could also do this. So this will be this list to this array 2, 4, 6 plus 2. So all that in brackets and then multiplied by the array 1, 2, 3. So 2 plus 2 is 4. 2 plus 4 is 6. 2 plus 6 is 8. 8 times 3 is 24. 6 times 2 is 12. 4 times 1 is 4. That make sense? Yes. So I'm not sure if that's related, but that function for giving us the magnitude direction was, I think, that would for an array, it still works on each component. It doesn't normalize the whole array. Right. Right. Basically, pretty much all the functions in their normal forms work element-wise, like NumPy does, including power and reciprocal and magnitude and so forth. That's a good point. Did you go over the power of symbol? I don't know. Not yet. I thought we might do that now. I think that kind of counts as a basic math operator, kind of. So. Yeah. So let's do. OK. So this is confusing. This is shift 8, the normal multiply sign from Python. It doesn't mean multiply. It's exponential or power. So and it's called star. OK. And dyadic power. So exponential means e to the power of. So this is e to the power of zero is one. e to the power of one is two point seven eight and e to the power of two apparently is seven point three eight nine. Does anybody not know what e is or want a refresher of what e is? Refreshers are always great. Sure. The only reason I can do all these refreshers off the top of my head is because I've done all this stuff with my, you know, my daughter and her friend recently. So I can I can do math refreshes like this. I've already about a month ago. I couldn't because I'd forgotten everything. So the basic idea is like if you put one hundred dollars in the bank. At 100 percent interest. Then after one year. You'll get two hundred dollars. And specifically that's your original hundred. Plus. Sorry, I should say. Times. One plus the interest and 100 percent is 100 over 100. So it's one. But the bank might not give you the whole you know might not calculate the whole thing at the end of the year. If they want to be a bit more generous, they could calculate it twice. They could calculate it once at six months and again after another six months. So you take your hundred dollars. And after six months. They would give you half of your interest. So it's 50 percent. So after six months you would have 150. And then another six months they would give you the other 50 percent. But the other 50 percent is now going to be calculated on this. Right. So this is times one point five and then again times one point five. Two twenty five. Which is. One hundred. Times. One plus point five. It's great. If they're really generous they could pay it quarterly. And if they paid it quarterly then the amount of money you're going to make is one hundred times one plus. Actually let's do this as a fraction rather than as a decimal quarter. Therefore. Or they could pay it. Daily. One hundred times one plus one over three six five. To the three six five. OK. So we should be able to calculate these things in APL. Right. No promises. We could give it a go. So let's do this one. One hundred plus one hundred times one plus a quarter to the four. One hundred times. One plus a quarter. Now a quarter is. That it's a reciprocal of four. One plus a quarter. OK. To the power of is this. And so this is going to happen first because we go right to left. I should say you don't have a hundred dollars in the bank. Let's say you've got one dollar in the bank. OK. So in that case your one dollar would become two dollars if it was paid just at the end of the year. Or it become two dollars and twenty five cents if it was played every six months or it become two dollars and forty four cents if it was paid every quarter. Or we could do. Three six five. Five. It was paid every day. It would be this number and you can see the more often it's paid. The more money you're going to get. Right. But like this you know initially. It went up pretty quickly but now it's going up pretty slowly. So let's say it was paid hourly. I suppose it's paid a hundred times per day. And it's not really making much difference at this point. A. Is the limit of this as this number gets really really really high. So we could write that in math. And we can say a. Is the limit. As. Whatever X goes to infinity. So as X gets really big that never hits infinity of. And the one times we can just ignore. Right. So it's a limit of one plus. One divided by X. Or to the power of X. That makes sense. That's a. How's that Redick. I just remembered the definition of limit. Wow. That's something I have not seen in ages. Yeah. I got to say the kids loved seeing limit. You know and of course they're immediately like well just get rid of it and put infinity there. Okay. Let's put infinity there. One plus one divided by infinity. Okay kids what's one divided by infinity. Zero. Okay. What's one plus zero. One. What's one to the power of infinity. One. Okay. So does equal one. No. So okay. Well what do we do. They're like well what about infinity minus one. Oh that's still infinity. So this is our first introduction to limits and they they were just like they were partly like wow that's so cool and they were partly like. Never show me anything like this again. This is wrong. Yeah. It shouldn't happen. Get it out of my life. But this is beautiful because like they're trying to make it concrete and somehow relates to these ideas. That's amazing. And they will understand it at a much deeper level than people you know just you know going through this reading theory in a classroom. And yeah there's something deeply disturbing about limit. And I guess like like the takeaway is that this is just something that people agree to. Right. This is what I mean. It's a it's a it's I think it's more than just something people agree to. Like it's it's it's some kind of reality. You know like it's it's a true it's a true thing that exists independently about discovery of it. Right. But how do you make the jump from something getting closer to something being that value that gets closer to. This is a definition. This is like Yeah I don't know. Anyway I mean I think it's really cool. Yeah. All right. So that is that is more dramatic. Monadic star and he is named after Euler. I think Euler is more specifically Euler named it after himself. The famous blind Swiss mathematician. But Euler did not discover a I don't know who did. But it wasn't it wasn't him even though he got to name it somehow. For those of you that remember calculus you know you can take the derivative of various functions. For example we saw in the fast AI class that the derivative of x squared is 2x. One of the things that's interesting about E is that the derivative of e to the x is e to the x. It has a lot of crazy things going on with a comes up a lot. Maybe the most cool beautiful formula in the world is Euler's identity which brings together a lot of the things we've seen so far and it's e to the i pi plus one equals zero. I want to put it another way e to the i pi equals negative one which is like total madness. That this thing which is about circles and this thing which is about imaginary numbers and this thing which is about compound interest somehow combined to create negative one. So that's mind blowing. And so that's what that's why Monadic star is e to the power of e to the power of is a pretty important thing. And so we don't need a special symbol for e right because anytime you want a you just write this. All right. And then OK. Dietic star is power of so 49 to the power of a half is square root of 49. 5 to the power of 2 is 5 squared minus 4 square root is 2i. Because it's equal to minus one times four. So you get the square root of minus one which is i times the square root of four which is 2 2i. All right. Is that supposed to stop. Yeah. I think this is the first time e to the i pi has actually made sense to me because I did make the connection that pi is essentially like I think like a half like a half circle and radians or something. And so I is just that other you know I guess like the y on the plane. So all you're doing is you're just curving that around to the other side to turn into a negative one add one onto that and I got zero. Yes exactly. And maybe when you can try to find like a really good video or something that explains that for people that have never seen that before because I think that'd be a great thing to put in the oh yeah I think there's a channel three blue one brown may have some stuff if I see anything I'll put it up. Yeah, ideally something that doesn't use any concepts that we haven't come across yet, you know. Yeah, I mean the key thing around complex numbers to me I think is this idea that if you multiply by negative one you flip something from one side of the. You flip something from one side of the number line to the other on the real plane ditto if you multiply by negative one for a complex for imaginary number it flips it to the other side of the number line. But if you multiply something by I it rotates it by 90 degrees you go from two to two I to negative two to negative two I back to two. And so, yeah. I think a lot of these ideas end up basically being these kind of rotations around this number plane. Yeah, you see stuff like that all over in engineering. I think for me when I made the connection that if you look at the eye is kind of a shorthand for having an array of two numbers like basically just coordinates on the plane. And that's just a way to kind of have that mapping to your number line. All of a sudden everything else starts to fall into place. And then, when you're talking about magnitudes and stuff Mike. Oh, wait, I've seen this before as like, you know, magnitudes in. I mean, when you're, is it like the L2 norm or something like that it's like even if we're just having like the magnitude of like, absolutely. I think there's the exact same thing. It's the latest. Well, I seem to put this in the chat. What's this about was seen. Can you tell us. Oh, so it looks like the Jupiter kernel has a way of ending. I know what to call it like function composition. So if I type this into Jupiter. Yeah, like that. And then I'm running this all. Do you mean the, the preface execute just that. Okay, it gives us the expression tree. That's beautiful. Okay. We will come back to learning about that. Later. But yeah, you can basically put a bunch of functions in a row and does interesting things. If you get rid of the parentheses. They fever. All right. Thanks, gang. Enjoy the rest of your day. Thank you very much. Thank you, everybody. Thank you. Thank you. Bye.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 6.08, "text": " Jeremy, on the topic of learning new things, you mentioned today that your colleagues were", "tokens": [17809, 11, 322, 264, 4829, 295, 2539, 777, 721, 11, 291, 2835, 965, 300, 428, 7734, 645], "temperature": 0.0, "avg_logprob": -0.21459966023763022, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.14718420803546906}, {"id": 1, "seek": 0, "start": 6.08, "end": 12.16, "text": " peeved when you spent half of the time learning new things. How did you stand your ground?", "tokens": [21343, 937, 562, 291, 4418, 1922, 295, 264, 565, 2539, 777, 721, 13, 1012, 630, 291, 1463, 428, 2727, 30], "temperature": 0.0, "avg_logprob": -0.21459966023763022, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.14718420803546906}, {"id": 2, "seek": 0, "start": 13.76, "end": 19.52, "text": " I don't know. Just bloody-minded. I don't know.", "tokens": [286, 500, 380, 458, 13, 1449, 18938, 12, 23310, 13, 286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.21459966023763022, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.14718420803546906}, {"id": 3, "seek": 0, "start": 22.48, "end": 25.44, "text": " Was it because you were so productive that it didn't matter?", "tokens": [3027, 309, 570, 291, 645, 370, 13304, 300, 309, 994, 380, 1871, 30], "temperature": 0.0, "avg_logprob": -0.21459966023763022, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.14718420803546906}, {"id": 4, "seek": 2544, "start": 25.44, "end": 36.08, "text": " No, no. I mean, it matters. I mean, most of that time, I was either the manager of a", "tokens": [883, 11, 572, 13, 286, 914, 11, 309, 7001, 13, 286, 914, 11, 881, 295, 300, 565, 11, 286, 390, 2139, 264, 6598, 295, 257], "temperature": 0.0, "avg_logprob": -0.15852081001578988, "compression_ratio": 1.4885057471264367, "no_speech_prob": 2.6668147256714292e-05}, {"id": 5, "seek": 2544, "start": 36.72, "end": 41.760000000000005, "text": " management consulting team or I was the CEO of a company or whatever. So, I mean,", "tokens": [4592, 23682, 1469, 420, 286, 390, 264, 9282, 295, 257, 2237, 420, 2035, 13, 407, 11, 286, 914, 11], "temperature": 0.0, "avg_logprob": -0.15852081001578988, "compression_ratio": 1.4885057471264367, "no_speech_prob": 2.6668147256714292e-05}, {"id": 6, "seek": 2544, "start": 42.96, "end": 48.96, "text": " my first two startups, I wasn't exactly CEO. Nobody had titles. I had co-founders. But yeah,", "tokens": [452, 700, 732, 28041, 11, 286, 2067, 380, 2293, 9282, 13, 9297, 632, 12992, 13, 286, 632, 598, 12, 17493, 433, 13, 583, 1338, 11], "temperature": 0.0, "avg_logprob": -0.15852081001578988, "compression_ratio": 1.4885057471264367, "no_speech_prob": 2.6668147256714292e-05}, {"id": 7, "seek": 4896, "start": 48.96, "end": 57.2, "text": " in the end, it's like, this is how I do things. But I'm not going to say it didn't create friction.", "tokens": [294, 264, 917, 11, 309, 311, 411, 11, 341, 307, 577, 286, 360, 721, 13, 583, 286, 478, 406, 516, 281, 584, 309, 994, 380, 1884, 17710, 13], "temperature": 0.0, "avg_logprob": -0.13849247142832766, "compression_ratio": 1.5391705069124424, "no_speech_prob": 3.118635868304409e-05}, {"id": 8, "seek": 4896, "start": 60.32, "end": 63.68, "text": " I mean, I don't know. What do you think, Hamil? You work with me and you see how I", "tokens": [286, 914, 11, 286, 500, 380, 458, 13, 708, 360, 291, 519, 11, 8234, 388, 30, 509, 589, 365, 385, 293, 291, 536, 577, 286], "temperature": 0.0, "avg_logprob": -0.13849247142832766, "compression_ratio": 1.5391705069124424, "no_speech_prob": 3.118635868304409e-05}, {"id": 9, "seek": 4896, "start": 65.28, "end": 68.32, "text": " jump onto totally different things when we're meant to be focused on something.", "tokens": [3012, 3911, 3879, 819, 721, 562, 321, 434, 4140, 281, 312, 5178, 322, 746, 13], "temperature": 0.0, "avg_logprob": -0.13849247142832766, "compression_ratio": 1.5391705069124424, "no_speech_prob": 3.118635868304409e-05}, {"id": 10, "seek": 6832, "start": 68.32, "end": 78.08, "text": " I actually don't see you getting distracted that much, at least for me.", "tokens": [286, 767, 500, 380, 536, 291, 1242, 21658, 300, 709, 11, 412, 1935, 337, 385, 13], "temperature": 0.0, "avg_logprob": -0.248298802095301, "compression_ratio": 1.5024630541871922, "no_speech_prob": 8.396638804697432e-06}, {"id": 11, "seek": 6832, "start": 78.96, "end": 83.36, "text": " Like we're talking about APL right now when we're meant to actually be focused on", "tokens": [1743, 321, 434, 1417, 466, 5372, 43, 558, 586, 562, 321, 434, 4140, 281, 767, 312, 5178, 322], "temperature": 0.0, "avg_logprob": -0.248298802095301, "compression_ratio": 1.5024630541871922, "no_speech_prob": 8.396638804697432e-06}, {"id": 12, "seek": 6832, "start": 83.36, "end": 85.91999999999999, "text": " releasing NB dev and not meant to be doing the course.", "tokens": [16327, 426, 33, 1905, 293, 406, 4140, 281, 312, 884, 264, 1164, 13], "temperature": 0.0, "avg_logprob": -0.248298802095301, "compression_ratio": 1.5024630541871922, "no_speech_prob": 8.396638804697432e-06}, {"id": 13, "seek": 6832, "start": 85.91999999999999, "end": 95.75999999999999, "text": " I see. Okay. No, yeah. Okay. Yeah. In hindsight, it looks like it was all part of a genius plan.", "tokens": [286, 536, 13, 1033, 13, 883, 11, 1338, 13, 1033, 13, 865, 13, 682, 44357, 11, 309, 1542, 411, 309, 390, 439, 644, 295, 257, 14017, 1393, 13], "temperature": 0.0, "avg_logprob": -0.248298802095301, "compression_ratio": 1.5024630541871922, "no_speech_prob": 8.396638804697432e-06}, {"id": 14, "seek": 9576, "start": 95.76, "end": 101.04, "text": " Oh, okay. While you're doing it, it's like, why are we doing this? That's how I feel sometimes.", "tokens": [876, 11, 1392, 13, 3987, 291, 434, 884, 309, 11, 309, 311, 411, 11, 983, 366, 321, 884, 341, 30, 663, 311, 577, 286, 841, 2171, 13], "temperature": 0.0, "avg_logprob": -0.2462564695865736, "compression_ratio": 1.5947136563876652, "no_speech_prob": 1.5442339645233005e-05}, {"id": 15, "seek": 9576, "start": 101.92, "end": 106.64, "text": " But then it's kind of like that thing we did with Rich. I don't know if you remember that.", "tokens": [583, 550, 309, 311, 733, 295, 411, 300, 551, 321, 630, 365, 6781, 13, 286, 500, 380, 458, 498, 291, 1604, 300, 13], "temperature": 0.0, "avg_logprob": -0.2462564695865736, "compression_ratio": 1.5947136563876652, "no_speech_prob": 1.5442339645233005e-05}, {"id": 16, "seek": 9576, "start": 106.64, "end": 118.08000000000001, "text": " Oh, with GH Top, with your old CEO. We re-staged it as his thing using Rich. Yeah.", "tokens": [876, 11, 365, 40690, 8840, 11, 365, 428, 1331, 9282, 13, 492, 319, 12, 372, 2980, 309, 382, 702, 551, 1228, 6781, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.2462564695865736, "compression_ratio": 1.5947136563876652, "no_speech_prob": 1.5442339645233005e-05}, {"id": 17, "seek": 9576, "start": 118.88000000000001, "end": 123.44, "text": " Like we spent so much time doing that. And while we were doing it, I was like, why are we...", "tokens": [1743, 321, 4418, 370, 709, 565, 884, 300, 13, 400, 1339, 321, 645, 884, 309, 11, 286, 390, 411, 11, 983, 366, 321, 485], "temperature": 0.0, "avg_logprob": -0.2462564695865736, "compression_ratio": 1.5947136563876652, "no_speech_prob": 1.5442339645233005e-05}, {"id": 18, "seek": 12344, "start": 123.44, "end": 132.24, "text": " At some point I was like, I don't know if this is worth it. But then Will mentioned that he started", "tokens": [1711, 512, 935, 286, 390, 411, 11, 286, 500, 380, 458, 498, 341, 307, 3163, 309, 13, 583, 550, 3099, 2835, 300, 415, 1409], "temperature": 0.0, "avg_logprob": -0.27336961677275506, "compression_ratio": 1.5471698113207548, "no_speech_prob": 4.637357051251456e-06}, {"id": 19, "seek": 12344, "start": 132.24, "end": 137.68, "text": " his company based upon that project. And I thought, wow, that's a really big impact.", "tokens": [702, 2237, 2361, 3564, 300, 1716, 13, 400, 286, 1194, 11, 6076, 11, 300, 311, 257, 534, 955, 2712, 13], "temperature": 0.0, "avg_logprob": -0.27336961677275506, "compression_ratio": 1.5471698113207548, "no_speech_prob": 4.637357051251456e-06}, {"id": 20, "seek": 12344, "start": 139.35999999999999, "end": 145.92, "text": " And so like... Yeah, so then I just kind of learned over time that it actually...", "tokens": [400, 370, 411, 485, 865, 11, 370, 550, 286, 445, 733, 295, 3264, 670, 565, 300, 309, 767, 485], "temperature": 0.0, "avg_logprob": -0.27336961677275506, "compression_ratio": 1.5471698113207548, "no_speech_prob": 4.637357051251456e-06}, {"id": 21, "seek": 12344, "start": 146.8, "end": 151.92, "text": " You can pivot these things into something productive usually.", "tokens": [509, 393, 14538, 613, 721, 666, 746, 13304, 2673, 13], "temperature": 0.0, "avg_logprob": -0.27336961677275506, "compression_ratio": 1.5471698113207548, "no_speech_prob": 4.637357051251456e-06}, {"id": 22, "seek": 15192, "start": 151.92, "end": 160.16, "text": " Yeah. So this company, textualize.io, Will, who created it, said came out of", "tokens": [865, 13, 407, 341, 2237, 11, 2487, 901, 1125, 13, 1004, 11, 3099, 11, 567, 2942, 309, 11, 848, 1361, 484, 295], "temperature": 0.0, "avg_logprob": -0.2602184583555977, "compression_ratio": 1.2592592592592593, "no_speech_prob": 3.3075156125050853e-07}, {"id": 23, "seek": 15192, "start": 163.27999999999997, "end": 173.27999999999997, "text": " Amel and I refactoring. There we go. Still the most recent one. So nobody's touched it since.", "tokens": [2012, 338, 293, 286, 1895, 578, 3662, 13, 821, 321, 352, 13, 8291, 264, 881, 5162, 472, 13, 407, 5079, 311, 9828, 309, 1670, 13], "temperature": 0.0, "avg_logprob": -0.2602184583555977, "compression_ratio": 1.2592592592592593, "no_speech_prob": 3.3075156125050853e-07}, {"id": 24, "seek": 17328, "start": 173.28, "end": 183.76, "text": " This rather mega PR. Which yeah, it basically took Rich and", "tokens": [639, 2831, 17986, 11568, 13, 3013, 1338, 11, 309, 1936, 1890, 6781, 293], "temperature": 0.0, "avg_logprob": -0.17866514347217702, "compression_ratio": 1.3419354838709678, "no_speech_prob": 1.1123936928925104e-05}, {"id": 25, "seek": 17328, "start": 186.88, "end": 190.32, "text": " made it do things that Will hadn't exactly expected it to do.", "tokens": [1027, 309, 360, 721, 300, 3099, 8782, 380, 2293, 5176, 309, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.17866514347217702, "compression_ratio": 1.3419354838709678, "no_speech_prob": 1.1123936928925104e-05}, {"id": 26, "seek": 17328, "start": 192.8, "end": 198.24, "text": " This is quite funny because I think yesterday or two days ago, I went to this website,", "tokens": [639, 307, 1596, 4074, 570, 286, 519, 5186, 420, 732, 1708, 2057, 11, 286, 1437, 281, 341, 3144, 11], "temperature": 0.0, "avg_logprob": -0.17866514347217702, "compression_ratio": 1.3419354838709678, "no_speech_prob": 1.1123936928925104e-05}, {"id": 27, "seek": 19824, "start": 198.24, "end": 205.12, "text": " textualize.io and I was thinking, hmm, what does this do? Like how are they planning on", "tokens": [2487, 901, 1125, 13, 1004, 293, 286, 390, 1953, 11, 16478, 11, 437, 775, 341, 360, 30, 1743, 577, 366, 436, 5038, 322], "temperature": 0.0, "avg_logprob": -0.14854342886742125, "compression_ratio": 1.5333333333333334, "no_speech_prob": 8.136755241139326e-06}, {"id": 28, "seek": 19824, "start": 205.84, "end": 210.0, "text": " sending it or what's the plan? I mean, the website is beautifully designed.", "tokens": [7750, 309, 420, 437, 311, 264, 1393, 30, 286, 914, 11, 264, 3144, 307, 16525, 4761, 13], "temperature": 0.0, "avg_logprob": -0.14854342886742125, "compression_ratio": 1.5333333333333334, "no_speech_prob": 8.136755241139326e-06}, {"id": 29, "seek": 19824, "start": 210.0, "end": 215.92000000000002, "text": " So I thought that there must be some business entity behind it. And I just thought, yeah.", "tokens": [407, 286, 1194, 300, 456, 1633, 312, 512, 1606, 13977, 2261, 309, 13, 400, 286, 445, 1194, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.14854342886742125, "compression_ratio": 1.5333333333333334, "no_speech_prob": 8.136755241139326e-06}, {"id": 30, "seek": 19824, "start": 217.92000000000002, "end": 221.28, "text": " Yeah. So it's basically, you know, one guy, although I think he might have... He's got some", "tokens": [865, 13, 407, 309, 311, 1936, 11, 291, 458, 11, 472, 2146, 11, 4878, 286, 519, 415, 1062, 362, 485, 634, 311, 658, 512], "temperature": 0.0, "avg_logprob": -0.14854342886742125, "compression_ratio": 1.5333333333333334, "no_speech_prob": 8.136755241139326e-06}, {"id": 31, "seek": 22128, "start": 221.28, "end": 229.04, "text": " funding. So I think he's hired somebody to help now who loves building CLIs. And so what Hamel", "tokens": [6137, 13, 407, 286, 519, 415, 311, 13144, 2618, 281, 854, 586, 567, 6752, 2390, 12855, 6802, 13, 400, 370, 437, 8234, 338], "temperature": 0.0, "avg_logprob": -0.17671180808025858, "compression_ratio": 1.526530612244898, "no_speech_prob": 6.37535663372546e-07}, {"id": 32, "seek": 22128, "start": 229.04, "end": 234.08, "text": " and I showed with our GH Top thing was that actually you can use another tool he's created", "tokens": [293, 286, 4712, 365, 527, 40690, 8840, 551, 390, 300, 767, 291, 393, 764, 1071, 2290, 415, 311, 2942], "temperature": 0.0, "avg_logprob": -0.17671180808025858, "compression_ratio": 1.526530612244898, "no_speech_prob": 6.37535663372546e-07}, {"id": 33, "seek": 22128, "start": 234.08, "end": 245.04, "text": " called Rich to kind of get a long way towards building terminal user interfaces. Yeah, this is", "tokens": [1219, 6781, 281, 733, 295, 483, 257, 938, 636, 3030, 2390, 14709, 4195, 28416, 13, 865, 11, 341, 307], "temperature": 0.0, "avg_logprob": -0.17671180808025858, "compression_ratio": 1.526530612244898, "no_speech_prob": 6.37535663372546e-07}, {"id": 34, "seek": 22128, "start": 245.04, "end": 249.28, "text": " something I'm trying to take... It's come full circle now that somebody's using textualize to", "tokens": [746, 286, 478, 1382, 281, 747, 485, 467, 311, 808, 1577, 6329, 586, 300, 2618, 311, 1228, 2487, 901, 1125, 281], "temperature": 0.0, "avg_logprob": -0.17671180808025858, "compression_ratio": 1.526530612244898, "no_speech_prob": 6.37535663372546e-07}, {"id": 35, "seek": 24928, "start": 249.28, "end": 253.36, "text": " build a notebook in the terminal. That's true. Which is great.", "tokens": [1322, 257, 21060, 294, 264, 14709, 13, 663, 311, 2074, 13, 3013, 307, 869, 13], "temperature": 0.0, "avg_logprob": -0.1093981942134117, "compression_ratio": 1.3461538461538463, "no_speech_prob": 4.222354618832469e-06}, {"id": 36, "seek": 24928, "start": 256.32, "end": 264.32, "text": " All right. So since I'm on the Mac today, let me just check something. If I switch to a different", "tokens": [1057, 558, 13, 407, 1670, 286, 478, 322, 264, 5707, 965, 11, 718, 385, 445, 1520, 746, 13, 759, 286, 3679, 281, 257, 819], "temperature": 0.0, "avg_logprob": -0.1093981942134117, "compression_ratio": 1.3461538461538463, "no_speech_prob": 4.222354618832469e-06}, {"id": 37, "seek": 26432, "start": 264.32, "end": 282.88, "text": " virtual screen, you guys can now see my terminal. Is that correct? Okay. Great. Yeah. So since I'm", "tokens": [6374, 2568, 11, 291, 1074, 393, 586, 536, 452, 14709, 13, 1119, 300, 3006, 30, 1033, 13, 3769, 13, 865, 13, 407, 1670, 286, 478], "temperature": 0.0, "avg_logprob": -0.12201445190994828, "compression_ratio": 1.2567567567567568, "no_speech_prob": 2.601263759061112e-06}, {"id": 38, "seek": 28288, "start": 282.88, "end": 295.2, "text": " on the Mac, I just downloaded that Jupyter kernel and I unzipped it and ran install.sh. And", "tokens": [322, 264, 5707, 11, 286, 445, 21748, 300, 22125, 88, 391, 28256, 293, 286, 517, 89, 5529, 309, 293, 5872, 3625, 13, 2716, 13, 400], "temperature": 0.0, "avg_logprob": -0.11455064553480881, "compression_ratio": 1.3055555555555556, "no_speech_prob": 1.8447198044668767e-06}, {"id": 39, "seek": 28288, "start": 298.08, "end": 305.6, "text": " it looks like I now have a dialogue APL thing here. So one thing that's happened since yesterday", "tokens": [309, 1542, 411, 286, 586, 362, 257, 10221, 5372, 43, 551, 510, 13, 407, 472, 551, 300, 311, 2011, 1670, 5186], "temperature": 0.0, "avg_logprob": -0.11455064553480881, "compression_ratio": 1.3055555555555556, "no_speech_prob": 1.8447198044668767e-06}, {"id": 40, "seek": 30560, "start": 305.6, "end": 321.28000000000003, "text": " is we now have a GitHub repo. Which... Let's have a look.", "tokens": [307, 321, 586, 362, 257, 23331, 49040, 13, 3013, 485, 961, 311, 362, 257, 574, 13], "temperature": 0.0, "avg_logprob": -0.22855815887451172, "compression_ratio": 0.9661016949152542, "no_speech_prob": 7.071533673297381e-06}, {"id": 41, "seek": 32128, "start": 321.28, "end": 336.4, "text": " APL study. There we go. So I don't have that over here. So let's grab it. So I'll go copy.", "tokens": [5372, 43, 2979, 13, 821, 321, 352, 13, 407, 286, 500, 380, 362, 300, 670, 510, 13, 407, 718, 311, 4444, 309, 13, 407, 286, 603, 352, 5055, 13], "temperature": 0.0, "avg_logprob": -0.25763611566452754, "compression_ratio": 1.3049645390070923, "no_speech_prob": 9.079511983145494e-06}, {"id": 42, "seek": 32128, "start": 338.64, "end": 343.59999999999997, "text": " Yeah. So we've got a fastai.com.au. And really all that's in it at the moment is my notebook.", "tokens": [865, 13, 407, 321, 600, 658, 257, 2370, 1301, 13, 1112, 13, 1459, 13, 400, 534, 439, 300, 311, 294, 309, 412, 264, 1623, 307, 452, 21060, 13], "temperature": 0.0, "avg_logprob": -0.25763611566452754, "compression_ratio": 1.3049645390070923, "no_speech_prob": 9.079511983145494e-06}, {"id": 43, "seek": 34360, "start": 343.6, "end": 350.24, "text": " And so I should be able to now get clone that.", "tokens": [400, 370, 286, 820, 312, 1075, 281, 586, 483, 26506, 300, 13], "temperature": 0.0, "avg_logprob": -0.27054549236686865, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.0782047866086941e-05}, {"id": 44, "seek": 34360, "start": 356.56, "end": 363.44, "text": " There we go. And so I should now be able to open that.", "tokens": [821, 321, 352, 13, 400, 370, 286, 820, 586, 312, 1075, 281, 1269, 300, 13], "temperature": 0.0, "avg_logprob": -0.27054549236686865, "compression_ratio": 1.6344086021505377, "no_speech_prob": 1.0782047866086941e-05}, {"id": 45, "seek": 36344, "start": 363.44, "end": 372.4, "text": " Good. And there I should be able to run it.", "tokens": [2205, 13, 400, 456, 286, 820, 312, 1075, 281, 1190, 309, 13], "temperature": 0.0, "avg_logprob": -0.23055476677127001, "compression_ratio": 1.2818181818181817, "no_speech_prob": 3.500786306176451e-06}, {"id": 46, "seek": 36344, "start": 380.64, "end": 388.8, "text": " All right. Okay. Oh, and then the other thing we did was we installed that toolbar widget thingy,", "tokens": [1057, 558, 13, 1033, 13, 876, 11, 293, 550, 264, 661, 551, 321, 630, 390, 321, 8899, 300, 47715, 34047, 551, 88, 11], "temperature": 0.0, "avg_logprob": -0.23055476677127001, "compression_ratio": 1.2818181818181817, "no_speech_prob": 3.500786306176451e-06}, {"id": 47, "seek": 38880, "start": 388.8, "end": 396.72, "text": " oh, which I've actually already got here. So that's good. So I guess I have to go bookmarks,", "tokens": [1954, 11, 597, 286, 600, 767, 1217, 658, 510, 13, 407, 300, 311, 665, 13, 407, 286, 2041, 286, 362, 281, 352, 1446, 37307, 11], "temperature": 0.0, "avg_logprob": -0.17724257099385166, "compression_ratio": 1.176, "no_speech_prob": 3.1875142667558976e-06}, {"id": 48, "seek": 38880, "start": 398.72, "end": 412.72, "text": " shift, Apple B. APL. Great. So let's see if I can type", "tokens": [5513, 11, 6373, 363, 13, 5372, 43, 13, 3769, 13, 407, 718, 311, 536, 498, 286, 393, 2010], "temperature": 0.0, "avg_logprob": -0.17724257099385166, "compression_ratio": 1.176, "no_speech_prob": 3.1875142667558976e-06}, {"id": 49, "seek": 41272, "start": 412.72, "end": 423.36, "text": " that. That ticked too. Yep. That works. Okay. So I'm back up to where we were on the different", "tokens": [300, 13, 663, 5204, 292, 886, 13, 7010, 13, 663, 1985, 13, 1033, 13, 407, 286, 478, 646, 493, 281, 689, 321, 645, 322, 264, 819], "temperature": 0.0, "avg_logprob": -0.20384567188766767, "compression_ratio": 1.2777777777777777, "no_speech_prob": 1.4969897165428847e-05}, {"id": 50, "seek": 42336, "start": 423.36, "end": 442.64, "text": " computer. So let's do times and divide, shall we? And I guess I should also run dialogue.", "tokens": [3820, 13, 407, 718, 311, 360, 1413, 293, 9845, 11, 4393, 321, 30, 400, 286, 2041, 286, 820, 611, 1190, 10221, 13], "temperature": 0.0, "avg_logprob": -0.1451961719072782, "compression_ratio": 1.0470588235294118, "no_speech_prob": 1.7500588000984862e-05}, {"id": 51, "seek": 44264, "start": 442.64, "end": 454.0, "text": " Okay. And we should also get up our help, which was called dialogue language elements.", "tokens": [1033, 13, 400, 321, 820, 611, 483, 493, 527, 854, 11, 597, 390, 1219, 10221, 2856, 4959, 13], "temperature": 0.0, "avg_logprob": -0.19408384958902994, "compression_ratio": 1.236220472440945, "no_speech_prob": 1.4285014913184568e-05}, {"id": 52, "seek": 45400, "start": 454.0, "end": 471.12, "text": " Cool. All right. Let's do times. So at first it feels a bit weird that", "tokens": [8561, 13, 1057, 558, 13, 961, 311, 360, 1413, 13, 407, 412, 700, 309, 3417, 257, 857, 3657, 300], "temperature": 0.0, "avg_logprob": -0.14507002180272882, "compression_ratio": 1.282258064516129, "no_speech_prob": 8.579175982958986e-07}, {"id": 53, "seek": 45400, "start": 474.96, "end": 481.6, "text": " times and divide are actually on hyphen and equals. But then you realize that like plus,", "tokens": [1413, 293, 9845, 366, 767, 322, 2477, 47059, 293, 6915, 13, 583, 550, 291, 4325, 300, 411, 1804, 11], "temperature": 0.0, "avg_logprob": -0.14507002180272882, "compression_ratio": 1.282258064516129, "no_speech_prob": 8.579175982958986e-07}, {"id": 54, "seek": 48160, "start": 481.6, "end": 485.68, "text": " minus times and divide are all kind of next to each other on the keyboard. So it's not quite", "tokens": [3175, 1413, 293, 9845, 366, 439, 733, 295, 958, 281, 1184, 661, 322, 264, 10186, 13, 407, 309, 311, 406, 1596], "temperature": 0.0, "avg_logprob": -0.07609327166688208, "compression_ratio": 1.3925925925925926, "no_speech_prob": 1.1658772564260289e-05}, {"id": 55, "seek": 48160, "start": 485.68, "end": 496.0, "text": " that weird. I seem to have got used to it pretty quickly. So we can do two times three. So that", "tokens": [300, 3657, 13, 286, 1643, 281, 362, 658, 1143, 281, 309, 1238, 2661, 13, 407, 321, 393, 360, 732, 1413, 1045, 13, 407, 300], "temperature": 0.0, "avg_logprob": -0.07609327166688208, "compression_ratio": 1.3925925925925926, "no_speech_prob": 1.1658772564260289e-05}, {"id": 56, "seek": 49600, "start": 496.0, "end": 513.68, "text": " makes sense. How did you get the APL keyboard on top of Jupyter Notebook? If you go to the forum.", "tokens": [1669, 2020, 13, 1012, 630, 291, 483, 264, 5372, 43, 10186, 322, 1192, 295, 22125, 88, 391, 11633, 2939, 30, 759, 291, 352, 281, 264, 17542, 13], "temperature": 0.0, "avg_logprob": -0.14913777647347287, "compression_ratio": 1.3125, "no_speech_prob": 5.173268164071487e-06}, {"id": 57, "seek": 49600, "start": 514.4, "end": 519.44, "text": " Oh, it's in the forums. Okay. I think, did we discuss it yesterday? I don't quite remember.", "tokens": [876, 11, 309, 311, 294, 264, 26998, 13, 1033, 13, 286, 519, 11, 630, 321, 2248, 309, 5186, 30, 286, 500, 380, 1596, 1604, 13], "temperature": 0.0, "avg_logprob": -0.14913777647347287, "compression_ratio": 1.3125, "no_speech_prob": 5.173268164071487e-06}, {"id": 58, "seek": 51944, "start": 519.44, "end": 526.96, "text": " I saw it. But I just didn't know where to take it from.", "tokens": [286, 1866, 309, 13, 583, 286, 445, 994, 380, 458, 689, 281, 747, 309, 490, 13], "temperature": 0.0, "avg_logprob": -0.3271466791629791, "compression_ratio": 1.063157894736842, "no_speech_prob": 9.570228485245025e-07}, {"id": 59, "seek": 51944, "start": 526.96, "end": 536.08, "text": " Yeah. Okay. So specifically the steps are you", "tokens": [865, 13, 1033, 13, 407, 4682, 264, 4439, 366, 291], "temperature": 0.0, "avg_logprob": -0.3271466791629791, "compression_ratio": 1.063157894736842, "no_speech_prob": 9.570228485245025e-07}, {"id": 60, "seek": 53608, "start": 536.08, "end": 550.64, "text": " do. Here we are. Here's the bookmarklet. So you click here and then you, as it says,", "tokens": [360, 13, 1692, 321, 366, 13, 1692, 311, 264, 1446, 5638, 2631, 13, 407, 291, 2052, 510, 293, 550, 291, 11, 382, 309, 1619, 11], "temperature": 0.0, "avg_logprob": -0.1962609204378995, "compression_ratio": 1.4435483870967742, "no_speech_prob": 2.4679296984686516e-05}, {"id": 61, "seek": 53608, "start": 550.64, "end": 558.8000000000001, "text": " you drag this to your bookmarks bar, this link, and then you go to the Jupyter webpage and you", "tokens": [291, 5286, 341, 281, 428, 1446, 37307, 2159, 11, 341, 2113, 11, 293, 550, 291, 352, 281, 264, 22125, 88, 391, 37852, 293, 291], "temperature": 0.0, "avg_logprob": -0.1962609204378995, "compression_ratio": 1.4435483870967742, "no_speech_prob": 2.4679296984686516e-05}, {"id": 62, "seek": 55880, "start": 558.8, "end": 575.1999999999999, "text": " click that link in your bookmarks bar and it'll appear. Okay. And this thing is called,", "tokens": [2052, 300, 2113, 294, 428, 1446, 37307, 2159, 293, 309, 603, 4204, 13, 1033, 13, 400, 341, 551, 307, 1219, 11], "temperature": 0.0, "avg_logprob": -0.11773664474487305, "compression_ratio": 1.0357142857142858, "no_speech_prob": 6.854006187495543e-06}, {"id": 63, "seek": 57520, "start": 575.2, "end": 595.2800000000001, "text": " not surprisingly, times sign. And the two forms of it are, okay, direction and multiply.", "tokens": [406, 17600, 11, 1413, 1465, 13, 400, 264, 732, 6422, 295, 309, 366, 11, 1392, 11, 3513, 293, 12972, 13], "temperature": 0.0, "avg_logprob": -0.36028937498728436, "compression_ratio": 1.0864197530864197, "no_speech_prob": 2.156798700525542e-06}, {"id": 64, "seek": 59528, "start": 595.28, "end": 614.4, "text": " Oh, it's actually called times. Okay. So obviously we can multiply a scalar by a scalar.", "tokens": [876, 11, 309, 311, 767, 1219, 1413, 13, 1033, 13, 407, 2745, 321, 393, 12972, 257, 39684, 538, 257, 39684, 13], "temperature": 0.0, "avg_logprob": -0.15452109442816842, "compression_ratio": 1.603960396039604, "no_speech_prob": 4.565899871522561e-06}, {"id": 65, "seek": 61440, "start": 614.4, "end": 626.56, "text": " We can multiply a scalar by a list. And we can multiply a list by a list. And remember,", "tokens": [492, 393, 12972, 257, 39684, 538, 257, 1329, 13, 400, 321, 393, 12972, 257, 1329, 538, 257, 1329, 13, 400, 1604, 11], "temperature": 0.0, "avg_logprob": -0.21323645114898682, "compression_ratio": 1.4789915966386555, "no_speech_prob": 1.1544500466698082e-06}, {"id": 66, "seek": 61440, "start": 628.8, "end": 633.76, "text": " just because there's no space here doesn't mean this is one times two. This is this list", "tokens": [445, 570, 456, 311, 572, 1901, 510, 1177, 380, 914, 341, 307, 472, 1413, 732, 13, 639, 307, 341, 1329], "temperature": 0.0, "avg_logprob": -0.21323645114898682, "compression_ratio": 1.4789915966386555, "no_speech_prob": 1.1544500466698082e-06}, {"id": 67, "seek": 63376, "start": 633.76, "end": 645.68, "text": " times this list. So space binds more tightly. Does that make sense so far?", "tokens": [1413, 341, 1329, 13, 407, 1901, 41515, 544, 21952, 13, 4402, 300, 652, 2020, 370, 1400, 30], "temperature": 0.0, "avg_logprob": -0.28021539960588726, "compression_ratio": 1.0, "no_speech_prob": 7.766596354485955e-06}, {"id": 68, "seek": 64568, "start": 645.68, "end": 653.1999999999999, "text": " Yep.", "tokens": [7010, 13], "temperature": 0.0, "avg_logprob": -0.8467284043629965, "compression_ratio": 0.3333333333333333, "no_speech_prob": 2.143377969332505e-05}, {"id": 69, "seek": 65320, "start": 653.2, "end": 668.24, "text": " Yep. Okay. Now monadic times is taking us into", "tokens": [7010, 13, 1033, 13, 823, 1108, 43341, 1413, 307, 1940, 505, 666], "temperature": 0.0, "avg_logprob": -0.22680839538574218, "compression_ratio": 1.0125, "no_speech_prob": 2.245961150038056e-05}, {"id": 70, "seek": 66824, "start": 668.24, "end": 676.64, "text": " a complex world again, which is fun.", "tokens": [257, 3997, 1002, 797, 11, 597, 307, 1019, 13], "temperature": 0.0, "avg_logprob": -0.19806502925025093, "compression_ratio": 1.1546391752577319, "no_speech_prob": 1.0951942385872826e-05}, {"id": 71, "seek": 66824, "start": 689.84, "end": 696.48, "text": " Let's see what it says. Direction. So again, we look over to the top right.", "tokens": [961, 311, 536, 437, 309, 1619, 13, 5822, 882, 13, 407, 797, 11, 321, 574, 670, 281, 264, 1192, 558, 13], "temperature": 0.0, "avg_logprob": -0.19806502925025093, "compression_ratio": 1.1546391752577319, "no_speech_prob": 1.0951942385872826e-05}, {"id": 72, "seek": 69648, "start": 696.48, "end": 706.0, "text": " Okay, that says R is the result of doing times on Y. Y is any numeric array. Okay. When an element", "tokens": [1033, 11, 300, 1619, 497, 307, 264, 1874, 295, 884, 1413, 322, 398, 13, 398, 307, 604, 7866, 299, 10225, 13, 1033, 13, 1133, 364, 4478], "temperature": 0.0, "avg_logprob": -0.1697818956877056, "compression_ratio": 1.5957446808510638, "no_speech_prob": 5.255305950413458e-06}, {"id": 73, "seek": 69648, "start": 706.0, "end": 711.2, "text": " of Y is real, the corresponding element of the result is an integer whose value indicates", "tokens": [295, 398, 307, 957, 11, 264, 11760, 4478, 295, 264, 1874, 307, 364, 24922, 6104, 2158, 16203], "temperature": 0.0, "avg_logprob": -0.1697818956877056, "compression_ratio": 1.5957446808510638, "no_speech_prob": 5.255305950413458e-06}, {"id": 74, "seek": 69648, "start": 711.2, "end": 715.84, "text": " whether the value is negative, zero, or positive. So this is what we'd normally call the sign", "tokens": [1968, 264, 2158, 307, 3671, 11, 4018, 11, 420, 3353, 13, 407, 341, 307, 437, 321, 1116, 5646, 818, 264, 1465], "temperature": 0.0, "avg_logprob": -0.1697818956877056, "compression_ratio": 1.5957446808510638, "no_speech_prob": 5.255305950413458e-06}, {"id": 75, "seek": 69648, "start": 715.84, "end": 724.24, "text": " function in most languages. And often in math it's called that as well. And so just to check", "tokens": [2445, 294, 881, 8650, 13, 400, 2049, 294, 5221, 309, 311, 1219, 300, 382, 731, 13, 400, 370, 445, 281, 1520], "temperature": 0.0, "avg_logprob": -0.1697818956877056, "compression_ratio": 1.5957446808510638, "no_speech_prob": 5.255305950413458e-06}, {"id": 76, "seek": 72424, "start": 724.24, "end": 731.44, "text": " here, 3.1 is positive, so that returns 1. Negative 2 is negative, so that returns negative 1.", "tokens": [510, 11, 805, 13, 16, 307, 3353, 11, 370, 300, 11247, 502, 13, 43230, 568, 307, 3671, 11, 370, 300, 11247, 3671, 502, 13], "temperature": 0.0, "avg_logprob": -0.26301407447228065, "compression_ratio": 1.5827814569536425, "no_speech_prob": 6.144121471152175e-06}, {"id": 77, "seek": 72424, "start": 733.04, "end": 742.4, "text": " And zero is neither, so that returns zero. Okay, so those ones okay? So this is showing us this sign,", "tokens": [400, 4018, 307, 9662, 11, 370, 300, 11247, 4018, 13, 1033, 11, 370, 729, 2306, 1392, 30, 407, 341, 307, 4099, 505, 341, 1465, 11], "temperature": 0.0, "avg_logprob": -0.26301407447228065, "compression_ratio": 1.5827814569536425, "no_speech_prob": 6.144121471152175e-06}, {"id": 78, "seek": 72424, "start": 742.4, "end": 745.52, "text": " which they call direction. Complex numbers.", "tokens": [597, 436, 818, 3513, 13, 41184, 3547, 13], "temperature": 0.0, "avg_logprob": -0.26301407447228065, "compression_ratio": 1.5827814569536425, "no_speech_prob": 6.144121471152175e-06}, {"id": 79, "seek": 74552, "start": 745.52, "end": 756.88, "text": " Complex numbers. The corresponding element is a number with the same phase, but with magnitude of 1.", "tokens": [41184, 3547, 13, 440, 11760, 4478, 307, 257, 1230, 365, 264, 912, 5574, 11, 457, 365, 15668, 295, 502, 13], "temperature": 0.0, "avg_logprob": -0.11456484910918445, "compression_ratio": 1.282258064516129, "no_speech_prob": 1.459356667510292e-06}, {"id": 80, "seek": 74552, "start": 760.72, "end": 766.3199999999999, "text": " It's equivalent to this. So let's find out what this does.", "tokens": [467, 311, 10344, 281, 341, 13, 407, 718, 311, 915, 484, 437, 341, 775, 13], "temperature": 0.0, "avg_logprob": -0.11456484910918445, "compression_ratio": 1.282258064516129, "no_speech_prob": 1.459356667510292e-06}, {"id": 81, "seek": 76632, "start": 766.32, "end": 774.24, "text": " I think that'll give you the absolute value.", "tokens": [286, 519, 300, 603, 976, 291, 264, 8236, 2158, 13], "temperature": 0.0, "avg_logprob": -0.2705753695580267, "compression_ratio": 1.2134831460674158, "no_speech_prob": 3.237613100282033e-06}, {"id": 82, "seek": 76632, "start": 778.6400000000001, "end": 782.72, "text": " Yeah, magnitude they call it. The absolute value.", "tokens": [865, 11, 15668, 436, 818, 309, 13, 440, 8236, 2158, 13], "temperature": 0.0, "avg_logprob": -0.2705753695580267, "compression_ratio": 1.2134831460674158, "no_speech_prob": 3.237613100282033e-06}, {"id": 83, "seek": 78272, "start": 782.72, "end": 808.48, "text": " So direction is... What does that mean for complex?", "tokens": [407, 3513, 307, 485, 708, 775, 300, 914, 337, 3997, 30], "temperature": 0.0, "avg_logprob": -0.5491920471191406, "compression_ratio": 0.9107142857142857, "no_speech_prob": 1.733026124384196e-06}, {"id": 84, "seek": 80848, "start": 808.48, "end": 817.44, "text": " Does that give either i or negative i? I guess we should try it. Is that just a regular bar?", "tokens": [4402, 300, 976, 2139, 741, 420, 3671, 741, 30, 286, 2041, 321, 820, 853, 309, 13, 1119, 300, 445, 257, 3890, 2159, 30], "temperature": 0.0, "avg_logprob": -0.17743682861328125, "compression_ratio": 1.2677165354330708, "no_speech_prob": 1.6536566818103893e-06}, {"id": 85, "seek": 80848, "start": 822.88, "end": 832.96, "text": " See. It is. Okay. So it's actually something a bit more interesting.", "tokens": [3008, 13, 467, 307, 13, 1033, 13, 407, 309, 311, 767, 746, 257, 857, 544, 1880, 13], "temperature": 0.0, "avg_logprob": -0.17743682861328125, "compression_ratio": 1.2677165354330708, "no_speech_prob": 1.6536566818103893e-06}, {"id": 86, "seek": 83296, "start": 832.96, "end": 838.32, "text": " I think this is gonna... I mean if you visualize it as a vector,", "tokens": [286, 519, 341, 307, 799, 485, 286, 914, 498, 291, 23273, 309, 382, 257, 8062, 11], "temperature": 0.0, "avg_logprob": -0.28598599433898925, "compression_ratio": 1.482233502538071, "no_speech_prob": 7.411015303659951e-06}, {"id": 87, "seek": 83296, "start": 838.32, "end": 842.24, "text": " it's just gonna normalize the vector to magnitude 1.", "tokens": [309, 311, 445, 799, 2710, 1125, 264, 8062, 281, 15668, 502, 13], "temperature": 0.0, "avg_logprob": -0.28598599433898925, "compression_ratio": 1.482233502538071, "no_speech_prob": 7.411015303659951e-06}, {"id": 88, "seek": 83296, "start": 846.24, "end": 851.9200000000001, "text": " Yes, that's gonna require some drawing, I think. I just want to get up the", "tokens": [1079, 11, 300, 311, 799, 3651, 512, 6316, 11, 286, 519, 13, 286, 445, 528, 281, 483, 493, 264], "temperature": 0.0, "avg_logprob": -0.28598599433898925, "compression_ratio": 1.482233502538071, "no_speech_prob": 7.411015303659951e-06}, {"id": 89, "seek": 83296, "start": 853.44, "end": 859.76, "text": " documentation to see how to describe it. Magnitude of a complex number. Okay, great. So we're gonna", "tokens": [14333, 281, 536, 577, 281, 6786, 309, 13, 19664, 4377, 295, 257, 3997, 1230, 13, 1033, 11, 869, 13, 407, 321, 434, 799], "temperature": 0.0, "avg_logprob": -0.28598599433898925, "compression_ratio": 1.482233502538071, "no_speech_prob": 7.411015303659951e-06}, {"id": 90, "seek": 85976, "start": 859.76, "end": 864.3199999999999, "text": " do some more complex number stuff, which is cool.", "tokens": [360, 512, 544, 3997, 1230, 1507, 11, 597, 307, 1627, 13], "temperature": 0.0, "avg_logprob": -0.23427067246547964, "compression_ratio": 1.218487394957983, "no_speech_prob": 0.00014621940499637276}, {"id": 91, "seek": 85976, "start": 877.52, "end": 888.0, "text": " I have a quick question. Yeah. So I think so far the glyphs for monadic and dyadic are the same", "tokens": [286, 362, 257, 1702, 1168, 13, 865, 13, 407, 286, 519, 370, 1400, 264, 22633, 950, 82, 337, 1108, 43341, 293, 14584, 43341, 366, 264, 912], "temperature": 0.0, "avg_logprob": -0.23427067246547964, "compression_ratio": 1.218487394957983, "no_speech_prob": 0.00014621940499637276}, {"id": 92, "seek": 88800, "start": 888.0, "end": 894.8, "text": " for all the glyphs that we've looked at except for the minus sign, which uses a different one.", "tokens": [337, 439, 264, 22633, 950, 82, 300, 321, 600, 2956, 412, 3993, 337, 264, 3175, 1465, 11, 597, 4960, 257, 819, 472, 13], "temperature": 0.0, "avg_logprob": -0.11699306263643153, "compression_ratio": 1.5633802816901408, "no_speech_prob": 4.398211240186356e-05}, {"id": 93, "seek": 88800, "start": 894.8, "end": 897.52, "text": " Do you know why that is? No, they're always the same.", "tokens": [1144, 291, 458, 983, 300, 307, 30, 883, 11, 436, 434, 1009, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.11699306263643153, "compression_ratio": 1.5633802816901408, "no_speech_prob": 4.398211240186356e-05}, {"id": 94, "seek": 88800, "start": 898.4, "end": 904.08, "text": " Always the same. Yeah. I think what you might be getting confused about is the difference between", "tokens": [11270, 264, 912, 13, 865, 13, 286, 519, 437, 291, 1062, 312, 1242, 9019, 466, 307, 264, 2649, 1296], "temperature": 0.0, "avg_logprob": -0.11699306263643153, "compression_ratio": 1.5633802816901408, "no_speech_prob": 4.398211240186356e-05}, {"id": 95, "seek": 88800, "start": 906.24, "end": 913.68, "text": " the thing that lets you specify a negative number, which is that, versus the function,", "tokens": [264, 551, 300, 6653, 291, 16500, 257, 3671, 1230, 11, 597, 307, 300, 11, 5717, 264, 2445, 11], "temperature": 0.0, "avg_logprob": -0.11699306263643153, "compression_ratio": 1.5633802816901408, "no_speech_prob": 4.398211240186356e-05}, {"id": 96, "seek": 91368, "start": 913.68, "end": 916.2399999999999, "text": " which takes the negative of an array, which is that.", "tokens": [597, 2516, 264, 3671, 295, 364, 10225, 11, 597, 307, 300, 13], "temperature": 0.0, "avg_logprob": -0.282042814760792, "compression_ratio": 1.8095238095238095, "no_speech_prob": 1.482330617363914e-06}, {"id": 97, "seek": 91368, "start": 918.9599999999999, "end": 924.3199999999999, "text": " Oh, I see. That's not a function. This binds more tightly than a function. This is actually,", "tokens": [876, 11, 286, 536, 13, 663, 311, 406, 257, 2445, 13, 639, 41515, 544, 21952, 813, 257, 2445, 13, 639, 307, 767, 11], "temperature": 0.0, "avg_logprob": -0.282042814760792, "compression_ratio": 1.8095238095238095, "no_speech_prob": 1.482330617363914e-06}, {"id": 98, "seek": 91368, "start": 924.3199999999999, "end": 931.1999999999999, "text": " this is more like... The dot here is not a function, right? It's part of the literal number 2.3.", "tokens": [341, 307, 544, 411, 485, 440, 5893, 510, 307, 406, 257, 2445, 11, 558, 30, 467, 311, 644, 295, 264, 20411, 1230, 568, 13, 18, 13], "temperature": 0.0, "avg_logprob": -0.282042814760792, "compression_ratio": 1.8095238095238095, "no_speech_prob": 1.482330617363914e-06}, {"id": 99, "seek": 91368, "start": 932.3199999999999, "end": 938.3199999999999, "text": " Okay. Is it the same as Jane? The negative is not a function. It's part of the number negative 2.3.", "tokens": [1033, 13, 1119, 309, 264, 912, 382, 13048, 30, 440, 3671, 307, 406, 257, 2445, 13, 467, 311, 644, 295, 264, 1230, 3671, 568, 13, 18, 13], "temperature": 0.0, "avg_logprob": -0.282042814760792, "compression_ratio": 1.8095238095238095, "no_speech_prob": 1.482330617363914e-06}, {"id": 100, "seek": 93832, "start": 938.32, "end": 946.6400000000001, "text": " Okay. Thanks. No worries. So if I do this, this is not saying apply the negative function to these", "tokens": [1033, 13, 2561, 13, 883, 16340, 13, 407, 498, 286, 360, 341, 11, 341, 307, 406, 1566, 3079, 264, 3671, 2445, 281, 613], "temperature": 0.0, "avg_logprob": -0.23767020485617898, "compression_ratio": 1.6914285714285715, "no_speech_prob": 3.7262968817231013e-06}, {"id": 101, "seek": 93832, "start": 946.6400000000001, "end": 953.36, "text": " four things. It's saying this is a list containing this negative number and this positive number.", "tokens": [1451, 721, 13, 467, 311, 1566, 341, 307, 257, 1329, 19273, 341, 3671, 1230, 293, 341, 3353, 1230, 13], "temperature": 0.0, "avg_logprob": -0.23767020485617898, "compression_ratio": 1.6914285714285715, "no_speech_prob": 3.7262968817231013e-06}, {"id": 102, "seek": 93832, "start": 956.08, "end": 962.08, "text": " So if I wanted to negate those four things, I would have to do this. Yeah. So hyphen is a function.", "tokens": [407, 498, 286, 1415, 281, 2485, 473, 729, 1451, 721, 11, 286, 576, 362, 281, 360, 341, 13, 865, 13, 407, 2477, 47059, 307, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.23767020485617898, "compression_ratio": 1.6914285714285715, "no_speech_prob": 3.7262968817231013e-06}, {"id": 103, "seek": 96208, "start": 962.08, "end": 972.64, "text": " And this upper bar thing is just part of a number, not a function. Just like dot is part of a number.", "tokens": [400, 341, 6597, 2159, 551, 307, 445, 644, 295, 257, 1230, 11, 406, 257, 2445, 13, 1449, 411, 5893, 307, 644, 295, 257, 1230, 13], "temperature": 0.0, "avg_logprob": -0.5256820917129517, "compression_ratio": 1.7903225806451613, "no_speech_prob": 4.8602073547954205e-06}, {"id": 104, "seek": 96208, "start": 972.64, "end": 974.64, "text": " Just like J is part of a number.", "tokens": [1449, 411, 508, 307, 644, 295, 257, 1230, 13], "temperature": 0.0, "avg_logprob": -0.5256820917129517, "compression_ratio": 1.7903225806451613, "no_speech_prob": 4.8602073547954205e-06}, {"id": 105, "seek": 96208, "start": 979.6800000000001, "end": 988.6400000000001, "text": " Jeremy, so this JavaScript keyboard, it's a function. It's a function. It's a function.", "tokens": [17809, 11, 370, 341, 15778, 10186, 11, 309, 311, 257, 2445, 13, 467, 311, 257, 2445, 13, 467, 311, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.5256820917129517, "compression_ratio": 1.7903225806451613, "no_speech_prob": 4.8602073547954205e-06}, {"id": 106, "seek": 98864, "start": 988.64, "end": 997.6, "text": " This JavaScript keyboard, it gives, when you hover over a symbol, it gives these key bindings", "tokens": [639, 15778, 10186, 11, 309, 2709, 11, 562, 291, 20076, 670, 257, 5986, 11, 309, 2709, 613, 2141, 14786, 1109], "temperature": 0.0, "avg_logprob": -0.10461108325278923, "compression_ratio": 1.541899441340782, "no_speech_prob": 4.7848643589532e-06}, {"id": 107, "seek": 98864, "start": 998.16, "end": 1004.96, "text": " that work with a regular keyboard, not APL keyboard. But it would be preferred to use", "tokens": [300, 589, 365, 257, 3890, 10186, 11, 406, 5372, 43, 10186, 13, 583, 309, 576, 312, 16494, 281, 764], "temperature": 0.0, "avg_logprob": -0.10461108325278923, "compression_ratio": 1.541899441340782, "no_speech_prob": 4.7848643589532e-06}, {"id": 108, "seek": 98864, "start": 1004.96, "end": 1014.96, "text": " the APL keyboard, right? No, not at all. They're the same. The difference is an APL keyboard has", "tokens": [264, 5372, 43, 10186, 11, 558, 30, 883, 11, 406, 412, 439, 13, 814, 434, 264, 912, 13, 440, 2649, 307, 364, 5372, 43, 10186, 575], "temperature": 0.0, "avg_logprob": -0.10461108325278923, "compression_ratio": 1.541899441340782, "no_speech_prob": 4.7848643589532e-06}, {"id": 109, "seek": 101496, "start": 1014.96, "end": 1021.6, "text": " pictures of those letters on them. But they produce the same things. You still have to have", "tokens": [5242, 295, 729, 7825, 322, 552, 13, 583, 436, 5258, 264, 912, 721, 13, 509, 920, 362, 281, 362], "temperature": 0.0, "avg_logprob": -0.14617330020235986, "compression_ratio": 1.638655462184874, "no_speech_prob": 6.642999323958065e-06}, {"id": 110, "seek": 101496, "start": 1021.6, "end": 1027.92, "text": " the same software, whatever. So the only reason to have an APL physical keyboard is so that you can", "tokens": [264, 912, 4722, 11, 2035, 13, 407, 264, 787, 1778, 281, 362, 364, 5372, 43, 4001, 10186, 307, 370, 300, 291, 393], "temperature": 0.0, "avg_logprob": -0.14617330020235986, "compression_ratio": 1.638655462184874, "no_speech_prob": 6.642999323958065e-06}, {"id": 111, "seek": 101496, "start": 1027.92, "end": 1034.48, "text": " look at the keyboard and see the symbols. I got it. I was thinking about the APL keyboard in Windows.", "tokens": [574, 412, 264, 10186, 293, 536, 264, 16944, 13, 286, 658, 309, 13, 286, 390, 1953, 466, 264, 5372, 43, 10186, 294, 8591, 13], "temperature": 0.0, "avg_logprob": -0.14617330020235986, "compression_ratio": 1.638655462184874, "no_speech_prob": 6.642999323958065e-06}, {"id": 112, "seek": 101496, "start": 1034.88, "end": 1042.72, "text": " Oh, in Windows? Okay. Because these things, the JavaScript applet thing here, it gives you other", "tokens": [876, 11, 294, 8591, 30, 1033, 13, 1436, 613, 721, 11, 264, 15778, 724, 2631, 551, 510, 11, 309, 2709, 291, 661], "temperature": 0.0, "avg_logprob": -0.14617330020235986, "compression_ratio": 1.638655462184874, "no_speech_prob": 6.642999323958065e-06}, {"id": 113, "seek": 104272, "start": 1042.72, "end": 1051.52, "text": " bindings that work with the regular keyboard. Like xx tab is for multiplication. Yeah. Oh, okay. So,", "tokens": [14786, 1109, 300, 589, 365, 264, 3890, 10186, 13, 1743, 2031, 87, 4421, 307, 337, 27290, 13, 865, 13, 876, 11, 1392, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.1872143064226423, "compression_ratio": 1.5967078189300412, "no_speech_prob": 7.646350240975153e-06}, {"id": 114, "seek": 104272, "start": 1051.52, "end": 1060.0, "text": " I suggest not using those. Instead, use, at the very bottom, it says back tick dash. Use that one.", "tokens": [286, 3402, 406, 1228, 729, 13, 7156, 11, 764, 11, 412, 264, 588, 2767, 11, 309, 1619, 646, 5204, 8240, 13, 8278, 300, 472, 13], "temperature": 0.0, "avg_logprob": -0.1872143064226423, "compression_ratio": 1.5967078189300412, "no_speech_prob": 7.646350240975153e-06}, {"id": 115, "seek": 104272, "start": 1060.0, "end": 1065.28, "text": " Because those are identical to the Windows keyboard. So you just use back tick followed by", "tokens": [1436, 729, 366, 14800, 281, 264, 8591, 10186, 13, 407, 291, 445, 764, 646, 5204, 6263, 538], "temperature": 0.0, "avg_logprob": -0.1872143064226423, "compression_ratio": 1.5967078189300412, "no_speech_prob": 7.646350240975153e-06}, {"id": 116, "seek": 106528, "start": 1065.28, "end": 1072.32, "text": " the same letter you would use in the Windows keyboard. And so here, this one is back tick equals.", "tokens": [264, 912, 5063, 291, 576, 764, 294, 264, 8591, 10186, 13, 400, 370, 510, 11, 341, 472, 307, 646, 5204, 6915, 13], "temperature": 0.0, "avg_logprob": -0.182736447652181, "compression_ratio": 1.5934065934065933, "no_speech_prob": 7.646229278179817e-06}, {"id": 117, "seek": 106528, "start": 1075.04, "end": 1082.6399999999999, "text": " Yeah, I would ignore those tab ones. Okay. But this also works with just a regular Windows keyboard.", "tokens": [865, 11, 286, 576, 11200, 729, 4421, 2306, 13, 1033, 13, 583, 341, 611, 1985, 365, 445, 257, 3890, 8591, 10186, 13], "temperature": 0.0, "avg_logprob": -0.182736447652181, "compression_ratio": 1.5934065934065933, "no_speech_prob": 7.646229278179817e-06}, {"id": 118, "seek": 106528, "start": 1082.6399999999999, "end": 1089.36, "text": " Should I be using the APL keyboard? Yeah, you can use the Windows APL keyboard if you want.", "tokens": [6454, 286, 312, 1228, 264, 5372, 43, 10186, 30, 865, 11, 291, 393, 764, 264, 8591, 5372, 43, 10186, 498, 291, 528, 13], "temperature": 0.0, "avg_logprob": -0.182736447652181, "compression_ratio": 1.5934065934065933, "no_speech_prob": 7.646229278179817e-06}, {"id": 119, "seek": 108936, "start": 1089.36, "end": 1094.8799999999999, "text": " So I'm not using that right now because I am not on Windows. But even on Windows, I actually prefer", "tokens": [407, 286, 478, 406, 1228, 300, 558, 586, 570, 286, 669, 406, 322, 8591, 13, 583, 754, 322, 8591, 11, 286, 767, 4382], "temperature": 0.0, "avg_logprob": -0.2171357098747702, "compression_ratio": 1.635135135135135, "no_speech_prob": 4.610756877809763e-05}, {"id": 120, "seek": 108936, "start": 1094.8799999999999, "end": 1099.1999999999998, "text": " not to use it because it takes away my control key. And I like my control key.", "tokens": [406, 281, 764, 309, 570, 309, 2516, 1314, 452, 1969, 2141, 13, 400, 286, 411, 452, 1969, 2141, 13], "temperature": 0.0, "avg_logprob": -0.2171357098747702, "compression_ratio": 1.635135135135135, "no_speech_prob": 4.610756877809763e-05}, {"id": 121, "seek": 108936, "start": 1100.1599999999999, "end": 1107.28, "text": " Yes. So the back tick notation, the one on the bottom here, will be the preferred one.", "tokens": [1079, 13, 407, 264, 646, 5204, 24657, 11, 264, 472, 322, 264, 2767, 510, 11, 486, 312, 264, 16494, 472, 13], "temperature": 0.0, "avg_logprob": -0.2171357098747702, "compression_ratio": 1.635135135135135, "no_speech_prob": 4.610756877809763e-05}, {"id": 122, "seek": 108936, "start": 1108.1599999999999, "end": 1114.32, "text": " It's what I'm liking so far. But obviously, I'm very new to this. So I don't take my word for it.", "tokens": [467, 311, 437, 286, 478, 16933, 370, 1400, 13, 583, 2745, 11, 286, 478, 588, 777, 281, 341, 13, 407, 286, 500, 380, 747, 452, 1349, 337, 309, 13], "temperature": 0.0, "avg_logprob": -0.2171357098747702, "compression_ratio": 1.635135135135135, "no_speech_prob": 4.610756877809763e-05}, {"id": 123, "seek": 111432, "start": 1114.32, "end": 1120.08, "text": " But yeah, I like the back tick approach because it tends to use that as well.", "tokens": [583, 1338, 11, 286, 411, 264, 646, 5204, 3109, 570, 309, 12258, 281, 764, 300, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.3638614307750355, "compression_ratio": 1.3223684210526316, "no_speech_prob": 1.0288732482877094e-05}, {"id": 124, "seek": 111432, "start": 1120.08, "end": 1124.8, "text": " Let's use copy and paste and everything in the usual way. Yeah.", "tokens": [961, 311, 764, 5055, 293, 9163, 293, 1203, 294, 264, 7713, 636, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.3638614307750355, "compression_ratio": 1.3223684210526316, "no_speech_prob": 1.0288732482877094e-05}, {"id": 125, "seek": 111432, "start": 1128.8799999999999, "end": 1132.32, "text": " Okay, let's talk about complex numbers some more, shall we?", "tokens": [1033, 11, 718, 311, 751, 466, 3997, 3547, 512, 544, 11, 4393, 321, 30], "temperature": 0.0, "avg_logprob": -0.3638614307750355, "compression_ratio": 1.3223684210526316, "no_speech_prob": 1.0288732482877094e-05}, {"id": 126, "seek": 113232, "start": 1132.32, "end": 1138.72, "text": " So yeah, this is one of those things I didn't really get into much at university.", "tokens": [407, 1338, 11, 341, 307, 472, 295, 729, 721, 286, 994, 380, 534, 483, 666, 709, 412, 5454, 13], "temperature": 0.0, "avg_logprob": -0.5072288513183594, "compression_ratio": 1.2372881355932204, "no_speech_prob": 4.756645648740232e-05}, {"id": 127, "seek": 113232, "start": 1138.72, "end": 1141.12, "text": " I mean, I wish somebody told me how cool they are.", "tokens": [286, 914, 11, 286, 3172, 2618, 1907, 385, 577, 1627, 436, 366, 13], "temperature": 0.0, "avg_logprob": -0.5072288513183594, "compression_ratio": 1.2372881355932204, "no_speech_prob": 4.756645648740232e-05}, {"id": 128, "seek": 113232, "start": 1147.9199999999998, "end": 1149.9199999999998, "text": " Turn on my...", "tokens": [7956, 322, 452, 485], "temperature": 0.0, "avg_logprob": -0.5072288513183594, "compression_ratio": 1.2372881355932204, "no_speech_prob": 4.756645648740232e-05}, {"id": 129, "seek": 114992, "start": 1149.92, "end": 1167.52, "text": " Okay, so the thing I guess we talked about yesterday is how we can create this complex", "tokens": [1033, 11, 370, 264, 551, 286, 2041, 321, 2825, 466, 5186, 307, 577, 321, 393, 1884, 341, 3997], "temperature": 0.0, "avg_logprob": -0.13694719935572425, "compression_ratio": 1.2713178294573644, "no_speech_prob": 3.392985490791034e-06}, {"id": 130, "seek": 114992, "start": 1167.52, "end": 1175.52, "text": " number plane, right? And so along this axis, you've got the real number line.", "tokens": [1230, 5720, 11, 558, 30, 400, 370, 2051, 341, 10298, 11, 291, 600, 658, 264, 957, 1230, 1622, 13], "temperature": 0.0, "avg_logprob": -0.13694719935572425, "compression_ratio": 1.2713178294573644, "no_speech_prob": 3.392985490791034e-06}, {"id": 131, "seek": 117552, "start": 1175.52, "end": 1185.6, "text": " And then along this axis, you've got the imaginary number line.", "tokens": [400, 550, 2051, 341, 10298, 11, 291, 600, 658, 264, 26164, 1230, 1622, 13], "temperature": 0.0, "avg_logprob": -0.49973526867953216, "compression_ratio": 0.9452054794520548, "no_speech_prob": 1.92212792171631e-05}, {"id": 132, "seek": 117552, "start": 1190.56, "end": 1192.56, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.49973526867953216, "compression_ratio": 0.9452054794520548, "no_speech_prob": 1.92212792171631e-05}, {"id": 133, "seek": 119256, "start": 1192.56, "end": 1206.96, "text": " So you can put numbers there. For example, here's the number 2.", "tokens": [407, 291, 393, 829, 3547, 456, 13, 1171, 1365, 11, 510, 311, 264, 1230, 568, 13], "temperature": 0.0, "avg_logprob": -0.15423256472537392, "compression_ratio": 1.3333333333333333, "no_speech_prob": 2.1233324787317542e-06}, {"id": 134, "seek": 119256, "start": 1209.28, "end": 1215.52, "text": " And here's the number minus 3i. But you could also create the number", "tokens": [400, 510, 311, 264, 1230, 3175, 805, 72, 13, 583, 291, 727, 611, 1884, 264, 1230], "temperature": 0.0, "avg_logprob": -0.15423256472537392, "compression_ratio": 1.3333333333333333, "no_speech_prob": 2.1233324787317542e-06}, {"id": 135, "seek": 121552, "start": 1215.52, "end": 1226.0, "text": " here 2 plus 2i. Okay, so that's the complex number 2 plus 2i.", "tokens": [510, 568, 1804, 568, 72, 13, 1033, 11, 370, 300, 311, 264, 3997, 1230, 568, 1804, 568, 72, 13], "temperature": 0.0, "avg_logprob": -0.33572518484933034, "compression_ratio": 1.4533333333333334, "no_speech_prob": 5.173811587155797e-06}, {"id": 136, "seek": 121552, "start": 1226.0, "end": 1233.04, "text": " We'll go there. And you can think of that as a vector, right?", "tokens": [492, 603, 352, 456, 13, 400, 291, 393, 519, 295, 300, 382, 257, 8062, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.33572518484933034, "compression_ratio": 1.4533333333333334, "no_speech_prob": 5.173811587155797e-06}, {"id": 137, "seek": 121552, "start": 1233.04, "end": 1237.12, "text": " It goes from the origin and it goes up to there.", "tokens": [467, 1709, 490, 264, 4957, 293, 309, 1709, 493, 281, 456, 13], "temperature": 0.0, "avg_logprob": -0.33572518484933034, "compression_ratio": 1.4533333333333334, "no_speech_prob": 5.173811587155797e-06}, {"id": 138, "seek": 121552, "start": 1237.12, "end": 1240.0, "text": " There's another way of thinking of 2 plus 2i.", "tokens": [821, 311, 1071, 636, 295, 1953, 295, 568, 1804, 568, 72, 13], "temperature": 0.0, "avg_logprob": -0.33572518484933034, "compression_ratio": 1.4533333333333334, "no_speech_prob": 5.173811587155797e-06}, {"id": 139, "seek": 124000, "start": 1240.0, "end": 1246.0, "text": " And that vector has a length. And we can calculate its length", "tokens": [400, 300, 8062, 575, 257, 4641, 13, 400, 321, 393, 8873, 1080, 4641], "temperature": 0.0, "avg_logprob": -0.4571480410439627, "compression_ratio": 1.5916666666666666, "no_speech_prob": 2.4439700609946158e-06}, {"id": 140, "seek": 124000, "start": 1246.96, "end": 1250.48, "text": " because it is... we have here a right angle triangle.", "tokens": [570, 309, 307, 485, 321, 362, 510, 257, 558, 5802, 13369, 13], "temperature": 0.0, "avg_logprob": -0.4571480410439627, "compression_ratio": 1.5916666666666666, "no_speech_prob": 2.4439700609946158e-06}, {"id": 141, "seek": 124000, "start": 1254.48, "end": 1258.48, "text": " Oh, we have a right angle triangle.", "tokens": [876, 11, 321, 362, 257, 558, 5802, 13369, 13], "temperature": 0.0, "avg_logprob": -0.4571480410439627, "compression_ratio": 1.5916666666666666, "no_speech_prob": 2.4439700609946158e-06}, {"id": 142, "seek": 124000, "start": 1260.96, "end": 1265.92, "text": " And its height is 2. And its base is 2.", "tokens": [400, 1080, 6681, 307, 568, 13, 400, 1080, 3096, 307, 568, 13], "temperature": 0.0, "avg_logprob": -0.4571480410439627, "compression_ratio": 1.5916666666666666, "no_speech_prob": 2.4439700609946158e-06}, {"id": 143, "seek": 126592, "start": 1265.92, "end": 1273.92, "text": " And its base is 2. So its length here we can get from the Pythagorean theorem.", "tokens": [400, 1080, 3096, 307, 568, 13, 407, 1080, 4641, 510, 321, 393, 483, 490, 264, 9953, 392, 559, 25885, 20904, 13], "temperature": 0.0, "avg_logprob": -0.3668534615460564, "compression_ratio": 1.1263157894736842, "no_speech_prob": 4.092861672688741e-06}, {"id": 144, "seek": 126592, "start": 1283.2, "end": 1285.2, "text": " Does that make sense so far?", "tokens": [4402, 300, 652, 2020, 370, 1400, 30], "temperature": 0.0, "avg_logprob": -0.3668534615460564, "compression_ratio": 1.1263157894736842, "no_speech_prob": 4.092861672688741e-06}, {"id": 145, "seek": 128520, "start": 1285.2, "end": 1295.2, "text": " So that is the magnitude of this complex number.", "tokens": [407, 300, 307, 264, 15668, 295, 341, 3997, 1230, 13], "temperature": 0.0, "avg_logprob": -0.2820022159152561, "compression_ratio": 1.8181818181818181, "no_speech_prob": 5.014409907744266e-06}, {"id": 146, "seek": 128520, "start": 1296.24, "end": 1299.2, "text": " So the magnitude of real numbers is easy, right?", "tokens": [407, 264, 15668, 295, 957, 3547, 307, 1858, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2820022159152561, "compression_ratio": 1.8181818181818181, "no_speech_prob": 5.014409907744266e-06}, {"id": 147, "seek": 128520, "start": 1299.2, "end": 1301.92, "text": " Because like, what's the magnitude of this number here?", "tokens": [1436, 411, 11, 437, 311, 264, 15668, 295, 341, 1230, 510, 30], "temperature": 0.0, "avg_logprob": -0.2820022159152561, "compression_ratio": 1.8181818181818181, "no_speech_prob": 5.014409907744266e-06}, {"id": 148, "seek": 128520, "start": 1302.56, "end": 1304.56, "text": " Well, it's how far away is it from the origin?", "tokens": [1042, 11, 309, 311, 577, 1400, 1314, 307, 309, 490, 264, 4957, 30], "temperature": 0.0, "avg_logprob": -0.2820022159152561, "compression_ratio": 1.8181818181818181, "no_speech_prob": 5.014409907744266e-06}, {"id": 149, "seek": 128520, "start": 1305.52, "end": 1307.52, "text": " And the answer is 3.", "tokens": [400, 264, 1867, 307, 805, 13], "temperature": 0.0, "avg_logprob": -0.2820022159152561, "compression_ratio": 1.8181818181818181, "no_speech_prob": 5.014409907744266e-06}, {"id": 150, "seek": 128520, "start": 1307.52, "end": 1310.48, "text": " You know, what's the magnitude of this number here?", "tokens": [509, 458, 11, 437, 311, 264, 15668, 295, 341, 1230, 510, 30], "temperature": 0.0, "avg_logprob": -0.2820022159152561, "compression_ratio": 1.8181818181818181, "no_speech_prob": 5.014409907744266e-06}, {"id": 151, "seek": 128520, "start": 1311.28, "end": 1313.28, "text": " Well, that's easy. It's 1.", "tokens": [1042, 11, 300, 311, 1858, 13, 467, 311, 502, 13], "temperature": 0.0, "avg_logprob": -0.2820022159152561, "compression_ratio": 1.8181818181818181, "no_speech_prob": 5.014409907744266e-06}, {"id": 152, "seek": 131328, "start": 1313.28, "end": 1317.28, "text": " Right? This one's also easy. 3i. What's its magnitude?", "tokens": [1779, 30, 639, 472, 311, 611, 1858, 13, 805, 72, 13, 708, 311, 1080, 15668, 30], "temperature": 0.0, "avg_logprob": -0.24743544634650735, "compression_ratio": 1.4744897959183674, "no_speech_prob": 3.844877483061282e-06}, {"id": 153, "seek": 131328, "start": 1317.28, "end": 1321.28, "text": " What's distance from the origin is also 3.", "tokens": [708, 311, 4560, 490, 264, 4957, 307, 611, 805, 13], "temperature": 0.0, "avg_logprob": -0.24743544634650735, "compression_ratio": 1.4744897959183674, "no_speech_prob": 3.844877483061282e-06}, {"id": 154, "seek": 131328, "start": 1321.28, "end": 1327.28, "text": " Right? But yeah, the ones where you've got a mixture of imaginary and real,", "tokens": [1779, 30, 583, 1338, 11, 264, 2306, 689, 291, 600, 658, 257, 9925, 295, 26164, 293, 957, 11], "temperature": 0.0, "avg_logprob": -0.24743544634650735, "compression_ratio": 1.4744897959183674, "no_speech_prob": 3.844877483061282e-06}, {"id": 155, "seek": 131328, "start": 1327.28, "end": 1333.28, "text": " you have to use the Pythagorean theorem to find out their magnitude,", "tokens": [291, 362, 281, 764, 264, 9953, 392, 559, 25885, 20904, 281, 915, 484, 641, 15668, 11], "temperature": 0.0, "avg_logprob": -0.24743544634650735, "compression_ratio": 1.4744897959183674, "no_speech_prob": 3.844877483061282e-06}, {"id": 156, "seek": 131328, "start": 1333.28, "end": 1335.28, "text": " a single number, which is like, how big is it?", "tokens": [257, 2167, 1230, 11, 597, 307, 411, 11, 577, 955, 307, 309, 30], "temperature": 0.0, "avg_logprob": -0.24743544634650735, "compression_ratio": 1.4744897959183674, "no_speech_prob": 3.844877483061282e-06}, {"id": 157, "seek": 133528, "start": 1335.28, "end": 1347.28, "text": " And if we take a number, so this number, the number we were dealing with here was 2 plus 2i,", "tokens": [400, 498, 321, 747, 257, 1230, 11, 370, 341, 1230, 11, 264, 1230, 321, 645, 6260, 365, 510, 390, 568, 1804, 568, 72, 11], "temperature": 0.0, "avg_logprob": -0.31855247418085736, "compression_ratio": 1.2735042735042734, "no_speech_prob": 1.952128513948992e-05}, {"id": 158, "seek": 133528, "start": 1347.28, "end": 1353.28, "text": " which APL writes like this.", "tokens": [597, 5372, 43, 13657, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.31855247418085736, "compression_ratio": 1.2735042735042734, "no_speech_prob": 1.952128513948992e-05}, {"id": 159, "seek": 133528, "start": 1353.28, "end": 1357.28, "text": " It's the same thing. And so,", "tokens": [467, 311, 264, 912, 551, 13, 400, 370, 11], "temperature": 0.0, "avg_logprob": -0.31855247418085736, "compression_ratio": 1.2735042735042734, "no_speech_prob": 1.952128513948992e-05}, {"id": 160, "seek": 135728, "start": 1357.28, "end": 1369.28, "text": " APL writes like this. It's the same thing. And they have this thing called direction,", "tokens": [5372, 43, 13657, 411, 341, 13, 467, 311, 264, 912, 551, 13, 400, 436, 362, 341, 551, 1219, 3513, 11], "temperature": 0.0, "avg_logprob": -0.19009869273115948, "compression_ratio": 1.2231404958677685, "no_speech_prob": 3.7264949241944123e-06}, {"id": 161, "seek": 135728, "start": 1369.28, "end": 1381.28, "text": " which is basically saying, take a number, for example, like 3,", "tokens": [597, 307, 1936, 1566, 11, 747, 257, 1230, 11, 337, 1365, 11, 411, 805, 11], "temperature": 0.0, "avg_logprob": -0.19009869273115948, "compression_ratio": 1.2231404958677685, "no_speech_prob": 3.7264949241944123e-06}, {"id": 162, "seek": 138128, "start": 1381.28, "end": 1389.28, "text": " and 3, the direction of 3 is plus 1, and the direction of negative 3 is negative 1.", "tokens": [293, 805, 11, 264, 3513, 295, 805, 307, 1804, 502, 11, 293, 264, 3513, 295, 3671, 805, 307, 3671, 502, 13], "temperature": 0.0, "avg_logprob": -0.10411689320548637, "compression_ratio": 1.5555555555555556, "no_speech_prob": 8.939367035054602e-06}, {"id": 163, "seek": 138128, "start": 1389.28, "end": 1395.28, "text": " And basically what we're doing is we're taking the number 3 and dividing it by its magnitude.", "tokens": [400, 1936, 437, 321, 434, 884, 307, 321, 434, 1940, 264, 1230, 805, 293, 26764, 309, 538, 1080, 15668, 13], "temperature": 0.0, "avg_logprob": -0.10411689320548637, "compression_ratio": 1.5555555555555556, "no_speech_prob": 8.939367035054602e-06}, {"id": 164, "seek": 138128, "start": 1403.28, "end": 1407.28, "text": " And that's another way of thinking about this sine function.", "tokens": [400, 300, 311, 1071, 636, 295, 1953, 466, 341, 18609, 2445, 13], "temperature": 0.0, "avg_logprob": -0.10411689320548637, "compression_ratio": 1.5555555555555556, "no_speech_prob": 8.939367035054602e-06}, {"id": 165, "seek": 140728, "start": 1407.28, "end": 1411.28, "text": " So like, what do you do for a complex number?", "tokens": [407, 411, 11, 437, 360, 291, 360, 337, 257, 3997, 1230, 30], "temperature": 0.0, "avg_logprob": -0.13182761452414773, "compression_ratio": 1.525974025974026, "no_speech_prob": 8.530018021701835e-06}, {"id": 166, "seek": 140728, "start": 1411.28, "end": 1417.28, "text": " Well, you take the number and divide it by its magnitude", "tokens": [1042, 11, 291, 747, 264, 1230, 293, 9845, 309, 538, 1080, 15668], "temperature": 0.0, "avg_logprob": -0.13182761452414773, "compression_ratio": 1.525974025974026, "no_speech_prob": 8.530018021701835e-06}, {"id": 167, "seek": 140728, "start": 1420.28, "end": 1425.28, "text": " to do the same thing. And so that's going to give you something that is going to be", "tokens": [281, 360, 264, 912, 551, 13, 400, 370, 300, 311, 516, 281, 976, 291, 746, 300, 307, 516, 281, 312], "temperature": 0.0, "avg_logprob": -0.13182761452414773, "compression_ratio": 1.525974025974026, "no_speech_prob": 8.530018021701835e-06}, {"id": 168, "seek": 140728, "start": 1428.28, "end": 1432.28, "text": " around about here. So it's going to be pointing.", "tokens": [926, 466, 510, 13, 407, 309, 311, 516, 281, 312, 12166, 13], "temperature": 0.0, "avg_logprob": -0.13182761452414773, "compression_ratio": 1.525974025974026, "no_speech_prob": 8.530018021701835e-06}, {"id": 169, "seek": 143228, "start": 1432.28, "end": 1438.28, "text": " It's going to be pointing in the same direction.", "tokens": [467, 311, 516, 281, 312, 12166, 294, 264, 912, 3513, 13], "temperature": 0.0, "avg_logprob": -0.1648486606658451, "compression_ratio": 1.6956521739130435, "no_speech_prob": 5.338100891094655e-06}, {"id": 170, "seek": 143228, "start": 1438.28, "end": 1443.28, "text": " No, excuse me. It's going to be pointing in the same direction.", "tokens": [883, 11, 8960, 385, 13, 467, 311, 516, 281, 312, 12166, 294, 264, 912, 3513, 13], "temperature": 0.0, "avg_logprob": -0.1648486606658451, "compression_ratio": 1.6956521739130435, "no_speech_prob": 5.338100891094655e-06}, {"id": 171, "seek": 143228, "start": 1443.28, "end": 1451.28, "text": " But it's going to be shorter. And specifically, we can draw this really important thing,", "tokens": [583, 309, 311, 516, 281, 312, 11639, 13, 400, 4682, 11, 321, 393, 2642, 341, 534, 1021, 551, 11], "temperature": 0.0, "avg_logprob": -0.1648486606658451, "compression_ratio": 1.6956521739130435, "no_speech_prob": 5.338100891094655e-06}, {"id": 172, "seek": 143228, "start": 1455.28, "end": 1457.28, "text": " which is called the unit circle.", "tokens": [597, 307, 1219, 264, 4985, 6329, 13], "temperature": 0.0, "avg_logprob": -0.1648486606658451, "compression_ratio": 1.6956521739130435, "no_speech_prob": 5.338100891094655e-06}, {"id": 173, "seek": 145728, "start": 1457.28, "end": 1467.28, "text": " And the unit circle is something that has a radius of 1, right?", "tokens": [400, 264, 4985, 6329, 307, 746, 300, 575, 257, 15845, 295, 502, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.12794092297554016, "compression_ratio": 1.6442953020134228, "no_speech_prob": 5.338092250894988e-06}, {"id": 174, "seek": 145728, "start": 1467.28, "end": 1471.28, "text": " And it's centered on the origin.", "tokens": [400, 309, 311, 18988, 322, 264, 4957, 13], "temperature": 0.0, "avg_logprob": -0.12794092297554016, "compression_ratio": 1.6442953020134228, "no_speech_prob": 5.338092250894988e-06}, {"id": 175, "seek": 145728, "start": 1471.28, "end": 1481.28, "text": " And so the direction, anytime we get the direction of a real,", "tokens": [400, 370, 264, 3513, 11, 13038, 321, 483, 264, 3513, 295, 257, 957, 11], "temperature": 0.0, "avg_logprob": -0.12794092297554016, "compression_ratio": 1.6442953020134228, "no_speech_prob": 5.338092250894988e-06}, {"id": 176, "seek": 145728, "start": 1481.28, "end": 1485.28, "text": " we're going to get something that points in the same direction as the original number,", "tokens": [321, 434, 516, 281, 483, 746, 300, 2793, 294, 264, 912, 3513, 382, 264, 3380, 1230, 11], "temperature": 0.0, "avg_logprob": -0.12794092297554016, "compression_ratio": 1.6442953020134228, "no_speech_prob": 5.338092250894988e-06}, {"id": 177, "seek": 148528, "start": 1485.28, "end": 1490.28, "text": " but is actually sits on the unit circle.", "tokens": [457, 307, 767, 12696, 322, 264, 4985, 6329, 13], "temperature": 0.0, "avg_logprob": -0.11608386861866918, "compression_ratio": 1.3525179856115108, "no_speech_prob": 1.6280450836347882e-06}, {"id": 178, "seek": 148528, "start": 1490.28, "end": 1495.28, "text": " Its length will be 1. Does that make sense?", "tokens": [6953, 4641, 486, 312, 502, 13, 4402, 300, 652, 2020, 30], "temperature": 0.0, "avg_logprob": -0.11608386861866918, "compression_ratio": 1.3525179856115108, "no_speech_prob": 1.6280450836347882e-06}, {"id": 179, "seek": 148528, "start": 1495.28, "end": 1503.28, "text": " So we could try it, right? So what's the square root of 8?", "tokens": [407, 321, 727, 853, 309, 11, 558, 30, 407, 437, 311, 264, 3732, 5593, 295, 1649, 30], "temperature": 0.0, "avg_logprob": -0.11608386861866918, "compression_ratio": 1.3525179856115108, "no_speech_prob": 1.6280450836347882e-06}, {"id": 180, "seek": 150328, "start": 1503.28, "end": 1517.28, "text": " So we could do 8 to the power of negative 2. That's not right.", "tokens": [407, 321, 727, 360, 1649, 281, 264, 1347, 295, 3671, 568, 13, 663, 311, 406, 558, 13], "temperature": 0.0, "avg_logprob": -0.2993870396767893, "compression_ratio": 1.130952380952381, "no_speech_prob": 6.143377504486125e-06}, {"id": 181, "seek": 150328, "start": 1517.28, "end": 1520.28, "text": " Sorry, to the power half rather.", "tokens": [4919, 11, 281, 264, 1347, 1922, 2831, 13], "temperature": 0.0, "avg_logprob": -0.2993870396767893, "compression_ratio": 1.130952380952381, "no_speech_prob": 6.143377504486125e-06}, {"id": 182, "seek": 152028, "start": 1520.28, "end": 1544.28, "text": " So 2 or half, yeah. Okay. And so we thought if we took 2j2 and divide that by 8 to the power half,", "tokens": [50364, 407, 568, 420, 1922, 11, 1338, 13, 1033, 13, 400, 370, 321, 1194, 498, 321, 1890, 568, 73, 17, 293, 9845, 300, 538, 1649, 281, 264, 1347, 1922, 11, 51564], "temperature": 0.0, "avg_logprob": -0.41821858286857605, "compression_ratio": 1.0888888888888888, "no_speech_prob": 6.853078048152383e-06}, {"id": 183, "seek": 155028, "start": 1550.28, "end": 1560.28, "text": " we get that. And if we get the direction, times of 2j2,", "tokens": [321, 483, 300, 13, 400, 498, 321, 483, 264, 3513, 11, 1413, 295, 568, 73, 17, 11], "temperature": 0.0, "avg_logprob": -0.24361780285835266, "compression_ratio": 1.0129870129870129, "no_speech_prob": 0.039621222764253616}, {"id": 184, "seek": 155028, "start": 1560.28, "end": 1563.28, "text": " Hooray! It's the same.", "tokens": [3631, 284, 320, 0, 467, 311, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.24361780285835266, "compression_ratio": 1.0129870129870129, "no_speech_prob": 0.039621222764253616}, {"id": 185, "seek": 156328, "start": 1563.28, "end": 1582.28, "text": " So, and rather than writing 8 times 5, what I could have written here is magnitude of 2j2,", "tokens": [407, 11, 293, 2831, 813, 3579, 1649, 1413, 1025, 11, 437, 286, 727, 362, 3720, 510, 307, 15668, 295, 568, 73, 17, 11], "temperature": 0.0, "avg_logprob": -0.11529231071472168, "compression_ratio": 1.1981132075471699, "no_speech_prob": 2.9479303975676885e-06}, {"id": 186, "seek": 156328, "start": 1582.28, "end": 1585.28, "text": " because that's what magnitude means.", "tokens": [570, 300, 311, 437, 15668, 1355, 13], "temperature": 0.0, "avg_logprob": -0.11529231071472168, "compression_ratio": 1.1981132075471699, "no_speech_prob": 2.9479303975676885e-06}, {"id": 187, "seek": 158528, "start": 1585.28, "end": 1599.28, "text": " Okay, so does that make sense, what it's doing?", "tokens": [1033, 11, 370, 775, 300, 652, 2020, 11, 437, 309, 311, 884, 30], "temperature": 0.0, "avg_logprob": -0.20258326530456544, "compression_ratio": 1.2241379310344827, "no_speech_prob": 3.96686027670512e-06}, {"id": 188, "seek": 158528, "start": 1599.28, "end": 1608.28, "text": " You'll notice that like, although complex numbers are about the i, the square root of minus 1,", "tokens": [509, 603, 3449, 300, 411, 11, 4878, 3997, 3547, 366, 466, 264, 741, 11, 264, 3732, 5593, 295, 3175, 502, 11], "temperature": 0.0, "avg_logprob": -0.20258326530456544, "compression_ratio": 1.2241379310344827, "no_speech_prob": 3.96686027670512e-06}, {"id": 189, "seek": 160828, "start": 1608.28, "end": 1616.28, "text": " we don't think about that at all, right? When we're doing this complex number stuff.", "tokens": [321, 500, 380, 519, 466, 300, 412, 439, 11, 558, 30, 1133, 321, 434, 884, 341, 3997, 1230, 1507, 13], "temperature": 0.0, "avg_logprob": -0.09820282137071765, "compression_ratio": 1.5224719101123596, "no_speech_prob": 2.4060523173830006e-06}, {"id": 190, "seek": 160828, "start": 1616.28, "end": 1624.28, "text": " We just treat it as a pair of numbers, which therefore can represent a point in Cartesian space,", "tokens": [492, 445, 2387, 309, 382, 257, 6119, 295, 3547, 11, 597, 4412, 393, 2906, 257, 935, 294, 22478, 42434, 1901, 11], "temperature": 0.0, "avg_logprob": -0.09820282137071765, "compression_ratio": 1.5224719101123596, "no_speech_prob": 2.4060523173830006e-06}, {"id": 191, "seek": 160828, "start": 1624.28, "end": 1628.28, "text": " and therefore that can represent a vector.", "tokens": [293, 4412, 300, 393, 2906, 257, 8062, 13], "temperature": 0.0, "avg_logprob": -0.09820282137071765, "compression_ratio": 1.5224719101123596, "no_speech_prob": 2.4060523173830006e-06}, {"id": 192, "seek": 160828, "start": 1628.28, "end": 1632.28, "text": " Is that 0.7 radians? Like, what is that value?", "tokens": [1119, 300, 1958, 13, 22, 2843, 2567, 30, 1743, 11, 437, 307, 300, 2158, 30], "temperature": 0.0, "avg_logprob": -0.09820282137071765, "compression_ratio": 1.5224719101123596, "no_speech_prob": 2.4060523173830006e-06}, {"id": 193, "seek": 163228, "start": 1632.28, "end": 1642.28, "text": " Oh, this is a complex number. It's 0.7j0.7. So it's 0.7 plus 0.7i.", "tokens": [876, 11, 341, 307, 257, 3997, 1230, 13, 467, 311, 1958, 13, 22, 73, 15, 13, 22, 13, 407, 309, 311, 1958, 13, 22, 1804, 1958, 13, 22, 72, 13], "temperature": 0.0, "avg_logprob": -0.08757903462364561, "compression_ratio": 1.5112781954887218, "no_speech_prob": 2.48245169132133e-06}, {"id": 194, "seek": 163228, "start": 1642.28, "end": 1648.28, "text": " Because remember, 2 plus 2i is written as 2j2 in APL.", "tokens": [1436, 1604, 11, 568, 1804, 568, 72, 307, 3720, 382, 568, 73, 17, 294, 5372, 43, 13], "temperature": 0.0, "avg_logprob": -0.08757903462364561, "compression_ratio": 1.5112781954887218, "no_speech_prob": 2.48245169132133e-06}, {"id": 195, "seek": 163228, "start": 1648.28, "end": 1655.28, "text": " So this is 0.7 plus 0.7i. So it's a complex number.", "tokens": [407, 341, 307, 1958, 13, 22, 1804, 1958, 13, 22, 72, 13, 407, 309, 311, 257, 3997, 1230, 13], "temperature": 0.0, "avg_logprob": -0.08757903462364561, "compression_ratio": 1.5112781954887218, "no_speech_prob": 2.48245169132133e-06}, {"id": 196, "seek": 163228, "start": 1655.28, "end": 1660.28, "text": " And so it's this point here.", "tokens": [400, 370, 309, 311, 341, 935, 510, 13], "temperature": 0.0, "avg_logprob": -0.08757903462364561, "compression_ratio": 1.5112781954887218, "no_speech_prob": 2.48245169132133e-06}, {"id": 197, "seek": 166028, "start": 1660.28, "end": 1668.28, "text": " It's the complex number that has the same direction as 2j2, but has a magnitude of 1.", "tokens": [467, 311, 264, 3997, 1230, 300, 575, 264, 912, 3513, 382, 568, 73, 17, 11, 457, 575, 257, 15668, 295, 502, 13], "temperature": 0.0, "avg_logprob": -0.10282883578783845, "compression_ratio": 1.625, "no_speech_prob": 6.240745278773829e-06}, {"id": 198, "seek": 166028, "start": 1668.28, "end": 1673.28, "text": " And therefore it sits on the unit circle.", "tokens": [400, 4412, 309, 12696, 322, 264, 4985, 6329, 13], "temperature": 0.0, "avg_logprob": -0.10282883578783845, "compression_ratio": 1.625, "no_speech_prob": 6.240745278773829e-06}, {"id": 199, "seek": 166028, "start": 1673.28, "end": 1680.28, "text": " And like, we really like to do things on the unit circle, because on the unit circle,", "tokens": [400, 411, 11, 321, 534, 411, 281, 360, 721, 322, 264, 4985, 6329, 11, 570, 322, 264, 4985, 6329, 11], "temperature": 0.0, "avg_logprob": -0.10282883578783845, "compression_ratio": 1.625, "no_speech_prob": 6.240745278773829e-06}, {"id": 200, "seek": 166028, "start": 1680.28, "end": 1689.28, "text": " if we kind of draw that out a little bit more,", "tokens": [498, 321, 733, 295, 2642, 300, 484, 257, 707, 857, 544, 11], "temperature": 0.0, "avg_logprob": -0.10282883578783845, "compression_ratio": 1.625, "no_speech_prob": 6.240745278773829e-06}, {"id": 201, "seek": 168928, "start": 1689.28, "end": 1702.28, "text": " if we stick to things that are on the unit circle, so here's 1, 1, 1, 1, minus 1, minus 1.", "tokens": [498, 321, 2897, 281, 721, 300, 366, 322, 264, 4985, 6329, 11, 370, 510, 311, 502, 11, 502, 11, 502, 11, 502, 11, 3175, 502, 11, 3175, 502, 13], "temperature": 0.0, "avg_logprob": -0.12647916620427913, "compression_ratio": 1.4206349206349207, "no_speech_prob": 5.507568403118057e-06}, {"id": 202, "seek": 168928, "start": 1702.28, "end": 1716.28, "text": " So these points are nice because you can pick any one of those points, like here, right?", "tokens": [407, 613, 2793, 366, 1481, 570, 291, 393, 1888, 604, 472, 295, 729, 2793, 11, 411, 510, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.12647916620427913, "compression_ratio": 1.4206349206349207, "no_speech_prob": 5.507568403118057e-06}, {"id": 203, "seek": 171628, "start": 1716.28, "end": 1726.28, "text": " And if you create that triangle, then this hypotenuse here, the length of it, is 1.", "tokens": [400, 498, 291, 1884, 300, 13369, 11, 550, 341, 7420, 21990, 438, 510, 11, 264, 4641, 295, 309, 11, 307, 502, 13], "temperature": 0.0, "avg_logprob": -0.15598744880862353, "compression_ratio": 1.4766839378238341, "no_speech_prob": 2.3320533273363253e-06}, {"id": 204, "seek": 171628, "start": 1726.28, "end": 1730.28, "text": " Which is really convenient, right? Because if you're doing trigonometry or something, right?", "tokens": [3013, 307, 534, 10851, 11, 558, 30, 1436, 498, 291, 434, 884, 35386, 266, 34730, 420, 746, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.15598744880862353, "compression_ratio": 1.4766839378238341, "no_speech_prob": 2.3320533273363253e-06}, {"id": 205, "seek": 171628, "start": 1730.28, "end": 1739.28, "text": " You've got sine, theta, circuTOWA equals opposite over hypotenuse.", "tokens": [509, 600, 658, 18609, 11, 9725, 11, 3510, 84, 51, 5769, 32, 6915, 6182, 670, 7420, 21990, 438, 13], "temperature": 0.0, "avg_logprob": -0.15598744880862353, "compression_ratio": 1.4766839378238341, "no_speech_prob": 2.3320533273363253e-06}, {"id": 206, "seek": 171628, "start": 1739.28, "end": 1742.28, "text": " Well, that's always 1 on the unit circle.", "tokens": [1042, 11, 300, 311, 1009, 502, 322, 264, 4985, 6329, 13], "temperature": 0.0, "avg_logprob": -0.15598744880862353, "compression_ratio": 1.4766839378238341, "no_speech_prob": 2.3320533273363253e-06}, {"id": 207, "seek": 174228, "start": 1742.28, "end": 1755.28, "text": " So we can delete that part entirely.", "tokens": [407, 321, 393, 12097, 300, 644, 7696, 13], "temperature": 0.0, "avg_logprob": -0.11239006005081476, "compression_ratio": 1.3115942028985508, "no_speech_prob": 7.88868510426255e-06}, {"id": 208, "seek": 174228, "start": 1755.28, "end": 1759.28, "text": " Instead, we get sine, theta equals opposite.", "tokens": [7156, 11, 321, 483, 18609, 11, 9725, 6915, 6182, 13], "temperature": 0.0, "avg_logprob": -0.11239006005081476, "compression_ratio": 1.3115942028985508, "no_speech_prob": 7.88868510426255e-06}, {"id": 209, "seek": 174228, "start": 1759.28, "end": 1763.28, "text": " You know, so it's nice to deal with stuff that's on the unit circle.", "tokens": [509, 458, 11, 370, 309, 311, 1481, 281, 2028, 365, 1507, 300, 311, 322, 264, 4985, 6329, 13], "temperature": 0.0, "avg_logprob": -0.11239006005081476, "compression_ratio": 1.3115942028985508, "no_speech_prob": 7.88868510426255e-06}, {"id": 210, "seek": 174228, "start": 1763.28, "end": 1765.28, "text": " Things become more convenient.", "tokens": [9514, 1813, 544, 10851, 13], "temperature": 0.0, "avg_logprob": -0.11239006005081476, "compression_ratio": 1.3115942028985508, "no_speech_prob": 7.88868510426255e-06}, {"id": 211, "seek": 176528, "start": 1765.28, "end": 1780.28, "text": " You can ignore the whole magnitude slash hypotenuse piece entirely.", "tokens": [509, 393, 11200, 264, 1379, 15668, 17330, 7420, 21990, 438, 2522, 7696, 13], "temperature": 0.0, "avg_logprob": -0.10448962763736122, "compression_ratio": 1.3333333333333333, "no_speech_prob": 4.784937573276693e-06}, {"id": 212, "seek": 176528, "start": 1780.28, "end": 1783.28, "text": " Trigonometry coming back, huh?", "tokens": [1765, 47578, 34730, 1348, 646, 11, 7020, 30], "temperature": 0.0, "avg_logprob": -0.10448962763736122, "compression_ratio": 1.3333333333333333, "no_speech_prob": 4.784937573276693e-06}, {"id": 213, "seek": 176528, "start": 1783.28, "end": 1789.28, "text": " Probably a lot of us haven't seen it since high school.", "tokens": [9210, 257, 688, 295, 505, 2378, 380, 1612, 309, 1670, 1090, 1395, 13], "temperature": 0.0, "avg_logprob": -0.10448962763736122, "compression_ratio": 1.3333333333333333, "no_speech_prob": 4.784937573276693e-06}, {"id": 214, "seek": 176528, "start": 1789.28, "end": 1792.28, "text": " All right, so what do we say about monadic times?", "tokens": [1057, 558, 11, 370, 437, 360, 321, 584, 466, 1108, 43341, 1413, 30], "temperature": 0.0, "avg_logprob": -0.10448962763736122, "compression_ratio": 1.3333333333333333, "no_speech_prob": 4.784937573276693e-06}, {"id": 215, "seek": 179228, "start": 1792.28, "end": 1803.28, "text": " We haven't introduced magnitude yet, so let's put that away down here for later.", "tokens": [492, 2378, 380, 7268, 15668, 1939, 11, 370, 718, 311, 829, 300, 1314, 760, 510, 337, 1780, 13], "temperature": 0.0, "avg_logprob": -0.0979595726186579, "compression_ratio": 1.0526315789473684, "no_speech_prob": 6.643257620453369e-06}, {"id": 216, "seek": 180328, "start": 1803.28, "end": 1830.28, "text": " And for now, I guess we'll just say that the magnitude of 3j4 is equal to", "tokens": [400, 337, 586, 11, 286, 2041, 321, 603, 445, 584, 300, 264, 15668, 295, 805, 73, 19, 307, 2681, 281], "temperature": 0.0, "avg_logprob": -0.1550543506940206, "compression_ratio": 0.9605263157894737, "no_speech_prob": 1.1658587027341127e-05}, {"id": 217, "seek": 183028, "start": 1830.28, "end": 1836.28, "text": " I guess we don't have a way of even doing a square root.", "tokens": [286, 2041, 321, 500, 380, 362, 257, 636, 295, 754, 884, 257, 3732, 5593, 13], "temperature": 0.0, "avg_logprob": -0.11333832629891329, "compression_ratio": 1.4715909090909092, "no_speech_prob": 1.3211551959102508e-05}, {"id": 218, "seek": 183028, "start": 1836.28, "end": 1839.28, "text": " So we'll just have to kind of do it with prose.", "tokens": [407, 321, 603, 445, 362, 281, 733, 295, 360, 309, 365, 12505, 13], "temperature": 0.0, "avg_logprob": -0.11333832629891329, "compression_ratio": 1.4715909090909092, "no_speech_prob": 1.3211551959102508e-05}, {"id": 219, "seek": 183028, "start": 1839.28, "end": 1844.28, "text": " So the magnitude of 3j4 is equal to the square root of 3 squared plus 4 squared.", "tokens": [407, 264, 15668, 295, 805, 73, 19, 307, 2681, 281, 264, 3732, 5593, 295, 805, 8889, 1804, 1017, 8889, 13], "temperature": 0.0, "avg_logprob": -0.11333832629891329, "compression_ratio": 1.4715909090909092, "no_speech_prob": 1.3211551959102508e-05}, {"id": 220, "seek": 183028, "start": 1844.28, "end": 1849.28, "text": " So that's 9 plus 16.", "tokens": [407, 300, 311, 1722, 1804, 3165, 13], "temperature": 0.0, "avg_logprob": -0.11333832629891329, "compression_ratio": 1.4715909090909092, "no_speech_prob": 1.3211551959102508e-05}, {"id": 221, "seek": 183028, "start": 1849.28, "end": 1852.28, "text": " Oh yeah, of course, 3, 4, 5 is a Pythagorean triple.", "tokens": [876, 1338, 11, 295, 1164, 11, 805, 11, 1017, 11, 1025, 307, 257, 9953, 392, 559, 25885, 15508, 13], "temperature": 0.0, "avg_logprob": -0.11333832629891329, "compression_ratio": 1.4715909090909092, "no_speech_prob": 1.3211551959102508e-05}, {"id": 222, "seek": 185228, "start": 1852.28, "end": 1866.28, "text": " So it's basically going to be dividing by 5.", "tokens": [407, 309, 311, 1936, 516, 281, 312, 26764, 538, 1025, 13], "temperature": 0.0, "avg_logprob": -0.11614602406819662, "compression_ratio": 0.8979591836734694, "no_speech_prob": 8.52844095788896e-06}, {"id": 223, "seek": 186628, "start": 1866.28, "end": 1891.28, "text": " Yeah, so basically 3j4 means 3 plus 4i,", "tokens": [865, 11, 370, 1936, 805, 73, 19, 1355, 805, 1804, 1017, 72, 11], "temperature": 0.0, "avg_logprob": -0.15375618373646455, "compression_ratio": 0.8297872340425532, "no_speech_prob": 6.602795474464074e-05}, {"id": 224, "seek": 189128, "start": 1891.28, "end": 1906.28, "text": " which has a magnitude of 25 because", "tokens": [597, 575, 257, 15668, 295, 3552, 570], "temperature": 0.0, "avg_logprob": -0.25756658207286487, "compression_ratio": 0.813953488372093, "no_speech_prob": 2.178100658056792e-05}, {"id": 225, "seek": 190628, "start": 1906.28, "end": 1931.28, "text": " 3 times 3 plus 4 times 4 equals 5 times 5.", "tokens": [805, 1413, 805, 1804, 1017, 1413, 1017, 6915, 1025, 1413, 1025, 13], "temperature": 0.0, "avg_logprob": -0.2426135390996933, "compression_ratio": 1.0769230769230769, "no_speech_prob": 1.061564853443997e-05}, {"id": 226, "seek": 193128, "start": 1931.28, "end": 1954.28, "text": " So 0.6j0.8", "tokens": [407, 1958, 13, 21, 73, 15, 13, 23], "temperature": 0.0, "avg_logprob": -0.13034293055534363, "compression_ratio": 0.5555555555555556, "no_speech_prob": 9.66461084317416e-06}, {"id": 227, "seek": 195428, "start": 1954.28, "end": 1971.28, "text": " represents a vector in the same direction as 3j4.", "tokens": [8855, 257, 8062, 294, 264, 912, 3513, 382, 805, 73, 19, 13], "temperature": 0.0, "avg_logprob": -0.15672966837882996, "compression_ratio": 0.875, "no_speech_prob": 9.36833839659812e-06}, {"id": 228, "seek": 197128, "start": 1971.28, "end": 1994.28, "text": " But with a magnitude of 5, it's 3j4 divided by 5.", "tokens": [583, 365, 257, 15668, 295, 1025, 11, 309, 311, 805, 73, 19, 6666, 538, 1025, 13], "temperature": 0.0, "avg_logprob": -0.1533316203526088, "compression_ratio": 0.9027777777777778, "no_speech_prob": 7.0717242124374025e-06}, {"id": 229, "seek": 197128, "start": 1994.28, "end": 1997.28, "text": " OK, how's that?", "tokens": [2264, 11, 577, 311, 300, 30], "temperature": 0.0, "avg_logprob": -0.1533316203526088, "compression_ratio": 0.9027777777777778, "no_speech_prob": 7.0717242124374025e-06}, {"id": 230, "seek": 199728, "start": 1997.28, "end": 2001.28, "text": " So that's dyadic times.", "tokens": [407, 300, 311, 14584, 43341, 1413, 13], "temperature": 0.0, "avg_logprob": -0.11778762936592102, "compression_ratio": 1.4294871794871795, "no_speech_prob": 2.6270503440173343e-05}, {"id": 231, "seek": 199728, "start": 2001.28, "end": 2007.28, "text": " Now that does mean that we just use divide, and I don't want to use anything until we've introduced it.", "tokens": [823, 300, 775, 914, 300, 321, 445, 764, 9845, 11, 293, 286, 500, 380, 528, 281, 764, 1340, 1826, 321, 600, 7268, 309, 13], "temperature": 0.0, "avg_logprob": -0.11778762936592102, "compression_ratio": 1.4294871794871795, "no_speech_prob": 2.6270503440173343e-05}, {"id": 232, "seek": 199728, "start": 2007.28, "end": 2013.28, "text": " So we should probably do divide first.", "tokens": [407, 321, 820, 1391, 360, 9845, 700, 13], "temperature": 0.0, "avg_logprob": -0.11778762936592102, "compression_ratio": 1.4294871794871795, "no_speech_prob": 2.6270503440173343e-05}, {"id": 233, "seek": 199728, "start": 2013.28, "end": 2021.28, "text": " And divide, I think, is actually a bit of an easier one.", "tokens": [400, 9845, 11, 286, 519, 11, 307, 767, 257, 857, 295, 364, 3571, 472, 13], "temperature": 0.0, "avg_logprob": -0.11778762936592102, "compression_ratio": 1.4294871794871795, "no_speech_prob": 2.6270503440173343e-05}, {"id": 234, "seek": 202128, "start": 2021.28, "end": 2033.28, "text": " OK, so divide, which is on the equal sign on the APL keyboard.", "tokens": [2264, 11, 370, 9845, 11, 597, 307, 322, 264, 2681, 1465, 322, 264, 5372, 43, 10186, 13], "temperature": 0.0, "avg_logprob": -0.1585916064002297, "compression_ratio": 1.22, "no_speech_prob": 1.406356295774458e-05}, {"id": 235, "seek": 202128, "start": 2033.28, "end": 2036.28, "text": " Here we are.", "tokens": [1692, 321, 366, 13], "temperature": 0.0, "avg_logprob": -0.1585916064002297, "compression_ratio": 1.22, "no_speech_prob": 1.406356295774458e-05}, {"id": 236, "seek": 202128, "start": 2036.28, "end": 2041.28, "text": " OK, so that's called divide sign.", "tokens": [2264, 11, 370, 300, 311, 1219, 9845, 1465, 13], "temperature": 0.0, "avg_logprob": -0.1585916064002297, "compression_ratio": 1.22, "no_speech_prob": 1.406356295774458e-05}, {"id": 237, "seek": 202128, "start": 2041.28, "end": 2047.28, "text": " Divide sign.", "tokens": [9886, 482, 1465, 13], "temperature": 0.0, "avg_logprob": -0.1585916064002297, "compression_ratio": 1.22, "no_speech_prob": 1.406356295774458e-05}, {"id": 238, "seek": 204728, "start": 2047.28, "end": 2064.2799999999997, "text": " The monadic version called reciprocal.", "tokens": [440, 1108, 43341, 3037, 1219, 46948, 13], "temperature": 0.0, "avg_logprob": -0.2966898571361195, "compression_ratio": 0.8636363636363636, "no_speech_prob": 5.47564632142894e-05}, {"id": 239, "seek": 206428, "start": 2064.28, "end": 2078.28, "text": " And the dyadic version is called divided by.", "tokens": [400, 264, 14584, 43341, 3037, 307, 1219, 6666, 538, 13], "temperature": 0.0, "avg_logprob": -0.06143084005876021, "compression_ratio": 1.3517241379310345, "no_speech_prob": 4.029391675430816e-06}, {"id": 240, "seek": 206428, "start": 2078.28, "end": 2087.28, "text": " OK, and I guess what we could do is grab all of those and paste them in here.", "tokens": [2264, 11, 293, 286, 2041, 437, 321, 727, 360, 307, 4444, 439, 295, 729, 293, 9163, 552, 294, 510, 13], "temperature": 0.0, "avg_logprob": -0.06143084005876021, "compression_ratio": 1.3517241379310345, "no_speech_prob": 4.029391675430816e-06}, {"id": 241, "seek": 206428, "start": 2087.28, "end": 2093.28, "text": " And I wonder if this works. Can we go find times and replace with divide?", "tokens": [400, 286, 2441, 498, 341, 1985, 13, 1664, 321, 352, 915, 1413, 293, 7406, 365, 9845, 30], "temperature": 0.0, "avg_logprob": -0.06143084005876021, "compression_ratio": 1.3517241379310345, "no_speech_prob": 4.029391675430816e-06}, {"id": 242, "seek": 209328, "start": 2093.28, "end": 2096.28, "text": " Oh, lovely.", "tokens": [876, 11, 7496, 13], "temperature": 0.0, "avg_logprob": -0.08188306808471679, "compression_ratio": 1.1637931034482758, "no_speech_prob": 1.2217999938002322e-05}, {"id": 243, "seek": 209328, "start": 2096.28, "end": 2099.28, "text": " There we go.", "tokens": [821, 321, 352, 13], "temperature": 0.0, "avg_logprob": -0.08188306808471679, "compression_ratio": 1.1637931034482758, "no_speech_prob": 1.2217999938002322e-05}, {"id": 244, "seek": 209328, "start": 2099.28, "end": 2103.28, "text": " OK, so divided by is easy.", "tokens": [2264, 11, 370, 6666, 538, 307, 1858, 13], "temperature": 0.0, "avg_logprob": -0.08188306808471679, "compression_ratio": 1.1637931034482758, "no_speech_prob": 1.2217999938002322e-05}, {"id": 245, "seek": 209328, "start": 2103.28, "end": 2114.28, "text": " Does anybody here not know what reciprocal does?", "tokens": [4402, 4472, 510, 406, 458, 437, 46948, 775, 30], "temperature": 0.0, "avg_logprob": -0.08188306808471679, "compression_ratio": 1.1637931034482758, "no_speech_prob": 1.2217999938002322e-05}, {"id": 246, "seek": 209328, "start": 2114.28, "end": 2119.28, "text": " Maybe we don't. Oh, we can't do 0.", "tokens": [2704, 321, 500, 380, 13, 876, 11, 321, 393, 380, 360, 1958, 13], "temperature": 0.0, "avg_logprob": -0.08188306808471679, "compression_ratio": 1.1637931034482758, "no_speech_prob": 1.2217999938002322e-05}, {"id": 247, "seek": 211928, "start": 2119.28, "end": 2124.28, "text": " OK, let's change this to 3.", "tokens": [2264, 11, 718, 311, 1319, 341, 281, 805, 13], "temperature": 0.0, "avg_logprob": -0.17763829231262207, "compression_ratio": 1.475609756097561, "no_speech_prob": 9.223027518601157e-06}, {"id": 248, "seek": 211928, "start": 2124.28, "end": 2132.28, "text": " As a side note, I found the reciprocal to be kind of handy when I'm doing any square roots or cube roots or anything like that.", "tokens": [1018, 257, 1252, 3637, 11, 286, 1352, 264, 46948, 281, 312, 733, 295, 13239, 562, 286, 478, 884, 604, 3732, 10669, 420, 13728, 10669, 420, 1340, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.17763829231262207, "compression_ratio": 1.475609756097561, "no_speech_prob": 9.223027518601157e-06}, {"id": 249, "seek": 211928, "start": 2132.28, "end": 2141.28, "text": " Because then you can do, rather than doing 0.5 power, you can do 16 to the reciprocal.", "tokens": [1436, 550, 291, 393, 360, 11, 2831, 813, 884, 1958, 13, 20, 1347, 11, 291, 393, 360, 3165, 281, 264, 46948, 13], "temperature": 0.0, "avg_logprob": -0.17763829231262207, "compression_ratio": 1.475609756097561, "no_speech_prob": 9.223027518601157e-06}, {"id": 250, "seek": 214128, "start": 2141.28, "end": 2153.28, "text": " To the power of reciprocal 3. For example, yes, a cube root. You could do the cube root of 8 like so.", "tokens": [1407, 264, 1347, 295, 46948, 805, 13, 1171, 1365, 11, 2086, 11, 257, 13728, 5593, 13, 509, 727, 360, 264, 13728, 5593, 295, 1649, 411, 370, 13], "temperature": 0.0, "avg_logprob": -0.19649654388427734, "compression_ratio": 1.6376146788990826, "no_speech_prob": 1.2679183782893233e-06}, {"id": 251, "seek": 214128, "start": 2153.28, "end": 2160.28, "text": " And I think you need those parentheses. Yeah, exactly. I don't think we need the parentheses.", "tokens": [400, 286, 519, 291, 643, 729, 34153, 13, 865, 11, 2293, 13, 286, 500, 380, 519, 321, 643, 264, 34153, 13], "temperature": 0.0, "avg_logprob": -0.19649654388427734, "compression_ratio": 1.6376146788990826, "no_speech_prob": 1.2679183782893233e-06}, {"id": 252, "seek": 214128, "start": 2160.28, "end": 2164.28, "text": " Because first it does it one at a time, right? So it's going to do divide.", "tokens": [1436, 700, 309, 775, 309, 472, 412, 257, 565, 11, 558, 30, 407, 309, 311, 516, 281, 360, 9845, 13], "temperature": 0.0, "avg_logprob": -0.19649654388427734, "compression_ratio": 1.6376146788990826, "no_speech_prob": 1.2679183782893233e-06}, {"id": 253, "seek": 214128, "start": 2164.28, "end": 2169.28, "text": " So this is going to be the first thing it does is divide 3. It's this reciprocal of 3.", "tokens": [407, 341, 307, 516, 281, 312, 264, 700, 551, 309, 775, 307, 9845, 805, 13, 467, 311, 341, 46948, 295, 805, 13], "temperature": 0.0, "avg_logprob": -0.19649654388427734, "compression_ratio": 1.6376146788990826, "no_speech_prob": 1.2679183782893233e-06}, {"id": 254, "seek": 216928, "start": 2169.28, "end": 2178.28, "text": " And then it's going to be power of on the left will be 8 and on the right will be reciprocal 3, which is cool.", "tokens": [400, 550, 309, 311, 516, 281, 312, 1347, 295, 322, 264, 1411, 486, 312, 1649, 293, 322, 264, 558, 486, 312, 46948, 805, 11, 597, 307, 1627, 13], "temperature": 0.0, "avg_logprob": -0.11855271079323508, "compression_ratio": 1.4125874125874125, "no_speech_prob": 1.1124727279820945e-05}, {"id": 255, "seek": 216928, "start": 2178.28, "end": 2189.28, "text": " So it's like function composition. Yes, it is, which is actually a great time to talk about", "tokens": [407, 309, 311, 411, 2445, 12686, 13, 1079, 11, 309, 307, 11, 597, 307, 767, 257, 869, 565, 281, 751, 466], "temperature": 0.0, "avg_logprob": -0.11855271079323508, "compression_ratio": 1.4125874125874125, "no_speech_prob": 1.1124727279820945e-05}, {"id": 256, "seek": 218928, "start": 2189.28, "end": 2201.28, "text": " that, because we've now got our four basic operators for math.", "tokens": [300, 11, 570, 321, 600, 586, 658, 527, 1451, 3875, 19077, 337, 5221, 13], "temperature": 0.0, "avg_logprob": -0.09336288770039876, "compression_ratio": 1.127659574468085, "no_speech_prob": 1.9828608856187202e-05}, {"id": 257, "seek": 218928, "start": 2201.28, "end": 2209.28, "text": " And so we should now talk about precedence.", "tokens": [400, 370, 321, 820, 586, 751, 466, 16969, 655, 13], "temperature": 0.0, "avg_logprob": -0.09336288770039876, "compression_ratio": 1.127659574468085, "no_speech_prob": 1.9828608856187202e-05}, {"id": 258, "seek": 220928, "start": 2209.28, "end": 2229.28, "text": " And I think I want to change my headings a little bit.", "tokens": [400, 286, 519, 286, 528, 281, 1319, 452, 1378, 1109, 257, 707, 857, 13], "temperature": 0.0, "avg_logprob": -0.08662985430823432, "compression_ratio": 0.9, "no_speech_prob": 3.48039175150916e-05}, {"id": 259, "seek": 222928, "start": 2229.28, "end": 2247.28, "text": " I'm going to create a section called basic math operators.", "tokens": [286, 478, 516, 281, 1884, 257, 3541, 1219, 3875, 5221, 19077, 13], "temperature": 0.0, "avg_logprob": -0.2579934000968933, "compression_ratio": 0.9354838709677419, "no_speech_prob": 3.5352921258891e-05}, {"id": 260, "seek": 224728, "start": 2247.28, "end": 2259.28, "text": " Oops. What have I got here? I've got plus sign twice. Do something weird.", "tokens": [21726, 13, 708, 362, 286, 658, 510, 30, 286, 600, 658, 1804, 1465, 6091, 13, 1144, 746, 3657, 13], "temperature": 0.0, "avg_logprob": -0.23010998186857803, "compression_ratio": 0.9605263157894737, "no_speech_prob": 7.719507266301662e-05}, {"id": 261, "seek": 225928, "start": 2259.28, "end": 2281.28, "text": " Minus, monadic minus, plus sign, monadic plus.", "tokens": [2829, 301, 11, 1108, 43341, 3175, 11, 1804, 1465, 11, 1108, 43341, 1804, 13], "temperature": 0.0, "avg_logprob": -0.35731108983357746, "compression_ratio": 1.1794871794871795, "no_speech_prob": 4.3997340981150046e-05}, {"id": 262, "seek": 228128, "start": 2281.28, "end": 2290.28, "text": " Minus, monadic, dyadic times, monadic, dyadic.", "tokens": [2829, 301, 11, 1108, 43341, 11, 14584, 43341, 1413, 11, 1108, 43341, 11, 14584, 43341, 13], "temperature": 0.0, "avg_logprob": -0.32941110134124757, "compression_ratio": 1.3142857142857143, "no_speech_prob": 4.029274805361638e-06}, {"id": 263, "seek": 229028, "start": 2290.28, "end": 2311.28, "text": " Precedence. So here is a formula. 3 times 2 plus 1.", "tokens": [6001, 1232, 655, 13, 407, 510, 307, 257, 8513, 13, 805, 1413, 568, 1804, 502, 13], "temperature": 0.0, "avg_logprob": -0.1670678973197937, "compression_ratio": 0.864406779661017, "no_speech_prob": 4.71077828478883e-06}, {"id": 264, "seek": 231128, "start": 2311.28, "end": 2321.28, "text": " OK, so in regular math, we would go 3 times 2 first, get 6, and then we'd add 1 and get 7.", "tokens": [2264, 11, 370, 294, 3890, 5221, 11, 321, 576, 352, 805, 1413, 568, 700, 11, 483, 1386, 11, 293, 550, 321, 1116, 909, 502, 293, 483, 1614, 13], "temperature": 0.0, "avg_logprob": -0.09854529017493838, "compression_ratio": 1.4505494505494505, "no_speech_prob": 4.637658093997743e-06}, {"id": 265, "seek": 231128, "start": 2321.28, "end": 2326.28, "text": " And there's a couple of reasons we do that. The first is that times is a higher precedence than plus.", "tokens": [400, 456, 311, 257, 1916, 295, 4112, 321, 360, 300, 13, 440, 700, 307, 300, 1413, 307, 257, 2946, 16969, 655, 813, 1804, 13], "temperature": 0.0, "avg_logprob": -0.09854529017493838, "compression_ratio": 1.4505494505494505, "no_speech_prob": 4.637658093997743e-06}, {"id": 266, "seek": 231128, "start": 2326.28, "end": 2334.28, "text": " And even if it wasn't, we go left to right. So is this 7? No, it's not.", "tokens": [400, 754, 498, 309, 2067, 380, 11, 321, 352, 1411, 281, 558, 13, 407, 307, 341, 1614, 30, 883, 11, 309, 311, 406, 13], "temperature": 0.0, "avg_logprob": -0.09854529017493838, "compression_ratio": 1.4505494505494505, "no_speech_prob": 4.637658093997743e-06}, {"id": 267, "seek": 233428, "start": 2334.28, "end": 2345.28, "text": " And that's because APL makes things much simpler for us by having no concept of precedence of different functions.", "tokens": [400, 300, 311, 570, 5372, 43, 1669, 721, 709, 18587, 337, 505, 538, 1419, 572, 3410, 295, 16969, 655, 295, 819, 6828, 13], "temperature": 0.0, "avg_logprob": -0.031189197585696264, "compression_ratio": 1.4695121951219512, "no_speech_prob": 5.093261734145926e-06}, {"id": 268, "seek": 233428, "start": 2345.28, "end": 2351.28, "text": " They all have the same precedence. And the rule is we always go right to left, not left to right.", "tokens": [814, 439, 362, 264, 912, 16969, 655, 13, 400, 264, 4978, 307, 321, 1009, 352, 558, 281, 1411, 11, 406, 1411, 281, 558, 13], "temperature": 0.0, "avg_logprob": -0.031189197585696264, "compression_ratio": 1.4695121951219512, "no_speech_prob": 5.093261734145926e-06}, {"id": 269, "seek": 233428, "start": 2351.28, "end": 2358.28, "text": " So this is the same as this.", "tokens": [407, 341, 307, 264, 912, 382, 341, 13], "temperature": 0.0, "avg_logprob": -0.031189197585696264, "compression_ratio": 1.4695121951219512, "no_speech_prob": 5.093261734145926e-06}, {"id": 270, "seek": 235828, "start": 2358.28, "end": 2367.28, "text": " And that's good because you wouldn't want to remember precedence rules for all what are these, like 50 or 60 or whatever glyphs, right?", "tokens": [400, 300, 311, 665, 570, 291, 2759, 380, 528, 281, 1604, 16969, 655, 4474, 337, 439, 437, 366, 613, 11, 411, 2625, 420, 4060, 420, 2035, 22633, 950, 82, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.09772308763251247, "compression_ratio": 1.6395939086294415, "no_speech_prob": 6.4389196268166415e-06}, {"id": 271, "seek": 235828, "start": 2367.28, "end": 2374.28, "text": " So they all have the same precedence. That doesn't mean all symbols have the same precedence.", "tokens": [407, 436, 439, 362, 264, 912, 16969, 655, 13, 663, 1177, 380, 914, 439, 16944, 362, 264, 912, 16969, 655, 13], "temperature": 0.0, "avg_logprob": -0.09772308763251247, "compression_ratio": 1.6395939086294415, "no_speech_prob": 6.4389196268166415e-06}, {"id": 272, "seek": 235828, "start": 2374.28, "end": 2380.28, "text": " We've learned of a few symbols that have different precedence. So, for example, space, right?", "tokens": [492, 600, 3264, 295, 257, 1326, 16944, 300, 362, 819, 16969, 655, 13, 407, 11, 337, 1365, 11, 1901, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.09772308763251247, "compression_ratio": 1.6395939086294415, "no_speech_prob": 6.4389196268166415e-06}, {"id": 273, "seek": 238028, "start": 2380.28, "end": 2391.28, "text": " 3 plus 4 space 2. Space between numbers binds more tightly.", "tokens": [805, 1804, 1017, 1901, 568, 13, 8705, 1296, 3547, 41515, 544, 21952, 13], "temperature": 0.0, "avg_logprob": -0.13436759068415716, "compression_ratio": 1.5616438356164384, "no_speech_prob": 5.25535824635881e-06}, {"id": 274, "seek": 238028, "start": 2391.28, "end": 2395.28, "text": " I guess this would be better to explain like this. This binds more tightly.", "tokens": [286, 2041, 341, 576, 312, 1101, 281, 2903, 411, 341, 13, 639, 41515, 544, 21952, 13], "temperature": 0.0, "avg_logprob": -0.13436759068415716, "compression_ratio": 1.5616438356164384, "no_speech_prob": 5.25535824635881e-06}, {"id": 275, "seek": 238028, "start": 2395.28, "end": 2406.28, "text": " So this is the list 3, 5 added to 4 or the array 3, 5 added to 4, which is the same as that.", "tokens": [407, 341, 307, 264, 1329, 805, 11, 1025, 3869, 281, 1017, 420, 264, 10225, 805, 11, 1025, 3869, 281, 1017, 11, 597, 307, 264, 912, 382, 300, 13], "temperature": 0.0, "avg_logprob": -0.13436759068415716, "compression_ratio": 1.5616438356164384, "no_speech_prob": 5.25535824635881e-06}, {"id": 276, "seek": 240628, "start": 2406.28, "end": 2411.28, "text": " So when I say we're doing things right to left, I'm only talking about functions.", "tokens": [407, 562, 286, 584, 321, 434, 884, 721, 558, 281, 1411, 11, 286, 478, 787, 1417, 466, 6828, 13], "temperature": 0.0, "avg_logprob": -0.09774674438848728, "compression_ratio": 1.7195767195767195, "no_speech_prob": 1.9947151486121584e-06}, {"id": 277, "seek": 240628, "start": 2411.28, "end": 2418.28, "text": " And remember that upper bar thing is not a function.", "tokens": [400, 1604, 300, 6597, 2159, 551, 307, 406, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.09774674438848728, "compression_ratio": 1.7195767195767195, "no_speech_prob": 1.9947151486121584e-06}, {"id": 278, "seek": 240628, "start": 2418.28, "end": 2426.28, "text": " That's part of the number. And this space here is not a function. That's part of this array.", "tokens": [663, 311, 644, 295, 264, 1230, 13, 400, 341, 1901, 510, 307, 406, 257, 2445, 13, 663, 311, 644, 295, 341, 10225, 13], "temperature": 0.0, "avg_logprob": -0.09774674438848728, "compression_ratio": 1.7195767195767195, "no_speech_prob": 1.9947151486121584e-06}, {"id": 279, "seek": 240628, "start": 2426.28, "end": 2435.28, "text": " So functions specifically, you can tell something's a function because you look it up in the help", "tokens": [407, 6828, 4682, 11, 291, 393, 980, 746, 311, 257, 2445, 570, 291, 574, 309, 493, 294, 264, 854], "temperature": 0.0, "avg_logprob": -0.09774674438848728, "compression_ratio": 1.7195767195767195, "no_speech_prob": 1.9947151486121584e-06}, {"id": 280, "seek": 243528, "start": 2435.28, "end": 2440.28, "text": " and I'll tell you it's a function.", "tokens": [293, 286, 603, 980, 291, 309, 311, 257, 2445, 13], "temperature": 0.0, "avg_logprob": -0.13879494283391142, "compression_ratio": 1.693069306930693, "no_speech_prob": 1.045134285959648e-05}, {"id": 281, "seek": 243528, "start": 2440.28, "end": 2444.28, "text": " OK, we can see here it's listed under the section called primitive functions.", "tokens": [2264, 11, 321, 393, 536, 510, 309, 311, 10052, 833, 264, 3541, 1219, 28540, 6828, 13], "temperature": 0.0, "avg_logprob": -0.13879494283391142, "compression_ratio": 1.693069306930693, "no_speech_prob": 1.045134285959648e-05}, {"id": 282, "seek": 243528, "start": 2444.28, "end": 2449.28, "text": " So we can tell that this is a function because in the functions part of the help.", "tokens": [407, 321, 393, 980, 300, 341, 307, 257, 2445, 570, 294, 264, 6828, 644, 295, 264, 854, 13], "temperature": 0.0, "avg_logprob": -0.13879494283391142, "compression_ratio": 1.693069306930693, "no_speech_prob": 1.045134285959648e-05}, {"id": 283, "seek": 243528, "start": 2449.28, "end": 2453.28, "text": " Most of the things up here are going to be functions.", "tokens": [4534, 295, 264, 721, 493, 510, 366, 516, 281, 312, 6828, 13], "temperature": 0.0, "avg_logprob": -0.13879494283391142, "compression_ratio": 1.693069306930693, "no_speech_prob": 1.045134285959648e-05}, {"id": 284, "seek": 243528, "start": 2453.28, "end": 2459.28, "text": " As we'll learn shortly, some of them are operators and the rules are different for operators.", "tokens": [1018, 321, 603, 1466, 13392, 11, 512, 295, 552, 366, 19077, 293, 264, 4474, 366, 819, 337, 19077, 13], "temperature": 0.0, "avg_logprob": -0.13879494283391142, "compression_ratio": 1.693069306930693, "no_speech_prob": 1.045134285959648e-05}, {"id": 285, "seek": 245928, "start": 2459.28, "end": 2468.28, "text": " Most of these of everything we've seen so far in terms of times divide plus and minus are all functions.", "tokens": [4534, 295, 613, 295, 1203, 321, 600, 1612, 370, 1400, 294, 2115, 295, 1413, 9845, 1804, 293, 3175, 366, 439, 6828, 13], "temperature": 0.0, "avg_logprob": -0.1579802787467225, "compression_ratio": 1.5759493670886076, "no_speech_prob": 8.397914825764019e-06}, {"id": 286, "seek": 245928, "start": 2468.28, "end": 2472.28, "text": " So that's the rule. We go right to left.", "tokens": [407, 300, 311, 264, 4978, 13, 492, 352, 558, 281, 1411, 13], "temperature": 0.0, "avg_logprob": -0.1579802787467225, "compression_ratio": 1.5759493670886076, "no_speech_prob": 8.397914825764019e-06}, {"id": 287, "seek": 245928, "start": 2472.28, "end": 2479.28, "text": " So in this version here, right, we go right to left.", "tokens": [407, 294, 341, 3037, 510, 11, 558, 11, 321, 352, 558, 281, 1411, 13], "temperature": 0.0, "avg_logprob": -0.1579802787467225, "compression_ratio": 1.5759493670886076, "no_speech_prob": 8.397914825764019e-06}, {"id": 288, "seek": 245928, "start": 2479.28, "end": 2485.28, "text": " So we've got the number 3. Now we've got 3 divide.", "tokens": [407, 321, 600, 658, 264, 1230, 805, 13, 823, 321, 600, 658, 805, 9845, 13], "temperature": 0.0, "avg_logprob": -0.1579802787467225, "compression_ratio": 1.5759493670886076, "no_speech_prob": 8.397914825764019e-06}, {"id": 289, "seek": 248528, "start": 2485.28, "end": 2489.28, "text": " That means the reciprocal of 3. And then we keep going left.", "tokens": [663, 1355, 264, 46948, 295, 805, 13, 400, 550, 321, 1066, 516, 1411, 13], "temperature": 0.0, "avg_logprob": -0.12817598318124745, "compression_ratio": 1.5705521472392638, "no_speech_prob": 9.223283086612355e-06}, {"id": 290, "seek": 248528, "start": 2489.28, "end": 2496.28, "text": " We come across this time, this power of and it has a right hand side and it has a left hand side.", "tokens": [492, 808, 2108, 341, 565, 11, 341, 1347, 295, 293, 309, 575, 257, 558, 1011, 1252, 293, 309, 575, 257, 1411, 1011, 1252, 13], "temperature": 0.0, "avg_logprob": -0.12817598318124745, "compression_ratio": 1.5705521472392638, "no_speech_prob": 9.223283086612355e-06}, {"id": 291, "seek": 248528, "start": 2496.28, "end": 2500.28, "text": " And that's why this is 8 to the power of a third.", "tokens": [400, 300, 311, 983, 341, 307, 1649, 281, 264, 1347, 295, 257, 2636, 13], "temperature": 0.0, "avg_logprob": -0.12817598318124745, "compression_ratio": 1.5705521472392638, "no_speech_prob": 9.223283086612355e-06}, {"id": 292, "seek": 248528, "start": 2500.28, "end": 2508.28, "text": " So make sense?", "tokens": [407, 652, 2020, 30], "temperature": 0.0, "avg_logprob": -0.12817598318124745, "compression_ratio": 1.5705521472392638, "no_speech_prob": 9.223283086612355e-06}, {"id": 293, "seek": 248528, "start": 2508.28, "end": 2512.28, "text": " So we could do that with a list.", "tokens": [407, 321, 727, 360, 300, 365, 257, 1329, 13], "temperature": 0.0, "avg_logprob": -0.12817598318124745, "compression_ratio": 1.5705521472392638, "no_speech_prob": 9.223283086612355e-06}, {"id": 294, "seek": 251228, "start": 2512.28, "end": 2516.28, "text": " And so remember, the symbol space binds the most tightly.", "tokens": [400, 370, 1604, 11, 264, 5986, 1901, 41515, 264, 881, 21952, 13], "temperature": 0.0, "avg_logprob": -0.1554897437661381, "compression_ratio": 1.4295774647887325, "no_speech_prob": 4.785014880326344e-06}, {"id": 295, "seek": 251228, "start": 2516.28, "end": 2524.28, "text": " This is the list 1, 2, 3 multiplied by 2 plus 1 because we go right to left.", "tokens": [639, 307, 264, 1329, 502, 11, 568, 11, 805, 17207, 538, 568, 1804, 502, 570, 321, 352, 558, 281, 1411, 13], "temperature": 0.0, "avg_logprob": -0.1554897437661381, "compression_ratio": 1.4295774647887325, "no_speech_prob": 4.785014880326344e-06}, {"id": 296, "seek": 251228, "start": 2524.28, "end": 2538.28, "text": " So we go 1 plus 2 times this list. That'll be three times that list.", "tokens": [407, 321, 352, 502, 1804, 568, 1413, 341, 1329, 13, 663, 603, 312, 1045, 1413, 300, 1329, 13], "temperature": 0.0, "avg_logprob": -0.1554897437661381, "compression_ratio": 1.4295774647887325, "no_speech_prob": 4.785014880326344e-06}, {"id": 297, "seek": 253828, "start": 2538.28, "end": 2542.28, "text": " And we could also do this.", "tokens": [400, 321, 727, 611, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.12458886855687851, "compression_ratio": 1.5, "no_speech_prob": 8.397952115046792e-06}, {"id": 298, "seek": 253828, "start": 2542.28, "end": 2547.28, "text": " So this will be this list to this array 2, 4, 6 plus 2.", "tokens": [407, 341, 486, 312, 341, 1329, 281, 341, 10225, 568, 11, 1017, 11, 1386, 1804, 568, 13], "temperature": 0.0, "avg_logprob": -0.12458886855687851, "compression_ratio": 1.5, "no_speech_prob": 8.397952115046792e-06}, {"id": 299, "seek": 253828, "start": 2547.28, "end": 2553.28, "text": " So all that in brackets and then multiplied by the array 1, 2, 3.", "tokens": [407, 439, 300, 294, 26179, 293, 550, 17207, 538, 264, 10225, 502, 11, 568, 11, 805, 13], "temperature": 0.0, "avg_logprob": -0.12458886855687851, "compression_ratio": 1.5, "no_speech_prob": 8.397952115046792e-06}, {"id": 300, "seek": 253828, "start": 2553.28, "end": 2559.28, "text": " So 2 plus 2 is 4. 2 plus 4 is 6. 2 plus 6 is 8.", "tokens": [407, 568, 1804, 568, 307, 1017, 13, 568, 1804, 1017, 307, 1386, 13, 568, 1804, 1386, 307, 1649, 13], "temperature": 0.0, "avg_logprob": -0.12458886855687851, "compression_ratio": 1.5, "no_speech_prob": 8.397952115046792e-06}, {"id": 301, "seek": 253828, "start": 2559.28, "end": 2563.28, "text": " 8 times 3 is 24.", "tokens": [1649, 1413, 805, 307, 4022, 13], "temperature": 0.0, "avg_logprob": -0.12458886855687851, "compression_ratio": 1.5, "no_speech_prob": 8.397952115046792e-06}, {"id": 302, "seek": 256328, "start": 2563.28, "end": 2569.28, "text": " 6 times 2 is 12. 4 times 1 is 4.", "tokens": [1386, 1413, 568, 307, 2272, 13, 1017, 1413, 502, 307, 1017, 13], "temperature": 0.0, "avg_logprob": -0.18194038684551533, "compression_ratio": 1.371069182389937, "no_speech_prob": 1.5205190720735118e-05}, {"id": 303, "seek": 256328, "start": 2569.28, "end": 2572.28, "text": " That make sense?", "tokens": [663, 652, 2020, 30], "temperature": 0.0, "avg_logprob": -0.18194038684551533, "compression_ratio": 1.371069182389937, "no_speech_prob": 1.5205190720735118e-05}, {"id": 304, "seek": 256328, "start": 2572.28, "end": 2584.28, "text": " Yes. So I'm not sure if that's related, but that function for giving us the magnitude direction was, I think,", "tokens": [1079, 13, 407, 286, 478, 406, 988, 498, 300, 311, 4077, 11, 457, 300, 2445, 337, 2902, 505, 264, 15668, 3513, 390, 11, 286, 519, 11], "temperature": 0.0, "avg_logprob": -0.18194038684551533, "compression_ratio": 1.371069182389937, "no_speech_prob": 1.5205190720735118e-05}, {"id": 305, "seek": 256328, "start": 2584.28, "end": 2592.28, "text": " that would for an array, it still works on each component.", "tokens": [300, 576, 337, 364, 10225, 11, 309, 920, 1985, 322, 1184, 6542, 13], "temperature": 0.0, "avg_logprob": -0.18194038684551533, "compression_ratio": 1.371069182389937, "no_speech_prob": 1.5205190720735118e-05}, {"id": 306, "seek": 259228, "start": 2592.28, "end": 2595.28, "text": " It doesn't normalize the whole array.", "tokens": [467, 1177, 380, 2710, 1125, 264, 1379, 10225, 13], "temperature": 0.0, "avg_logprob": -0.13827090263366698, "compression_ratio": 1.377245508982036, "no_speech_prob": 6.2406684264715295e-06}, {"id": 307, "seek": 259228, "start": 2595.28, "end": 2606.28, "text": " Right. Right. Basically, pretty much all the functions in their normal forms work element-wise,", "tokens": [1779, 13, 1779, 13, 8537, 11, 1238, 709, 439, 264, 6828, 294, 641, 2710, 6422, 589, 4478, 12, 3711, 11], "temperature": 0.0, "avg_logprob": -0.13827090263366698, "compression_ratio": 1.377245508982036, "no_speech_prob": 6.2406684264715295e-06}, {"id": 308, "seek": 259228, "start": 2606.28, "end": 2614.28, "text": " like NumPy does, including power and reciprocal and magnitude and so forth.", "tokens": [411, 22592, 47, 88, 775, 11, 3009, 1347, 293, 46948, 293, 15668, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.13827090263366698, "compression_ratio": 1.377245508982036, "no_speech_prob": 6.2406684264715295e-06}, {"id": 309, "seek": 261428, "start": 2614.28, "end": 2632.28, "text": " That's a good point.", "tokens": [663, 311, 257, 665, 935, 13], "temperature": 0.0, "avg_logprob": -0.1457663812944966, "compression_ratio": 0.975609756097561, "no_speech_prob": 1.3004096217628103e-05}, {"id": 310, "seek": 261428, "start": 2632.28, "end": 2636.28, "text": " Did you go over the power of symbol? I don't know.", "tokens": [2589, 291, 352, 670, 264, 1347, 295, 5986, 30, 286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.1457663812944966, "compression_ratio": 0.975609756097561, "no_speech_prob": 1.3004096217628103e-05}, {"id": 311, "seek": 261428, "start": 2636.28, "end": 2641.28, "text": " Not yet.", "tokens": [1726, 1939, 13], "temperature": 0.0, "avg_logprob": -0.1457663812944966, "compression_ratio": 0.975609756097561, "no_speech_prob": 1.3004096217628103e-05}, {"id": 312, "seek": 264128, "start": 2641.28, "end": 2646.28, "text": " I thought we might do that now.", "tokens": [286, 1194, 321, 1062, 360, 300, 586, 13], "temperature": 0.0, "avg_logprob": -0.09566469028078277, "compression_ratio": 1.175, "no_speech_prob": 5.6816661526681855e-06}, {"id": 313, "seek": 264128, "start": 2646.28, "end": 2659.28, "text": " I think that kind of counts as a basic math operator, kind of.", "tokens": [286, 519, 300, 733, 295, 14893, 382, 257, 3875, 5221, 12973, 11, 733, 295, 13], "temperature": 0.0, "avg_logprob": -0.09566469028078277, "compression_ratio": 1.175, "no_speech_prob": 5.6816661526681855e-06}, {"id": 314, "seek": 265928, "start": 2659.28, "end": 2671.28, "text": " So.", "tokens": [407, 13], "temperature": 0.0, "avg_logprob": -0.2605981296963162, "compression_ratio": 1.0842105263157895, "no_speech_prob": 3.1380425298266346e-06}, {"id": 315, "seek": 265928, "start": 2671.28, "end": 2676.28, "text": " Yeah. So let's do. OK. So this is confusing.", "tokens": [865, 13, 407, 718, 311, 360, 13, 2264, 13, 407, 341, 307, 13181, 13], "temperature": 0.0, "avg_logprob": -0.2605981296963162, "compression_ratio": 1.0842105263157895, "no_speech_prob": 3.1380425298266346e-06}, {"id": 316, "seek": 265928, "start": 2676.28, "end": 2681.28, "text": " This is shift 8, the normal multiply sign from Python.", "tokens": [639, 307, 5513, 1649, 11, 264, 2710, 12972, 1465, 490, 15329, 13], "temperature": 0.0, "avg_logprob": -0.2605981296963162, "compression_ratio": 1.0842105263157895, "no_speech_prob": 3.1380425298266346e-06}, {"id": 317, "seek": 268128, "start": 2681.28, "end": 2690.28, "text": " It doesn't mean multiply.", "tokens": [467, 1177, 380, 914, 12972, 13], "temperature": 0.0, "avg_logprob": -0.2280280590057373, "compression_ratio": 0.7575757575757576, "no_speech_prob": 9.816848432819825e-06}, {"id": 318, "seek": 269028, "start": 2690.28, "end": 2715.28, "text": " It's exponential or power. So and it's called star.", "tokens": [467, 311, 21510, 420, 1347, 13, 407, 293, 309, 311, 1219, 3543, 13], "temperature": 0.0, "avg_logprob": -0.2646966822007123, "compression_ratio": 0.8947368421052632, "no_speech_prob": 1.3207134543335997e-05}, {"id": 319, "seek": 271528, "start": 2715.28, "end": 2731.28, "text": " OK.", "tokens": [2264, 13], "temperature": 0.0, "avg_logprob": -0.3070914347966512, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.0001793105184333399}, {"id": 320, "seek": 273128, "start": 2731.28, "end": 2757.28, "text": " And dyadic power.", "tokens": [400, 14584, 43341, 1347, 13], "temperature": 0.0, "avg_logprob": -0.2503478791978624, "compression_ratio": 0.68, "no_speech_prob": 5.421916739578592e-06}, {"id": 321, "seek": 275728, "start": 2757.28, "end": 2767.28, "text": " So exponential means e to the power of. So this is e to the power of zero is one.", "tokens": [407, 21510, 1355, 308, 281, 264, 1347, 295, 13, 407, 341, 307, 308, 281, 264, 1347, 295, 4018, 307, 472, 13], "temperature": 0.0, "avg_logprob": -0.2082635498046875, "compression_ratio": 1.208955223880597, "no_speech_prob": 3.3930775771295885e-06}, {"id": 322, "seek": 276728, "start": 2767.28, "end": 2787.28, "text": " e to the power of one is two point seven eight and e to the power of two apparently is seven point three eight nine.", "tokens": [308, 281, 264, 1347, 295, 472, 307, 732, 935, 3407, 3180, 293, 308, 281, 264, 1347, 295, 732, 7970, 307, 3407, 935, 1045, 3180, 4949, 13], "temperature": 0.0, "avg_logprob": -0.23339608250832072, "compression_ratio": 1.5689655172413792, "no_speech_prob": 1.7602793604964972e-06}, {"id": 323, "seek": 276728, "start": 2787.28, "end": 2794.28, "text": " Does anybody not know what e is or want a refresher of what e is?", "tokens": [4402, 4472, 406, 458, 437, 308, 307, 420, 528, 257, 17368, 511, 295, 437, 308, 307, 30], "temperature": 0.0, "avg_logprob": -0.23339608250832072, "compression_ratio": 1.5689655172413792, "no_speech_prob": 1.7602793604964972e-06}, {"id": 324, "seek": 279428, "start": 2794.28, "end": 2799.28, "text": " Refreshers are always great.", "tokens": [16957, 3644, 433, 366, 1009, 869, 13], "temperature": 0.0, "avg_logprob": -0.20182970853952262, "compression_ratio": 1.3829787234042554, "no_speech_prob": 3.1184841645881534e-05}, {"id": 325, "seek": 279428, "start": 2799.28, "end": 2808.28, "text": " Sure. The only reason I can do all these refreshers off the top of my head is because I've done all this stuff with my, you know, my daughter and her friend recently.", "tokens": [4894, 13, 440, 787, 1778, 286, 393, 360, 439, 613, 15134, 433, 766, 264, 1192, 295, 452, 1378, 307, 570, 286, 600, 1096, 439, 341, 1507, 365, 452, 11, 291, 458, 11, 452, 4653, 293, 720, 1277, 3938, 13], "temperature": 0.0, "avg_logprob": -0.20182970853952262, "compression_ratio": 1.3829787234042554, "no_speech_prob": 3.1184841645881534e-05}, {"id": 326, "seek": 280828, "start": 2808.28, "end": 2826.28, "text": " So I can I can do math refreshes like this. I've already about a month ago. I couldn't because I'd forgotten everything.", "tokens": [407, 286, 393, 286, 393, 360, 5221, 15134, 279, 411, 341, 13, 286, 600, 1217, 466, 257, 1618, 2057, 13, 286, 2809, 380, 570, 286, 1116, 11832, 1203, 13], "temperature": 0.0, "avg_logprob": -0.18654683141997366, "compression_ratio": 1.1764705882352942, "no_speech_prob": 1.8738056724032504e-06}, {"id": 327, "seek": 282628, "start": 2826.28, "end": 2839.28, "text": " So the basic idea is like if you put one hundred dollars in the bank.", "tokens": [407, 264, 3875, 1558, 307, 411, 498, 291, 829, 472, 3262, 3808, 294, 264, 3765, 13], "temperature": 0.0, "avg_logprob": -0.19988943338394166, "compression_ratio": 1.0147058823529411, "no_speech_prob": 2.873604785236239e-07}, {"id": 328, "seek": 283928, "start": 2839.28, "end": 2857.28, "text": " At 100 percent interest. Then after one year. You'll get two hundred dollars. And specifically that's your original hundred.", "tokens": [1711, 2319, 3043, 1179, 13, 1396, 934, 472, 1064, 13, 509, 603, 483, 732, 3262, 3808, 13, 400, 4682, 300, 311, 428, 3380, 3262, 13], "temperature": 0.0, "avg_logprob": -0.2595592367238012, "compression_ratio": 1.158878504672897, "no_speech_prob": 3.50036771123996e-06}, {"id": 329, "seek": 285728, "start": 2857.28, "end": 2877.28, "text": " Plus. Sorry, I should say. Times. One plus the interest and 100 percent is 100 over 100. So it's one.", "tokens": [7721, 13, 4919, 11, 286, 820, 584, 13, 11366, 13, 1485, 1804, 264, 1179, 293, 2319, 3043, 307, 2319, 670, 2319, 13, 407, 309, 311, 472, 13], "temperature": 0.0, "avg_logprob": -0.2804067673221711, "compression_ratio": 1.086021505376344, "no_speech_prob": 1.5056064057716867e-06}, {"id": 330, "seek": 287728, "start": 2877.28, "end": 2888.28, "text": " But the bank might not give you the whole you know might not calculate the whole thing at the end of the year.", "tokens": [583, 264, 3765, 1062, 406, 976, 291, 264, 1379, 291, 458, 1062, 406, 8873, 264, 1379, 551, 412, 264, 917, 295, 264, 1064, 13], "temperature": 0.0, "avg_logprob": -0.13106428208898324, "compression_ratio": 1.7333333333333334, "no_speech_prob": 4.2226452023896854e-06}, {"id": 331, "seek": 287728, "start": 2888.28, "end": 2895.28, "text": " If they want to be a bit more generous, they could calculate it twice. They could calculate it once at six months and again after another six months.", "tokens": [759, 436, 528, 281, 312, 257, 857, 544, 14537, 11, 436, 727, 8873, 309, 6091, 13, 814, 727, 8873, 309, 1564, 412, 2309, 2493, 293, 797, 934, 1071, 2309, 2493, 13], "temperature": 0.0, "avg_logprob": -0.13106428208898324, "compression_ratio": 1.7333333333333334, "no_speech_prob": 4.2226452023896854e-06}, {"id": 332, "seek": 289528, "start": 2895.28, "end": 2907.28, "text": " So you take your hundred dollars. And after six months. They would give you half of your interest. So it's 50 percent.", "tokens": [407, 291, 747, 428, 3262, 3808, 13, 400, 934, 2309, 2493, 13, 814, 576, 976, 291, 1922, 295, 428, 1179, 13, 407, 309, 311, 2625, 3043, 13], "temperature": 0.0, "avg_logprob": -0.16418497903006418, "compression_ratio": 1.6642335766423357, "no_speech_prob": 3.4465008411643794e-06}, {"id": 333, "seek": 289528, "start": 2907.28, "end": 2915.28, "text": " So after six months you would have 150. And then another six months they would give you the other 50 percent.", "tokens": [407, 934, 2309, 2493, 291, 576, 362, 8451, 13, 400, 550, 1071, 2309, 2493, 436, 576, 976, 291, 264, 661, 2625, 3043, 13], "temperature": 0.0, "avg_logprob": -0.16418497903006418, "compression_ratio": 1.6642335766423357, "no_speech_prob": 3.4465008411643794e-06}, {"id": 334, "seek": 291528, "start": 2915.28, "end": 2927.28, "text": " But the other 50 percent is now going to be calculated on this. Right. So this is times one point five and then again times one point five.", "tokens": [583, 264, 661, 2625, 3043, 307, 586, 516, 281, 312, 15598, 322, 341, 13, 1779, 13, 407, 341, 307, 1413, 472, 935, 1732, 293, 550, 797, 1413, 472, 935, 1732, 13], "temperature": 0.0, "avg_logprob": -0.19593016760689871, "compression_ratio": 1.3238095238095238, "no_speech_prob": 1.2679220162681304e-06}, {"id": 335, "seek": 292728, "start": 2927.28, "end": 2945.28, "text": " Two twenty five. Which is. One hundred. Times. One plus point five. It's great.", "tokens": [4453, 7699, 1732, 13, 3013, 307, 13, 1485, 3262, 13, 11366, 13, 1485, 1804, 935, 1732, 13, 467, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.19471571875400231, "compression_ratio": 1.5031055900621118, "no_speech_prob": 2.2252577309700428e-06}, {"id": 336, "seek": 292728, "start": 2945.28, "end": 2954.28, "text": " If they're really generous they could pay it quarterly. And if they paid it quarterly then the amount of money you're going to make is one hundred times one plus.", "tokens": [759, 436, 434, 534, 14537, 436, 727, 1689, 309, 38633, 13, 400, 498, 436, 4835, 309, 38633, 550, 264, 2372, 295, 1460, 291, 434, 516, 281, 652, 307, 472, 3262, 1413, 472, 1804, 13], "temperature": 0.0, "avg_logprob": -0.19471571875400231, "compression_ratio": 1.5031055900621118, "no_speech_prob": 2.2252577309700428e-06}, {"id": 337, "seek": 295428, "start": 2954.28, "end": 2963.28, "text": " Actually let's do this as a fraction rather than as a decimal quarter. Therefore.", "tokens": [5135, 718, 311, 360, 341, 382, 257, 14135, 2831, 813, 382, 257, 26601, 6555, 13, 7504, 13], "temperature": 0.0, "avg_logprob": -0.18176049277895973, "compression_ratio": 1.2857142857142858, "no_speech_prob": 1.0783185643958859e-05}, {"id": 338, "seek": 295428, "start": 2963.28, "end": 2979.28, "text": " Or they could pay it. Daily. One hundred times one plus one over three six five.", "tokens": [1610, 436, 727, 1689, 309, 13, 19685, 13, 1485, 3262, 1413, 472, 1804, 472, 670, 1045, 2309, 1732, 13], "temperature": 0.0, "avg_logprob": -0.18176049277895973, "compression_ratio": 1.2857142857142858, "no_speech_prob": 1.0783185643958859e-05}, {"id": 339, "seek": 297928, "start": 2979.28, "end": 2992.28, "text": " To the three six five. OK. So we should be able to calculate these things in APL. Right.", "tokens": [1407, 264, 1045, 2309, 1732, 13, 2264, 13, 407, 321, 820, 312, 1075, 281, 8873, 613, 721, 294, 5372, 43, 13, 1779, 13], "temperature": 0.0, "avg_logprob": -0.15589326467269507, "compression_ratio": 1.1481481481481481, "no_speech_prob": 3.089416395596345e-06}, {"id": 340, "seek": 297928, "start": 2992.28, "end": 2998.28, "text": " No promises. We could give it a go.", "tokens": [883, 16403, 13, 492, 727, 976, 309, 257, 352, 13], "temperature": 0.0, "avg_logprob": -0.15589326467269507, "compression_ratio": 1.1481481481481481, "no_speech_prob": 3.089416395596345e-06}, {"id": 341, "seek": 299828, "start": 2998.28, "end": 3010.28, "text": " So let's do this one. One hundred plus one hundred times one plus a quarter to the four. One hundred times.", "tokens": [407, 718, 311, 360, 341, 472, 13, 1485, 3262, 1804, 472, 3262, 1413, 472, 1804, 257, 6555, 281, 264, 1451, 13, 1485, 3262, 1413, 13], "temperature": 0.0, "avg_logprob": -0.15438238212040492, "compression_ratio": 1.7589285714285714, "no_speech_prob": 1.2218741176184267e-05}, {"id": 342, "seek": 299828, "start": 3010.28, "end": 3018.28, "text": " One plus a quarter. Now a quarter is.", "tokens": [1485, 1804, 257, 6555, 13, 823, 257, 6555, 307, 13], "temperature": 0.0, "avg_logprob": -0.15438238212040492, "compression_ratio": 1.7589285714285714, "no_speech_prob": 1.2218741176184267e-05}, {"id": 343, "seek": 299828, "start": 3018.28, "end": 3024.28, "text": " That it's a reciprocal of four. One plus a quarter.", "tokens": [663, 309, 311, 257, 46948, 295, 1451, 13, 1485, 1804, 257, 6555, 13], "temperature": 0.0, "avg_logprob": -0.15438238212040492, "compression_ratio": 1.7589285714285714, "no_speech_prob": 1.2218741176184267e-05}, {"id": 344, "seek": 302428, "start": 3024.28, "end": 3031.28, "text": " OK. To the power of is this.", "tokens": [2264, 13, 1407, 264, 1347, 295, 307, 341, 13], "temperature": 0.0, "avg_logprob": -0.12219735671733988, "compression_ratio": 1.4042553191489362, "no_speech_prob": 8.39773565530777e-06}, {"id": 345, "seek": 302428, "start": 3031.28, "end": 3041.28, "text": " And so this is going to happen first because we go right to left.", "tokens": [400, 370, 341, 307, 516, 281, 1051, 700, 570, 321, 352, 558, 281, 1411, 13], "temperature": 0.0, "avg_logprob": -0.12219735671733988, "compression_ratio": 1.4042553191489362, "no_speech_prob": 8.39773565530777e-06}, {"id": 346, "seek": 302428, "start": 3041.28, "end": 3047.28, "text": " I should say you don't have a hundred dollars in the bank. Let's say you've got one dollar in the bank.", "tokens": [286, 820, 584, 291, 500, 380, 362, 257, 3262, 3808, 294, 264, 3765, 13, 961, 311, 584, 291, 600, 658, 472, 7241, 294, 264, 3765, 13], "temperature": 0.0, "avg_logprob": -0.12219735671733988, "compression_ratio": 1.4042553191489362, "no_speech_prob": 8.39773565530777e-06}, {"id": 347, "seek": 304728, "start": 3047.28, "end": 3054.28, "text": " OK. So in that case your one dollar would become two dollars if it was paid just at the end of the year.", "tokens": [2264, 13, 407, 294, 300, 1389, 428, 472, 7241, 576, 1813, 732, 3808, 498, 309, 390, 4835, 445, 412, 264, 917, 295, 264, 1064, 13], "temperature": 0.0, "avg_logprob": -0.1696931939376028, "compression_ratio": 1.8012048192771084, "no_speech_prob": 3.555964440238313e-06}, {"id": 348, "seek": 304728, "start": 3054.28, "end": 3062.28, "text": " Or it become two dollars and twenty five cents if it was played every six months or it become two dollars and forty four cents if it was paid every quarter.", "tokens": [1610, 309, 1813, 732, 3808, 293, 7699, 1732, 14941, 498, 309, 390, 3737, 633, 2309, 2493, 420, 309, 1813, 732, 3808, 293, 15815, 1451, 14941, 498, 309, 390, 4835, 633, 6555, 13], "temperature": 0.0, "avg_logprob": -0.1696931939376028, "compression_ratio": 1.8012048192771084, "no_speech_prob": 3.555964440238313e-06}, {"id": 349, "seek": 304728, "start": 3062.28, "end": 3071.28, "text": " Or we could do. Three six five. Five.", "tokens": [1610, 321, 727, 360, 13, 6244, 2309, 1732, 13, 9436, 13], "temperature": 0.0, "avg_logprob": -0.1696931939376028, "compression_ratio": 1.8012048192771084, "no_speech_prob": 3.555964440238313e-06}, {"id": 350, "seek": 307128, "start": 3071.28, "end": 3080.28, "text": " It was paid every day. It would be this number and you can see the more often it's paid.", "tokens": [467, 390, 4835, 633, 786, 13, 467, 576, 312, 341, 1230, 293, 291, 393, 536, 264, 544, 2049, 309, 311, 4835, 13], "temperature": 0.0, "avg_logprob": -0.14530771009383664, "compression_ratio": 1.4805194805194806, "no_speech_prob": 4.181152633009333e-07}, {"id": 351, "seek": 307128, "start": 3080.28, "end": 3084.28, "text": " The more money you're going to get. Right.", "tokens": [440, 544, 1460, 291, 434, 516, 281, 483, 13, 1779, 13], "temperature": 0.0, "avg_logprob": -0.14530771009383664, "compression_ratio": 1.4805194805194806, "no_speech_prob": 4.181152633009333e-07}, {"id": 352, "seek": 307128, "start": 3084.28, "end": 3091.28, "text": " But like this you know initially. It went up pretty quickly but now it's going up pretty slowly.", "tokens": [583, 411, 341, 291, 458, 9105, 13, 467, 1437, 493, 1238, 2661, 457, 586, 309, 311, 516, 493, 1238, 5692, 13], "temperature": 0.0, "avg_logprob": -0.14530771009383664, "compression_ratio": 1.4805194805194806, "no_speech_prob": 4.181152633009333e-07}, {"id": 353, "seek": 309128, "start": 3091.28, "end": 3102.28, "text": " So let's say it was paid hourly. I suppose it's paid a hundred times per day.", "tokens": [407, 718, 311, 584, 309, 390, 4835, 48364, 13, 286, 7297, 309, 311, 4835, 257, 3262, 1413, 680, 786, 13], "temperature": 0.0, "avg_logprob": -0.12778679813657487, "compression_ratio": 1.4609929078014185, "no_speech_prob": 1.6027784113248345e-06}, {"id": 354, "seek": 309128, "start": 3102.28, "end": 3107.28, "text": " And it's not really making much difference at this point.", "tokens": [400, 309, 311, 406, 534, 1455, 709, 2649, 412, 341, 935, 13], "temperature": 0.0, "avg_logprob": -0.12778679813657487, "compression_ratio": 1.4609929078014185, "no_speech_prob": 1.6027784113248345e-06}, {"id": 355, "seek": 309128, "start": 3107.28, "end": 3120.28, "text": " A. Is the limit of this as this number gets really really really high.", "tokens": [316, 13, 1119, 264, 4948, 295, 341, 382, 341, 1230, 2170, 534, 534, 534, 1090, 13], "temperature": 0.0, "avg_logprob": -0.12778679813657487, "compression_ratio": 1.4609929078014185, "no_speech_prob": 1.6027784113248345e-06}, {"id": 356, "seek": 312028, "start": 3120.28, "end": 3130.28, "text": " So we could write that in math.", "tokens": [407, 321, 727, 2464, 300, 294, 5221, 13], "temperature": 0.0, "avg_logprob": -0.24532127380371094, "compression_ratio": 1.0909090909090908, "no_speech_prob": 4.092838935321197e-06}, {"id": 357, "seek": 312028, "start": 3130.28, "end": 3138.28, "text": " And we can say a. Is the limit.", "tokens": [400, 321, 393, 584, 257, 13, 1119, 264, 4948, 13], "temperature": 0.0, "avg_logprob": -0.24532127380371094, "compression_ratio": 1.0909090909090908, "no_speech_prob": 4.092838935321197e-06}, {"id": 358, "seek": 312028, "start": 3138.28, "end": 3146.28, "text": " As. Whatever X goes to infinity.", "tokens": [1018, 13, 8541, 1783, 1709, 281, 13202, 13], "temperature": 0.0, "avg_logprob": -0.24532127380371094, "compression_ratio": 1.0909090909090908, "no_speech_prob": 4.092838935321197e-06}, {"id": 359, "seek": 314628, "start": 3146.28, "end": 3151.28, "text": " So as X gets really big that never hits infinity of.", "tokens": [407, 382, 1783, 2170, 534, 955, 300, 1128, 8664, 13202, 295, 13], "temperature": 0.0, "avg_logprob": -0.20154436997004918, "compression_ratio": 1.2671755725190839, "no_speech_prob": 7.183045454439707e-06}, {"id": 360, "seek": 314628, "start": 3151.28, "end": 3155.28, "text": " And the one times we can just ignore.", "tokens": [400, 264, 472, 1413, 321, 393, 445, 11200, 13], "temperature": 0.0, "avg_logprob": -0.20154436997004918, "compression_ratio": 1.2671755725190839, "no_speech_prob": 7.183045454439707e-06}, {"id": 361, "seek": 314628, "start": 3155.28, "end": 3161.28, "text": " Right. So it's a limit of one plus.", "tokens": [1779, 13, 407, 309, 311, 257, 4948, 295, 472, 1804, 13], "temperature": 0.0, "avg_logprob": -0.20154436997004918, "compression_ratio": 1.2671755725190839, "no_speech_prob": 7.183045454439707e-06}, {"id": 362, "seek": 314628, "start": 3161.28, "end": 3167.28, "text": " One divided by X.", "tokens": [1485, 6666, 538, 1783, 13], "temperature": 0.0, "avg_logprob": -0.20154436997004918, "compression_ratio": 1.2671755725190839, "no_speech_prob": 7.183045454439707e-06}, {"id": 363, "seek": 314628, "start": 3167.28, "end": 3173.28, "text": " Or to the power of X.", "tokens": [1610, 281, 264, 1347, 295, 1783, 13], "temperature": 0.0, "avg_logprob": -0.20154436997004918, "compression_ratio": 1.2671755725190839, "no_speech_prob": 7.183045454439707e-06}, {"id": 364, "seek": 317328, "start": 3173.28, "end": 3178.28, "text": " That makes sense. That's a.", "tokens": [663, 1669, 2020, 13, 663, 311, 257, 13], "temperature": 0.0, "avg_logprob": -0.2538614273071289, "compression_ratio": 1.4814814814814814, "no_speech_prob": 1.5206223906716332e-05}, {"id": 365, "seek": 317328, "start": 3178.28, "end": 3183.28, "text": " How's that Redick. I just remembered the definition of limit.", "tokens": [1012, 311, 300, 4477, 618, 13, 286, 445, 13745, 264, 7123, 295, 4948, 13], "temperature": 0.0, "avg_logprob": -0.2538614273071289, "compression_ratio": 1.4814814814814814, "no_speech_prob": 1.5206223906716332e-05}, {"id": 366, "seek": 317328, "start": 3183.28, "end": 3191.28, "text": " Wow. That's something I have not seen in ages. Yeah. I got to say the kids loved seeing limit.", "tokens": [3153, 13, 663, 311, 746, 286, 362, 406, 1612, 294, 12357, 13, 865, 13, 286, 658, 281, 584, 264, 2301, 4333, 2577, 4948, 13], "temperature": 0.0, "avg_logprob": -0.2538614273071289, "compression_ratio": 1.4814814814814814, "no_speech_prob": 1.5206223906716332e-05}, {"id": 367, "seek": 317328, "start": 3191.28, "end": 3196.28, "text": " You know and of course they're immediately like well just get rid of it and put infinity there.", "tokens": [509, 458, 293, 295, 1164, 436, 434, 4258, 411, 731, 445, 483, 3973, 295, 309, 293, 829, 13202, 456, 13], "temperature": 0.0, "avg_logprob": -0.2538614273071289, "compression_ratio": 1.4814814814814814, "no_speech_prob": 1.5206223906716332e-05}, {"id": 368, "seek": 319628, "start": 3196.28, "end": 3203.28, "text": " Okay. Let's put infinity there. One plus one divided by infinity. Okay kids what's one divided by infinity.", "tokens": [1033, 13, 961, 311, 829, 13202, 456, 13, 1485, 1804, 472, 6666, 538, 13202, 13, 1033, 2301, 437, 311, 472, 6666, 538, 13202, 13], "temperature": 0.0, "avg_logprob": -0.20058289394583753, "compression_ratio": 1.8448275862068966, "no_speech_prob": 3.6118422030995134e-06}, {"id": 369, "seek": 319628, "start": 3203.28, "end": 3208.28, "text": " Zero. Okay. What's one plus zero. One. What's one to the power of infinity.", "tokens": [17182, 13, 1033, 13, 708, 311, 472, 1804, 4018, 13, 1485, 13, 708, 311, 472, 281, 264, 1347, 295, 13202, 13], "temperature": 0.0, "avg_logprob": -0.20058289394583753, "compression_ratio": 1.8448275862068966, "no_speech_prob": 3.6118422030995134e-06}, {"id": 370, "seek": 319628, "start": 3208.28, "end": 3212.28, "text": " One. Okay. So does equal one. No.", "tokens": [1485, 13, 1033, 13, 407, 775, 2681, 472, 13, 883, 13], "temperature": 0.0, "avg_logprob": -0.20058289394583753, "compression_ratio": 1.8448275862068966, "no_speech_prob": 3.6118422030995134e-06}, {"id": 371, "seek": 319628, "start": 3212.28, "end": 3217.28, "text": " So okay. Well what do we do. They're like well what about infinity minus one.", "tokens": [407, 1392, 13, 1042, 437, 360, 321, 360, 13, 814, 434, 411, 731, 437, 466, 13202, 3175, 472, 13], "temperature": 0.0, "avg_logprob": -0.20058289394583753, "compression_ratio": 1.8448275862068966, "no_speech_prob": 3.6118422030995134e-06}, {"id": 372, "seek": 319628, "start": 3217.28, "end": 3222.28, "text": " Oh that's still infinity.", "tokens": [876, 300, 311, 920, 13202, 13], "temperature": 0.0, "avg_logprob": -0.20058289394583753, "compression_ratio": 1.8448275862068966, "no_speech_prob": 3.6118422030995134e-06}, {"id": 373, "seek": 322228, "start": 3222.28, "end": 3230.28, "text": " So this is our first introduction to limits and they they were just like they were partly like wow that's so cool and they were partly like.", "tokens": [407, 341, 307, 527, 700, 9339, 281, 10406, 293, 436, 436, 645, 445, 411, 436, 645, 17031, 411, 6076, 300, 311, 370, 1627, 293, 436, 645, 17031, 411, 13], "temperature": 0.0, "avg_logprob": -0.13951784021714153, "compression_ratio": 1.6325581395348838, "no_speech_prob": 6.643233973591123e-06}, {"id": 374, "seek": 322228, "start": 3230.28, "end": 3236.28, "text": " Never show me anything like this again. This is wrong. Yeah. It shouldn't happen.", "tokens": [7344, 855, 385, 1340, 411, 341, 797, 13, 639, 307, 2085, 13, 865, 13, 467, 4659, 380, 1051, 13], "temperature": 0.0, "avg_logprob": -0.13951784021714153, "compression_ratio": 1.6325581395348838, "no_speech_prob": 6.643233973591123e-06}, {"id": 375, "seek": 322228, "start": 3236.28, "end": 3239.28, "text": " Get it out of my life.", "tokens": [3240, 309, 484, 295, 452, 993, 13], "temperature": 0.0, "avg_logprob": -0.13951784021714153, "compression_ratio": 1.6325581395348838, "no_speech_prob": 6.643233973591123e-06}, {"id": 376, "seek": 322228, "start": 3239.28, "end": 3246.28, "text": " But this is beautiful because like they're trying to make it concrete and somehow relates to these ideas.", "tokens": [583, 341, 307, 2238, 570, 411, 436, 434, 1382, 281, 652, 309, 9859, 293, 6063, 16155, 281, 613, 3487, 13], "temperature": 0.0, "avg_logprob": -0.13951784021714153, "compression_ratio": 1.6325581395348838, "no_speech_prob": 6.643233973591123e-06}, {"id": 377, "seek": 324628, "start": 3246.28, "end": 3257.28, "text": " That's amazing. And they will understand it at a much deeper level than people you know just you know going through this reading theory in a classroom.", "tokens": [663, 311, 2243, 13, 400, 436, 486, 1223, 309, 412, 257, 709, 7731, 1496, 813, 561, 291, 458, 445, 291, 458, 516, 807, 341, 3760, 5261, 294, 257, 7419, 13], "temperature": 0.0, "avg_logprob": -0.20149028301239014, "compression_ratio": 1.78125, "no_speech_prob": 9.515718375041615e-06}, {"id": 378, "seek": 324628, "start": 3257.28, "end": 3261.28, "text": " And yeah there's something deeply disturbing about limit.", "tokens": [400, 1338, 456, 311, 746, 8760, 21903, 466, 4948, 13], "temperature": 0.0, "avg_logprob": -0.20149028301239014, "compression_ratio": 1.78125, "no_speech_prob": 9.515718375041615e-06}, {"id": 379, "seek": 324628, "start": 3261.28, "end": 3266.28, "text": " And I guess like like the takeaway is that this is just something that people agree to. Right.", "tokens": [400, 286, 2041, 411, 411, 264, 30681, 307, 300, 341, 307, 445, 746, 300, 561, 3986, 281, 13, 1779, 13], "temperature": 0.0, "avg_logprob": -0.20149028301239014, "compression_ratio": 1.78125, "no_speech_prob": 9.515718375041615e-06}, {"id": 380, "seek": 324628, "start": 3266.28, "end": 3272.28, "text": " This is what I mean. It's a it's a it's I think it's more than just something people agree to.", "tokens": [639, 307, 437, 286, 914, 13, 467, 311, 257, 309, 311, 257, 309, 311, 286, 519, 309, 311, 544, 813, 445, 746, 561, 3986, 281, 13], "temperature": 0.0, "avg_logprob": -0.20149028301239014, "compression_ratio": 1.78125, "no_speech_prob": 9.515718375041615e-06}, {"id": 381, "seek": 327228, "start": 3272.28, "end": 3283.28, "text": " Like it's it's it's some kind of reality. You know like it's it's a true it's a true thing that exists independently about discovery of it.", "tokens": [1743, 309, 311, 309, 311, 309, 311, 512, 733, 295, 4103, 13, 509, 458, 411, 309, 311, 309, 311, 257, 2074, 309, 311, 257, 2074, 551, 300, 8198, 21761, 466, 12114, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.10714806595893756, "compression_ratio": 1.691860465116279, "no_speech_prob": 1.0952676348097157e-05}, {"id": 382, "seek": 327228, "start": 3283.28, "end": 3294.28, "text": " Right. But how do you make the jump from something getting closer to something being that value that gets closer to.", "tokens": [1779, 13, 583, 577, 360, 291, 652, 264, 3012, 490, 746, 1242, 4966, 281, 746, 885, 300, 2158, 300, 2170, 4966, 281, 13], "temperature": 0.0, "avg_logprob": -0.10714806595893756, "compression_ratio": 1.691860465116279, "no_speech_prob": 1.0952676348097157e-05}, {"id": 383, "seek": 327228, "start": 3294.28, "end": 3300.28, "text": " This is a definition. This is like", "tokens": [639, 307, 257, 7123, 13, 639, 307, 411], "temperature": 0.0, "avg_logprob": -0.10714806595893756, "compression_ratio": 1.691860465116279, "no_speech_prob": 1.0952676348097157e-05}, {"id": 384, "seek": 330028, "start": 3300.28, "end": 3305.28, "text": " Yeah I don't know. Anyway I mean I think it's really cool. Yeah.", "tokens": [865, 286, 500, 380, 458, 13, 5684, 286, 914, 286, 519, 309, 311, 534, 1627, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.23899922832365958, "compression_ratio": 1.4594594594594594, "no_speech_prob": 4.259658089722507e-05}, {"id": 385, "seek": 330028, "start": 3305.28, "end": 3314.28, "text": " All right. So that is that is more dramatic.", "tokens": [1057, 558, 13, 407, 300, 307, 300, 307, 544, 12023, 13], "temperature": 0.0, "avg_logprob": -0.23899922832365958, "compression_ratio": 1.4594594594594594, "no_speech_prob": 4.259658089722507e-05}, {"id": 386, "seek": 330028, "start": 3314.28, "end": 3324.28, "text": " Monadic star and he is named after Euler. I think Euler is more specifically Euler named it after himself.", "tokens": [4713, 43341, 3543, 293, 415, 307, 4926, 934, 462, 26318, 13, 286, 519, 462, 26318, 307, 544, 4682, 462, 26318, 4926, 309, 934, 3647, 13], "temperature": 0.0, "avg_logprob": -0.23899922832365958, "compression_ratio": 1.4594594594594594, "no_speech_prob": 4.259658089722507e-05}, {"id": 387, "seek": 332428, "start": 3324.28, "end": 3331.28, "text": " The famous blind Swiss mathematician. But Euler did not discover a I don't know who did.", "tokens": [440, 4618, 6865, 21965, 48281, 13, 583, 462, 26318, 630, 406, 4411, 257, 286, 500, 380, 458, 567, 630, 13], "temperature": 0.0, "avg_logprob": -0.15386822110130674, "compression_ratio": 1.4514285714285715, "no_speech_prob": 3.704203845700249e-05}, {"id": 388, "seek": 332428, "start": 3331.28, "end": 3343.28, "text": " But it wasn't it wasn't him even though he got to name it somehow.", "tokens": [583, 309, 2067, 380, 309, 2067, 380, 796, 754, 1673, 415, 658, 281, 1315, 309, 6063, 13], "temperature": 0.0, "avg_logprob": -0.15386822110130674, "compression_ratio": 1.4514285714285715, "no_speech_prob": 3.704203845700249e-05}, {"id": 389, "seek": 332428, "start": 3343.28, "end": 3349.28, "text": " For those of you that remember calculus you know you can take the derivative of various functions.", "tokens": [1171, 729, 295, 291, 300, 1604, 33400, 291, 458, 291, 393, 747, 264, 13760, 295, 3683, 6828, 13], "temperature": 0.0, "avg_logprob": -0.15386822110130674, "compression_ratio": 1.4514285714285715, "no_speech_prob": 3.704203845700249e-05}, {"id": 390, "seek": 334928, "start": 3349.28, "end": 3355.28, "text": " For example we saw in the fast AI class that the derivative of x squared is 2x.", "tokens": [1171, 1365, 321, 1866, 294, 264, 2370, 7318, 1508, 300, 264, 13760, 295, 2031, 8889, 307, 568, 87, 13], "temperature": 0.0, "avg_logprob": -0.16267167276410915, "compression_ratio": 1.5695364238410596, "no_speech_prob": 5.093471827422036e-06}, {"id": 391, "seek": 334928, "start": 3355.28, "end": 3363.28, "text": " One of the things that's interesting about E is that the derivative of e to the x is e to the x.", "tokens": [1485, 295, 264, 721, 300, 311, 1880, 466, 462, 307, 300, 264, 13760, 295, 308, 281, 264, 2031, 307, 308, 281, 264, 2031, 13], "temperature": 0.0, "avg_logprob": -0.16267167276410915, "compression_ratio": 1.5695364238410596, "no_speech_prob": 5.093471827422036e-06}, {"id": 392, "seek": 334928, "start": 3363.28, "end": 3371.28, "text": " It has a lot of crazy things going on with a comes up a lot.", "tokens": [467, 575, 257, 688, 295, 3219, 721, 516, 322, 365, 257, 1487, 493, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.16267167276410915, "compression_ratio": 1.5695364238410596, "no_speech_prob": 5.093471827422036e-06}, {"id": 393, "seek": 337128, "start": 3371.28, "end": 3384.28, "text": " Maybe the most cool beautiful formula in the world is Euler's identity which brings together", "tokens": [2704, 264, 881, 1627, 2238, 8513, 294, 264, 1002, 307, 462, 26318, 311, 6575, 597, 5607, 1214], "temperature": 0.0, "avg_logprob": -0.18503108922986017, "compression_ratio": 1.5344827586206897, "no_speech_prob": 1.9832466932712123e-05}, {"id": 394, "seek": 337128, "start": 3384.28, "end": 3390.28, "text": " a lot of the things we've seen so far and it's e to the i pi plus one equals zero.", "tokens": [257, 688, 295, 264, 721, 321, 600, 1612, 370, 1400, 293, 309, 311, 308, 281, 264, 741, 3895, 1804, 472, 6915, 4018, 13], "temperature": 0.0, "avg_logprob": -0.18503108922986017, "compression_ratio": 1.5344827586206897, "no_speech_prob": 1.9832466932712123e-05}, {"id": 395, "seek": 337128, "start": 3390.28, "end": 3398.28, "text": " I want to put it another way e to the i pi equals negative one which is like total madness.", "tokens": [286, 528, 281, 829, 309, 1071, 636, 308, 281, 264, 741, 3895, 6915, 3671, 472, 597, 307, 411, 3217, 28736, 13], "temperature": 0.0, "avg_logprob": -0.18503108922986017, "compression_ratio": 1.5344827586206897, "no_speech_prob": 1.9832466932712123e-05}, {"id": 396, "seek": 339828, "start": 3398.28, "end": 3404.28, "text": " That this thing which is about circles and this thing which is about imaginary numbers", "tokens": [663, 341, 551, 597, 307, 466, 13040, 293, 341, 551, 597, 307, 466, 26164, 3547], "temperature": 0.0, "avg_logprob": -0.1195771959092882, "compression_ratio": 1.8235294117647058, "no_speech_prob": 1.3210734323365614e-05}, {"id": 397, "seek": 339828, "start": 3404.28, "end": 3414.28, "text": " and this thing which is about compound interest somehow combined to create negative one.", "tokens": [293, 341, 551, 597, 307, 466, 14154, 1179, 6063, 9354, 281, 1884, 3671, 472, 13], "temperature": 0.0, "avg_logprob": -0.1195771959092882, "compression_ratio": 1.8235294117647058, "no_speech_prob": 1.3210734323365614e-05}, {"id": 398, "seek": 339828, "start": 3414.28, "end": 3424.28, "text": " So that's mind blowing. And so that's what that's why Monadic star is e to the power of e to the power of is a pretty important thing.", "tokens": [407, 300, 311, 1575, 15068, 13, 400, 370, 300, 311, 437, 300, 311, 983, 4713, 43341, 3543, 307, 308, 281, 264, 1347, 295, 308, 281, 264, 1347, 295, 307, 257, 1238, 1021, 551, 13], "temperature": 0.0, "avg_logprob": -0.1195771959092882, "compression_ratio": 1.8235294117647058, "no_speech_prob": 1.3210734323365614e-05}, {"id": 399, "seek": 342428, "start": 3424.28, "end": 3437.28, "text": " And so we don't need a special symbol for e right because anytime you want a you just write this.", "tokens": [400, 370, 321, 500, 380, 643, 257, 2121, 5986, 337, 308, 558, 570, 13038, 291, 528, 257, 291, 445, 2464, 341, 13], "temperature": 0.0, "avg_logprob": -0.24335196358816966, "compression_ratio": 1.1634615384615385, "no_speech_prob": 8.530224476999138e-06}, {"id": 400, "seek": 342428, "start": 3437.28, "end": 3439.28, "text": " All right. And then OK.", "tokens": [1057, 558, 13, 400, 550, 2264, 13], "temperature": 0.0, "avg_logprob": -0.24335196358816966, "compression_ratio": 1.1634615384615385, "no_speech_prob": 8.530224476999138e-06}, {"id": 401, "seek": 343928, "start": 3439.28, "end": 3459.28, "text": " Dietic star is power of so 49 to the power of a half is square root of 49. 5 to the power of 2 is 5 squared minus 4 square root is 2i.", "tokens": [29606, 299, 3543, 307, 1347, 295, 370, 16513, 281, 264, 1347, 295, 257, 1922, 307, 3732, 5593, 295, 16513, 13, 1025, 281, 264, 1347, 295, 568, 307, 1025, 8889, 3175, 1017, 3732, 5593, 307, 568, 72, 13], "temperature": 0.0, "avg_logprob": -0.19460851390187334, "compression_ratio": 1.4565217391304348, "no_speech_prob": 6.962195129744941e-06}, {"id": 402, "seek": 345928, "start": 3459.28, "end": 3477.28, "text": " Because it's equal to minus one times four. So you get the square root of minus one which is i times the square root of four which is 2 2i.", "tokens": [1436, 309, 311, 2681, 281, 3175, 472, 1413, 1451, 13, 407, 291, 483, 264, 3732, 5593, 295, 3175, 472, 597, 307, 741, 1413, 264, 3732, 5593, 295, 1451, 597, 307, 568, 568, 72, 13], "temperature": 0.0, "avg_logprob": -0.26225658491546033, "compression_ratio": 1.467741935483871, "no_speech_prob": 2.4198649839490827e-07}, {"id": 403, "seek": 345928, "start": 3477.28, "end": 3480.28, "text": " All right. Is that supposed to stop. Yeah.", "tokens": [1057, 558, 13, 1119, 300, 3442, 281, 1590, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.26225658491546033, "compression_ratio": 1.467741935483871, "no_speech_prob": 2.4198649839490827e-07}, {"id": 404, "seek": 348028, "start": 3480.28, "end": 3492.28, "text": " I think this is the first time e to the i pi has actually made sense to me because I did make the connection that pi is essentially like I think like a half like a half circle and radians or something.", "tokens": [286, 519, 341, 307, 264, 700, 565, 308, 281, 264, 741, 3895, 575, 767, 1027, 2020, 281, 385, 570, 286, 630, 652, 264, 4984, 300, 3895, 307, 4476, 411, 286, 519, 411, 257, 1922, 411, 257, 1922, 6329, 293, 2843, 2567, 420, 746, 13], "temperature": 0.0, "avg_logprob": -0.14446599810731178, "compression_ratio": 1.7203389830508475, "no_speech_prob": 2.6424145289638545e-06}, {"id": 405, "seek": 348028, "start": 3492.28, "end": 3497.28, "text": " And so I is just that other you know I guess like the y on the plane.", "tokens": [400, 370, 286, 307, 445, 300, 661, 291, 458, 286, 2041, 411, 264, 288, 322, 264, 5720, 13], "temperature": 0.0, "avg_logprob": -0.14446599810731178, "compression_ratio": 1.7203389830508475, "no_speech_prob": 2.6424145289638545e-06}, {"id": 406, "seek": 348028, "start": 3497.28, "end": 3505.28, "text": " So all you're doing is you're just curving that around to the other side to turn into a negative one add one onto that and I got zero.", "tokens": [407, 439, 291, 434, 884, 307, 291, 434, 445, 1262, 798, 300, 926, 281, 264, 661, 1252, 281, 1261, 666, 257, 3671, 472, 909, 472, 3911, 300, 293, 286, 658, 4018, 13], "temperature": 0.0, "avg_logprob": -0.14446599810731178, "compression_ratio": 1.7203389830508475, "no_speech_prob": 2.6424145289638545e-06}, {"id": 407, "seek": 350528, "start": 3505.28, "end": 3523.28, "text": " Yes exactly. And maybe when you can try to find like a really good video or something that explains that for people that have never seen that before because I think that'd be a great thing to put in the oh yeah I think there's a channel three blue one brown may have some stuff if I see anything I'll put it up.", "tokens": [1079, 2293, 13, 400, 1310, 562, 291, 393, 853, 281, 915, 411, 257, 534, 665, 960, 420, 746, 300, 13948, 300, 337, 561, 300, 362, 1128, 1612, 300, 949, 570, 286, 519, 300, 1116, 312, 257, 869, 551, 281, 829, 294, 264, 1954, 1338, 286, 519, 456, 311, 257, 2269, 1045, 3344, 472, 6292, 815, 362, 512, 1507, 498, 286, 536, 1340, 286, 603, 829, 309, 493, 13], "temperature": 0.0, "avg_logprob": -0.15875309392025597, "compression_ratio": 1.6721311475409837, "no_speech_prob": 5.954972039035056e-06}, {"id": 408, "seek": 350528, "start": 3523.28, "end": 3532.28, "text": " Yeah, ideally something that doesn't use any concepts that we haven't come across yet, you know.", "tokens": [865, 11, 22915, 746, 300, 1177, 380, 764, 604, 10392, 300, 321, 2378, 380, 808, 2108, 1939, 11, 291, 458, 13], "temperature": 0.0, "avg_logprob": -0.15875309392025597, "compression_ratio": 1.6721311475409837, "no_speech_prob": 5.954972039035056e-06}, {"id": 409, "seek": 353228, "start": 3532.28, "end": 3547.28, "text": " Yeah, I mean the key thing around complex numbers to me I think is this idea that if you multiply by negative one you flip something from one side of the.", "tokens": [865, 11, 286, 914, 264, 2141, 551, 926, 3997, 3547, 281, 385, 286, 519, 307, 341, 1558, 300, 498, 291, 12972, 538, 3671, 472, 291, 7929, 746, 490, 472, 1252, 295, 264, 13], "temperature": 0.0, "avg_logprob": -0.1802300891360721, "compression_ratio": 1.3162393162393162, "no_speech_prob": 1.952332240762189e-05}, {"id": 410, "seek": 354728, "start": 3547.28, "end": 3564.28, "text": " You flip something from one side of the number line to the other on the real plane ditto if you multiply by negative one for a complex for imaginary number it flips it to the other side of the number line.", "tokens": [509, 7929, 746, 490, 472, 1252, 295, 264, 1230, 1622, 281, 264, 661, 322, 264, 957, 5720, 274, 34924, 498, 291, 12972, 538, 3671, 472, 337, 257, 3997, 337, 26164, 1230, 309, 40249, 309, 281, 264, 661, 1252, 295, 264, 1230, 1622, 13], "temperature": 0.0, "avg_logprob": -0.15082359313964844, "compression_ratio": 1.8579234972677596, "no_speech_prob": 2.9771590561722405e-05}, {"id": 411, "seek": 354728, "start": 3564.28, "end": 3575.28, "text": " But if you multiply something by I it rotates it by 90 degrees you go from two to two I to negative two to negative two I back to two.", "tokens": [583, 498, 291, 12972, 746, 538, 286, 309, 42133, 309, 538, 4289, 5310, 291, 352, 490, 732, 281, 732, 286, 281, 3671, 732, 281, 3671, 732, 286, 646, 281, 732, 13], "temperature": 0.0, "avg_logprob": -0.15082359313964844, "compression_ratio": 1.8579234972677596, "no_speech_prob": 2.9771590561722405e-05}, {"id": 412, "seek": 357528, "start": 3575.28, "end": 3581.28, "text": " And so, yeah.", "tokens": [400, 370, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.08163552111889942, "compression_ratio": 1.6618357487922706, "no_speech_prob": 2.947798293462256e-06}, {"id": 413, "seek": 357528, "start": 3581.28, "end": 3590.28, "text": " I think a lot of these ideas end up basically being these kind of rotations around this number plane.", "tokens": [286, 519, 257, 688, 295, 613, 3487, 917, 493, 1936, 885, 613, 733, 295, 44796, 926, 341, 1230, 5720, 13], "temperature": 0.0, "avg_logprob": -0.08163552111889942, "compression_ratio": 1.6618357487922706, "no_speech_prob": 2.947798293462256e-06}, {"id": 414, "seek": 357528, "start": 3590.28, "end": 3603.28, "text": " Yeah, you see stuff like that all over in engineering. I think for me when I made the connection that if you look at the eye is kind of a shorthand for having an array of two numbers like basically just coordinates on the plane.", "tokens": [865, 11, 291, 536, 1507, 411, 300, 439, 670, 294, 7043, 13, 286, 519, 337, 385, 562, 286, 1027, 264, 4984, 300, 498, 291, 574, 412, 264, 3313, 307, 733, 295, 257, 402, 2652, 474, 337, 1419, 364, 10225, 295, 732, 3547, 411, 1936, 445, 21056, 322, 264, 5720, 13], "temperature": 0.0, "avg_logprob": -0.08163552111889942, "compression_ratio": 1.6618357487922706, "no_speech_prob": 2.947798293462256e-06}, {"id": 415, "seek": 360328, "start": 3603.28, "end": 3620.28, "text": " And that's just a way to kind of have that mapping to your number line. All of a sudden everything else starts to fall into place. And then, when you're talking about magnitudes and stuff Mike. Oh, wait, I've seen this before as like, you know, magnitudes in.", "tokens": [400, 300, 311, 445, 257, 636, 281, 733, 295, 362, 300, 18350, 281, 428, 1230, 1622, 13, 1057, 295, 257, 3990, 1203, 1646, 3719, 281, 2100, 666, 1081, 13, 400, 550, 11, 562, 291, 434, 1417, 466, 4944, 16451, 293, 1507, 6602, 13, 876, 11, 1699, 11, 286, 600, 1612, 341, 949, 382, 411, 11, 291, 458, 11, 4944, 16451, 294, 13], "temperature": 0.0, "avg_logprob": -0.1617096280588687, "compression_ratio": 1.675, "no_speech_prob": 2.3550255718873814e-05}, {"id": 416, "seek": 360328, "start": 3620.28, "end": 3626.28, "text": " I mean, when you're, is it like the L2 norm or something like that it's like even if we're just having like the magnitude of like, absolutely.", "tokens": [286, 914, 11, 562, 291, 434, 11, 307, 309, 411, 264, 441, 17, 2026, 420, 746, 411, 300, 309, 311, 411, 754, 498, 321, 434, 445, 1419, 411, 264, 15668, 295, 411, 11, 3122, 13], "temperature": 0.0, "avg_logprob": -0.1617096280588687, "compression_ratio": 1.675, "no_speech_prob": 2.3550255718873814e-05}, {"id": 417, "seek": 362628, "start": 3626.28, "end": 3635.28, "text": " I think there's the exact same thing. It's the latest. Well, I seem to put this in the chat. What's this about was seen. Can you tell us.", "tokens": [286, 519, 456, 311, 264, 1900, 912, 551, 13, 467, 311, 264, 6792, 13, 1042, 11, 286, 1643, 281, 829, 341, 294, 264, 5081, 13, 708, 311, 341, 466, 390, 1612, 13, 1664, 291, 980, 505, 13], "temperature": 0.0, "avg_logprob": -0.2750683520213667, "compression_ratio": 1.546875, "no_speech_prob": 6.9603042902599555e-06}, {"id": 418, "seek": 362628, "start": 3635.28, "end": 3646.28, "text": " Oh, so it looks like the Jupiter kernel has a way of ending. I know what to call it like function composition. So if I type this into Jupiter.", "tokens": [876, 11, 370, 309, 1542, 411, 264, 24567, 28256, 575, 257, 636, 295, 8121, 13, 286, 458, 437, 281, 818, 309, 411, 2445, 12686, 13, 407, 498, 286, 2010, 341, 666, 24567, 13], "temperature": 0.0, "avg_logprob": -0.2750683520213667, "compression_ratio": 1.546875, "no_speech_prob": 6.9603042902599555e-06}, {"id": 419, "seek": 362628, "start": 3646.28, "end": 3649.28, "text": " Yeah, like that.", "tokens": [865, 11, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.2750683520213667, "compression_ratio": 1.546875, "no_speech_prob": 6.9603042902599555e-06}, {"id": 420, "seek": 364928, "start": 3649.28, "end": 3656.28, "text": " And then I'm running this all.", "tokens": [400, 550, 286, 478, 2614, 341, 439, 13], "temperature": 0.0, "avg_logprob": -0.3993330342429025, "compression_ratio": 1.2887323943661972, "no_speech_prob": 3.668565796033363e-06}, {"id": 421, "seek": 364928, "start": 3656.28, "end": 3660.28, "text": " Do you mean the, the preface execute just that.", "tokens": [1144, 291, 914, 264, 11, 264, 659, 2868, 14483, 445, 300, 13], "temperature": 0.0, "avg_logprob": -0.3993330342429025, "compression_ratio": 1.2887323943661972, "no_speech_prob": 3.668565796033363e-06}, {"id": 422, "seek": 364928, "start": 3660.28, "end": 3664.28, "text": " Okay, it gives us the expression tree. That's beautiful.", "tokens": [1033, 11, 309, 2709, 505, 264, 6114, 4230, 13, 663, 311, 2238, 13], "temperature": 0.0, "avg_logprob": -0.3993330342429025, "compression_ratio": 1.2887323943661972, "no_speech_prob": 3.668565796033363e-06}, {"id": 423, "seek": 364928, "start": 3664.28, "end": 3665.28, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.3993330342429025, "compression_ratio": 1.2887323943661972, "no_speech_prob": 3.668565796033363e-06}, {"id": 424, "seek": 364928, "start": 3665.28, "end": 3671.28, "text": " We will come back to learning about that.", "tokens": [492, 486, 808, 646, 281, 2539, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.3993330342429025, "compression_ratio": 1.2887323943661972, "no_speech_prob": 3.668565796033363e-06}, {"id": 425, "seek": 367128, "start": 3671.28, "end": 3689.28, "text": " Later. But yeah, you can basically put a bunch of functions in a row and does interesting things. If you get rid of the parentheses.", "tokens": [11965, 13, 583, 1338, 11, 291, 393, 1936, 829, 257, 3840, 295, 6828, 294, 257, 5386, 293, 775, 1880, 721, 13, 759, 291, 483, 3973, 295, 264, 34153, 13], "temperature": 0.0, "avg_logprob": -0.23867442156817462, "compression_ratio": 1.5595238095238095, "no_speech_prob": 1.2408088878146373e-05}, {"id": 426, "seek": 367128, "start": 3689.28, "end": 3691.28, "text": " They fever.", "tokens": [814, 18277, 13], "temperature": 0.0, "avg_logprob": -0.23867442156817462, "compression_ratio": 1.5595238095238095, "no_speech_prob": 1.2408088878146373e-05}, {"id": 427, "seek": 367128, "start": 3691.28, "end": 3693.28, "text": " All right. Thanks, gang.", "tokens": [1057, 558, 13, 2561, 11, 10145, 13], "temperature": 0.0, "avg_logprob": -0.23867442156817462, "compression_ratio": 1.5595238095238095, "no_speech_prob": 1.2408088878146373e-05}, {"id": 428, "seek": 367128, "start": 3693.28, "end": 3696.28, "text": " Enjoy the rest of your day.", "tokens": [15411, 264, 1472, 295, 428, 786, 13], "temperature": 0.0, "avg_logprob": -0.23867442156817462, "compression_ratio": 1.5595238095238095, "no_speech_prob": 1.2408088878146373e-05}, {"id": 429, "seek": 367128, "start": 3696.28, "end": 3700.28, "text": " Thank you very much. Thank you, everybody. Thank you. Thank you.", "tokens": [1044, 291, 588, 709, 13, 1044, 291, 11, 2201, 13, 1044, 291, 13, 1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.23867442156817462, "compression_ratio": 1.5595238095238095, "no_speech_prob": 1.2408088878146373e-05}, {"id": 430, "seek": 370028, "start": 3700.28, "end": 3702.28, "text": " Bye.", "tokens": [50364, 4621, 13, 50464], "temperature": 0.0, "avg_logprob": -0.3278618335723877, "compression_ratio": 0.3333333333333333, "no_speech_prob": 0.00034882864565588534}], "language": "en"}